{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061",
    "id": 2115066966,
    "node_id": "PR_kwDOABII585-EVxW",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31061",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31061.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31061.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fa6d9a29162fb508385201c926ec745d071086fc",
    "number": 31061,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "refactor: Check translatable format strings at compile-time",
    "user": {
      "login": "maflcko",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maflcko",
      "html_url": "https://github.com/maflcko",
      "followers_url": "https://api.github.com/users/maflcko/followers",
      "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
      "organizations_url": "https://api.github.com/users/maflcko/orgs",
      "repos_url": "https://api.github.com/users/maflcko/repos",
      "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/maflcko/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "All translatable format strings are fixed. This change surfaces errors in them at compile-time.\r\n\r\nThe implementation achieves this by allowing to delay the translation (or `std::string` construction) that previously happened in `_()` by returning a new type from this function. The new type can be converted to `bilingual_str` where needed.\r\n\r\nThis can be tested by adding a format string error in an original string literal and observing a new compile-time failure.\r\n\r\nFixes https://github.com/bitcoin/bitcoin/issues/30530",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2024-10-09T11:35:14Z",
    "updated_at": "2025-01-09T16:00:15Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "625b5b6dda6d6c8d2b1f57b55b576b222cd597f1",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "maflcko:2410-trans",
      "ref": "2410-trans",
      "sha": "fa6d9a29162fb508385201c926ec745d071086fc",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "bitcoin-core",
        "full_name": "maflcko/bitcoin-core",
        "owner": {
          "login": "maflcko",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/maflcko",
          "html_url": "https://github.com/maflcko",
          "followers_url": "https://api.github.com/users/maflcko/followers",
          "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
          "organizations_url": "https://api.github.com/users/maflcko/orgs",
          "repos_url": "https://api.github.com/users/maflcko/repos",
          "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/maflcko/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/maflcko/bitcoin-core",
        "fork": true,
        "url": "https://api.github.com/repos/maflcko/bitcoin-core",
        "archive_url": "https://api.github.com/repos/maflcko/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/maflcko/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/maflcko/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/maflcko/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/maflcko/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/maflcko/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/maflcko/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/maflcko/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/maflcko/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/maflcko/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/maflcko/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/maflcko/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/maflcko/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/maflcko/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/maflcko/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/maflcko/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/maflcko/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/maflcko/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/maflcko/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/maflcko/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/maflcko/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:maflcko/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/maflcko/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/maflcko/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/maflcko/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/maflcko/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/maflcko/bitcoin-core/hooks",
        "svn_url": "https://github.com/maflcko/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 12,
        "stargazers_count": 27,
        "watchers_count": 27,
        "size": 242734,
        "default_branch": "master",
        "open_issues_count": 19,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-08T14:59:01Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2024-12-10T11:58:42Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "b042c4f0538c6f9cdf8efbcef552796851e38a85",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36508,
        "stargazers_count": 81272,
        "watchers_count": 81272,
        "size": 273986,
        "default_branch": "master",
        "open_issues_count": 693,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-08T18:01:37Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-01-09T15:39:22Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 111,
    "deletions": 458,
    "changed_files": 15,
    "commits": 4,
    "review_comments": 79,
    "comments": 20
  },
  "events": [
    {
      "event": "commented",
      "id": 2402071055,
      "node_id": "IC_kwDOABII586PLLIP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2402071055",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T11:35:17Z",
      "updated_at": "2024-12-17T16:31:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31061.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [hodlinator](https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2506315529), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2509433299) |\n| Concept ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2357070300) |\n| Stale ACK | [l0rinc](https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2449445449) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31375](https://github.com/bitcoin/bitcoin/pull/31375) (multiprocess: Add bitcoin wrapper executable by ryanofsky)\n* [#31296](https://github.com/bitcoin/bitcoin/pull/31296) (wallet: Translate [default wallet] string in progress messages by ryanofsky)\n* [#30343](https://github.com/bitcoin/bitcoin/pull/30343) (wallet, logging: Replace WalletLogPrintf() with LogInfo() by ryanofsky)\n* [#30221](https://github.com/bitcoin/bitcoin/pull/30221) (wallet: Ensure best block matches wallet scan state by achow101)\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n* [#26022](https://github.com/bitcoin/bitcoin/pull/26022) (Add util::ResultPtr class by ryanofsky)\n* [#25722](https://github.com/bitcoin/bitcoin/pull/25722) (refactor: Use util::Result class for wallet loading by ryanofsky)\n* [#25665](https://github.com/bitcoin/bitcoin/pull/25665) (refactor: Add util::Result failure values, multiple error and warning messages by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2402071055",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "renamed",
      "id": 14571347679,
      "node_id": "RTE_lADOABII586ZhW7DzwAAAANkhR7f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14571347679",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T11:35:20Z",
      "rename": {
        "from": " refactor: Check original (translatable) format string at compile-time ",
        "to": "refactor: Check original (translatable) format string at compile-time"
      }
    },
    {
      "event": "labeled",
      "id": 14571348001,
      "node_id": "LE_lADOABII586ZhW7DzwAAAANkhSAh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14571348001",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T11:35:21Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "renamed",
      "id": 14571450433,
      "node_id": "RTE_lADOABII586ZhW7DzwAAAANkhrBB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14571450433",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T11:41:52Z",
      "rename": {
        "from": "refactor: Check original (translatable) format string at compile-time",
        "to": "refactor: Check translatable format strings at compile-time"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14571924735,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAANkjez_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14571924735",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fac722986e317861d131f95f6e8cfa8446bf8fba",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fac722986e317861d131f95f6e8cfa8446bf8fba",
      "created_at": "2024-10-09T12:15:38Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14572389579,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAANklQTL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14572389579",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fabb28f6c8f772d38917a23dfbda706292070ba1",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fabb28f6c8f772d38917a23dfbda706292070ba1",
      "created_at": "2024-10-09T12:46:10Z"
    },
    {
      "event": "labeled",
      "id": 14572392290,
      "node_id": "LE_lADOABII586ZhW7DzwAAAANklQ9i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14572392290",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T12:46:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2402225515,
      "node_id": "IC_kwDOABII586PLw1r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2402225515",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T12:46:22Z",
      "updated_at": "2024-10-09T12:46:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/31292791221</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2402225515",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "reviewed",
      "id": 2356947303,
      "node_id": "PRR_kwDOABII586MfCln",
      "url": null,
      "actor": null,
      "commit_id": "fabb28f6c8f772d38917a23dfbda706292070ba1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK fabb28f6c8f772d38917a23dfbda706292070ba1. This looks great, and implementation is very clean. However, I think it could be simplified significantly if there were a scripted diff commit to replace `strprintf(Untranslated(\"...\"), ...)` with `Untranslated(strprintf(\"...\", ...))`, which would be a good change on its own for clarity and consistency. More details in comments below.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2356947303",
      "submitted_at": "2024-10-09T13:02:39Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14573177661,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAANkoQs9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14573177661",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "created_at": "2024-10-09T13:35:02Z"
    },
    {
      "event": "unlabeled",
      "id": 14574747063,
      "node_id": "UNLE_lADOABII586ZhW7DzwAAAANkuP23",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14574747063",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-09T15:06:03Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2357070300,
      "node_id": "PRR_kwDOABII586Mfgnc",
      "url": null,
      "actor": null,
      "commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, and this is a smaller diff than I'd expected to implement this, nice!\r\n\r\nI need to think about it more and work out some code, but I feel like the new interface is not as intuitive yet as it could be. Will follow up with that in next review.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2357070300",
      "submitted_at": "2024-10-09T16:36:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "commented",
      "id": 2403846748,
      "node_id": "IC_kwDOABII586PR8pc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2403846748",
      "actor": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-10T03:06:34Z",
      "updated_at": "2024-10-10T03:06:34Z",
      "author_association": "MEMBER",
      "body": "concept ack",
      "user": {
        "login": "jarolrod",
        "id": 23396902,
        "node_id": "MDQ6VXNlcjIzMzk2OTAy",
        "avatar_url": "https://avatars.githubusercontent.com/u/23396902?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jarolrod",
        "html_url": "https://github.com/jarolrod",
        "followers_url": "https://api.github.com/users/jarolrod/followers",
        "following_url": "https://api.github.com/users/jarolrod/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jarolrod/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jarolrod/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jarolrod/subscriptions",
        "organizations_url": "https://api.github.com/users/jarolrod/orgs",
        "repos_url": "https://api.github.com/users/jarolrod/repos",
        "events_url": "https://api.github.com/users/jarolrod/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jarolrod/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2403846748",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14586545742,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAANlbQZO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14586545742",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fcbdec3833394a6f9f239a45e3f181add7755cda",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fcbdec3833394a6f9f239a45e3f181add7755cda",
      "created_at": "2024-10-10T08:12:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14587654617,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAANlffHZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14587654617",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "created_at": "2024-10-10T09:20:25Z"
    },
    {
      "event": "reviewed",
      "id": 2362745062,
      "node_id": "PRR_kwDOABII586M1KDm",
      "url": null,
      "actor": null,
      "commit_id": "fae6acacc0216aa07f5a4a0ee75fbade620d7023",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK fae6acacc0216aa07f5a4a0ee75fbade620d7023. This is a nice improvement overall, and definitely better than the status quo due to extra type checking it provides. I do think there is extra complexity here and extra changes that could go away if we adopt #31072 and stop passing untranslated format strings to strprintf. \r\n\r\nI also think it probably would be nicer if `_()` would continue to look up translations right away, instead of delaying them until conversion to bilingual str. I think it could return a bilingual_str with extra compile-time information instead of returning different type with `.lit` and `.translate()` fields. I'm not sure this is possible though, and it's likely there's something I'm overlooking.\r\n\r\nEDIT: I am implemented an approach in #31074 that makes `_()` and `Untranslated()` both return `bilingual_str` with `.original` and `.translated` fields and no not delay the time of translation. Unfortunately, because C++ does not currently allow marking function parameters `constexpr`, it means strings needs to be passed as template parameters instead of function parameters, resulting in a messier syntax, even though the implementation and API are simpler. I closed the PR because it is not a clear win over this one.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2362745062",
      "submitted_at": "2024-10-11T13:53:35Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "review_requested",
      "id": 14609178604,
      "node_id": "RRE_lADOABII586ZhW7DzwAAAANmxl_s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14609178604",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-11T13:53:38Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "referenced",
      "id": 14615126888,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAANnISNo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14615126888",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6fb39655c5cd2bebad902d271d1edae64b817d2b",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/6fb39655c5cd2bebad902d271d1edae64b817d2b",
      "created_at": "2024-10-12T01:36:15Z"
    },
    {
      "event": "labeled",
      "id": 14835061764,
      "node_id": "LE_lADOABII586ZhW7DzwAAAAN0PRQE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14835061764",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T00:48:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14856011268,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAN1fL4E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14856011268",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d7fa742f053836e0044dc8d7113382ff08cb879b",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/d7fa742f053836e0044dc8d7113382ff08cb879b",
      "created_at": "2024-10-24T17:36:08Z"
    },
    {
      "event": "convert_to_draft",
      "id": 14856024005,
      "node_id": "CTDE_lADOABII586ZhW7DzwAAAAN1fO_F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14856024005",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T17:36:59Z"
    },
    {
      "event": "unlabeled",
      "id": 14856531387,
      "node_id": "UNLE_lADOABII586ZhW7DzwAAAAN1hK27",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14856531387",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T18:11:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 14967059076,
      "node_id": "LE_lADOABII586ZhW7DzwAAAAN8GzKE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14967059076",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-28T17:51:57Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14979234021,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAN81Pjl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14979234021",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7b4426637afef2010335704c58c55b25948d14d4",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/7b4426637afef2010335704c58c55b25948d14d4",
      "created_at": "2024-10-29T07:47:21Z"
    },
    {
      "event": "unlabeled",
      "id": 14979742076,
      "node_id": "UNLE_lADOABII586ZhW7DzwAAAAN83Ll8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14979742076",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-29T08:27:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "referenced",
      "id": 14990572124,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAAN9gfpc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14990572124",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "49d4032d2d4c7cefaba11f6d295f42402157a058",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/49d4032d2d4c7cefaba11f6d295f42402157a058",
      "created_at": "2024-10-29T19:55:22Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15285649959,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOPGIIn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15285649959",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6773ce810b2d7c55629f5d7b0d4e55c49264b967",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/6773ce810b2d7c55629f5d7b0d4e55c49264b967",
      "created_at": "2024-11-13T16:09:56Z"
    },
    {
      "event": "referenced",
      "id": 15296232682,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAAOPufzq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15296232682",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f44e39c9d0daee0a2e5abd5d13acafbc2ff497e9",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f44e39c9d0daee0a2e5abd5d13acafbc2ff497e9",
      "created_at": "2024-11-14T10:18:47Z"
    },
    {
      "event": "labeled",
      "id": 15296958490,
      "node_id": "LE_lADOABII586ZhW7DzwAAAAOPxRAa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15296958490",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T11:12:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15297720991,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOP0LKf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15297720991",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2c15a858ca7b3f14eaebf4b39134cd0e9c559273",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/2c15a858ca7b3f14eaebf4b39134cd0e9c559273",
      "created_at": "2024-11-14T12:20:57Z"
    },
    {
      "event": "unlabeled",
      "id": 15297848736,
      "node_id": "UNLE_lADOABII586ZhW7DzwAAAAOP0qWg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15297848736",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T12:32:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2476602210,
      "node_id": "IC_kwDOABII586TnfNi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2476602210",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T15:00:31Z",
      "updated_at": "2024-11-14T15:00:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, nice to see these verifications being done earlier",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2476602210",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "reviewed",
      "id": 2437555054,
      "node_id": "PRR_kwDOABII586RSiNu",
      "url": null,
      "actor": null,
      "commit_id": "2c15a858ca7b3f14eaebf4b39134cd0e9c559273",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 2c15a858ca7b3f14eaebf4b39134cd0e9c559273. No changes since the last review other than rebase.\r\n\r\nI do think it would simplify this PR and make review more meaningful if #31072 could be merged first. This PR is combining application code changes which require looking at surrounding code and seeing if the changes fit in, with translation class changes which require thinking about API design. I think it's harder to evaluate both things clearly when they are bundled in the same PR. I wouldn't object to this PR going in first though since it has been open longer.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2437555054",
      "submitted_at": "2024-11-15T02:44:07Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "review_requested",
      "id": 15306549070,
      "node_id": "RRE_lADOABII586ZhW7DzwAAAAOQV2dO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15306549070",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-15T02:44:12Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "referenced",
      "id": 15306645829,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAAOQWOFF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15306645829",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1f29e5d5fce6c935db867adf4ab96cbe7491757f",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/1f29e5d5fce6c935db867adf4ab96cbe7491757f",
      "created_at": "2024-11-15T03:03:26Z"
    },
    {
      "event": "referenced",
      "id": 15306645836,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAAOQWOFM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15306645836",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ec038f52abafa1bb39aa891bf2d4d358eaa399ed",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/ec038f52abafa1bb39aa891bf2d4d358eaa399ed",
      "created_at": "2024-11-15T03:03:26Z"
    },
    {
      "event": "labeled",
      "id": 15314862228,
      "node_id": "LE_lADOABII586ZhW7DzwAAAAOQ1kCU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15314862228",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-15T16:15:21Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15314891475,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOQ1rLT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15314891475",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f4df783f1ca22d96476d52ec5d1929547691ba13",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/f4df783f1ca22d96476d52ec5d1929547691ba13",
      "created_at": "2024-11-15T16:18:10Z"
    },
    {
      "event": "referenced",
      "id": 15315120315,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAAOQ2jC7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15315120315",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9120245e7660d03814bed303c1394dbf76b3e158",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/9120245e7660d03814bed303c1394dbf76b3e158",
      "created_at": "2024-11-15T16:38:55Z"
    },
    {
      "event": "referenced",
      "id": 15315120338,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAAOQ2jDS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15315120338",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b8bf7bf55b85e1925ed906a9a790b091e54c0603",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/b8bf7bf55b85e1925ed906a9a790b091e54c0603",
      "created_at": "2024-11-15T16:38:55Z"
    },
    {
      "event": "referenced",
      "id": 15315120403,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAAOQ2jET",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15315120403",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5c6a94bba0a42d250c36d55dc487c4870d17e482",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/5c6a94bba0a42d250c36d55dc487c4870d17e482",
      "created_at": "2024-11-15T16:38:55Z"
    },
    {
      "event": "referenced",
      "id": 15315120425,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAAOQ2jEp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15315120425",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "222ced7d2f370f2cf8ff04178a65e75e6f9f4997",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/222ced7d2f370f2cf8ff04178a65e75e6f9f4997",
      "created_at": "2024-11-15T16:38:56Z"
    },
    {
      "event": "reviewed",
      "id": 2439149936,
      "node_id": "PRR_kwDOABII586RYnlw",
      "url": null,
      "actor": null,
      "commit_id": "f4df783f1ca22d96476d52ec5d1929547691ba13",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK f4df783f1ca22d96476d52ec5d1929547691ba13. Just rebased and reordered commit since last review",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2439149936",
      "submitted_at": "2024-11-15T16:49:16Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "unlabeled",
      "id": 15316212838,
      "node_id": "UNLE_lADOABII586ZhW7DzwAAAAOQ6txm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15316212838",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-15T18:29:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2449445449,
      "node_id": "PRR_kwDOABII586R_5JJ",
      "url": null,
      "actor": null,
      "commit_id": "f4df783f1ca22d96476d52ec5d1929547691ba13",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "utACK f4df783f1ca22d96476d52ec5d1929547691ba13",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2449445449",
      "submitted_at": "2024-11-20T18:50:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "labeled",
      "id": 15398462481,
      "node_id": "LE_lADOABII586ZhW7DzwAAAAOV0eQR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15398462481",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-22T14:43:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 15399130593,
      "node_id": "UNLE_lADOABII586ZhW7DzwAAAAOV3BXh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15399130593",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-22T15:24:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2477648972,
      "node_id": "PRR_kwDOABII586TrexM",
      "url": null,
      "actor": null,
      "commit_id": "f4df783f1ca22d96476d52ec5d1929547691ba13",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK f4df783f1ca22d96476d52ec5d1929547691ba13\r\n\r\nIncreased validation of format strings. :+1: \r\n\r\n---\r\n\r\nMaybe amend PR summary or final commit by spelling out something like:\r\n\r\nDelays `bilingual_str`-construction until the end of the overload of `tinyformat::format` in *translation.h*. The `fmt` parameter to the overload is changed from `bilingual_str` -> `util::bilingual_fmt`, the latter being a new type which contains a `ConstevalFormatString`. `bilingual_fmt` in turn is only constructible from the new `util::Translatable` type, which is only returned by calling one of:\r\n- `Translatable<true> _(const char*)`\r\n- `Translatable<false> Untranslated(const char*)`\r\n\r\n---\r\n\r\nIff you re-touch, consider making code a bit less template-heavy by splitting `Translatable` in two:\r\n\r\n```diff\r\ndiff --git a/src/util/translation.h b/src/util/translation.h\r\nindex 2da4f68e55..657cd21f9c 100644\r\n--- a/src/util/translation.h\r\n+++ b/src/util/translation.h\r\n@@ -58,31 +58,32 @@ inline std::string translate(const char* lit)\r\n {\r\n     return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\r\n }\r\n-/** Type to denote whether an original string literal is translatable */\r\n-template <bool translatable = true>\r\n struct Translatable {\r\n     const char* const lit;\r\n     consteval Translatable(const char* str) : lit{str} { assert(lit); }\r\n-    std::string translate() const { return translatable ? util::translate(lit) : lit; }\r\n+    std::string translate() const { return util::translate(lit); }\r\n     operator bilingual_str() const { return {lit, translate()}; }\r\n };\r\n+struct Untranslatable {\r\n+    const char* const lit;\r\n+    consteval Untranslatable(const char* str) : lit{str} { assert(lit); }\r\n+    operator bilingual_str() const { return {lit, lit}; }\r\n+};\r\n template <unsigned num_params>\r\n struct bilingual_fmt {\r\n     const ConstevalFormatString<num_params> original;\r\n     const bool translatable;\r\n-    template <bool translatable>\r\n-    consteval bilingual_fmt(Translatable<translatable> o) : original{o.lit}, translatable{translatable}\r\n-    {\r\n-    }\r\n+    consteval bilingual_fmt(Translatable o) : original{o.lit}, translatable{true} {}\r\n+    consteval bilingual_fmt(Untranslatable o) : original{o.lit}, translatable{false} {}\r\n     std::string translate() { return translatable ? util::translate(original.fmt) : original.fmt; }\r\n };\r\n } // namespace util\r\n\r\n-consteval auto _(util::Translatable<true> str) { return str; }\r\n+consteval auto _(util::Translatable str) { return str; }\r\n\r\n /** Mark a bilingual_str as untranslated */\r\n inline bilingual_str Untranslated(std::string original) { return {original, original}; }\r\n-consteval util::Translatable<false> Untranslated(const char* original) { return original; }\r\n+consteval util::Untranslatable Untranslated(const char* original) { return original; }\r\n\r\n // Provide an overload of tinyformat::format which can take bilingual_str arguments.\r\n namespace tinyformat {\r\n```",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2477648972",
      "submitted_at": "2024-12-04T14:15:07Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "referenced",
      "id": 15529111709,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAAOdm3Cd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15529111709",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "39950e148d80eec7ef18ff2858453d34a86c15cb",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39950e148d80eec7ef18ff2858453d34a86c15cb",
      "created_at": "2024-12-04T16:16:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15529298151,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOdnkjn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15529298151",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f4df783f1ca22d96476d52ec5d1929547691ba13",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/f4df783f1ca22d96476d52ec5d1929547691ba13",
      "created_at": "2024-12-04T16:28:30Z"
    },
    {
      "event": "referenced",
      "id": 15532524768,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAAOdz4Tg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15532524768",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2055acbae96e3425daa7ae371cbac992053b78db",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/2055acbae96e3425daa7ae371cbac992053b78db",
      "created_at": "2024-12-04T21:07:51Z"
    },
    {
      "event": "referenced",
      "id": 15532524800,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAAOdz4UA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15532524800",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "058021969b542fc865d17d22fa21e48c9abe4a6e",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/058021969b542fc865d17d22fa21e48c9abe4a6e",
      "created_at": "2024-12-04T21:07:51Z"
    },
    {
      "event": "commented",
      "id": 2518655142,
      "node_id": "IC_kwDOABII586WH6Cm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2518655142",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-04T22:05:11Z",
      "updated_at": "2024-12-04T22:05:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "Should this PR still be in Draft-status @maflcko?",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2518655142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "mentioned",
      "id": 15533059649,
      "node_id": "MEE_lADOABII586ZhW7DzwAAAAOd165B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15533059649",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-04T22:05:13Z"
    },
    {
      "event": "subscribed",
      "id": 15533059668,
      "node_id": "SE_lADOABII586ZhW7DzwAAAAOd165U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15533059668",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-04T22:05:13Z"
    },
    {
      "event": "commented",
      "id": 2522922291,
      "node_id": "IC_kwDOABII586WYL0z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2522922291",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T11:13:39Z",
      "updated_at": "2024-12-06T11:13:39Z",
      "author_association": "MEMBER",
      "body": "Looks like https://github.com/bitcoin/bitcoin/pull/31072 will make it, so I'll leave this in draft for now.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2522922291",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "referenced",
      "id": 15558967865,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAAOfYwI5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15558967865",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "22723c809a8abce415195693546e2a7c03e516c4",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/22723c809a8abce415195693546e2a7c03e516c4",
      "created_at": "2024-12-06T11:38:54Z"
    },
    {
      "event": "labeled",
      "id": 15560139974,
      "node_id": "LE_lADOABII586ZhW7DzwAAAAOfdOTG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15560139974",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T13:05:03Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15563005548,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOfoJ5s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563005548",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "150f5cbedfa1df61a3691bb22143d395e1c4b1d4",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/150f5cbedfa1df61a3691bb22143d395e1c4b1d4",
      "created_at": "2024-12-06T16:39:24Z"
    },
    {
      "event": "reviewed",
      "id": 2485351479,
      "node_id": "PRR_kwDOABII586UI3Q3",
      "url": null,
      "actor": null,
      "commit_id": "f4df783f1ca22d96476d52ec5d1929547691ba13",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "addressed feedback, rebased",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2485351479",
      "submitted_at": "2024-12-06T16:39:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "ready_for_review",
      "id": 15563010841,
      "node_id": "RFRE_lADOABII586ZhW7DzwAAAAOfoLMZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563010841",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T16:39:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15563082351,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOfocpv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563082351",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fa6b1d2a26e25e3e6a4ef37835426371001d01ae",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fa6b1d2a26e25e3e6a4ef37835426371001d01ae",
      "created_at": "2024-12-06T16:47:04Z"
    },
    {
      "event": "unlabeled",
      "id": 15563419307,
      "node_id": "UNLE_lADOABII586ZhW7DzwAAAAOfpu6r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15563419307",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T17:14:21Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2485972387,
      "node_id": "PRR_kwDOABII586ULO2j",
      "url": null,
      "actor": null,
      "commit_id": "fa6b1d2a26e25e3e6a4ef37835426371001d01ae",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code reviewed fa6b1d2a26e25e3e6a4ef37835426371001d01ae\r\n\r\nReally nice how you could slim this down after #31072 merged, removing `Translatable<false>` from this PR as after that PR `Untranslated()` is no longer sent into `strprintf`/`tfm::format`. Now we only need the two `Translatable` and `bilingual_fmt` as separate types as a consequence of all `_()`-calls not being used as format strings.\r\n\r\n---\r\n\r\nOnly blocker for me is that the commit message in aaaa7e3f285d5d0ff55df4dfe050334215e2c582 still states:\r\n> This is required for a future commit that requires Untranslated() and _() to be consteval for format literals.\r\n\r\n`Untranslated()` is not made `consteval` in this PR.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2485972387",
      "submitted_at": "2024-12-06T22:25:05Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15569021835,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOf_GuL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15569021835",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fab303a7aaf1bf3e01e801f0717e78e050dd1d48",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fab303a7aaf1bf3e01e801f0717e78e050dd1d48",
      "created_at": "2024-12-07T08:28:02Z"
    },
    {
      "event": "commented",
      "id": 2525066966,
      "node_id": "IC_kwDOABII586WgXbW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2525066966",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-07T10:40:27Z",
      "updated_at": "2024-12-07T10:40:27Z",
      "author_association": "MEMBER",
      "body": "I figured I can just push the final commit to fix https://github.com/bitcoin/bitcoin/issues/30530 as well. ",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2525066966",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "reviewed",
      "id": 2486495985,
      "node_id": "PRR_kwDOABII586UNOrx",
      "url": null,
      "actor": null,
      "commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for incorporating my previous feedback!\r\n\r\nLeaving some brief comments on the new changes before getting back to the weekend.\r\n\r\nWas `lint-format-strings.py` picked up by some glob-expression in CI?",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2486495985",
      "submitted_at": "2024-12-07T13:30:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "commented",
      "id": 2525189744,
      "node_id": "IC_kwDOABII586Wg1Zw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2525189744",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-07T14:32:18Z",
      "updated_at": "2024-12-07T14:32:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "This looks pretty good but I think the API can be improved. Specifically I think `.translate()` suffixes should not be necessary and just calling `_()` should be sufficient to indicate that you want a translated `std::string` or `bilingual_str`. If you don't want the translation, there should be no reason to call `_()`\r\n\r\nA suggested implementation dropping .translate() suffixes is: [branch](https://github.com/ryanofsky/bitcoin/commits/review.31061.9-edit), [diff](https://github.com/ryanofsky/bitcoin/compare/review.31061.9..review.31061.9-edit)\r\n\r\n- daffb340d1d7b2c5a5248b3189a920cd3709e2ae refactor: Delay translation of _() literals\r\n- 12e2e2bd21b3ff90df2afe91625ffcf930b0f48f refactor: Check translatable format strings at compile-time\r\n- 3da69f27d1a0ca3c675f3cb491943beae9dc4922 refactor: Introduce struct to hold a runtime format string\r\n- c357f990b71a7bd8b35abe08bd4ad309411a0325 lint: Remove unused and broken format string linter\r\n\r\nThis also adds a little more test coverage so the original and translated format strings in the test are not the same and test can confirm the right strings are picked.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2525189744",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "reviewed",
      "id": 2487203986,
      "node_id": "PRR_kwDOABII586UP7iS",
      "url": null,
      "actor": null,
      "commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2487203986",
      "submitted_at": "2024-12-08T17:17:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15580702918,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOgrqjG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15580702918",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fa7cb525b7069ce0197d2f309102432273fea4d6",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fa7cb525b7069ce0197d2f309102432273fea4d6",
      "created_at": "2024-12-09T10:13:27Z"
    },
    {
      "event": "commented",
      "id": 2527493099,
      "node_id": "IC_kwDOABII586Wpnvr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2527493099",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-09T10:14:19Z",
      "updated_at": "2024-12-09T10:14:19Z",
      "author_association": "MEMBER",
      "body": "> Was `lint-format-strings.py` picked up by some glob-expression in CI?\r\n\r\nYes, see:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/35000e34cf339e46d62b757c3723057724d23637/test/lint/test_runner/src/main.rs#L557\r\n\r\nIn the future it could make sense to explicitly list them one-by-one in the list, instead of using the implicit glob.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2527493099",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "reviewed",
      "id": 2490255435,
      "node_id": "PRR_kwDOABII586UbkhL",
      "url": null,
      "actor": null,
      "commit_id": "fa7cb525b7069ce0197d2f309102432273fea4d6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK fa7cb525b7069ce0197d2f309102432273fea4d6. LGTM!",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2490255435",
      "submitted_at": "2024-12-09T22:32:59Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "review_requested",
      "id": 15591492473,
      "node_id": "RRE_lADOABII586ZhW7DzwAAAAOhU0t5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15591492473",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-09T22:33:04Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 15591492582,
      "node_id": "RRE_lADOABII586ZhW7DzwAAAAOhU0vm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15591492582",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-09T22:33:05Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15596655667,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOhohQz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15596655667",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fa48365da43b4c7d5c70e16b0a3db34e92a35eed",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fa48365da43b4c7d5c70e16b0a3db34e92a35eed",
      "created_at": "2024-12-10T08:26:07Z"
    },
    {
      "event": "commented",
      "id": 2531244463,
      "node_id": "IC_kwDOABII586W37mv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2531244463",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T11:01:08Z",
      "updated_at": "2024-12-10T11:18:39Z",
      "author_association": "MEMBER",
      "body": "Looks like there is a codegen bug in msvc, or some other issue? It would be good if someone with a Windows box could take a look, to either debug the crash or create a minimal reproducer.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2531244463",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "convert_to_draft",
      "id": 15599300489,
      "node_id": "CTDE_lADOABII586ZhW7DzwAAAAOhym-J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15599300489",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T11:24:16Z"
    },
    {
      "event": "commented",
      "id": 2531645460,
      "node_id": "IC_kwDOABII586W5dgU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2531645460",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T13:30:36Z",
      "updated_at": "2024-12-10T13:30:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Looks like there is a codegen bug in msvc, or some other issue? It would be good if someone with a Windows box could take a look, to either debug the crash or create a minimal reproducer.\r\n\r\nI think maybe the previous fa37083b37e6 `FormatStringCheck(const RuntimeFormat& run)` was safe and current fad431e548a6 `FormatStringCheck(RuntimeFormat run)` is buggy and the msvc error is a real bug.\r\n\r\nPreviously it was safe to call `run.fmt.c_str()` because `run` object was temporary but had a lifetime was as long as the full-expression. Now it seems `run` object is a copy of original `RuntimeFormat` object and only has a lifetime as long as the FormatStringCheck constructor.\r\n\r\nNot sure why this wouldn't cause errors on other platforms. One thing that may be unique about the timeoffsets test case that is failing is that the [format string](https://github.com/bitcoin/bitcoin/blob/37e49c2c7ca5969124830d79b2cb31041c570755/src/node/timeoffsets.cpp#L55-L62) is very long so maybe this is affected by a short string optimization.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2531645460",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "commented",
      "id": 2531671671,
      "node_id": "IC_kwDOABII586W5j53",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2531671671",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T13:41:53Z",
      "updated_at": "2024-12-10T13:41:53Z",
      "author_association": "MEMBER",
      "body": "> Not sure why this wouldn't cause errors on other platforms. One thing that may be unique about the timeoffsets test case that is failing is that the [format string](https://github.com/bitcoin/bitcoin/blob/37e49c2c7ca5969124830d79b2cb31041c570755/src/node/timeoffsets.cpp#L55-L62) is very long so maybe this is affected by a short string optimization.\r\n\r\nThat seems unlikely, for several reasons:\r\n\r\n* The format string is checked at compile time via `TranslatedLiteral` -> `BilingualFmt` -> `ConstevalFormatString` -> `FormatStringCheck` (only the last step is done at runtime). However, no step involves a runtime format string, or a `std::string` constructor.\r\n* A `std::unique_ptr<std::string>` should sidestep the short-string optimization, putting even short strings into newly allocated memory. Thus, the problem should be visible on other platforms, or consistently on Windows.\r\n\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2531671671",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "commented",
      "id": 2531730108,
      "node_id": "IC_kwDOABII586W5yK8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2531730108",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T14:05:02Z",
      "updated_at": "2024-12-10T14:05:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "> * However, no step involves a runtime format string, or a `std::string` constructor.\r\n\r\nDoesn't the fact that it is translated mean that is uses a runtime format string and std::string? The original string will be a `const char*` but the string returned from the translation function will be a runtime std::string",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2531730108",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "commented",
      "id": 2532070351,
      "node_id": "IC_kwDOABII586W7FPP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2532070351",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T15:32:20Z",
      "updated_at": "2024-12-10T15:32:20Z",
      "author_association": "MEMBER",
      "body": "Ok, fair enough. Though, I still don't see how the `RuntimeFormat` string is destructed before the `FormatStringCheck`, given that:\r\n\r\n* The only constructor of `RuntimeFormat` is marked `explicit`, meaning that it has to be constructed before being passed to `FormatStringCheck`\r\n* Any copies or moves are deleted, so the string can only be reset in memory on destruction, which happens after the `FormatStringCheck` destruction.\r\n* The `std::unique_ptr<std::string>` test should disable short-string optimizations and trigger the issue reliably, if it existed\r\n\r\nSee also the godbolt: https://godbolt.org/z/M3fEnd8Wq\r\n\r\nMaybe I am missing something obvious, but if there is no bug in msvc, it would be good to know the exact bug in this code.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2532070351",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "commented",
      "id": 2532174577,
      "node_id": "IC_kwDOABII586W7erx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2532174577",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T16:11:19Z",
      "updated_at": "2024-12-10T16:11:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Maybe I am missing something obvious, but if there is no bug in msvc, it would be good to know the exact bug in this code.\r\n\r\nI think the following line from fad431e548a694600a3fe212127052e5f922a622 is buggy because it is saving the result of `c_str()` call from a string that about to be destroyed:\r\n\r\n```c++\r\nFormatStringCheck(RuntimeFormat run) : fmt{run.fmt.c_str()} {}\r\n```\r\n\r\nThe `run.fmt` string object will be destroyed when the `FormatStringCheck` constructor finishes because `run` is a non-reference parameter, so it's a effectively a local variable within `FormatStringCheck` method.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2532174577",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "commented",
      "id": 2532235935,
      "node_id": "IC_kwDOABII586W7tqf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2532235935",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T16:35:42Z",
      "updated_at": "2024-12-10T16:36:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I think the following line from https://github.com/bitcoin/bitcoin/commit/fad431e548a694600a3fe212127052e5f922a622 is buggy because it is saving the result of c_str() call from a string that about to be destroyed:\r\n\r\nLooking at this more I think the constructor is not buggy in c++17 as long as a temporary object is being passed as the constructor argument, because the mandatory copy elision described at the top of https://en.cppreference.com/w/cpp/language/copy_elision should apply, so the temporary should not be copied, and the temporary should have the lifetime of the full-expression. So maybe MSVC is at fault here, either for not applying mandatory copy-elision, or for not extending the lifetime of the constructor argument to outlive the constructor when it does apply copy-elision.\r\n\r\nI do think the FormatStringCheck constructor in fad431e548a694600a3fe212127052e5f922a622 is inherently fragile though, because it will be copying the constructor argument if a non-rvalue is passed, and calling .c_str() on the temporary copy that is about to be destroyed. It seems better to just use references and LIFETIMEBOUND as originally suggested and avoid temporaries and copies.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2532235935",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15606780779,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOiPJNr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15606780779",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fa7cb525b7069ce0197d2f309102432273fea4d6",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fa7cb525b7069ce0197d2f309102432273fea4d6",
      "created_at": "2024-12-10T20:13:48Z"
    },
    {
      "event": "ready_for_review",
      "id": 15606788761,
      "node_id": "RFRE_lADOABII586ZhW7DzwAAAAOiPLKZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15606788761",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T20:14:20Z"
    },
    {
      "event": "commented",
      "id": 2533132896,
      "node_id": "IC_kwDOABII586W_Ipg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2533132896",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-10T22:52:23Z",
      "updated_at": "2024-12-10T22:52:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'd prefer it if every `TranslatedLiteral` instance didn't have a function pointer riding on the side, but I do like the added testability.\r\n\r\nOne could make the test-implementation of `G_TRANSLATION_FUN` support hooking it for specific tests. It still comes with some added overhead when it comes to benchmarks and fuzzing over current *master* though.\r\n\r\n<details>\r\n<summary>Diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/test/translation_tests.cpp b/src/test/translation_tests.cpp\r\nindex 2ebde95259..bcbfe9db34 100644\r\n--- a/src/test/translation_tests.cpp\r\n+++ b/src/test/translation_tests.cpp\r\n@@ -2,6 +2,7 @@\r\n // Distributed under the MIT software license, see the accompanying\r\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n \r\n+#include <test/util/setup_common.h>\r\n #include <tinyformat.h>\r\n #include <util/translation.h>\r\n \r\n@@ -9,21 +10,24 @@\r\n \r\n BOOST_AUTO_TEST_SUITE(translation_tests)\r\n \r\n-static TranslateFn translate{[](const char * str) {  return strprintf(\"t(%s)\", str);  }};\r\n-\r\n BOOST_AUTO_TEST_CASE(translation_namedparams)\r\n {\r\n-    constexpr util::TranslatedLiteral format{\"original [%s]\", &translate};\r\n+    assert(!G_TRANSLATION_FUN_HOOK);\r\n+    G_TRANSLATION_FUN_HOOK = [](const char * str) { return strprintf(\"t(%s)\", str); };\r\n+\r\n+    constexpr util::TranslatedLiteral format{\"original [%s]\"};\r\n \r\n     bilingual_str arg{\"original\", \"translated\"};\r\n     bilingual_str result{strprintf(format, arg)};\r\n     BOOST_CHECK_EQUAL(result.original, \"original [original]\");\r\n     BOOST_CHECK_EQUAL(result.translated, \"t(original [translated])\");\r\n \r\n-    util::TranslatedLiteral arg2{\"original\", &translate};\r\n+    util::TranslatedLiteral arg2{\"original\"};\r\n     bilingual_str result2{strprintf(format, arg2)};\r\n     BOOST_CHECK_EQUAL(result2.original, \"original [original]\");\r\n     BOOST_CHECK_EQUAL(result2.translated, \"t(original [t(original)])\");\r\n+\r\n+    G_TRANSLATION_FUN_HOOK = {};\r\n }\r\n \r\n BOOST_AUTO_TEST_SUITE_END()\r\ndiff --git a/src/test/util/setup_common.cpp b/src/test/util/setup_common.cpp\r\nindex 12feba09a5..947f1e1ca7 100644\r\n--- a/src/test/util/setup_common.cpp\r\n+++ b/src/test/util/setup_common.cpp\r\n@@ -72,7 +72,11 @@ using node::LoadChainstate;\r\n using node::RegenerateCommitments;\r\n using node::VerifyLoadedChainstate;\r\n \r\n-const std::function<std::string(const char*)> G_TRANSLATION_FUN = nullptr;\r\n+std::function<std::string(const char*)> G_TRANSLATION_FUN_HOOK;\r\n+\r\n+const std::function<std::string(const char*)> G_TRANSLATION_FUN{[] (const char* str) {\r\n+    return G_TRANSLATION_FUN_HOOK ? G_TRANSLATION_FUN_HOOK(str) : str;\r\n+}};\r\n \r\n constexpr inline auto TEST_DIR_PATH_ELEMENT{\"test_common bitcoin\"}; // Includes a space to catch possible path escape issues.\r\n /** Random context to get unique temp data dirs. Separate from m_rng, which can be seeded from a const env var */\r\ndiff --git a/src/test/util/setup_common.h b/src/test/util/setup_common.h\r\nindex b0f7bdade2..f033f20dc8 100644\r\n--- a/src/test/util/setup_common.h\r\n+++ b/src/test/util/setup_common.h\r\n@@ -43,6 +43,8 @@ extern const std::function<std::vector<const char*>()> G_TEST_COMMAND_LINE_ARGUM\r\n /** Retrieve the unit test name. */\r\n extern const std::function<std::string()> G_TEST_GET_FULL_NAME;\r\n \r\n+extern std::function<std::string(const char*)> G_TRANSLATION_FUN_HOOK;\r\n+\r\n static constexpr CAmount CENT{1000000};\r\n \r\n /** Register common test args. Shared across binaries that rely on the test framework. */\r\ndiff --git a/src/util/translation.h b/src/util/translation.h\r\nindex 3a9316479d..d618b22ee2 100644\r\n--- a/src/util/translation.h\r\n+++ b/src/util/translation.h\r\n@@ -13,8 +13,7 @@\r\n #include <string>\r\n \r\n /** Translate a message to the native language of the user. */\r\n-using TranslateFn = std::function<std::string(const char*)>;\r\n-const extern TranslateFn G_TRANSLATION_FUN;\r\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\r\n \r\n /**\r\n  * Bilingual messages:\r\n@@ -54,10 +53,9 @@ namespace util {\r\n //! Compile-time literal string that can be translated with an optional translation function.\r\n struct TranslatedLiteral {\r\n     const char* const original;\r\n-    const TranslateFn* translate_fn;\r\n \r\n-    consteval TranslatedLiteral(const char* str, const TranslateFn* fn = &G_TRANSLATION_FUN) : original{str}, translate_fn{fn} { assert(original); }\r\n-    operator std::string() const { return translate_fn && *translate_fn ? (*translate_fn)(original) : original; }\r\n+    consteval TranslatedLiteral(const char* str) : original{str} { assert(original); }\r\n+    operator std::string() const { return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(original) : original; }\r\n     operator bilingual_str() const { return {original, std::string{*this}}; }\r\n };\r\n ```\r\n</details>",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2533132896",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "reviewed",
      "id": 2494156565,
      "node_id": "PRR_kwDOABII586Uqc8V",
      "url": null,
      "actor": null,
      "commit_id": "fa7cb525b7069ce0197d2f309102432273fea4d6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK fa7cb525b7069ce0197d2f309102432273fea4d6. Looks good but did leave some suggestions which could be saved for a follow-up.\r\n\r\n---\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2533132896\r\n\r\n> I'd prefer it if every `TranslatedLiteral` instance didn't have a function pointer riding on the side, but I do like the added testability.\r\n\r\nI don't think the `TranslatedLiteral::translate_fn` members should add overhead because TranslatedLiteral constructor is consteval, and in any case TranslatedLiteral objects are ephemeral, they exist only to call a translation function one time and then disappear. (The additional pointers also technically aren't function pointers, but pointers to a `std::function` object.)\r\n\r\nThe goal of the pointers isn't just improve testability but also to provide extensibility, so for example a libbitcoinkernel application could use define its own `_` translation function and seamlessly use strprintf with its own translated strings. Having the pointers also avoids the need to mutate shared global state during tests so, for example, unlike with the suggested change, other tests could run in parallel with the translation test without being affected, and if translation test throws, it will not leave G_TRANSLATION_FUN pointing at the wrong function.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2494156565",
      "submitted_at": "2024-12-11T02:55:26Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "comment_deleted",
      "id": 15610671850,
      "node_id": "CDE_lADOABII586ZhW7DzwAAAAOid_Lq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15610671850",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T03:03:06Z"
    },
    {
      "event": "labeled",
      "id": 15611394018,
      "node_id": "LE_lADOABII586ZhW7DzwAAAAOigvfi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15611394018",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T04:52:34Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2535302094,
      "node_id": "IC_kwDOABII586XHaPO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2535302094",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T09:30:54Z",
      "updated_at": "2024-12-11T09:30:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I don't think the `TranslatedLiteral::translate_fn` members should add overhead because TranslatedLiteral constructor is consteval\r\n\r\nGood point, I glossed over `TranslatedLiteral` being `consteval`.\r\n\r\n> Having the pointers also avoids the need to mutate shared global state during tests\r\n\r\nCurrent CTest executes tests in parallel through starting separate processes, but it might change at some point and keeping it less brittle is good.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2535302094",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15615446028,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOiwMwM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15615446028",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fa5f6b7aad7b8888d46c706e0fb5891b1e330284",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fa5f6b7aad7b8888d46c706e0fb5891b1e330284",
      "created_at": "2024-12-11T10:06:54Z"
    },
    {
      "event": "reviewed",
      "id": 2494962584,
      "node_id": "PRR_kwDOABII586UthuY",
      "url": null,
      "actor": null,
      "commit_id": "fa7cb525b7069ce0197d2f309102432273fea4d6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK fa7cb525b7069ce0197d2f309102432273fea4d6\r\n\r\n`git range-diff master fa6b1d2 fa7cb52`\r\n\r\nReally like how `_()` is sufficient without `.translated`/`.translate()` thanks to `TranslatedLiteral`s `operator std::string`.\r\n\r\n---\r\n\r\nChecked out fa37083b37e613f0987fe74e0397d9ed90589e4b.\r\n\r\nRan linter being removed in following commit (fa7cb525b7069ce0197d2f309102432273fea4d6):\r\n```\r\n₿ test/lint/lint-format-strings.py \r\nsrc/test/fuzz/util/wallet.h: Expected 0 argument(s) after format string but found 2 argument(s): strprintf(tfm::RuntimeFormat{desc_fmt}, \"[5aa9973a/66h/4h/2h]\" + seed_insecure, int{internal})\r\nsrc/test/translation_tests.cpp: Expected 0 argument(s) after format string but found 1 argument(s): strprintf(format, arg2)\r\n```\r\nMight want to do something about that if we want *all* commits to pass, not blocking for me though.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2494962584",
      "submitted_at": "2024-12-11T10:14:25Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15615801186,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOixjdi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15615801186",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fa6759c4b376972def78921757378bb42692a28f",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fa6759c4b376972def78921757378bb42692a28f",
      "created_at": "2024-12-11T10:29:48Z"
    },
    {
      "event": "labeled",
      "id": 15615802678,
      "node_id": "LE_lADOABII586ZhW7DzwAAAAOixj02",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15615802678",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T10:29:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2535462480,
      "node_id": "IC_kwDOABII586XIBZQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2535462480",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T10:29:55Z",
      "updated_at": "2024-12-11T10:29:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/34246270269</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2535462480",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15616060017,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOiyipx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15616060017",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fadd2e69c6176ba684c1fd06fbd765be6fb6d647",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fadd2e69c6176ba684c1fd06fbd765be6fb6d647",
      "created_at": "2024-12-11T10:47:11Z"
    },
    {
      "event": "commented",
      "id": 2535546826,
      "node_id": "IC_kwDOABII586XIV_K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2535546826",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T11:08:08Z",
      "updated_at": "2024-12-11T11:08:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "nit: Noticed a typo in the linter removal commit message:\r\n\r\n\"The linter has many >implmentation< bugs and missing features.\"",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2535546826",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31061"
    },
    {
      "event": "unlabeled",
      "id": 15616505774,
      "node_id": "UNLE_lADOABII586ZhW7DzwAAAAOi0Peu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15616505774",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T11:18:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 15616831050,
      "node_id": "UNLE_lADOABII586ZhW7DzwAAAAOi1e5K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15616831050",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T11:31:51Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2495864360,
      "node_id": "PRR_kwDOABII586Uw94o",
      "url": null,
      "actor": null,
      "commit_id": "fadd2e69c6176ba684c1fd06fbd765be6fb6d647",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK fadd2e69c6176ba684c1fd06fbd765be6fb6d647. Just rebased and added lifetimebound and test suggestions since last review. Appreciate your patience with all the review comments and iterations of this PR. Will be really nice to see this merged with the new compiler checks being safer and more convenient than current runtime errors.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2495864360",
      "submitted_at": "2024-12-11T15:33:19Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "review_requested",
      "id": 15620614249,
      "node_id": "RRE_lADOABII586ZhW7DzwAAAAOjD6hp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15620614249",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T15:33:25Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2497012147,
      "node_id": "PRR_kwDOABII586U1WGz",
      "url": null,
      "actor": null,
      "commit_id": "fadd2e69c6176ba684c1fd06fbd765be6fb6d647",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK fadd2e69c6176ba684c1fd06fbd765be6fb6d647\r\n\r\n`git range-diff master fa7cb52 fadd2e6`\r\n\r\n- Mysteriously grinding out *fa*-prefixed hashes.\r\n- Changed order of linter removal so that it doesn't error on what is now the last commit.\r\n- Adapted unit tests further after feedback.\r\n- Reconciled silent merge conflict with #30933.\r\n- Added `LIFETIMEBOUND` to at least serve as developer documentation even though Clang isn't able to fully use it.\r\n\r\nnit: Did not fix typo: https://github.com/bitcoin/bitcoin/pull/31061#issuecomment-2535546826",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2497012147",
      "submitted_at": "2024-12-11T21:11:25Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhZDI3NmFkNjUxOGEzOTRkMDY1OTQzZDQ1OGU4YzdjY2UzZjk5N2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad276ad6518a394d065943d458e8c7cce3f997c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fad276ad6518a394d065943d458e8c7cce3f997c",
      "tree": {
        "sha": "8ff677d721f67a83005d9cd19a9f5cbb5f95d8b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8ff677d721f67a83005d9cd19a9f5cbb5f95d8b1"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 8ff677d721f67a83005d9cd19a9f5cbb5f95d8b1\nparent b042c4f0538c6f9cdf8efbcef552796851e38a85\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728472882 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1734349954 +0100\n\nrefactor: Delay translation of _() literals\n\nThis is required for a future commit that requires _() to be consteval\nfor format literals.\n\nCo-Authored-By: Ryan Ofsky <ryan@ofsky.org>\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQDsE1cLhadwYSHeQplGZJlSTzSk4Dti6NkL2gVYp4Rp/E+lT6cbRlcNVE6YbBLVtuj\nuJWnEDu7ux7FyAQ87wiAI=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b042c4f0538c6f9cdf8efbcef552796851e38a85",
          "sha": "b042c4f0538c6f9cdf8efbcef552796851e38a85",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b042c4f0538c6f9cdf8efbcef552796851e38a85"
        }
      ],
      "message": "refactor: Delay translation of _() literals\n\nThis is required for a future commit that requires _() to be consteval\nfor format literals.\n\nCo-Authored-By: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-12-16T11:52:34Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-09T11:21:22Z"
      },
      "sha": "fad276ad6518a394d065943d458e8c7cce3f997c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhOTNiMDVhNGQ0MjlmNjgyYTdiOWZlMmJiY2VjMmVjMzE3MzMyOGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa93b05a4d429f682a7b9fe2bbcec2ec3173328c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa93b05a4d429f682a7b9fe2bbcec2ec3173328c",
      "tree": {
        "sha": "6ea5ff4f52b555df4c6e5d6ab6811f9a33f64a16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ea5ff4f52b555df4c6e5d6ab6811f9a33f64a16"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 6ea5ff4f52b555df4c6e5d6ab6811f9a33f64a16\nparent fad276ad6518a394d065943d458e8c7cce3f997c\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1728472831 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1734350235 +0100\n\nrefactor: Check translatable format strings at compile-time\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQBXpfaSGwbbvyCxxAm8mRCIhdDWWHTc6Uy6QuLCD/dzO94ztW0Hb5iGXDZ4y9Ua+WR\nxH+4jqWbRar+fiJ+xUgQs=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad276ad6518a394d065943d458e8c7cce3f997c",
          "sha": "fad276ad6518a394d065943d458e8c7cce3f997c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fad276ad6518a394d065943d458e8c7cce3f997c"
        }
      ],
      "message": "refactor: Check translatable format strings at compile-time",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-12-16T11:57:15Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-10-09T11:20:31Z"
      },
      "sha": "fa93b05a4d429f682a7b9fe2bbcec2ec3173328c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhZmQ3MmU2ZWI2Y2E4YWNkYjI2ZjNmMDZkNmIyMWVmNTMwOWMzMGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafd72e6eb6ca8acdb26f3f06d6b21ef5309c30e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fafd72e6eb6ca8acdb26f3f06d6b21ef5309c30e",
      "tree": {
        "sha": "d4d3aa85cf9ceba22cb859c92724f373e1a4e5ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4d3aa85cf9ceba22cb859c92724f373e1a4e5ff"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree d4d3aa85cf9ceba22cb859c92724f373e1a4e5ff\nparent fa93b05a4d429f682a7b9fe2bbcec2ec3173328c\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1733570455 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1734350281 +0100\n\nlint: Remove unused and broken format string linter\n\nThe linter has many implementation bugs and missing features.\n\nAlso, it is completely redundant with FormatStringCheck, which\nconstructs from ConstevalFormatString or a runtime format string.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQCNArEUQLyhFfALQFxjGPeJQc9n29JJnonHLUtOhyaJB/HxICtr5uflpb/Q2hXjf9Y\nIkzwkxbYggUHkIQe1Scw8=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa93b05a4d429f682a7b9fe2bbcec2ec3173328c",
          "sha": "fa93b05a4d429f682a7b9fe2bbcec2ec3173328c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa93b05a4d429f682a7b9fe2bbcec2ec3173328c"
        }
      ],
      "message": "lint: Remove unused and broken format string linter\n\nThe linter has many implementation bugs and missing features.\n\nAlso, it is completely redundant with FormatStringCheck, which\nconstructs from ConstevalFormatString or a runtime format string.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-12-16T11:58:01Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-12-07T11:20:55Z"
      },
      "sha": "fafd72e6eb6ca8acdb26f3f06d6b21ef5309c30e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhNmQ5YTI5MTYyZmI1MDgzODUyMDFjOTI2ZWM3NDVkMDcxMDg2ZmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa6d9a29162fb508385201c926ec745d071086fc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6d9a29162fb508385201c926ec745d071086fc",
      "tree": {
        "sha": "a86fb490ad859e54484bc9eb39b8ad03f3def070",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a86fb490ad859e54484bc9eb39b8ad03f3def070"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree a86fb490ad859e54484bc9eb39b8ad03f3def070\nparent fafd72e6eb6ca8acdb26f3f06d6b21ef5309c30e\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1733568084 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1734350447 +0100\n\nrefactor: Introduce struct to hold a runtime format string\n\nThis brings the format types closer to the standard library types:\n\n* FormatStringCheck corresponds to std::basic_format_string, with\n  compile-time checks done via ConstevalFormatString\n* RuntimeFormat corresponds to std::runtime_format, with no compile-time\n  checks done.\n\nAlso, it documents where no compile-time checks are done.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQKFERGOM+e+7IINiq7O18hS40RpksRTFzfsn6qDYTjPpNjxmqGffA5I9AtlWHUdRR/\nyZILZFHscuQ+70lUdNXwI=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafd72e6eb6ca8acdb26f3f06d6b21ef5309c30e",
          "sha": "fafd72e6eb6ca8acdb26f3f06d6b21ef5309c30e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fafd72e6eb6ca8acdb26f3f06d6b21ef5309c30e"
        }
      ],
      "message": "refactor: Introduce struct to hold a runtime format string\n\nThis brings the format types closer to the standard library types:\n\n* FormatStringCheck corresponds to std::basic_format_string, with\n  compile-time checks done via ConstevalFormatString\n* RuntimeFormat corresponds to std::runtime_format, with no compile-time\n  checks done.\n\nAlso, it documents where no compile-time checks are done.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-12-16T12:00:47Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2024-12-07T10:41:24Z"
      },
      "sha": "fa6d9a29162fb508385201c926ec745d071086fc"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15669367150,
      "node_id": "HRFPE_lADOABII586ZhW7DzwAAAAOl95Fu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15669367150",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fa6d9a29162fb508385201c926ec745d071086fc",
      "created_at": "2024-12-16T12:01:44Z"
    },
    {
      "event": "reviewed",
      "id": 2506315529,
      "node_id": "PRR_kwDOABII586VY1cJ",
      "url": null,
      "actor": null,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK fa6d9a29162fb508385201c926ec745d071086fc\r\n\r\n`git range-diff master fadd2e6 fa6d9a2`\r\n\r\n- Fixed typo in commit message\r\n- Changed translate -> translated in lambda, ++correctness",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2506315529",
      "submitted_at": "2024-12-16T14:17:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "review_requested",
      "id": 15671170074,
      "node_id": "RRE_lADOABII586ZhW7DzwAAAAOmExQa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15671170074",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-16T14:17:08Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2509433299,
      "node_id": "PRR_kwDOABII586VkunT",
      "url": null,
      "actor": null,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK fa6d9a29162fb508385201c926ec745d071086fc. Just rebase, spelling fix and suggested rename since last review.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2509433299",
      "submitted_at": "2024-12-17T16:31:16Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    },
    {
      "event": "referenced",
      "id": 15868035702,
      "node_id": "REFE_lADOABII586ZhW7DzwAAAAOxzwJ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15868035702",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "582c58f392e4547f017f913803e4ebe673ab1699",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/582c58f392e4547f017f913803e4ebe673ab1699",
      "created_at": "2025-01-09T13:32:55Z"
    },
    {
      "event": "reviewed",
      "id": 2540319978,
      "node_id": "PRR_kwDOABII586XajTq",
      "url": null,
      "actor": null,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK fa6d9a29162fb508385201c926ec745d071086fc. Apologies for the slow re-review, but I like the latest form of this PR much more than the previous one I looked at, nice! I'll complete my full re-review in the next couple of days.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#pullrequestreview-2540319978",
      "submitted_at": "2025-01-09T16:00:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793398674",
      "pull_request_review_id": 2356947303,
      "id": 1793398674,
      "node_id": "PRRC_kwDOABII585q5ReS",
      "diff_hunk": "@@ -71,7 +71,7 @@ std::string FormatSubVersion(const std::string& name, int nClientVersion, const\n \n std::string CopyrightHolders(const std::string& strPrefix)\n {\n-    const auto copyright_devs = strprintf(_(COPYRIGHT_HOLDERS).translated, COPYRIGHT_HOLDERS_SUBSTITUTION);\n+    const auto copyright_devs = strprintf(_(COPYRIGHT_HOLDERS), COPYRIGHT_HOLDERS_SUBSTITUTION).translated;",
      "path": "src/clientversion.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa22616839903369757069d50aa8f55e246b2b6c",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Pick translated string after format\" (fa22616839903369757069d50aa8f55e246b2b6c)\r\n\r\nCommit message says this change is \"required for a future commit\" but that makes it sound this is because of some implementation detail, when I think the actual reason is that strprintf can't check format string at compile time if it is passed a runtime std::string value.\r\n\r\nUnless I'm missing something would be clearer if commit message just said this passes return value of the underscore function to directly to strprintf so the format string can be checked at compile time.",
      "created_at": "2024-10-09T12:04:42Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793398674",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793398674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793403826",
      "pull_request_review_id": 2356947303,
      "id": 1793403826,
      "node_id": "PRRC_kwDOABII585q5Suy",
      "diff_hunk": "@@ -18,6 +18,48 @@\n #include <vector>\n \n namespace util {\n+template <unsigned num_params>\n+constexpr static void Detail_CheckNumFormatSpecifiers(std::string_view str)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"move-only: Detail_CheckNumFormatSpecifiers and G_TRANSLATION_FUN\" (fa6cef7cf762a33755697dff20b75a9f235e96a9)\r\n\r\nI think it would make more sense to call this function `util::detail::CheckNumFormatSpecifiers` instead of `util::Detail_CheckNumFormatSpecifiers`",
      "created_at": "2024-10-09T12:08:46Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793403826",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793403826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793408147",
      "pull_request_review_id": 2356947303,
      "id": 1793408147,
      "node_id": "PRRC_kwDOABII585q5TyT",
      "diff_hunk": "@@ -17,12 +17,12 @@ template <unsigned NumArgs>\n inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n {\n     // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+    util::Detail_CheckNumFormatSpecifiers<NumArgs>(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"move-only: Detail_CheckNumFormatSpecifiers and G_TRANSLATION_FUN\" (fa6cef7cf762a33755697dff20b75a9f235e96a9)\r\n\r\nIs this comment accurate? If so it seems like if is a more obvious approach to avoiding -Wunused errors would be to write `(void)fmt;` or just drop the `fmt` variable and declare the function as `void PassFmt(util::ConstevalFormatString<NumArgs>)`",
      "created_at": "2024-10-09T12:11:44Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793408147",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793408147"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793416404",
      "pull_request_review_id": 2356947303,
      "id": 1793416404,
      "node_id": "PRRC_kwDOABII585q5VzU",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Mark run-time Untranslated() c_str with std::string\" (fa213aa88dfe9354c314a855c72ea33b3966c5c0)\r\n\r\nI think this change is unfortunate and doesn't make sense. It seems like it could be a avoided with a small scripted diff to replace `strprintf(Untranslated(\"...\"), ...)` with `Untranslated(strprintf(\"...\", ...))` and that replacement would make the code clearer and more consistent anyway.",
      "created_at": "2024-10-09T12:18:00Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793416404",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793416404"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793440780",
      "pull_request_review_id": 2356947303,
      "id": 1793440780,
      "node_id": "PRRC_kwDOABII585q5bwM",
      "diff_hunk": "@@ -89,8 +89,8 @@ BOOST_AUTO_TEST_CASE(check_value_or)\n     BOOST_CHECK_EQUAL(IntFn(10, false).value_or(20), 20);\n     BOOST_CHECK_EQUAL(NoCopyFn(10, true).value_or(20), 10);\n     BOOST_CHECK_EQUAL(NoCopyFn(10, false).value_or(20), 20);\n-    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), true).value_or(Untranslated(\"B\")), Untranslated(\"A\"));\n-    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), false).value_or(Untranslated(\"B\")), Untranslated(\"B\"));\n+    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), true).value_or(Untranslated(\"B\")), bilingual_str{Untranslated(\"A\")});\n+    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), false).value_or(Untranslated(\"B\")), bilingual_str{Untranslated(\"B\")});",
      "path": "src/test/result_tests.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Delay translation of Untranslated() or _() literals\" (aaaa4fb20156b4375d92e1eca4acc90a425a1896)\r\n\r\nLooks like these changes would also not be necessary if using earlier suggestion to replace `strprintf(Untranslated(\"...\"), ...)` with `Untranslated(strprintf(\"...\", ...))` so `Untranslated` definition does not have to change.",
      "created_at": "2024-10-09T12:32:23Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793440780",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793440780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 92,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793459318",
      "pull_request_review_id": 2356947303,
      "id": 1793459318,
      "node_id": "PRRC_kwDOABII585q5gR2",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 24,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fac722986e317861d131f95f6e8cfa8446bf8fba",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Delay translation of Untranslated() or _() literals\" (aaaa4fb20156b4375d92e1eca4acc90a425a1896)\r\n\r\nName `Original` is vague. Would suggest renaming `Original` something like `bilingual_literal` or `bilingual_const` to be consistent with `bilingual_str` and `bilingual_fmt` since it represents a bilingual literal or constant string which is the return value of the underscore function.\r\n\r\nI also think this can just be a normal non-template struct, and `bool translatable` template argument can be dropped if you take eariler suggestion to replace `strprintf(Untranslated(\"...\"), ...)` with `Untranslated(strprintf(\"...\", ...))` so `Untranlated` can continue to return `bilingual_str`",
      "created_at": "2024-10-09T12:45:10Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793459318",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793459318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793462300",
      "pull_request_review_id": 2356947303,
      "id": 1793462300,
      "node_id": "PRRC_kwDOABII585q5hAc",
      "diff_hunk": "@@ -47,8 +73,11 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+consteval auto _(util::Original<true> str) { return str; }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 50,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Delay translation of Untranslated() or _() literals\" (aaaa4fb20156b4375d92e1eca4acc90a425a1896)\r\n\r\nShould be no need for this if take earlier suggestion to replace `strprintf(Untranslated(\"...\"), ...)` with `Untranslated(strprintf(\"...\", ...))`",
      "created_at": "2024-10-09T12:47:03Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793462300",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793462300"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 87,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793473436",
      "pull_request_review_id": 2357070300,
      "id": 1793473436,
      "node_id": "PRRC_kwDOABII585q5juc",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 22,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fabb28f6c8f772d38917a23dfbda706292070ba1",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "typo nit\r\n```suggestion\r\n/** Type to denote whether an original string literal is translatable */\r\n```",
      "created_at": "2024-10-09T12:54:07Z",
      "updated_at": "2024-10-09T16:36:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793473436",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793473436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793473728",
      "pull_request_review_id": 2356947303,
      "id": 1793473728,
      "node_id": "PRRC_kwDOABII585q5jzA",
      "diff_hunk": "@@ -22,6 +41,13 @@ struct bilingual_str {\n     std::string original;\n     std::string translated;\n \n+    bilingual_str() = default;\n+    bilingual_str(std::string original, std::string translated) : original{original}, translated{translated} {}\n+    template <bool translatable>\n+    bilingual_str(util::Original<translatable> original) : original{original.lit}, translated{original.translate()}\n+    {\n+    }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 41,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Delay translation of Untranslated() or _() literals\" (aaaa4fb20156b4375d92e1eca4acc90a425a1896)\r\n\r\nI think it confuses and complicates the design for `bilingual_str` to be aware of `Original` since `bilingual_str` is just a simple, low-level pair of strings that shouldn't know about formatting.\r\n\r\nI think we do need return value of underscore function to be implicitly convertible to `bilingual_str` but that would be more cleanly implemented by adding an `operator bilingual_str` to the Original class.\r\n\r\nAlso (not sure about this, but) it might be nice to add an explicit conversion method to Original class, so we could write something like `_(\"Error opening block database\").str()` instead of  `bilingual_str{_(\"Error opening block database\")}`",
      "created_at": "2024-10-09T12:54:17Z",
      "updated_at": "2024-10-09T13:02:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793473728",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793473728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793488009",
      "pull_request_review_id": 2357070300,
      "id": 1793488009,
      "node_id": "PRRC_kwDOABII585q5nSJ",
      "diff_hunk": "@@ -7,12 +7,31 @@\n \n #include <tinyformat.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n /** Translate a message to the native language of the user. */\n const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 22,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in aaaa4fb20156b4375d92e1eca4acc90a425a1896: seems more straightforward to just extend `ConstevalStringLiteral` instead of creating a new `util::Original`? This would 1) minimize the diff and 2) I find `ConstevalStringLiteral` a much more helpful name than `Original`.",
      "created_at": "2024-10-09T13:02:30Z",
      "updated_at": "2024-10-09T16:36:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793488009",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793488009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793530260",
      "pull_request_review_id": 2357165915,
      "id": 1793530260,
      "node_id": "PRRC_kwDOABII585q5xmU",
      "diff_hunk": "@@ -18,6 +18,48 @@\n #include <vector>\n \n namespace util {\n+template <unsigned num_params>\n+constexpr static void Detail_CheckNumFormatSpecifiers(std::string_view str)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": 1793403826,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think this is possible with a simple diff touching only lines that are already touched in this pull request. If you disagree, I am happy to accept any commit that compiles. I am also happy to review any pull request that achieves this and is split up from this pull request.",
      "created_at": "2024-10-09T13:28:10Z",
      "updated_at": "2024-10-09T13:28:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793530260",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793530260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793533834",
      "pull_request_review_id": 2357172941,
      "id": 1793533834,
      "node_id": "PRRC_kwDOABII585q5yeK",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": 1793416404,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> It seems like it could be a avoided with a small scripted diff to replace `strprintf(Untranslated(\"...\"), ...)` with `Untranslated(strprintf(\"...\", ...))` and that replacement would make the code clearer and more consistent anyway.\r\n\r\nAre you sure? The two are not equivalent, because args can also be a `bilingual_str`, in which case the scripted-diff does not compile. In any case, it seems unrelated to this pull request and I don't see how it \"simplifies\" stuff and it touches different lines anyway, so maybe a separate issue or pull request would be better to explore this?\r\n\r\n> I think this change is unfortunate and doesn't make sense.\r\n\r\nCan you explain which part doesn't make sense and how this relates to `strprintf` and tinyformat at all? I can't see any tfm use in the line you commented on.",
      "created_at": "2024-10-09T13:30:21Z",
      "updated_at": "2024-10-09T13:30:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793533834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793533834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793534710",
      "pull_request_review_id": 2357174546,
      "id": 1793534710,
      "node_id": "PRRC_kwDOABII585q5yr2",
      "diff_hunk": "@@ -89,8 +89,8 @@ BOOST_AUTO_TEST_CASE(check_value_or)\n     BOOST_CHECK_EQUAL(IntFn(10, false).value_or(20), 20);\n     BOOST_CHECK_EQUAL(NoCopyFn(10, true).value_or(20), 10);\n     BOOST_CHECK_EQUAL(NoCopyFn(10, false).value_or(20), 20);\n-    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), true).value_or(Untranslated(\"B\")), Untranslated(\"A\"));\n-    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), false).value_or(Untranslated(\"B\")), Untranslated(\"B\"));\n+    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), true).value_or(Untranslated(\"B\")), bilingual_str{Untranslated(\"A\")});\n+    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), false).value_or(Untranslated(\"B\")), bilingual_str{Untranslated(\"B\")});",
      "path": "src/test/result_tests.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": 1793440780,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(same)",
      "created_at": "2024-10-09T13:30:54Z",
      "updated_at": "2024-10-09T13:30:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793534710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793534710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 92,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793543713",
      "pull_request_review_id": 2357189404,
      "id": 1793543713,
      "node_id": "PRRC_kwDOABII585q504h",
      "diff_hunk": "@@ -71,7 +71,7 @@ std::string FormatSubVersion(const std::string& name, int nClientVersion, const\n \n std::string CopyrightHolders(const std::string& strPrefix)\n {\n-    const auto copyright_devs = strprintf(_(COPYRIGHT_HOLDERS).translated, COPYRIGHT_HOLDERS_SUBSTITUTION);\n+    const auto copyright_devs = strprintf(_(COPYRIGHT_HOLDERS), COPYRIGHT_HOLDERS_SUBSTITUTION).translated;",
      "path": "src/clientversion.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa22616839903369757069d50aa8f55e246b2b6c",
      "in_reply_to_id": 1793398674,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, fixed commit message.",
      "created_at": "2024-10-09T13:36:13Z",
      "updated_at": "2024-10-09T13:36:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793543713",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793543713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793544349",
      "pull_request_review_id": 2357190386,
      "id": 1793544349,
      "node_id": "PRRC_kwDOABII585q51Cd",
      "diff_hunk": "@@ -17,12 +17,12 @@ template <unsigned NumArgs>\n inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n {\n     // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+    util::Detail_CheckNumFormatSpecifiers<NumArgs>(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": 1793408147,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, added unrelated change to fix comment.",
      "created_at": "2024-10-09T13:36:34Z",
      "updated_at": "2024-10-09T13:36:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793544349",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793544349"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793642022",
      "pull_request_review_id": 2357348665,
      "id": 1793642022,
      "node_id": "PRRC_kwDOABII585q6M4m",
      "diff_hunk": "@@ -22,6 +41,13 @@ struct bilingual_str {\n     std::string original;\n     std::string translated;\n \n+    bilingual_str() = default;\n+    bilingual_str(std::string original, std::string translated) : original{original}, translated{translated} {}\n+    template <bool translatable>\n+    bilingual_str(util::Original<translatable> original) : original{original.lit}, translated{original.translate()}\n+    {\n+    }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 41,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": 1793473728,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Also (not sure about this, but) it might be nice to add an explicit conversion method to Original class, so we could write something like `_(\"Error opening block database\").str()` instead of `bilingual_str{_(\"Error opening block database\")}`\r\n\r\nSure, I am happy to add `bilingual_str str()` and `operator bilingual_str()` to the `Original` type and remove the constructors from `bilingual_str`. However, this means that calling `bilingual_str{Original{}}` is now forbidden and one would have to use `()` over `{}`, or call the `.str()` method.\r\n\r\nLet me know if this is fine and I should go ahead and push this diff:\r\n\r\n```diff\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex fb2028281a..c849f83b05 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -1261,7 +1261,7 @@ static ChainstateLoadResult InitAndLoadChainstate(\r\n             return f();\r\n         } catch (const std::exception& e) {\r\n             LogError(\"%s\\n\", e.what());\r\n-            return std::make_tuple(node::ChainstateLoadStatus::FAILURE, bilingual_str{_(\"Error opening block database\")});\r\n+            return std::make_tuple(node::ChainstateLoadStatus::FAILURE, _(\"Error opening block database\").str());\r\n         }\r\n     };\r\n     auto [status, error] = catch_exceptions([&] { return LoadChainstate(chainman, cache_sizes, options); });\r\ndiff --git a/src/test/result_tests.cpp b/src/test/result_tests.cpp\r\nindex 45337c6801..c829d56faa 100644\r\n--- a/src/test/result_tests.cpp\r\n+++ b/src/test/result_tests.cpp\r\n@@ -63,7 +63,7 @@ void ExpectSuccess(const util::Result<T>& result, const bilingual_str& str, Args\r\n {\r\n     ExpectResult(result, true, str);\r\n     BOOST_CHECK_EQUAL(result.has_value(), true);\r\n-    BOOST_CHECK_EQUAL(result.value(), T{std::forward<Args>(args)...});\r\n+    BOOST_CHECK_EQUAL(result.value(), T(std::forward<Args>(args)...));\r\n     BOOST_CHECK_EQUAL(&result.value(), &*result);\r\n }\r\n \r\n@@ -89,8 +89,8 @@ BOOST_AUTO_TEST_CASE(check_value_or)\r\n     BOOST_CHECK_EQUAL(IntFn(10, false).value_or(20), 20);\r\n     BOOST_CHECK_EQUAL(NoCopyFn(10, true).value_or(20), 10);\r\n     BOOST_CHECK_EQUAL(NoCopyFn(10, false).value_or(20), 20);\r\n-    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), true).value_or(Untranslated(\"B\")), bilingual_str{Untranslated(\"A\")});\r\n-    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), false).value_or(Untranslated(\"B\")), bilingual_str{Untranslated(\"B\")});\r\n+    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), true).value_or(Untranslated(\"B\")), Untranslated(\"A\").str());\r\n+    BOOST_CHECK_EQUAL(StrFn(Untranslated(\"A\"), false).value_or(Untranslated(\"B\")), Untranslated(\"B\").str());\r\n }\r\n \r\n BOOST_AUTO_TEST_SUITE_END()\r\ndiff --git a/src/util/translation.h b/src/util/translation.h\r\nindex 08df892733..a06f7b982f 100644\r\n--- a/src/util/translation.h\r\n+++ b/src/util/translation.h\r\n@@ -14,24 +14,6 @@\r\n /** Translate a message to the native language of the user. */\r\n const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\r\n \r\n-namespace util {\r\n-/**\r\n- * Translation function.\r\n- * If no translation function is set, simply return the input.\r\n- */\r\n-inline std::string translate(const char* lit)\r\n-{\r\n-    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\r\n-}\r\n-/** Type to denote whether an orginal string literal is translatable */\r\n-template <bool translatable = true>\r\n-struct Original {\r\n-    const char* const lit;\r\n-    consteval Original(const char* str) : lit{str} { assert(lit); }\r\n-    std::string translate() const { return translatable ? util::translate(lit) : lit; }\r\n-};\r\n-} // namespace util\r\n-\r\n /**\r\n  * Bilingual messages:\r\n  *   - in GUI: user's native language + untranslated (i.e. English)\r\n@@ -41,13 +23,6 @@ struct bilingual_str {\r\n     std::string original;\r\n     std::string translated;\r\n \r\n-    bilingual_str() = default;\r\n-    bilingual_str(std::string original, std::string translated) : original{original}, translated{translated} {}\r\n-    template <bool translatable>\r\n-    bilingual_str(util::Original<translatable> original) : original{original.lit}, translated{original.translate()}\r\n-    {\r\n-    }\r\n-\r\n     bilingual_str& operator+=(const bilingual_str& rhs)\r\n     {\r\n         original += rhs.original;\r\n@@ -73,6 +48,26 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\r\n     return lhs;\r\n }\r\n \r\n+namespace util {\r\n+/**\r\n+ * Translation function.\r\n+ * If no translation function is set, simply return the input.\r\n+ */\r\n+inline std::string translate(const char* lit)\r\n+{\r\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\r\n+}\r\n+/** Type to denote whether an orginal string literal is translatable */\r\n+template <bool translatable = true>\r\n+struct Original {\r\n+    const char* const lit;\r\n+    consteval Original(const char* str) : lit{str} { assert(lit); }\r\n+    std::string translate() const { return translatable ? util::translate(lit) : lit; }\r\n+    bilingual_str str() const { return {lit, translate()}; }\r\n+    operator bilingual_str() const { return str(); }\r\n+};\r\n+} // namespace util\r\n+\r\n consteval auto _(util::Original<true> str) { return str; }\r\n \r\n /** Mark a bilingual_str as untranslated */\r\n",
      "created_at": "2024-10-09T14:32:19Z",
      "updated_at": "2024-10-09T14:32:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793642022",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793642022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793707636",
      "pull_request_review_id": 2357070300,
      "id": 1793707636,
      "node_id": "PRRC_kwDOABII585q6c50",
      "diff_hunk": "@@ -431,7 +431,7 @@ void RestoreWalletActivity::finish()\n         QMessageBox::warning(m_parent_widget, tr(\"Restore wallet warning\"), QString::fromStdString(Join(m_warning_message, Untranslated(\"\\n\")).translated));\n     } else {\n         //: Title of message box which is displayed when the wallet is successfully restored.\n-        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translated));\n+        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translate()));",
      "path": "src/qt/walletcontroller.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(\"Wallet restored successfully \\n\"));\r\n```",
      "created_at": "2024-10-09T15:10:56Z",
      "updated_at": "2024-10-09T16:36:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793707636",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793707636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793744937",
      "pull_request_review_id": 2357070300,
      "id": 1793744937,
      "node_id": "PRRC_kwDOABII585q6mAp",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {\n+    const char* const lit;\n+    consteval Original(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return translatable ? util::translate(lit) : lit; }\n+};\n+template <unsigned num_params>\n+struct bilingual_fmt {\n+    const ConstevalFormatString<num_params> original;\n+    const bool translatable;\n+    template <bool translatable>\n+    consteval bilingual_fmt(Original<translatable> o) : original{o.lit}, translatable{translatable}\n+    {\n+    }\n+    std::string translate() { return translate(original.fmt); }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 37,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This function is currently unused, and it seems incorrectly implemented as it doesn't compile when actually used:\r\n\r\n```\r\nIn file included from ../../src/clientversion.cpp:9:\r\n../../src/util/translation.h:42:48: error: too many arguments to function call, expected 0, have 1\r\n    std::string translate() { return translate(original.fmt); }\r\n                                     ~~~~~~~~~ ^~~~~~~~~~~~\r\n../../src/util/translation.h:106:42: note: in instantiation of member function 'util::bilingual_fmt<1>::translate' requested here\r\n                         tfm::format(fmt.translate(), translate_arg(args, true)...)};\r\n                                         ^\r\n../../src/clientversion.cpp:74:33: note: in instantiation of function template specialization 'tinyformat::format<char[13]>' requested here\r\n    const auto copyright_devs = strprintf(_(COPYRIGHT_HOLDERS), COPYRIGHT_HOLDERS_SUBSTITUTION).translated;\r\n```\r\n\r\nSuggested fix to address both:\r\n\r\n<details>\r\n<summary>git diff on fad211bfef</summary>\r\n\r\n```diff\r\ndiff --git a/src/util/translation.h b/src/util/translation.h\r\nindex 0f230017d9..2de99f386d 100644\r\n--- a/src/util/translation.h\r\n+++ b/src/util/translation.h\r\n@@ -39,7 +39,7 @@ struct bilingual_fmt {\r\n     consteval bilingual_fmt(Original<translatable> o) : original{o.lit}, translatable{translatable}\r\n     {\r\n     }\r\n-    std::string translate() { return translate(original.fmt); }\r\n+    std::string translate() { return util::translate(original.fmt); }\r\n };\r\n } // namespace util\r\n \r\n@@ -103,7 +103,7 @@ bilingual_str format(util::bilingual_fmt<sizeof...(Args)> fmt, const Args&... ar\r\n         }\r\n     }};\r\n     return bilingual_str{tfm::format(fmt.original, translate_arg(args, false)...),\r\n-                         tfm::format(util::translate(fmt.original.fmt), translate_arg(args, true)...)};\r\n+                         tfm::format(fmt.translate(), translate_arg(args, true)...)};\r\n }\r\n } // namespace tinyformat\r\n \r\n\r\n```\r\n</details>",
      "created_at": "2024-10-09T15:34:24Z",
      "updated_at": "2024-10-09T16:36:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793744937",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793744937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793829614",
      "pull_request_review_id": 2357070300,
      "id": 1793829614,
      "node_id": "PRRC_kwDOABII585q66ru",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 23,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I would prefer templating this on an enum `{Translateable,Untranslateable}` for readability over the non-obvious `<{true,false}>` boolean",
      "created_at": "2024-10-09T16:33:25Z",
      "updated_at": "2024-10-09T16:36:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793829614",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793829614"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793837788",
      "pull_request_review_id": 2357676090,
      "id": 1793837788,
      "node_id": "PRRC_kwDOABII585q68rc",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": 1793416404,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793533834\r\n\r\nThanks, it's a good point that Untranslated(strprintf) is not equivalent to strprintf(Untranslated) in all cases. But I think those cases are basically broken because they are substituting non-english string fragments inside english strings. \r\n\r\nI created a branch which removes these (4) cases and adds a scripted-diff to remove the remaining strprintf(Untranslated) uses. This allows a lot of simplifications to this PR:\r\n\r\n- Untranslated function is simpler. Has a single definition, and is not overloaded to return different things depending on whether it is passed a std:::string or a c string.\r\n- \"Original\" struct no longer requires a template parameter, it can be a simple struct.\r\n- This commit can be dropped, the clang tidy commit can be dropped, and there's no need to convert add manual conversions from Untranslated to bilingual_str next commit.\r\n\r\nBranch is https://github.com/ryanofsky/bitcoin/commits/pr/tfmt, commits are:\r\n\r\n- ab4e567f4c8fc2b332e4f620567fab01ede4e1f4 refactor: Don't embed translated strings in untranslated strings.\r\n- d5a8e2b24ff46e0bc5e0fdc733663f5c5527efb0 scripted-diff: Replace strprintf(Untranslated) with Untranslated(strprintf)\r\n- 5e0b4f9df2786ca674df18bd4f8397e3189684be refactor: Check wallet format strings at compile time\r\n- 6183767bd30494876064fc0ffb1a69269d102b5b refactor: Pick translated string after format\r\n- 71d382650b5a0bfb21085e8f6bd22152d2148459 move-only: Detail_CheckNumFormatSpecifiers and G_TRANSLATION_FUN\r\n- 86ea5847925e9baff5c1f02976604a65770e2a72 refactor: Delay translation of Untranslated() or _() literals\r\n- 08bab0447027ace65f18a72c98b1c87683f8f378 refactor: Check translatable format strings at compile-time\r\n",
      "created_at": "2024-10-09T16:38:36Z",
      "updated_at": "2024-10-09T18:33:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793837788",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793837788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793913422",
      "pull_request_review_id": 2357676090,
      "id": 1793913422,
      "node_id": "PRRC_kwDOABII585q7PJO",
      "diff_hunk": "@@ -18,6 +18,48 @@\n #include <vector>\n \n namespace util {\n+template <unsigned num_params>\n+constexpr static void Detail_CheckNumFormatSpecifiers(std::string_view str)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": 1793403826,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793403826\r\n\r\n> I don't think this is possible with a simple diff touching only lines that are already touched in this pull request. If you disagree, I am happy to accept any commit that compiles. I am also happy to review any pull request that achieves this and is split up from this pull request.\r\n\r\nI see what you mean: it's not possible to introduce a util::detail namespace because it would conflict with the util::detail in the hex_literals inline namespace.\r\n\r\nHowever, it doesn't actually make sense for there to be a detail namespace in an inline namespace, and this seemslikely to create problems for callers using the inline namespace, since they may have detail namespaces of their own. This was easy enough to fix so I just fixed it in the suggested branch.",
      "created_at": "2024-10-09T17:37:45Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793913422",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793913422"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793914825",
      "pull_request_review_id": 2357676090,
      "id": 1793914825,
      "node_id": "PRRC_kwDOABII585q7PfJ",
      "diff_hunk": "@@ -17,12 +17,12 @@ template <unsigned NumArgs>\n inline void PassFmt(util::ConstevalFormatString<NumArgs> fmt)\n {\n     // This was already executed at compile-time, but is executed again at run-time to avoid -Wunused.\n-    decltype(fmt)::Detail_CheckNumFormatSpecifiers(fmt.fmt);\n+    util::Detail_CheckNumFormatSpecifiers<NumArgs>(fmt.fmt);",
      "path": "src/test/util_string_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": 1793408147,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793544349\r\n\r\n> Thanks, added unrelated change to fix comment.\r\n\r\nThanks, comment makes sense. I knew there was probably some reason for doing it that way but couldn't figure out what it was.",
      "created_at": "2024-10-09T17:38:59Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793914825",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793914825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793944625",
      "pull_request_review_id": 2357676090,
      "id": 1793944625,
      "node_id": "PRRC_kwDOABII585q7Wwx",
      "diff_hunk": "@@ -22,6 +41,13 @@ struct bilingual_str {\n     std::string original;\n     std::string translated;\n \n+    bilingual_str() = default;\n+    bilingual_str(std::string original, std::string translated) : original{original}, translated{translated} {}\n+    template <bool translatable>\n+    bilingual_str(util::Original<translatable> original) : original{original.lit}, translated{original.translate()}\n+    {\n+    }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 41,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": 1793473728,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793642022\r\n\r\nYes I do think that's better and basically made the same change in my branch, though without the str() method since it seems it makes it a little less clear what return type is.",
      "created_at": "2024-10-09T18:04:59Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793944625",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793944625"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793948085",
      "pull_request_review_id": 2357676090,
      "id": 1793948085,
      "node_id": "PRRC_kwDOABII585q7Xm1",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 23,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": 1793829614,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> nit: I would prefer templating this on an enum `{Translateable,Untranslateable}` for readability over the non-obvious `<{true,false}>` boolean\r\n\r\nNote: with changes in suggested branch it should no longer be necessary for this to be templated.",
      "created_at": "2024-10-09T18:08:11Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793948085",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793948085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793951571",
      "pull_request_review_id": 2357676090,
      "id": 1793951571,
      "node_id": "PRRC_kwDOABII585q7YdT",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {\n+    const char* const lit;\n+    consteval Original(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return translatable ? util::translate(lit) : lit; }\n+};\n+template <unsigned num_params>\n+struct bilingual_fmt {\n+    const ConstevalFormatString<num_params> original;\n+    const bool translatable;\n+    template <bool translatable>\n+    consteval bilingual_fmt(Original<translatable> o) : original{o.lit}, translatable{translatable}\n+    {\n+    }\n+    std::string translate() { return translate(original.fmt); }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 37,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": 1793744937,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793744937\r\n\r\nThis is a good catch, but it seems better to just drop the template method instead of trying to fix it up and use it. It just seems to add complexity and it doesn't seem like there is another use-case for it.",
      "created_at": "2024-10-09T18:11:12Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793951571",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793951571"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793952960",
      "pull_request_review_id": 2357676090,
      "id": 1793952960,
      "node_id": "PRRC_kwDOABII585q7YzA",
      "diff_hunk": "@@ -431,7 +431,7 @@ void RestoreWalletActivity::finish()\n         QMessageBox::warning(m_parent_widget, tr(\"Restore wallet warning\"), QString::fromStdString(Join(m_warning_message, Untranslated(\"\\n\")).translated));\n     } else {\n         //: Title of message box which is displayed when the wallet is successfully restored.\n-        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translated));\n+        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translate()));",
      "path": "src/qt/walletcontroller.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": 1793707636,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793707636\r\n\r\nWould be reasonable to change this but no more change is actually required here with my suggested branch. \r\n\r\n",
      "created_at": "2024-10-09T18:12:22Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793952960",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793952960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793960605",
      "pull_request_review_id": 2357676090,
      "id": 1793960605,
      "node_id": "PRRC_kwDOABII585q7aqd",
      "diff_hunk": "@@ -7,12 +7,31 @@\n \n #include <tinyformat.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n /** Translate a message to the native language of the user. */\n const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 22,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": 1793488009,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793488009\r\n\r\n> in [aaaa4fb](https://github.com/bitcoin/bitcoin/commit/aaaa4fb20156b4375d92e1eca4acc90a425a1896): seems more straightforward to just extend `ConstevalStringLiteral` instead of creating a new `util::Original`? This would 1) minimize the diff and 2) I find `ConstevalStringLiteral` a much more helpful name than `Original`.\r\n\r\nI think this is only a question of naming since `Original` class is replacing `ConstevalStringLiteral` this commit. In by branch I called this ConstEvalTranslated, since it's the type name for values returned from the underscore function, and is not just referring to a generic string literal. But I didn't put much thought into the name and something else may be better.",
      "created_at": "2024-10-09T18:19:08Z",
      "updated_at": "2024-10-09T18:25:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793960605",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1793960605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794944263",
      "pull_request_review_id": 2359460239,
      "id": 1794944263,
      "node_id": "PRRC_kwDOABII585q_K0H",
      "diff_hunk": "@@ -18,6 +18,48 @@\n #include <vector>\n \n namespace util {\n+template <unsigned num_params>\n+constexpr static void Detail_CheckNumFormatSpecifiers(std::string_view str)",
      "path": "src/util/string.h",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa6cef7cf762a33755697dff20b75a9f235e96a9",
      "in_reply_to_id": 1793403826,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, replaced my commit with your 71d382650b5a0bfb21085e8f6bd22152d2148459",
      "created_at": "2024-10-10T08:17:54Z",
      "updated_at": "2024-10-10T08:17:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794944263",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794944263"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 22,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794955960",
      "pull_request_review_id": 2359482258,
      "id": 1794955960,
      "node_id": "PRRC_kwDOABII585q_Nq4",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": 1793416404,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> But I think those cases are basically broken because they are substituting non-english string fragments inside english strings.\r\n\r\nI am not sure I agree. `Untranslated(\"%s:%i \")` doesn't look English to me. To me, it looks like `Untranslated()` is sometimes used to annotate format strings that are valid in any language and do not need to be translated.\r\n\r\nAnd your fix doesn't prevent non-English fragments in English strings anyway, because you are using `operator+` to concatenate the English/`Untranslated` string with a translated (`_()`) string.\r\n\r\nSo I am not sure your suggestion is easy for developers to follow (having to sometimes emulate formatting with `operator+` and conversions, and other times not), but maybe I am missing something.",
      "created_at": "2024-10-10T08:23:26Z",
      "updated_at": "2024-10-10T11:46:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794955960",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794955960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794960822",
      "pull_request_review_id": 2359489744,
      "id": 1794960822,
      "node_id": "PRRC_kwDOABII585q_O22",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 24,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fac722986e317861d131f95f6e8cfa8446bf8fba",
      "in_reply_to_id": 1793459318,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok, renamed to `Translatable<bool _>`. I don't think `bilingual_*` makes sense, because it is only an internally used type to hold the hand of the compiler. The type is supposed to convert into a real `bilingual_str` either directly or via `bilingual_fmt` and tfm.",
      "created_at": "2024-10-10T08:26:36Z",
      "updated_at": "2024-10-10T08:26:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794960822",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794960822"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 28,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794962369",
      "pull_request_review_id": 2359492234,
      "id": 1794962369,
      "node_id": "PRRC_kwDOABII585q_PPB",
      "diff_hunk": "@@ -22,6 +41,13 @@ struct bilingual_str {\n     std::string original;\n     std::string translated;\n \n+    bilingual_str() = default;\n+    bilingual_str(std::string original, std::string translated) : original{original}, translated{translated} {}\n+    template <bool translatable>\n+    bilingual_str(util::Original<translatable> original) : original{original.lit}, translated{original.translate()}\n+    {\n+    }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 41,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": 1793473728,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Yes I do think that's better and basically made the same change in my branch, though without the str() method since it seems it makes it a little less clear what return type is.\r\n\r\nOk, pushed my diff above, with the added `str()` removed again.",
      "created_at": "2024-10-10T08:27:39Z",
      "updated_at": "2024-10-10T08:27:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794962369",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794962369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 44,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794962653",
      "pull_request_review_id": 2359492742,
      "id": 1794962653,
      "node_id": "PRRC_kwDOABII585q_PTd",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 22,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fabb28f6c8f772d38917a23dfbda706292070ba1",
      "in_reply_to_id": 1793473436,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thanks, fixed",
      "created_at": "2024-10-10T08:27:52Z",
      "updated_at": "2024-10-10T08:27:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794962653",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794962653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794969088",
      "pull_request_review_id": 2359503249,
      "id": 1794969088,
      "node_id": "PRRC_kwDOABII585q_Q4A",
      "diff_hunk": "@@ -7,12 +7,31 @@\n \n #include <tinyformat.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n /** Translate a message to the native language of the user. */\n const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 22,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "aaaa4fb20156b4375d92e1eca4acc90a425a1896",
      "in_reply_to_id": 1793488009,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> in [aaaa4fb](https://github.com/bitcoin/bitcoin/commit/aaaa4fb20156b4375d92e1eca4acc90a425a1896): seems more straightforward to just extend `ConstevalStringLiteral` instead of creating a new `util::Original`? This would 1) minimize the diff and 2) I find `ConstevalStringLiteral` a much more helpful name than `Original`.\r\n\r\nAre you sure it would minimize the diff? `Original` needs to deal with the concept of translations, which seems out-of-scope for `ConstevalStringLiteral`. Having two separate types to only deal with the things they care about seems easier. However, I may be missing something and if you find a smaller diff, I am happy to consider it.\r\n\r\nI've renamed the type to `Translatable<bool _>`.",
      "created_at": "2024-10-10T08:32:13Z",
      "updated_at": "2024-10-10T08:32:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794969088",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794969088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 29,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794970457",
      "pull_request_review_id": 2359505471,
      "id": 1794970457,
      "node_id": "PRRC_kwDOABII585q_RNZ",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 23,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": 1793829614,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've renamed the type to `Translatable<bool _>`, which should clear this up without adding an enum?\r\n\r\nThe type is only supposed to be used internally, so I can also wrap it into a `detail::` if you think this is helpful?",
      "created_at": "2024-10-10T08:33:08Z",
      "updated_at": "2024-10-10T08:33:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1794970457",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1794970457"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1795043415",
      "pull_request_review_id": 2359620333,
      "id": 1795043415,
      "node_id": "PRRC_kwDOABII585q_jBX",
      "diff_hunk": "@@ -6,10 +6,43 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>\n \n+#include <cassert>\n #include <functional>\n #include <string>\n \n+/** Translate a message to the native language of the user. */\n+const extern std::function<std::string(const char*)> G_TRANSLATION_FUN;\n+\n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an orginal string literal is translatable */\n+template <bool translatable = true>\n+struct Original {\n+    const char* const lit;\n+    consteval Original(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return translatable ? util::translate(lit) : lit; }\n+};\n+template <unsigned num_params>\n+struct bilingual_fmt {\n+    const ConstevalFormatString<num_params> original;\n+    const bool translatable;\n+    template <bool translatable>\n+    consteval bilingual_fmt(Original<translatable> o) : original{o.lit}, translatable{translatable}\n+    {\n+    }\n+    std::string translate() { return translate(original.fmt); }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 37,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": 1793744937,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Suggested fix to address both:\r\n\r\nGood catch. Though, I don't think the fix fixes all issues. There was a third that the `translatable` member field was unused. I've pushed a fix to fix all three issues.",
      "created_at": "2024-10-10T09:20:15Z",
      "updated_at": "2024-10-10T09:20:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1795043415",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1795043415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1795269088",
      "pull_request_review_id": 2360058562,
      "id": 1795269088,
      "node_id": "PRRC_kwDOABII585rAaHg",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": 1793416404,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "To extend a bit: Previously (and after my pull right now), it was easy to toggle between translation and non-translation by replacing `_` with `Untranslated` (or vice-versa):\r\n\r\n```diff\r\n-strprintf(Untranslated(\"Cannot create database file %s\"), filename);\r\n+strprintf(           _(\"Cannot create database file %s\"), filename);\r\n```\r\n\r\nWith your change, the function call order has to be changed as well.\r\n\r\n\r\n",
      "created_at": "2024-10-10T11:45:14Z",
      "updated_at": "2024-10-10T11:45:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1795269088",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1795269088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796917617",
      "pull_request_review_id": 2362745062,
      "id": 1796917617,
      "node_id": "PRRC_kwDOABII585rGslx",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": 1793416404,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1795269088\r\n\r\nI don't see ability to swap `_` and `Untranslated` as a real benefit here, because it is pretty easy to switch between translated and non translated format strings either way, and if you are doing that it probably makes sense to actually look at format string arguments and see if they should be translated or untranslated for consistency. The PR also already loses the ability to swap between `_` and `Untranslated` in other places anyway since `bilingual_str` and `Translatable` structs are incompatible.\r\n\r\nYou are right that `Untranslated(\"%s:%i \")` is not an english string and the commit message in ab4e567f4c8fc2b332e4f620567fab01ede4e1f4 wasn't doing an a good job of describing changes there. I think most of the 54 cases changed in d5a8e2b24ff46e0bc5e0fdc733663f5c5527efb0 are untranslated English strings though, and having a compile time check to make sure non-english strings aren't inserted accidentally inside them is a good thing.\r\n\r\nIf you really disagree with this and prefer strprintf(Untranslated(...)) over Untranslated(strprintf(...)) I think we could also go in that direction with the opposite scripted-diff. I just think trying to support both and making `Untranslated` function return different things when it is called with a `char*` instead of `std::string`, and having to add extra casts here to work around that in this commit is unfortunate.\r\n\r\nIt seems like implementation of this PR could be simpler, API can be simpler, and code can be more consistent by having Untranslated return one thing or the other instead of both.",
      "created_at": "2024-10-11T12:54:57Z",
      "updated_at": "2024-10-11T13:53:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1796917617",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796917617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796975768",
      "pull_request_review_id": 2362745062,
      "id": 1796975768,
      "node_id": "PRRC_kwDOABII585rG6yY",
      "diff_hunk": "@@ -47,8 +48,30 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an original string literal is translatable */\n+template <bool translatable = true>\n+struct Translatable {\n+    const char* const lit;\n+    consteval Translatable(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return translatable ? util::translate(lit) : lit; }\n+    operator bilingual_str() const { return {lit, translate()}; }\n+};\n+} // namespace util\n+\n+consteval auto _(util::Translatable<true> str) { return str; }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 31,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa62737ae398bd56ef9e68b8d0a4d217cfcc532b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Delay translation of Untranslated() or _() literals\" (fa62737ae398bd56ef9e68b8d0a4d217cfcc532b)\r\n\r\nThinking about this more it seems like `_` function does not be consteval, and could just return a template type that inherits from `bilingual_str`, and includes the number of format specifiers included in the string as part of its type information. This would be nice because runtime semantics of `_` would be unchanged, it would still do the translation at time it is called, and there would be no need to make any `translated` -> `translate()` replacements. \r\n\r\nI think the main downside to this approach is would be need to refactor CheckNumFormatSpecifiers but there would be fewer changes overall. The other downside would be that _ would need to be aware the translated strings might be a format string and count the specifiers instead of just passing it along blindly. Neither downside would have to exist if c++ just allowed arguments to consteval functions to be treated as compile time constants, which they are by definition, but they did not do this (I think because stylistically they want to see compile-time arguments passed as `<>` arguments not `()` arguments.)\r\n\r\nNot sure about any of this, though, would need to experiment.\r\n\r\n",
      "created_at": "2024-10-11T13:40:14Z",
      "updated_at": "2024-10-11T13:55:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1796975768",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1796975768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1797358825",
      "pull_request_review_id": 2363462521,
      "id": 1797358825,
      "node_id": "PRRC_kwDOABII585rIYTp",
      "diff_hunk": "@@ -47,8 +48,30 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an original string literal is translatable */\n+template <bool translatable = true>\n+struct Translatable {\n+    const char* const lit;\n+    consteval Translatable(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return translatable ? util::translate(lit) : lit; }\n+    operator bilingual_str() const { return {lit, translate()}; }\n+};\n+} // namespace util\n+\n+consteval auto _(util::Translatable<true> str) { return str; }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 31,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa62737ae398bd56ef9e68b8d0a4d217cfcc532b",
      "in_reply_to_id": 1796975768,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1796975768\r\n\r\n> Not sure about any of this, though, would need to experiment.\r\n\r\nTo follow up, I was able to implement an alternate approach in #31074 that lets `_` and `Untranslated` always return `bilingual_str` instances that you can access with `.original` and `.translated` instead of `.lit` and `translate()`. The resulting API seems more clean and consistent, but it does require messier syntax when calling strprintf (implmented in a scripted diff).\r\n\r\nI'm not really sure about tradeoffs of messier syntax vs cleaner API, and I'm guessing there's some other way to make the API more consistent.\r\n\r\n",
      "created_at": "2024-10-11T19:39:59Z",
      "updated_at": "2024-10-11T19:40:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1797358825",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1797358825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 81,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1797526070",
      "pull_request_review_id": 2363712886,
      "id": 1797526070,
      "node_id": "PRRC_kwDOABII585rJBI2",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": 1793416404,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793837788\r\n\r\nOpened #31072 to implement suggested simplification. Marking this thread resolved since it it's not meant to block this PR in any case.",
      "created_at": "2024-10-12T01:46:40Z",
      "updated_at": "2024-10-12T01:54:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1797526070",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1797526070"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1797526861",
      "pull_request_review_id": 2363712886,
      "id": 1797526861,
      "node_id": "PRRC_kwDOABII585rJBVN",
      "diff_hunk": "@@ -431,7 +431,7 @@ void RestoreWalletActivity::finish()\n         QMessageBox::warning(m_parent_widget, tr(\"Restore wallet warning\"), QString::fromStdString(Join(m_warning_message, Untranslated(\"\\n\")).translated));\n     } else {\n         //: Title of message box which is displayed when the wallet is successfully restored.\n-        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translated));\n+        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translate()));",
      "path": "src/qt/walletcontroller.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": 1793707636,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793707636\r\n\r\nSimplified this further in 6fb39655c5cd2bebad902d271d1edae64b817d2b from #31072. It might just be a bug that this string is not translated, and there also seems to be trailing whitespace in the string. Current commit just simplifies code and keeps existing behavior though.",
      "created_at": "2024-10-12T01:52:13Z",
      "updated_at": "2024-10-12T01:54:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1797526861",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1797526861"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815481584",
      "pull_request_review_id": 2393356530,
      "id": 1815481584,
      "node_id": "PRRC_kwDOABII585sNgzw",
      "diff_hunk": "@@ -431,7 +431,7 @@ void RestoreWalletActivity::finish()\n         QMessageBox::warning(m_parent_widget, tr(\"Restore wallet warning\"), QString::fromStdString(Join(m_warning_message, Untranslated(\"\\n\")).translated));\n     } else {\n         //: Title of message box which is displayed when the wallet is successfully restored.\n-        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translated));\n+        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translate()));",
      "path": "src/qt/walletcontroller.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": 1793707636,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't like this suggestion. If you disagree, you can continue discussion in https://github.com/bitcoin/bitcoin/pull/31072#discussion_r1801093580",
      "created_at": "2024-10-24T17:44:41Z",
      "updated_at": "2024-10-24T17:44:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1815481584",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1815481584"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868949895",
      "pull_request_review_id": 2477648972,
      "id": 1868949895,
      "node_id": "PRRC_kwDOABII585vZemH",
      "diff_hunk": "@@ -44,13 +49,45 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an original string literal is translatable */\n+template <bool translatable = true>\n+struct Translatable {\n+    const char* const lit;\n+    consteval Translatable(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return translatable ? util::translate(lit) : lit; }\n+    operator bilingual_str() const { return {lit, translate()}; }\n+};\n+template <unsigned num_params>\n+struct bilingual_fmt {\n+    const ConstevalFormatString<num_params> original;\n+    const bool translatable;\n+    template <bool translatable>\n+    consteval bilingual_fmt(Translatable<translatable> o) : original{o.lit}, translatable{translatable}\n+    {\n+    }\n+    std::string translate() { return translatable ? util::translate(original.fmt) : original.fmt; }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 45,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "f4df783f1ca22d96476d52ec5d1929547691ba13",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n    std::string translate() const { return translatable ? util::translate(original.fmt) : original.fmt; }\r\n```",
      "created_at": "2024-12-04T08:29:21Z",
      "updated_at": "2024-12-04T14:15:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1868949895",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868949895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869532227",
      "pull_request_review_id": 2477648972,
      "id": 1869532227,
      "node_id": "PRRC_kwDOABII585vbsxD",
      "diff_hunk": "@@ -12,10 +12,10 @@ BOOST_AUTO_TEST_SUITE(translation_tests)\n BOOST_AUTO_TEST_CASE(translation_namedparams)\n {\n     bilingual_str arg{\"original\", \"translated\"};\n-    bilingual_str format{\"original [%s]\", \"translated [%s]\"};\n+    constexpr auto format{Untranslated(\"original [%s]\")};",
      "path": "src/test/translation_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "f4df783f1ca22d96476d52ec5d1929547691ba13",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Can't we just be explicit here in the test to document what is happening, since it is slightly tricky?\r\n```suggestion\r\n    constexpr util::Translatable<false> format{Untranslated(\"original [%s]\")};\r\n```",
      "created_at": "2024-12-04T13:44:06Z",
      "updated_at": "2024-12-04T14:15:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1869532227",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869532227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873666542",
      "pull_request_review_id": 2485351479,
      "id": 1873666542,
      "node_id": "PRRC_kwDOABII585vreHu",
      "diff_hunk": "@@ -107,7 +107,7 @@ std::optional<ConfigError> InitConfig(ArgsManager& args, SettingsAbortFn setting\n             }\n         }\n     } catch (const std::exception& e) {\n-        return ConfigError{ConfigStatus::FAILED, Untranslated(e.what())};\n+        return ConfigError{ConfigStatus::FAILED, Untranslated(std::string{e.what()})};",
      "path": "src/common/init.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa213aa88dfe9354c314a855c72ea33b3966c5c0",
      "in_reply_to_id": 1793416404,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks. Now that it is merged, I went ahead and pushed commit 08bab0447027ace65f18a72c98b1c87683f8f378 from https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1793837788 into this pull (rebased)",
      "created_at": "2024-12-06T16:32:32Z",
      "updated_at": "2024-12-06T16:39:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1873666542",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873666542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873668268",
      "pull_request_review_id": 2485351479,
      "id": 1873668268,
      "node_id": "PRRC_kwDOABII585vreis",
      "diff_hunk": "@@ -431,7 +431,7 @@ void RestoreWalletActivity::finish()\n         QMessageBox::warning(m_parent_widget, tr(\"Restore wallet warning\"), QString::fromStdString(Join(m_warning_message, Untranslated(\"\\n\")).translated));\n     } else {\n         //: Title of message box which is displayed when the wallet is successfully restored.\n-        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translated));\n+        QMessageBox::information(m_parent_widget, tr(\"Restore wallet message\"), QString::fromStdString(Untranslated(\"Wallet restored successfully \\n\").translate()));",
      "path": "src/qt/walletcontroller.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fad211bfef2bc1a85bfc6f84bd5e35772249a4b6",
      "in_reply_to_id": 1793707636,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The hunk isn't needed anymore, so I dropped it.",
      "created_at": "2024-12-06T16:34:04Z",
      "updated_at": "2024-12-06T16:39:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1873668268",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873668268"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873669842",
      "pull_request_review_id": 2485351479,
      "id": 1873669842,
      "node_id": "PRRC_kwDOABII585vre7S",
      "diff_hunk": "@@ -12,10 +12,10 @@ BOOST_AUTO_TEST_SUITE(translation_tests)\n BOOST_AUTO_TEST_CASE(translation_namedparams)\n {\n     bilingual_str arg{\"original\", \"translated\"};\n-    bilingual_str format{\"original [%s]\", \"translated [%s]\"};\n+    constexpr auto format{Untranslated(\"original [%s]\")};",
      "path": "src/test/translation_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "f4df783f1ca22d96476d52ec5d1929547691ba13",
      "in_reply_to_id": 1869532227,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think the type is an implementation detail and doesn't matter, as long as it compiles. One could even inline this line into the next line, but I wanted to keep the diff minimal.",
      "created_at": "2024-12-06T16:35:30Z",
      "updated_at": "2024-12-06T16:39:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1873669842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873669842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873671252",
      "pull_request_review_id": 2485351479,
      "id": 1873671252,
      "node_id": "PRRC_kwDOABII585vrfRU",
      "diff_hunk": "@@ -44,13 +49,45 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+/** Type to denote whether an original string literal is translatable */\n+template <bool translatable = true>\n+struct Translatable {\n+    const char* const lit;\n+    consteval Translatable(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return translatable ? util::translate(lit) : lit; }\n+    operator bilingual_str() const { return {lit, translate()}; }\n+};\n+template <unsigned num_params>\n+struct bilingual_fmt {\n+    const ConstevalFormatString<num_params> original;\n+    const bool translatable;\n+    template <bool translatable>\n+    consteval bilingual_fmt(Translatable<translatable> o) : original{o.lit}, translatable{translatable}\n+    {\n+    }\n+    std::string translate() { return translatable ? util::translate(original.fmt) : original.fmt; }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 45,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "f4df783f1ca22d96476d52ec5d1929547691ba13",
      "in_reply_to_id": 1868949895,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "removed the function instead\r\n\r\n",
      "created_at": "2024-12-06T16:36:50Z",
      "updated_at": "2024-12-06T16:43:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1873671252",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873671252"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 77,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874039278",
      "pull_request_review_id": 2485972387,
      "id": 1874039278,
      "node_id": "PRRC_kwDOABII585vs5Hu",
      "diff_hunk": "@@ -47,13 +49,41 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+\n+struct Translatable {\n+    const char* const lit;\n+    consteval Translatable(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return util::translate(lit); }\n+    operator bilingual_str() const { return {lit, translate()}; }\n+};\n+\n+template <unsigned num_params>\n+struct bilingual_fmt {\n+    const ConstevalFormatString<num_params> original;\n+    consteval bilingual_fmt(Translatable o) : original{o.lit}\n+    {\n+    }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 36,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa6b1d2a26e25e3e6a4ef37835426371001d01ae",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Since previous review, this constructors function prototype has shrunk enough to keep it on one line, as you are doing for `Translatable` just above.\r\n```suggestion\r\n    consteval bilingual_fmt(Translatable o) : original{o.lit} {}\r\n```",
      "created_at": "2024-12-06T22:00:42Z",
      "updated_at": "2024-12-06T22:25:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1874039278",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874039278"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 72,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874053196",
      "pull_request_review_id": 2485972387,
      "id": 1874053196,
      "node_id": "PRRC_kwDOABII585vs8hM",
      "diff_hunk": "@@ -47,13 +49,41 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+\n+struct Translatable {\n+    const char* const lit;\n+    consteval Translatable(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return util::translate(lit); }\n+    operator bilingual_str() const { return {lit, translate()}; }\n+};\n+\n+template <unsigned num_params>\n+struct bilingual_fmt {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 32,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa6b1d2a26e25e3e6a4ef37835426371001d01ae",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Use Consistent naming convention in newer code as recommended by developer-notes?\r\n```suggestion\r\nstruct BilingualFmt {\r\n```",
      "created_at": "2024-12-06T22:13:40Z",
      "updated_at": "2024-12-06T22:25:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1874053196",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874053196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874370130",
      "pull_request_review_id": 2486451328,
      "id": 1874370130,
      "node_id": "PRRC_kwDOABII585vuJ5S",
      "diff_hunk": "@@ -47,13 +49,41 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+\n+struct Translatable {\n+    const char* const lit;\n+    consteval Translatable(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return util::translate(lit); }\n+    operator bilingual_str() const { return {lit, translate()}; }\n+};\n+\n+template <unsigned num_params>\n+struct bilingual_fmt {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 32,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa6b1d2a26e25e3e6a4ef37835426371001d01ae",
      "in_reply_to_id": 1874053196,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, done",
      "created_at": "2024-12-07T08:30:05Z",
      "updated_at": "2024-12-07T08:30:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1874370130",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874370130"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 70,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874370136",
      "pull_request_review_id": 2486451338,
      "id": 1874370136,
      "node_id": "PRRC_kwDOABII585vuJ5Y",
      "diff_hunk": "@@ -47,13 +49,41 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+\n+struct Translatable {\n+    const char* const lit;\n+    consteval Translatable(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return util::translate(lit); }\n+    operator bilingual_str() const { return {lit, translate()}; }\n+};\n+\n+template <unsigned num_params>\n+struct bilingual_fmt {\n+    const ConstevalFormatString<num_params> original;\n+    consteval bilingual_fmt(Translatable o) : original{o.lit}\n+    {\n+    }",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 36,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa6b1d2a26e25e3e6a4ef37835426371001d01ae",
      "in_reply_to_id": 1874039278,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, clang-formatted",
      "created_at": "2024-12-07T08:30:09Z",
      "updated_at": "2024-12-07T08:30:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1874370136",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874370136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": 72,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 74,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874413579",
      "pull_request_review_id": 2486495985,
      "id": 1874413579,
      "node_id": "PRRC_kwDOABII585vuUgL",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 4,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```diff\r\n+// Added for Bitcoin Core.\r\n```\r\nMaybe use some comment style to group the modifications to avoid repeating this, similar to https://www.doxygen.nl/manual/grouping.html",
      "created_at": "2024-12-07T13:04:42Z",
      "updated_at": "2024-12-07T13:30:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1874413579",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874413579"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874415200",
      "pull_request_review_id": 2486495985,
      "id": 1874415200,
      "node_id": "PRRC_kwDOABII585vuU5g",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just realized there's some risk of dangling pointers.\r\n```suggestion\r\n    FormatStringCheck(const RuntimeFormat& run LIFETIMEBOUND) : fmt{run.fmt.c_str()} {}\r\n```\r\n\r\nAlso, if you're going to rename this one `str`->`run`, maybe call the other one `comp` or something?",
      "created_at": "2024-12-07T13:18:11Z",
      "updated_at": "2024-12-07T13:30:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1874415200",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874415200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874415871",
      "pull_request_review_id": 2486495985,
      "id": 1874415871,
      "node_id": "PRRC_kwDOABII585vuVD_",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 7,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Noticed that the `std`-version uses `string_view`. Maybe add a note about why you didn't go with that in the commit message, or consider switching.",
      "created_at": "2024-12-07T13:23:54Z",
      "updated_at": "2024-12-07T13:30:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1874415871",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874415871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874983640",
      "pull_request_review_id": 2487203986,
      "id": 1874983640,
      "node_id": "PRRC_kwDOABII585vwfrY",
      "diff_hunk": "@@ -47,13 +49,39 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+\n+struct Translatable {\n+    const char* const lit;\n+    consteval Translatable(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return util::translate(lit); }\n+    operator bilingual_str() const { return {lit, translate()}; }\n+};\n+\n+template <unsigned num_params>\n+struct BilingualFmt {\n+    const ConstevalFormatString<num_params> original;\n+    consteval BilingualFmt(Translatable o) : original{o.lit} {}\n+};\n+} // namespace util\n+\n+consteval auto _(util::Translatable str) { return str; }\n+\n /** Mark a bilingual_str as untranslated */\n inline bilingual_str Untranslated(std::string original) { return {original, original}; }",
      "path": "src/util/translation.h",
      "position": 50,
      "original_position": 41,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "slightly unrelated: can we use a const reference here instead?\r\n```suggestion\r\ninline bilingual_str Untranslated(const std::string& original) { return {original, original}; }\r\n```",
      "created_at": "2024-12-08T17:17:20Z",
      "updated_at": "2024-12-08T17:17:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1874983640",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1874983640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1875729099",
      "pull_request_review_id": 2488369310,
      "id": 1875729099,
      "node_id": "PRRC_kwDOABII585vzVrL",
      "diff_hunk": "@@ -47,13 +49,39 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+\n+struct Translatable {\n+    const char* const lit;\n+    consteval Translatable(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return util::translate(lit); }\n+    operator bilingual_str() const { return {lit, translate()}; }\n+};\n+\n+template <unsigned num_params>\n+struct BilingualFmt {\n+    const ConstevalFormatString<num_params> original;\n+    consteval BilingualFmt(Translatable o) : original{o.lit} {}\n+};\n+} // namespace util\n+\n+consteval auto _(util::Translatable str) { return str; }\n+\n /** Mark a bilingual_str as untranslated */\n inline bilingual_str Untranslated(std::string original) { return {original, original}; }",
      "path": "src/util/translation.h",
      "position": 50,
      "original_position": 41,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874983640,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, it is possible, but adding `const` prevents a move, if someone wanted to write `return {original, std::move(original)};`",
      "created_at": "2024-12-09T10:23:13Z",
      "updated_at": "2024-12-09T10:23:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1875729099",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1875729099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1875729389",
      "pull_request_review_id": 2488369776,
      "id": 1875729389,
      "node_id": "PRRC_kwDOABII585vzVvt",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 7,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415871,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, added comment",
      "created_at": "2024-12-09T10:23:26Z",
      "updated_at": "2024-12-09T10:23:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1875729389",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1875729389"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 185,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1875730141",
      "pull_request_review_id": 2488371311,
      "id": 1875730141,
      "node_id": "PRRC_kwDOABII585vzV7d",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415200,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> LIFETIMEBOUND\r\n\r\nAdded `=delete` as an alternative instead.",
      "created_at": "2024-12-09T10:24:01Z",
      "updated_at": "2024-12-09T10:24:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1875730141",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1875730141"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1875730442",
      "pull_request_review_id": 2488371703,
      "id": 1875730442,
      "node_id": "PRRC_kwDOABII585vzWAK",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 4,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874413579,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, done",
      "created_at": "2024-12-09T10:24:11Z",
      "updated_at": "2024-12-09T10:24:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1875730442",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1875730442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 182,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1876852405",
      "pull_request_review_id": 2490255435,
      "id": 1876852405,
      "node_id": "PRRC_kwDOABII585v3n61",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415200,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1875730141\r\n\r\nDelete seems good, but I think maybe LIFETIMEBOUND could still be helpful because `fmt` member here is being assigned the result of `run.fmt.c_str()`, so the `RuntimeFormat` object lifetime needs to be at least as long as `FormatStringCheck` object lifetime, and maybe LIFETIMEBOUND could help enforce this? I don't know all of the details about how LIFETIMEBOUND works though, so this is just a question.",
      "created_at": "2024-12-09T22:28:54Z",
      "updated_at": "2024-12-09T22:32:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1876852405",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1876852405"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1877573436",
      "pull_request_review_id": 2491410853,
      "id": 1877573436,
      "node_id": "PRRC_kwDOABII585v6X88",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415200,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, I forgot to remove the `&` in this line here, for it to have any effect. (force pushed to fix it)\r\n\r\nMy understanding is that the only way to construct a `RuntimeFormat`, whose copy and move ctors are deleted, would be in the `FormatStringCheck(RuntimeFormat run)` constructor itself. Thus, the string will be part of the same full-expression, and there are no lifetimebound issues coming from the runtime format string.\r\n\r\nObviously there will still be lifetime issues from the `FormatStringCheck`, but they exist even in C++26. See https://godbolt.org/z/Y4oxr3jxb . Also, they are not detected by the liftetimebound attribute, currently. My understanding is that temporal safety in C++ is still being worked on. \r\n\r\nIf you want, I can delete the copy/move ctors of `FormatStringCheck` as well, but this seems like a pre-existing issue, which will also be re-introduced when switching to C++26 formatting.",
      "created_at": "2024-12-10T08:25:36Z",
      "updated_at": "2024-12-10T08:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1877573436",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1877573436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878735480",
      "pull_request_review_id": 2493424034,
      "id": 1878735480,
      "node_id": "PRRC_kwDOABII585v-zp4",
      "diff_hunk": "@@ -47,13 +49,39 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+\n+struct Translatable {\n+    const char* const lit;\n+    consteval Translatable(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return util::translate(lit); }\n+    operator bilingual_str() const { return {lit, translate()}; }\n+};\n+\n+template <unsigned num_params>\n+struct BilingualFmt {\n+    const ConstevalFormatString<num_params> original;\n+    consteval BilingualFmt(Translatable o) : original{o.lit} {}\n+};\n+} // namespace util\n+\n+consteval auto _(util::Translatable str) { return str; }\n+\n /** Mark a bilingual_str as untranslated */\n inline bilingual_str Untranslated(std::string original) { return {original, original}; }",
      "path": "src/util/translation.h",
      "position": 50,
      "original_position": 41,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874983640,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Undefined parameter evaluation order would make it unclear which of them should be explicitly moved though?\r\nhttps://stackoverflow.com/a/2934909\r\n\r\nI hope the compiler introduces an implicit move for whichever parameter it deems to be the last use of the variable.",
      "created_at": "2024-12-10T19:48:49Z",
      "updated_at": "2024-12-10T19:48:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1878735480",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878735480"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878758781",
      "pull_request_review_id": 2493462341,
      "id": 1878758781,
      "node_id": "PRRC_kwDOABII585v-5V9",
      "diff_hunk": "@@ -47,13 +49,39 @@ inline bilingual_str operator+(bilingual_str lhs, const bilingual_str& rhs)\n     return lhs;\n }\n \n+namespace util {\n+/**\n+ * Translation function.\n+ * If no translation function is set, simply return the input.\n+ */\n+inline std::string translate(const char* lit)\n+{\n+    return G_TRANSLATION_FUN ? G_TRANSLATION_FUN(lit) : lit;\n+}\n+\n+struct Translatable {\n+    const char* const lit;\n+    consteval Translatable(const char* str) : lit{str} { assert(lit); }\n+    std::string translate() const { return util::translate(lit); }\n+    operator bilingual_str() const { return {lit, translate()}; }\n+};\n+\n+template <unsigned num_params>\n+struct BilingualFmt {\n+    const ConstevalFormatString<num_params> original;\n+    consteval BilingualFmt(Translatable o) : original{o.lit} {}\n+};\n+} // namespace util\n+\n+consteval auto _(util::Translatable str) { return str; }\n+\n /** Mark a bilingual_str as untranslated */\n inline bilingual_str Untranslated(std::string original) { return {original, original}; }",
      "path": "src/util/translation.h",
      "position": 50,
      "original_position": 41,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874983640,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Undefined parameter evaluation order would make it unclear which of them should be explicitly moved though?\r\n\r\nStarting with C++17, `return {original, std::move(original)};` is both legal and correct. See https://timsong-cpp.github.io/cppwp/n4868/dcl.init.general#18\r\n\r\nHowever, I'd leave this as-is for now, as the performance shouldn't matter here, even if the compiler can't optimize it out.",
      "created_at": "2024-12-10T20:07:00Z",
      "updated_at": "2024-12-10T20:07:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1878758781",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878758781"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878803831",
      "pull_request_review_id": 2493519773,
      "id": 1878803831,
      "node_id": "PRRC_kwDOABII585v_EV3",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415200,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Reverted to the previously reviewed version. I don't think LIFETIMEBOUND is useful here, because:\r\n\r\n* It is still very limited in what it can detect, so adding the include here seems overkill, also given that `RuntimeFormat` strings should be rare either way, and even rarer for developers to be touched.\r\n* Anything it detects should be detected by asan as well, so bad code can't make it in either way.\r\n* As mentioned in the previous comment, the annotation isn't present in C++26 right now, either.\r\n* Once MSVC has fixed their bug to implement C++17 copy elision lifetimes correctly (https://eel.is/c++draft/class.copy.elision#1), this wouldn't be needed and the code can be changed to fad431e548 again.\r\n\r\n\r\n<!-- https://godbolt.org/z/Tfa5rsTab",
      "created_at": "2024-12-10T20:27:37Z",
      "updated_at": "2024-12-10T20:54:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1878803831",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878803831"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879234793",
      "pull_request_review_id": 2494156565,
      "id": 1879234793,
      "node_id": "PRRC_kwDOABII585wAtjp",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415200,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1878803831\r\n\r\nI'm still not sure I see any downsides to adding LIFETIMEBOUND. It seems like a great way to document the fact that these functions require long-lived references, and to provide instant feedback for code and design bugs without needing to create a PR and wait for an ASAN job to fail.\r\n\r\nI also don't understand why the additional temporaries and moves and elisions in fad431e548a694600a3fe212127052e5f922a622 would preferable to using references and creating the minimum number of objects with straightforward full-expression lifetimes.\r\n\r\nfad431e548a694600a3fe212127052e5f922a622 also seems unsafe because it doesn't prevent lvalues from being passed to the FormatStringCheck constructor, and if an lvalue (or any other argument incompatible with copy elision) is passed it will result in `FormatStringCheck::fmt` being assigned a dangling pointer.\r\n\r\nWould suggest following changes as a simpler alternative:\r\n\r\n```diff\r\n--- a/src/tinyformat.h\r\n+++ b/src/tinyformat.h\r\n@@ -141,6 +141,7 @@ namespace tfm = tinyformat;\r\n \r\n //------------------------------------------------------------------------------\r\n // Implementation details.\r\n+#include <attributes.h> // Added for Bitcoin Core\r\n #include <algorithm>\r\n #include <iostream>\r\n #include <sstream>\r\n@@ -181,10 +182,8 @@ namespace tinyformat {\r\n \r\n // Added for Bitcoin Core. Similar to std::runtime_format from C++26.\r\n struct RuntimeFormat {\r\n-    std::string fmt; // Not a string view, because tinyformat requires a c_str\r\n-    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\r\n-    RuntimeFormat(const RuntimeFormat&) = delete;\r\n-    RuntimeFormat& operator=(const RuntimeFormat&) = delete;\r\n+    const std::string& fmt; // Not a string view, because tinyformat requires a c_str\r\n+    explicit RuntimeFormat(LIFETIMEBOUND const std::string& str) : fmt{str} {}\r\n };\r\n \r\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\r\n@@ -193,7 +192,7 @@ struct RuntimeFormat {\r\n template <unsigned num_params>\r\n struct FormatStringCheck {\r\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\r\n-    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}\r\n+    FormatStringCheck(LIFETIMEBOUND const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}\r\n     FormatStringCheck(util::ConstevalFormatString<num_params> str) : fmt{str.fmt} {}\r\n     operator const char*() { return fmt; }\r\n     const char* fmt;\r\n```\r\n\r\n",
      "created_at": "2024-12-11T02:31:44Z",
      "updated_at": "2024-12-11T02:55:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1879234793",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879234793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879237545",
      "pull_request_review_id": 2494156565,
      "id": 1879237545,
      "node_id": "PRRC_kwDOABII585wAuOp",
      "diff_hunk": "@@ -9,13 +9,21 @@\n \n BOOST_AUTO_TEST_SUITE(translation_tests)\n \n+static TranslateFn translate{[](const char * str) {  return strprintf(\"t(%s)\", str);  }};\n+\n BOOST_AUTO_TEST_CASE(translation_namedparams)\n {\n+    constexpr util::TranslatedLiteral format{\"original [%s]\", &translate};",
      "path": "src/test/translation_tests.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa7cb525b7069ce0197d2f309102432273fea4d6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Check translatable format strings at compile-time\" (fa948257f332772f058cabffe0e313a0518da724)\r\n\r\nCould consider making the test a little more realistic with:\r\n\r\n```diff\r\n--- a/src/test/translation_tests.cpp\r\n+++ b/src/test/translation_tests.cpp\r\n@@ -11,17 +11,22 @@ BOOST_AUTO_TEST_SUITE(translation_tests)\r\n \r\n static TranslateFn translate{[](const char * str) {  return strprintf(\"t(%s)\", str);  }};\r\n \r\n+// Custom translation function _t(), similar to _() but internal to this test.\r\n+static inline consteval auto _t(util::TranslatedLiteral str)\r\n+{\r\n+    str.translate_fn = &translate;\r\n+    return str;\r\n+}\r\n+\r\n BOOST_AUTO_TEST_CASE(translation_namedparams)\r\n {\r\n-    constexpr util::TranslatedLiteral format{\"original [%s]\", &translate};\r\n-\r\n     bilingual_str arg{\"original\", \"translated\"};\r\n-    bilingual_str result{strprintf(format, arg)};\r\n+    bilingual_str result{strprintf(_t(\"original [%s]\"), arg)};\r\n     BOOST_CHECK_EQUAL(result.original, \"original [original]\");\r\n     BOOST_CHECK_EQUAL(result.translated, \"t(original [translated])\");\r\n \r\n     util::TranslatedLiteral arg2{\"original\", &translate};\r\n-    bilingual_str result2{strprintf(format, arg2)};\r\n+    bilingual_str result2{strprintf(_t(\"original [%s]\"), arg2)};\r\n     BOOST_CHECK_EQUAL(result2.original, \"original [original]\");\r\n     BOOST_CHECK_EQUAL(result2.translated, \"t(original [t(original)])\");\r\n }\r\n```\r\n",
      "created_at": "2024-12-11T02:35:38Z",
      "updated_at": "2024-12-11T02:55:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1879237545",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879237545"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 16,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879734169",
      "pull_request_review_id": 2494962584,
      "id": 1879734169,
      "node_id": "PRRC_kwDOABII585wCneZ",
      "diff_hunk": "@@ -6,12 +6,15 @@\n #define BITCOIN_UTIL_TRANSLATION_H\n \n #include <tinyformat.h>\n+#include <util/string.h>",
      "path": "src/util/translation.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa7cb525b7069ce0197d2f309102432273fea4d6",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Arguably tinyformat is more external than *util/string.h*, but our copy lives with our code so it's certainly not clear-cut.\r\n\r\n```suggestion\r\n#include <util/string.h>\r\n\r\n#include <tinyformat.h>\r\n```",
      "created_at": "2024-12-11T09:50:27Z",
      "updated_at": "2024-12-11T10:14:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1879734169",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879734169"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": 8,
      "original_start_line": 8,
      "start_side": "RIGHT",
      "line": 9,
      "original_line": 9,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879761314",
      "pull_request_review_id": 2495007016,
      "id": 1879761314,
      "node_id": "PRRC_kwDOABII585wCuGi",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415200,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I'm still not sure I see any downsides to adding LIFETIMEBOUND.\r\n\r\nApart from the downsides I mentioned, `LIFETIMEBOUND` also isn't supported on gcc. So using vanilla C++17 (or 20) seems more portable to issue compiler errors at compile time, but I don't think it matters much in this case anyway.",
      "created_at": "2024-12-11T10:07:40Z",
      "updated_at": "2024-12-11T10:07:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1879761314",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879761314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879866903",
      "pull_request_review_id": 2495177258,
      "id": 1879866903,
      "node_id": "PRRC_kwDOABII585wDH4X",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415200,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`LIFETIMEBOUND` only being supported by one compiler isn't a great reason to skip adding it. Good to let Clang do what it can, and also provide documentation to devs. Not blocking for me though.\r\n\r\nTried the following, but Clang 18 compiles without any warnings when adding `LIFETIMEBOUND`. \r\n```C++\r\nstd::optional<tinyformat::FormatStringCheck<0>> fsc;\r\n{\r\n    auto fmt{std::make_unique<tinyformat::RuntimeFormat>(\"{}\")};\r\n    fsc = {tinyformat::FormatStringCheck<0>(*fmt)};\r\n}\r\n```\r\n\r\nAlso tried removing the `RuntimeFormat`-ctor from `FormatStringCheck` and found that it's only being used in `tinyformat::format(util::BilingualFmt...` outside off fuzz-tests. So this should be a minor concern.",
      "created_at": "2024-12-11T11:05:32Z",
      "updated_at": "2024-12-11T11:05:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1879866903",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879866903"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880018284",
      "pull_request_review_id": 2495387464,
      "id": 1880018284,
      "node_id": "PRRC_kwDOABII585wDs1s",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415200,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> `LIFETIMEBOUND` only being supported by one compiler isn't a great reason to skip adding it.\r\n\r\nIt is just one reason, among many that have been mentioned previously.\r\n\r\n> Tried the following, but Clang 18 compiles without any warnings when adding LIFETIMEBOUND.\r\n\r\nYes, I mentioned that the attribute right now doesn't really do any useful checks at compile time in this context. (It is more useful in other contexts). This is one of the reasons why I preferred to use an approach that works at compile time on all compilers, only using the standard language.\r\n\r\nThough, I don't think it matters much in this case anyway, so anything is fine here.",
      "created_at": "2024-12-11T11:47:02Z",
      "updated_at": "2024-12-11T11:47:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1880018284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880018284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880317253",
      "pull_request_review_id": 2495864360,
      "id": 1880317253,
      "node_id": "PRRC_kwDOABII585wE11F",
      "diff_hunk": "@@ -67,27 +67,43 @@ template<typename T>\n T operator+(const T& lhs, const TranslatedLiteral& rhs) { return lhs + static_cast<T>(rhs); }\n template<typename T>\n T operator+(const TranslatedLiteral& lhs, const T& rhs) { return static_cast<T>(lhs) + rhs; }\n+\n+template <unsigned num_params>\n+struct BilingualFmt {\n+    const ConstevalFormatString<num_params> original;\n+    TranslatedLiteral lit;\n+    consteval BilingualFmt(TranslatedLiteral l) : original{l.original}, lit{l} {}\n+};\n } // namespace util\n \n consteval auto _(util::TranslatedLiteral str) { return str; }\n \n /** Mark a bilingual_str as untranslated */\n inline bilingual_str Untranslated(std::string original) { return {original, original}; }\n \n-// Provide an overload of tinyformat::format which can take bilingual_str arguments.\n+// Provide an overload of tinyformat::format for BilingualFmt format strings and bilingual_str or TranslatedLiteral args.\n namespace tinyformat {\n template <typename... Args>\n-bilingual_str format(const bilingual_str& fmt, const Args&... args)\n+bilingual_str format(util::BilingualFmt<sizeof...(Args)> fmt, const Args&... args)\n {\n-    const auto translate_arg{[](const auto& arg, bool translated) -> const auto& {\n+    const auto original_arg{[](const auto& arg) -> const auto& {\n+        if constexpr (std::is_same_v<decltype(arg), const bilingual_str&>) {\n+            return arg.original;\n+        } else if constexpr (std::is_same_v<decltype(arg), const util::TranslatedLiteral&>) {\n+            return arg.original;\n+        } else {\n+            return arg;\n+        }\n+    }};\n+    const auto translate_arg{[](const auto& arg) -> const auto& {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 35,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa0b20a1fa7b4e360b54ab06991d441e6d685aeb",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Check translatable format strings at compile-time\" (fa0b20a1fa7b4e360b54ab06991d441e6d685aeb)\r\n\r\nNot important, but probably would have made sense to call this `translated_arg` instead of `translate_arg` since this is not actually translating the argument or calling the translation function, but just returning a reference to translated or translatable version of the argument.",
      "created_at": "2024-12-11T14:34:36Z",
      "updated_at": "2024-12-11T15:33:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1880317253",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880317253"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880383791",
      "pull_request_review_id": 2495864360,
      "id": 1880383791,
      "node_id": "PRRC_kwDOABII585wFGEv",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415200,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1879761314\r\n\r\n> Apart from the downsides I mentioned,\r\n>\r\n> It is just one reason, among many that have been mentioned previously.\r\n\r\nThanks for adding LIFETIMEBOUND here. I've been pretty confused by this discussion because I haven't seen any reasons given for why it would actually be better not to use LIFETIMEBOUND, and I don't know of any reasons. I understand LIFETIMEBOUND doesn't work everywhere, but don't understand why that matters as long as it catches bugs and provides fast feedback in the places it does work, and is helpful everywhere to document references that need to be long-lived.\r\n\r\nIf LIFETIMEBOUND triggered false positive errors like clang thread safety annotations do, that could be a real downside and reason not to use it. But as far as I know it doesn't cause harms or have any negative effects like that, so I've been confused by the pushback here. Maybe the reasons not to use it are as simple as \"looks ugly\"  / \"adds noise\"  / \"seems useless\" which are perfectly ok (and are also reasons I don't use `const` various places). i'd be fine with keeping or dropping LIFETIMEBOUND in this PR, just wondering if I am not understanding real problems with it.",
      "created_at": "2024-12-11T15:12:11Z",
      "updated_at": "2024-12-11T15:33:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1880383791",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880383791"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880501173",
      "pull_request_review_id": 2496177670,
      "id": 1880501173,
      "node_id": "PRRC_kwDOABII585wFiu1",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415200,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I just think that compile failures are better than runtime errors or UB. Using vanilla C++17 code without attributes to turn bad code (such as https://godbolt.org/z/6336nGKcM (replace `0` with `1` to enable the compile-time checks)) into a compile failure on all compilers seems better than a runtime error, possibly only in CI.",
      "created_at": "2024-12-11T16:19:08Z",
      "updated_at": "2024-12-11T16:19:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1880501173",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880501173"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880558288",
      "pull_request_review_id": 2496271405,
      "id": 1880558288,
      "node_id": "PRRC_kwDOABII585wFwrQ",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415200,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh thanks for explaining that. I thought you were only disabling copies and assignment to prevent expensive copies due to not passing RuntimeFormat by reference, and that you were not passing RuntimeFormat by reference to avoid needing to think about lifetime issues.\r\n\r\nBut actually your goal is to make `RuntimeFormat run(\"fmt\"); strprintf(run);` a compiler error, and deleting the copy and assignment operators are a way to do that. So LIFETIMEBOUND isn't harmful, but just not as good \r\nas a potentially safer solution fad431e548a694600a3fe212127052e5f922a622 that doesn't use LIFETIMEBOUND.\r\n\r\nI think I can see now how fad431e548a694600a3fe212127052e5f922a622 actually is a safer solution in every case, and relying on mandatory copy elision is ok there because deleting the RuntimeFormat copy constructor should make it impossible to pass as a function argument without copy elision. This is more complicated than just using references, but does seem safer.",
      "created_at": "2024-12-11T16:53:15Z",
      "updated_at": "2024-12-11T16:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1880558288",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880558288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880956056",
      "pull_request_review_id": 2496914211,
      "id": 1880956056,
      "node_id": "PRRC_kwDOABII585wHRyY",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415200,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": ">  https://godbolt.org/z/6336nGKcM (replace `0` with `1` to enable the compile-time checks)) into a compile failure on all compilers seems better than a runtime error, possibly only in CI.\r\n\r\nWith the `#if` set to `1` and lines 42-43 changed to\r\n```C++\r\n        check = RuntimeFormat(\"fmt\");\r\n```\r\nOne still gets an ASAN error instead of a compile time error.",
      "created_at": "2024-12-11T20:47:20Z",
      "updated_at": "2024-12-11T20:47:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1880956056",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880956056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880996117",
      "pull_request_review_id": 2496990382,
      "id": 1880996117,
      "node_id": "PRRC_kwDOABII585wHbkV",
      "diff_hunk": "@@ -179,13 +179,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    explicit RuntimeFormat(std::string str) : fmt{std::move(str)} {}\n+    std::string fmt;\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string\n // formatting without compile time checks.\n template <unsigned num_params>\n struct FormatStringCheck {\n     consteval FormatStringCheck(const char* str) : fmt{util::ConstevalFormatString<num_params>{str}.fmt} {}\n-    FormatStringCheck(const std::string& str) : fmt{str.c_str()} {}\n+    FormatStringCheck(const RuntimeFormat& run) : fmt{run.fmt.c_str()} {}",
      "path": "src/tinyformat.h",
      "position": null,
      "original_position": 17,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fab3893fa995151758d98dd90f563b6d0fe65921",
      "in_reply_to_id": 1874415200,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it will always be possible to trick a C++ compiler into UB without a warning, possibly even all currently released compilers.\r\n\r\nIf you wanted to solve the same problem for `FormatStringCheck`, you could apply the same approach (`explicit`+`delete`+copy-elision). However the patch would be too verbose for this codebase to be worth it.\r\n\r\nAlso, the approach can only be applied in this context. And if you want to solve lifetime issues wholesale, it will need to happen in the language itself. Personally I liked the safe `%` references, which would allow new C++ code to be safe. However, I don't think the proposal https://safecpp.org/draft-lifetimes.html will be in C++29, and possibly not make it at all.",
      "created_at": "2024-12-11T21:05:09Z",
      "updated_at": "2024-12-11T21:05:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1880996117",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880996117"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1886763016",
      "pull_request_review_id": 2506098486,
      "id": 1886763016,
      "node_id": "PRRC_kwDOABII585wdbgI",
      "diff_hunk": "@@ -67,27 +67,43 @@ template<typename T>\n T operator+(const T& lhs, const TranslatedLiteral& rhs) { return lhs + static_cast<T>(rhs); }\n template<typename T>\n T operator+(const TranslatedLiteral& lhs, const T& rhs) { return static_cast<T>(lhs) + rhs; }\n+\n+template <unsigned num_params>\n+struct BilingualFmt {\n+    const ConstevalFormatString<num_params> original;\n+    TranslatedLiteral lit;\n+    consteval BilingualFmt(TranslatedLiteral l) : original{l.original}, lit{l} {}\n+};\n } // namespace util\n \n consteval auto _(util::TranslatedLiteral str) { return str; }\n \n /** Mark a bilingual_str as untranslated */\n inline bilingual_str Untranslated(std::string original) { return {original, original}; }\n \n-// Provide an overload of tinyformat::format which can take bilingual_str arguments.\n+// Provide an overload of tinyformat::format for BilingualFmt format strings and bilingual_str or TranslatedLiteral args.\n namespace tinyformat {\n template <typename... Args>\n-bilingual_str format(const bilingual_str& fmt, const Args&... args)\n+bilingual_str format(util::BilingualFmt<sizeof...(Args)> fmt, const Args&... args)\n {\n-    const auto translate_arg{[](const auto& arg, bool translated) -> const auto& {\n+    const auto original_arg{[](const auto& arg) -> const auto& {\n+        if constexpr (std::is_same_v<decltype(arg), const bilingual_str&>) {\n+            return arg.original;\n+        } else if constexpr (std::is_same_v<decltype(arg), const util::TranslatedLiteral&>) {\n+            return arg.original;\n+        } else {\n+            return arg;\n+        }\n+    }};\n+    const auto translate_arg{[](const auto& arg) -> const auto& {",
      "path": "src/util/translation.h",
      "position": null,
      "original_position": 35,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa0b20a1fa7b4e360b54ab06991d441e6d685aeb",
      "in_reply_to_id": 1880317253,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, done",
      "created_at": "2024-12-16T12:47:20Z",
      "updated_at": "2024-12-16T12:47:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1886763016",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1886763016"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1909076664",
      "pull_request_review_id": 2540319978,
      "id": 1909076664,
      "node_id": "PRRC_kwDOABII585xyjK4",
      "diff_hunk": "@@ -179,13 +180,19 @@ namespace tfm = tinyformat;\n \n namespace tinyformat {\n \n+// Added for Bitcoin Core. Similar to std::runtime_format from C++26.\n+struct RuntimeFormat {\n+    const std::string& fmt; // Not a string view, because tinyformat requires a c_str\n+    explicit RuntimeFormat(LIFETIMEBOUND const std::string& str) : fmt{str} {}\n+};\n+\n // Added for Bitcoin Core. Wrapper for checking format strings at compile time.\n // Unlike ConstevalFormatString this supports std::string for runtime string",
      "path": "src/tinyformat.h",
      "position": 19,
      "original_position": 19,
      "commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "original_commit_id": "fa6d9a29162fb508385201c926ec745d071086fc",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: `this supports std::string for runtime string` - perhaps worth updating to reflect that it now requires to be wrapped in `RuntimeFormat`?",
      "created_at": "2025-01-09T15:58:56Z",
      "updated_at": "2025-01-09T16:00:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31061#discussion_r1909076664",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1909076664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31061"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 190,
      "original_line": 190,
      "side": "RIGHT"
    }
  ]
}