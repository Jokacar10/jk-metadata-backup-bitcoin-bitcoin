{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596",
    "id": 1342350793,
    "node_id": "PR_kwDOABII585QAqXJ",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27596",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27596.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27596.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/edbed31066e3674ba52b8c093ab235625527f383",
    "number": 27596,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "assumeutxo (2)",
    "user": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "- Background and FAQ: https://github.com/jamesob/assumeutxo-docs/tree/2019-04-proposal/proposal\r\n- Prior progress/project: https://github.com/bitcoin/bitcoin/projects/11\r\n- Replaces https://github.com/bitcoin/bitcoin/pull/15606, which was closed due to Github slowness. Original description and commentary can be found there.\r\n\r\n---\r\n\r\nThis changeset finishes the first phase of the assumeutxo project. It makes UTXO snapshots loadable via RPC (`loadtxoutset`) and adds `assumeutxo` parameters to chainparams. It contains all the remaining changes necessary to both use an assumedvalid snapshot chainstate and do a full validation sync in the background.\r\n\r\nThis may look like a lot to review, but note that\r\n- ~200 lines are a (non-essential) demo shell script\r\n- Many lines are functional test, documentation, and relatively dilute RPC code.\r\n\r\nSo it shouldn't be as burdensome to review as the linecount might suggest.\r\n\r\n- **P2P**: minor changes are made to `init.cpp` and `net_processing.cpp` to make simultaneous IBD across multiple chainstates work.\r\n- **Pruning**: implement correct pruning behavior when using a background chainstate\r\n- **Blockfile separation**: to prevent \"fragmentation\" in blockfile storage, have background chainstates use separate blockfiles from active snapshot chainstates to avoid interleaving heights and impairing pruning.\r\n- **Indexing**: some `CValidationInterface` events are given with an additional parameter, ChainstateRole, and all indexers ignore events from ChainstateRole::ASSUMEDVALID so that indexation only happens sequentially.\r\n- Have `-reindex` properly wipe snapshot chainstates.\r\n- **RPC**: introduce RPC commands `loadtxoutset` and (hidden) `getchainstates`.\r\n- **Release docs & first assumeutxo commitment**: add notes and a particular assumeutxo hash value for first AU-enabled release.\r\n  - This will complete the project and allow use of UTXO snapshots for faster node bootstrap.\r\n\r\nThe next phase, if it were to be pursued, would be coming up with a way to distribute the UTXO snapshots over the P2P network.\r\n\r\n---\r\n\r\n### UTXO snapshots\r\n\r\nCreate your own with `./contrib/devtools/utxo_snapshot.sh`, e.g. \r\n```shell\r\n./contrib/devtools/utxo_snapshot.sh 788000 utxo.dat ./src/bitcoin-cli -datadir=$(pwd)/testdata`)\r\n```\r\nor use the pre-generated ones listed below.\r\n\r\n- Testnet: **2'500'000** (Sjors):\r\n  - torrent: `magnet:?xt=urn:btih:511e09f4bf853aefab00de5c070b1e031f0ecbe9&dn=utxo-testnet-2500000.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969`\r\n  - sha256: `79db4b025448cc0ac388d8589a28eab02de53055d181e34eb47391717aa16388`\r\n- Signet: **160'000** (Sjors):\r\n  - torrent: `magnet:?xt=urn:btih:9da986cb27b3980ea7fd06b21e199b148d486880&dn=utxo-signet-160000.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969`\r\n  - sha256: `eeeca845385ba91e84ef58c09d38f98f246a24feadaad57fe1e5874f3f92ef8c`\r\n- Mainnet: **800'000** (Sjors):\r\n  - Note: this needs the following commit cherry-picked in: https://github.com/Sjors/bitcoin/commit/24deb2022b822f22fba9fcbee201e37a83225eb2\r\n  - torrent: `magnet:?xt=urn:btih:50ee955bef37f5ec3e5b0df4cf0288af3d715a2e&dn=utxo-800000.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969`\r\n\r\n### Testing\r\n\r\n#### For fun (~5min)\r\n\r\nIf you want to do a quick test, you can run `./contrib/devtools/test_utxo_snapshots.sh` and follow the instructions. This is mostly obviated by the functional tests, though.\r\n\r\n#### For real (longer)\r\n\r\nIf you'd like to experience a real usage of assumeutxo, you can do that too.\r\nI've cut a new snapshot at height 788'000 (http://img.jameso.be/utxo-788000.dat - but you can do it yourself with `./contrib/devtools/utxo_snapshot.sh` if you want). Download that, and then create a datadir for testing:\r\n```sh\r\n$ cd ~/src/bitcoin  # or whatever\r\n\r\n# get the snapshot\r\n$ curl http://img.jameso.be/utxo-788000.dat > utxo-788000.dat\r\n\r\n# you'll want to do this if you like copy/pasting \r\n$ export AU_DATADIR=/home/${USER}/au-test # or wherever\r\n\r\n$ mkdir ${AU_DATADIR}\r\n$ vim ${AU_DATADIR}/bitcoin.conf\r\n\r\ndbcache=8000  # or, you know, something high\r\nblockfilterindex=1\r\ncoinstatsindex=1\r\nprune=3000\r\nlogthreadnames=1\r\n```\r\nObtain this branch, build it, and then start bitcoind:\r\n```sh\r\n$ git remote add jamesob https://github.com/jamesob/bitcoin\r\n$ git fetch jamesob assumeutxo\r\n$ git checkout jamesob/assumeutxo\r\n\r\n$ ./configure $conf_args && make  # (whatever you like to do here)\r\n\r\n# start 'er up and watch the logs\r\n$ ./src/bitcoind -datadir=${AU_DATADIR}\r\n```\r\nThen, in some other window, load the snapshot\r\n```sh\r\n$ ./src/bitcoin-cli -datadir=${AU_DATADIR} loadtxoutset $(pwd)/utxo-788000.dat\r\n```\r\n\r\nYou'll see some log messages about headers retrieval and waiting to see the snapshot in the headers chain. Once you get the full headers chain, you'll spend a decent amount of time (~10min) loading the snapshot, checking it, and flushing it to disk. After all that happens, you should be syncing to tip in pretty short order, and you'll see the occasional `[background validation]` log message go by.\r\n\r\nIn yet another window, you can check out chainstate status with\r\n```sh\r\n$ ./src/bitcoin-cli -datadir=${AU_DATADIR} getchainstates\r\n```\r\nas well as usual favorites like `getblockchaininfo`.",
    "labels": [],
    "created_at": "2023-05-08T15:08:28Z",
    "updated_at": "2025-02-06T07:29:40Z",
    "closed_at": "2023-10-02T21:10:18Z",
    "mergeable_state": "unknown",
    "merged_at": "2023-10-02T21:10:18Z",
    "merged_by": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "e7b0004b375be25096fbaf3d5f6980095a90fc0c",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "jamesob:assumeutxo",
      "ref": "assumeutxo",
      "sha": "edbed31066e3674ba52b8c093ab235625527f383",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 42077031,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MjA3NzAzMQ==",
        "name": "bitcoin",
        "full_name": "jamesob/bitcoin",
        "owner": {
          "login": "jamesob",
          "id": 73197,
          "node_id": "MDQ6VXNlcjczMTk3",
          "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/jamesob",
          "html_url": "https://github.com/jamesob",
          "followers_url": "https://api.github.com/users/jamesob/followers",
          "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
          "organizations_url": "https://api.github.com/users/jamesob/orgs",
          "repos_url": "https://api.github.com/users/jamesob/repos",
          "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/jamesob/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/jamesob/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/jamesob/bitcoin",
        "archive_url": "https://api.github.com/repos/jamesob/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/jamesob/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/jamesob/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/jamesob/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/jamesob/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/jamesob/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/jamesob/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/jamesob/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/jamesob/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/jamesob/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/jamesob/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/jamesob/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/jamesob/bitcoin/events",
        "forks_url": "https://api.github.com/repos/jamesob/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/jamesob/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/jamesob/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/jamesob/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/jamesob/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/jamesob/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/jamesob/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/jamesob/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/jamesob/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/jamesob/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/jamesob/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/jamesob/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/jamesob/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/jamesob/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/jamesob/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/jamesob/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:jamesob/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/jamesob/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/jamesob/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/jamesob/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/jamesob/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/jamesob/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/jamesob/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/jamesob/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/jamesob/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/jamesob/bitcoin/hooks",
        "svn_url": "https://github.com/jamesob/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 5,
        "watchers_count": 5,
        "size": 300386,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2024-12-17T03:35:14Z",
        "created_at": "2015-09-07T22:18:03Z",
        "updated_at": "2024-12-12T00:23:11Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "fd8ab08558ccfb62f2d0a64d2d0d4dcefba977bc",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36668,
        "stargazers_count": 81844,
        "watchers_count": 81844,
        "size": 275172,
        "default_branch": "master",
        "open_issues_count": 694,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-02-06T05:58:05Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-02-06T07:29:31Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 1597,
    "deletions": 289,
    "changed_files": 43,
    "commits": 26,
    "review_comments": 365,
    "comments": 57
  },
  "events": [
    {
      "event": "commented",
      "id": 1538523343,
      "node_id": "IC_kwDOABII585btADP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1538523343",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-08T15:08:30Z",
      "updated_at": "2023-10-02T20:59:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [achow101](https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1743756406) |\n| Concept ACK | [D33r-Gee](https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1516971308), [Sjors](https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1727846633) |\n| Stale ACK | [pablomartin4btc](https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1640753506), [fjahr](https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1651722959), [naumenkogs](https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1742695834), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1652917347) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28550](https://github.com/bitcoin/bitcoin/pull/28550) (Covenant tools softfork by jamesob)\n* [#28453](https://github.com/bitcoin/bitcoin/pull/28453) (wallet: Receive silent payment transactions by achow101)\n* [#28368](https://github.com/bitcoin/bitcoin/pull/28368) (Fee Estimator updates from Validation Interface/CScheduler thread by ismaelsadeeq)\n* [#28120](https://github.com/bitcoin/bitcoin/pull/28120) (p2p: make block download logic aware of limited peers threshold by furszy)\n* [#28031](https://github.com/bitcoin/bitcoin/pull/28031) (Package Relay 1/3: Introduce TxDownloadManager and improve orphan-handling by glozow)\n* [#27837](https://github.com/bitcoin/bitcoin/pull/27837) (net: introduce block tracker to retry to download blocks after failure by furszy)\n* [#27770](https://github.com/bitcoin/bitcoin/pull/27770) (Introduce 'getblockfileinfo' RPC command by furszy)\n* [#26966](https://github.com/bitcoin/bitcoin/pull/26966) (index: blockfilter initial sync speedup, parallelize process by furszy)\n* [#26762](https://github.com/bitcoin/bitcoin/pull/26762) (bugfix: Make `CCheckQueue` RAII-styled (attempt 2) by hebasto)\n* [#26045](https://github.com/bitcoin/bitcoin/pull/26045) (rpc: Optimize serialization disk space of dumptxoutset by aureleoules)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1538523343",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "labeled",
      "id": 9191648566,
      "node_id": "LE_lADOABII585lWq3pzwAAAAIj3W02",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9191648566",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-08T15:23:18Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9191740914,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAIj3tXy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9191740914",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d32219de1140e926739827c0943ec11a5890eed2",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/d32219de1140e926739827c0943ec11a5890eed2",
      "created_at": "2023-05-08T15:33:13Z"
    },
    {
      "event": "unlabeled",
      "id": 9192326444,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAIj58Us",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9192326444",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-08T16:39:28Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1538759099,
      "node_id": "IC_kwDOABII585bt5m7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1538759099",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-08T17:26:04Z",
      "updated_at": "2023-05-08T17:26:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "CI's passing after a silent conflict in the rebase. I've added a link to @Sjors' snapshot torrent in the PR description.\r\n\r\nNo known outstanding issues here; ready for testing!",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1538759099",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 9192696774,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAIj7WvG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9192696774",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-08T17:26:04Z"
    },
    {
      "event": "subscribed",
      "id": 9192696784,
      "node_id": "SE_lADOABII585lWq3pzwAAAAIj7WvQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9192696784",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-08T17:26:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9202181109,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAIkfiP1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9202181109",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8f431ad3b600a8f7e6dff83354ac3475b8936505",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/8f431ad3b600a8f7e6dff83354ac3475b8936505",
      "created_at": "2023-05-09T15:29:30Z"
    },
    {
      "event": "commented",
      "id": 1540397377,
      "node_id": "IC_kwDOABII585b0JlB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1540397377",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-09T15:30:23Z",
      "updated_at": "2023-05-09T15:30:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1540397377",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "commented",
      "id": 1541467462,
      "node_id": "IC_kwDOABII585b4O1G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1541467462",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-10T07:10:56Z",
      "updated_at": "2023-05-10T07:10:56Z",
      "author_association": "MEMBER",
      "body": "When running 8f431ad3b600a8f7e6dff83354ac3475b8936505 I noticed (and reproduced) that `-prune` is not fully honored when loading a snapshot and doing background validation. When I set `-prune=550` the blocks dir ends up somewhere between 3 and 5 GB. Judging by the blk….dat timestamps it seems that both the snapshot and background IBD hold on to more blocks than they should. Tested on Ubuntu 23.04 and with coinstats- and blockfilterindex enabled. The first time I tested I allowed the node to sync for a few hours before loading the snapshot, the second time I loaded the snapshot almost immediately.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1541467462",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "commented",
      "id": 1542165949,
      "node_id": "IC_kwDOABII585b65W9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1542165949",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-10T12:58:09Z",
      "updated_at": "2023-05-10T12:58:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "@jamesob What's your feeling on how important figuring out the fix for the pruning issue is at the moment? People don't consider it blocking #24008, right? Just curious about where to spend review time right now. FWIW, I noted the same issue on `getblockfrompeer` and wrote a test for it back then, in case you haven't seen it, it might come in handy: https://github.com/bitcoin/bitcoin/pull/23813",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1542165949",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 9211455321,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAIlC6dZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9211455321",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-10T12:58:09Z"
    },
    {
      "event": "subscribed",
      "id": 9211455336,
      "node_id": "SE_lADOABII585lWq3pzwAAAAIlC6do",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9211455336",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-10T12:58:09Z"
    },
    {
      "event": "commented",
      "id": 1542375384,
      "node_id": "IC_kwDOABII585b7sfY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1542375384",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-10T15:05:33Z",
      "updated_at": "2023-05-10T15:05:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "> What's your feeling on how important figuring out the fix for the pruning issue is at the moment? People don't consider it blocking https://github.com/bitcoin/bitcoin/pull/24008, right?\r\n\r\nRight, pruning issues shouldn't block #24008 - those changes need to happen regardless of how we manage pruning with snapshots.\r\n\r\nI'll reproduce/investigate the pruning issues over the coming days. But it's worth noting that @Sjors didn't see any regressions in pruning on this branch _before_ loading the snapshot, meaning the degraded pruning behavior only kicks in if the user loads a snapshot. And even though, the code just doesn't prune as aggressively as it seems it should.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1542375384",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 9212848731,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAIlIOpb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9212848731",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-10T15:05:34Z"
    },
    {
      "event": "subscribed",
      "id": 9212848747,
      "node_id": "SE_lADOABII585lWq3pzwAAAAIlIOpr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9212848747",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-10T15:05:34Z"
    },
    {
      "event": "commented",
      "id": 1542394306,
      "node_id": "IC_kwDOABII585b7xHC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1542394306",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-10T15:17:11Z",
      "updated_at": "2023-05-10T15:17:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hm, for what it's worth, pruning is working as expected for me on this branch.\r\n\r\n![image](https://github.com/bitcoin/bitcoin/assets/73197/95b5615a-f4ca-4af5-96e4-30969fdc6940)\r\n\r\n```\r\nEvery 2.0s: cat <(./src/bitcoin-cli -datadir=/home/james/tmp/bitcoin-au-testing getmempoolinfo) <( ./src/bitcoin-cli -datadir=/home/james/tmp/bitcoin-au-testing getchainstates)                                                                                                                                                                         fido: Wed May 10 11:16:49 2023\r\n\r\n{\r\n  \"loaded\": true,\r\n  \"size\": 108146,\r\n  \"bytes\": 42192499,\r\n  \"usage\": 234882016,\r\n  \"total_fee\": 23.04459003,\r\n  \"maxmempool\": 300000000,\r\n  \"mempoolminfee\": 0.00013381,\r\n  \"minrelaytxfee\": 0.00001000,\r\n  \"incrementalrelayfee\": 0.00001000,\r\n  \"unbroadcastcount\": 0,\r\n  \"fullrbf\": false\r\n}\r\n{\r\n  \"active_chain_type\": \"validated_snapshot\",\r\n  \"validated_snapshot\": {\r\n    \"blocks\": 789094,\r\n    \"bestblockhash\": \"00000000000000000002dad6b3cd82fc00075978eb0d63dcbf6bce3bdc2c3f32\",\r\n    \"difficulty\": 48005534313578.78,\r\n    \"verificationprogress\": 0.9999931560421257,\r\n    \"snapshot_blockhash\": \"00000000000000000001f3fa1b4c03c877740778f56b0d5456b18dd88f7f695e\",\r\n    \"initialblockdownload\": false,\r\n    \"coins_db_cache_bytes\": 8388608,\r\n    \"coins_tip_cache_bytes\": 11498684416,\r\n    \"has_mempool\": true\r\n  },\r\n  \"headers\": 789094\r\n}\r\n```\r\n\r\nWill attempt to repro with a fresh run, I guess?\r\n",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1542394306",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "labeled",
      "id": 9220692496,
      "node_id": "LE_lADOABII585lWq3pzwAAAAIlmJoQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9220692496",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-11T10:24:07Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9228083178,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAImCV_q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9228083178",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b8fd765a06998a79ef6efef5355c956a4679df6f",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/b8fd765a06998a79ef6efef5355c956a4679df6f",
      "created_at": "2023-05-12T01:12:01Z"
    },
    {
      "event": "commented",
      "id": 1544970920,
      "node_id": "IC_kwDOABII585cFmKo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1544970920",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-12T01:22:37Z",
      "updated_at": "2023-05-12T01:22:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1544970920",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "unlabeled",
      "id": 9228540173,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAImEFkN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9228540173",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-12T03:11:13Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1545856135,
      "node_id": "IC_kwDOABII585cI-SH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1545856135",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-12T14:43:06Z",
      "updated_at": "2023-05-12T14:43:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "I've done a number of runs here with some combination of indexing and pruning, and I think this is in about as good a shape as it can be, with the following caveat:\r\n\r\nWhen using assumeutxo with pruning and indexing, the snapshot chainstate cannot be pruned because of how we handle indexing during bg sync. Since the snapshot chainstate isn't indexed until after the background sync completes (in order to avoid out-of-order indexation), we aren't able to prune the snapshot chainstate based upon the prune blocks that the indices configure.\r\n\r\nSo the upshot of all this is that pruning, when used with assumeutxo and indexing, is basically best-effort. I think that's an okay state as long as we're clear about it to end users. Probably merits some kind of GUI alert which I think can be done later.\r\n\r\nAfter bg sync completes, we're in a pretty good state (`-blockfilterindex` + `-coinstatsindex` + `-prune=550`):\r\n```\r\n777M    /home/james/tmp/bitcoin-au-testing/blocks\r\ntotal 667M\r\ndrwx------ 3 james users 4.0K May 12 07:02 .\r\ndrwx------ 5 james users 4.0K May 12 10:34 ..\r\n-rw------- 1 james users 128M May 11 21:24 blk00014.dat\r\n-rw------- 1 james users 128M May 11 21:24 blk00015.dat\r\n-rw------- 1 james users 127M May 11 21:24 blk00016.dat\r\n-rw------- 1 james users 128M May 12 05:04 blk00017.dat\r\n-rw------- 1 james users  32M May 12 06:41 blk02910.dat\r\n-rw------- 1 james users  48M May 12 10:31 blk03593.dat\r\ndrwx------ 2 james users 4.0K May 12 10:34 index\r\n-rw------- 1 james users  18M May 11 21:24 rev00014.dat\r\n-rw------- 1 james users  18M May 11 21:24 rev00015.dat\r\n-rw------- 1 james users  18M May 11 21:24 rev00016.dat\r\n-rw------- 1 james users  16M May 12 05:04 rev00017.dat\r\n-rw------- 1 james users 3.3M May 12 06:41 rev02910.dat\r\n-rw------- 1 james users 6.0M May 12 10:31 rev03593.dat\r\n```\r\n\r\n---\r\n\r\nThrough the last few days of testing, I did find that I forgot to the divide the prune target by the number of chainstates outstanding, so that may have created some of the weirdness @Sjors was seeing. But otherwise I just think that enabling all these features together results in the necessary trade-off of blowing out the pruning budget.\r\n\r\nAlso worth noting that based on the current size of blocks over the last few weeks, the 244 block trailing prune window is potentially going to result in over 550MB of block data, which is our lowest allowable target.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1545856135",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 9233827014,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAImYQTG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9233827014",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-12T14:43:06Z"
    },
    {
      "event": "subscribed",
      "id": 9233827029,
      "node_id": "SE_lADOABII585lWq3pzwAAAAImYQTV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9233827029",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-12T14:43:06Z"
    },
    {
      "event": "reviewed",
      "id": 1425210799,
      "node_id": "PRR_kwDOABII585U8v2v",
      "url": null,
      "actor": null,
      "commit_id": "b8fd765a06998a79ef6efef5355c956a4679df6f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I started testing this by creating / loading a snapshot on signet at height 100016. I haven't really looked at the code yet and also didn't read the provided docs so that I could do things by trial and error, and hopefully get to the desired result anyway but have a better chance to encounter some edge cases / bugs along the way.\r\n\r\nThings worked really well! Just some observations / minor issues:\r\n- Didn't encounter any problems with indexes, pruning, `-reindex` or `reindex-chainstate`\r\n- In one run, I successfully loaded the chainstate from disk, and then restarted bitcoind (without loading any additional blocks via p2p). Then, init would fail the verification checks with the next startup because the blocks aren't there:\r\n(`Verification error: ReadBlockFromDisk failed at 100016, hash=000001301bada810147463d5b1d72caf0807ad1fdaf015d084f5c474b8cc44c6`)\r\n- I am allowed to do `invalidateblock` on a block smaller than the `assumeUTXO` block before the background state has been loaded and corrupt my block database that way. That's obviously not an issue in practice, so probably no need to fix - just wanted to mention it.\r\n- could add an empty `m_assumeutxo_data` entry in chainparams for signet, like testnet has\r\n- in the `getchainstates` rpc, the field `verificationprogress` has some numerical fluctuations - maybe round this to some reasonable precision\r\n- after the background chainstate has been fully validated, I observed some warnings in the log while running with indexes, not sure if this is something serious:\r\n`2023-05-12T22:06:22Z ChainStateFlushed: WARNING: Locator contains block (hash=000001301bada810147463d5b1d72caf0807ad1fdaf015d084f5c474b8cc44c6) not on known best chain (tip=000000f04acd86089bf33802cfa46e31fa9f99918c32d5a4e7535ae7de57f805); not writing index locator`",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1425210799",
      "submitted_at": "2023-05-12T22:18:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "labeled",
      "id": 9253040634,
      "node_id": "LE_lADOABII585lWq3pzwAAAAInhjH6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9253040634",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T03:43:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1549423309,
      "node_id": "IC_kwDOABII585cWlLN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1549423309",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-16T10:42:43Z",
      "updated_at": "2023-05-16T10:43:16Z",
      "author_association": "MEMBER",
      "body": "Here's a signet snapshot torrent: `magnet:?xt=urn:btih:0e1a61b4ed9a57c41d98f1ddd5061bc088c857b6&dn=utxo-signet-140000.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969`\r\n\r\nCan be added to `kernel/chainparams.cpp` with:\r\n\r\n```cpp\r\nm_assumeutxo_data = MapAssumeutxo{\r\n            {\r\n                140'000,\r\n                {AssumeutxoHash{uint256S(\"0x91412d7018c8564beef1938eef2bfe18feee53674fd26bea425daa4280437641\")}, 2233882},\r\n            },\r\n        };\r\n```\r\n\r\nThis basically gets you to the signet tip faster than you can hit enter :-)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1549423309",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "labeled",
      "id": 9272897054,
      "node_id": "LE_lADOABII585lWq3pzwAAAAIotS4e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9272897054",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-17T19:12:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1431794725,
      "node_id": "PRR_kwDOABII585VV3Ql",
      "url": null,
      "actor": null,
      "commit_id": "b8fd765a06998a79ef6efef5355c956a4679df6f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Did the following more or less random test scenario (build at commit b8fd765a06998a79ef6efef5355c956a4679df6f) over the last days:\r\n- start up `bitcoind -prune=800 -blockfilterindex=1` (-dbcache intentionally left at default)\r\n- load snapshot from height 788000 via `bitcoind loadtxoutset /path/to/utxo-788000.dat` (thanks for providing the file!)\r\n- wait until snapshot chainstate reaches network tip\r\n- shut down the node and wait 1-2 days (with the idea to again provoke both chainstates being in IBD again)\r\n- restart `bitcoind -prune=800 -blockfilterindex=1`\r\n- wait until snapshot chainstate reaches network tip\r\n- watch background validation proceed\r\n\r\nSo far so good, everything went quite smooth and nothing unexpected happened! The only disappointment was finding that apparently the provided prune target of 800MB was not respected:\r\n```\r\n$ du -h ./datadir/blocks/ \r\n116M    ./datadir/blocks/index\r\n4.8G    ./datadir/blocks/\r\n```\r\n(background validation was at block ~230000 at that point)\r\n\r\nLooking at the block files (being in ranges blk00001-blk00030 and blk00084-blk00086), it _seems_ that in my case the prune target is respected only for the background chainstate, but the block files blk00001.dat-blk00030.dat (which were obviously created in the course of snapshot chainstate validation, catching up to the network tip for the second time, looking at the timestamp) are just sitting there and didn't get pruned anymore for some reason. Any idea what's going on here?",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1431794725",
      "submitted_at": "2023-05-18T00:37:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "commented",
      "id": 1553127188,
      "node_id": "IC_kwDOABII585cktcU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553127188",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T14:15:02Z",
      "updated_at": "2023-05-18T14:15:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for testing, @theStack!\r\n\r\n> So far so good, everything went quite smooth and nothing unexpected happened! The only disappointment was finding that apparently the provided prune target of 800MB was not respected:\r\n\r\nYes, this is unfortunately expected behavior. Since you have `-blockfilterindex` enabled and the background sync hasn't yet completed, prune locks are preventing any pruning from happening on the snapshot chainstate. I mentioned this obliquely here: https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1545856135\r\n\r\nThe only way around this would be to mark indexes which can be built out of order (i.e. everything except coinstats) and only halt snapshot indexation for those that can't. But this is something that could be done after the initial assumeutxo feature.\r\n",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1553127188",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 9280332010,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAIpJqDq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9280332010",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T14:15:03Z"
    },
    {
      "event": "subscribed",
      "id": 9280332023,
      "node_id": "SE_lADOABII585lWq3pzwAAAAIpJqD3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9280332023",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T14:15:03Z"
    },
    {
      "event": "commented",
      "id": 1558205497,
      "node_id": "IC_kwDOABII585c4FQ5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1558205497",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-22T23:55:28Z",
      "updated_at": "2023-05-22T23:55:28Z",
      "author_association": "CONTRIBUTOR",
      "body": ">>So far so good, everything went quite smooth and nothing unexpected happened! The only disappointment was finding that apparently the provided prune target of 800MB was not respected:\r\n>\r\n>Yes, this is unfortunately expected behavior. Since you have -blockfilterindex enabled and the background sync hasn't yet completed, prune locks are preventing any pruning from happening on the snapshot chainstate. I mentioned this obliquely here: https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1545856135\r\n\r\n@jamesob: Thanks for clarifying (admittedly I didn't read your comment just a few posts above before posting my test results), it makes sense that we have to keep the blocks from the snapshot chainstate for the indexer at least until background sync completes. I'd agree that this is not a problem as long as it is clearly communicated to the user, e.g. by putting a well-visible warning into the `loadtxoutset` RPC help. The ultra-conservative approach here would be to simply throw an error if a snapshot is loaded on a node that was started with both pruning and an index enabled (if keeping the `-prune` target promise has absolute highest priority), but that seems to be too limiting.\r\n\r\n",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1558205497",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 9308857647,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAIq2eUv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9308857647",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-22T23:55:28Z"
    },
    {
      "event": "subscribed",
      "id": 9308857656,
      "node_id": "SE_lADOABII585lWq3pzwAAAAIq2eU4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9308857656",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-22T23:55:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9318328693,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAIraml1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9318328693",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c0c43de885899b39ab0ef91dcc28a185a09b19d7",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/c0c43de885899b39ab0ef91dcc28a185a09b19d7",
      "created_at": "2023-05-23T16:12:14Z"
    },
    {
      "event": "commented",
      "id": 1559752787,
      "node_id": "IC_kwDOABII585c9_BT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1559752787",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-23T16:12:29Z",
      "updated_at": "2023-05-23T16:12:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1559752787",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "commented",
      "id": 1559813326,
      "node_id": "IC_kwDOABII585c-NzO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1559813326",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-23T16:48:37Z",
      "updated_at": "2023-05-23T16:48:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Cross-linking to some discussion on how we load the block index that @sdaftuar has surfaced: https://github.com/bitcoin/bitcoin/pull/23174/files#r1198450499\r\n\r\nIf anyone has encountered an issue like this while testing this branch, a comment would be welcome.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1559813326",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 9318704026,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAIrcCOa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9318704026",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-23T16:48:38Z"
    },
    {
      "event": "subscribed",
      "id": 9318704044,
      "node_id": "SE_lADOABII585lWq3pzwAAAAIrcCOs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9318704044",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-23T16:48:38Z"
    },
    {
      "event": "unlabeled",
      "id": 9318951103,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAIrc-i_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9318951103",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-23T17:18:02Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9319195935,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAIrd6Uf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9319195935",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-23T17:49:29Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1560035238,
      "node_id": "IC_kwDOABII585c_D-m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1560035238",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-23T19:49:26Z",
      "updated_at": "2023-05-25T20:08:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "New bug, albeit pretty minor:\r\n\r\n- [x] ~~if you restart the node after activating the snapshot but before connecting any blocks to the snapshot chainstate, `ReadBlockFromDisk` checks fail when calling `VerifyDB()` during chainstate initialization. I'm not sure when this would happen in practice, but it's an annoying edge case.~~\r\n\r\nEdit: fixed this.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1560035238",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "labeled",
      "id": 9326073484,
      "node_id": "LE_lADOABII585lWq3pzwAAAAIr4JaM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9326073484",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-24T10:38:39Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9344052785,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAIs8u4x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9344052785",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a27c84e2cc215510055bcb3a5266c8710bfd53aa",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/a27c84e2cc215510055bcb3a5266c8710bfd53aa",
      "created_at": "2023-05-25T20:07:09Z"
    },
    {
      "event": "commented",
      "id": 1563455744,
      "node_id": "IC_kwDOABII585dMHEA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1563455744",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-25T20:16:40Z",
      "updated_at": "2023-05-25T20:16:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased.\r\n\r\nI've made a few changes/improvements that I think fixes the bug @sdaftuar found (not adding all potential tips to `setBlockIndexCandidates`), albeit I'm not yet integrating the changes in #27746.\r\n\r\n- More comprehensive functional tests: the tests now stop and start at more points throughout the sync process, including immediately after snapshot load and before bg validation completes.\r\n- We now include the blockhash of the snapshot base in `m_assumeutxo_data`; this allows us to move the `nChainTx` reconstruction where it belongs, into `BlockManager::LoadBlockIndex()`.\r\n- All blocks for which we have data (or are assumedvalid) are added to all chainstates' `setBlockIndexCandidates`.\r\n  - Some related changes in `CheckBlockIndex()` needed to be made to update some outdated assertions.\r\n\r\nI'm going to be taking a close look at @sdaftuar's proposed changes over the next few days to see if I can integrate them here.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1563455744",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 9344121793,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAIs8_vB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9344121793",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-25T20:16:41Z"
    },
    {
      "event": "subscribed",
      "id": 9344121803,
      "node_id": "SE_lADOABII585lWq3pzwAAAAIs8_vL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9344121803",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-25T20:16:41Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9344167985,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAIs9LAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9344167985",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ce7bc83e132d785c137e03b35f8327a994fcc48d",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/ce7bc83e132d785c137e03b35f8327a994fcc48d",
      "created_at": "2023-05-25T20:23:21Z"
    },
    {
      "event": "labeled",
      "id": 9344168520,
      "node_id": "LE_lADOABII585lWq3pzwAAAAIs9LJI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9344168520",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-25T20:23:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9344227981,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAIs9ZqN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9344227981",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-25T20:32:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1563571639,
      "node_id": "IC_kwDOABII585dMjW3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1563571639",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-25T22:13:48Z",
      "updated_at": "2023-05-25T22:13:48Z",
      "author_association": "MEMBER",
      "body": "> All blocks for which we have data (or are assumedvalid) are added to all chainstates' setBlockIndexCandidates.\r\n\r\nBeing assumedvalid is unrelated to whether we should add an entry to `setBlockIndexCandidates`; `setBlockIndexCandidates` should have the current tip and any block for which we HAVE_DATA and for which we HAVE_DATA for all the blocks that we'd need to connect, in order to get from our current tip to that target block.  \r\n\r\nThe assumedvalid bit is really just something we're using to help with adjusting the invariants in `CheckBlockIndex()`; it should have no bearing on any of the actual validation logic outside of that.",
      "user": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1563571639",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9354464696,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAItkc24",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9354464696",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d4f98c070eabc72c71aa4804f3bc076d090992dd",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/d4f98c070eabc72c71aa4804f3bc076d090992dd",
      "created_at": "2023-05-26T20:28:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9354729431,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAItldfX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9354729431",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0382c9b21864a751911a6242f3bf7cfbce37e382",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/0382c9b21864a751911a6242f3bf7cfbce37e382",
      "created_at": "2023-05-26T21:14:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9354950531,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAItmTeD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9354950531",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fc6299c8c23479e3596c68920fa2a576488119c6",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/fc6299c8c23479e3596c68920fa2a576488119c6",
      "created_at": "2023-05-26T22:06:43Z"
    },
    {
      "event": "unlabeled",
      "id": 9355218352,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAItnU2w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9355218352",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-26T23:18:28Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1450841472,
      "node_id": "PRR_kwDOABII585WehWA",
      "url": null,
      "actor": null,
      "commit_id": "fc6299c8c23479e3596c68920fa2a576488119c6",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "alexanderwiederin",
        "id": 37130778,
        "node_id": "MDQ6VXNlcjM3MTMwNzc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37130778?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexanderwiederin",
        "html_url": "https://github.com/alexanderwiederin",
        "followers_url": "https://api.github.com/users/alexanderwiederin/followers",
        "following_url": "https://api.github.com/users/alexanderwiederin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexanderwiederin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexanderwiederin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexanderwiederin/subscriptions",
        "organizations_url": "https://api.github.com/users/alexanderwiederin/orgs",
        "repos_url": "https://api.github.com/users/alexanderwiederin/repos",
        "events_url": "https://api.github.com/users/alexanderwiederin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexanderwiederin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1450841472",
      "submitted_at": "2023-05-30T12:38:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1450842970,
      "node_id": "PRR_kwDOABII585Wehta",
      "url": null,
      "actor": null,
      "commit_id": "fc6299c8c23479e3596c68920fa2a576488119c6",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "alexanderwiederin",
        "id": 37130778,
        "node_id": "MDQ6VXNlcjM3MTMwNzc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37130778?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexanderwiederin",
        "html_url": "https://github.com/alexanderwiederin",
        "followers_url": "https://api.github.com/users/alexanderwiederin/followers",
        "following_url": "https://api.github.com/users/alexanderwiederin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexanderwiederin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexanderwiederin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexanderwiederin/subscriptions",
        "organizations_url": "https://api.github.com/users/alexanderwiederin/orgs",
        "repos_url": "https://api.github.com/users/alexanderwiederin/repos",
        "events_url": "https://api.github.com/users/alexanderwiederin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexanderwiederin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1450842970",
      "submitted_at": "2023-05-30T12:39:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "labeled",
      "id": 9380216126,
      "node_id": "LE_lADOABII585lWq3pzwAAAAIvGr0-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9380216126",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-30T15:50:58Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9391935604,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAIvzZB0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9391935604",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d902df9796e77c9dc50e81c69546d12e7f6debfd",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/d902df9796e77c9dc50e81c69546d12e7f6debfd",
      "created_at": "2023-05-31T15:13:01Z"
    },
    {
      "event": "commented",
      "id": 1570432290,
      "node_id": "IC_kwDOABII585dmuUi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1570432290",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-31T15:16:04Z",
      "updated_at": "2023-05-31T15:16:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased\r\n\r\nAlso fixed the minor issues with the `test_utxo_snapshots.sh` demo script.\r\n\r\nSince last push, I've completed a full test of the mainnet snapshot; after a few days having finished the background sync, `-prune=550` (and everything else) working as expected.\r\n\r\n```\r\n759M    /home/james/tmp/bitcoin-au-testing/blocks\r\ntotal 650M\r\ndrwx------ 3 james users 4.0K May 31 10:54 .\r\ndrwx------ 5 james users 4.0K May 31 11:09 ..\r\n-rw------- 1 james users 127M May 29 15:33 blk03626.dat\r\n-rw------- 1 james users 128M May 30 02:38 blk03627.dat\r\n-rw------- 1 james users 128M May 30 17:29 blk03628.dat\r\n-rw------- 1 james users 128M May 31 06:05 blk03629.dat\r\n-rw------- 1 james users  64M May 31 10:57 blk03630.dat\r\ndrwx------ 2 james users 4.0K May 31 10:54 index\r\n-rw------- 1 james users  17M May 29 15:30 rev03626.dat\r\n-rw------- 1 james users  15M May 30 02:36 rev03627.dat\r\n-rw------- 1 james users  19M May 30 17:23 rev03628.dat\r\n-rw------- 1 james users  18M May 31 06:01 rev03629.dat\r\n-rw------- 1 james users 8.0M May 31 10:57 rev03630.dat\r\n```",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1570432290",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "unlabeled",
      "id": 9393194606,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAIv4MZu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9393194606",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-31T17:06:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9393291513,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAIv4kD5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9393291513",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "92e88d9148af2b1da7312ab0e0495086dde67383",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/92e88d9148af2b1da7312ab0e0495086dde67383",
      "created_at": "2023-05-31T17:17:52Z"
    },
    {
      "event": "labeled",
      "id": 9393292068,
      "node_id": "LE_lADOABII585lWq3pzwAAAAIv4kMk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9393292068",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-31T17:17:57Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9394409182,
      "node_id": "LE_lADOABII585lWq3pzwAAAAIv807e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9394409182",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-31T19:11:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9394505678,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAIv9MfO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9394505678",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3dc6fd620e28de6060a36e9fb53875348f67836d",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/3dc6fd620e28de6060a36e9fb53875348f67836d",
      "created_at": "2023-05-31T19:21:02Z"
    },
    {
      "event": "commented",
      "id": 1570801767,
      "node_id": "IC_kwDOABII585doIhn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1570801767",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-31T19:21:26Z",
      "updated_at": "2023-05-31T19:21:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1570801767",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "unlabeled",
      "id": 9395585890,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAIwBUNi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9395585890",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-31T21:15:08Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9397722692,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAIwJd5E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9397722692",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-01T03:40:51Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "subscribed",
      "id": 9452072828,
      "node_id": "SE_lADOABII585lWq3pzwAAAAIzYy98",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9452072828",
      "actor": {
        "login": "mailinger-mate",
        "id": 10153820,
        "node_id": "MDQ6VXNlcjEwMTUzODIw",
        "avatar_url": "https://avatars.githubusercontent.com/u/10153820?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mailinger-mate",
        "html_url": "https://github.com/mailinger-mate",
        "followers_url": "https://api.github.com/users/mailinger-mate/followers",
        "following_url": "https://api.github.com/users/mailinger-mate/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mailinger-mate/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mailinger-mate/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mailinger-mate/subscriptions",
        "organizations_url": "https://api.github.com/users/mailinger-mate/orgs",
        "repos_url": "https://api.github.com/users/mailinger-mate/repos",
        "events_url": "https://api.github.com/users/mailinger-mate/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mailinger-mate/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-07T00:24:00Z"
    },
    {
      "event": "commented",
      "id": 1583637570,
      "node_id": "IC_kwDOABII585eZGRC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1583637570",
      "actor": {
        "login": "hazeycode",
        "id": 22148308,
        "node_id": "MDQ6VXNlcjIyMTQ4MzA4",
        "avatar_url": "https://avatars.githubusercontent.com/u/22148308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hazeycode",
        "html_url": "https://github.com/hazeycode",
        "followers_url": "https://api.github.com/users/hazeycode/followers",
        "following_url": "https://api.github.com/users/hazeycode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hazeycode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hazeycode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hazeycode/subscriptions",
        "organizations_url": "https://api.github.com/users/hazeycode/orgs",
        "repos_url": "https://api.github.com/users/hazeycode/repos",
        "events_url": "https://api.github.com/users/hazeycode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hazeycode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-09T00:05:10Z",
      "updated_at": "2023-06-09T00:24:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "Related minor issue: https://github.com/bitcoin/bitcoin/issues/27841. I don't think it matters but posting for visibility in case it happens to be helpful to someone.",
      "user": {
        "login": "hazeycode",
        "id": 22148308,
        "node_id": "MDQ6VXNlcjIyMTQ4MzA4",
        "avatar_url": "https://avatars.githubusercontent.com/u/22148308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hazeycode",
        "html_url": "https://github.com/hazeycode",
        "followers_url": "https://api.github.com/users/hazeycode/followers",
        "following_url": "https://api.github.com/users/hazeycode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hazeycode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hazeycode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hazeycode/subscriptions",
        "organizations_url": "https://api.github.com/users/hazeycode/orgs",
        "repos_url": "https://api.github.com/users/hazeycode/repos",
        "events_url": "https://api.github.com/users/hazeycode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hazeycode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1583637570",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "commented",
      "id": 1585587421,
      "node_id": "IC_kwDOABII585egiTd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1585587421",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-10T09:45:27Z",
      "updated_at": "2023-06-10T09:45:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "> This may look like a lot to review, but note that\r\n> \r\n>     * 200 lines are duplicated in #24008\r\n\r\nThis should refer to #27746 now, shouldn't it?\r\n",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1585587421",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "labeled",
      "id": 9502327933,
      "node_id": "LE_lADOABII585lWq3pzwAAAAI2YgR9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9502327933",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-12T12:53:14Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1504152824,
      "node_id": "PRR_kwDOABII585Zp4z4",
      "url": null,
      "actor": null,
      "commit_id": "3dc6fd620e28de6060a36e9fb53875348f67836d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "While testing.\r\n>Once you get the full headers chain, you'll spend a decent amount of time (~10min) loading the snapshot, checking it, and flushing it to disk\r\n\r\n`FlushSnapshotToDisk: saving snapshot chain state (10588 MB) started` takes about 5 hours to complete on pop-OS 22.\r\nDuring the `FlushSnapshotToDisk` process, I believe there should be some progress indication, similar to what occurs during the snapshot loading process. Currently, it appears to be like it is stuck.\r\n\r\nWhen I attempted to shut down `bitcoind` while `FlushSnapshotToDisk` was in progress, it resulted in some sort of a deadlock.\r\n\r\nBelow are the logs after I stop `bitcoind` while saving the snapshot.\r\n```\r\n2023-06-27T17:45:52Z [httpworker.0] [snapshot] 90000000 coins loaded (99.72%, 10561 MB)\r\n2023-06-27T17:45:52Z [httpworker.0] [snapshot] loaded 90249783 (10588 MB) coins from snapshot 00000000000000000001f3fa1b4c03c877740778f56b0d5456b18dd88f7f695e\r\n2023-06-27T17:45:52Z [httpworker.0] FlushSnapshotToDisk: saving snapshot chainstate (10588 MB) started\r\n2023-06-27T18:00:33Z [httpworker.1] [snapshot] waiting to see blockheader 00000000000000000001f3fa1b4c03c877740778f56b0d5456b18dd88f7f695e in headers chain before snapshot activation\r\n2023-06-27T18:15:54Z [init] tor: Thread interrupt\r\n2023-06-27T18:15:54Z [addcon] addcon thread exit\r\n2023-06-27T18:15:54Z [torcontrol] torcontrol thread exit\r\n2023-06-27T18:15:54Z [init] Shutdown: In progress...\r\n2023-06-27T18:15:54Z [net] net thread exit\r\n```\r\n\r\nTried to `pkill bitcoind` but it's still running possibly waiting for the flush to finish.",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1504152824",
      "submitted_at": "2023-06-28T21:45:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "comment_deleted",
      "id": 9672435093,
      "node_id": "CDE_lADOABII585lWq3pzwAAAAJAhaWV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9672435093",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-29T04:29:04Z"
    },
    {
      "event": "reviewed",
      "id": 1516971308,
      "node_id": "PRR_kwDOABII585aayUs",
      "url": null,
      "actor": null,
      "commit_id": "3dc6fd620e28de6060a36e9fb53875348f67836d",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "Tested ACK built with and tested on WSL Ubuntu 22.04\r\n\r\n> you'll spend a decent amount of time (~10min) loading the snapshot\r\n\r\nthis took closer to 30 min with an Intel(R) Core(TM) i9-10980HK CPU @ 2.40GHz   3.10 GHz\r\n\r\n`getchainstates` returns:\r\n```\r\n{\r\n  \"active_chain_type\": \"snapshot\",\r\n  \"ibd\": {\r\n    \"blocks\": 896,\r\n    \"bestblockhash\": \"00000000dabe35441efb615ad072e22ece58326cf0a43b990fc00aab808e8589\",\r\n    \"difficulty\": 1,\r\n    \"verificationprogress\": 1.076164026301743e-06,\r\n    \"snapshot_blockhash\": \"0000000000000000000000000000000000000000000000000000000000000000\",\r\n    \"initialblockdownload\": true,\r\n    \"coins_db_cache_bytes\": 419430,\r\n    \"coins_tip_cache_bytes\": 366490419,\r\n    \"has_mempool\": false\r\n  },\r\n  \"snapshot\": {\r\n    \"blocks\": 789045,\r\n    \"bestblockhash\": \"000000000000000000030939094d57c25369fbed9b6bafe94896de37f47d77f5\",\r\n    \"difficulty\": 48005534313578.78,\r\n    \"verificationprogress\": 0.9786754966337523,\r\n    \"snapshot_blockhash\": \"00000000000000000001f3fa1b4c03c877740778f56b0d5456b18dd88f7f695e\",\r\n    \"initialblockdownload\": true,\r\n    \"coins_db_cache_bytes\": 7969177,\r\n    \"coins_tip_cache_bytes\": 6963317964,\r\n    \"has_mempool\": true\r\n  },\r\n  \"headers\": 797452\r\n}\r\n```\r\n\r\nAnd `getblockchaininfo` returns:\r\n```\r\n{\r\n  \"chain\": \"main\",\r\n  \"blocks\": 789140,\r\n  \"headers\": 797452,\r\n  \"bestblockhash\": \"000000000000000000049973648ea7a15bf2c7f3585eb8700f889e9aca5af73c\",\r\n  \"difficulty\": 48005534313578.78,\r\n  \"time\": 1683751586,\r\n  \"mediantime\": 1683748352,\r\n  \"verificationprogress\": 0.9788762180334918,\r\n  \"initialblockdownload\": true,\r\n  \"chainwork\": \"0000000000000000000000000000000000000000481500309c4ab2d789f587f6\",\r\n  \"size_on_disk\": 2225580771,\r\n  \"pruned\": true,\r\n  \"pruneheight\": 788001,\r\n  \"automatic_pruning\": true,\r\n  \"prune_target_size\": 3145728000,\r\n  \"warnings\": \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\"\r\n}\r\n```\r\n",
      "user": {
        "login": "D33r-Gee",
        "id": 111142327,
        "node_id": "U_kgDOBp_ltw",
        "avatar_url": "https://avatars.githubusercontent.com/u/111142327?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/D33r-Gee",
        "html_url": "https://github.com/D33r-Gee",
        "followers_url": "https://api.github.com/users/D33r-Gee/followers",
        "following_url": "https://api.github.com/users/D33r-Gee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/D33r-Gee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/D33r-Gee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/D33r-Gee/subscriptions",
        "organizations_url": "https://api.github.com/users/D33r-Gee/orgs",
        "repos_url": "https://api.github.com/users/D33r-Gee/repos",
        "events_url": "https://api.github.com/users/D33r-Gee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/D33r-Gee/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1516971308",
      "submitted_at": "2023-07-06T17:04:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "commented",
      "id": 1659794915,
      "node_id": "IC_kwDOABII585i7nXj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1659794915",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T08:11:49Z",
      "updated_at": "2023-08-01T08:11:57Z",
      "author_association": "MEMBER",
      "body": "With #24008 landed this would a great time for a rebase (I briefly tried but it's non-trivial).",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1659794915",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "commented",
      "id": 1660856546,
      "node_id": "IC_kwDOABII585i_qji",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660856546",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-01T18:21:12Z",
      "updated_at": "2023-08-01T18:21:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "In the process of rebasing now.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1660856546",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10027491249,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJVr1-x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027491249",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "694f03a8d3953f0eff140313fb32742cb3b5f7a0",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/694f03a8d3953f0eff140313fb32742cb3b5f7a0",
      "created_at": "2023-08-07T18:24:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10027556076,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJVsFzs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027556076",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "83a550da01e4ad572c932e580867de5fa7338955",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/83a550da01e4ad572c932e580867de5fa7338955",
      "created_at": "2023-08-07T18:31:33Z"
    },
    {
      "event": "unlabeled",
      "id": 10027619632,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAJVsVUw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10027619632",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T18:39:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1668468059,
      "node_id": "IC_kwDOABII585jcs1b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1668468059",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T19:36:21Z",
      "updated_at": "2023-08-07T19:36:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased [`au.027`](https://github.com/jamesob/bitcoin/tree/au.027) -> [`au.029`](https://github.com/jamesob/bitcoin/tree/au.029)\r\n\r\nThe merge of #27607 really made that difficult.\r\n\r\nThis rebase fixes merge conflicts as well as incorporates @sdaftuar's changes from #27746. His net changes are in the first commit here.\r\n\r\nI'm very tired of this project and hope we can focus effort on getting this changeset reviewed and merged to be done with the development of this feature.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1668468059",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 10028067085,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJVuCkN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10028067085",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T19:36:21Z"
    },
    {
      "event": "subscribed",
      "id": 10028067099,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJVuCkb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10028067099",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T19:36:21Z"
    },
    {
      "event": "labeled",
      "id": 10028580801,
      "node_id": "LE_lADOABII585lWq3pzwAAAAJVv__B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10028580801",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-07T20:45:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1669064576,
      "node_id": "IC_kwDOABII585je-eA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1669064576",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-08T07:29:12Z",
      "updated_at": "2023-08-08T07:29:12Z",
      "author_association": "MEMBER",
      "body": "(The next rebase should be trivial, only a one-line include conflict, I think)",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1669064576",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10036540498,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJWOXRS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10036540498",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "created_at": "2023-08-08T14:45:23Z"
    },
    {
      "event": "unlabeled",
      "id": 10036983481,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAJWQDa5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10036983481",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-08T15:22:16Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1572046251,
      "node_id": "PRR_kwDOABII585ds4Wr",
      "url": null,
      "actor": null,
      "commit_id": "253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "The net processing changes look much better (no chainstate pointers on CNodeState, yay!).",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1572046251",
      "submitted_at": "2023-08-10T14:54:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1477561344,
      "node_id": "PRR_kwDOABII585YEcwA",
      "url": null,
      "actor": null,
      "commit_id": "253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Leaving some initial comments and will do some manual testing next.\r\n\r\n@jamesob there are several todo comments in the code that sound like you were planning to address them before merge. Are you still planning to address those? Otherwise, could you update the comments so that we know what your plan is for those changes?",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1477561344",
      "submitted_at": "2023-08-11T22:00:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "commented",
      "id": 1677134971,
      "node_id": "IC_kwDOABII585j9wx7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677134971",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-14T11:17:09Z",
      "updated_at": "2023-08-16T09:05:30Z",
      "author_association": "MEMBER",
      "body": "Test failure for a66790c662d6516b9fec9ca2cc97e410a72fe899 on Ubuntu 23.04 (gcc 12.3.0) \r\n\r\n```\r\n$ src/test/test_bitcoin --run_test=validation_chainstatemanager_tests\r\nRunning 7 test cases...\r\nnode/blockstorage.cpp:307 LoadBlockIndex: Assertion `GetParams().AssumeutxoForBlockhash(*snapshot_blockhash)' failed.\r\nunknown location(0): fatal error: in \"validation_chainstatemanager_tests/chainstatemanager_loadblockindex\": signal: SIGABRT (application abort requested)\r\ntest/validation_chainstatemanager_tests.cpp(441): last checkpoint\r\ntest_bitcoin: common/args.cpp:577: void ArgsManager::AddArg(const std::string&, const std::string&, unsigned int, const OptionsCategory&): Assertion `ret.second' failed.\r\nunknown location(0): fatal error: in \"validation_chainstatemanager_tests/chainstatemanager_snapshot_init\": signal: SIGABRT (application abort requested)\r\ntest/validation_chainstatemanager_tests.cpp(508): last checkpoint: \"chainstatemanager_snapshot_init\" fixture ctor\r\ntest_bitcoin: common/args.cpp:577: void ArgsManager::AddArg(const std::string&, const std::string&, unsigned int, const OptionsCategory&): Assertion `ret.second' failed.\r\nunknown location(0): fatal error: in \"validation_chainstatemanager_tests/chainstatemanager_snapshot_completion\": signal: SIGABRT (application abort requested)\r\ntest/validation_chainstatemanager_tests.cpp(577): last checkpoint: \"chainstatemanager_snapshot_completion\" fixture ctor\r\ntest_bitcoin: common/args.cpp:577: void ArgsManager::AddArg(const std::string&, const std::string&, unsigned int, const OptionsCategory&): Assertion `ret.second' failed.\r\nunknown location(0): fatal error: in \"validation_chainstatemanager_tests/chainstatemanager_snapshot_completion_hash_mismatch\": signal: SIGABRT (application abort requested)\r\ntest/validation_chainstatemanager_tests.cpp(660): last checkpoint: \"chainstatemanager_snapshot_completion_hash_mismatch\" fixture ctor\r\n```\r\n\r\nIt's happy again the next commit fe735572d05b95569e9c82fa1b1767c7da23b423.\r\n\r\n\r\n—\r\nHere's a torrent for 800,000: `magnet:?xt=urn:btih:50ee955bef37f5ec3e5b0df4cf0288af3d715a2e&dn=utxo-800000.dat&tr=udp%3A%2F%2Ftracker.bitcoin.sprovoost.nl%3A6969`\r\n\r\nYou'll need this:\r\n\r\n```json\r\n{\r\n  \"coins_written\": 111535121,\r\n  \"base_hash\": \"00000000000000000002a7c4c1e48d76c5a37902165a270156b7a8d72728a054\",\r\n  \"base_height\": 800000,\r\n  \"txoutset_hash\": \"7d69b87512db3d13b9758ea32b93ce468d18cf7456fb5d250c9e1bed9339e4d2\",\r\n  \"nchaintx\": 868965226\r\n}\r\n```\r\n\r\nI'll try a sync with this shortly. _Update_: ran successful IBD on Intel macOS and on Ubuntu 23. With the latter I first had it sync until 2013 so the dbcache would be 1 GB, before loading the snapshot. \r\n\r\n—\r\n\r\nOn macOS the shutdown (a day) after completing background sync seems gets stuck:\r\n\r\n```\r\n023-08-16T07:48:43Z [msghand] [net] Saw new cmpctblock header hash=0000000000000000000229118fcb007fc035045c3a3394233116aa25d496129e peer=398\r\n2023-08-16T07:48:44Z [msghand] UpdateTip: new best=0000000000000000000229118fcb007fc035045c3a3394233116aa25d496129e height=803421 version=0x20000000 log2_work=94.362393 tx=879900343 date='2023-08-16T07:48:37Z' progress=1.000000 cache=114.9MiB(924996txo)\r\n2023-08-16T07:49:00Z [msghand] New outbound peer connected: version: 70016, blocks=803421, peer=491 (block-relay-only)\r\n^C2023-08-16T07:50:33Z [addcon] addcon thread exit\r\n2023-08-16T07:50:33Z [opencon] opencon thread exit\r\n2023-08-16T07:50:33Z [init] Shutdown: In progress...\r\n2023-08-16T07:50:33Z [net] net thread exit\r\n2023-08-16T07:50:33Z [msghand] msghand thread exit\r\n2023-08-16T07:55:12Z [scheduler] Flushed fee estimates to fee_estimates.dat.\r\n2023-08-16T08:23:36Z [scheduler] Potential stale tip detected, will try using extra outbound peer (last tip update: 2092 seconds ago)\r\n```\r\n\r\nI didn't run with useful debug flags unfortunately. It was a pruned node. Despite `kill -9` it was able to restart in good shape though:\r\n\r\n```\r\n2023-08-16T09:03:57Z [init] [snapshot] cleaning up unneeded background chainstate, then reinitializing\r\n```",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1677134971",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "reviewed",
      "id": 1578539655,
      "node_id": "PRR_kwDOABII585eFpqH",
      "url": null,
      "actor": null,
      "commit_id": "253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Started review (will update list below with progress).\r\n- [X] 6be9fd22ee2b9759cdd30a7bca4d07a9346eb57b First draft of background sync logic (1/23)\r\n- [x] a62ed3267d69ae8f4e9edf68f4a0f5348fdefe2d bugfix: correct is_snapshot_cs in VerifyDB (2/23)\r\n- [x] 3b9d3d63d9ccb609ec08da34776f7c5f29d21a20 assumeutxo: disallow -reindex when background syncing (3/23)\r\n- [x] cdb73e44b7f0d4ea186ba657ddf7809434f0a12a chainparams: add blockhash to AssumeutxoData (4/23)\r\n- [x] 5ea9abfbac3543f2d2cef90a1528abed35623822 validation: MaybeRebalanceCaches when chain leaves IBD (5/23)\r\n- [x] d9afcd70910f30fe9c99afa4dbbcdd7ccaf29d6e validation: add ChainstateRole (6/23)\r\n- [x] 2856710077abbc8f07a97adfff5f6829358155be validation: pass ChainstateRole for validationinterface calls (7/23)\r\n- [ ] f2a15428277090d6ad387de6d517303b9bc4e2af validationinterface: only send zmq notifications for active (8/23)\r\n- [ ] 550ac6248d1a596207c357181edbec79236d576d wallet: validationinterface: only handle active chain notifications (9/23)\r\n- [ ] ddbd0639e0af4a56cd5f647e11e0d38f06d20a68 net_processing: validationinterface: ignore some events for bg chain (10/23)\r\n- [ ] c177b8f442892a9b865b0b771f0a4823f797322d index: cache indexer references on ChainstateManager (11/23)\r\n- [ ] f64eeaeeb83d1c21f2d9e65c630eee2a1a5d48ba validation: indexing changes for assumeutxo (12/23)\r\n- [ ] 9e2b8ef836aeb1dc2e4b57449fc56badebea6772 validation: pruning for multiple chainstates (13/23)\r\n- [ ] a66790c662d6516b9fec9ca2cc97e410a72fe899 validation: populate nChainTx value for assumedvalid chainstates (14/23)\r\n- [ ] fe735572d05b95569e9c82fa1b1767c7da23b423 blockstorage: segment normal/assumedvalid blockfiles (15/23)\r\n- [ ] d342085067306231a2a454c39d276495dbd13cd3 validation: assumeutxo: swap m_mempool on snapshot activation (16/23)\r\n- [ ] 8ac7427b41fdec1dbc7e06d0aa2c0e469b879ba2 rpc: add loadtxoutset (17/23)\r\n- [ ] bc3042436e4e4a84328a2e56ca021a617d37c27a rpc: add getchainstates (18/23)\r\n- [ ] 24497a881ebf699b92c01342a24f1c4b35b79590 test: add feature_assumeutxo functional test (19/23)\r\n- [ ] c5ce27802be60d81f909a8f0f6a3827f956d88e3 contrib: add script to demo/test assumeutxo (20/23)\r\n- [ ] 9e46cf539533076d6206964e8d74e504030fc4a5 doc: update release-process.md for assumeutxo (21/23)\r\n- [ ] 9e62b849852bfea64eda18f51137a4a53e80f8c0 chainparams: add assumeutxo param at height 788_000 (22/23)\r\n- [ ] 253bcd5fd392f70de82ec7c675f9777d1e098d50 assumeutxo: swap mempool on existing activation (23/23)\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1578539655",
      "submitted_at": "2023-08-15T16:49:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1579020103,
      "node_id": "PRR_kwDOABII585eHe9H",
      "url": null,
      "actor": null,
      "commit_id": "6be9fd22ee2b9759cdd30a7bca4d07a9346eb57b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1579020103",
      "submitted_at": "2023-08-15T16:58:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1580896920,
      "node_id": "PRR_kwDOABII585eOpKY",
      "url": null,
      "actor": null,
      "commit_id": "253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1580896920",
      "submitted_at": "2023-08-16T18:01:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "labeled",
      "id": 10144184531,
      "node_id": "LE_lADOABII585lWq3pzwAAAAJco_jT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10144184531",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-21T11:18:32Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1592088142,
      "node_id": "PRR_kwDOABII585e5VZO",
      "url": null,
      "actor": null,
      "commit_id": "253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1592088142",
      "submitted_at": "2023-08-23T21:25:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10186066436,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJfIwoE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10186066436",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "157e510bc6deaaca43401f15f10105e44926ca68",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/157e510bc6deaaca43401f15f10105e44926ca68",
      "created_at": "2023-08-24T21:10:31Z"
    },
    {
      "event": "commented",
      "id": 1692415097,
      "node_id": "IC_kwDOABII585k4DR5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1692415097",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-24T21:11:03Z",
      "updated_at": "2023-08-24T21:11:03Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased, but only part of the way addressing all feedback so far.\r\n\r\n- Took @ryanofsky's net_processing cleanup commit\r\n- Better error handling in loadtxoutset (@theStack)\r\n- Cleaned up unnecessary chainstate roles (@dergoegge, @ryanofsky)\r\n  - Refactoring and behavior changes are now separate commits\r\n",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1692415097",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 10186070226,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfIxjS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10186070226",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-24T21:11:04Z"
    },
    {
      "event": "subscribed",
      "id": 10186070239,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfIxjf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10186070239",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-24T21:11:04Z"
    },
    {
      "event": "mentioned",
      "id": 10186070255,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfIxjv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10186070255",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-24T21:11:04Z"
    },
    {
      "event": "subscribed",
      "id": 10186070272,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfIxkA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10186070272",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-24T21:11:04Z"
    },
    {
      "event": "mentioned",
      "id": 10186070288,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfIxkQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10186070288",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-24T21:11:04Z"
    },
    {
      "event": "subscribed",
      "id": 10186070295,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfIxkX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10186070295",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-24T21:11:04Z"
    },
    {
      "event": "unlabeled",
      "id": 10186761761,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAJfLaYh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10186761761",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-24T23:02:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 10187117666,
      "node_id": "LE_lADOABII585lWq3pzwAAAAJfMxRi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10187117666",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T00:23:44Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10189279724,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAJfVBHs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10189279724",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T06:36:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10195829831,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJfuARH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195829831",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e44815e9a754c967415402b34807633625393084",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/e44815e9a754c967415402b34807633625393084",
      "created_at": "2023-08-25T18:09:26Z"
    },
    {
      "event": "commented",
      "id": 1693764004,
      "node_id": "IC_kwDOABII585k9Mmk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1693764004",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:35Z",
      "updated_at": "2023-08-25T18:20:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "Okay, the latest rebase is pushed, and I believe I've addressed all outstanding feedback (with the exception of two marginal comments from @ryanofsky relating to the first commit here, which perhaps I'll leave to @sdaftuar... unless he doesn't get back in some amount of time, in which case I'll take a look myself).\r\n\r\nI've iterated through all commits to ensure they build and pass the chainstate unittests. I've also fixed the intermediate-commit test failure that @Sjors discovered, which was based on not updating the unittest to use a \"recognized\" snapshot early enough. I've introduced a commit that fixes that sequencing.\r\n\r\nFor anyone curious, the tag updates here are [`au.029`](https://github.com/jamesob/bitcoin/tree/au.029) -> [`au.031`](https://github.com/jamesob/bitcoin/tree/au.031) ([GitHub range diff](https://github.com/jamesob/bitcoin/compare/au.029..au.031)) but the diff is kind of useless because of the rebase.\r\n\r\nMuch more useful is doing the range-diff locally yourself:\r\n```sh\r\ngit range-diff master jamesob/au.029 jamesob/au.031\r\n```\r\n\r\nThanks again for continued review and testing @ryanofsky @dergoegge @fjahr @Sjors @theStack @achow101 @D33r-Gee @ismaelsadeeq @alexanderwiederin @mzumsande @hazeycode and anyone else I forgot.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1693764004",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 10195921216,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfuWlA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921216",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:35Z"
    },
    {
      "event": "subscribed",
      "id": 10195921220,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfuWlE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921220",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:35Z"
    },
    {
      "event": "mentioned",
      "id": 10195921228,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfuWlM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921228",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:35Z"
    },
    {
      "event": "subscribed",
      "id": 10195921232,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfuWlQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921232",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:35Z"
    },
    {
      "event": "mentioned",
      "id": 10195921240,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfuWlY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921240",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:35Z"
    },
    {
      "event": "subscribed",
      "id": 10195921249,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfuWlh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921249",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:35Z"
    },
    {
      "event": "mentioned",
      "id": 10195921264,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfuWlw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921264",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:36Z"
    },
    {
      "event": "subscribed",
      "id": 10195921305,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfuWmZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921305",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:36Z"
    },
    {
      "event": "mentioned",
      "id": 10195921321,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfuWmp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921321",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:36Z"
    },
    {
      "event": "subscribed",
      "id": 10195921333,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfuWm1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921333",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:36Z"
    },
    {
      "event": "mentioned",
      "id": 10195921347,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfuWnD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921347",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:36Z"
    },
    {
      "event": "subscribed",
      "id": 10195921355,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfuWnL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921355",
      "actor": {
        "login": "sdaftuar",
        "id": 7463573,
        "node_id": "MDQ6VXNlcjc0NjM1NzM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sdaftuar",
        "html_url": "https://github.com/sdaftuar",
        "followers_url": "https://api.github.com/users/sdaftuar/followers",
        "following_url": "https://api.github.com/users/sdaftuar/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sdaftuar/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sdaftuar/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
        "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
        "repos_url": "https://api.github.com/users/sdaftuar/repos",
        "events_url": "https://api.github.com/users/sdaftuar/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:36Z"
    },
    {
      "event": "mentioned",
      "id": 10195921362,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfuWnS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921362",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:36Z"
    },
    {
      "event": "subscribed",
      "id": 10195921375,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfuWnf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921375",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:36Z"
    },
    {
      "event": "mentioned",
      "id": 10195921387,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfuWnr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921387",
      "actor": {
        "login": "hazeycode",
        "id": 22148308,
        "node_id": "MDQ6VXNlcjIyMTQ4MzA4",
        "avatar_url": "https://avatars.githubusercontent.com/u/22148308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hazeycode",
        "html_url": "https://github.com/hazeycode",
        "followers_url": "https://api.github.com/users/hazeycode/followers",
        "following_url": "https://api.github.com/users/hazeycode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hazeycode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hazeycode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hazeycode/subscriptions",
        "organizations_url": "https://api.github.com/users/hazeycode/orgs",
        "repos_url": "https://api.github.com/users/hazeycode/repos",
        "events_url": "https://api.github.com/users/hazeycode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hazeycode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:37Z"
    },
    {
      "event": "subscribed",
      "id": 10195921407,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfuWn_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921407",
      "actor": {
        "login": "hazeycode",
        "id": 22148308,
        "node_id": "MDQ6VXNlcjIyMTQ4MzA4",
        "avatar_url": "https://avatars.githubusercontent.com/u/22148308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hazeycode",
        "html_url": "https://github.com/hazeycode",
        "followers_url": "https://api.github.com/users/hazeycode/followers",
        "following_url": "https://api.github.com/users/hazeycode/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hazeycode/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hazeycode/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hazeycode/subscriptions",
        "organizations_url": "https://api.github.com/users/hazeycode/orgs",
        "repos_url": "https://api.github.com/users/hazeycode/repos",
        "events_url": "https://api.github.com/users/hazeycode/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hazeycode/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:37Z"
    },
    {
      "event": "mentioned",
      "id": 10195921424,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfuWoQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921424",
      "actor": {
        "login": "alexanderwiederin",
        "id": 37130778,
        "node_id": "MDQ6VXNlcjM3MTMwNzc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37130778?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexanderwiederin",
        "html_url": "https://github.com/alexanderwiederin",
        "followers_url": "https://api.github.com/users/alexanderwiederin/followers",
        "following_url": "https://api.github.com/users/alexanderwiederin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexanderwiederin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexanderwiederin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexanderwiederin/subscriptions",
        "organizations_url": "https://api.github.com/users/alexanderwiederin/orgs",
        "repos_url": "https://api.github.com/users/alexanderwiederin/repos",
        "events_url": "https://api.github.com/users/alexanderwiederin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexanderwiederin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:37Z"
    },
    {
      "event": "subscribed",
      "id": 10195921430,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfuWoW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921430",
      "actor": {
        "login": "alexanderwiederin",
        "id": 37130778,
        "node_id": "MDQ6VXNlcjM3MTMwNzc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37130778?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexanderwiederin",
        "html_url": "https://github.com/alexanderwiederin",
        "followers_url": "https://api.github.com/users/alexanderwiederin/followers",
        "following_url": "https://api.github.com/users/alexanderwiederin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexanderwiederin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexanderwiederin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexanderwiederin/subscriptions",
        "organizations_url": "https://api.github.com/users/alexanderwiederin/orgs",
        "repos_url": "https://api.github.com/users/alexanderwiederin/repos",
        "events_url": "https://api.github.com/users/alexanderwiederin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexanderwiederin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:37Z"
    },
    {
      "event": "mentioned",
      "id": 10195921440,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfuWog",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921440",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:37Z"
    },
    {
      "event": "subscribed",
      "id": 10195921449,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfuWop",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921449",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:37Z"
    },
    {
      "event": "mentioned",
      "id": 10195921460,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfuWo0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921460",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:37Z"
    },
    {
      "event": "subscribed",
      "id": 10195921469,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfuWo9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921469",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:37Z"
    },
    {
      "event": "mentioned",
      "id": 10195921486,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJfuWpO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921486",
      "actor": {
        "login": "D33r-Gee",
        "id": 111142327,
        "node_id": "U_kgDOBp_ltw",
        "avatar_url": "https://avatars.githubusercontent.com/u/111142327?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/D33r-Gee",
        "html_url": "https://github.com/D33r-Gee",
        "followers_url": "https://api.github.com/users/D33r-Gee/followers",
        "following_url": "https://api.github.com/users/D33r-Gee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/D33r-Gee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/D33r-Gee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/D33r-Gee/subscriptions",
        "organizations_url": "https://api.github.com/users/D33r-Gee/orgs",
        "repos_url": "https://api.github.com/users/D33r-Gee/repos",
        "events_url": "https://api.github.com/users/D33r-Gee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/D33r-Gee/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:37Z"
    },
    {
      "event": "subscribed",
      "id": 10195921495,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJfuWpX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10195921495",
      "actor": {
        "login": "D33r-Gee",
        "id": 111142327,
        "node_id": "U_kgDOBp_ltw",
        "avatar_url": "https://avatars.githubusercontent.com/u/111142327?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/D33r-Gee",
        "html_url": "https://github.com/D33r-Gee",
        "followers_url": "https://api.github.com/users/D33r-Gee/followers",
        "following_url": "https://api.github.com/users/D33r-Gee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/D33r-Gee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/D33r-Gee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/D33r-Gee/subscriptions",
        "organizations_url": "https://api.github.com/users/D33r-Gee/orgs",
        "repos_url": "https://api.github.com/users/D33r-Gee/repos",
        "events_url": "https://api.github.com/users/D33r-Gee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/D33r-Gee/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-25T18:20:38Z"
    },
    {
      "event": "reviewed",
      "id": 1595889617,
      "node_id": "PRR_kwDOABII585fH1fR",
      "url": null,
      "actor": null,
      "commit_id": "e44815e9a754c967415402b34807633625393084",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Oops - forgot these comments. :)",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1595889617",
      "submitted_at": "2023-08-25T18:21:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "commented",
      "id": 1694660622,
      "node_id": "IC_kwDOABII585lAngO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1694660622",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-27T12:50:27Z",
      "updated_at": "2023-08-27T12:50:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Small update, I did a lot of manual testing on 157e510bc6deaaca43401f15f10105e44926ca68 while also monitoring stats like the size of the datadir etc. I mostly created my own snapshots on the current tip and then patched chainparams myself to be able to use them to push the limit a bit. It worked well and I didn't run into any issues aside from what I mention in #28350 which is not only an assumeutxo problem.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1694660622",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "reviewed",
      "id": 1599109755,
      "node_id": "PRR_kwDOABII585fUHp7",
      "url": null,
      "actor": null,
      "commit_id": "e44815e9a754c967415402b34807633625393084",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "This all looks very good and I feel like I got through the most complicated changes, but I'm still working through the rest. Most of my comments are not too important but I do think the indexing and pruning changes can be simplified a bit.\r\n\r\nProgress so far:\r\n\r\n- [X] 08a34e56ba7aa8714982d352238f1cb6eba43e29 net_processing: Request assumeutxo background chain blocks (1/24)\r\n- [X] 37af5f47541e77753d20bfbb7c105b55c0caf305 bugfix: correct is_snapshot_cs in VerifyDB (2/24)\r\n- [X] 1755c53365d53693213a721138a44bdd889d8794 assumeutxo: remove snapshot during -reindex{-chainstate} (3/24)\r\n- [X] 3d103bbf266bf3c8f66b3aff2237cc0a95f96a75 chainparams: add blockhash to AssumeutxoData (4/24)\r\n- [X] 3e7d3537fc06c8aff8a48edc8f179a70af46e04c validation: MaybeRebalanceCaches when chain leaves IBD (5/24)\r\n- [X] 95f45e38b5e47eaef56468909d04418b93e9c962 validation: add ChainstateRole (6/24)\r\n- [X] 9eda8224119450b8614837e0c8decfc81a6b9915 validation: only call UpdatedBlockTip for active chainstate (7/24)\r\n- [X] 2873d91ada1c240de280a35bbf169ed0c708e057 validation: pass ChainstateRole for validationinterface calls (8/24)\r\n- [X] b48729144fba1dbc64d603b2644a76c3f00d44eb validationinterface: only send zmq notifications for active (9/24)\r\n- [X] ba2f21a9ef88ce9631a2143f16569ee231953a91 wallet: validationinterface: only handle active chain notifications (10/24)\r\n- [X] 5d096add65e84530c907b5ee934af144067d5ef1 net_processing: validationinterface: ignore some events for bg chain (11/24)\r\n- [X] 688b68f34fe061c3064a516cdf77d4c155bfcafd index: cache indexer references on ChainstateManager (12/24)\r\n- [X] 5d01151b41b244dabeda54122400df17a3dfc4d2 validation: indexing changes for assumeutxo (13/24)\r\n- [X] b9ac4f7925e2d9dec67be06fdc2a381532581136 validation: pruning for multiple chainstates (14/24)\r\n- [ ] abaf61487bd5eb2c33ed62dae602b5f479f757f9 test: adjust chainstate tests to use recognized snapshot base (15/24)\r\n- [ ] a2a49ea7f1ed2931ab388bac677196dedc10714e validation: populate nChainTx value for assumedvalid chainstates (16/24)\r\n- [ ] 07517a2311c410dd107c4feb4e113bb7c629da8e blockstorage: segment normal/assumedvalid blockfiles (17/24)\r\n- [ ] 0e507021932f72aa7345bf84b805c7cda68eea65 validation: assumeutxo: swap m_mempool on snapshot activation (18/24)\r\n- [ ] 03de0d5ac9457b89e577a11e146cc394a8494b7b rpc: add loadtxoutset (19/24)\r\n- [ ] 05aba13ce27bbe7346ffb72a619638b6f84d3679 rpc: add getchainstates (20/24)\r\n- [ ] 60d6f6bbe91879d542439bec05ef406eb9954eb8 test: add feature_assumeutxo functional test (21/24)\r\n- [ ] 5394f2e9b7fea36d3cba43af82143f5c72c08ae5 contrib: add script to demo/test assumeutxo (22/24)\r\n- [ ] a3f96fbee900fdf23a160a461164a65a0c0cfe84 doc: update release-process.md for assumeutxo (23/24)\r\n- [ ] e44815e9a754c967415402b34807633625393084 chainparams: add assumeutxo param at height 788_000 (24/24)\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1599109755",
      "submitted_at": "2023-08-29T02:48:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "commented",
      "id": 1697226564,
      "node_id": "IC_kwDOABII585lKZ9E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697226564",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T11:02:19Z",
      "updated_at": "2023-08-29T11:02:19Z",
      "author_association": "MEMBER",
      "body": "Did code review at e44815e9a754c967415402b34807633625393084. Most of the @ryanofsky I think are worth addressing. Once these are addressed or resolved I will do my own clean path.\r\n\r\nI also spotted a couple of typos along the way.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1697226564",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 10219717209,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJhJIJZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10219717209",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T11:02:19Z"
    },
    {
      "event": "subscribed",
      "id": 10219717222,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJhJIJm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10219717222",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T11:02:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10226161306,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJhhtaa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10226161306",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1af901b60287f4130f2363cb68c962f437d9aefc",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/1af901b60287f4130f2363cb68c962f437d9aefc",
      "created_at": "2023-08-29T21:41:36Z"
    },
    {
      "event": "reviewed",
      "id": 1600882627,
      "node_id": "PRR_kwDOABII585fa4fD",
      "url": null,
      "actor": null,
      "commit_id": "1af901b60287f4130f2363cb68c962f437d9aefc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Okay, all feedback addressed - some good simplifications there. Thanks for the comprehensive review, @ryanofsky @naumenkogs.\r\n\r\nYou can check the diff with\r\n```\r\ngit range-diff upstream/master jamesob/au.031 jamesob/au.033\r\n```",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1600882627",
      "submitted_at": "2023-08-29T21:44:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "labeled",
      "id": 10226680499,
      "node_id": "LE_lADOABII585lWq3pzwAAAAJhjsKz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10226680499",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-29T23:02:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10232752456,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJh62lI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10232752456",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b6b62a96bd6d1eccaf6bd9eadfa1c60232aadeed",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/b6b62a96bd6d1eccaf6bd9eadfa1c60232aadeed",
      "created_at": "2023-08-30T12:54:24Z"
    },
    {
      "event": "commented",
      "id": 1699307923,
      "node_id": "IC_kwDOABII585lSWGT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1699307923",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T14:36:06Z",
      "updated_at": "2023-08-30T14:36:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "Had to push a small commit to fix underflow in pruning calculations.\r\n```\r\ngit range-diff upstream/master jamesob/au.033 jamesob/au.034\r\n```",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1699307923",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "unlabeled",
      "id": 10234309313,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAJiAyrB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10234309313",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-08-30T15:06:00Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1602900172,
      "node_id": "PRR_kwDOABII585filDM",
      "url": null,
      "actor": null,
      "commit_id": "b6b62a96bd6d1eccaf6bd9eadfa1c60232aadeed",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Got as far as the blockstorage commit this time and wrote a lot of feedback on it. There's a lot of small cleanups I suggested there, but I also suggested a different approach in https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311007889 that I think would simplify code, avoid the needing to add any ChainstateRole arguments to BlockManager methods, and avoid potentially mixing blocks from the background and snapshot chainstates into the last background block file. I think the current approach is ok if you want to keep it, but it does seems messier than it needs to be and not as reliable as it could be.\r\n\r\nProgress so far:\r\n\r\n- [X] 7b93d4adc976bdb32306951b21d7c98d9dacc972 net_processing: Request assumeutxo background chain blocks (1/23)\r\n- [X] b85530c18bfe24ff434f32f959d8dd843afca54d bugfix: correct is_snapshot_cs in VerifyDB (2/23)\r\n- [X] 8f6d6a49552c84a3a9112b39499685f018abfa40 assumeutxo: remove snapshot during -reindex{-chainstate} (3/23)\r\n- [X] 7a62705f421b998a812f0f018dbf8f1211d57535 chainparams: add blockhash to AssumeutxoData (4/23)\r\n- [X] 167f94d905ca1cc77cb613e89cea74275807fed5 validation: MaybeRebalanceCaches when chain leaves IBD (5/23)\r\n- [X] 288dd732b5c0085618598fe3dbba23ac6d194173 validation: add ChainstateRole (6/23)\r\n- [X] b06daa581f35a8e4736682929e356d560fa6a5da validation: only call UpdatedBlockTip for active chainstate (7/23)\r\n- [X] d3b533d3f1e80addca2ab0b3ee97215d5d03d984 validation: pass ChainstateRole for validationinterface calls (8/23)\r\n- [X] 1fda82e7192c25363d57ab203b5db8eac6088491 validationinterface: only send zmq notifications for active (9/23)\r\n- [X] 3e446ffd122e11b206692f6ac702df989884fbe7 wallet: validationinterface: only handle active chain notifications (10/23)\r\n- [X] fbd05a9eed1e40be0c4915e2aef98b3771d7af6c net_processing: validationinterface: ignore some events for bg chain (11/23)\r\n- [X] 0dd0cda274c244c466b27ee5f390d4cdd2e1e195 validation: indexing changes for assumeutxo (12/23)\r\n- [X] 5e4c824433fb4bf8b380d0f61a0aa424dc5456d4 validation: pruning for multiple chainstates (13/23)\r\n- [X] 76d616c957522e7be52eaf10b3ac33accaf75c45 test: adjust chainstate tests to use recognized snapshot base (14/23)\r\n- [X] 9df91113b8bbab8c98924bef61da388a8141b4e6 validation: populate nChainTx value for assumedvalid chainstates (15/23)\r\n- [X] 1c668b690eeb4b98899be7e0ff33373b79932f2a blockstorage: segment normal/assumedvalid blockfiles (16/23)\r\n- [ ] f2dd7a0c1b67d3e4a6e086a619eff34fe6625263 validation: assumeutxo: swap m_mempool on snapshot activation (17/23)\r\n- [ ] 82a8744f1384f07dc30aaa6339b0b8fb32dc3af0 rpc: add loadtxoutset (18/23)\r\n- [ ] 555206238129c6ed9fcbbc498c81455c7fe6d851 rpc: add getchainstates (19/23)\r\n- [ ] cc85742de115a1e9533459acc8707b58c397ab6a test: add feature_assumeutxo functional test (20/23)\r\n- [ ] 194eb1fba6c9237affc273e5c087e54502ee7598 contrib: add script to demo/test assumeutxo (21/23)\r\n- [ ] 36cece6c488bfb810282e352f282a92941443be1 doc: update release-process.md for assumeutxo (22/23)\r\n- [ ] b6b62a96bd6d1eccaf6bd9eadfa1c60232aadeed chainparams: add assumeutxo param at height 788_000 (23/23)\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1602900172",
      "submitted_at": "2023-08-31T02:20:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1604300972,
      "node_id": "PRR_kwDOABII585fn7Cs",
      "url": null,
      "actor": null,
      "commit_id": "b6b62a96bd6d1eccaf6bd9eadfa1c60232aadeed",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Reviewd up to 5e4c824433fb4bf8b380d0f61a0aa424dc5456d4",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1604300972",
      "submitted_at": "2023-08-31T09:53:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1604598585,
      "node_id": "PRR_kwDOABII585fpDs5",
      "url": null,
      "actor": null,
      "commit_id": "b6b62a96bd6d1eccaf6bd9eadfa1c60232aadeed",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1604598585",
      "submitted_at": "2023-08-31T12:28:57Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1605373711,
      "node_id": "PRR_kwDOABII585fsA8P",
      "url": null,
      "actor": null,
      "commit_id": "b6b62a96bd6d1eccaf6bd9eadfa1c60232aadeed",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1605373711",
      "submitted_at": "2023-08-31T18:32:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10248661106,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJi3ihy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10248661106",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1b1d7110e67da11752ae1efadb1c12a9054eb867",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/1b1d7110e67da11752ae1efadb1c12a9054eb867",
      "created_at": "2023-08-31T18:43:27Z"
    },
    {
      "event": "reviewed",
      "id": 1604775714,
      "node_id": "PRR_kwDOABII585fpu8i",
      "url": null,
      "actor": null,
      "commit_id": "1b1d7110e67da11752ae1efadb1c12a9054eb867",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Yesterday's feedback addressed; thanks @ryanofsky @naumenkogs. The diff gets smaller.\r\n\r\n```\r\ngit range-diff upstream/master au.034 au.035\r\n```",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1604775714",
      "submitted_at": "2023-08-31T18:44:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1608559074,
      "node_id": "PRR_kwDOABII585f4Kni",
      "url": null,
      "actor": null,
      "commit_id": "51622e9c1f7ed16f65844817a4a5e9bcbc157b4f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1608559074",
      "submitted_at": "2023-09-03T17:51:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1609034756,
      "node_id": "PRR_kwDOABII585f5-wE",
      "url": null,
      "actor": null,
      "commit_id": "51622e9c1f7ed16f65844817a4a5e9bcbc157b4f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1609034756",
      "submitted_at": "2023-09-04T08:33:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1609046035,
      "node_id": "PRR_kwDOABII585f6BgT",
      "url": null,
      "actor": null,
      "commit_id": "51622e9c1f7ed16f65844817a4a5e9bcbc157b4f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1609046035",
      "submitted_at": "2023-09-04T08:39:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "commented",
      "id": 1704925919,
      "node_id": "IC_kwDOABII585lnxrf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1704925919",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-04T09:27:45Z",
      "updated_at": "2023-09-04T09:27:45Z",
      "author_association": "MEMBER",
      "body": "Reviewed everything 1b1d7110e67da11752ae1efadb1c12a9054eb867.\r\nACK once some remaining comments are addressed.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1704925919",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10319081780,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJnELE0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10319081780",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9634d71e8b2f9cdccb437e2a689ac298c05c0583",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/9634d71e8b2f9cdccb437e2a689ac298c05c0583",
      "created_at": "2023-09-08T14:42:41Z"
    },
    {
      "event": "reviewed",
      "id": 1617109738,
      "node_id": "PRR_kwDOABII585gYyLq",
      "url": null,
      "actor": null,
      "commit_id": "9634d71e8b2f9cdccb437e2a689ac298c05c0583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "All feedback addressed, thanks @ryanofsky @andrewtoth @naumenkogs. \r\n\r\n[`au.036`](https://github.com/jamesob/bitcoin/releases/tag/au.036); range-diff:\r\n```shell\r\n( git remote -v | grep jamesob ) || git remote add jamesob https://github.com/jamesob/bitcoin\r\ngit fetch jamesob\r\ngit range-diff upstream/master jamesob/au.035 jamesob/au.036\r\n```",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1617109738",
      "submitted_at": "2023-09-08T14:54:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1618712088,
      "node_id": "PRR_kwDOABII585ge5YY",
      "url": null,
      "actor": null,
      "commit_id": "9634d71e8b2f9cdccb437e2a689ac298c05c0583",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I made some more progress reviewing 9634d71e8b2f9cdccb437e2a689ac298c05c0583, but unfortunately got bogged down in the chainstatemanager_loadblockindex test again and suggested a lot of clarifications for it [below](https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1320930329).\r\n\r\nRelated to this, I also found a possible bug in the `ChainstateManager::LoadBlockIndex` function and posted a comment in the earlier PR: https://github.com/bitcoin/bitcoin/pull/27746#discussion_r1320915269",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1618712088",
      "submitted_at": "2023-09-11T02:28:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "labeled",
      "id": 10331647728,
      "node_id": "LE_lADOABII585lWq3pzwAAAAJn0G7w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10331647728",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T09:32:19Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10337183153,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJoJOWx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10337183153",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9f9ffb655e4236f8d567b961102f53c5933e8aa8",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/9f9ffb655e4236f8d567b961102f53c5933e8aa8",
      "created_at": "2023-09-11T17:43:46Z"
    },
    {
      "event": "unlabeled",
      "id": 10338371820,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAJoNwjs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10338371820",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T19:52:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1714510045,
      "node_id": "IC_kwDOABII585mMVjd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1714510045",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T20:10:41Z",
      "updated_at": "2023-09-11T20:10:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "Pushed an update adding @ryanofsky's good test changes, an import fix for the RPC code, and a documentation commit describing the confusing naming of `HaveTxsDownloaded()`.\r\n\r\n[`au.037`](https://github.com/jamesob/bitcoin/releases/tag/au.037)\r\n```\r\n( git remote -v | grep jamesob ) || git remote add jamesob https://github.com/jamesob/bitcoin\r\ngit fetch jamesob\r\ngit range-diff upstream/master jamesob/au.036 jamesob/au.037\r\n```\r\n\r\nI've run this locally for a few IBD cycles.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1714510045",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 10338528615,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJoOW1n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10338528615",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T20:10:42Z"
    },
    {
      "event": "subscribed",
      "id": 10338528626,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJoOW1y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10338528626",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-11T20:10:42Z"
    },
    {
      "event": "commented",
      "id": 1715132009,
      "node_id": "IC_kwDOABII585mOtZp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1715132009",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-12T07:13:01Z",
      "updated_at": "2023-09-12T07:13:01Z",
      "author_association": "MEMBER",
      "body": "ACK 9f9ffb655e4236f8d567b961102f53c5933e8aa8",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1715132009",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "reviewed",
      "id": 1622395165,
      "node_id": "PRR_kwDOABII585gs8kd",
      "url": null,
      "actor": null,
      "commit_id": "9f9ffb655e4236f8d567b961102f53c5933e8aa8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Working through 9f9ffb655e4236f8d567b961102f53c5933e8aa8. Got through the segmented storage change which is much simpler now, but I did leave some comments. Will continue reviewing.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1622395165",
      "submitted_at": "2023-09-12T17:37:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1625584894,
      "node_id": "PRR_kwDOABII585g5HT-",
      "url": null,
      "actor": null,
      "commit_id": "9f9ffb655e4236f8d567b961102f53c5933e8aa8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 9f9ffb655e4236f8d567b961102f53c5933e8aa8. Completely reviewed this now and this all looks very good to me. The main new thing is some suggestions to make `getchainstates` RPC a little more user friendly",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1625584894",
      "submitted_at": "2023-09-14T02:31:11Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "labeled",
      "id": 10381509312,
      "node_id": "LE_lADOABII585lWq3pzwAAAAJqyULA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10381509312",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-15T09:54:42Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1627779274,
      "node_id": "PRR_kwDOABII585hBfDK",
      "url": null,
      "actor": null,
      "commit_id": "9f9ffb655e4236f8d567b961102f53c5933e8aa8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Ran a successful IBD on block 800,000 using 9f9ffb655e4236f8d567b961102f53c5933e8aa8. Also studied part of the first commit. To be continued.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1627779274",
      "submitted_at": "2023-09-16T23:38:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10392120906,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJray5K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10392120906",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "eea51b6c7d5f6c30b2c951ff382114006af98e7d",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/eea51b6c7d5f6c30b2c951ff382114006af98e7d",
      "created_at": "2023-09-17T22:35:43Z"
    },
    {
      "event": "reviewed",
      "id": 1630102347,
      "node_id": "PRR_kwDOABII585hKWNL",
      "url": null,
      "actor": null,
      "commit_id": "eea51b6c7d5f6c30b2c951ff382114006af98e7d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "All feedback addressed.\r\n\r\n```\r\n( git remote -v | grep jamesob ) || git remote add jamesob https://github.com/jamesob/bitcoin\r\ngit fetch jamesob\r\ngit range-diff upstream/master jamesob/au.037 jamesob/au.038\r\n```",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1630102347",
      "submitted_at": "2023-09-17T22:38:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "unlabeled",
      "id": 10392288957,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAJrbb69",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10392288957",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-18T00:15:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1633063450,
      "node_id": "PRR_kwDOABII585hVpIa",
      "url": null,
      "actor": null,
      "commit_id": "eea51b6c7d5f6c30b2c951ff382114006af98e7d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK eea51b6c7d5f6c30b2c951ff382114006af98e7d",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1633063450",
      "submitted_at": "2023-09-20T01:20:39Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "review_requested",
      "id": 10416643451,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJs4V17",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10416643451",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T01:20:45Z",
      "requested_reviewer": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1635464665,
      "node_id": "PRR_kwDOABII585hezXZ",
      "url": null,
      "actor": null,
      "commit_id": "eea51b6c7d5f6c30b2c951ff382114006af98e7d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1635464665",
      "submitted_at": "2023-09-20T13:01:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "commented",
      "id": 1727846633,
      "node_id": "IC_kwDOABII585m_Njp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1727846633",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T14:28:16Z",
      "updated_at": "2023-09-20T14:28:16Z",
      "author_association": "MEMBER",
      "body": "Concept ACK (probably already did that in the previous incarnation).\r\n\r\nAfter some offline discussion, I'd like to suggest that we replace 3ed4f1f8ddbe39a2ecacb0d73e174ffd77efbe00 with a commit that adds params for testnet and signet, but not for mainnet. I made a note to generate snapshots and torrents for these.\r\n\r\nThis allows anyone to test the full functionality without a recompile on these test networks. And anyone who knows how to compile can test it on mainnet.\r\n\r\nAdding the first mainnet hash can be done in a later more focussed PR (easier to review for more people). I also think we should use that opportunity to reevaluate the trade-off between committing to a snapshot in the code or having the RPC accept anything (file + checksum argument). The latter would allow anyone to create and promote fake snapshots, but the former could motivate someone to release a compromised binary by claiming they \"only changed the hash, so it's faster\".\r\n\r\nI still plan to review the full code of this PR, but not sure when.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1727846633",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "commented",
      "id": 1727862849,
      "node_id": "IC_kwDOABII585m_RhB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1727862849",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T14:37:15Z",
      "updated_at": "2023-09-20T14:37:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "> After some offline discussion, I'd like to suggest that we replace https://github.com/bitcoin/bitcoin/commit/3ed4f1f8ddbe39a2ecacb0d73e174ffd77efbe00 with a commit that adds params for testnet and signet, but not for mainnet.\r\n>\r\n> I also think we should use that opportunity to reevaluate the trade-off between committing to a snapshot in the code or having the RPC accept anything (file + checksum argument).\r\n\r\nI'm happy to merge a regtest/signet-only activated version of this PR and defer mainnet parameters. Though it's worth noting that, as it stands, to use this feature you have to know how to interact with the RPC interface - so from that standpoint it still feels pretty opt-in to me.\r\n\r\nWhat I'm not happy to do is rebase this PR for the next few months while we decide on what the latest iteration of the conceptually-perfect approach is with little new information from the last 3 years. I'm about done working on this feature - I have other things I'd like to do - and given the broad nature of the changes here, the rebase burden is pretty hefty.\r\n\r\nI'm not saying we shortcircuit review, but if faced with the prospect of rebasing indefinitely without some kind of concerted effort to actually get this functionality in, I'll probably just close this PR and let someone else pick it up if/when the feature actually matters enough to clear the activation-energy-hurdle of this project.",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1727862849",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "commented",
      "id": 1727914355,
      "node_id": "IC_kwDOABII585m_eFz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1727914355",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T15:05:37Z",
      "updated_at": "2023-09-20T15:05:37Z",
      "author_association": "MEMBER",
      "body": "I also prefer to merge this and then change things later. By leaving the mainnet params empty, I suspect it will be easier to get this merged. I think it's fine to e.g. change from a hardcoded chain param to an RPC method later, that shouldn't involve any rebase on your end. ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1727914355",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "commented",
      "id": 1727936044,
      "node_id": "IC_kwDOABII585m_jYs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1727936044",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T15:17:42Z",
      "updated_at": "2023-09-20T15:17:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "I agree with Sjors it would be good to move commit 3ed4f1f8ddbe39a2ecacb0d73e174ffd77efbe00 to another PR. I think there is value in getting the assumeutxo feature and bugfixes here merged so they can be tested by developers and users who are able to tweak the source and experiment. Adding the literal block and snapshot hashes for block 788,000 to the source code seems like a separate thing that would be easy to do later.\r\n\r\n(Also, in terms of review, I acked the PR but didn't spend much time looking at commit 3ed4f1f8ddbe39a2ecacb0d73e174ffd77efbe00, and I didn't verify the hash values).\r\n\r\nI have some notes about the offline discussion sjors referenced which I'll paste below. I don't think the discussion covered anything new, just familiar topics. I think the main takeaway is that the code is in good shape and once it is merged we should be able to make incremental progress rolling the feature out.\r\n\r\n---\r\n\r\n### assumeUTXO Update Discussion\r\n\r\n* One remaining PR\r\n   * https://github.com/bitcoin/bitcoin/pull/27596\r\n   * Adds loadtxoutset and getchainstate RPC, documentation, scripts, tests\r\n   * Adds critical functionality needed for assumeutxo validation to work: net processing updates, validation interface updates, verifydb bugfix, cache rebalancing\r\n   * Makes other improvements so pruning, indexing, -reindex features are compatible with assumeutxo and work nicely\r\n   * Adds hardcoded assumeutxo hash at height 788,000\r\n      * Probably this should be moved to separate PR?\r\n* Questions about initial next steps (unanswered):\r\n   * Which release is this PRed target for?\r\n   * Does it make sense to merge code changes first, then hash later?\r\n   * Maybe staged rollout makes sense? First merge code changes, then merge hash, then distribute snapshots?\r\n      * Assumeutxo is a new feature which needs testing.\r\n      * Start by merging functionality but require modifying source to actually use it.\r\n      * Then add hardcoded hash and let binary users create snapshots, verify snapshots, and load snapshots.\r\n      * Later work on distributing snapshot files, making the feature more accessible.\r\n* Longer term questions\r\n   * Should snapshots hash be configurable, allowed to be specified on command line?\r\n      * Potentially risky to allow but not allowing might incentivize using unofficial builds\r\n   * Should other hashes by added or supported?\r\n      * Muhash would make it a easier for someone running a node to verify snapshot hashes hardcoded in source code are correct, because no it will no longer require rolling back chainstate\r\n      * Bittorrent infohash could be distributed outside of source so user can know they are using the right torrent without having to download the whole thing and try to load it with the RPC\r\n   * Should hashes eventually be removed from source code?\r\n      * Having snapshot hashes could be considered a regression, since we are in the process of removing checkpoint hashes\r\n      * Having snapshot hashes potentially incentivizes modified Bitcoin Core binaries that provide more recent snapshots that could be malicious\r\n   * Should source code contain only one snapshot hash, or historical snapshots?\r\n   * Concerns about no one validating the hash\r\n      * Future Bitcoin developers could provide invalid hashes\r\n      * The attack would be a public, non stealth attack\r\n      * Switching to muhash could make it easier for more people to verify the hash\r\n   * P2P way of distributing snapshots and hashes separate from source distribution\r\n      * Have a new hash every 50,000 block\r\n      * Or some other fixed N blocks\r\n      * Release would have the most recent one\r\n      * One of the original ideas was distributing over the P2P network\r\n* Misc\r\n   * Reliability of stop at height\r\n      * Jameob’s makesnapshot script resolves this",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1727936044",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10425727027,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJta_gz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10425727027",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "32b797f37ecd25b0cda5a0ab927852bcd3284500",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/32b797f37ecd25b0cda5a0ab927852bcd3284500",
      "created_at": "2023-09-20T16:57:49Z"
    },
    {
      "event": "reviewed",
      "id": 1635926855,
      "node_id": "PRR_kwDOABII585hgkNH",
      "url": null,
      "actor": null,
      "commit_id": "32b797f37ecd25b0cda5a0ab927852bcd3284500",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the continued review.\r\n\r\nI've removed the mainnet assumeutxo parameters, as well as the release notes announcing the availability of the RPC command. Agree that it's easy/advisable to add those things in a follow-up PR. The snapshot should probably be regenerated at a more recent height anyway.\r\n\r\n```shell\r\n( git remote -v | grep jamesob ) || git remote add jamesob https://github.com/jamesob/bitcoin\r\ngit fetch jamesob\r\ngit range-diff upstream/master jamesob/au.038 jamesob/au.039\r\n```",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1635926855",
      "submitted_at": "2023-09-20T16:59:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1637406995,
      "node_id": "PRR_kwDOABII585hmNkT",
      "url": null,
      "actor": null,
      "commit_id": "32b797f37ecd25b0cda5a0ab927852bcd3284500",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 32b797f37ecd25b0cda5a0ab927852bcd3284500. Just minor code changes since last review: removing hardcoded array size, updating comments and documentation. Commits adding mainnet snapshot hash 8ba1034bb07af2815b6c47eaad530bf5183af758 and 3ed4f1f8ddbe39a2ecacb0d73e174ffd77efbe00 were also dropped to be moved to a followup.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1635926855\r\n\r\n> I've removed the mainnet assumeutxo parameters, as well as the release notes announcing the availability of the RPC command.\r\n\r\nThe release notes are still added in 4193ef8fe1d8480f7208a9278be9ab5759bf5fd0. But I think this is fine. They can always be cleaned up or tweaked during this release process. The change to 8ba1034bb07af2815b6c47eaad530bf5183af758 which updated the release process instructions was dropped, and this seems fine too. No need to have instructions for updating a hash value that hasn't been added yet.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1637406995",
      "submitted_at": "2023-09-21T09:49:26Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1634958794,
      "node_id": "PRR_kwDOABII585hc33K",
      "url": null,
      "actor": null,
      "commit_id": "32b797f37ecd25b0cda5a0ab927852bcd3284500",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 32b797f37ecd25b0cda5a0ab927852bcd3284500\r\n\r\nMy suggestions probably could be done in a follow-up.",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1634958794",
      "submitted_at": "2023-09-21T12:56:42Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "commented",
      "id": 1729810102,
      "node_id": "IC_kwDOABII585nGs62",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1729810102",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-21T15:25:34Z",
      "updated_at": "2023-09-21T15:25:34Z",
      "author_association": "MEMBER",
      "body": "Chainparams for testnet and signet are here #28516, also links to a branch with mainnet chainparams for 800,000. ",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1729810102",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "reviewed",
      "id": 1640753506,
      "node_id": "PRR_kwDOABII585hy-li",
      "url": null,
      "actor": null,
      "commit_id": "32b797f37ecd25b0cda5a0ab927852bcd3284500",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "tACK 1b1d7110e67da11752ae1efadb1c12a9054eb867 (around 3 weeks ago), performed the long/ real test, it seemed stuck at some point but it finished successfully, later when I tried to re-execute `loadtxoutset` was responding correctly that the procedure was already done, `getchainstates` output was correct.\r\n\r\nI'll re-test with the latest update next week and I'll try to dig a bit more into the code.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1640753506",
      "submitted_at": "2023-09-23T00:34:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "review_requested",
      "id": 10452157680,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJu_0Tw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10452157680",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-23T00:34:13Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1739365466,
      "node_id": "IC_kwDOABII585nrJxa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1739365466",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:29:16Z",
      "updated_at": "2023-09-28T14:30:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "IRC meeting mentioned that this might be ready for merge. I think it could use some more review, but would be helpful to know:\r\n\r\n- Who else is planning to review this\r\n- Whether it would be ok to merge before the 26.0 feature freeze\r\n- Whether there are any objections to merging this in its current form\r\n\r\nCurrent PR (32b797f37ecd25b0cda5a0ab927852bcd3284500) adds the `loadtxoutset` RPC but it still can't be called on mainnet without modifying the source to add the snapshot hash.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1739365466",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10500357326,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJx3rzO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500357326",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:29:22Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10500357485,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJx3r1t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500357485",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:29:23Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10500367258,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJx3uOa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500367258",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:30:12Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10500367459,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJx3uRj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500367459",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:30:13Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10500377489,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJx3wuR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500377489",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:31:03Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10500377650,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJx3wwy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500377650",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:31:03Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1739437788,
      "node_id": "IC_kwDOABII585nrbbc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1739437788",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:53:05Z",
      "updated_at": "2023-09-28T14:53:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Who else is planning to review this\r\n\r\nI will review it early next week (unless it's merged before).",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1739437788",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10500651649,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJx4zqB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500651649",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:53:11Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10500651836,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJx4zs8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500651836",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:53:12Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1739438212,
      "node_id": "IC_kwDOABII585nrbiE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1739438212",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:53:13Z",
      "updated_at": "2023-09-28T14:53:13Z",
      "author_association": "MEMBER",
      "body": "If we want to merge it before 26.0 then the main review priority should be to ensure it can't break non-snapshot IBD. Generally I think it's safer to merge this after the branch-off so it can stew in master for a bit.\r\n\r\nIf we do merge it earlier, then we should also merge #28516; there's no point in (slightly) increasing the risk if there's no benefit. Without that PR the new functionality can only be tested with a recompile, which you might as well do on master.\r\n\r\nI also still plan to review it.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1739438212",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10500653456,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJx40GQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500653456",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:53:19Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10500653666,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJx40Ji",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500653666",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T14:53:20Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1739501274,
      "node_id": "IC_kwDOABII585nrq7a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1739501274",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T15:15:14Z",
      "updated_at": "2023-09-28T15:15:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I think it could use some more review\r\n\r\nI agree, I assumed that @pablomartin4btc 's ACK was on the latest version, two ACKs on the latest version is not enough. I am re-reviewing this week. And I agree with Sjors we should also get #28516 in.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1739501274",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 10500919183,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJx50-P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500919183",
      "actor": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T15:15:15Z"
    },
    {
      "event": "subscribed",
      "id": 10500919199,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJx50-f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500919199",
      "actor": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T15:15:15Z"
    },
    {
      "event": "review_request_removed",
      "id": 10500920755,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJx51Wz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500920755",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T15:15:22Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10500920889,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJx51Y5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10500920889",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T15:15:23Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1740115240,
      "node_id": "IC_kwDOABII585nuA0o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1740115240",
      "actor": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T23:18:34Z",
      "updated_at": "2023-09-28T23:18:34Z",
      "author_association": "MEMBER",
      "body": "> I assumed that @pablomartin4btc 's ACK was on the latest version\r\n\r\n@fjahr, no, sorry, was on a previous one, and as I mentioned, something I noticed was that at the very end of the process, the node/ `bitcoind` was unresponsive and the `cli` commands (eg `getchainstates`) were giving timeout, until it seems it got unstuck and it was finally synced to the tip, not sure if it was during the flushing to disk. \r\n\r\nI'll re-test on the latest asap and will provide more details. ",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1740115240",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 10505129564,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJyJ45c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10505129564",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T23:18:34Z"
    },
    {
      "event": "subscribed",
      "id": 10505129580,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJyJ45s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10505129580",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T23:18:34Z"
    },
    {
      "event": "mentioned",
      "id": 10505129593,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJyJ455",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10505129593",
      "actor": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T23:18:34Z"
    },
    {
      "event": "subscribed",
      "id": 10505129602,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJyJ46C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10505129602",
      "actor": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T23:18:34Z"
    },
    {
      "event": "review_request_removed",
      "id": 10505129927,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJyJ4_H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10505129927",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T23:18:38Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10505129987,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJyJ5AD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10505129987",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-28T23:18:39Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1741178883,
      "node_id": "IC_kwDOABII585nyEgD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1741178883",
      "actor": {
        "login": "D33r-Gee",
        "id": 111142327,
        "node_id": "U_kgDOBp_ltw",
        "avatar_url": "https://avatars.githubusercontent.com/u/111142327?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/D33r-Gee",
        "html_url": "https://github.com/D33r-Gee",
        "followers_url": "https://api.github.com/users/D33r-Gee/followers",
        "following_url": "https://api.github.com/users/D33r-Gee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/D33r-Gee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/D33r-Gee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/D33r-Gee/subscriptions",
        "organizations_url": "https://api.github.com/users/D33r-Gee/orgs",
        "repos_url": "https://api.github.com/users/D33r-Gee/repos",
        "events_url": "https://api.github.com/users/D33r-Gee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/D33r-Gee/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T16:29:49Z",
      "updated_at": "2023-09-29T16:29:49Z",
      "author_association": "NONE",
      "body": "> Who else is planning to review this\r\n\r\nI am currently testing the latest commit https://github.com/bitcoin/bitcoin/commit/32b797f37ecd25b0cda5a0ab927852bcd3284500\r\n\r\nAnd to be clear we are now testing on `signet` and `testnet` only?\r\n\r\n`mainnet` testing will happen on https://github.com/bitcoin/bitcoin/pull/28516 ?",
      "user": {
        "login": "D33r-Gee",
        "id": 111142327,
        "node_id": "U_kgDOBp_ltw",
        "avatar_url": "https://avatars.githubusercontent.com/u/111142327?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/D33r-Gee",
        "html_url": "https://github.com/D33r-Gee",
        "followers_url": "https://api.github.com/users/D33r-Gee/followers",
        "following_url": "https://api.github.com/users/D33r-Gee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/D33r-Gee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/D33r-Gee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/D33r-Gee/subscriptions",
        "organizations_url": "https://api.github.com/users/D33r-Gee/orgs",
        "repos_url": "https://api.github.com/users/D33r-Gee/repos",
        "events_url": "https://api.github.com/users/D33r-Gee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/D33r-Gee/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1741178883",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10513319498,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJypIZK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10513319498",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T16:29:54Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10513319603,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJypIaz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10513319603",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T16:29:54Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 10514481599,
      "node_id": "LE_lADOABII585lWq3pzwAAAAJytkG_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10514481599",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T18:54:49Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1741363606,
      "node_id": "IC_kwDOABII585nyxmW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1741363606",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T19:08:02Z",
      "updated_at": "2023-09-29T19:08:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "> And to be clear we are now testing on `signet` and `testnet` only?\r\n> \r\n> `mainnet` testing will happen on #28516 ?\r\n\r\nYes, it probably does make a little more sense to test on signet and testnet for now, but any testing should be useful if you're calling the rpcs, restarting, interrupting, reindexing, etc. #28516 should be useful testing signet and testnet since it adds those hashes",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1741363606",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10514585984,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJyt9mA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10514585984",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T19:08:06Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10514586064,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJyt9nQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10514586064",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-29T19:08:07Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1741606642,
      "node_id": "IC_kwDOABII585nzs7y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1741606642",
      "actor": {
        "login": "D33r-Gee",
        "id": 111142327,
        "node_id": "U_kgDOBp_ltw",
        "avatar_url": "https://avatars.githubusercontent.com/u/111142327?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/D33r-Gee",
        "html_url": "https://github.com/D33r-Gee",
        "followers_url": "https://api.github.com/users/D33r-Gee/followers",
        "following_url": "https://api.github.com/users/D33r-Gee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/D33r-Gee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/D33r-Gee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/D33r-Gee/subscriptions",
        "organizations_url": "https://api.github.com/users/D33r-Gee/orgs",
        "repos_url": "https://api.github.com/users/D33r-Gee/repos",
        "events_url": "https://api.github.com/users/D33r-Gee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/D33r-Gee/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T00:41:04Z",
      "updated_at": "2023-09-30T00:41:04Z",
      "author_association": "NONE",
      "body": "> Yes, it probably does make a little more sense to test on signet and testnet for now, but any testing should be useful if you're calling the rpcs, restarting, interrupting, reindexing, etc. #28516 should be useful testing signet and testnet since it adds those hashes\r\n\r\nGreat, thanks for clarifying, I'll go ahead and test the whole workflow at the current commit and post results here\r\n\r\nThen will test #28516 and post results there",
      "user": {
        "login": "D33r-Gee",
        "id": 111142327,
        "node_id": "U_kgDOBp_ltw",
        "avatar_url": "https://avatars.githubusercontent.com/u/111142327?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/D33r-Gee",
        "html_url": "https://github.com/D33r-Gee",
        "followers_url": "https://api.github.com/users/D33r-Gee/followers",
        "following_url": "https://api.github.com/users/D33r-Gee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/D33r-Gee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/D33r-Gee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/D33r-Gee/subscriptions",
        "organizations_url": "https://api.github.com/users/D33r-Gee/orgs",
        "repos_url": "https://api.github.com/users/D33r-Gee/repos",
        "events_url": "https://api.github.com/users/D33r-Gee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/D33r-Gee/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1741606642",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10516156088,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJyz864",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10516156088",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T00:41:09Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10516156111,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJyz87P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10516156111",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T00:41:09Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1741699148,
      "node_id": "IC_kwDOABII585n0DhM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1741699148",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T07:01:24Z",
      "updated_at": "2023-09-30T07:03:00Z",
      "author_association": "MEMBER",
      "body": "> I'll go ahead and test the whole workflow at the current commit and post results here\r\n\r\n> Then will test https://github.com/bitcoin/bitcoin/pull/28516 and post results there\r\n\r\nYou'll need #28516 to test most of the changes introduced here. Otherwise you can only test that nothing changed when you _don't_ load a snapshot (which is also important).\r\n\r\nThe reason the hashes are in a separate PR is to save @jamesob some work on having to maintain them. And also because the hashes themselves are much easier to review than this pull request, so I'd like to see (many) more people do that - without creating too much noise on this PR.\r\n\r\nThe PR contains a link to mainnet parameters as well. Since you're able to compile code, you can also test with that. Mainnet params are only kept seperate because we're not ready to ship them (in my opinion), but they're certainly ready for testing.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1741699148",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 10516822071,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJy2fg3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10516822071",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T07:01:24Z"
    },
    {
      "event": "subscribed",
      "id": 10516822073,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJy2fg5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10516822073",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T07:01:24Z"
    },
    {
      "event": "review_request_removed",
      "id": 10516822145,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJy2fiB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10516822145",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T07:01:28Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10516822161,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJy2fiR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10516822161",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T07:01:29Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10516822683,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJy2fqb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10516822683",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T07:01:52Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10516822701,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJy2fqt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10516822701",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T07:01:53Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10516824212,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJy2gCU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10516824212",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T07:03:04Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10516824219,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJy2gCb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10516824219",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T07:03:05Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10517043541,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJy3VlV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10517043541",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T09:41:35Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10517043561,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJy3Vlp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10517043561",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T09:41:36Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI3M2QzYmJkMjMyMjA4NTdiZjE3Y2JiNjQwMTI3NWJmNTgwMTNiNzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b73d3bbd23220857bf17cbb6401275bf58013b72",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b73d3bbd23220857bf17cbb6401275bf58013b72",
      "tree": {
        "sha": "c068b3dc31d50bba653c92386b12b2274feed167",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c068b3dc31d50bba653c92386b12b2274feed167"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5bbf735defac20f58133bea95226e13a5d8209bc",
          "sha": "5bbf735defac20f58133bea95226e13a5d8209bc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5bbf735defac20f58133bea95226e13a5d8209bc"
        }
      ],
      "message": "net_processing: Request assumeutxo background chain blocks\n\nAdd new PeerManagerImpl::TryDownloadingHistoricalBlocks method and use it to\nrequest background chain blocks in addition to blocks normally requested by\nFindNextBlocksToDownload.\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>\nCo-authored-by: James O'Beirne <james.obeirne@gmail.com>",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T09:45:37Z"
      },
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2023-05-04T18:08:37Z"
      },
      "sha": "b73d3bbd23220857bf17cbb6401275bf58013b72"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM5M2VmNDNlNGZkNGZiYzEyNjNjZGM5ZTk4YWU1ODU2ODMwZmU4OWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c93ef43e4fd4fbc1263cdc9e98ae5856830fe89e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c93ef43e4fd4fbc1263cdc9e98ae5856830fe89e",
      "tree": {
        "sha": "5d0a70ad74ac97a3ce63127b1a0508f97ebd9b14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d0a70ad74ac97a3ce63127b1a0508f97ebd9b14"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b73d3bbd23220857bf17cbb6401275bf58013b72",
          "sha": "b73d3bbd23220857bf17cbb6401275bf58013b72",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b73d3bbd23220857bf17cbb6401275bf58013b72"
        }
      ],
      "message": "bugfix: correct is_snapshot_cs in VerifyDB",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T09:45:40Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-05-25T01:10:12Z"
      },
      "sha": "c93ef43e4fd4fbc1263cdc9e98ae5856830fe89e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM3MTFjYTE4NmY4ZDhhMjg4MTBiZTBiZWVkY2I2MTVkZGNmOTMxNjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c711ca186f8d8a28810be0beedcb615ddcf93163",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c711ca186f8d8a28810be0beedcb615ddcf93163",
      "tree": {
        "sha": "1f7d8f20f69004eaddec93e570d2cf6abd260472",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f7d8f20f69004eaddec93e570d2cf6abd260472"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c93ef43e4fd4fbc1263cdc9e98ae5856830fe89e",
          "sha": "c93ef43e4fd4fbc1263cdc9e98ae5856830fe89e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c93ef43e4fd4fbc1263cdc9e98ae5856830fe89e"
        }
      ],
      "message": "assumeutxo: remove snapshot during -reindex{-chainstate}\n\nRemoving a snapshot chainstate from disk (and memory) is consistent with\nexisting reindex operations.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:38:43Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-05-03T19:39:51Z"
      },
      "sha": "c711ca186f8d8a28810be0beedcb615ddcf93163"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQzNDQ5NWE4YzE0OTZjYTIzZmUzNWI4NDQ5OWYzZGFmNjY4ZDc2Yjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/434495a8c1496ca23fe35b84499f3daf668d76b8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/434495a8c1496ca23fe35b84499f3daf668d76b8",
      "tree": {
        "sha": "465c3fe536937e0da024615537412124b5cbab15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/465c3fe536937e0da024615537412124b5cbab15"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c711ca186f8d8a28810be0beedcb615ddcf93163",
          "sha": "c711ca186f8d8a28810be0beedcb615ddcf93163",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c711ca186f8d8a28810be0beedcb615ddcf93163"
        }
      ],
      "message": "chainparams: add blockhash to AssumeutxoData\n\nThis allows us to reference assumeutxo configuration by blockhash as\nwell as height; this is helpful in future changes when we want to\nreference assumeutxo configurations before the block index is loaded.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:38:47Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-05-25T17:05:27Z"
      },
      "sha": "434495a8c1496ca23fe35b84499f3daf668d76b8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlmMjMxOGM3NmNjNjk4NmQ0OGUxMzgzMWNmNWJkOGRhYjE5NGZkZjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f2318c76cc6986d48e13831cf5bd8dab194fdf4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9f2318c76cc6986d48e13831cf5bd8dab194fdf4",
      "tree": {
        "sha": "ab92c1679f8dee22e7b59dc5d68061a68a14f52d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab92c1679f8dee22e7b59dc5d68061a68a14f52d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/434495a8c1496ca23fe35b84499f3daf668d76b8",
          "sha": "434495a8c1496ca23fe35b84499f3daf668d76b8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/434495a8c1496ca23fe35b84499f3daf668d76b8"
        }
      ],
      "message": "validation: MaybeRebalanceCaches when chain leaves IBD\n\nCheck to see if we need to rebalance caches across chainstates when\na chain leaves IBD.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:38:47Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-05-01T21:39:28Z"
      },
      "sha": "9f2318c76cc6986d48e13831cf5bd8dab194fdf4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM2YWYyM2M1MTc5Y2MzODNmOGU2YzI3NTM3M2FmOGQxMWU2YTk4OWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6af23c5179cc383f8e6c275373af8d11e6a989f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c6af23c5179cc383f8e6c275373af8d11e6a989f",
      "tree": {
        "sha": "fc1e40adedb0c37ad064799580e536515cc47628",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc1e40adedb0c37ad064799580e536515cc47628"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f2318c76cc6986d48e13831cf5bd8dab194fdf4",
          "sha": "9f2318c76cc6986d48e13831cf5bd8dab194fdf4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9f2318c76cc6986d48e13831cf5bd8dab194fdf4"
        }
      ],
      "message": "validation: add ChainstateRole",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:38:47Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-11-10T17:03:39Z"
      },
      "sha": "c6af23c5179cc383f8e6c275373af8d11e6a989f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFlNTlhY2RmMTczMDlmNTY3YzM3MDg4NWYwY2YwMjYwNWUyYmFhNTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e59acdf17309f567c370885f0cf02605e2baa58",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1e59acdf17309f567c370885f0cf02605e2baa58",
      "tree": {
        "sha": "efa1d460c67b8ae1a098f8b6bbb588a2d2172b50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/efa1d460c67b8ae1a098f8b6bbb588a2d2172b50"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6af23c5179cc383f8e6c275373af8d11e6a989f",
          "sha": "c6af23c5179cc383f8e6c275373af8d11e6a989f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c6af23c5179cc383f8e6c275373af8d11e6a989f"
        }
      ],
      "message": "validation: only call UpdatedBlockTip for active chainstate\n\nThis notification isn't needed for background chainstates.\n\n`kernel::Notifications::blockTip` are also skipped.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:38:47Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-08-24T20:51:16Z"
      },
      "sha": "1e59acdf17309f567c370885f0cf02605e2baa58"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRkOGY0ZGNiNDUwZDMxZTQ4NDc4MDRlNjJiZjkxNTQ1Yjk0OWZhMTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d8f4dcb450d31e4847804e62bf91545b949fa14",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4d8f4dcb450d31e4847804e62bf91545b949fa14",
      "tree": {
        "sha": "969db62e4210a1fdf9eeceeb39e4c2755cad051d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/969db62e4210a1fdf9eeceeb39e4c2755cad051d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e59acdf17309f567c370885f0cf02605e2baa58",
          "sha": "1e59acdf17309f567c370885f0cf02605e2baa58",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1e59acdf17309f567c370885f0cf02605e2baa58"
        }
      ],
      "message": "validation: pass ChainstateRole for validationinterface calls\n\nThis allows consumers to decide how to handle events from background or\nassumedvalid chainstates.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:38:47Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-09-23T17:54:21Z"
      },
      "sha": "4d8f4dcb450d31e4847804e62bf91545b949fa14"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYwNzM5MTdhOWU3YmE0MjM2NDNkY2FlMDMzOTc3NjQ3MGI2MjhmNjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f073917a9e7ba423643dcae0339776470b628f65",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f073917a9e7ba423643dcae0339776470b628f65",
      "tree": {
        "sha": "7aa1dd7d405dbc63dc7f5ccdae54d38e7131e4c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7aa1dd7d405dbc63dc7f5ccdae54d38e7131e4c7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d8f4dcb450d31e4847804e62bf91545b949fa14",
          "sha": "4d8f4dcb450d31e4847804e62bf91545b949fa14",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4d8f4dcb450d31e4847804e62bf91545b949fa14"
        }
      ],
      "message": "validationinterface: only send zmq notifications for active",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:38:47Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-11-10T21:09:25Z"
      },
      "sha": "f073917a9e7ba423643dcae0339776470b628f65"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZiZTBhN2Q3Y2E2ODAzNTgyMzdiNmMyMzY5YjNmZDJiNDMyMjExMTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbe0a7d7ca680358237b6c2369b3fd2b43221113",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fbe0a7d7ca680358237b6c2369b3fd2b43221113",
      "tree": {
        "sha": "a706773d6f1c23367f21bd201d9d469723e49959",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a706773d6f1c23367f21bd201d9d469723e49959"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f073917a9e7ba423643dcae0339776470b628f65",
          "sha": "f073917a9e7ba423643dcae0339776470b628f65",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f073917a9e7ba423643dcae0339776470b628f65"
        }
      ],
      "message": "wallet: validationinterface: only handle active chain notifications",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:38:47Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-11-10T21:09:41Z"
      },
      "sha": "fbe0a7d7ca680358237b6c2369b3fd2b43221113"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFmZmZkZDc2YTFiY2E5MDhmNTVkNzNiNjQ5ODM2NTViMTRjZjc0MzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fffdd76a1bca908f55d73b64983655b14cf7432",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1fffdd76a1bca908f55d73b64983655b14cf7432",
      "tree": {
        "sha": "11561040778b64e01936eaf317654998f9b95f08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/11561040778b64e01936eaf317654998f9b95f08"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbe0a7d7ca680358237b6c2369b3fd2b43221113",
          "sha": "fbe0a7d7ca680358237b6c2369b3fd2b43221113",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fbe0a7d7ca680358237b6c2369b3fd2b43221113"
        }
      ],
      "message": "net_processing: validationinterface: ignore some events for bg chain",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:38:47Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2022-11-10T21:10:35Z"
      },
      "sha": "1fffdd76a1bca908f55d73b64983655b14cf7432"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM3M2NmOTE1MzFiODRiZmRkMDZmZGY4YWJmNGRjYTIyODAyOWNlNmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/373cf91531b84bfdd06fdf8abf4dca228029ce6b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/373cf91531b84bfdd06fdf8abf4dca228029ce6b",
      "tree": {
        "sha": "0038ed40c747e33d8cca9a905fdb07cb539ee5ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0038ed40c747e33d8cca9a905fdb07cb539ee5ac"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fffdd76a1bca908f55d73b64983655b14cf7432",
          "sha": "1fffdd76a1bca908f55d73b64983655b14cf7432",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1fffdd76a1bca908f55d73b64983655b14cf7432"
        }
      ],
      "message": "validation: indexing changes for assumeutxo\n\nWhen using an assumedvalid chainstate, only process validationinterface\ncallbacks from the background chainstate within indexes. This ensures\nthat all indexes are built in-order.\n\nLater, we can possibly designate indexes which can be built out of order\nand continue their operation during snapshot use.\n\nOnce the background sync has completed, restart the indexes so that\nthey continue to index the now-validated snapshot chainstate.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:38:47Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-09-23T18:44:54Z"
      },
      "sha": "373cf91531b84bfdd06fdf8abf4dca228029ce6b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDEwMTljMzk5ODI1YjBkNTEyYzFmZDc1MWMzNzZkNDZmZWQ0OTkyYjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1019c399825b0d512c1fd751c376d46fed4992b9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1019c399825b0d512c1fd751c376d46fed4992b9",
      "tree": {
        "sha": "08bdf7a2324e191ee721417b531094b359629e14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08bdf7a2324e191ee721417b531094b359629e14"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/373cf91531b84bfdd06fdf8abf4dca228029ce6b",
          "sha": "373cf91531b84bfdd06fdf8abf4dca228029ce6b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/373cf91531b84bfdd06fdf8abf4dca228029ce6b"
        }
      ],
      "message": "validation: pruning for multiple chainstates\n\nIntroduces ChainstateManager::GetPruneRange().\n\nThe prune budget is split evenly between the number of chainstates,\nhowever the prune budget may be exceeded if the resulting shares are\nbeneath `MIN_DISK_SPACE_FOR_BLOCK_FILES`.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:40:16Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-09-16T20:34:45Z"
      },
      "sha": "1019c399825b0d512c1fd751c376d46fed4992b9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ5ZWY3NzgxNThjNDM4NTk5NDZhNTkyZTExZWMzNGZlMWI5M2E1YjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49ef778158c43859946a592e11ec34fe1b93a5b6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/49ef778158c43859946a592e11ec34fe1b93a5b6",
      "tree": {
        "sha": "8da6563b8c83b228504623879d489b495710a719",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8da6563b8c83b228504623879d489b495710a719"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1019c399825b0d512c1fd751c376d46fed4992b9",
          "sha": "1019c399825b0d512c1fd751c376d46fed4992b9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1019c399825b0d512c1fd751c376d46fed4992b9"
        }
      ],
      "message": "test: adjust chainstate tests to use recognized snapshot base\n\nIn future commits, loading the block index while making use of a\nsnapshot is contingent on the snapshot being recognized by chainparams.\n\nEnsure all existing unittests that use snapshots use a recognized\nsnapshot (at height 110).\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:40:17Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-08-25T18:05:07Z"
      },
      "sha": "49ef778158c43859946a592e11ec34fe1b93a5b6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRjM2I4Y2EzNWMyZTRhNDQxMjY0NzQ5YmIzMTJkZjJiZDA1NGI1Yjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c3b8ca35c2e4a441264749bb312df2bd054b5b8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4c3b8ca35c2e4a441264749bb312df2bd054b5b8",
      "tree": {
        "sha": "c0a671b1c728c3039f08a103713fa5d9a930b836",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0a671b1c728c3039f08a103713fa5d9a930b836"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49ef778158c43859946a592e11ec34fe1b93a5b6",
          "sha": "49ef778158c43859946a592e11ec34fe1b93a5b6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/49ef778158c43859946a592e11ec34fe1b93a5b6"
        }
      ],
      "message": "validation: populate nChainTx value for assumedvalid chainstates\n\nUse the expected AssumeutxoData in order to bootstrap nChainTx values\nfor assumedvalid blockindex entries in the snapshot chainstate. This\nis necessary because nChainTx is normally built up from nTx values,\nwhich are populated using blockdata which the snapshot chainstate\ndoes not yet have.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:40:17Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-05-05T19:54:13Z"
      },
      "sha": "4c3b8ca35c2e4a441264749bb312df2bd054b5b8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdmY2QyMTU0NGEzMzNmZmRmMTkxMGI2NWM1NzM1Nzk4NjBiZTZhMzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7fcd21544a333ffdf1910b65c573579860be6a36",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7fcd21544a333ffdf1910b65c573579860be6a36",
      "tree": {
        "sha": "9e97c21851526d9a6a589a34b72c6b2eeb1dc5a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9e97c21851526d9a6a589a34b72c6b2eeb1dc5a5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c3b8ca35c2e4a441264749bb312df2bd054b5b8",
          "sha": "4c3b8ca35c2e4a441264749bb312df2bd054b5b8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4c3b8ca35c2e4a441264749bb312df2bd054b5b8"
        }
      ],
      "message": "blockstorage: segment normal/assumedvalid blockfiles\n\nWhen using an assumedvalid (snapshot) chainstate along with a background\nchainstate, we are syncing two very different regions of the chain\nsimultaneously. If we use the same blockfile space for both of these\nsyncs, wildly different height blocks will be stored alongside one\nanother, making pruning ineffective.\n\nThis change implements a separate blockfile cursor for the assumedvalid\nchainstate when one is in use.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:40:17Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-05-03T18:55:03Z"
      },
      "sha": "7fcd21544a333ffdf1910b65c573579860be6a36"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1MTFmYjM2MTZiN2JiZTFkMGQyZjU0YTQ1ZWEwYTY1MGJhMDM2N2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9511fb3616b7bbe1d0d2f54a45ea0a650ba0367b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9511fb3616b7bbe1d0d2f54a45ea0a650ba0367b",
      "tree": {
        "sha": "eca9fd77d46e601143f690ad50096807eee59c0a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eca9fd77d46e601143f690ad50096807eee59c0a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7fcd21544a333ffdf1910b65c573579860be6a36",
          "sha": "7fcd21544a333ffdf1910b65c573579860be6a36",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7fcd21544a333ffdf1910b65c573579860be6a36"
        }
      ],
      "message": "validation: assumeutxo: swap m_mempool on snapshot activation\n\nOtherwise we will not receive transactions during background sync until\nrestart.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:40:17Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-05-05T22:27:56Z"
      },
      "sha": "9511fb3616b7bbe1d0d2f54a45ea0a650ba0367b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYyYWM1MTllNzE4ZWI3YTMxZGNhMTEwMmE5NmJhMjE5ZmJjN2Y5NWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62ac519e718eb7a31dca1102a96ba219fbc7f95d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/62ac519e718eb7a31dca1102a96ba219fbc7f95d",
      "tree": {
        "sha": "8fd7e2e8ee1472038c7c2b4d603fd1b1f3e818ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8fd7e2e8ee1472038c7c2b4d603fd1b1f3e818ab"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9511fb3616b7bbe1d0d2f54a45ea0a650ba0367b",
          "sha": "9511fb3616b7bbe1d0d2f54a45ea0a650ba0367b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9511fb3616b7bbe1d0d2f54a45ea0a650ba0367b"
        }
      ],
      "message": "validation: do not activate snapshot if behind active chain\n\nMost easily reviewed with\n\n  git show --color-moved=dimmed-zebra --color-moved-ws=ignore-all-space\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:41:21Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-17T17:56:12Z"
      },
      "sha": "62ac519e718eb7a31dca1102a96ba219fbc7f95d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNlNTg1YTlhMTU4NDc2YjBhZDMyOTY0NzdiOTIyZTc5ZjMwOGU3OTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce585a9a158476b0ad3296477b922e79f308e795",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ce585a9a158476b0ad3296477b922e79f308e795",
      "tree": {
        "sha": "a17c47412e0d089b6316676bee015abceb747a2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a17c47412e0d089b6316676bee015abceb747a2f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62ac519e718eb7a31dca1102a96ba219fbc7f95d",
          "sha": "62ac519e718eb7a31dca1102a96ba219fbc7f95d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/62ac519e718eb7a31dca1102a96ba219fbc7f95d"
        }
      ],
      "message": "rpc: add loadtxoutset\n\nCo-authored-by: Sebastian Falbesoner <sebastian.falbesoner@gmail.com>",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:41:23Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-03-29T19:31:54Z"
      },
      "sha": "ce585a9a158476b0ad3296477b922e79f308e795"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJiMDU4NTc3OTQ3Mjk2MmY0MGQ5Y2RkOWM2NTMyMTMyODUwZDM3MWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb0585779472962f40d9cdd9c6532132850d371c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bb0585779472962f40d9cdd9c6532132850d371c",
      "tree": {
        "sha": "f25ec36530ce8942f98ef49db9c70359d31df343",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f25ec36530ce8942f98ef49db9c70359d31df343"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce585a9a158476b0ad3296477b922e79f308e795",
          "sha": "ce585a9a158476b0ad3296477b922e79f308e795",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ce585a9a158476b0ad3296477b922e79f308e795"
        }
      ],
      "message": "refuse to activate a UTXO snapshot if mempool not empty\n\nThis ensures that we avoid any unexpected conditions inherent in\ntransferring non-empty mempools across chainstates.\n\nNote that this should never happen in practice given that snapshot\nactivation will not occur outside of IBD, based upon the height checks\nin `loadtxoutset`.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:41:23Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-08T10:29:32Z"
      },
      "sha": "bb0585779472962f40d9cdd9c6532132850d371c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBmNjRiYWM2MDMwMzM0ZDc5OGFlMjA1Y2Q3YWY0YmYyNDhmZWRkZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f64bac6030334d798ae205cd7af4bf248feddd9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0f64bac6030334d798ae205cd7af4bf248feddd9",
      "tree": {
        "sha": "23341a71f629aa3d54f357bff569451e3ac3f303",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23341a71f629aa3d54f357bff569451e3ac3f303"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb0585779472962f40d9cdd9c6532132850d371c",
          "sha": "bb0585779472962f40d9cdd9c6532132850d371c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bb0585779472962f40d9cdd9c6532132850d371c"
        }
      ],
      "message": "rpc: add getchainstates\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:41:23Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2019-03-29T21:55:08Z"
      },
      "sha": "0f64bac6030334d798ae205cd7af4bf248feddd9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQyY2FlMzkzNTZmZDIwZDUyMWFhZjk5YWZmMWVkODU4NTZmM2M5ZjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42cae39356fd20d521aaf99aff1ed85856f3c9f3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/42cae39356fd20d521aaf99aff1ed85856f3c9f3",
      "tree": {
        "sha": "74509bb9f0295c8d87be8fd59c113e404f6ba683",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/74509bb9f0295c8d87be8fd59c113e404f6ba683"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f64bac6030334d798ae205cd7af4bf248feddd9",
          "sha": "0f64bac6030334d798ae205cd7af4bf248feddd9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0f64bac6030334d798ae205cd7af4bf248feddd9"
        }
      ],
      "message": "test: add feature_assumeutxo functional test\n\nMost ideas for test improvements (TODOs) provided by Russ Yanofsky.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:41:23Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-06-17T20:09:38Z"
      },
      "sha": "42cae39356fd20d521aaf99aff1ed85856f3c9f3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdlZTQ2YTc1NWYxZDU3Y2U5ZDUxOTc1ZDNiNTRkYzlhYzNkMDhkNTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ee46a755f1d57ce9d51975d3b54dc9ac3d08d52",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7ee46a755f1d57ce9d51975d3b54dc9ac3d08d52",
      "tree": {
        "sha": "ab231e49a1b37c0461cf1dd671deec8f1690a608",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab231e49a1b37c0461cf1dd671deec8f1690a608"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42cae39356fd20d521aaf99aff1ed85856f3c9f3",
          "sha": "42cae39356fd20d521aaf99aff1ed85856f3c9f3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/42cae39356fd20d521aaf99aff1ed85856f3c9f3"
        }
      ],
      "message": "contrib: add script to demo/test assumeutxo\n\nAdd the script to the shellcheck exception list since the\nquoted variables rule needs to be violated in order to get\nbitcoind to pick up on $CHAIN_HACK_FLAGS.",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:41:23Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-06-16T16:09:29Z"
      },
      "sha": "7ee46a755f1d57ce9d51975d3b54dc9ac3d08d52"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk5ODM5YmJmYTcxMTBjN2FiZjIyZTU4N2FlMmY3MmM5YzU3ZDNjODU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99839bbfa7110c7abf22e587ae2f72c9c57d3c85",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/99839bbfa7110c7abf22e587ae2f72c9c57d3c85",
      "tree": {
        "sha": "77099bb18a56f1002e2f9e37db5e3d8927e08acb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/77099bb18a56f1002e2f9e37db5e3d8927e08acb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ee46a755f1d57ce9d51975d3b54dc9ac3d08d52",
          "sha": "7ee46a755f1d57ce9d51975d3b54dc9ac3d08d52",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7ee46a755f1d57ce9d51975d3b54dc9ac3d08d52"
        }
      ],
      "message": "doc: add note about confusing HaveTxsDownloaded name",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-30T10:41:23Z"
      },
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-09-11T17:41:28Z"
      },
      "sha": "99839bbfa7110c7abf22e587ae2f72c9c57d3c85"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10517127039,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJy3p9_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10517127039",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d9e41a0f92081979764aee420a8ccb80898da862",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/d9e41a0f92081979764aee420a8ccb80898da862",
      "created_at": "2023-09-30T10:43:05Z"
    },
    {
      "event": "reviewed",
      "id": 1651670722,
      "node_id": "PRR_kwDOABII585icn7C",
      "url": null,
      "actor": null,
      "commit_id": "32b797f37ecd25b0cda5a0ab927852bcd3284500",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Rebased to resolve conflicts and addressed nits from @naumenkogs.\r\n\r\nFor ease of testing and review, I've included @Sjors' commits from #28516. Juggling multiple PRs makes it complicated for reviewers and requires coordinated rebasing. It's easy for me to change those commits as-needed. I'll append Sjors' helpful instructions to the description.\r\n\r\n```shell\r\n( git remote -v | grep jamesob ) || git remote add jamesob https://github.com/jamesob/bitcoin\r\ngit fetch jamesob\r\ngit range-diff upstream/master jamesob/au.039 jamesob/au.040\r\n```",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1651670722",
      "submitted_at": "2023-09-30T10:49:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "unlabeled",
      "id": 10517183625,
      "node_id": "UNLE_lADOABII585lWq3pzwAAAAJy33yJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10517183625",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-30T11:26:36Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1651722959,
      "node_id": "PRR_kwDOABII585ic0rP",
      "url": null,
      "actor": null,
      "commit_id": "d9e41a0f92081979764aee420a8ccb80898da862",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK d9e41a0f92081979764aee420a8ccb80898da862\r\n\r\nI have left a few comments for potential improvements but I don’t consider any of them blocking. On the signet and testnet chainparams, I have verified the correctness blockhashes and utxo set hashes.\r\n\r\nI have also been using [32b797f](https://github.com/bitcoin/bitcoin/commit/32b797f37ecd25b0cda5a0ab927852bcd3284500) for normal node operations for a few days and didn’t observe anything unusual.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1651722959",
      "submitted_at": "2023-10-01T00:17:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10518211490,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJy7yui",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10518211490",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-01T00:17:13Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10518211510,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJy7yu2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10518211510",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-01T00:17:14Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10518211526,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJy7yvG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10518211526",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-01T00:17:15Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10518211545,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJy7yvZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10518211545",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-01T00:17:15Z",
      "requested_reviewer": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10518211639,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJy7yw3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10518211639",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-01T00:17:19Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10518211671,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJy7yxX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10518211671",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-01T00:17:20Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10518372194,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJy8Z9i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10518372194",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-01T01:17:46Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10518372229,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJy8Z-F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10518372229",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-01T01:17:47Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1742695834,
      "node_id": "IC_kwDOABII585n322a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742695834",
      "actor": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T09:34:10Z",
      "updated_at": "2023-10-02T09:34:10Z",
      "author_association": "MEMBER",
      "body": "ACK d9e41a0f92081979764aee420a8ccb80898da862",
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1742695834",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10523963282,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJzRu-S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10523963282",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T09:34:17Z",
      "requested_reviewer": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10523963291,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJzRu-b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10523963291",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T09:34:17Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10523963402,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzRvAK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10523963402",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T09:34:17Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1742859965,
      "node_id": "IC_kwDOABII585n4e69",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742859965",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T11:40:00Z",
      "updated_at": "2023-10-02T11:40:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "We've got a few ACKs on HEAD now. I'm happy to either address the outstanding comments in followups to avoid invalidation or just fix them here... any preferences?",
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1742859965",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10525066161,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJzV8Ox",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10525066161",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T11:40:05Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10525066264,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzV8QY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10525066264",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T11:40:06Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1743100285,
      "node_id": "IC_kwDOABII585n5Zl9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1743100285",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:15:46Z",
      "updated_at": "2023-10-02T14:15:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "> We've got a few ACKs on HEAD now. I'm happy to either address the outstanding comments in followups to avoid invalidation or just fix them here... any preferences?\r\n\r\nNo preference either way, personally.\r\n\r\nI think the main question is whether it makes sense to merge this PR before the 26.0 feature freeze on [2023-10-07](https://github.com/bitcoin/bitcoin/issues/27758). I think it would be a good idea to include this in 26.0 since it includes signet and testnet parameters, but not mainnet parameters, so merging it should make the feature easy to test in a safe way that should not cause problems. **But I don't know if there is agreement about this, so it would be really helpful to know what people think.**",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1743100285",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10526682121,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJzcGwJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526682121",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:15:51Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10526682372,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzcG0E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526682372",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:15:52Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 1743133949,
      "node_id": "IC_kwDOABII585n5hz9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1743133949",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:32:49Z",
      "updated_at": "2023-10-02T14:42:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think the sentiment at the CoreDev two weeks ago was to merge it before feature freeze if there is enough review and I personally agree with that. The only unclear question was about the chainparameters but I feel we have resolved that now. As I said, I don't think my own feedback needs to be addressed before merge. And if anyone else thinks they are serious enough they could still be merged shortly after feature freeze (as serious = bug fix probably). I would be happy to take care of follow-ups quickly after merge. Would be great to get 1-2 more explicit ACKs on the latest version from @ryanofsky , @Sjors or @pablomartin4btc . With that, I think it would be RFM, and if there is still doubt we could also bring it up in the meeting on Thursday. But I feel like the picture was pretty clear at CoreDev among those who participated in the assumeutxo conversation.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1743133949",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "mentioned",
      "id": 10526896592,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJzc7HQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526896592",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:32:50Z"
    },
    {
      "event": "subscribed",
      "id": 10526896616,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJzc7Ho",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526896616",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:32:50Z"
    },
    {
      "event": "mentioned",
      "id": 10526896645,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJzc7IF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526896645",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:32:50Z"
    },
    {
      "event": "subscribed",
      "id": 10526896668,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJzc7Ic",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526896668",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:32:50Z"
    },
    {
      "event": "mentioned",
      "id": 10526896703,
      "node_id": "MEE_lADOABII585lWq3pzwAAAAJzc7I_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526896703",
      "actor": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:32:50Z"
    },
    {
      "event": "subscribed",
      "id": 10526896721,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJzc7JR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526896721",
      "actor": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:32:50Z"
    },
    {
      "event": "review_request_removed",
      "id": 10526897446,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJzc7Um",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526897446",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:32:54Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10526897572,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzc7Wk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10526897572",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:32:55Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10527009892,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJzdWxk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10527009892",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:42:27Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10527010170,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzdW16",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10527010170",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:42:28Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10527050380,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJzdgqM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10527050380",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:45:51Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10527050527,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzdgsf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10527050527",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T14:45:52Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1652917347,
      "node_id": "PRR_kwDOABII585ihYRj",
      "url": null,
      "actor": null,
      "commit_id": "d9e41a0f92081979764aee420a8ccb80898da862",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK d9e41a0f92081979764aee420a8ccb80898da862 with caveat that I did not verify signet and testnet hashes in the last two commits. Since last review, only changes were fixing rebase conflicts with #27866, adding signet and testnet hashes, and updating some comments.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1652917347",
      "submitted_at": "2023-10-02T15:11:30Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10527353964,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJzeqxs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10527353964",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T15:11:37Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10527354089,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzeqzp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10527354089",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T15:11:37Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10527354933,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJzerA1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10527354933",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T15:11:42Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10527355070,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzerC-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10527355070",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T15:11:43Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1653426165,
      "node_id": "PRR_kwDOABII585ijUf1",
      "url": null,
      "actor": null,
      "commit_id": "d9e41a0f92081979764aee420a8ccb80898da862",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1653426165",
      "submitted_at": "2023-10-02T20:54:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10530495770,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJzqp0a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530495770",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T20:54:59Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10530495862,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzqp12",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530495862",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T20:54:59Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_request_removed",
      "id": 10530496544,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJzqqAg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530496544",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T20:55:04Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10530496620,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzqqBs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530496620",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T20:55:05Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10530503441,
      "node_id": "HRFPE_lADOABII585lWq3pzwAAAAJzqrsR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530503441",
      "actor": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "commit_url": "https://api.github.com/repos/jamesob/bitcoin/commits/edbed31066e3674ba52b8c093ab235625527f383",
      "created_at": "2023-10-02T20:55:56Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI4Y2FmZTM4NzEzY2JmMTBkMTU0NTkwNDJmN2Y5MTFiY2MxYjFlNGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b8cafe38713cbf10d15459042f7f911bcc1b1e4e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b8cafe38713cbf10d15459042f7f911bcc1b1e4e",
      "tree": {
        "sha": "c39a55f2013e8a73ffe5c2518906faa215424bee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c39a55f2013e8a73ffe5c2518906faa215424bee"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99839bbfa7110c7abf22e587ae2f72c9c57d3c85",
          "sha": "99839bbfa7110c7abf22e587ae2f72c9c57d3c85",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/99839bbfa7110c7abf22e587ae2f72c9c57d3c85"
        }
      ],
      "message": "chainparams: add testnet assumeutxo param at height 2_500_000",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-10-02T20:56:46Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-09-21T10:52:00Z"
      },
      "sha": "b8cafe38713cbf10d15459042f7f911bcc1b1e4e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVkYmVkMzEwNjZlMzY3NGJhNTJiOGMwOTNhYjIzNTYyNTUyN2YzODM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/edbed31066e3674ba52b8c093ab235625527f383",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/edbed31066e3674ba52b8c093ab235625527f383",
      "tree": {
        "sha": "9cd4945c2f0fd0614f0650fffce88aaa11dba50c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9cd4945c2f0fd0614f0650fffce88aaa11dba50c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b8cafe38713cbf10d15459042f7f911bcc1b1e4e",
          "sha": "b8cafe38713cbf10d15459042f7f911bcc1b1e4e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b8cafe38713cbf10d15459042f7f911bcc1b1e4e"
        }
      ],
      "message": "chainparams: add signet assumeutxo param at height 160_000",
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2023-10-02T20:56:48Z"
      },
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2023-09-21T11:00:23Z"
      },
      "sha": "edbed31066e3674ba52b8c093ab235625527f383"
    },
    {
      "event": "commented",
      "id": 1743756406,
      "node_id": "IC_kwDOABII585n75x2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1743756406",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T20:58:59Z",
      "updated_at": "2023-10-02T20:58:59Z",
      "author_association": "MEMBER",
      "body": "ACK edbed31066e3674ba52b8c093ab235625527f383\r\n\r\nGiven that the only difference between the commit that has 3 ACKs and the latest push was a minor fix to the chainparams to use the correct `nChainTx` values, I think this is fine for merging.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1743756406",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10530530299,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJzqyP7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530530299",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T20:59:06Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10530530392,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzqyRY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530530392",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T20:59:07Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10530530483,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzqySz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530530483",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T20:59:07Z",
      "requested_reviewer": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10530530585,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzqyUZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530530585",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T20:59:08Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10530530686,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzqyV-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530530686",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T20:59:09Z",
      "requested_reviewer": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1653519081,
      "node_id": "PRR_kwDOABII585ijrLp",
      "url": null,
      "actor": null,
      "commit_id": "42cae39356fd20d521aaf99aff1ed85856f3c9f3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1653519081",
      "submitted_at": "2023-10-02T21:09:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "review_request_removed",
      "id": 10530610964,
      "node_id": "RRRE_lADOABII585lWq3pzwAAAAJzrF8U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530610964",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T21:09:18Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10530611217,
      "node_id": "RRE_lADOABII585lWq3pzwAAAAJzrGAR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530611217",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T21:09:20Z",
      "requested_reviewer": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "merged",
      "id": 10530618233,
      "node_id": "ME_lADOABII585lWq3pzwAAAAJzrHt5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530618233",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e7b0004b375be25096fbaf3d5f6980095a90fc0c",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7b0004b375be25096fbaf3d5f6980095a90fc0c",
      "created_at": "2023-10-02T21:10:18Z"
    },
    {
      "event": "closed",
      "id": 10530618278,
      "node_id": "CE_lADOABII585lWq3pzwAAAAJzrHum",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10530618278",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-02T21:10:18Z"
    },
    {
      "event": "reviewed",
      "id": 1654826157,
      "node_id": "PRR_kwDOABII585ioqSt",
      "url": null,
      "actor": null,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Some post-merge review, in reverse order until 7fcd21544a333ffdf1910b65c573579860be6a36.\r\n\r\n7ee46a755f1d57ce9d51975d3b54dc9ac3d08d52: `test_utxo_snapshots.sh` could be simplified to use signet, avoiding the need to recompile (since that chain is small enough on most machines to endure a full IBD)\r\n\r\nSome progress indicator for `FlushSnapshotToDisk: saving snapshot chainstate` would be useful.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1654826157",
      "submitted_at": "2023-10-03T14:01:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "reviewed",
      "id": 1654978564,
      "node_id": "PRR_kwDOABII585ipPgE",
      "url": null,
      "actor": null,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1654978564",
      "submitted_at": "2023-10-03T20:53:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "commented",
      "id": 1745711906,
      "node_id": "IC_kwDOABII585oDXMi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1745711906",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-03T20:55:32Z",
      "updated_at": "2023-10-03T20:55:32Z",
      "author_association": "MEMBER",
      "body": "Left some low level review comments. I guess the only question I have so far is why `-prune=0` isn't broken: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344605396\r\n\r\nI'll try to compile and test later.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1745711906",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "reviewed",
      "id": 1653763136,
      "node_id": "PRR_kwDOABII585ikmxA",
      "url": null,
      "actor": null,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Didn't get too deep with my review before this got merged - but it looked good to me on a high level. Just two comments that may or may not be considered in a follow-up.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1653763136",
      "submitted_at": "2023-10-03T22:15:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "commented",
      "id": 1747308922,
      "node_id": "IC_kwDOABII585oJdF6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1747308922",
      "actor": {
        "login": "D33r-Gee",
        "id": 111142327,
        "node_id": "U_kgDOBp_ltw",
        "avatar_url": "https://avatars.githubusercontent.com/u/111142327?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/D33r-Gee",
        "html_url": "https://github.com/D33r-Gee",
        "followers_url": "https://api.github.com/users/D33r-Gee/followers",
        "following_url": "https://api.github.com/users/D33r-Gee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/D33r-Gee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/D33r-Gee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/D33r-Gee/subscriptions",
        "organizations_url": "https://api.github.com/users/D33r-Gee/orgs",
        "repos_url": "https://api.github.com/users/D33r-Gee/repos",
        "events_url": "https://api.github.com/users/D33r-Gee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/D33r-Gee/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-04T17:05:28Z",
      "updated_at": "2023-10-04T17:05:28Z",
      "author_association": "NONE",
      "body": "tACK on WSL Ubuntu 22.04.\r\n\r\nI tested `signet` and `testnet` by generating snapshots using the ./contrib/devtools/utxo_snapshot.sh script.\r\nBoth snapshots had the correct SHA-256 sums.\r\n\r\nOn `signet`, I loaded the snapshot and it verified very quickly.\r\n\r\nOn `testnet`, I did the same thing, but it took a while because the Testnet blockchain is much larger.\r\n\r\nBoth `signet` and `testnet` synced successfully and the `getchainstates` command returned \"normal\".\r\n\r\nThe only difference I found is that the `testnet3/chainstate` folder is about **1.53 GB** and the `testnet3/blocks` folder is about **1.91 GB**, while the `signet/chainstate` folder is about **97.6 MB** and the `signet/blocks` folder is about **915 MB**.\r\nAre those the expected folder sizes once the snapshots are synced?",
      "user": {
        "login": "D33r-Gee",
        "id": 111142327,
        "node_id": "U_kgDOBp_ltw",
        "avatar_url": "https://avatars.githubusercontent.com/u/111142327?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/D33r-Gee",
        "html_url": "https://github.com/D33r-Gee",
        "followers_url": "https://api.github.com/users/D33r-Gee/followers",
        "following_url": "https://api.github.com/users/D33r-Gee/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/D33r-Gee/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/D33r-Gee/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/D33r-Gee/subscriptions",
        "organizations_url": "https://api.github.com/users/D33r-Gee/orgs",
        "repos_url": "https://api.github.com/users/D33r-Gee/repos",
        "events_url": "https://api.github.com/users/D33r-Gee/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/D33r-Gee/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1747308922",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "unsubscribed",
      "id": 10554165922,
      "node_id": "UE_lADOABII585lWq3pzwAAAAJ1E8qi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10554165922",
      "actor": {
        "login": "benthecarman",
        "id": 15256660,
        "node_id": "MDQ6VXNlcjE1MjU2NjYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/15256660?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/benthecarman",
        "html_url": "https://github.com/benthecarman",
        "followers_url": "https://api.github.com/users/benthecarman/followers",
        "following_url": "https://api.github.com/users/benthecarman/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/benthecarman/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/benthecarman/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/benthecarman/subscriptions",
        "organizations_url": "https://api.github.com/users/benthecarman/orgs",
        "repos_url": "https://api.github.com/users/benthecarman/repos",
        "events_url": "https://api.github.com/users/benthecarman/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/benthecarman/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-04T17:55:11Z"
    },
    {
      "event": "referenced",
      "id": 10566410264,
      "node_id": "REFE_lADOABII585lWq3pzwAAAAJ1zqAY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10566410264",
      "actor": {
        "login": "Frank-GER",
        "id": 87550788,
        "node_id": "MDQ6VXNlcjg3NTUwNzg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/87550788?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Frank-GER",
        "html_url": "https://github.com/Frank-GER",
        "followers_url": "https://api.github.com/users/Frank-GER/followers",
        "following_url": "https://api.github.com/users/Frank-GER/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Frank-GER/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Frank-GER/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Frank-GER/subscriptions",
        "organizations_url": "https://api.github.com/users/Frank-GER/orgs",
        "repos_url": "https://api.github.com/users/Frank-GER/repos",
        "events_url": "https://api.github.com/users/Frank-GER/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Frank-GER/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9ecc85a23a93eee914365eaa8a0884858e71dcf1",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/9ecc85a23a93eee914365eaa8a0884858e71dcf1",
      "created_at": "2023-10-05T16:57:15Z"
    },
    {
      "event": "reviewed",
      "id": 1661470533,
      "node_id": "PRR_kwDOABII585jCAdF",
      "url": null,
      "actor": null,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Reviewed the remaining commits. I'll try to pick off some comments from the past few days as followup(s) and/or issues.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1661470533",
      "submitted_at": "2023-10-06T14:21:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "commented",
      "id": 1751406642,
      "node_id": "IC_kwDOABII585oZFgy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1751406642",
      "actor": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-06T21:10:48Z",
      "updated_at": "2023-10-06T21:10:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "post merge ACK . I've been testing thoroughly on mainnet, and everything worked as expected. I 'll provide more detalied feedback on follow ups.",
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1751406642",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "referenced",
      "id": 10581697837,
      "node_id": "REFE_lADOABII585lWq3pzwAAAAJ2t-Ut",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10581697837",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "38f4b0d9d1c8c0cc76fd1b651dd1205ceb11cb73",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38f4b0d9d1c8c0cc76fd1b651dd1205ceb11cb73",
      "created_at": "2023-10-07T10:22:49Z"
    },
    {
      "event": "commented",
      "id": 1753015375,
      "node_id": "IC_kwDOABII585ofORP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1753015375",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-09T13:28:02Z",
      "updated_at": "2023-10-09T13:29:56Z",
      "author_association": "MEMBER",
      "body": "Imo most post-merge comments have now been addressed in either followup PRs or open issues: #28608, #28616, #28618, #28620, #28621, #28619,  (already merged: #28590, #28589, #28562) \r\n\r\nThe tracing issue could be updated to point to them.\r\n\r\nThese seem unaddressed:\r\n* https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344694600 (something racy)\r\n* https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1345866623 (dead code to begin with?)\r\nhttps://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343985564 (extra empty mempool check for clearer error message)\r\n\r\n",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#issuecomment-1753015375",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27596"
    },
    {
      "event": "subscribed",
      "id": 10592900935,
      "node_id": "SE_lADOABII585lWq3pzwAAAAJ3YtdH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10592900935",
      "actor": {
        "login": "MarnixCroes",
        "id": 93143998,
        "node_id": "U_kgDOBY1Dvg",
        "avatar_url": "https://avatars.githubusercontent.com/u/93143998?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MarnixCroes",
        "html_url": "https://github.com/MarnixCroes",
        "followers_url": "https://api.github.com/users/MarnixCroes/followers",
        "following_url": "https://api.github.com/users/MarnixCroes/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/MarnixCroes/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/MarnixCroes/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/MarnixCroes/subscriptions",
        "organizations_url": "https://api.github.com/users/MarnixCroes/orgs",
        "repos_url": "https://api.github.com/users/MarnixCroes/repos",
        "events_url": "https://api.github.com/users/MarnixCroes/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/MarnixCroes/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-09T15:37:41Z"
    },
    {
      "event": "reviewed",
      "id": 1666026559,
      "node_id": "PRR_kwDOABII585jTYw_",
      "url": null,
      "actor": null,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "post-merge re tACK [edbed31](https://github.com/bitcoin/bitcoin/pull/27596/commits/edbed31066e3674ba52b8c093ab235625527f383)\r\n\r\nTested on `mainnet` using `utxo-800000.dat` file from @Sjors.\r\n\r\n\r\n```\r\n./src/bitcoin-cli -datadir=${AU_DATADIR} getchainstates\r\n{\r\n  \"headers\": 811416,\r\n  \"chainstates\": [\r\n    {\r\n      \"blocks\": 49020,\r\n      \"bestblockhash\": \"00000000283ec5677b8757c0b652e67087b968e337e9779b35d9092bf4003882\",\r\n      \"difficulty\": 6.085476906000794,\r\n      \"verificationprogress\": 5.482400033922018e-05,\r\n      \"coins_db_cache_bytes\": 419430,\r\n      \"coins_tip_cache_bytes\": 784649420,\r\n      \"validated\": true\r\n    },\r\n    {\r\n      \"blocks\": 800000,\r\n      \"bestblockhash\": \"00000000000000000002a7c4c1e48d76c5a37902165a270156b7a8d72728a054\",\r\n      \"difficulty\": 53911173001054.59,\r\n      \"verificationprogress\": 0.9591139668014443,\r\n      \"coins_db_cache_bytes\": 7969177,\r\n      \"coins_tip_cache_bytes\": 14908338995,\r\n      \"snapshot_blockhash\": \"00000000000000000002a7c4c1e48d76c5a37902165a270156b7a8d72728a054\",\r\n      \"validated\": false\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nI think description should be updated removing references to previous snapshot file from @jamesob, as if a reviewer uses that file without updating the code in  `src/kernel/chainparams.cpp` according to @Sjors [commit](https://github.com/Sjors/bitcoin/commit/24deb2022b822f22fba9fcbee201e37a83225eb2) but with correct details of 788000 block, running `loadtxoutset` will error with: \r\n```\r\n/src/bitcoin-cli -datadir=${AU_DATADIR} loadtxoutset ${AU_DATADIR}/utxo-788000.dat\r\nerror code: -32603\r\nerror message:\r\nUnable to load UTXO snapshot .../.test_utxo/utxo-788000.dat\r\n```\r\n\r\nAlso when re-try to run again `loadtxoutset` after its completion user would obtain:\r\n```\r\n./src/bitcoin-cli -datadir=${AU_DATADIR} loadtxoutset ${AU_DATADIR}/utxo-800000.dat\r\nerror code: -32603\r\nerror message:\r\nUnable to load UTXO snapshot .../.test_utxo_2/utxo-800000.dat\r\n```\r\nWhile in the `bitcoind` logs a user would see the correct issue:\r\n```\r\n2023-10-09T20:26:13Z [httpworker.2] [snapshot] waiting to see blockheader 00000000000000000002a7c4c1e48d76c5a37902165a270156b7a8d72728a054 in headers chain before snapshot activation\r\n2023-10-09T20:26:13Z [httpworker.2] [snapshot] can't activate a snapshot-based chainstate more than once\r\n```\r\nAnd I think when I previously [tested](https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1640753506) [1b1d711](https://github.com/bitcoin/bitcoin/commit/1b1d7110e67da11752ae1efadb1c12a9054eb867), unless I dreamt it, I saw the correct error description `can't activate a snapshot-based chainstate more than once` as the output from `cli`.\r\n\r\nI agree `loadtxoutset` timeout [issue](https://github.com/bitcoin/bitcoin/issues/28620) should be solved.",
      "user": {
        "login": "pablomartin4btc",
        "id": 110166421,
        "node_id": "U_kgDOBpEBlQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/110166421?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pablomartin4btc",
        "html_url": "https://github.com/pablomartin4btc",
        "followers_url": "https://api.github.com/users/pablomartin4btc/followers",
        "following_url": "https://api.github.com/users/pablomartin4btc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pablomartin4btc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pablomartin4btc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pablomartin4btc/subscriptions",
        "organizations_url": "https://api.github.com/users/pablomartin4btc/orgs",
        "repos_url": "https://api.github.com/users/pablomartin4btc/repos",
        "events_url": "https://api.github.com/users/pablomartin4btc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pablomartin4btc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#pullrequestreview-1666026559",
      "submitted_at": "2023-10-10T03:44:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
    },
    {
      "event": "referenced",
      "id": 10743469610,
      "node_id": "REFE_lADOABII585lWq3pzwAAAAKAXFYq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10743469610",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5c32c5971c28c12f8e97a422d7b1da15f7c82e7b",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5c32c5971c28c12f8e97a422d7b1da15f7c82e7b",
      "created_at": "2023-10-23T16:41:30Z"
    },
    {
      "event": "referenced",
      "id": 10799431360,
      "node_id": "REFE_lADOABII585lWq3pzwAAAAKDsj7A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10799431360",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "feae4e04389b89e18a411596c4f2cdc18663a1ef",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/feae4e04389b89e18a411596c4f2cdc18663a1ef",
      "created_at": "2023-10-29T09:22:20Z"
    },
    {
      "event": "referenced",
      "id": 11086947865,
      "node_id": "REFE_lADOABII585lWq3pzwAAAAKU1WYZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11086947865",
      "actor": {
        "login": "Frank-GER",
        "id": 87550788,
        "node_id": "MDQ6VXNlcjg3NTUwNzg4",
        "avatar_url": "https://avatars.githubusercontent.com/u/87550788?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Frank-GER",
        "html_url": "https://github.com/Frank-GER",
        "followers_url": "https://api.github.com/users/Frank-GER/followers",
        "following_url": "https://api.github.com/users/Frank-GER/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Frank-GER/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Frank-GER/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Frank-GER/subscriptions",
        "organizations_url": "https://api.github.com/users/Frank-GER/orgs",
        "repos_url": "https://api.github.com/users/Frank-GER/repos",
        "events_url": "https://api.github.com/users/Frank-GER/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Frank-GER/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5c0dc6ab1d335ed7ab1f0354a7c96ff5735c5670",
      "commit_url": "https://api.github.com/repos/syscoin/syscoin/commits/5c0dc6ab1d335ed7ab1f0354a7c96ff5735c5670",
      "created_at": "2023-11-28T17:56:16Z"
    },
    {
      "event": "referenced",
      "id": 11528647523,
      "node_id": "REFE_lADOABII585lWq3pzwAAAAKvKTNj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11528647523",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5f3a0574c45477288bc678b15f24940486084576",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f3a0574c45477288bc678b15f24940486084576",
      "created_at": "2024-01-18T18:17:45Z"
    },
    {
      "event": "referenced",
      "id": 11788477882,
      "node_id": "REFE_lADOABII585lWq3pzwAAAAK-peW6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11788477882",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f83565db45dece755848d6eba2c921973e9db81e",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f83565db45dece755848d6eba2c921973e9db81e",
      "created_at": "2024-02-13T13:04:31Z"
    },
    {
      "event": "referenced",
      "id": 13884414749,
      "node_id": "REFE_lADOABII585lWq3pzwAAAAM7k1sd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13884414749",
      "actor": {
        "login": "knst",
        "id": 545784,
        "node_id": "MDQ6VXNlcjU0NTc4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/545784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/knst",
        "html_url": "https://github.com/knst",
        "followers_url": "https://api.github.com/users/knst/followers",
        "following_url": "https://api.github.com/users/knst/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/knst/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/knst/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/knst/subscriptions",
        "organizations_url": "https://api.github.com/users/knst/orgs",
        "repos_url": "https://api.github.com/users/knst/repos",
        "events_url": "https://api.github.com/users/knst/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/knst/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bf377d47e59d9adaca42d5b6df3505e5d3b24fc7",
      "commit_url": "https://api.github.com/repos/knst/dash/commits/bf377d47e59d9adaca42d5b6df3505e5d3b24fc7",
      "created_at": "2024-08-14T17:35:16Z"
    },
    {
      "event": "referenced",
      "id": 13892630402,
      "node_id": "REFE_lADOABII585lWq3pzwAAAAM8ELeC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13892630402",
      "actor": {
        "login": "knst",
        "id": 545784,
        "node_id": "MDQ6VXNlcjU0NTc4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/545784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/knst",
        "html_url": "https://github.com/knst",
        "followers_url": "https://api.github.com/users/knst/followers",
        "following_url": "https://api.github.com/users/knst/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/knst/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/knst/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/knst/subscriptions",
        "organizations_url": "https://api.github.com/users/knst/orgs",
        "repos_url": "https://api.github.com/users/knst/repos",
        "events_url": "https://api.github.com/users/knst/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/knst/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7316ed6605d48e040c97fa1891b6c7d4d1ba31b9",
      "commit_url": "https://api.github.com/repos/knst/dash/commits/7316ed6605d48e040c97fa1891b6c7d4d1ba31b9",
      "created_at": "2024-08-15T07:14:57Z"
    },
    {
      "event": "referenced",
      "id": 13906088780,
      "node_id": "REFE_lADOABII585lWq3pzwAAAAM83hNM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13906088780",
      "actor": {
        "login": "knst",
        "id": 545784,
        "node_id": "MDQ6VXNlcjU0NTc4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/545784?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/knst",
        "html_url": "https://github.com/knst",
        "followers_url": "https://api.github.com/users/knst/followers",
        "following_url": "https://api.github.com/users/knst/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/knst/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/knst/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/knst/subscriptions",
        "organizations_url": "https://api.github.com/users/knst/orgs",
        "repos_url": "https://api.github.com/users/knst/repos",
        "events_url": "https://api.github.com/users/knst/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/knst/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8f923872ababc4bb49d02fcb947ae2454741814b",
      "commit_url": "https://api.github.com/repos/knst/dash/commits/8f923872ababc4bb49d02fcb947ae2454741814b",
      "created_at": "2024-08-16T05:11:41Z"
    },
    {
      "event": "referenced",
      "id": 13920977661,
      "node_id": "REFE_lADOABII585lWq3pzwAAAAM9wUL9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13920977661",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7d8a19ef7c7c90fcfe55c299154e6c816eedc048",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/7d8a19ef7c7c90fcfe55c299154e6c816eedc048",
      "created_at": "2024-08-18T02:11:55Z"
    },
    {
      "event": "referenced",
      "id": 14788333071,
      "node_id": "REFE_lADOABII585lWq3pzwAAAANxdA4P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14788333071",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "87bebfc2468bdf069532d5178cf50dcc5fa06752",
      "commit_url": "https://api.github.com/repos/PastaPastaPasta/dash/commits/87bebfc2468bdf069532d5178cf50dcc5fa06752",
      "created_at": "2024-10-22T15:56:55Z"
    },
    {
      "event": "referenced",
      "id": 16173370684,
      "node_id": "REFE_lADOABII585lWq3pzwAAAAPEAg08",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16173370684",
      "actor": {
        "login": "Fabcien",
        "id": 44533924,
        "node_id": "MDQ6VXNlcjQ0NTMzOTI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/44533924?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Fabcien",
        "html_url": "https://github.com/Fabcien",
        "followers_url": "https://api.github.com/users/Fabcien/followers",
        "following_url": "https://api.github.com/users/Fabcien/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Fabcien/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Fabcien/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Fabcien/subscriptions",
        "organizations_url": "https://api.github.com/users/Fabcien/orgs",
        "repos_url": "https://api.github.com/users/Fabcien/repos",
        "events_url": "https://api.github.com/users/Fabcien/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Fabcien/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9b78e7fbb03e1546d1d9a746ee358b06a06ddf07",
      "commit_url": "https://api.github.com/repos/Bitcoin-ABC/bitcoin-abc/commits/9b78e7fbb03e1546d1d9a746ee358b06a06ddf07",
      "created_at": "2025-02-04T07:10:08Z"
    },
    {
      "event": "locked",
      "id": 16205533065,
      "node_id": "LOE_lADOABII585lWq3pzwAAAAPF7M-J",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16205533065",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-06T07:29:40Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197159021",
      "pull_request_review_id": 1431794725,
      "id": 1197159021,
      "node_id": "PRRC_kwDOABII585HWzJt",
      "diff_hunk": "@@ -2700,6 +2700,86 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    fs::path path = fs::PathFromString(request.params[0].get_str());\n+    if (path.is_relative()) {\n+        path = gArgs.GetDataDirNet() / path;\n+    }\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "bbaa5812258e33ca8a5a63f28c7da6b1d78433a1",
      "in_reply_to_id": null,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Right now if a non-existing file path is passed, a rather cryptic error message appears:\r\n```\r\n$ ./src/bitcoin-cli loadtxoutset jslkdf \r\nerror code: -1\r\nerror message:\r\nCAutoFile::operator>>: file handle is nullptr: unspecified iostream_category error\r\n```\r\n\r\nShould ensure that `afile` is not null and throw an explicit error if it is (like `dumptxoutset` already does), e.g.:\r\n```suggestion\r\n    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\r\n    if (afile.IsNull()) {\r\n        throw JSONRPCError(\r\n            RPC_INVALID_PARAMETER,\r\n            \"Couldn't open file \" + path.u8string() + \" for reading.\");\r\n    }\r\n```",
      "created_at": "2023-05-17T23:25:38Z",
      "updated_at": "2023-05-18T00:37:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1197159021",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1197159021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2732,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210211360",
      "pull_request_review_id": 1450841472,
      "id": 1210211360,
      "node_id": "PRRC_kwDOABII585IIlwg",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$((\"$BASE_HEIGHT\" + \"$INCREMENTAL_HEIGHT\"))",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 20,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "fc6299c8c23479e3596c68920fa2a576488119c6",
      "in_reply_to_id": null,
      "user": {
        "login": "alexanderwiederin",
        "id": 37130778,
        "node_id": "MDQ6VXNlcjM3MTMwNzc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37130778?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexanderwiederin",
        "html_url": "https://github.com/alexanderwiederin",
        "followers_url": "https://api.github.com/users/alexanderwiederin/followers",
        "following_url": "https://api.github.com/users/alexanderwiederin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexanderwiederin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexanderwiederin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexanderwiederin/subscriptions",
        "organizations_url": "https://api.github.com/users/alexanderwiederin/orgs",
        "repos_url": "https://api.github.com/users/alexanderwiederin/repos",
        "events_url": "https://api.github.com/users/alexanderwiederin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexanderwiederin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Getting `syntax error: operand expected (error token is \"\"30000\" + \"20000\"\")` on macOS\r\n```suggestion\r\nFINAL_HEIGHT=$(($BASE_HEIGHT + $INCREMENTAL_HEIGHT))\r\n```",
      "created_at": "2023-05-30T12:38:57Z",
      "updated_at": "2023-05-30T12:38:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1210211360",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210211360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210212400",
      "pull_request_review_id": 1450842970,
      "id": 1210212400,
      "node_id": "PRRC_kwDOABII585IImAw",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$((\"$BASE_HEIGHT\" + \"$INCREMENTAL_HEIGHT\"))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes.\n+ALL_INDEXES=\"-txindex -coinstatsindex -blockfilterindex=1\"\n+\n+if ! command -v jq >/dev/null ; then\n+  echo \"This script requires jq to parse JSON RPC output. Please install it.\"\n+  echo \"(e.g. sudo apt install jq)\"\n+  exit 1\n+fi\n+\n+finish() {\n+  echo\n+  echo \"Killing server and client PIDs ($SERVER_PID, $CLIENT_PID) and cleaning up datadirs\"\n+  echo\n+  rm -f \"$UTXO_DAT_FILE\" \"$DUMP_OUTPUT\"\n+  rm -rf \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+  kill -9 \"$SERVER_PID\" \"$CLIENT_PID\"\n+}\n+\n+trap finish EXIT\n+\n+# Need to specify these to trick client into accepting server as a peer\n+# it can IBD from.\n+CHAIN_HACK_FLAGS=\"-maxtipage=9223372036854775207 -minimumchainwork=0x00\"\n+\n+server_rpc() {\n+  ./src/bitcoin-cli -rpcport=$SERVER_RPC_PORT -datadir=\"$SERVER_DATADIR\" \"$@\"\n+}\n+client_rpc() {\n+  ./src/bitcoin-cli -rpcport=$CLIENT_RPC_PORT -datadir=\"$CLIENT_DATADIR\" \"$@\"\n+}\n+server_sleep_til_boot() {\n+  while ! server_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+client_sleep_til_boot() {\n+  while ! client_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+\n+mkdir -p \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+\n+echo \"Hi, welcome to the assumeutxo demo/test\"\n+echo\n+echo \"We're going to\"\n+echo\n+echo \"  - start up a 'server' node, sync it via mainnet IBD to height ${BASE_HEIGHT}\"\n+echo \"  - create a UTXO snapshot at that height\"\n+echo \"  - IBD ${INCREMENTAL_HEIGHT} more blocks on top of that\"\n+echo\n+echo \"then we'll demonstrate assumeutxo by \"\n+echo\n+echo \"  - starting another node (the 'client') and loading the snapshot in\"\n+echo \"    * first you'll have to modify the code slightly (chainparams) and recompile\"\n+echo \"    * don't worry, we'll make it easy\"\n+echo \"  - observing the client sync ${INCREMENTAL_HEIGHT} blocks on top of the snapshot from the server\"\n+echo \"  - observing the client validate the snapshot chain via background IBD\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- Starting the demo. You might want to run the two following commands in\"\n+echo \"   separate terminal windows:\"\n+echo\n+echo \"   watch -n0.1 tail -n 30 $SERVER_DATADIR/debug.log\"\n+echo \"   watch -n0.1 tail -n 30 $CLIENT_DATADIR/debug.log\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- IBDing the blocks (height=$BASE_HEIGHT) required to the server node...\"\n+./src/bitcoind -logthreadnames=1 $SERVER_PORTS \\\n+    -datadir=\"$SERVER_DATADIR\" $CHAIN_HACK_FLAGS -stopatheight=\"$BASE_HEIGHT\" >/dev/null\n+\n+echo\n+echo \"-- Creating snapshot at ~ height $BASE_HEIGHT ($UTXO_DAT_FILE)...\"\n+sleep 2\n+./src/bitcoind -logthreadnames=1 $SERVER_PORTS \\\n+    -datadir=\"$SERVER_DATADIR\" $CHAIN_HACK_FLAGS -connect=0 -listen=0 >/dev/null &\n+SERVER_PID=\"$!\"\n+\n+DUMP_OUTPUT=\"dumptxoutset-output-$BASE_HEIGHT.json\"\n+\n+server_sleep_til_boot\n+server_rpc dumptxoutset \"$UTXO_DAT_FILE\" > \"$DUMP_OUTPUT\"\n+cat \"$DUMP_OUTPUT\"\n+kill -9 \"$SERVER_PID\"\n+\n+RPC_BASE_HEIGHT=$(jq -r .base_height < \"$DUMP_OUTPUT\")\n+RPC_AU=$(jq -r .txoutset_hash < \"$DUMP_OUTPUT\")\n+RPC_NCHAINTX=$(jq -r .nchaintx < \"$DUMP_OUTPUT\")\n+RPC_BLOCKHASH=$(jq -r .base_hash < \"$DUMP_OUTPUT\")\n+\n+# Wait for server to shutdown...\n+while server_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+\n+echo\n+echo \"-- Now: add the following to CMainParams::m_assumeutxo_data\"\n+echo \"   in src/kernel/chainparams.cpp, and recompile:\"\n+echo\n+echo \"   {${RPC_BASE_HEIGHT}, AssumeutxoHash{uint256S(\\\"0x${RPC_AU}\\\")}, ${RPC_NCHAINTX}, uint256S(\\\"0x${RPC_BLOCKHASH}\\\")},\"\n+echo\n+echo\n+echo \"-- IBDing more blocks to the server node (height=$FINAL_HEIGHT) so there is a diff between snapshot and tip...\"\n+./src/bitcoind $SERVER_PORTS -logthreadnames=1 -datadir=\"$SERVER_DATADIR\" \\\n+    $CHAIN_HACK_FLAGS -stopatheight=\"$FINAL_HEIGHT\" >/dev/null\n+\n+echo\n+echo \"-- Staring the server node to provide blocks to the client node...\"",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 141,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "fc6299c8c23479e3596c68920fa2a576488119c6",
      "in_reply_to_id": null,
      "user": {
        "login": "alexanderwiederin",
        "id": 37130778,
        "node_id": "MDQ6VXNlcjM3MTMwNzc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37130778?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexanderwiederin",
        "html_url": "https://github.com/alexanderwiederin",
        "followers_url": "https://api.github.com/users/alexanderwiederin/followers",
        "following_url": "https://api.github.com/users/alexanderwiederin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexanderwiederin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexanderwiederin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexanderwiederin/subscriptions",
        "organizations_url": "https://api.github.com/users/alexanderwiederin/orgs",
        "repos_url": "https://api.github.com/users/alexanderwiederin/repos",
        "events_url": "https://api.github.com/users/alexanderwiederin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexanderwiederin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Missing the second \"t\" of \"Starting\"\r\n```suggestion\r\necho \"-- Starting the server node to provide blocks to the client node...\"\r\n```",
      "created_at": "2023-05-30T12:39:49Z",
      "updated_at": "2023-05-30T12:39:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1210212400",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210212400"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210397176",
      "pull_request_review_id": 1451142607,
      "id": 1210397176,
      "node_id": "PRRC_kwDOABII585IJTH4",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$((\"$BASE_HEIGHT\" + \"$INCREMENTAL_HEIGHT\"))",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 20,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "fc6299c8c23479e3596c68920fa2a576488119c6",
      "in_reply_to_id": 1210211360,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Which version of Python are you using?",
      "created_at": "2023-05-30T14:45:25Z",
      "updated_at": "2023-05-30T14:45:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1210397176",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210397176"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210425053",
      "pull_request_review_id": 1451192866,
      "id": 1210425053,
      "node_id": "PRRC_kwDOABII585IJZ7d",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$((\"$BASE_HEIGHT\" + \"$INCREMENTAL_HEIGHT\"))",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 20,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "fc6299c8c23479e3596c68920fa2a576488119c6",
      "in_reply_to_id": 1210211360,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@Sjors this is bash :). If he's on macOS, probably some kind of zsh?",
      "created_at": "2023-05-30T15:05:14Z",
      "updated_at": "2023-05-30T15:05:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1210425053",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210425053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210488998",
      "pull_request_review_id": 1451289875,
      "id": 1210488998,
      "node_id": "PRRC_kwDOABII585IJpim",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$((\"$BASE_HEIGHT\" + \"$INCREMENTAL_HEIGHT\"))",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 20,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "fc6299c8c23479e3596c68920fa2a576488119c6",
      "in_reply_to_id": 1210211360,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "macOS ships an ancient version of bash",
      "created_at": "2023-05-30T15:52:07Z",
      "updated_at": "2023-05-30T15:52:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1210488998",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1210488998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1211504043",
      "pull_request_review_id": 1452852799,
      "id": 1211504043,
      "node_id": "PRRC_kwDOABII585INhWr",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$((\"$BASE_HEIGHT\" + \"$INCREMENTAL_HEIGHT\"))",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 20,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "fc6299c8c23479e3596c68920fa2a576488119c6",
      "in_reply_to_id": 1210211360,
      "user": {
        "login": "alexanderwiederin",
        "id": 37130778,
        "node_id": "MDQ6VXNlcjM3MTMwNzc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37130778?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexanderwiederin",
        "html_url": "https://github.com/alexanderwiederin",
        "followers_url": "https://api.github.com/users/alexanderwiederin/followers",
        "following_url": "https://api.github.com/users/alexanderwiederin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexanderwiederin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexanderwiederin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexanderwiederin/subscriptions",
        "organizations_url": "https://api.github.com/users/alexanderwiederin/orgs",
        "repos_url": "https://api.github.com/users/alexanderwiederin/repos",
        "events_url": "https://api.github.com/users/alexanderwiederin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexanderwiederin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@jamesob line 1 (`#!/usr/bin/env bash`) sets the interpreter to Bash regardless of what the system default is.\r\n\r\n@MarcoFalke you were right! macOS comes with an outdated version of bash (`3.2.57`). I have updated to `5.2.15`. Script runs like a charm now. \r\n\r\nThanks for the help!",
      "created_at": "2023-05-31T10:41:26Z",
      "updated_at": "2023-05-31T10:41:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1211504043",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1211504043"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1211763951",
      "pull_request_review_id": 1453295026,
      "id": 1211763951,
      "node_id": "PRRC_kwDOABII585IOgzv",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$((\"$BASE_HEIGHT\" + \"$INCREMENTAL_HEIGHT\"))",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 20,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "fc6299c8c23479e3596c68920fa2a576488119c6",
      "in_reply_to_id": 1210211360,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> @Sjors this is bash :)\r\n\r\n*bashes head against table*",
      "created_at": "2023-05-31T13:56:41Z",
      "updated_at": "2023-05-31T13:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1211763951",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1211763951"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1211880620",
      "pull_request_review_id": 1453503822,
      "id": 1211880620,
      "node_id": "PRRC_kwDOABII585IO9Ss",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$((\"$BASE_HEIGHT\" + \"$INCREMENTAL_HEIGHT\"))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes.\n+ALL_INDEXES=\"-txindex -coinstatsindex -blockfilterindex=1\"\n+\n+if ! command -v jq >/dev/null ; then\n+  echo \"This script requires jq to parse JSON RPC output. Please install it.\"\n+  echo \"(e.g. sudo apt install jq)\"\n+  exit 1\n+fi\n+\n+finish() {\n+  echo\n+  echo \"Killing server and client PIDs ($SERVER_PID, $CLIENT_PID) and cleaning up datadirs\"\n+  echo\n+  rm -f \"$UTXO_DAT_FILE\" \"$DUMP_OUTPUT\"\n+  rm -rf \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+  kill -9 \"$SERVER_PID\" \"$CLIENT_PID\"\n+}\n+\n+trap finish EXIT\n+\n+# Need to specify these to trick client into accepting server as a peer\n+# it can IBD from.\n+CHAIN_HACK_FLAGS=\"-maxtipage=9223372036854775207 -minimumchainwork=0x00\"\n+\n+server_rpc() {\n+  ./src/bitcoin-cli -rpcport=$SERVER_RPC_PORT -datadir=\"$SERVER_DATADIR\" \"$@\"\n+}\n+client_rpc() {\n+  ./src/bitcoin-cli -rpcport=$CLIENT_RPC_PORT -datadir=\"$CLIENT_DATADIR\" \"$@\"\n+}\n+server_sleep_til_boot() {\n+  while ! server_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+client_sleep_til_boot() {\n+  while ! client_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+\n+mkdir -p \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+\n+echo \"Hi, welcome to the assumeutxo demo/test\"\n+echo\n+echo \"We're going to\"\n+echo\n+echo \"  - start up a 'server' node, sync it via mainnet IBD to height ${BASE_HEIGHT}\"\n+echo \"  - create a UTXO snapshot at that height\"\n+echo \"  - IBD ${INCREMENTAL_HEIGHT} more blocks on top of that\"\n+echo\n+echo \"then we'll demonstrate assumeutxo by \"\n+echo\n+echo \"  - starting another node (the 'client') and loading the snapshot in\"\n+echo \"    * first you'll have to modify the code slightly (chainparams) and recompile\"\n+echo \"    * don't worry, we'll make it easy\"\n+echo \"  - observing the client sync ${INCREMENTAL_HEIGHT} blocks on top of the snapshot from the server\"\n+echo \"  - observing the client validate the snapshot chain via background IBD\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- Starting the demo. You might want to run the two following commands in\"\n+echo \"   separate terminal windows:\"\n+echo\n+echo \"   watch -n0.1 tail -n 30 $SERVER_DATADIR/debug.log\"\n+echo \"   watch -n0.1 tail -n 30 $CLIENT_DATADIR/debug.log\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- IBDing the blocks (height=$BASE_HEIGHT) required to the server node...\"\n+./src/bitcoind -logthreadnames=1 $SERVER_PORTS \\\n+    -datadir=\"$SERVER_DATADIR\" $CHAIN_HACK_FLAGS -stopatheight=\"$BASE_HEIGHT\" >/dev/null\n+\n+echo\n+echo \"-- Creating snapshot at ~ height $BASE_HEIGHT ($UTXO_DAT_FILE)...\"\n+sleep 2\n+./src/bitcoind -logthreadnames=1 $SERVER_PORTS \\\n+    -datadir=\"$SERVER_DATADIR\" $CHAIN_HACK_FLAGS -connect=0 -listen=0 >/dev/null &\n+SERVER_PID=\"$!\"\n+\n+DUMP_OUTPUT=\"dumptxoutset-output-$BASE_HEIGHT.json\"\n+\n+server_sleep_til_boot\n+server_rpc dumptxoutset \"$UTXO_DAT_FILE\" > \"$DUMP_OUTPUT\"\n+cat \"$DUMP_OUTPUT\"\n+kill -9 \"$SERVER_PID\"\n+\n+RPC_BASE_HEIGHT=$(jq -r .base_height < \"$DUMP_OUTPUT\")\n+RPC_AU=$(jq -r .txoutset_hash < \"$DUMP_OUTPUT\")\n+RPC_NCHAINTX=$(jq -r .nchaintx < \"$DUMP_OUTPUT\")\n+RPC_BLOCKHASH=$(jq -r .base_hash < \"$DUMP_OUTPUT\")\n+\n+# Wait for server to shutdown...\n+while server_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+\n+echo\n+echo \"-- Now: add the following to CMainParams::m_assumeutxo_data\"\n+echo \"   in src/kernel/chainparams.cpp, and recompile:\"\n+echo\n+echo \"   {${RPC_BASE_HEIGHT}, AssumeutxoHash{uint256S(\\\"0x${RPC_AU}\\\")}, ${RPC_NCHAINTX}, uint256S(\\\"0x${RPC_BLOCKHASH}\\\")},\"\n+echo\n+echo\n+echo \"-- IBDing more blocks to the server node (height=$FINAL_HEIGHT) so there is a diff between snapshot and tip...\"\n+./src/bitcoind $SERVER_PORTS -logthreadnames=1 -datadir=\"$SERVER_DATADIR\" \\\n+    $CHAIN_HACK_FLAGS -stopatheight=\"$FINAL_HEIGHT\" >/dev/null\n+\n+echo\n+echo \"-- Staring the server node to provide blocks to the client node...\"",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 141,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "fc6299c8c23479e3596c68920fa2a576488119c6",
      "in_reply_to_id": 1210212400,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed, thanks",
      "created_at": "2023-05-31T15:13:11Z",
      "updated_at": "2023-05-31T15:13:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1211880620",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1211880620"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1211880971",
      "pull_request_review_id": 1453504505,
      "id": 1211880971,
      "node_id": "PRRC_kwDOABII585IO9YL",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$((\"$BASE_HEIGHT\" + \"$INCREMENTAL_HEIGHT\"))",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 20,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "fc6299c8c23479e3596c68920fa2a576488119c6",
      "in_reply_to_id": 1210211360,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed, thanks all.",
      "created_at": "2023-05-31T15:13:24Z",
      "updated_at": "2023-05-31T15:13:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1211880971",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1211880971"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 20,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290225497",
      "pull_request_review_id": 1572046251,
      "id": 1290225497,
      "node_id": "PRRC_kwDOABII585M50dZ",
      "diff_hunk": "@@ -1406,6 +1410,62 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     }\n }\n \n+void PeerManagerImpl::TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex *from_tip, const CBlockIndex* target_block)",
      "path": "src/net_processing.cpp",
      "position": 78,
      "original_position": 49,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This look suspiciously similar to `FindNextBlocksToDownload`, is there no way to unify the two?\r\n\r\n(sorry if I missed previous discussion on this)",
      "created_at": "2023-08-10T14:30:00Z",
      "updated_at": "2023-08-10T14:54:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1290225497",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290225497"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1387,
      "original_line": 1387,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290237668",
      "pull_request_review_id": 1572046251,
      "id": 1290237668,
      "node_id": "PRRC_kwDOABII585M53bk",
      "diff_hunk": "@@ -1901,7 +1970,10 @@ void PeerManagerImpl::BlockDisconnected(const std::shared_ptr<const CBlock> &blo\n  * Maintain state about the best-seen block and fast-announce a compact block\n  * to compatible peers.\n  */\n-void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock)\n+void PeerManagerImpl::NewPoWValidBlock(",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 136,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`NewPoWValidBlock` is already gated with `m_highest_fast_announce` but I think it would make sense to also ignore bg chainstate events explicitly.",
      "created_at": "2023-08-10T14:38:37Z",
      "updated_at": "2023-08-10T14:54:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1290237668",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290237668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1974,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290241176",
      "pull_request_review_id": 1572046251,
      "id": 1290241176,
      "node_id": "PRRC_kwDOABII585M54SY",
      "diff_hunk": "@@ -87,13 +88,13 @@ class CValidationInterface {\n      * but may not be called on every intermediate tip. If the latter behavior is desired,\n      * subscribe to BlockConnected() instead.\n      *\n-     * Called on a background thread.\n+     * Called on a background thread. Only called for the active chainstate.",
      "path": "src/validationinterface.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "propbably not worth it to pass the chainstate role then?",
      "created_at": "2023-08-10T14:41:03Z",
      "updated_at": "2023-08-10T14:54:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1290241176",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1290241176"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291426426",
      "pull_request_review_id": 1477561344,
      "id": 1291426426,
      "node_id": "PRRC_kwDOABII585M-Zp6",
      "diff_hunk": "@@ -185,7 +185,14 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     chainman.InitializeChainstate(options.mempool);\n \n     // Load a chain created from a UTXO snapshot, if any exist.\n-    chainman.DetectSnapshotChainstate(options.mempool);\n+    bool has_snapshot = chainman.DetectSnapshotChainstate(options.mempool);\n+\n+    if (has_snapshot && (options.reindex || options.reindex_chainstate)) {\n+        return {ChainstateLoadStatus::FAILURE_NO_REINDEX, _(\n+            \"Reindex cannot be performed while background validation is in progress. \"\n+            \"Please wait for background sync to complete, or delete data directory \"",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3b9d3d63d9ccb609ec08da34776f7c5f29d21a20",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Better to be precise and ask them to only recommend deleting `blocks`, `chainstate` and `indexes`. Or alternatively add a reminder that they should backup their wallet before deleting the whole datadir.",
      "created_at": "2023-08-11T14:42:31Z",
      "updated_at": "2023-08-11T22:00:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1291426426",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291426426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291431562",
      "pull_request_review_id": 1477561344,
      "id": 1291431562,
      "node_id": "PRRC_kwDOABII585M-a6K",
      "diff_hunk": "@@ -49,4 +51,15 @@ inline V Cat(V v1, const V& v2)\n     return v1;\n }\n \n+template<typename V, typename L>\n+inline std::optional<V> FindFirst(const std::vector<V>& vec, const L fnc)",
      "path": "src/util/vector.h",
      "position": 15,
      "original_position": 15,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "cdb73e44b7f0d4ea186ba657ddf7809434f0a12a",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Doesn't `std::find_if` work for this?",
      "created_at": "2023-08-11T14:46:56Z",
      "updated_at": "2023-08-11T22:00:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1291431562",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291431562"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291620032",
      "pull_request_review_id": 1477561344,
      "id": 1291620032,
      "node_id": "PRRC_kwDOABII585M_I7A",
      "diff_hunk": "@@ -173,6 +174,9 @@ void CZMQNotificationInterface::TransactionRemovedFromMempool(const CTransaction\n \n void CZMQNotificationInterface::BlockConnected(const ChainstateRole role, const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected)\n {\n+    if (role == ChainstateRole::BACKGROUND) {",
      "path": "src/zmq/zmqnotificationinterface.cpp",
      "position": 15,
      "original_position": 14,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "f2a15428277090d6ad387de6d517303b9bc4e2af",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm, might be good to update ZMQ and wallet docs as a follow-up that blocks that are connected to the background chain will not be notified...",
      "created_at": "2023-08-11T17:31:20Z",
      "updated_at": "2023-08-11T22:00:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1291620032",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291620032"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 176,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291649621",
      "pull_request_review_id": 1477561344,
      "id": 1291649621,
      "node_id": "PRRC_kwDOABII585M_QJV",
      "diff_hunk": "@@ -153,31 +158,54 @@ void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nM\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    unsigned int min_block_to_prune;\n+    unsigned int nLastBlockWeCanPrune;\n+\n+    std::tie(min_block_to_prune, nLastBlockWeCanPrune) = chainman.GetPruneRange(\n+        chain, chain_tip_height);\n+\n+    nLastBlockWeCanPrune = std::min(nLastBlockWeCanPrune, (unsigned)nManualPruneHeight);\n+\n     int count = 0;\n     for (int fileNumber = 0; fileNumber < m_last_blockfile; fileNumber++) {\n-        if (m_blockfile_info[fileNumber].nSize == 0 || m_blockfile_info[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n+        const auto& fileinfo = m_blockfile_info[fileNumber];\n+        if (fileinfo.nSize == 0 || fileinfo.nHeightLast > nLastBlockWeCanPrune || fileinfo.nHeightFirst < min_block_to_prune) {\n             continue;\n         }\n+\n         PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n-    LogPrintf(\"Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\", nLastBlockWeCanPrune, count);\n+    LogPrintf(\"[%s] Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\",\n+        chain.GetRole(), nLastBlockWeCanPrune, count);\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(\n+    std::set<int>& setFilesToPrune,\n+    uint64_t nPruneAfterHeight,\n+    int chain_tip_height,\n+    int prune_height,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0 || GetPruneTarget() == 0) {\n+    // Distribute our -prune budget over all chainstates.\n+    const auto target = GetPruneTarget() / chainman.GetAll().size();",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9e2b8ef836aeb1dc2e4b57449fc56badebea6772",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I am not sure it makes sense to distribute the prune budget between all chainstates equally. Ideally we would sync the background chainstate block by block and throw them away instantly because if we are pruning the likelihood that we keep the bg blocks at the end of IBD is much lower. I'm not sure what the perfect distribution would be but I would shift it more towards the assumed chainstate.",
      "created_at": "2023-08-11T18:09:07Z",
      "updated_at": "2023-08-11T22:00:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1291649621",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291649621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291670706",
      "pull_request_review_id": 1477561344,
      "id": 1291670706,
      "node_id": "PRRC_kwDOABII585M_VSy",
      "diff_hunk": "@@ -2699,6 +2699,86 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    fs::path path = fs::PathFromString(request.params[0].get_str());\n+    if (path.is_relative()) {\n+        path = gArgs.GetDataDirNet() / path;\n+    }\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    while (max_secs_to_wait_for_headers > 0) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 73,
      "original_position": 42,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "8ac7427b41fdec1dbc7e06d0aa2c0e469b879ba2",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "A bit simpler approach for this RPC would be to return to the user that the headers are not synced yet immediately and tell them they should try again when the headers are fully synced. I would be interested if others favor this approach as well.",
      "created_at": "2023-08-11T18:37:08Z",
      "updated_at": "2023-08-11T22:00:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1291670706",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1291670706"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2764,
      "original_line": 2764,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1294582794",
      "pull_request_review_id": 1578539655,
      "id": 1294582794,
      "node_id": "PRRC_kwDOABII585NKcQK",
      "diff_hunk": "@@ -1406,6 +1410,62 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     }\n }\n \n+void PeerManagerImpl::TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex *from_tip, const CBlockIndex* target_block)",
      "path": "src/net_processing.cpp",
      "position": 78,
      "original_position": 49,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "in_reply_to_id": 1290225497,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"First draft of background sync logic\" (6be9fd22ee2b9759cdd30a7bca4d07a9346eb57b)\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1290225497\r\n\r\n> This look suspiciously similar to `FindNextBlocksToDownload`, is there no way to unify the two?\r\n\r\nThis seems pretty bad. The most complicated part of the function is copied and pasted basically verbatim, and to make things worse, the comments which explain how it works are removed in the duplicated code.\r\n\r\nWould suggest 43b322188de227c1161fe3ee2dfd7b3a019cfc6a ([branch](https://github.com/ryanofsky/bitcoin/commits/pr/assumedl)) as a simpler alternative. It also add a commit description and a doxygen comment to explain all the variables which I found confusing. Feel free to add it to this PR or adopt anything there.\r\n\r\n\r\n",
      "created_at": "2023-08-15T13:14:53Z",
      "updated_at": "2023-08-15T16:49:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1294582794",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1294582794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1387,
      "original_line": 1387,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1294850766",
      "pull_request_review_id": 1578539655,
      "id": 1294850766,
      "node_id": "PRRC_kwDOABII585NLdrO",
      "diff_hunk": "@@ -1406,6 +1409,62 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     }\n }\n \n+void PeerManagerImpl::TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex *from_tip, const CBlockIndex* target_block)\n+{\n+    if (vBlocks.size() >= count) {\n+        return;\n+    }\n+\n+    vBlocks.reserve(count);\n+    CNodeState *state = State(peer.m_id);\n+    assert(state != nullptr);\n+\n+    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->GetAncestor(target_block->nHeight) != target_block) {\n+        // This peer is useless to us -- it has a chain that doesn't contain\n+        // our assumeutxo target.\n+        // Presumably this peer's chain has less work than our ActiveChain()'s tip, or else we\n+        // will eventually crash when we try to reorg to it. Let other logic\n+        // deal with whether we disconnect this peer.\n+        return;\n+    }\n+\n+    const CBlockIndex *pindexWalk = from_tip;\n+\n+    int nWindowEnd = pindexWalk->nHeight + BLOCK_DOWNLOAD_WINDOW;\n+    int nMaxHeight = std::min<int>(target_block->nHeight, nWindowEnd + 1);\n+\n+    std::vector<const CBlockIndex*> vToFetch;\n+\n+    while (pindexWalk->nHeight < nMaxHeight) {\n+        int nToFetch = std::min(nMaxHeight-pindexWalk->nHeight, std::max<int>(count-vBlocks.size(), 128));",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "6be9fd22ee2b9759cdd30a7bca4d07a9346eb57b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"First draft of background sync logic\" (6be9fd22ee2b9759cdd30a7bca4d07a9346eb57b)\r\n\r\nThis code is just copied and pasted from previous code which was added back in #4468, but `std::max` seems like a bug here, and I would expect it to be `std::min` if the point is to read up to 128 successors of pIndexWalk at a time.",
      "created_at": "2023-08-15T16:30:39Z",
      "updated_at": "2023-08-15T16:49:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1294850766",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1294850766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1439,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1294879351",
      "pull_request_review_id": 1579020103,
      "id": 1294879351,
      "node_id": "PRRC_kwDOABII585NLkp3",
      "diff_hunk": "@@ -1406,6 +1409,62 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     }\n }\n \n+void PeerManagerImpl::TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex *from_tip, const CBlockIndex* target_block)\n+{\n+    if (vBlocks.size() >= count) {\n+        return;\n+    }\n+\n+    vBlocks.reserve(count);\n+    CNodeState *state = State(peer.m_id);\n+    assert(state != nullptr);\n+\n+    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->GetAncestor(target_block->nHeight) != target_block) {\n+        // This peer is useless to us -- it has a chain that doesn't contain",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "6be9fd22ee2b9759cdd30a7bca4d07a9346eb57b",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"First draft of background sync logic\" (6be9fd22ee2b9759cdd30a7bca4d07a9346eb57b)\r\n\r\nThis is an exaggeration, right? Peer doesn't seem completely useless if it doesn't contain the snapshot block because it could contain blocks leading up the snapshot block. It this is right it would be good to clarify, or maybe change to allow requesting blocks from the peer.",
      "created_at": "2023-08-15T16:58:54Z",
      "updated_at": "2023-08-15T16:58:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1294879351",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1294879351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296088099",
      "pull_request_review_id": 1580896920,
      "id": 1296088099,
      "node_id": "PRRC_kwDOABII585NQLwj",
      "diff_hunk": "@@ -185,7 +185,14 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     chainman.InitializeChainstate(options.mempool);\n \n     // Load a chain created from a UTXO snapshot, if any exist.\n-    chainman.DetectSnapshotChainstate(options.mempool);\n+    bool has_snapshot = chainman.DetectSnapshotChainstate(options.mempool);\n+\n+    if (has_snapshot && (options.reindex || options.reindex_chainstate)) {\n+        return {ChainstateLoadStatus::FAILURE_NO_REINDEX, _(\n+            \"Reindex cannot be performed while background validation is in progress. \"\n+            \"Please wait for background sync to complete, or delete data directory \"",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3b9d3d63d9ccb609ec08da34776f7c5f29d21a20",
      "in_reply_to_id": 1291426426,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"assumeutxo: disallow -reindex when background syncing\" (3b9d3d63d9ccb609ec08da34776f7c5f29d21a20)\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1291426426\r\n\r\nI don't understand the advice to \"wait for background sync to complete\" in this error message. I thought use-cases for reindex were mostly things like recovering from data corruption or restoring from backup. Is there a case where you would ever want to wait for a sync to complete and then reindex after that?\r\n\r\nAlso, I'm not sure why it needs be an error to reindex when a snapshot is loaded. The reindex options are supposed delete the UTXO database (and optionally other databases) without deleting block data, and rebuild using whatever data is left over. So if a snapshot is loaded it seems like the -reindex implementation could just delete both UTXO databases and then continue as normal without the snapshot. If the user still had a copy of the snapshot, they could reload it with the `loadtxoutset` RPC later and reuse the blocks that were already downloaded.\r\n\r\nIt seems like implementing this making making reindex work cleanly with assumeutxo would not be much harder than adding this error message.",
      "created_at": "2023-08-16T15:29:08Z",
      "updated_at": "2023-08-16T18:01:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1296088099",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296088099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296254459",
      "pull_request_review_id": 1580896920,
      "id": 1296254459,
      "node_id": "PRRC_kwDOABII585NQ0X7",
      "diff_hunk": "@@ -1642,6 +1642,9 @@ bool Chainstate::IsInitialBlockDownload() const\n     }\n     LogPrintf(\"Leaving InitialBlockDownload (latching to false)\\n\");\n     m_cached_finished_ibd.store(true, std::memory_order_relaxed);\n+    // Important that this comes *after* the previous line, else we'll wind up in an\n+    // infinite recursion.\n+    m_chainman.MaybeRebalanceCaches();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5ea9abfbac3543f2d2cef90a1528abed35623822",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: MaybeRebalanceCaches when chain leaves IBD\" (5ea9abfbac3543f2d2cef90a1528abed35623822)\r\n\r\nIt seems dangerous if just calling IsInitialBlockDownload to find out IBD state could now block and resize caches and flush state to disk. It also makes the codebase hard to understand if you can't answer a basic question like \"when do caches get resized\" without having to look up IsInitialBlockDownload() calls all over the codebase.\r\n\r\nI think it would be better to choose one place where it would be logical to check for the end of IBD and rebalance caches, like after a block is connected or after a header is received, and put the MaybeRebalanceCaches in a specific place instead of letting it happen anywhere.",
      "created_at": "2023-08-16T17:56:03Z",
      "updated_at": "2023-08-16T18:01:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1296254459",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296254459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303334266",
      "pull_request_review_id": 1592088142,
      "id": 1303334266,
      "node_id": "PRRC_kwDOABII585Nr016",
      "diff_hunk": "@@ -3178,15 +3179,16 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\n             // Enqueue while holding cs_main to ensure that UpdatedBlockTip is called in the order in which blocks are connected\n             if (pindexFork != pindexNewTip) {\n                 // Notify ValidationInterface subscribers\n-                GetMainSignals().UpdatedBlockTip(pindexNewTip, pindexFork, fInitialDownload);\n-\n-                // Always notify the UI if a new block tip was connected\n-                if (kernel::IsInterrupted(m_chainman.GetNotifications().blockTip(GetSynchronizationState(fInitialDownload), *pindexNewTip))) {\n-                    // Just breaking and returning success for now. This could\n-                    // be changed to bubble up the kernel::Interrupted value to\n-                    // the caller so the caller could distinguish between\n-                    // completed and interrupted operations.\n-                    break;\n+                GetMainSignals().UpdatedBlockTip(this->GetRole(), pindexNewTip, pindexFork, fInitialDownload);\n+\n+                if (this == &m_chainman.ActiveChainstate() &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "2856710077abbc8f07a97adfff5f6829358155be",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pass ChainstateRole for validationinterface calls\" (2856710077abbc8f07a97adfff5f6829358155be)\r\n\r\nWould suggest moving this change to a separate commit. Otherwise adding the chainstate check here is a behavior change in a refactoring commit. Also it doesn't seem directly related to the other changes here ",
      "created_at": "2023-08-23T17:28:41Z",
      "updated_at": "2023-08-23T21:25:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1303334266",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303334266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303337523",
      "pull_request_review_id": 1592088142,
      "id": 1303337523,
      "node_id": "PRRC_kwDOABII585Nr1oz",
      "diff_hunk": "@@ -4057,7 +4060,18 @@ bool ChainstateManager::ProcessNewBlock(const std::shared_ptr<const CBlock>& blo\n             ret = AcceptBlock(block, state, &pindex, force_processing, nullptr, new_block, min_pow_checked);\n         }\n         if (!ret) {\n-            GetMainSignals().BlockChecked(*block, state);\n+            const auto& snapshot = this->SnapshotBlockhash();\n+            ChainstateRole role{ChainstateRole::NORMAL};\n+\n+            // Determine whether or not this block belongs to an assumedvalid chainstate, which\n+            // will affect block storage.\n+            if (snapshot) {\n+                const auto au_data = Assert(GetParams().AssumeutxoForBlockhash(*snapshot));\n+                role = (pindex->nHeight >= au_data->height) ?\n+                    ChainstateRole::ASSUMEDVALID : ChainstateRole::BACKGROUND;\n+            }\n+\n+            GetMainSignals().BlockChecked(role, *block, state);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 90,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "2856710077abbc8f07a97adfff5f6829358155be",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pass ChainstateRole for validationinterface calls\" (2856710077abbc8f07a97adfff5f6829358155be)\r\n\r\nI don't see the BlockChecked `role` parameter being used later in the PR, and I don't know another reason why it should be added. It seems like it would be simpler to not add the parameter and get rid of the code above, which is not very straightforward and seems to basically be making up the `role` value.",
      "created_at": "2023-08-23T17:31:56Z",
      "updated_at": "2023-08-23T21:25:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1303337523",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303337523"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4074,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303342871",
      "pull_request_review_id": 1592088142,
      "id": 1303342871,
      "node_id": "PRRC_kwDOABII585Nr28X",
      "diff_hunk": "@@ -87,13 +88,13 @@ class CValidationInterface {\n      * but may not be called on every intermediate tip. If the latter behavior is desired,\n      * subscribe to BlockConnected() instead.\n      *\n-     * Called on a background thread.\n+     * Called on a background thread. Only called for the active chainstate.\n      */\n-    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {}\n+    virtual void UpdatedBlockTip(const ChainstateRole, const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {}\n     /**\n      * Notifies listeners of a transaction having been added to mempool.\n      *\n-     * Called on a background thread.\n+     * Called on a background thread. Only called for the active chainstate.",
      "path": "src/validationinterface.h",
      "position": null,
      "original_position": 21,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "2856710077abbc8f07a97adfff5f6829358155be",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pass ChainstateRole for validationinterface calls\" (2856710077abbc8f07a97adfff5f6829358155be)\r\n\r\nThese TransactionAddedToMempool and TransactionRemovedFromMempool comments are a little confusing because I wouldn't expect the background chainstate to have a mempool, and even if there were multiple mempools, I wouldn't think knowing what chainstate they build on to be enough to identify them. I think it would be better to drop this new comment and avoid mixing up chainstate/mempool concepts.",
      "created_at": "2023-08-23T17:37:17Z",
      "updated_at": "2023-08-23T21:26:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1303342871",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1303342871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304837385",
      "pull_request_review_id": 1594414348,
      "id": 1304837385,
      "node_id": "PRRC_kwDOABII585Nxj0J",
      "diff_hunk": "@@ -2700,6 +2700,86 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    fs::path path = fs::PathFromString(request.params[0].get_str());\n+    if (path.is_relative()) {\n+        path = gArgs.GetDataDirNet() / path;\n+    }\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "bbaa5812258e33ca8a5a63f28c7da6b1d78433a1",
      "in_reply_to_id": 1197159021,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks - fixed and added you as a coauther.",
      "created_at": "2023-08-24T20:34:19Z",
      "updated_at": "2023-08-24T20:34:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1304837385",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304837385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2732,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304838783",
      "pull_request_review_id": 1594416523,
      "id": 1304838783,
      "node_id": "PRRC_kwDOABII585NxkJ_",
      "diff_hunk": "@@ -1406,6 +1410,62 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     }\n }\n \n+void PeerManagerImpl::TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex *from_tip, const CBlockIndex* target_block)",
      "path": "src/net_processing.cpp",
      "position": 78,
      "original_position": 49,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "in_reply_to_id": 1290225497,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks guys - I've taken https://github.com/bitcoin/bitcoin/commit/43b322188de227c1161fe3ee2dfd7b3a019cfc6a and made a cosmetic refactoring change.",
      "created_at": "2023-08-24T20:36:01Z",
      "updated_at": "2023-08-24T20:36:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1304838783",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304838783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1387,
      "original_line": 1387,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304845272",
      "pull_request_review_id": 1594426081,
      "id": 1304845272,
      "node_id": "PRRC_kwDOABII585NxlvY",
      "diff_hunk": "@@ -87,13 +88,13 @@ class CValidationInterface {\n      * but may not be called on every intermediate tip. If the latter behavior is desired,\n      * subscribe to BlockConnected() instead.\n      *\n-     * Called on a background thread.\n+     * Called on a background thread. Only called for the active chainstate.",
      "path": "src/validationinterface.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "in_reply_to_id": 1290241176,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good idea; done.",
      "created_at": "2023-08-24T20:42:27Z",
      "updated_at": "2023-08-24T20:42:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1304845272",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304845272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304849279",
      "pull_request_review_id": 1594432267,
      "id": 1304849279,
      "node_id": "PRRC_kwDOABII585Nxmt_",
      "diff_hunk": "@@ -4057,7 +4060,18 @@ bool ChainstateManager::ProcessNewBlock(const std::shared_ptr<const CBlock>& blo\n             ret = AcceptBlock(block, state, &pindex, force_processing, nullptr, new_block, min_pow_checked);\n         }\n         if (!ret) {\n-            GetMainSignals().BlockChecked(*block, state);\n+            const auto& snapshot = this->SnapshotBlockhash();\n+            ChainstateRole role{ChainstateRole::NORMAL};\n+\n+            // Determine whether or not this block belongs to an assumedvalid chainstate, which\n+            // will affect block storage.\n+            if (snapshot) {\n+                const auto au_data = Assert(GetParams().AssumeutxoForBlockhash(*snapshot));\n+                role = (pindex->nHeight >= au_data->height) ?\n+                    ChainstateRole::ASSUMEDVALID : ChainstateRole::BACKGROUND;\n+            }\n+\n+            GetMainSignals().BlockChecked(role, *block, state);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 90,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "2856710077abbc8f07a97adfff5f6829358155be",
      "in_reply_to_id": 1303337523,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good find! I'll remove this unused parameter.",
      "created_at": "2023-08-24T20:47:00Z",
      "updated_at": "2023-08-24T20:47:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1304849279",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304849279"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4074,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304849858",
      "pull_request_review_id": 1594433276,
      "id": 1304849858,
      "node_id": "PRRC_kwDOABII585Nxm3C",
      "diff_hunk": "@@ -1642,6 +1642,9 @@ bool Chainstate::IsInitialBlockDownload() const\n     }\n     LogPrintf(\"Leaving InitialBlockDownload (latching to false)\\n\");\n     m_cached_finished_ibd.store(true, std::memory_order_relaxed);\n+    // Important that this comes *after* the previous line, else we'll wind up in an\n+    // infinite recursion.\n+    m_chainman.MaybeRebalanceCaches();",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5ea9abfbac3543f2d2cef90a1528abed35623822",
      "in_reply_to_id": 1296254459,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, that's fair criticism. I've moved this potential rebalance to within `ActivateBestChain()`, which requires a little bit of extra code but is as you say much more explicit.",
      "created_at": "2023-08-24T20:47:45Z",
      "updated_at": "2023-08-24T20:47:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1304849858",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1304849858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1647,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305702150",
      "pull_request_review_id": 1595799643,
      "id": 1305702150,
      "node_id": "PRRC_kwDOABII585N028G",
      "diff_hunk": "@@ -1901,7 +1970,10 @@ void PeerManagerImpl::BlockDisconnected(const std::shared_ptr<const CBlock> &blo\n  * Maintain state about the best-seen block and fast-announce a compact block\n  * to compatible peers.\n  */\n-void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock)\n+void PeerManagerImpl::NewPoWValidBlock(",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 136,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "253bcd5fd392f70de82ec7c675f9777d1e098d50",
      "in_reply_to_id": 1290237668,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yep, makes sense. Done!",
      "created_at": "2023-08-25T14:01:32Z",
      "updated_at": "2023-08-25T14:01:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1305702150",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305702150"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1974,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305760028",
      "pull_request_review_id": 1595889617,
      "id": 1305760028,
      "node_id": "PRRC_kwDOABII585N1FEc",
      "diff_hunk": "@@ -185,7 +185,14 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     chainman.InitializeChainstate(options.mempool);\n \n     // Load a chain created from a UTXO snapshot, if any exist.\n-    chainman.DetectSnapshotChainstate(options.mempool);\n+    bool has_snapshot = chainman.DetectSnapshotChainstate(options.mempool);\n+\n+    if (has_snapshot && (options.reindex || options.reindex_chainstate)) {\n+        return {ChainstateLoadStatus::FAILURE_NO_REINDEX, _(\n+            \"Reindex cannot be performed while background validation is in progress. \"\n+            \"Please wait for background sync to complete, or delete data directory \"",
      "path": "src/node/chainstate.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3b9d3d63d9ccb609ec08da34776f7c5f29d21a20",
      "in_reply_to_id": 1291426426,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Okay, good points. I've removed this error message completely and instead have implemented the behavior that the snapshot chainstate is completely removed during `-reindex{-chainstate}`. This is consistent with the spirit of the existing reindex operation, I think. The change is also about as simple as this one.",
      "created_at": "2023-08-25T14:45:34Z",
      "updated_at": "2023-08-25T18:21:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1305760028",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305760028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305781595",
      "pull_request_review_id": 1595889617,
      "id": 1305781595,
      "node_id": "PRRC_kwDOABII585N1KVb",
      "diff_hunk": "@@ -49,4 +51,15 @@ inline V Cat(V v1, const V& v2)\n     return v1;\n }\n \n+template<typename V, typename L>\n+inline std::optional<V> FindFirst(const std::vector<V>& vec, const L fnc)",
      "path": "src/util/vector.h",
      "position": 15,
      "original_position": 15,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "cdb73e44b7f0d4ea186ba657ddf7809434f0a12a",
      "in_reply_to_id": 1291431562,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I went to change this and found that, surprisingly, massaging `find_if` into a `std::optional` output was actually wordier than the current approach:\r\n```diff\r\ndiff --git a/src/util/vector.h b/src/util/vector.h\r\nindex 9cd5e118a6..32d1e7f933 100644\r\n--- a/src/util/vector.h\r\n+++ b/src/util/vector.h\r\n@@ -54,12 +54,12 @@ inline V Cat(V v1, const V& v2)\r\n template<typename V, typename L>\r\n inline std::optional<V> FindFirst(const std::vector<V>& vec, const L fnc)\r\n {\r\n-    for (const auto& el : vec) {\r\n-        if (fnc(el)) {\r\n-            return el;\r\n-        }\r\n+    auto got = std::find_if(vec.begin(), vec.end(), fnc);\r\n+    if (got != vec.end()) {\r\n+        return *got;\r\n+    } else {\r\n+        return std::nullopt;\r\n     }\r\n-    return std::nullopt;\r\n }\r\n \r\n #endif // BITCOIN_UTIL_VECTOR_H\r\n```",
      "created_at": "2023-08-25T15:03:12Z",
      "updated_at": "2023-08-25T18:21:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1305781595",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305781595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305885944",
      "pull_request_review_id": 1595889617,
      "id": 1305885944,
      "node_id": "PRRC_kwDOABII585N1jz4",
      "diff_hunk": "@@ -173,6 +174,9 @@ void CZMQNotificationInterface::TransactionRemovedFromMempool(const CTransaction\n \n void CZMQNotificationInterface::BlockConnected(const ChainstateRole role, const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected)\n {\n+    if (role == ChainstateRole::BACKGROUND) {",
      "path": "src/zmq/zmqnotificationinterface.cpp",
      "position": 15,
      "original_position": 14,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "f2a15428277090d6ad387de6d517303b9bc4e2af",
      "in_reply_to_id": 1291620032,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, added release notes for ZMQ.",
      "created_at": "2023-08-25T16:28:30Z",
      "updated_at": "2023-08-25T18:21:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1305885944",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305885944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 176,
      "original_line": 176,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305946231",
      "pull_request_review_id": 1595889617,
      "id": 1305946231,
      "node_id": "PRRC_kwDOABII585N1yh3",
      "diff_hunk": "@@ -2699,6 +2699,86 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    fs::path path = fs::PathFromString(request.params[0].get_str());\n+    if (path.is_relative()) {\n+        path = gArgs.GetDataDirNet() / path;\n+    }\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    while (max_secs_to_wait_for_headers > 0) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 73,
      "original_position": 42,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "8ac7427b41fdec1dbc7e06d0aa2c0e469b879ba2",
      "in_reply_to_id": 1291670706,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, agree this is weirdly implicit and am open to alternative approaches here. Since we expect headers to sync within a relatively short amount of time, I can see the utility of waiting. If anyone has strong feelings here please chime in.",
      "created_at": "2023-08-25T17:27:01Z",
      "updated_at": "2023-08-25T18:21:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1305946231",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305946231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2764,
      "original_line": 2764,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305947674",
      "pull_request_review_id": 1595889617,
      "id": 1305947674,
      "node_id": "PRRC_kwDOABII585N1y4a",
      "diff_hunk": "@@ -153,31 +158,54 @@ void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nM\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    unsigned int min_block_to_prune;\n+    unsigned int nLastBlockWeCanPrune;\n+\n+    std::tie(min_block_to_prune, nLastBlockWeCanPrune) = chainman.GetPruneRange(\n+        chain, chain_tip_height);\n+\n+    nLastBlockWeCanPrune = std::min(nLastBlockWeCanPrune, (unsigned)nManualPruneHeight);\n+\n     int count = 0;\n     for (int fileNumber = 0; fileNumber < m_last_blockfile; fileNumber++) {\n-        if (m_blockfile_info[fileNumber].nSize == 0 || m_blockfile_info[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n+        const auto& fileinfo = m_blockfile_info[fileNumber];\n+        if (fileinfo.nSize == 0 || fileinfo.nHeightLast > nLastBlockWeCanPrune || fileinfo.nHeightFirst < min_block_to_prune) {\n             continue;\n         }\n+\n         PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n-    LogPrintf(\"Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\", nLastBlockWeCanPrune, count);\n+    LogPrintf(\"[%s] Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\",\n+        chain.GetRole(), nLastBlockWeCanPrune, count);\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(\n+    std::set<int>& setFilesToPrune,\n+    uint64_t nPruneAfterHeight,\n+    int chain_tip_height,\n+    int prune_height,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0 || GetPruneTarget() == 0) {\n+    // Distribute our -prune budget over all chainstates.\n+    const auto target = GetPruneTarget() / chainman.GetAll().size();",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9e2b8ef836aeb1dc2e4b57449fc56badebea6772",
      "in_reply_to_id": 1291649621,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah I definitely think we can be smarter about pruning, but because we do it chainstate-by-chainstate I think that better management of the prune budget between chainstates might take a little more rework. Maybe something for a follow-up?",
      "created_at": "2023-08-25T17:28:38Z",
      "updated_at": "2023-08-25T18:21:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1305947674",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305947674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305951844",
      "pull_request_review_id": 1595889617,
      "id": 1305951844,
      "node_id": "PRRC_kwDOABII585N1z5k",
      "diff_hunk": "@@ -3178,15 +3179,16 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\n             // Enqueue while holding cs_main to ensure that UpdatedBlockTip is called in the order in which blocks are connected\n             if (pindexFork != pindexNewTip) {\n                 // Notify ValidationInterface subscribers\n-                GetMainSignals().UpdatedBlockTip(pindexNewTip, pindexFork, fInitialDownload);\n-\n-                // Always notify the UI if a new block tip was connected\n-                if (kernel::IsInterrupted(m_chainman.GetNotifications().blockTip(GetSynchronizationState(fInitialDownload), *pindexNewTip))) {\n-                    // Just breaking and returning success for now. This could\n-                    // be changed to bubble up the kernel::Interrupted value to\n-                    // the caller so the caller could distinguish between\n-                    // completed and interrupted operations.\n-                    break;\n+                GetMainSignals().UpdatedBlockTip(this->GetRole(), pindexNewTip, pindexFork, fInitialDownload);\n+\n+                if (this == &m_chainman.ActiveChainstate() &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "2856710077abbc8f07a97adfff5f6829358155be",
      "in_reply_to_id": 1303334266,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, thanks.",
      "created_at": "2023-08-25T17:32:42Z",
      "updated_at": "2023-08-25T18:21:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1305951844",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305951844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305965612",
      "pull_request_review_id": 1595889617,
      "id": 1305965612,
      "node_id": "PRRC_kwDOABII585N13Qs",
      "diff_hunk": "@@ -87,13 +88,13 @@ class CValidationInterface {\n      * but may not be called on every intermediate tip. If the latter behavior is desired,\n      * subscribe to BlockConnected() instead.\n      *\n-     * Called on a background thread.\n+     * Called on a background thread. Only called for the active chainstate.\n      */\n-    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {}\n+    virtual void UpdatedBlockTip(const ChainstateRole, const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {}\n     /**\n      * Notifies listeners of a transaction having been added to mempool.\n      *\n-     * Called on a background thread.\n+     * Called on a background thread. Only called for the active chainstate.",
      "path": "src/validationinterface.h",
      "position": null,
      "original_position": 21,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "2856710077abbc8f07a97adfff5f6829358155be",
      "in_reply_to_id": 1303342871,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, I think these are a vestige when mempool ownership wasn't so clear. I've removed them.",
      "created_at": "2023-08-25T17:45:09Z",
      "updated_at": "2023-08-25T18:21:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1305965612",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1305965612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307949616",
      "pull_request_review_id": 1599109755,
      "id": 1307949616,
      "node_id": "PRRC_kwDOABII585N9bow",
      "diff_hunk": "@@ -892,6 +892,35 @@ class PeerManagerImpl final : public PeerManager\n      */\n     void FindNextBlocksToDownload(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, NodeId& nodeStaller) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    void TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex* from_tip, const CBlockIndex* target_block) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /**\n+    * \\brief Find next blocks to download from a peer after a starting block.\n+    *\n+    * \\param vBlocks      Vector of blocks to download which will be appended to.\n+    * \\param peer         ID of peer which blocks will be downloaded from.\n+    * \\param state        Pointer to the state of the peer.\n+    * \\param pindexWalk   Pointer to the starting block to add to vBlocks.\n+    * \\param count        Maximum number of blocks to allow in vBlocks. No more\n+    *                     blocks will be added if it reaches this size.\n+    * \\param nWindowEnd   Maximum height of blocks to allow in vBlocks. No\n+    *                     blocks will be added above this height.\n+    * \\param activeChain  Optional pointer to a chain to compare against. If\n+    *                     provided, any blocks contained by this chain will only\n+    *                     be used to update state->pindexLastCommonBlock, and\n+    *                     will not be appended to vBlocks.\n+    * \\param nodeStaller  Optional pointer to a NodeId variable that will receive\n+    *                     the ID of another peer that might be causing this peer\n+    *                     to stall. This is set to the ID of the peer which\n+    *                     first requested the first in-flight block in the\n+    *                     download window. It is only set if vBlocks is empty at\n+    *                     the end of this function call and if increasing\n+    *                     nWindowEnd by 1 would have caused it to be non-empty\n+    *                     (which indicates the download might be stalled since\n+    *                     every block in the window is in flight.)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "08a34e56ba7aa8714982d352238f1cb6eba43e29",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"net_processing: Request assumeutxo background chain blocks\" (08a34e56ba7aa8714982d352238f1cb6eba43e29)\r\n\r\nSuggested comment updates to clarify effect of passing `activeChain` and better describe what it means for a `nodeStaller` value to be returned:\r\n\r\n```diff\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -906,18 +906,20 @@ private:\r\n     * \\param nWindowEnd   Maximum height of blocks to allow in vBlocks. No\r\n     *                     blocks will be added above this height.\r\n     * \\param activeChain  Optional pointer to a chain to compare against. If\r\n-    *                     provided, any blocks contained by this chain will only\r\n-    *                     be used to update state->pindexLastCommonBlock, and\r\n-    *                     will not be appended to vBlocks.\r\n+    *                     provided, any next blocks which are already contained\r\n+    *                     in this chain will not be appended to vBlocks, but\r\n+    *                     instead will be used to update the\r\n+    *                     state->pindexLastCommonBlock pointer.\r\n     * \\param nodeStaller  Optional pointer to a NodeId variable that will receive\r\n     *                     the ID of another peer that might be causing this peer\r\n     *                     to stall. This is set to the ID of the peer which\r\n     *                     first requested the first in-flight block in the\r\n     *                     download window. It is only set if vBlocks is empty at\r\n     *                     the end of this function call and if increasing\r\n-    *                     nWindowEnd by 1 would have caused it to be non-empty\r\n-    *                     (which indicates the download might be stalled since\r\n-    *                     every block in the window is in flight.)\r\n+    *                     nWindowEnd by 1 would cause it to be non-empty (which\r\n+    *                     indicates the download might be stalled because every\r\n+    *                     block in the window is in flight and no other peer is\r\n+    *                     trying to download the next block).\r\n     */\r\n     void FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, const Peer& peer, CNodeState *state, const CBlockIndex *pindexWalk, unsigned int count, int nWindowEnd, const CChain* activeChain=nullptr, NodeId* nodeStaller=nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n \r\n```",
      "created_at": "2023-08-28T21:04:29Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1307949616",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307949616"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 920,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307955088",
      "pull_request_review_id": 1599109755,
      "id": 1307955088,
      "node_id": "PRRC_kwDOABII585N9c-Q",
      "diff_hunk": "@@ -1406,6 +1409,62 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     }\n }\n \n+void PeerManagerImpl::TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex *from_tip, const CBlockIndex* target_block)\n+{\n+    if (vBlocks.size() >= count) {\n+        return;\n+    }\n+\n+    vBlocks.reserve(count);\n+    CNodeState *state = State(peer.m_id);\n+    assert(state != nullptr);\n+\n+    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->GetAncestor(target_block->nHeight) != target_block) {\n+        // This peer is useless to us -- it has a chain that doesn't contain",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "6be9fd22ee2b9759cdd30a7bca4d07a9346eb57b",
      "in_reply_to_id": 1294879351,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1294879351\r\n\r\n> This is an exaggeration, right?\r\n\r\nIn commit \"net_processing: Request assumeutxo background chain blocks\" (08a34e56ba7aa8714982d352238f1cb6eba43e29)\r\n\r\nStill curious about this and think it would be good to either explain it more, or change the behavior, or just s/useless/less useful/ if that would be more accurate to avoid confusion.",
      "created_at": "2023-08-28T21:11:24Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1307955088",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307955088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307957163",
      "pull_request_review_id": 1599109755,
      "id": 1307957163,
      "node_id": "PRRC_kwDOABII585N9der",
      "diff_hunk": "@@ -1036,12 +1033,25 @@ class ChainstateManager\n     //! Otherwise, revert to using the ibd chainstate and shutdown.\n     SnapshotCompletionResult MaybeCompleteSnapshotValidation() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Returns nullptr if no snapshot has been loaded.\n+    const CBlockIndex* GetSnapshotBaseBlock() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": 61,
      "original_position": 15,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "08a34e56ba7aa8714982d352238f1cb6eba43e29",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"net_processing: Request assumeutxo background chain blocks\" (08a34e56ba7aa8714982d352238f1cb6eba43e29)\r\n\r\nAny reason these two lines are moving? This change seems like it have been accidentally added in a rebase. Would probably be good to revert.",
      "created_at": "2023-08-28T21:14:12Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1307957163",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307957163"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1039,
      "original_line": 1039,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307968803",
      "pull_request_review_id": 1599109755,
      "id": 1307968803,
      "node_id": "PRRC_kwDOABII585N9gUj",
      "diff_hunk": "@@ -4070,6 +4070,11 @@ bool ChainstateManager::ProcessNewBlock(const std::shared_ptr<const CBlock>& blo\n     if (!ActiveChainstate().ActivateBestChain(state, block)) {\n         return error(\"%s: ActivateBestChain failed (%s)\", __func__, state.ToString());\n     }\n+    BlockValidationState background_sync_state;\n+    if (WITH_LOCK(::cs_main, return BackgroundSyncInProgress()) &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "08a34e56ba7aa8714982d352238f1cb6eba43e29",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"net_processing: Request assumeutxo background chain blocks\" (08a34e56ba7aa8714982d352238f1cb6eba43e29)\r\n\r\n`background_sync_state` variable is not actually referenced below, and code which locks and unlocks cs_main twice seems potentially racy. Would suggest cleaning this up with:\r\n\r\n```diff\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -4070,10 +4070,11 @@ bool ChainstateManager::ProcessNewBlock(const std::shared_ptr<const CBlock>& blo\r\n     if (!ActiveChainstate().ActivateBestChain(state, block)) {\r\n         return error(\"%s: ActivateBestChain failed (%s)\", __func__, state.ToString());\r\n     }\r\n-    BlockValidationState background_sync_state;\r\n-    if (WITH_LOCK(::cs_main, return BackgroundSyncInProgress()) &&\r\n-            !WITH_LOCK(::cs_main, return *m_ibd_chainstate).ActivateBestChain(state, block)) {\r\n-        return error(\"%s: [background] ActivateBestChain failed (%s)\", __func__, state.ToString());\r\n+\r\n+    Chainstate* bg_chain{WITH_LOCK(cs_main, return BackgroundSyncInProgress() ? m_ibd_chainstate.get() : nullptr)};\r\n+    BlockValidationState bg_state;\r\n+    if (bg_chain && !bg_chain->ActivateBestChain(bg_state, block)) {\r\n+        return error(\"%s: [background] ActivateBestChain failed (%s)\", __func__, bg_state.ToString());\r\n     }\r\n \r\n     return true;\r\n```",
      "created_at": "2023-08-28T21:24:09Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1307968803",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307968803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4074,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307984332",
      "pull_request_review_id": 1599109755,
      "id": 1307984332,
      "node_id": "PRRC_kwDOABII585N9kHM",
      "diff_hunk": "@@ -5831,6 +5889,14 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n             std::vector<const CBlockIndex*> vToDownload;\n             NodeId staller = -1;\n             FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.vBlocksInFlight.size(), vToDownload, staller);\n+            if (m_chainman.BackgroundSyncInProgress() && !IsLimitedPeer(*peer)) {\n+                const CBlockIndex *target = m_chainman.GetSnapshotBaseBlock();\n+                if (target != nullptr) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 112,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "08a34e56ba7aa8714982d352238f1cb6eba43e29",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"net_processing: Request assumeutxo background chain blocks\" (08a34e56ba7aa8714982d352238f1cb6eba43e29)\r\n\r\nIt seems impossible that target could be nullptr here if condition above is true and cs_main is held. Would be clearer to just `assert(target)` rather than checking for this condition which should be impossible. Or if this is actually expected would be good to add a comment saying when target may be null.",
      "created_at": "2023-08-28T21:35:54Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1307984332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307984332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5894,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307996274",
      "pull_request_review_id": 1599109755,
      "id": 1307996274,
      "node_id": "PRRC_kwDOABII585N9nBy",
      "diff_hunk": "@@ -5712,6 +5717,18 @@ util::Result<void> Chainstate::InvalidateCoinsDBOnDisk()\n     return {};\n }\n \n+void ChainstateManager::DeleteSnapshotChainstate()\n+{\n+    AssertLockHeld(::cs_main);\n+    Assert(m_snapshot_chainstate);\n+    Assert(m_ibd_chainstate);\n+\n+    fs::path snapshot_datadir = GetSnapshotCoinsDBPath(*m_snapshot_chainstate);\n+    DeleteCoinsDBFromDisk(snapshot_datadir, /*is_snapshot=*/ true);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1755c53365d53693213a721138a44bdd889d8794",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"assumeutxo: remove snapshot during -reindex{-chainstate}\" (1755c53365d53693213a721138a44bdd889d8794)\r\n\r\nReturn value from this delete is being ignored. I think DeleteSnapshotChainstate should return a bool and return false if this fails. It would also be good to mark both functions [[nodiscard]] and exit with InitError if the DeleteSnapshotChainstate call fails. I don't think it makes sense to ignore the failure and do a partial reindexing of the background chain only.",
      "created_at": "2023-08-28T21:52:22Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1307996274",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1307996274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5727,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308014826",
      "pull_request_review_id": 1599109755,
      "id": 1308014826,
      "node_id": "PRRC_kwDOABII585N9rjq",
      "diff_hunk": "@@ -3195,6 +3202,11 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\n         }\n         // When we reach this point, we switched to a new tip (stored in pindexNewTip).\n \n+        if (exited_ibd) {\n+            LOCK(::cs_main);\n+            m_chainman.MaybeRebalanceCaches();",
      "path": "src/validation.cpp",
      "position": 110,
      "original_position": 47,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3e7d3537fc06c8aff8a48edc8f179a70af46e04c",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: MaybeRebalanceCaches when chain leaves IBD\" (3e7d3537fc06c8aff8a48edc8f179a70af46e04c)\r\n\r\nI think it would be helpful to have a reminder about why this is necessary, maybe \"// Call MaybeRebalanceCaches in case background and snapshot chainstates both exist, and the snapshot chainstate is almost finished downloading blocks, so more resources can be shifted to the background download.\"",
      "created_at": "2023-08-28T22:21:44Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308014826",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308014826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3291,
      "original_line": 3291,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308025208",
      "pull_request_review_id": 1599109755,
      "id": 1308025208,
      "node_id": "PRRC_kwDOABII585N9uF4",
      "diff_hunk": "@@ -5729,6 +5729,16 @@ void ChainstateManager::DeleteSnapshotChainstate()\n     m_snapshot_chainstate.reset();\n }\n \n+ChainstateRole Chainstate::GetRole() const",
      "path": "src/validation.cpp",
      "position": 413,
      "original_position": 4,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "95f45e38b5e47eaef56468909d04418b93e9c962",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: add ChainstateRole\" (95f45e38b5e47eaef56468909d04418b93e9c962)\r\n\r\nI don't have a specific suggestion here, just an observation that this method seems like it is called from multiple threads but it doesn't require cs_main. So potentially there could be a race condition where a snapshot is loaded during this call, or validated during this call and it returns a stale value. I think this is not a new issue, since returning stale values also seems to be characteristic of the existing `GetAll()` and `ActiveChainstate()` methods. But in the long term it would probably be better if all of these methods were marked `EXCLUSIVE_LOCKS_REQUIRED(cs_main)` and stopped acquiring `cs_main` internally so they could not return stale values and create potential race conditions.",
      "created_at": "2023-08-28T22:38:42Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308025208",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308025208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5872,
      "original_line": 5872,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308029027",
      "pull_request_review_id": 1599109755,
      "id": 1308029027,
      "node_id": "PRRC_kwDOABII585N9vBj",
      "diff_hunk": "@@ -3186,7 +3186,7 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\n \n             // Notify external listeners about the new tip.\n             // Enqueue while holding cs_main to ensure that UpdatedBlockTip is called in the order in which blocks are connected\n-            if (pindexFork != pindexNewTip) {\n+            if (this == &m_chainman.ActiveChainstate() && pindexFork != pindexNewTip) {",
      "path": "src/validation.cpp",
      "position": 91,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9eda8224119450b8614837e0c8decfc81a6b9915",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: only call UpdatedBlockTip for active chainstate\" (9eda8224119450b8614837e0c8decfc81a6b9915)\r\n\r\nCould update commit message to mention that in addition to skipping `CValidationInterface::UpdatedBlockTip` notifications for the background chainstate, it also skips `kernel::Notifications::blockTip` notifications.",
      "created_at": "2023-08-28T22:45:57Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308029027",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308029027"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3271,
      "original_line": 3271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308031241",
      "pull_request_review_id": 1599109755,
      "id": 1308031241,
      "node_id": "PRRC_kwDOABII585N9vkJ",
      "diff_hunk": "@@ -19,7 +19,11 @@ struct TestChainstateManager : public ChainstateManager {\n class ValidationInterfaceTest\n {\n public:\n-    static void BlockConnected(CValidationInterface& obj, const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex);\n+    static void BlockConnected(\n+        const ChainstateRole role,\n+        CValidationInterface& obj,",
      "path": "src/test/util/validation.h",
      "position": null,
      "original_position": 7,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "2873d91ada1c240de280a35bbf169ed0c708e057",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pass ChainstateRole for validationinterface calls\" (2873d91ada1c240de280a35bbf169ed0c708e057)\r\n\r\nArgument order here is a little weird. It would make more sense for it to be `obj, role` rather than `role, obj` so the object is still first and so `role` is right before `block` just like everywhere else.",
      "created_at": "2023-08-28T22:50:05Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308031241",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308031241"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 23,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308032026",
      "pull_request_review_id": 1599109755,
      "id": 1308032026,
      "node_id": "PRRC_kwDOABII585N9vwa",
      "diff_hunk": "@@ -87,7 +88,7 @@ class CValidationInterface {\n      * but may not be called on every intermediate tip. If the latter behavior is desired,\n      * subscribe to BlockConnected() instead.\n      *\n-     * Called on a background thread.\n+     * Called on a background thread. Only called for the active chainstate.",
      "path": "src/validationinterface.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "2873d91ada1c240de280a35bbf169ed0c708e057",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pass ChainstateRole for validationinterface calls\" (2873d91ada1c240de280a35bbf169ed0c708e057)\r\n\r\nWould make more sense to update this comment in the previous commit \"validation: only call UpdatedBlockTip for active chainstate\" (9eda8224119450b8614837e0c8decfc81a6b9915) instead of this commit.\r\n",
      "created_at": "2023-08-28T22:51:43Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308032026",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308032026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308039060",
      "pull_request_review_id": 1599109755,
      "id": 1308039060,
      "node_id": "PRRC_kwDOABII585N9xeU",
      "diff_hunk": "@@ -199,11 +205,11 @@ class CMainSignals {\n     void UpdatedBlockTip(const CBlockIndex *, const CBlockIndex *, bool fInitialDownload);\n     void TransactionAddedToMempool(const CTransactionRef&, uint64_t mempool_sequence);\n     void TransactionRemovedFromMempool(const CTransactionRef&, MemPoolRemovalReason, uint64_t mempool_sequence);\n-    void BlockConnected(const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex);\n+    void BlockConnected(const ChainstateRole, const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex);",
      "path": "src/validationinterface.h",
      "position": null,
      "original_position": 64,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "2873d91ada1c240de280a35bbf169ed0c708e057",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pass ChainstateRole for validationinterface calls\" (2873d91ada1c240de280a35bbf169ed0c708e057)\r\n\r\nIgnore this comment if this was intentional, but it seems unusual to make the `ChainstateRole` parameter const, when the codebase doesn't use const value parameters in general or in this interface for other parameters like `MemPoolRemovalReason`. IMO the `const` just adds noise without being more safe, and makes the method less convenient to implement. But not a problem if this is just a style difference and was intended.",
      "created_at": "2023-08-28T23:05:30Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308039060",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308039060"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308042767",
      "pull_request_review_id": 1599109755,
      "id": 1308042767,
      "node_id": "PRRC_kwDOABII585N9yYP",
      "diff_hunk": "@@ -0,0 +1,7 @@\n+ZMQ",
      "path": "doc/release-notes-27596.md",
      "position": null,
      "original_position": 1,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b48729144fba1dbc64d603b2644a76c3f00d44eb",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validationinterface: only send zmq notifications for active\" (b48729144fba1dbc64d603b2644a76c3f00d44eb)\r\n\r\nI'm surprised to see this release note. It seems like no observable behavior change could be happening with this PR because it wasn't possible to load a snapshot previously. If this is the case, I think putting this information in release notes could only be confusing and it would be better to document this behavior in `doc/zmq.md` instead",
      "created_at": "2023-08-28T23:13:14Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308042767",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308042767"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308047801",
      "pull_request_review_id": 1599109755,
      "id": 1308047801,
      "node_id": "PRRC_kwDOABII585N9zm5",
      "diff_hunk": "@@ -144,7 +144,8 @@ void TryForEachAndRemoveFailed(std::list<std::unique_ptr<CZMQAbstractNotifier>>&\n \n void CZMQNotificationInterface::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n-    if (fInitialDownload || pindexNew == pindexFork) // In IBD or blocks were disconnected without any new ones\n+    // In IBD or blocks were disconnected without any new ones\n+    if (fInitialDownload || pindexNew == pindexFork)",
      "path": "src/zmq/zmqnotificationinterface.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b48729144fba1dbc64d603b2644a76c3f00d44eb",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validationinterface: only send zmq notifications for active\" (b48729144fba1dbc64d603b2644a76c3f00d44eb)\r\n\r\nThis seems like no-op change that could be reverted. Or if this is supposed to be a style cleanup, would probably make sense to add {} and modernize it since the line is changing anyway.",
      "created_at": "2023-08-28T23:22:33Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308047801",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308047801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308053648",
      "pull_request_review_id": 1599109755,
      "id": 1308053648,
      "node_id": "PRRC_kwDOABII585N91CQ",
      "diff_hunk": "@@ -909,6 +910,8 @@ class ChainstateManager\n \n     explicit ChainstateManager(const util::SignalInterrupt& interrupt, Options options, node::BlockManager::Options blockman_options);\n \n+    std::vector<BaseIndex*> indexers{};",
      "path": "src/validation.h",
      "position": null,
      "original_position": 12,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "688b68f34fe061c3064a516cdf77d4c155bfcafd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"index: cache indexer references on ChainstateManager\" (688b68f34fe061c3064a516cdf77d4c155bfcafd)\r\n\r\nHaven't reviewed later commits yet, but it seems not ideal for ChainstateManager to be aware of indexes. I think it would might be better to add a new ValidationInterface method that indexes (and wallets) could handle to start resyncing themselves whenever the background download finishes. \r\n\r\nMinor: Since this is a member, should be prefixed with `m_`. Also would be good to `s/indexer/index/` everywhere for consistency with `NodeContext::indexes and other index variables. (In general I think \"index\" sounds better than \"indexer\" and \"indexing\" sounds better than \"indexation\" to stick to more common terms.)\r\n\r\n",
      "created_at": "2023-08-28T23:35:37Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308053648",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308053648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 913,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308066452",
      "pull_request_review_id": 1599109755,
      "id": 1308066452,
      "node_id": "PRRC_kwDOABII585N94KU",
      "diff_hunk": "@@ -1473,6 +1473,26 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.chainman = std::make_unique<ChainstateManager>(node.kernel->interrupt, chainman_opts, blockman_opts);\n         ChainstateManager& chainman = *node.chainman;\n \n+        // This is defined and set here instead of inline in validation.h to avoid a hard\n+        // dependency between validation and index/base, since the latter is not in\n+        // libbitcoinkernel.\n+        chainman.restart_indexers = [](const ChainstateManager& chainman) {\n+            LogPrintf(\"[snapshot] restarting indexers\\n\");\n+\n+            // Drain the validation interface queue to ensure that the old indexers\n+            // don't have any pending work.\n+            SyncWithValidationInterfaceQueue();\n+\n+            for (auto* indexer : chainman.indexers) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5d01151b41b244dabeda54122400df17a3dfc4d2",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"net_processing: validationinterface: ignore some events for bg chain\" (5d096add65e84530c907b5ee934af144067d5ef1)\r\n\r\nThis could probably loop over `node.indexes` instead of `chainman.indexers` and then the `chainman.indexers` variable could be eliminated.",
      "created_at": "2023-08-29T00:04:25Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308066452",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308066452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1486,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308066973",
      "pull_request_review_id": 1599109755,
      "id": 1308066973,
      "node_id": "PRRC_kwDOABII585N94Sd",
      "diff_hunk": "@@ -1473,6 +1473,26 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.chainman = std::make_unique<ChainstateManager>(node.kernel->interrupt, chainman_opts, blockman_opts);\n         ChainstateManager& chainman = *node.chainman;\n \n+        // This is defined and set here instead of inline in validation.h to avoid a hard\n+        // dependency between validation and index/base, since the latter is not in\n+        // libbitcoinkernel.\n+        chainman.restart_indexers = [](const ChainstateManager& chainman) {\n+            LogPrintf(\"[snapshot] restarting indexers\\n\");",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5d01151b41b244dabeda54122400df17a3dfc4d2",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"net_processing: validationinterface: ignore some events for bg chain\" (5d096add65e84530c907b5ee934af144067d5ef1)\r\n\r\nWould be nice to s/indexers/indexes/, s/indexer/s/index/ /s/indexation/indexing/ everywhere.",
      "created_at": "2023-08-29T00:05:37Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308066973",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308066973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1480,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308070723",
      "pull_request_review_id": 1599109755,
      "id": 1308070723,
      "node_id": "PRRC_kwDOABII585N95ND",
      "diff_hunk": "@@ -911,6 +911,10 @@ class ChainstateManager\n     explicit ChainstateManager(const util::SignalInterrupt& interrupt, Options options, node::BlockManager::Options blockman_options);\n \n     std::vector<BaseIndex*> indexers{};\n+    //! Function to restart active indexers; set dynamically to avoid a circular\n+    //! dependency on `base/index.cpp`.\n+    std::function<void(const ChainstateManager&)> restart_indexers =",
      "path": "src/validation.h",
      "position": null,
      "original_position": 6,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5d01151b41b244dabeda54122400df17a3dfc4d2",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"net_processing: validationinterface: ignore some events for bg chain\" (5d096add65e84530c907b5ee934af144067d5ef1)\r\n\r\nWould suggest simplifying function type to `std::function<void()>` because handler should be able to determine what state is needs to run and capture it explicitly. Also the reference might be unnecessary if the m_indexers variable is removed as suggested.",
      "created_at": "2023-08-29T00:13:48Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308070723",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308070723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 916,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308071774",
      "pull_request_review_id": 1599109755,
      "id": 1308071774,
      "node_id": "PRRC_kwDOABII585N95de",
      "diff_hunk": "@@ -5838,3 +5848,9 @@ bool ChainstateManager::ValidatedSnapshotCleanup()\n     }\n     return true;\n }\n+\n+Chainstate& ChainstateManager::GetChainstateForIndexing()\n+{\n+    return (IsSnapshotActive() && !IsSnapshotValidated()) ?",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5d01151b41b244dabeda54122400df17a3dfc4d2",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"net_processing: validationinterface: ignore some events for bg chain\" (5d096add65e84530c907b5ee934af144067d5ef1)\r\n\r\nI'm surprised this method can't just return `m_ibd_chainstate.get()`. It would be good to simplify this code if possible or else add some explanation for the logic, which seems pretty complicated.",
      "created_at": "2023-08-29T00:16:15Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308071774",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308071774"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5854,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308075373",
      "pull_request_review_id": 1599109755,
      "id": 1308075373,
      "node_id": "PRRC_kwDOABII585N96Vt",
      "diff_hunk": "@@ -5854,3 +5863,40 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     return (IsSnapshotActive() && !IsSnapshotValidated()) ?\n         *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<unsigned int, unsigned int> ChainstateManager::GetPruneRange(\n+    const Chainstate& chainstate, unsigned int prune_height)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};\n+    }\n+    unsigned int prune_start{0};\n+\n+    if (this->GetAll().size() > 1) {\n+        std::optional<int> snapshot_height{GetSnapshotBaseHeight()};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (b9ac4f7925e2d9dec67be06fdc2a381532581136)\r\n\r\nI think it would be good `assert(snapshot_height)` or else add a comment saying when `snapshot_height` is expected to be `nullopt`, rather than write code that seems like it is trying to handle an impossible condition.",
      "created_at": "2023-08-29T00:25:06Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308075373",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308075373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308076179",
      "pull_request_review_id": 1599109755,
      "id": 1308076179,
      "node_id": "PRRC_kwDOABII585N96iT",
      "diff_hunk": "@@ -5854,3 +5863,40 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     return (IsSnapshotActive() && !IsSnapshotValidated()) ?\n         *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<unsigned int, unsigned int> ChainstateManager::GetPruneRange(\n+    const Chainstate& chainstate, unsigned int prune_height)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};\n+    }\n+    unsigned int prune_start{0};\n+\n+    if (this->GetAll().size() > 1) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (b9ac4f7925e2d9dec67be06fdc2a381532581136)\r\n\r\nSeems like the code would be a little simpler if this said `if (this->GetAll().size() > 1 && &chainstate == m_snapshot_chainstate.get())` so relevant conditions would be stated up front, and nested if statement below could go away",
      "created_at": "2023-08-29T00:26:50Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308076179",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308076179"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5875,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308082844",
      "pull_request_review_id": 1599109755,
      "id": 1308082844,
      "node_id": "PRRC_kwDOABII585N98Kc",
      "diff_hunk": "@@ -1248,6 +1244,17 @@ class ChainstateManager\n     //!   fully validated chain.\n     Chainstate& GetChainstateForIndexing() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Return the [start, end] (inclusive) of block heights we can prune.\n+    //!\n+    //! If we're pruning the snapshot chainstate, be sure not to\n+    //! prune blocks being used by the background chainstate.\n+    std::pair<unsigned int, unsigned int> GetPruneRange(",
      "path": "src/validation.h",
      "position": null,
      "original_position": 19,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (b9ac4f7925e2d9dec67be06fdc2a381532581136)\r\n\r\nWould definitely suggest using plain `int` instead of `unsigned int` for heights everywhere to avoid overflow bugs and extra type casts. The rest of the code represents block heights with ints, and unsigned types are great for representing bits but less great at representing quantities you would like to perform arithmetic on.",
      "created_at": "2023-08-29T00:42:46Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308082844",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308082844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308085308",
      "pull_request_review_id": 1599109755,
      "id": 1308085308,
      "node_id": "PRRC_kwDOABII585N98w8",
      "diff_hunk": "@@ -5854,3 +5863,40 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     return (IsSnapshotActive() && !IsSnapshotValidated()) ?\n         *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<unsigned int, unsigned int> ChainstateManager::GetPruneRange(\n+    const Chainstate& chainstate, unsigned int prune_height)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};",
      "path": "src/validation.cpp",
      "position": 442,
      "original_position": 39,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"net_processing: validationinterface: ignore some events for bg chain\" (5d096add65e84530c907b5ee934af144067d5ef1)\r\n\r\nProbably doesn't matter in practice, but according to the function documentation, this would indicate the pruning range includes the genesis block. Would suggest returning `{1, 0}` here and also initializing `prune_start` to 1 instead of 0 below.",
      "created_at": "2023-08-29T00:48:47Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308085308",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308085308"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5991,
      "original_line": 5991,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308096895",
      "pull_request_review_id": 1599109755,
      "id": 1308096895,
      "node_id": "PRRC_kwDOABII585N9_l_",
      "diff_hunk": "@@ -2474,11 +2475,19 @@ bool Chainstate::FlushStateToDisk(\n             if (nManualPruneHeight > 0) {\n                 LOG_TIME_MILLIS_WITH_CATEGORY(\"find files to prune (manual)\", BCLog::BENCH);\n \n-                m_blockman.FindFilesToPruneManual(setFilesToPrune, std::min(last_prune, nManualPruneHeight), m_chain.Height());\n+                m_blockman.FindFilesToPruneManual(\n+                    setFilesToPrune,\n+                    std::min(last_prune, nManualPruneHeight),\n+                    m_chain.Height(),",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (b9ac4f7925e2d9dec67be06fdc2a381532581136)\r\n\r\nNo reason to pass `m_chain.Height()` here anymore now this is passing `*this` chainstate reference. Having the redundant parameter makes code in the function more complicated and hard to follow because there are multiple variables referring to the same height.",
      "created_at": "2023-08-29T01:16:55Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308096895",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308096895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2481,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308104549",
      "pull_request_review_id": 1599109755,
      "id": 1308104549,
      "node_id": "PRRC_kwDOABII585N-Bdl",
      "diff_hunk": "@@ -122,7 +128,13 @@ class BlockManager\n      *\n      * @param[out]   setFilesToPrune   The set of file indices that can be unlinked will be returned\n      */\n-    void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd);\n+    void FindFilesToPrune(\n+        std::set<int>& setFilesToPrune,\n+        uint64_t nPruneAfterHeight,\n+        int chain_tip_height,\n+        int prune_height,",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 31,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (b9ac4f7925e2d9dec67be06fdc2a381532581136)\r\n\r\nSame as earlier comment, but again it is confusing to keep this `chain_tip_height` parameter which is redundant with the `chain` parameter and makes the implementation more complicated because there are multiple variables referring to the same height.\r\n\r\nAlso would suggest calling the `prune_height` parameter `last_prune` to be be more descriptive, and consistent with the argument that is passed in validation.cpp. Also could add documentation for the parameter as \"the last height we can prune\" or something similar.",
      "created_at": "2023-08-29T01:31:48Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308104549",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308104549"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 134,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308108294",
      "pull_request_review_id": 1599109755,
      "id": 1308108294,
      "node_id": "PRRC_kwDOABII585N-CYG",
      "diff_hunk": "@@ -1248,6 +1244,17 @@ class ChainstateManager\n     //!   fully validated chain.\n     Chainstate& GetChainstateForIndexing() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Return the [start, end] (inclusive) of block heights we can prune.",
      "path": "src/validation.h",
      "position": 112,
      "original_position": 15,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (b9ac4f7925e2d9dec67be06fdc2a381532581136)\r\n\r\nWould be good to say that `start > end` is possible and indicates prune range is empty.",
      "created_at": "2023-08-29T01:40:36Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308108294",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308108294"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1239,
      "original_line": 1239,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308114692",
      "pull_request_review_id": 1599109755,
      "id": 1308114692,
      "node_id": "PRRC_kwDOABII585N-D8E",
      "diff_hunk": "@@ -153,31 +158,54 @@ void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nM\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    unsigned int min_block_to_prune;\n+    unsigned int nLastBlockWeCanPrune;\n+\n+    std::tie(min_block_to_prune, nLastBlockWeCanPrune) = chainman.GetPruneRange(\n+        chain, chain_tip_height);\n+\n+    nLastBlockWeCanPrune = std::min(nLastBlockWeCanPrune, (unsigned)nManualPruneHeight);\n+\n     int count = 0;\n     for (int fileNumber = 0; fileNumber < m_last_blockfile; fileNumber++) {\n-        if (m_blockfile_info[fileNumber].nSize == 0 || m_blockfile_info[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n+        const auto& fileinfo = m_blockfile_info[fileNumber];\n+        if (fileinfo.nSize == 0 || fileinfo.nHeightLast > nLastBlockWeCanPrune || fileinfo.nHeightFirst < min_block_to_prune) {\n             continue;\n         }\n+\n         PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n-    LogPrintf(\"Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\", nLastBlockWeCanPrune, count);\n+    LogPrintf(\"[%s] Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\",\n+        chain.GetRole(), nLastBlockWeCanPrune, count);\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(\n+    std::set<int>& setFilesToPrune,\n+    uint64_t nPruneAfterHeight,\n+    int chain_tip_height,\n+    int prune_height,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0 || GetPruneTarget() == 0) {\n+    // Distribute our -prune budget over all chainstates.\n+    const auto target = GetPruneTarget() / chainman.GetAll().size();",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9e2b8ef836aeb1dc2e4b57449fc56badebea6772",
      "in_reply_to_id": 1291649621,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (b9ac4f7925e2d9dec67be06fdc2a381532581136)\r\n\r\nI think if you divide by 2 you also need to take max with MIN_DISK_SPACE_FOR_BLOCK_FILES to avoid going below the minimum supported pruning size.\r\n\r\nMaybe the easiest and most conservative thing to do for now would just be to keep the pruning target the same and just write documentation that says if you load a snapshot, you may temporarily need twice as much disk space as otherwise,",
      "created_at": "2023-08-29T01:55:59Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308114692",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308114692"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308119179",
      "pull_request_review_id": 1599109755,
      "id": 1308119179,
      "node_id": "PRRC_kwDOABII585N-FCL",
      "diff_hunk": "@@ -153,31 +158,54 @@ void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nM\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    unsigned int min_block_to_prune;\n+    unsigned int nLastBlockWeCanPrune;\n+\n+    std::tie(min_block_to_prune, nLastBlockWeCanPrune) = chainman.GetPruneRange(\n+        chain, chain_tip_height);\n+\n+    nLastBlockWeCanPrune = std::min(nLastBlockWeCanPrune, (unsigned)nManualPruneHeight);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (b9ac4f7925e2d9dec67be06fdc2a381532581136)\r\n\r\nCode would be simpler if this line were dropped and `nManualPruneHeight` was passed as the parameter to `GetPruneRange` above instead of `chain_tip_height`. Passing `chain_tip_height` above has no effect because `GetPruneRange` already takes the min with the `chain.m_chain.Height()`.",
      "created_at": "2023-08-29T02:07:57Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308119179",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308119179"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308128467",
      "pull_request_review_id": 1599109755,
      "id": 1308128467,
      "node_id": "PRRC_kwDOABII585N-HTT",
      "diff_hunk": "@@ -5854,3 +5863,40 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     return (IsSnapshotActive() && !IsSnapshotValidated()) ?\n         *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<unsigned int, unsigned int> ChainstateManager::GetPruneRange(\n+    const Chainstate& chainstate, unsigned int prune_height)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};\n+    }\n+    unsigned int prune_start{0};\n+\n+    if (this->GetAll().size() > 1) {\n+        std::optional<int> snapshot_height{GetSnapshotBaseHeight()};\n+\n+        // Leave the blocks in the background IBD chain alone if we're pruning\n+        // the snapshot chain.\n+        if (&chainstate == m_snapshot_chainstate.get() && snapshot_height) {\n+            prune_start = *snapshot_height + 1;\n+        }\n+    }\n+\n+    unsigned int prune_end{0};\n+    unsigned int chain_height{static_cast<unsigned int>(chainstate.m_chain.Height())};\n+\n+    if (MIN_BLOCKS_TO_KEEP > chain_height) {\n+        // Prevent underflow.\n+        prune_end = 0;\n+    } else {\n+        // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n+        //\n+        // While you might be tempted to prune the background chainstate more\n+        // aggressively (i.e. fewer MIN_BLOCKS_TO_KEEP), this won't work with index\n+        // building - specifically blockfilterindex requires undo data, and if\n+        // we don't maintain this trailing window, we hit indexation failures.\n+        prune_end = std::min(prune_height, chain_height - MIN_BLOCKS_TO_KEEP);\n+    }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (b9ac4f7925e2d9dec67be06fdc2a381532581136)\r\n\r\nWould suggest compressing this all down to:\r\n\r\n```c++\r\n// Set the end of the prune range to the maximum height which is at least\r\n// MIN_BLOCKS_TO_KEEP blocks away from the chain tip, and is not higher than the\r\n// highest block that is allowed to be pruned according to the caller.\r\nprune_end = std::min(std::max<int>(0, chain_height - MIN_BLOCKS_TO_KEEP), last_prune);\r\n```\r\n\r\nAssuming `prune_height` is renamed back to `last_prune` as suggested earlier and made into an int.",
      "created_at": "2023-08-29T02:29:53Z",
      "updated_at": "2023-08-29T02:48:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308128467",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308128467"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 5888,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5899,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308540550",
      "pull_request_review_id": 1600003600,
      "id": 1308540550,
      "node_id": "PRRC_kwDOABII585N_r6G",
      "diff_hunk": "@@ -4070,6 +4070,11 @@ bool ChainstateManager::ProcessNewBlock(const std::shared_ptr<const CBlock>& blo\n     if (!ActiveChainstate().ActivateBestChain(state, block)) {\n         return error(\"%s: ActivateBestChain failed (%s)\", __func__, state.ToString());\n     }\n+    BlockValidationState background_sync_state;\n+    if (WITH_LOCK(::cs_main, return BackgroundSyncInProgress()) &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "08a34e56ba7aa8714982d352238f1cb6eba43e29",
      "in_reply_to_id": 1307968803,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": ">seems potentially racy\r\n\r\nHow so?",
      "created_at": "2023-08-29T10:13:04Z",
      "updated_at": "2023-08-29T10:13:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308540550",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308540550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4074,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308696215",
      "pull_request_review_id": 1600221022,
      "id": 1308696215,
      "node_id": "PRRC_kwDOABII585OAR6X",
      "diff_hunk": "@@ -4070,6 +4070,11 @@ bool ChainstateManager::ProcessNewBlock(const std::shared_ptr<const CBlock>& blo\n     if (!ActiveChainstate().ActivateBestChain(state, block)) {\n         return error(\"%s: ActivateBestChain failed (%s)\", __func__, state.ToString());\n     }\n+    BlockValidationState background_sync_state;\n+    if (WITH_LOCK(::cs_main, return BackgroundSyncInProgress()) &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "08a34e56ba7aa8714982d352238f1cb6eba43e29",
      "in_reply_to_id": 1307968803,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > seems potentially racy\r\n> \r\n> How so?\r\n\r\nI don't think there is a real race condition here because if stale a BackgroundSyncInProgress value were used, it wouldn't cause any harm. By \"potentially racy\" I just meant that any time I see a mutex being unlocked and immediately relocked I have to turn on the part of my brain that thinks about race conditions, so it's nicer to use one lock than worry about what state can change in the gap between locks.",
      "created_at": "2023-08-29T11:49:09Z",
      "updated_at": "2023-08-29T11:49:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1308696215",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1308696215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4074,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309104196",
      "pull_request_review_id": 1600876009,
      "id": 1309104196,
      "node_id": "PRRC_kwDOABII585OB1hE",
      "diff_hunk": "@@ -1036,12 +1033,25 @@ class ChainstateManager\n     //! Otherwise, revert to using the ibd chainstate and shutdown.\n     SnapshotCompletionResult MaybeCompleteSnapshotValidation() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Returns nullptr if no snapshot has been loaded.\n+    const CBlockIndex* GetSnapshotBaseBlock() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main);",
      "path": "src/validation.h",
      "position": 61,
      "original_position": 15,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "08a34e56ba7aa8714982d352238f1cb6eba43e29",
      "in_reply_to_id": 1307957163,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yep - this method now must be public to be made use of in [`PeerManagerImpl::SendMessages()`](https://github.com/bitcoin/bitcoin/commit/08a34e56ba7aa8714982d352238f1cb6eba43e29#diff-6875de769e90cec84d2e8a9c1b962cdbcda44d870d42e4215827e599e11e90e3R5893) (which was a refactoring from the commit you offered in an earlier review - the content of this function had been reproduced).",
      "created_at": "2023-08-29T16:47:21Z",
      "updated_at": "2023-08-29T16:47:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309104196",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309104196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1039,
      "original_line": 1039,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309108048",
      "pull_request_review_id": 1600882627,
      "id": 1309108048,
      "node_id": "PRRC_kwDOABII585OB2dQ",
      "diff_hunk": "@@ -892,6 +892,35 @@ class PeerManagerImpl final : public PeerManager\n      */\n     void FindNextBlocksToDownload(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, NodeId& nodeStaller) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    void TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex* from_tip, const CBlockIndex* target_block) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /**\n+    * \\brief Find next blocks to download from a peer after a starting block.\n+    *\n+    * \\param vBlocks      Vector of blocks to download which will be appended to.\n+    * \\param peer         ID of peer which blocks will be downloaded from.\n+    * \\param state        Pointer to the state of the peer.\n+    * \\param pindexWalk   Pointer to the starting block to add to vBlocks.\n+    * \\param count        Maximum number of blocks to allow in vBlocks. No more\n+    *                     blocks will be added if it reaches this size.\n+    * \\param nWindowEnd   Maximum height of blocks to allow in vBlocks. No\n+    *                     blocks will be added above this height.\n+    * \\param activeChain  Optional pointer to a chain to compare against. If\n+    *                     provided, any blocks contained by this chain will only\n+    *                     be used to update state->pindexLastCommonBlock, and\n+    *                     will not be appended to vBlocks.\n+    * \\param nodeStaller  Optional pointer to a NodeId variable that will receive\n+    *                     the ID of another peer that might be causing this peer\n+    *                     to stall. This is set to the ID of the peer which\n+    *                     first requested the first in-flight block in the\n+    *                     download window. It is only set if vBlocks is empty at\n+    *                     the end of this function call and if increasing\n+    *                     nWindowEnd by 1 would have caused it to be non-empty\n+    *                     (which indicates the download might be stalled since\n+    *                     every block in the window is in flight.)",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "08a34e56ba7aa8714982d352238f1cb6eba43e29",
      "in_reply_to_id": 1307949616,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, thanks.",
      "created_at": "2023-08-29T16:50:42Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309108048",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309108048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 920,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309115860",
      "pull_request_review_id": 1600882627,
      "id": 1309115860,
      "node_id": "PRRC_kwDOABII585OB4XU",
      "diff_hunk": "@@ -1406,6 +1409,62 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     }\n }\n \n+void PeerManagerImpl::TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex *from_tip, const CBlockIndex* target_block)\n+{\n+    if (vBlocks.size() >= count) {\n+        return;\n+    }\n+\n+    vBlocks.reserve(count);\n+    CNodeState *state = State(peer.m_id);\n+    assert(state != nullptr);\n+\n+    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->GetAncestor(target_block->nHeight) != target_block) {\n+        // This peer is useless to us -- it has a chain that doesn't contain",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 32,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "6be9fd22ee2b9759cdd30a7bca4d07a9346eb57b",
      "in_reply_to_id": 1294879351,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've rephrased the comment and added a note about potentially requesting partial subset of blocks in the future.",
      "created_at": "2023-08-29T16:57:46Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309115860",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309115860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1395,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309121965",
      "pull_request_review_id": 1600882627,
      "id": 1309121965,
      "node_id": "PRRC_kwDOABII585OB52t",
      "diff_hunk": "@@ -5831,6 +5889,14 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n             std::vector<const CBlockIndex*> vToDownload;\n             NodeId staller = -1;\n             FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.vBlocksInFlight.size(), vToDownload, staller);\n+            if (m_chainman.BackgroundSyncInProgress() && !IsLimitedPeer(*peer)) {\n+                const CBlockIndex *target = m_chainman.GetSnapshotBaseBlock();\n+                if (target != nullptr) {",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 112,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "08a34e56ba7aa8714982d352238f1cb6eba43e29",
      "in_reply_to_id": 1307984332,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sounds good, since we've ensured that the snapshot base block index exists prior to snapshot activation (`PopulateAndValidateSnapshot()`).",
      "created_at": "2023-08-29T17:03:31Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309121965",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309121965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5894,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309141159",
      "pull_request_review_id": 1600882627,
      "id": 1309141159,
      "node_id": "PRRC_kwDOABII585OB-in",
      "diff_hunk": "@@ -4070,6 +4070,11 @@ bool ChainstateManager::ProcessNewBlock(const std::shared_ptr<const CBlock>& blo\n     if (!ActiveChainstate().ActivateBestChain(state, block)) {\n         return error(\"%s: ActivateBestChain failed (%s)\", __func__, state.ToString());\n     }\n+    BlockValidationState background_sync_state;\n+    if (WITH_LOCK(::cs_main, return BackgroundSyncInProgress()) &&",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "08a34e56ba7aa8714982d352238f1cb6eba43e29",
      "in_reply_to_id": 1307968803,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point and thanks for the suggestion; took your diff.",
      "created_at": "2023-08-29T17:21:56Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309141159",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309141159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4074,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309155137",
      "pull_request_review_id": 1600882627,
      "id": 1309155137,
      "node_id": "PRRC_kwDOABII585OCB9B",
      "diff_hunk": "@@ -5712,6 +5717,18 @@ util::Result<void> Chainstate::InvalidateCoinsDBOnDisk()\n     return {};\n }\n \n+void ChainstateManager::DeleteSnapshotChainstate()\n+{\n+    AssertLockHeld(::cs_main);\n+    Assert(m_snapshot_chainstate);\n+    Assert(m_ibd_chainstate);\n+\n+    fs::path snapshot_datadir = GetSnapshotCoinsDBPath(*m_snapshot_chainstate);\n+    DeleteCoinsDBFromDisk(snapshot_datadir, /*is_snapshot=*/ true);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 36,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1755c53365d53693213a721138a44bdd889d8794",
      "in_reply_to_id": 1307996274,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good points, fixed per your advice.",
      "created_at": "2023-08-29T17:35:52Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309155137",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309155137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5727,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309161936",
      "pull_request_review_id": 1600882627,
      "id": 1309161936,
      "node_id": "PRRC_kwDOABII585OCDnQ",
      "diff_hunk": "@@ -3195,6 +3202,11 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\n         }\n         // When we reach this point, we switched to a new tip (stored in pindexNewTip).\n \n+        if (exited_ibd) {\n+            LOCK(::cs_main);\n+            m_chainman.MaybeRebalanceCaches();",
      "path": "src/validation.cpp",
      "position": 110,
      "original_position": 47,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3e7d3537fc06c8aff8a48edc8f179a70af46e04c",
      "in_reply_to_id": 1308014826,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added a comment that's slightly more vague because I think the logic for how we balance the caches should be confined to `MaybeRebalanceCaches()` so that this comment doesn't fall out of date.",
      "created_at": "2023-08-29T17:42:56Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309161936",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309161936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3291,
      "original_line": 3291,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309196765",
      "pull_request_review_id": 1600882627,
      "id": 1309196765,
      "node_id": "PRRC_kwDOABII585OCMHd",
      "diff_hunk": "@@ -5729,6 +5729,16 @@ void ChainstateManager::DeleteSnapshotChainstate()\n     m_snapshot_chainstate.reset();\n }\n \n+ChainstateRole Chainstate::GetRole() const",
      "path": "src/validation.cpp",
      "position": 413,
      "original_position": 4,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "95f45e38b5e47eaef56468909d04418b93e9c962",
      "in_reply_to_id": 1308025208,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Definitely agree here, but it'd be nice to tackle this as a follow-up since inverting all the `cs_main` acquisitions for `ActiveChainstate()` will be a big diff (if not mechanical).\r\n\r\nFor now I can add `EXCLUSIVE_LOCKS_REQUIRED` annotations to `GetRole()`, which compiles okay at the HEAD of this branch.",
      "created_at": "2023-08-29T18:19:40Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309196765",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309196765"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5872,
      "original_line": 5872,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309270401",
      "pull_request_review_id": 1600882627,
      "id": 1309270401,
      "node_id": "PRRC_kwDOABII585OCeGB",
      "diff_hunk": "@@ -3186,7 +3186,7 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\n \n             // Notify external listeners about the new tip.\n             // Enqueue while holding cs_main to ensure that UpdatedBlockTip is called in the order in which blocks are connected\n-            if (pindexFork != pindexNewTip) {\n+            if (this == &m_chainman.ActiveChainstate() && pindexFork != pindexNewTip) {",
      "path": "src/validation.cpp",
      "position": 91,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9eda8224119450b8614837e0c8decfc81a6b9915",
      "in_reply_to_id": 1308029027,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-08-29T19:30:34Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309270401",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309270401"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3271,
      "original_line": 3271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309271332",
      "pull_request_review_id": 1600882627,
      "id": 1309271332,
      "node_id": "PRRC_kwDOABII585OCeUk",
      "diff_hunk": "@@ -19,7 +19,11 @@ struct TestChainstateManager : public ChainstateManager {\n class ValidationInterfaceTest\n {\n public:\n-    static void BlockConnected(CValidationInterface& obj, const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex);\n+    static void BlockConnected(\n+        const ChainstateRole role,\n+        CValidationInterface& obj,",
      "path": "src/test/util/validation.h",
      "position": null,
      "original_position": 7,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "2873d91ada1c240de280a35bbf169ed0c708e057",
      "in_reply_to_id": 1308031241,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I figured that since we'd immediately be filtering on `role` for many of these notifications it kind of made sense going first. I can change it but I won't do that unless you really want me to because I'm lazy.",
      "created_at": "2023-08-29T19:31:38Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309271332",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309271332"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 23,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309272443",
      "pull_request_review_id": 1600882627,
      "id": 1309272443,
      "node_id": "PRRC_kwDOABII585OCel7",
      "diff_hunk": "@@ -87,7 +88,7 @@ class CValidationInterface {\n      * but may not be called on every intermediate tip. If the latter behavior is desired,\n      * subscribe to BlockConnected() instead.\n      *\n-     * Called on a background thread.\n+     * Called on a background thread. Only called for the active chainstate.",
      "path": "src/validationinterface.h",
      "position": 13,
      "original_position": 13,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "2873d91ada1c240de280a35bbf169ed0c708e057",
      "in_reply_to_id": 1308032026,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-08-29T19:33:02Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309272443",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309272443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 91,
      "original_line": 91,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309274440",
      "pull_request_review_id": 1600882627,
      "id": 1309274440,
      "node_id": "PRRC_kwDOABII585OCfFI",
      "diff_hunk": "@@ -199,11 +205,11 @@ class CMainSignals {\n     void UpdatedBlockTip(const CBlockIndex *, const CBlockIndex *, bool fInitialDownload);\n     void TransactionAddedToMempool(const CTransactionRef&, uint64_t mempool_sequence);\n     void TransactionRemovedFromMempool(const CTransactionRef&, MemPoolRemovalReason, uint64_t mempool_sequence);\n-    void BlockConnected(const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex);\n+    void BlockConnected(const ChainstateRole, const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex);",
      "path": "src/validationinterface.h",
      "position": null,
      "original_position": 64,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "2873d91ada1c240de280a35bbf169ed0c708e057",
      "in_reply_to_id": 1308039060,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed. Just dumb muscle memory on my part.",
      "created_at": "2023-08-29T19:35:34Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309274440",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309274440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 208,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309281888",
      "pull_request_review_id": 1600882627,
      "id": 1309281888,
      "node_id": "PRRC_kwDOABII585OCg5g",
      "diff_hunk": "@@ -0,0 +1,7 @@\n+ZMQ",
      "path": "doc/release-notes-27596.md",
      "position": null,
      "original_position": 1,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b48729144fba1dbc64d603b2644a76c3f00d44eb",
      "in_reply_to_id": 1308042767,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-08-29T19:44:14Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309281888",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309281888"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309281932",
      "pull_request_review_id": 1600882627,
      "id": 1309281932,
      "node_id": "PRRC_kwDOABII585OCg6M",
      "diff_hunk": "@@ -144,7 +144,8 @@ void TryForEachAndRemoveFailed(std::list<std::unique_ptr<CZMQAbstractNotifier>>&\n \n void CZMQNotificationInterface::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n-    if (fInitialDownload || pindexNew == pindexFork) // In IBD or blocks were disconnected without any new ones\n+    // In IBD or blocks were disconnected without any new ones\n+    if (fInitialDownload || pindexNew == pindexFork)",
      "path": "src/zmq/zmqnotificationinterface.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b48729144fba1dbc64d603b2644a76c3f00d44eb",
      "in_reply_to_id": 1308047801,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-08-29T19:44:17Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309281932",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309281932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 148,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309289948",
      "pull_request_review_id": 1600882627,
      "id": 1309289948,
      "node_id": "PRRC_kwDOABII585OCi3c",
      "diff_hunk": "@@ -5838,3 +5848,9 @@ bool ChainstateManager::ValidatedSnapshotCleanup()\n     }\n     return true;\n }\n+\n+Chainstate& ChainstateManager::GetChainstateForIndexing()\n+{\n+    return (IsSnapshotActive() && !IsSnapshotValidated()) ?",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5d01151b41b244dabeda54122400df17a3dfc4d2",
      "in_reply_to_id": 1308071774,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We can't just return `m_ibd_chainstate` because we want the indexes to switch to the active (snapshot) chainstate once the background validation completes (but before a restart has happened). I'll make a note.",
      "created_at": "2023-08-29T19:53:38Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309289948",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309289948"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5854,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309291356",
      "pull_request_review_id": 1600882627,
      "id": 1309291356,
      "node_id": "PRRC_kwDOABII585OCjNc",
      "diff_hunk": "@@ -1473,6 +1473,26 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.chainman = std::make_unique<ChainstateManager>(node.kernel->interrupt, chainman_opts, blockman_opts);\n         ChainstateManager& chainman = *node.chainman;\n \n+        // This is defined and set here instead of inline in validation.h to avoid a hard\n+        // dependency between validation and index/base, since the latter is not in\n+        // libbitcoinkernel.\n+        chainman.restart_indexers = [](const ChainstateManager& chainman) {\n+            LogPrintf(\"[snapshot] restarting indexers\\n\");\n+\n+            // Drain the validation interface queue to ensure that the old indexers\n+            // don't have any pending work.\n+            SyncWithValidationInterfaceQueue();\n+\n+            for (auto* indexer : chainman.indexers) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5d01151b41b244dabeda54122400df17a3dfc4d2",
      "in_reply_to_id": 1308066452,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point! Fixed.",
      "created_at": "2023-08-29T19:55:20Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309291356",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309291356"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1486,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309291418",
      "pull_request_review_id": 1600882627,
      "id": 1309291418,
      "node_id": "PRRC_kwDOABII585OCjOa",
      "diff_hunk": "@@ -1473,6 +1473,26 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.chainman = std::make_unique<ChainstateManager>(node.kernel->interrupt, chainman_opts, blockman_opts);\n         ChainstateManager& chainman = *node.chainman;\n \n+        // This is defined and set here instead of inline in validation.h to avoid a hard\n+        // dependency between validation and index/base, since the latter is not in\n+        // libbitcoinkernel.\n+        chainman.restart_indexers = [](const ChainstateManager& chainman) {\n+            LogPrintf(\"[snapshot] restarting indexers\\n\");",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5d01151b41b244dabeda54122400df17a3dfc4d2",
      "in_reply_to_id": 1308066973,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-08-29T19:55:24Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309291418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309291418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1480,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309294877",
      "pull_request_review_id": 1600882627,
      "id": 1309294877,
      "node_id": "PRRC_kwDOABII585OCkEd",
      "diff_hunk": "@@ -909,6 +910,8 @@ class ChainstateManager\n \n     explicit ChainstateManager(const util::SignalInterrupt& interrupt, Options options, node::BlockManager::Options blockman_options);\n \n+    std::vector<BaseIndex*> indexers{};",
      "path": "src/validation.h",
      "position": null,
      "original_position": 12,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "688b68f34fe061c3064a516cdf77d4c155bfcafd",
      "in_reply_to_id": 1308053648,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is resolved after removing `ChainstateManager.indexers`.",
      "created_at": "2023-08-29T19:59:12Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309294877",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309294877"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 913,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309295887",
      "pull_request_review_id": 1600882627,
      "id": 1309295887,
      "node_id": "PRRC_kwDOABII585OCkUP",
      "diff_hunk": "@@ -911,6 +911,10 @@ class ChainstateManager\n     explicit ChainstateManager(const util::SignalInterrupt& interrupt, Options options, node::BlockManager::Options blockman_options);\n \n     std::vector<BaseIndex*> indexers{};\n+    //! Function to restart active indexers; set dynamically to avoid a circular\n+    //! dependency on `base/index.cpp`.\n+    std::function<void(const ChainstateManager&)> restart_indexers =",
      "path": "src/validation.h",
      "position": null,
      "original_position": 6,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5d01151b41b244dabeda54122400df17a3dfc4d2",
      "in_reply_to_id": 1308070723,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-08-29T20:00:22Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309295887",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309295887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 916,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309300988",
      "pull_request_review_id": 1600882627,
      "id": 1309300988,
      "node_id": "PRRC_kwDOABII585OClj8",
      "diff_hunk": "@@ -5854,3 +5863,40 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     return (IsSnapshotActive() && !IsSnapshotValidated()) ?\n         *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<unsigned int, unsigned int> ChainstateManager::GetPruneRange(\n+    const Chainstate& chainstate, unsigned int prune_height)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};",
      "path": "src/validation.cpp",
      "position": 442,
      "original_position": 39,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": 1308085308,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.\r\n\r\nEdit: Initializing `prune_start` to 1 prevents the pruning of the blockfile with block height=0 in it, which causes the `feature_pruning.py` functional test to fail, so I'm keeping that part as-is.",
      "created_at": "2023-08-29T20:05:49Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309300988",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309300988"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5991,
      "original_line": 5991,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309303935",
      "pull_request_review_id": 1600882627,
      "id": 1309303935,
      "node_id": "PRRC_kwDOABII585OCmR_",
      "diff_hunk": "@@ -5854,3 +5863,40 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     return (IsSnapshotActive() && !IsSnapshotValidated()) ?\n         *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<unsigned int, unsigned int> ChainstateManager::GetPruneRange(\n+    const Chainstate& chainstate, unsigned int prune_height)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};\n+    }\n+    unsigned int prune_start{0};\n+\n+    if (this->GetAll().size() > 1) {\n+        std::optional<int> snapshot_height{GetSnapshotBaseHeight()};",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 44,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": 1308075373,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, fixed.",
      "created_at": "2023-08-29T20:09:13Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309303935",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309303935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5876,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309313670",
      "pull_request_review_id": 1600882627,
      "id": 1309313670,
      "node_id": "PRRC_kwDOABII585OCoqG",
      "diff_hunk": "@@ -153,31 +158,54 @@ void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nM\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    unsigned int min_block_to_prune;\n+    unsigned int nLastBlockWeCanPrune;\n+\n+    std::tie(min_block_to_prune, nLastBlockWeCanPrune) = chainman.GetPruneRange(\n+        chain, chain_tip_height);\n+\n+    nLastBlockWeCanPrune = std::min(nLastBlockWeCanPrune, (unsigned)nManualPruneHeight);\n+\n     int count = 0;\n     for (int fileNumber = 0; fileNumber < m_last_blockfile; fileNumber++) {\n-        if (m_blockfile_info[fileNumber].nSize == 0 || m_blockfile_info[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n+        const auto& fileinfo = m_blockfile_info[fileNumber];\n+        if (fileinfo.nSize == 0 || fileinfo.nHeightLast > nLastBlockWeCanPrune || fileinfo.nHeightFirst < min_block_to_prune) {\n             continue;\n         }\n+\n         PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n-    LogPrintf(\"Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\", nLastBlockWeCanPrune, count);\n+    LogPrintf(\"[%s] Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\",\n+        chain.GetRole(), nLastBlockWeCanPrune, count);\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(\n+    std::set<int>& setFilesToPrune,\n+    uint64_t nPruneAfterHeight,\n+    int chain_tip_height,\n+    int prune_height,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0 || GetPruneTarget() == 0) {\n+    // Distribute our -prune budget over all chainstates.\n+    const auto target = GetPruneTarget() / chainman.GetAll().size();",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9e2b8ef836aeb1dc2e4b57449fc56badebea6772",
      "in_reply_to_id": 1291649621,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point @ryanofsky. I'm taking your first recommendation here because doubling the prune budget in all cases feels excessive to me.\r\n\r\nI've added release notes describing this issue.\r\n",
      "created_at": "2023-08-29T20:19:44Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309313670",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309313670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309314011",
      "pull_request_review_id": 1600882627,
      "id": 1309314011,
      "node_id": "PRRC_kwDOABII585OCovb",
      "diff_hunk": "@@ -153,31 +158,54 @@ void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nM\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    unsigned int min_block_to_prune;\n+    unsigned int nLastBlockWeCanPrune;\n+\n+    std::tie(min_block_to_prune, nLastBlockWeCanPrune) = chainman.GetPruneRange(\n+        chain, chain_tip_height);\n+\n+    nLastBlockWeCanPrune = std::min(nLastBlockWeCanPrune, (unsigned)nManualPruneHeight);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": 1308119179,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-08-29T20:20:06Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309314011",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309314011"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 167,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309318603",
      "pull_request_review_id": 1600882627,
      "id": 1309318603,
      "node_id": "PRRC_kwDOABII585OCp3L",
      "diff_hunk": "@@ -122,7 +128,13 @@ class BlockManager\n      *\n      * @param[out]   setFilesToPrune   The set of file indices that can be unlinked will be returned\n      */\n-    void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd);\n+    void FindFilesToPrune(\n+        std::set<int>& setFilesToPrune,\n+        uint64_t nPruneAfterHeight,\n+        int chain_tip_height,\n+        int prune_height,",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 31,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": 1308104549,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2023-08-29T20:25:28Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309318603",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309318603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 134,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 135,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309320282",
      "pull_request_review_id": 1600882627,
      "id": 1309320282,
      "node_id": "PRRC_kwDOABII585OCqRa",
      "diff_hunk": "@@ -2474,11 +2475,19 @@ bool Chainstate::FlushStateToDisk(\n             if (nManualPruneHeight > 0) {\n                 LOG_TIME_MILLIS_WITH_CATEGORY(\"find files to prune (manual)\", BCLog::BENCH);\n \n-                m_blockman.FindFilesToPruneManual(setFilesToPrune, std::min(last_prune, nManualPruneHeight), m_chain.Height());\n+                m_blockman.FindFilesToPruneManual(\n+                    setFilesToPrune,\n+                    std::min(last_prune, nManualPruneHeight),\n+                    m_chain.Height(),",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": 1308096895,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2023-08-29T20:27:23Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309320282",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309320282"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2481,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309320508",
      "pull_request_review_id": 1600882627,
      "id": 1309320508,
      "node_id": "PRRC_kwDOABII585OCqU8",
      "diff_hunk": "@@ -5854,3 +5863,40 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     return (IsSnapshotActive() && !IsSnapshotValidated()) ?\n         *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<unsigned int, unsigned int> ChainstateManager::GetPruneRange(\n+    const Chainstate& chainstate, unsigned int prune_height)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};\n+    }\n+    unsigned int prune_start{0};\n+\n+    if (this->GetAll().size() > 1) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": 1308076179,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2023-08-29T20:27:38Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309320508",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309320508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5875,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309332220",
      "pull_request_review_id": 1600882627,
      "id": 1309332220,
      "node_id": "PRRC_kwDOABII585OCtL8",
      "diff_hunk": "@@ -5854,3 +5863,40 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     return (IsSnapshotActive() && !IsSnapshotValidated()) ?\n         *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<unsigned int, unsigned int> ChainstateManager::GetPruneRange(\n+    const Chainstate& chainstate, unsigned int prune_height)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};\n+    }\n+    unsigned int prune_start{0};\n+\n+    if (this->GetAll().size() > 1) {\n+        std::optional<int> snapshot_height{GetSnapshotBaseHeight()};\n+\n+        // Leave the blocks in the background IBD chain alone if we're pruning\n+        // the snapshot chain.\n+        if (&chainstate == m_snapshot_chainstate.get() && snapshot_height) {\n+            prune_start = *snapshot_height + 1;\n+        }\n+    }\n+\n+    unsigned int prune_end{0};\n+    unsigned int chain_height{static_cast<unsigned int>(chainstate.m_chain.Height())};\n+\n+    if (MIN_BLOCKS_TO_KEEP > chain_height) {\n+        // Prevent underflow.\n+        prune_end = 0;\n+    } else {\n+        // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n+        //\n+        // While you might be tempted to prune the background chainstate more\n+        // aggressively (i.e. fewer MIN_BLOCKS_TO_KEEP), this won't work with index\n+        // building - specifically blockfilterindex requires undo data, and if\n+        // we don't maintain this trailing window, we hit indexation failures.\n+        prune_end = std::min(prune_height, chain_height - MIN_BLOCKS_TO_KEEP);\n+    }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": 1308128467,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-08-29T20:40:33Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309332220",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309332220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 5888,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5899,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309332321",
      "pull_request_review_id": 1600882627,
      "id": 1309332321,
      "node_id": "PRRC_kwDOABII585OCtNh",
      "diff_hunk": "@@ -1248,6 +1244,17 @@ class ChainstateManager\n     //!   fully validated chain.\n     Chainstate& GetChainstateForIndexing() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Return the [start, end] (inclusive) of block heights we can prune.",
      "path": "src/validation.h",
      "position": 112,
      "original_position": 15,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": 1308108294,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-08-29T20:40:40Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309332321",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309332321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1239,
      "original_line": 1239,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309332387",
      "pull_request_review_id": 1600882627,
      "id": 1309332387,
      "node_id": "PRRC_kwDOABII585OCtOj",
      "diff_hunk": "@@ -1248,6 +1244,17 @@ class ChainstateManager\n     //!   fully validated chain.\n     Chainstate& GetChainstateForIndexing() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Return the [start, end] (inclusive) of block heights we can prune.\n+    //!\n+    //! If we're pruning the snapshot chainstate, be sure not to\n+    //! prune blocks being used by the background chainstate.\n+    std::pair<unsigned int, unsigned int> GetPruneRange(",
      "path": "src/validation.h",
      "position": null,
      "original_position": 19,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b9ac4f7925e2d9dec67be06fdc2a381532581136",
      "in_reply_to_id": 1308082844,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-08-29T20:40:44Z",
      "updated_at": "2023-08-29T21:44:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309332387",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1309332387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310404663",
      "pull_request_review_id": 1602900172,
      "id": 1310404663,
      "node_id": "PRRC_kwDOABII585OGzA3",
      "diff_hunk": "@@ -5864,3 +5871,29 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     // indexed.\n     return (this->GetAll().size() > 1) ? *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<int, int> ChainstateManager::GetPruneRange(const Chainstate& chainstate, int last_height_can_prune)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};\n+    }\n+    int prune_start{0};\n+\n+    if (this->GetAll().size() > 1 && m_snapshot_chainstate.get() == &chainstate) {\n+        // Leave the blocks in the background IBD chain alone if we're pruning\n+        // the snapshot chain.\n+        prune_start = *Assert(GetSnapshotBaseHeight()) + 1;\n+    }\n+\n+    int max_prune = chainstate.m_chain.Height() - static_cast<int>(MIN_BLOCKS_TO_KEEP);\n+\n+    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5e4c824433fb4bf8b380d0f61a0aa424dc5456d4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (5e4c824433fb4bf8b380d0f61a0aa424dc5456d4)\r\n\r\nWould s/user-specified/caller-specified/. In the manual pruning case it is actually user-specified, but in the automatic case it depends on prune locks.",
      "created_at": "2023-08-30T14:51:31Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310404663",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310404663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5890,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310410195",
      "pull_request_review_id": 1602900172,
      "id": 1310410195,
      "node_id": "PRRC_kwDOABII585OG0XT",
      "diff_hunk": "@@ -144,40 +144,58 @@ void BlockManager::PruneOneBlockFile(const int fileNumber)\n     m_dirty_fileinfo.insert(fileNumber);\n }\n \n-void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height)\n+void BlockManager::FindFilesToPruneManual(\n+    std::set<int>& setFilesToPrune,\n+    int nManualPruneHeight,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     assert(IsPruneMode() && nManualPruneHeight > 0);\n \n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0) {\n+    if (chain.m_chain.Height() < 0) {\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);",
      "path": "src/node/blockstorage.cpp",
      "position": 28,
      "original_position": 20,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5e4c824433fb4bf8b380d0f61a0aa424dc5456d4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (5e4c824433fb4bf8b380d0f61a0aa424dc5456d4)\r\n\r\nIt looks like there was an overflow bug here previously which is fixed now? If chain_tip_height was less than MIN_BLOCKS_TO_KEEP, that would overflow and produce a large unsigned integer, so it would have been possible to manually prune chain data very close to the tip which the chain height was low previously, IIUC",
      "created_at": "2023-08-30T14:55:17Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310410195",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310410195"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 270,
      "original_line": 270,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310423116",
      "pull_request_review_id": 1602900172,
      "id": 1310423116,
      "node_id": "PRRC_kwDOABII585OG3hM",
      "diff_hunk": "@@ -144,40 +144,58 @@ void BlockManager::PruneOneBlockFile(const int fileNumber)\n     m_dirty_fileinfo.insert(fileNumber);\n }\n \n-void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height)\n+void BlockManager::FindFilesToPruneManual(\n+    std::set<int>& setFilesToPrune,\n+    int nManualPruneHeight,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     assert(IsPruneMode() && nManualPruneHeight > 0);\n \n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0) {\n+    if (chain.m_chain.Height() < 0) {\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    const auto [min_block_to_prune, last_block_can_prune] = chainman.GetPruneRange(chain, nManualPruneHeight);\n+\n     int count = 0;\n     for (int fileNumber = 0; fileNumber < m_last_blockfile; fileNumber++) {\n-        if (m_blockfile_info[fileNumber].nSize == 0 || m_blockfile_info[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n+        const auto& fileinfo = m_blockfile_info[fileNumber];\n+        if (fileinfo.nSize == 0 || fileinfo.nHeightLast > (unsigned)last_block_can_prune || fileinfo.nHeightFirst < (unsigned)min_block_to_prune) {\n             continue;\n         }\n+\n         PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n-    LogPrintf(\"Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\", nLastBlockWeCanPrune, count);\n+    LogPrintf(\"[%s] Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\",\n+        chain.GetRole(), last_block_can_prune, count);\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(\n+    std::set<int>& setFilesToPrune,\n+    uint64_t nPruneAfterHeight,\n+    int last_prune,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0 || GetPruneTarget() == 0) {\n+    // Distribute our -prune budget over all chainstates.\n+    const auto target = std::max(\n+        MIN_DISK_SPACE_FOR_BLOCK_FILES, GetPruneTarget() / chainman.GetAll().size());\n+\n+    int height = chain.m_chain.Height();\n+    if (height < 0 || target == 0) {\n         return;\n     }\n-    if ((uint64_t)chain_tip_height <= nPruneAfterHeight) {\n+    if ((uint64_t)height <= nPruneAfterHeight) {",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5e4c824433fb4bf8b380d0f61a0aa424dc5456d4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (5e4c824433fb4bf8b380d0f61a0aa424dc5456d4)\r\n\r\nI think it would simplify the code more to drop the nPruneAfterHeight parameter and replace it directly with `_chainman.GetParams().PruneAfterHeight()` to make it obvious this is a hardcoded parameter.\r\n\r\nAlso maybe replace the C cast with a static cast if this line is changing anyway.",
      "created_at": "2023-08-30T15:03:57Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310423116",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310423116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310432926",
      "pull_request_review_id": 1602900172,
      "id": 1310432926,
      "node_id": "PRRC_kwDOABII585OG56e",
      "diff_hunk": "@@ -144,40 +144,58 @@ void BlockManager::PruneOneBlockFile(const int fileNumber)\n     m_dirty_fileinfo.insert(fileNumber);\n }\n \n-void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height)\n+void BlockManager::FindFilesToPruneManual(\n+    std::set<int>& setFilesToPrune,\n+    int nManualPruneHeight,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     assert(IsPruneMode() && nManualPruneHeight > 0);\n \n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0) {\n+    if (chain.m_chain.Height() < 0) {\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    const auto [min_block_to_prune, last_block_can_prune] = chainman.GetPruneRange(chain, nManualPruneHeight);\n+\n     int count = 0;\n     for (int fileNumber = 0; fileNumber < m_last_blockfile; fileNumber++) {\n-        if (m_blockfile_info[fileNumber].nSize == 0 || m_blockfile_info[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n+        const auto& fileinfo = m_blockfile_info[fileNumber];\n+        if (fileinfo.nSize == 0 || fileinfo.nHeightLast > (unsigned)last_block_can_prune || fileinfo.nHeightFirst < (unsigned)min_block_to_prune) {\n             continue;\n         }\n+\n         PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n-    LogPrintf(\"Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\", nLastBlockWeCanPrune, count);\n+    LogPrintf(\"[%s] Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\",\n+        chain.GetRole(), last_block_can_prune, count);\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(\n+    std::set<int>& setFilesToPrune,\n+    uint64_t nPruneAfterHeight,\n+    int last_prune,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0 || GetPruneTarget() == 0) {\n+    // Distribute our -prune budget over all chainstates.\n+    const auto target = std::max(\n+        MIN_DISK_SPACE_FOR_BLOCK_FILES, GetPruneTarget() / chainman.GetAll().size());\n+\n+    int height = chain.m_chain.Height();",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5e4c824433fb4bf8b380d0f61a0aa424dc5456d4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (5e4c824433fb4bf8b380d0f61a0aa424dc5456d4)\r\n\r\nSuggest keeping the name \"chain_tip_height\" instead of \"height\" for this variable. There are a lot of heights in this function so easy to forget what the the generic \"height\" is.",
      "created_at": "2023-08-30T15:10:35Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310432926",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310432926"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310435694",
      "pull_request_review_id": 1602900172,
      "id": 1310435694,
      "node_id": "PRRC_kwDOABII585OG6lu",
      "diff_hunk": "@@ -5864,3 +5871,29 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     // indexed.\n     return (this->GetAll().size() > 1) ? *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<int, int> ChainstateManager::GetPruneRange(const Chainstate& chainstate, int last_height_can_prune)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};\n+    }\n+    int prune_start{0};\n+\n+    if (this->GetAll().size() > 1 && m_snapshot_chainstate.get() == &chainstate) {\n+        // Leave the blocks in the background IBD chain alone if we're pruning\n+        // the snapshot chain.\n+        prune_start = *Assert(GetSnapshotBaseHeight()) + 1;\n+    }\n+\n+    int max_prune = chainstate.m_chain.Height() - static_cast<int>(MIN_BLOCKS_TO_KEEP);\n+\n+    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n+    //\n+    // While you might be tempted to prune the background chainstate more\n+    // aggressively (i.e. fewer MIN_BLOCKS_TO_KEEP), this won't work with index\n+    // building - specifically blockfilterindex requires undo data, and if\n+    // we don't maintain this trailing window, we hit indexation failures.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5e4c824433fb4bf8b380d0f61a0aa424dc5456d4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (5e4c824433fb4bf8b380d0f61a0aa424dc5456d4)\r\n\r\nLast remaining s/indexation/indexing/",
      "created_at": "2023-08-30T15:12:29Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310435694",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310435694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5895,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310871911",
      "pull_request_review_id": 1602900172,
      "id": 1310871911,
      "node_id": "PRRC_kwDOABII585OIlFn",
      "diff_hunk": "@@ -76,16 +71,21 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\n     Chainstate& c2 = WITH_LOCK(::cs_main, return manager.ActivateExistingSnapshot(\n         &mempool, snapshot_blockhash));\n     chainstates.push_back(&c2);\n-\n-    BOOST_CHECK_EQUAL(manager.SnapshotBlockhash().value(), snapshot_blockhash);\n-\n     c2.InitCoinsDB(\n         /*cache_size_bytes=*/1 << 23, /*in_memory=*/true, /*should_wipe=*/false);\n-    WITH_LOCK(::cs_main, c2.InitCoinsCache(1 << 23));\n-    c2.m_chain.SetTip(*active_tip);\n+    {\n+        LOCK(::cs_main);\n+        c2.InitCoinsCache(1 << 23);\n+        c2.m_chain.SetTip(*active_tip);\n+        c2.CoinsTip().SetBestBlock(active_tip->GetBlockHash());\n+        c2.setBlockIndexCandidates.insert(manager.m_blockman.LookupBlockIndex(active_tip->GetBlockHash()));\n+        c2.LoadChainTip();\n+    }\n     BlockValidationState _;\n     BOOST_CHECK(c2.ActivateBestChain(_, nullptr));\n \n+    BOOST_CHECK_EQUAL(manager.SnapshotBlockhash().value(), snapshot_blockhash);\n+    BOOST_CHECK(c2.ActivateBestChain(_));",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "76d616c957522e7be52eaf10b3ac33accaf75c45",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: adjust chainstate tests to use recognized snapshot base\" (76d616c957522e7be52eaf10b3ac33accaf75c45)\r\n\r\nSeems pointless to call ActivateBestChain twice in a row here. Would be good to remove this line and simplify test setup or add a comment explaining why this is necessary.",
      "created_at": "2023-08-30T21:55:44Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310871911",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310871911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310877098",
      "pull_request_review_id": 1602900172,
      "id": 1310877098,
      "node_id": "PRRC_kwDOABII585OImWq",
      "diff_hunk": "@@ -76,16 +71,21 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\n     Chainstate& c2 = WITH_LOCK(::cs_main, return manager.ActivateExistingSnapshot(\n         &mempool, snapshot_blockhash));\n     chainstates.push_back(&c2);\n-\n-    BOOST_CHECK_EQUAL(manager.SnapshotBlockhash().value(), snapshot_blockhash);\n-\n     c2.InitCoinsDB(\n         /*cache_size_bytes=*/1 << 23, /*in_memory=*/true, /*should_wipe=*/false);\n-    WITH_LOCK(::cs_main, c2.InitCoinsCache(1 << 23));\n-    c2.m_chain.SetTip(*active_tip);\n+    {\n+        LOCK(::cs_main);\n+        c2.InitCoinsCache(1 << 23);\n+        c2.m_chain.SetTip(*active_tip);",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "76d616c957522e7be52eaf10b3ac33accaf75c45",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: adjust chainstate tests to use recognized snapshot base\" (76d616c957522e7be52eaf10b3ac33accaf75c45)\r\n\r\nThis SetTip call seems pointless now because the LoadChainTip call below will overwrite the chain tip. Would suggest removing this line or adding more explanation in a comment.",
      "created_at": "2023-08-30T22:01:46Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310877098",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310877098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310888128",
      "pull_request_review_id": 1602900172,
      "id": 1310888128,
      "node_id": "PRRC_kwDOABII585OIpDA",
      "diff_hunk": "@@ -96,14 +96,15 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\n     auto& active_chain2 = WITH_LOCK(manager.GetMutex(), return manager.ActiveChain());\n     BOOST_CHECK_EQUAL(&active_chain2, &c2.m_chain);\n \n-    BOOST_CHECK_EQUAL(WITH_LOCK(manager.GetMutex(), return manager.ActiveHeight()), 0);\n+    BOOST_CHECK_EQUAL(WITH_LOCK(manager.GetMutex(), return manager.ActiveHeight()), 110);\n+    mineBlocks(1);\n+    BOOST_CHECK_EQUAL(WITH_LOCK(manager.GetMutex(), return manager.ActiveHeight()), 111);\n+    BOOST_CHECK_EQUAL(WITH_LOCK(manager.GetMutex(), return c1.m_chain.Height()), 110);\n \n     auto active_tip2 = WITH_LOCK(manager.GetMutex(), return manager.ActiveTip());\n     auto exp_tip2 = c2.m_chain.Tip();\n     BOOST_CHECK_EQUAL(active_tip2, exp_tip2);\n \n-    BOOST_CHECK_EQUAL(exp_tip, exp_tip2);",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": 89,
      "original_position": 84,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "76d616c957522e7be52eaf10b3ac33accaf75c45",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: adjust chainstate tests to use recognized snapshot base\" (76d616c957522e7be52eaf10b3ac33accaf75c45)\r\n\r\nI think it would be good to clarify this code and verify both tips are set correctly at the end of the test.\r\n\r\nWould suggest:\r\n\r\n```diff\r\n-    auto exp_tip2 = c2.m_chain.Tip();\r\n-    BOOST_CHECK_EQUAL(active_tip2, exp_tip2);\r\n+    BOOST_CHECK_EQUAL(active_tip, active_tip2->pprev);\r\n+    BOOST_CHECK_EQUAL(active_tip, c1.m_chain.Tip());\r\n+    BOOST_CHECK_EQUAL(active_tip2, c2.m_chain.Tip());\r\n```",
      "created_at": "2023-08-30T22:14:51Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310888128",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310888128"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 106,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310901739",
      "pull_request_review_id": 1602900172,
      "id": 1310901739,
      "node_id": "PRRC_kwDOABII585OIsXr",
      "diff_hunk": "@@ -488,13 +490,13 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n \n     // Note: cs2's tip is not set when ActivateExistingSnapshot is called.\n     Chainstate& cs2 = WITH_LOCK(::cs_main,\n-        return chainman.ActivateExistingSnapshot(&mempool, *assumed_base->phashBlock));\n+        return chainman.ActivateExistingSnapshot(&mempool, *assumed_tip->phashBlock));",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 131,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "76d616c957522e7be52eaf10b3ac33accaf75c45",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: adjust chainstate tests to use recognized snapshot base\" (76d616c957522e7be52eaf10b3ac33accaf75c45)\r\n\r\nWhat is going on here and in on line 499 below? It seems strange to advance the snapshot chain all the way to the chain tip if the point of the test below is to make sure setBlockIndexCandidates is initialized correctly after loading the snapshot, and setBlockIndexCandidates is supposed to be use to work towards the chain tip.\r\n\r\nAlso changing assumed_base to assumed_tip here and below seems contrary to the comments \"Set tip of the assume-valid-based chain to the assume-valid block\"\r\n\r\nIf I revert the changes this line and on line 499 the test still passes as of b6b62a96bd6d1eccaf6bd9eadfa1c60232aadeed, so I think they may be unnecessary",
      "created_at": "2023-08-30T22:33:55Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310901739",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310901739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 493,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310947552",
      "pull_request_review_id": 1602900172,
      "id": 1310947552,
      "node_id": "PRRC_kwDOABII585OI3jg",
      "diff_hunk": "@@ -290,7 +290,13 @@ bool BlockManager::LoadBlockIndex()\n         // Pruned nodes may have deleted the block.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->nChainTx > 0) {\n+                if (snapshot_blockhash && pindex->GetBlockHash() == *snapshot_blockhash) {",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9df91113b8bbab8c98924bef61da388a8141b4e6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: populate nChainTx value for assumedvalid chainstates\" (9df91113b8bbab8c98924bef61da388a8141b4e6)\r\n\r\nIt seems like this might be broken if a user loaded a snapshot and then quit before the snapshot block was successfully downloaded. In this case I think `pindex->nTx` for the snapshot block on line 291 would be 0 so the new code would not run.\r\n\r\nA good way to fix this might be to add something like `if (snapshot_blockhash) LookupBlockIndex(hash)->nChainTx = AssumeutxoForBlockhash(*snapshot_blockhash)` right after the LoadBlockIndexGuts call, before the for-loop.\r\n\r\nThe other advantage setting `nChainTx` before the for-loop would be that the for-loop can remain simpler and unchanged, and also be more efficient because it will no longer be need to compare `pindex->GetBlockHash() == *snapshot_blockhash)` for each block.\r\n\r\n\r\n",
      "created_at": "2023-08-30T23:38:38Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310947552",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310947552"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310950827",
      "pull_request_review_id": 1602900172,
      "id": 1310950827,
      "node_id": "PRRC_kwDOABII585OI4Wr",
      "diff_hunk": "@@ -4765,6 +4765,10 @@ void ChainstateManager::CheckBlockIndex()\n     CBlockIndex* pindexFirstAssumeValid = nullptr; // Oldest ancestor of pindex which has BLOCK_ASSUMED_VALID\n     while (pindex != nullptr) {\n         nNodes++;\n+        if (pindex->pprev && pindex->nTx > 0) {\n+            // nChainTx should increase monotonically\n+            assert(pindex->pprev->nChainTx <= pindex->nChainTx);",
      "path": "src/validation.cpp",
      "position": 175,
      "original_position": 15,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9df91113b8bbab8c98924bef61da388a8141b4e6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: populate nChainTx value for assumedvalid chainstates\" (9df91113b8bbab8c98924bef61da388a8141b4e6)\r\n\r\nCould you assert not that just that it increases monotonically, but that it increases by the number of transactions?\r\n\r\n```c++\r\n assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\r\n```\r\n\r\nOr maybe add a comment if there's a special case where this does not hold.",
      "created_at": "2023-08-30T23:44:37Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310950827",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310950827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4843,
      "original_line": 4843,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310965708",
      "pull_request_review_id": 1602900172,
      "id": 1310965708,
      "node_id": "PRRC_kwDOABII585OI7_M",
      "diff_hunk": "@@ -680,13 +753,14 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\n         pos.nPos = m_blockfile_info[nFile].nSize;\n     }\n \n-    if ((int)nFile != m_last_blockfile) {\n+    if (nFile != last_blockfile) {\n         if (!fKnown) {\n-            LogPrint(BCLog::BLOCKSTORAGE, \"Leaving block file %i: %s\\n\", m_last_blockfile, m_blockfile_info[m_last_blockfile].ToString());\n+            LogPrint(BCLog::BLOCKSTORAGE, \"Leaving block file %i: %s (onto %i) (height %i)\\n\",\n+                m_last_blockfile, m_blockfile_info[last_blockfile].ToString(), nFile, nHeight);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 217,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: assumeutxo: swap m_mempool on snapshot activation\" (f2dd7a0c1b67d3e4a6e086a619eff34fe6625263)\r\n\r\nThis is still referencing ` m_last_blockfile` instead of `last_blockfile`, which does not make sense. I think it would be a good idea to remove the ` m_last_blockfile` member because this appears to be the only remaining usage.",
      "created_at": "2023-08-31T00:12:41Z",
      "updated_at": "2023-08-31T02:22:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310965708",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310965708"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310971801",
      "pull_request_review_id": 1602900172,
      "id": 1310971801,
      "node_id": "PRRC_kwDOABII585OI9eZ",
      "diff_hunk": "@@ -70,6 +71,30 @@ struct PruneLockInfo {\n     int height_first{std::numeric_limits<int>::max()}; //! Height of earliest block that should be kept and not pruned\n };\n \n+enum class BlockfileType {\n+    // For the purposes of blockfile fragmentation, treat background IBD chainstates\n+    // as normal.\n+    NORMAL,\n+    ASSUMED,\n+};\n+\n+std::ostream& operator<<(std::ostream& os, const BlockfileType& type);\n+\n+struct BlockfileCursor {\n+    // The latest blockfile number.\n+    int file_num{0};\n+\n+    // Track the largest height block whose undo data is in `file_num` blockfile.\n+    // When we move to the next blockfile, if the undo data is keeping up then\n+    // we know we can trim the size of the file and truncate any excess\n+    // allocations. If not, we assume that eventually we'll add more undo data\n+    // to this file, and when we revisit it we'll trim it then.\n+    int undo_height{0};",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 30,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (1c668b690eeb4b98899be7e0ff33373b79932f2a)\r\n\r\nThis comment appears to be copied from an old version of PR #27746 (commit 6b5b53eafefa38250bb4e5d914e5ad5743416563) that was updated later. The final version of the #27746 had a more complete comment which can be found on line 178 below documenting the `m_undo_height_in_last_blockfile` member.\r\n\r\nI think to avoid confusion and bugs it's pretty important to delete the `m_last_blockfile` and `m_undo_height_in_last_blockfile` members below fully replace them with new members in this struct and move the latest `m_undo_height_in_last_blockfile` comment over here. I also do think the old names `last_blockfile` and `undo_height_in_last_blockfile` are more descriptive than the new names `file_num` and `undo_height`, but I guess there was some reasoning for changing them, so not sure about that.",
      "created_at": "2023-08-31T00:27:40Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310971801",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310971801"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 87,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310979704",
      "pull_request_review_id": 1602900172,
      "id": 1310979704,
      "node_id": "PRRC_kwDOABII585OI_Z4",
      "diff_hunk": "@@ -70,6 +71,30 @@ struct PruneLockInfo {\n     int height_first{std::numeric_limits<int>::max()}; //! Height of earliest block that should be kept and not pruned\n };\n \n+enum class BlockfileType {\n+    // For the purposes of blockfile fragmentation, treat background IBD chainstates\n+    // as normal.",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 14,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (1c668b690eeb4b98899be7e0ff33373b79932f2a)\r\n\r\nI think it would make sense to move this comment to the `BlockfileTypeForRole` function. The comment seems out of context here since the enum isn't used yet here and the purpose isn't described until the `m_blockfile_cursors` comment 100 lines below.\r\n\r\n",
      "created_at": "2023-08-31T00:46:53Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310979704",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310979704"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 75,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310985324",
      "pull_request_review_id": 1602900172,
      "id": 1310985324,
      "node_id": "PRRC_kwDOABII585OJAxs",
      "diff_hunk": "@@ -377,6 +380,42 @@ bool BlockManager::LoadBlockIndexDB(const std::optional<uint256>& snapshot_block\n         }\n     }\n \n+    std::optional<unsigned int> snapshot_base_height{std::nullopt};\n+    if (snapshot_blockhash) {\n+        const auto au_data = GetParams().AssumeutxoForBlockhash(*snapshot_blockhash);\n+        snapshot_base_height = Assert(au_data)->height;\n+    }\n+\n+    {\n+        // Initialize the blockfile cursors.\n+        LOCK(cs_LastBlockFile);\n+        for (size_t i = 0; i < m_blockfile_info.size(); ++i) {\n+            const auto& fileinfo = m_blockfile_info[i];\n+            BlockfileType blockfile_type{BlockfileType::NORMAL};\n+\n+            // If we have a snapshot and the last height tracked by this blockfile\n+            // is in the chain region above the snapshot, updated the ASSUMED cursor.\n+            if (snapshot_base_height && fileinfo.nHeightLast > *snapshot_base_height) {\n+                blockfile_type = BlockfileType::ASSUMED;\n+            }\n+            m_blockfile_cursors[blockfile_type] = {static_cast<int>(i), 0};\n+            LogPrint(BCLog::BLOCKSTORAGE, \"Set blockfile cursor %s to %i\\n\",\n+                blockfile_type, *m_blockfile_cursors[blockfile_type]);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (1c668b690eeb4b98899be7e0ff33373b79932f2a)\r\n\r\nThis seems like it is going to create log spam if it is printing an intermediate cursor value for each block file on disk. I think it would make more sense just to print two final NORMAL and ASSUMED last file numbers after the loop, than all the intermediate last file numbers during the loop.",
      "created_at": "2023-08-31T01:00:23Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310985324",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310985324"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 402,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310990937",
      "pull_request_review_id": 1602900172,
      "id": 1310990937,
      "node_id": "PRRC_kwDOABII585OJCJZ",
      "diff_hunk": "@@ -583,15 +623,30 @@ void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n         // have populated `m_blockfile_info` via LoadBlockIndexDB().\n         return;\n     }\n-    assert(static_cast<int>(m_blockfile_info.size()) > m_last_blockfile);\n+    assert(static_cast<int>(m_blockfile_info.size()) > blockfile_num);\n \n-    FlatFilePos block_pos_old(m_last_blockfile, m_blockfile_info[m_last_blockfile].nSize);\n+    FlatFilePos block_pos_old(blockfile_num, m_blockfile_info[blockfile_num].nSize);\n     if (!BlockFileSeq().Flush(block_pos_old, fFinalize)) {\n         m_opts.notifications.flushError(\"Flushing block file to disk failed. This is likely the result of an I/O error.\");\n     }\n     // we do not always flush the undo file, as the chain tip may be lagging behind the incoming blocks,\n     // e.g. during IBD or a sync after a node going offline\n-    if (!fFinalize || finalize_undo) FlushUndoFile(m_last_blockfile, finalize_undo);\n+    if (!fFinalize || finalize_undo) FlushUndoFile(blockfile_num, finalize_undo);\n+}\n+\n+static BlockfileType BlockfileTypeForRole(ChainstateRole chainstate_role)\n+{\n+    return chainstate_role == ChainstateRole::ASSUMEDVALID ?\n+        BlockfileType::ASSUMED : BlockfileType::NORMAL;\n+}\n+\n+void BlockManager::FlushChainstateBlockFile(ChainstateRole chainstate_role, bool finalize, bool finalize_undo)\n+{\n+    LOCK(cs_LastBlockFile);\n+    auto& cursor = m_blockfile_cursors[BlockfileTypeForRole(chainstate_role)];\n+    if (cursor) {",
      "path": "src/node/blockstorage.cpp",
      "position": 294,
      "original_position": 155,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (1c668b690eeb4b98899be7e0ff33373b79932f2a)\r\n\r\nI was confused by this at first about why it was not an error for the cursor to be null here. Would be helpful to add comment saying it is safe to skip flushing if the cursor does not exist, because this only happens when a new snapshot has been loaded and and no blocks have been downloaded or written yet.",
      "created_at": "2023-08-31T01:09:59Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310990937",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310990937"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 759,
      "original_line": 759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310992182",
      "pull_request_review_id": 1602900172,
      "id": 1310992182,
      "node_id": "PRRC_kwDOABII585OJCc2",
      "diff_hunk": "@@ -377,6 +380,42 @@ bool BlockManager::LoadBlockIndexDB(const std::optional<uint256>& snapshot_block\n         }\n     }\n \n+    std::optional<unsigned int> snapshot_base_height{std::nullopt};\n+    if (snapshot_blockhash) {\n+        const auto au_data = GetParams().AssumeutxoForBlockhash(*snapshot_blockhash);\n+        snapshot_base_height = Assert(au_data)->height;\n+    }\n+\n+    {\n+        // Initialize the blockfile cursors.\n+        LOCK(cs_LastBlockFile);\n+        for (size_t i = 0; i < m_blockfile_info.size(); ++i) {\n+            const auto& fileinfo = m_blockfile_info[i];\n+            BlockfileType blockfile_type{BlockfileType::NORMAL};\n+\n+            // If we have a snapshot and the last height tracked by this blockfile\n+            // is in the chain region above the snapshot, updated the ASSUMED cursor.\n+            if (snapshot_base_height && fileinfo.nHeightLast > *snapshot_base_height) {\n+                blockfile_type = BlockfileType::ASSUMED;\n+            }\n+            m_blockfile_cursors[blockfile_type] = {static_cast<int>(i), 0};\n+            LogPrint(BCLog::BLOCKSTORAGE, \"Set blockfile cursor %s to %i\\n\",\n+                blockfile_type, *m_blockfile_cursors[blockfile_type]);\n+        }\n+\n+        // If we haven't yet seen an ASSUMED blockfile, plan to use the one past the\n+        // last NORMAL blockfile.\n+        if (snapshot_blockhash && !m_blockfile_cursors[BlockfileType::ASSUMED]) {\n+            const auto newcursor = BlockfileCursor{this->MaxBlockfileNum() + 1, 0};\n+            m_blockfile_cursors[BlockfileType::ASSUMED] = newcursor;\n+            LogPrint(BCLog::BLOCKSTORAGE, \"Initialized empty assumed blockfile cursor to %i\\n\", newcursor);\n+        }",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (1c668b690eeb4b98899be7e0ff33373b79932f2a)\r\n\r\nIt seems pointless and little wasteful to create this cursor and increment the max block number before any blocl data is downloaded. Wouldn't it be simpler to just delete this code and let the code in BlockManager::FindBlockPos create the cursor when there is actually data ready to be written?",
      "created_at": "2023-08-31T01:13:02Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310992182",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310992182"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 406,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310998317",
      "pull_request_review_id": 1602900172,
      "id": 1310998317,
      "node_id": "PRRC_kwDOABII585OJD8t",
      "diff_hunk": "@@ -644,11 +699,22 @@ fs::path BlockManager::GetBlockPosFilename(const FlatFilePos& pos) const\n     return BlockFileSeq().FileName(pos);\n }\n \n-bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigned int nHeight, uint64_t nTime, bool fKnown)\n+bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigned int nHeight, ChainstateRole chainstate_role, uint64_t nTime, bool fKnown)\n {\n     LOCK(cs_LastBlockFile);\n \n-    unsigned int nFile = fKnown ? pos.nFile : m_last_blockfile;\n+    const BlockfileType chain_type = BlockfileTypeForRole(chainstate_role);\n+\n+    if (!m_blockfile_cursors[chain_type]) {\n+        // If a snapshot is loaded during runtime, we may not have initialized this cursor yet.\n+        assert(chain_type == BlockfileType::ASSUMED);\n+        const auto new_cursor = BlockfileCursor{this->MaxBlockfileNum() + 1, 0};\n+        m_blockfile_cursors[chain_type] = new_cursor;\n+        LogPrint(BCLog::BLOCKSTORAGE, \"[%s] initializing blockfile cursor to %s\\n\", chainstate_role, new_cursor);\n+    }\n+    const unsigned int last_blockfile = m_blockfile_cursors[chain_type]->file_num;",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 180,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (1c668b690eeb4b98899be7e0ff33373b79932f2a)\r\n\r\nnFile was already unsigned previously, but I think it's a small regression to change last_blockfile variable from unsigned to signed and have this implicit cast. I think ideally all these numbers would just be signed and it would be better to move in that direction instead of the other way.",
      "created_at": "2023-08-31T01:27:07Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310998317",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1310998317"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 715,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311007889",
      "pull_request_review_id": 1602900172,
      "id": 1311007889,
      "node_id": "PRRC_kwDOABII585OJGSR",
      "diff_hunk": "@@ -583,15 +623,30 @@ void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n         // have populated `m_blockfile_info` via LoadBlockIndexDB().\n         return;\n     }\n-    assert(static_cast<int>(m_blockfile_info.size()) > m_last_blockfile);\n+    assert(static_cast<int>(m_blockfile_info.size()) > blockfile_num);\n \n-    FlatFilePos block_pos_old(m_last_blockfile, m_blockfile_info[m_last_blockfile].nSize);\n+    FlatFilePos block_pos_old(blockfile_num, m_blockfile_info[blockfile_num].nSize);\n     if (!BlockFileSeq().Flush(block_pos_old, fFinalize)) {\n         m_opts.notifications.flushError(\"Flushing block file to disk failed. This is likely the result of an I/O error.\");\n     }\n     // we do not always flush the undo file, as the chain tip may be lagging behind the incoming blocks,\n     // e.g. during IBD or a sync after a node going offline\n-    if (!fFinalize || finalize_undo) FlushUndoFile(m_last_blockfile, finalize_undo);\n+    if (!fFinalize || finalize_undo) FlushUndoFile(blockfile_num, finalize_undo);\n+}\n+\n+static BlockfileType BlockfileTypeForRole(ChainstateRole chainstate_role)\n+{\n+    return chainstate_role == ChainstateRole::ASSUMEDVALID ?\n+        BlockfileType::ASSUMED : BlockfileType::NORMAL;",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 148,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (1c668b690eeb4b98899be7e0ff33373b79932f2a)\r\n\r\nThis seems like like as soon as the snapshot is validated, the new blocks from the snapshot chainstate will start being added to the last background block file, preventing that file from being pruned potentially for a long time.\r\n\r\nThis really makes me think it is a mistake expose `ChainstateRole` to all these individual `BlockManager` methods and try to use it as a heuristic for selecting the cursor. I think a better approach that would keep block files more tidy and simplify the BlockManager API would be to give BlockManager an `int  m_snapshot_base_height` variable that could be initialized in `BlockManager::LoadBlockIndexDB` and used internally to derive the `BlockfileType` value without requiring ChainstateRole chainstate_role parameters to be passed around everywhere. This would also simplify the validation code, avoiding the need to change `ChainstateManager::AcceptBlock`.\r\n\r\nI think the new BlockManager::FlushChainstateBlockFile method would still need to be added, but the rest of the BlockManager API changes could be reverted, and FlushChainstateBlockFile could take a chain tip height instead of a ChainstateRole, so the same cursor select code could be used everywhere.",
      "created_at": "2023-08-31T01:50:13Z",
      "updated_at": "2023-08-31T02:20:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311007889",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311007889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 639,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 640,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311331956",
      "pull_request_review_id": 1604300972,
      "id": 1311331956,
      "node_id": "PRRC_kwDOABII585OKVZ0",
      "diff_hunk": "@@ -5831,6 +5898,13 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n             std::vector<const CBlockIndex*> vToDownload;\n             NodeId staller = -1;\n             FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.vBlocksInFlight.size(), vToDownload, staller);\n+            if (m_chainman.BackgroundSyncInProgress() && !IsLimitedPeer(*peer)) {\n+                TryDownloadingHistoricalBlocks(\n+                    *peer,\n+                    MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.vBlocksInFlight.size(),",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 122,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "7b93d4adc976bdb32306951b21d7c98d9dacc972",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "7b93d4adc976bdb32306951b21d7c98d9dacc972\r\n\r\nCould use an assert this can't underflow",
      "created_at": "2023-08-31T09:08:00Z",
      "updated_at": "2023-08-31T09:53:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311331956",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311331956"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5904,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311353331",
      "pull_request_review_id": 1604300972,
      "id": 1311353331,
      "node_id": "PRRC_kwDOABII585OKanz",
      "diff_hunk": "@@ -5737,6 +5737,16 @@ bool ChainstateManager::DeleteSnapshotChainstate()\n     return true;\n }\n \n+ChainstateRole Chainstate::GetRole() const\n+{\n+    if (m_chainman.GetAll().size() <= 1) {",
      "path": "src/validation.cpp",
      "position": 415,
      "original_position": 6,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "288dd732b5c0085618598fe3dbba23ac6d194173",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "288dd732b5c0085618598fe3dbba23ac6d194173\r\n\r\nI wish the chainstate state machine was briefly mentioned here, or referenced where it's defined.\r\nA reviewer needs a way to understand why it's impossible to have 2+ chainstates, one of them being NORMAL (and others being something).",
      "created_at": "2023-08-31T09:25:03Z",
      "updated_at": "2023-08-31T09:53:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311353331",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311353331"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5874,
      "original_line": 5874,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311360137",
      "pull_request_review_id": 1604300972,
      "id": 1311360137,
      "node_id": "PRRC_kwDOABII585OKcSJ",
      "diff_hunk": "@@ -1961,7 +1965,10 @@ void PeerManagerImpl::BlockDisconnected(const std::shared_ptr<const CBlock> &blo\n  * Maintain state about the best-seen block and fast-announce a compact block\n  * to compatible peers.\n  */\n-void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock)\n+void PeerManagerImpl::NewPoWValidBlock(",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "d3b533d3f1e80addca2ab0b3ee97215d5d03d984",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "d3b533d3f1e80addca2ab0b3ee97215d5d03d984\r\n\r\ncould add an assert for the invariant: can't be BACKGROUND role.",
      "created_at": "2023-08-31T09:30:05Z",
      "updated_at": "2023-08-31T09:53:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311360137",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311360137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1968,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311369580",
      "pull_request_review_id": 1604300972,
      "id": 1311369580,
      "node_id": "PRRC_kwDOABII585OKels",
      "diff_hunk": "@@ -1961,7 +1965,10 @@ void PeerManagerImpl::BlockDisconnected(const std::shared_ptr<const CBlock> &blo\n  * Maintain state about the best-seen block and fast-announce a compact block\n  * to compatible peers.\n  */\n-void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock)\n+void PeerManagerImpl::NewPoWValidBlock(",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "d3b533d3f1e80addca2ab0b3ee97215d5d03d984",
      "in_reply_to_id": 1311360137,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is done later in fbd05a9eed1e40be0c4915e2aef98b3771d7af6c, although in a `return` way for some reason?",
      "created_at": "2023-08-31T09:37:54Z",
      "updated_at": "2023-08-31T09:53:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311369580",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311369580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1968,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311371973",
      "pull_request_review_id": 1604300972,
      "id": 1311371973,
      "node_id": "PRRC_kwDOABII585OKfLF",
      "diff_hunk": "@@ -1916,9 +1916,15 @@ void PeerManagerImpl::BlockConnected(\n     const std::shared_ptr<const CBlock>& pblock,\n     const CBlockIndex* pindex)\n {\n-    m_orphanage.EraseForBlock(*pblock);\n+    // Update this for all chainstate roles so that we don't mistakenly see peers\n+    // helping us do background IBD as having a stale tip.\n     m_last_tip_update = GetTime<std::chrono::seconds>();\n \n+    if (role == ChainstateRole::BACKGROUND) {",
      "path": "src/net_processing.cpp",
      "position": 158,
      "original_position": 9,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "fbd05a9eed1e40be0c4915e2aef98b3771d7af6c",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fbd05a9eed1e40be0c4915e2aef98b3771d7af6c\r\n\r\nI see why we don't care about mempool stuff here, but `m_block_stalling_timeout` I'm not so sure. Is this logic completely irrelevant for background sync?",
      "created_at": "2023-08-31T09:39:53Z",
      "updated_at": "2023-08-31T09:53:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311371973",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311371973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1934,
      "original_line": 1934,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311525906",
      "pull_request_review_id": 1604598585,
      "id": 1311525906,
      "node_id": "PRRC_kwDOABII585OLEwS",
      "diff_hunk": "@@ -4204,7 +4204,7 @@ VerifyDBResult CVerifyDB::VerifyDB(\n     bool skipped_l3_checks{false};\n     LogPrintf(\"Verification progress: 0%%\\n\");\n \n-    const bool is_snapshot_cs{!chainstate.m_from_snapshot_blockhash};\n+    const bool is_snapshot_cs{chainstate.m_from_snapshot_blockhash};",
      "path": "src/validation.cpp",
      "position": 156,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b85530c18bfe24ff434f32f959d8dd843afca54d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"bugfix: correct is_snapshot_cs in VerifyDB\" (b85530c18bfe24ff434f32f959d8dd843afca54d)\r\n\r\nWould it make sense to put this fix or other fixes into a backport PR? If this PR were merged and released with Bitcoin Core 26, would it be possible for someone to load an assumeutxo snapshot with Bitcoin Core 26, then downgrade to Bitcoin Core 25 or 24 and run into bugs processing the snapshot chainstate?",
      "created_at": "2023-08-31T12:03:21Z",
      "updated_at": "2023-08-31T12:28:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311525906",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311525906"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4314,
      "original_line": 4314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311642246",
      "pull_request_review_id": 1604775714,
      "id": 1311642246,
      "node_id": "PRRC_kwDOABII585OLhKG",
      "diff_hunk": "@@ -144,40 +144,58 @@ void BlockManager::PruneOneBlockFile(const int fileNumber)\n     m_dirty_fileinfo.insert(fileNumber);\n }\n \n-void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height)\n+void BlockManager::FindFilesToPruneManual(\n+    std::set<int>& setFilesToPrune,\n+    int nManualPruneHeight,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     assert(IsPruneMode() && nManualPruneHeight > 0);\n \n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0) {\n+    if (chain.m_chain.Height() < 0) {\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);",
      "path": "src/node/blockstorage.cpp",
      "position": 28,
      "original_position": 20,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5e4c824433fb4bf8b380d0f61a0aa424dc5456d4",
      "in_reply_to_id": 1310410195,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yep, looks so to me. Although `MIN_BLOCKS_TO_KEEP` is 288, so probably this would never be able to happen because of how quickly that part of the chain connects.",
      "created_at": "2023-08-31T13:34:08Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311642246",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311642246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 270,
      "original_line": 270,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311643402",
      "pull_request_review_id": 1604775714,
      "id": 1311643402,
      "node_id": "PRRC_kwDOABII585OLhcK",
      "diff_hunk": "@@ -144,40 +144,58 @@ void BlockManager::PruneOneBlockFile(const int fileNumber)\n     m_dirty_fileinfo.insert(fileNumber);\n }\n \n-void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height)\n+void BlockManager::FindFilesToPruneManual(\n+    std::set<int>& setFilesToPrune,\n+    int nManualPruneHeight,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     assert(IsPruneMode() && nManualPruneHeight > 0);\n \n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0) {\n+    if (chain.m_chain.Height() < 0) {\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    const auto [min_block_to_prune, last_block_can_prune] = chainman.GetPruneRange(chain, nManualPruneHeight);\n+\n     int count = 0;\n     for (int fileNumber = 0; fileNumber < m_last_blockfile; fileNumber++) {\n-        if (m_blockfile_info[fileNumber].nSize == 0 || m_blockfile_info[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n+        const auto& fileinfo = m_blockfile_info[fileNumber];\n+        if (fileinfo.nSize == 0 || fileinfo.nHeightLast > (unsigned)last_block_can_prune || fileinfo.nHeightFirst < (unsigned)min_block_to_prune) {\n             continue;\n         }\n+\n         PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n-    LogPrintf(\"Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\", nLastBlockWeCanPrune, count);\n+    LogPrintf(\"[%s] Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\",\n+        chain.GetRole(), last_block_can_prune, count);\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(\n+    std::set<int>& setFilesToPrune,\n+    uint64_t nPruneAfterHeight,\n+    int last_prune,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0 || GetPruneTarget() == 0) {\n+    // Distribute our -prune budget over all chainstates.\n+    const auto target = std::max(\n+        MIN_DISK_SPACE_FOR_BLOCK_FILES, GetPruneTarget() / chainman.GetAll().size());\n+\n+    int height = chain.m_chain.Height();",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5e4c824433fb4bf8b380d0f61a0aa424dc5456d4",
      "in_reply_to_id": 1310432926,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-08-31T13:35:00Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311643402",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311643402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311645346",
      "pull_request_review_id": 1604775714,
      "id": 1311645346,
      "node_id": "PRRC_kwDOABII585OLh6i",
      "diff_hunk": "@@ -144,40 +144,58 @@ void BlockManager::PruneOneBlockFile(const int fileNumber)\n     m_dirty_fileinfo.insert(fileNumber);\n }\n \n-void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height)\n+void BlockManager::FindFilesToPruneManual(\n+    std::set<int>& setFilesToPrune,\n+    int nManualPruneHeight,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     assert(IsPruneMode() && nManualPruneHeight > 0);\n \n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0) {\n+    if (chain.m_chain.Height() < 0) {\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    const auto [min_block_to_prune, last_block_can_prune] = chainman.GetPruneRange(chain, nManualPruneHeight);\n+\n     int count = 0;\n     for (int fileNumber = 0; fileNumber < m_last_blockfile; fileNumber++) {\n-        if (m_blockfile_info[fileNumber].nSize == 0 || m_blockfile_info[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n+        const auto& fileinfo = m_blockfile_info[fileNumber];\n+        if (fileinfo.nSize == 0 || fileinfo.nHeightLast > (unsigned)last_block_can_prune || fileinfo.nHeightFirst < (unsigned)min_block_to_prune) {\n             continue;\n         }\n+\n         PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n-    LogPrintf(\"Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\", nLastBlockWeCanPrune, count);\n+    LogPrintf(\"[%s] Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\",\n+        chain.GetRole(), last_block_can_prune, count);\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(\n+    std::set<int>& setFilesToPrune,\n+    uint64_t nPruneAfterHeight,\n+    int last_prune,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0 || GetPruneTarget() == 0) {\n+    // Distribute our -prune budget over all chainstates.\n+    const auto target = std::max(\n+        MIN_DISK_SPACE_FOR_BLOCK_FILES, GetPruneTarget() / chainman.GetAll().size());\n+\n+    int height = chain.m_chain.Height();\n+    if (height < 0 || target == 0) {\n         return;\n     }\n-    if ((uint64_t)chain_tip_height <= nPruneAfterHeight) {\n+    if ((uint64_t)height <= nPruneAfterHeight) {",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 59,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5e4c824433fb4bf8b380d0f61a0aa424dc5456d4",
      "in_reply_to_id": 1310423116,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yep, good point. Done.",
      "created_at": "2023-08-31T13:36:28Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311645346",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311645346"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311646878",
      "pull_request_review_id": 1604775714,
      "id": 1311646878,
      "node_id": "PRRC_kwDOABII585OLiSe",
      "diff_hunk": "@@ -5864,3 +5871,29 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     // indexed.\n     return (this->GetAll().size() > 1) ? *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<int, int> ChainstateManager::GetPruneRange(const Chainstate& chainstate, int last_height_can_prune)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};\n+    }\n+    int prune_start{0};\n+\n+    if (this->GetAll().size() > 1 && m_snapshot_chainstate.get() == &chainstate) {\n+        // Leave the blocks in the background IBD chain alone if we're pruning\n+        // the snapshot chain.\n+        prune_start = *Assert(GetSnapshotBaseHeight()) + 1;\n+    }\n+\n+    int max_prune = chainstate.m_chain.Height() - static_cast<int>(MIN_BLOCKS_TO_KEEP);\n+\n+    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 48,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5e4c824433fb4bf8b380d0f61a0aa424dc5456d4",
      "in_reply_to_id": 1310404663,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.\r\n",
      "created_at": "2023-08-31T13:37:39Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311646878",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311646878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5890,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311647326",
      "pull_request_review_id": 1604775714,
      "id": 1311647326,
      "node_id": "PRRC_kwDOABII585OLiZe",
      "diff_hunk": "@@ -5864,3 +5871,29 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     // indexed.\n     return (this->GetAll().size() > 1) ? *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<int, int> ChainstateManager::GetPruneRange(const Chainstate& chainstate, int last_height_can_prune)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};\n+    }\n+    int prune_start{0};\n+\n+    if (this->GetAll().size() > 1 && m_snapshot_chainstate.get() == &chainstate) {\n+        // Leave the blocks in the background IBD chain alone if we're pruning\n+        // the snapshot chain.\n+        prune_start = *Assert(GetSnapshotBaseHeight()) + 1;\n+    }\n+\n+    int max_prune = chainstate.m_chain.Height() - static_cast<int>(MIN_BLOCKS_TO_KEEP);\n+\n+    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n+    //\n+    // While you might be tempted to prune the background chainstate more\n+    // aggressively (i.e. fewer MIN_BLOCKS_TO_KEEP), this won't work with index\n+    // building - specifically blockfilterindex requires undo data, and if\n+    // we don't maintain this trailing window, we hit indexation failures.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 53,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "5e4c824433fb4bf8b380d0f61a0aa424dc5456d4",
      "in_reply_to_id": 1310435694,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-08-31T13:37:57Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311647326",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311647326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5895,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311651383",
      "pull_request_review_id": 1604775714,
      "id": 1311651383,
      "node_id": "PRRC_kwDOABII585OLjY3",
      "diff_hunk": "@@ -76,16 +71,21 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\n     Chainstate& c2 = WITH_LOCK(::cs_main, return manager.ActivateExistingSnapshot(\n         &mempool, snapshot_blockhash));\n     chainstates.push_back(&c2);\n-\n-    BOOST_CHECK_EQUAL(manager.SnapshotBlockhash().value(), snapshot_blockhash);\n-\n     c2.InitCoinsDB(\n         /*cache_size_bytes=*/1 << 23, /*in_memory=*/true, /*should_wipe=*/false);\n-    WITH_LOCK(::cs_main, c2.InitCoinsCache(1 << 23));\n-    c2.m_chain.SetTip(*active_tip);\n+    {\n+        LOCK(::cs_main);\n+        c2.InitCoinsCache(1 << 23);\n+        c2.m_chain.SetTip(*active_tip);",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "76d616c957522e7be52eaf10b3ac33accaf75c45",
      "in_reply_to_id": 1310877098,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, done.",
      "created_at": "2023-08-31T13:40:43Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311651383",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311651383"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 79,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311651919",
      "pull_request_review_id": 1604775714,
      "id": 1311651919,
      "node_id": "PRRC_kwDOABII585OLjhP",
      "diff_hunk": "@@ -76,16 +71,21 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\n     Chainstate& c2 = WITH_LOCK(::cs_main, return manager.ActivateExistingSnapshot(\n         &mempool, snapshot_blockhash));\n     chainstates.push_back(&c2);\n-\n-    BOOST_CHECK_EQUAL(manager.SnapshotBlockhash().value(), snapshot_blockhash);\n-\n     c2.InitCoinsDB(\n         /*cache_size_bytes=*/1 << 23, /*in_memory=*/true, /*should_wipe=*/false);\n-    WITH_LOCK(::cs_main, c2.InitCoinsCache(1 << 23));\n-    c2.m_chain.SetTip(*active_tip);\n+    {\n+        LOCK(::cs_main);\n+        c2.InitCoinsCache(1 << 23);\n+        c2.m_chain.SetTip(*active_tip);\n+        c2.CoinsTip().SetBestBlock(active_tip->GetBlockHash());\n+        c2.setBlockIndexCandidates.insert(manager.m_blockman.LookupBlockIndex(active_tip->GetBlockHash()));\n+        c2.LoadChainTip();\n+    }\n     BlockValidationState _;\n     BOOST_CHECK(c2.ActivateBestChain(_, nullptr));\n \n+    BOOST_CHECK_EQUAL(manager.SnapshotBlockhash().value(), snapshot_blockhash);\n+    BOOST_CHECK(c2.ActivateBestChain(_));",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "76d616c957522e7be52eaf10b3ac33accaf75c45",
      "in_reply_to_id": 1310871911,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-08-31T13:41:08Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311651919",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311651919"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311653393",
      "pull_request_review_id": 1604775714,
      "id": 1311653393,
      "node_id": "PRRC_kwDOABII585OLj4R",
      "diff_hunk": "@@ -96,14 +96,15 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\n     auto& active_chain2 = WITH_LOCK(manager.GetMutex(), return manager.ActiveChain());\n     BOOST_CHECK_EQUAL(&active_chain2, &c2.m_chain);\n \n-    BOOST_CHECK_EQUAL(WITH_LOCK(manager.GetMutex(), return manager.ActiveHeight()), 0);\n+    BOOST_CHECK_EQUAL(WITH_LOCK(manager.GetMutex(), return manager.ActiveHeight()), 110);\n+    mineBlocks(1);\n+    BOOST_CHECK_EQUAL(WITH_LOCK(manager.GetMutex(), return manager.ActiveHeight()), 111);\n+    BOOST_CHECK_EQUAL(WITH_LOCK(manager.GetMutex(), return c1.m_chain.Height()), 110);\n \n     auto active_tip2 = WITH_LOCK(manager.GetMutex(), return manager.ActiveTip());\n     auto exp_tip2 = c2.m_chain.Tip();\n     BOOST_CHECK_EQUAL(active_tip2, exp_tip2);\n \n-    BOOST_CHECK_EQUAL(exp_tip, exp_tip2);",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": 89,
      "original_position": 84,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "76d616c957522e7be52eaf10b3ac33accaf75c45",
      "in_reply_to_id": 1310888128,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Makes sense, done.",
      "created_at": "2023-08-31T13:42:15Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311653393",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311653393"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 106,
      "original_line": 106,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311661327",
      "pull_request_review_id": 1604775714,
      "id": 1311661327,
      "node_id": "PRRC_kwDOABII585OLl0P",
      "diff_hunk": "@@ -488,13 +490,13 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n \n     // Note: cs2's tip is not set when ActivateExistingSnapshot is called.\n     Chainstate& cs2 = WITH_LOCK(::cs_main,\n-        return chainman.ActivateExistingSnapshot(&mempool, *assumed_base->phashBlock));\n+        return chainman.ActivateExistingSnapshot(&mempool, *assumed_tip->phashBlock));",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": null,
      "original_position": 131,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "76d616c957522e7be52eaf10b3ac33accaf75c45",
      "in_reply_to_id": 1310901739,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch. I think I was grasping at straws trying to get the tests to pass having changed heights to match up with the recognized chainparams snapshots. Not sure what I was thinking.",
      "created_at": "2023-08-31T13:47:56Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311661327",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311661327"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 493,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311698766",
      "pull_request_review_id": 1604775714,
      "id": 1311698766,
      "node_id": "PRRC_kwDOABII585OLu9O",
      "diff_hunk": "@@ -290,7 +290,13 @@ bool BlockManager::LoadBlockIndex()\n         // Pruned nodes may have deleted the block.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->nChainTx > 0) {\n+                if (snapshot_blockhash && pindex->GetBlockHash() == *snapshot_blockhash) {",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9df91113b8bbab8c98924bef61da388a8141b4e6",
      "in_reply_to_id": 1310947552,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh wow, that's a great simplification - thanks. Fixed.",
      "created_at": "2023-08-31T14:10:49Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311698766",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311698766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311708335",
      "pull_request_review_id": 1604775714,
      "id": 1311708335,
      "node_id": "PRRC_kwDOABII585OLxSv",
      "diff_hunk": "@@ -4765,6 +4765,10 @@ void ChainstateManager::CheckBlockIndex()\n     CBlockIndex* pindexFirstAssumeValid = nullptr; // Oldest ancestor of pindex which has BLOCK_ASSUMED_VALID\n     while (pindex != nullptr) {\n         nNodes++;\n+        if (pindex->pprev && pindex->nTx > 0) {\n+            // nChainTx should increase monotonically\n+            assert(pindex->pprev->nChainTx <= pindex->nChainTx);",
      "path": "src/validation.cpp",
      "position": 175,
      "original_position": 15,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9df91113b8bbab8c98924bef61da388a8141b4e6",
      "in_reply_to_id": 1310950827,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Getting test failures with this change, not certain why:\r\n```\r\n10:17:24 james@fido src/bitcoin (?± 11555828ee 1155582) % ./src/test/test_bitcoin\r\nRunning 578 test cases...\r\ntest_bitcoin: validation.cpp:4767: void ChainstateManager::CheckBlockIndex(): Assertion `pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx' failed.\r\nunknown location(0): fatal error: in \"validation_block_tests/processnewblock_signals_ordering\": signal: SIGABRT (application abort requested)\r\ntest/validation_block_tests.cpp(160): last checkpoint\r\nunknown location(0): fatal error: in \"validation_block_tests/mempool_locks_reorg\": memory access violation at address: 0x5824eadac8d1: no mapping at fault address\r\ntest/validation_block_tests.cpp(224): last checkpoint: \"mempool_locks_reorg\" fixture ctor\r\n\r\n*** 2 failures are detected in the test module \"Bitcoin Core Test Suite\"\r\ntest_bitcoin: checkqueue.h:198: CCheckQueue<CScriptCheck>::~CCheckQueue() [T = CScriptCheck]: Assertion `m_worker_threads.empty()' failed.\r\nzsh: IOT instruction (core dumped)  ./src/test/test_bitcoin\r\n./src/test/test_bitcoin  18.78s user 2.94s system 118% cpu 18.291 total\r\n```\r\n\r\nMaybe worth doing this improvement as a follow-up.",
      "created_at": "2023-08-31T14:17:38Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311708335",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311708335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4843,
      "original_line": 4843,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311755065",
      "pull_request_review_id": 1604775714,
      "id": 1311755065,
      "node_id": "PRRC_kwDOABII585OL8s5",
      "diff_hunk": "@@ -377,6 +380,42 @@ bool BlockManager::LoadBlockIndexDB(const std::optional<uint256>& snapshot_block\n         }\n     }\n \n+    std::optional<unsigned int> snapshot_base_height{std::nullopt};\n+    if (snapshot_blockhash) {\n+        const auto au_data = GetParams().AssumeutxoForBlockhash(*snapshot_blockhash);\n+        snapshot_base_height = Assert(au_data)->height;\n+    }\n+\n+    {\n+        // Initialize the blockfile cursors.\n+        LOCK(cs_LastBlockFile);\n+        for (size_t i = 0; i < m_blockfile_info.size(); ++i) {\n+            const auto& fileinfo = m_blockfile_info[i];\n+            BlockfileType blockfile_type{BlockfileType::NORMAL};\n+\n+            // If we have a snapshot and the last height tracked by this blockfile\n+            // is in the chain region above the snapshot, updated the ASSUMED cursor.\n+            if (snapshot_base_height && fileinfo.nHeightLast > *snapshot_base_height) {\n+                blockfile_type = BlockfileType::ASSUMED;\n+            }\n+            m_blockfile_cursors[blockfile_type] = {static_cast<int>(i), 0};\n+            LogPrint(BCLog::BLOCKSTORAGE, \"Set blockfile cursor %s to %i\\n\",\n+                blockfile_type, *m_blockfile_cursors[blockfile_type]);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": 1310985324,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed.",
      "created_at": "2023-08-31T14:50:31Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311755065",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311755065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 402,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 403,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311785924",
      "pull_request_review_id": 1604775714,
      "id": 1311785924,
      "node_id": "PRRC_kwDOABII585OMEPE",
      "diff_hunk": "@@ -583,15 +623,30 @@ void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n         // have populated `m_blockfile_info` via LoadBlockIndexDB().\n         return;\n     }\n-    assert(static_cast<int>(m_blockfile_info.size()) > m_last_blockfile);\n+    assert(static_cast<int>(m_blockfile_info.size()) > blockfile_num);\n \n-    FlatFilePos block_pos_old(m_last_blockfile, m_blockfile_info[m_last_blockfile].nSize);\n+    FlatFilePos block_pos_old(blockfile_num, m_blockfile_info[blockfile_num].nSize);\n     if (!BlockFileSeq().Flush(block_pos_old, fFinalize)) {\n         m_opts.notifications.flushError(\"Flushing block file to disk failed. This is likely the result of an I/O error.\");\n     }\n     // we do not always flush the undo file, as the chain tip may be lagging behind the incoming blocks,\n     // e.g. during IBD or a sync after a node going offline\n-    if (!fFinalize || finalize_undo) FlushUndoFile(m_last_blockfile, finalize_undo);\n+    if (!fFinalize || finalize_undo) FlushUndoFile(blockfile_num, finalize_undo);\n+}\n+\n+static BlockfileType BlockfileTypeForRole(ChainstateRole chainstate_role)\n+{\n+    return chainstate_role == ChainstateRole::ASSUMEDVALID ?\n+        BlockfileType::ASSUMED : BlockfileType::NORMAL;",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 148,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": 1311007889,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hey thanks for this feedback, this has led to a big simplification in this commit. I had tried to do something like this earlier, but got hung up on the \"snapshot activated during runtime\" case. I forgot that ChainstateManager can just reach into the BlockManager and set the snapshot height dynamically.\r\n\r\nSo that's what I'm doing here, without trying to adapt ChainstateRole to BlockManager behavior. The result is a lot simpler and - as you point out - less buggy!",
      "created_at": "2023-08-31T15:10:29Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311785924",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311785924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 639,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 640,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311789064",
      "pull_request_review_id": 1604775714,
      "id": 1311789064,
      "node_id": "PRRC_kwDOABII585OMFAI",
      "diff_hunk": "@@ -583,15 +623,30 @@ void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n         // have populated `m_blockfile_info` via LoadBlockIndexDB().\n         return;\n     }\n-    assert(static_cast<int>(m_blockfile_info.size()) > m_last_blockfile);\n+    assert(static_cast<int>(m_blockfile_info.size()) > blockfile_num);\n \n-    FlatFilePos block_pos_old(m_last_blockfile, m_blockfile_info[m_last_blockfile].nSize);\n+    FlatFilePos block_pos_old(blockfile_num, m_blockfile_info[blockfile_num].nSize);\n     if (!BlockFileSeq().Flush(block_pos_old, fFinalize)) {\n         m_opts.notifications.flushError(\"Flushing block file to disk failed. This is likely the result of an I/O error.\");\n     }\n     // we do not always flush the undo file, as the chain tip may be lagging behind the incoming blocks,\n     // e.g. during IBD or a sync after a node going offline\n-    if (!fFinalize || finalize_undo) FlushUndoFile(m_last_blockfile, finalize_undo);\n+    if (!fFinalize || finalize_undo) FlushUndoFile(blockfile_num, finalize_undo);\n+}\n+\n+static BlockfileType BlockfileTypeForRole(ChainstateRole chainstate_role)\n+{\n+    return chainstate_role == ChainstateRole::ASSUMEDVALID ?\n+        BlockfileType::ASSUMED : BlockfileType::NORMAL;\n+}\n+\n+void BlockManager::FlushChainstateBlockFile(ChainstateRole chainstate_role, bool finalize, bool finalize_undo)\n+{\n+    LOCK(cs_LastBlockFile);\n+    auto& cursor = m_blockfile_cursors[BlockfileTypeForRole(chainstate_role)];\n+    if (cursor) {",
      "path": "src/node/blockstorage.cpp",
      "position": 294,
      "original_position": 155,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": 1310990937,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, added.",
      "created_at": "2023-08-31T15:12:16Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311789064",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311789064"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 759,
      "original_line": 759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311984213",
      "pull_request_review_id": 1604775714,
      "id": 1311984213,
      "node_id": "PRRC_kwDOABII585OM0pV",
      "diff_hunk": "@@ -644,11 +699,22 @@ fs::path BlockManager::GetBlockPosFilename(const FlatFilePos& pos) const\n     return BlockFileSeq().FileName(pos);\n }\n \n-bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigned int nHeight, uint64_t nTime, bool fKnown)\n+bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigned int nHeight, ChainstateRole chainstate_role, uint64_t nTime, bool fKnown)\n {\n     LOCK(cs_LastBlockFile);\n \n-    unsigned int nFile = fKnown ? pos.nFile : m_last_blockfile;\n+    const BlockfileType chain_type = BlockfileTypeForRole(chainstate_role);\n+\n+    if (!m_blockfile_cursors[chain_type]) {\n+        // If a snapshot is loaded during runtime, we may not have initialized this cursor yet.\n+        assert(chain_type == BlockfileType::ASSUMED);\n+        const auto new_cursor = BlockfileCursor{this->MaxBlockfileNum() + 1, 0};\n+        m_blockfile_cursors[chain_type] = new_cursor;\n+        LogPrint(BCLog::BLOCKSTORAGE, \"[%s] initializing blockfile cursor to %s\\n\", chainstate_role, new_cursor);\n+    }\n+    const unsigned int last_blockfile = m_blockfile_cursors[chain_type]->file_num;",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 180,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": 1310998317,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Okay, sounds good.",
      "created_at": "2023-08-31T17:43:32Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311984213",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311984213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 715,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311986681",
      "pull_request_review_id": 1604775714,
      "id": 1311986681,
      "node_id": "PRRC_kwDOABII585OM1P5",
      "diff_hunk": "@@ -680,13 +753,14 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\n         pos.nPos = m_blockfile_info[nFile].nSize;\n     }\n \n-    if ((int)nFile != m_last_blockfile) {\n+    if (nFile != last_blockfile) {\n         if (!fKnown) {\n-            LogPrint(BCLog::BLOCKSTORAGE, \"Leaving block file %i: %s\\n\", m_last_blockfile, m_blockfile_info[m_last_blockfile].ToString());\n+            LogPrint(BCLog::BLOCKSTORAGE, \"Leaving block file %i: %s (onto %i) (height %i)\\n\",\n+                m_last_blockfile, m_blockfile_info[last_blockfile].ToString(), nFile, nHeight);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 217,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": 1310965708,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oops, done.",
      "created_at": "2023-08-31T17:45:40Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311986681",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311986681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311988064",
      "pull_request_review_id": 1604775714,
      "id": 1311988064,
      "node_id": "PRRC_kwDOABII585OM1lg",
      "diff_hunk": "@@ -70,6 +71,30 @@ struct PruneLockInfo {\n     int height_first{std::numeric_limits<int>::max()}; //! Height of earliest block that should be kept and not pruned\n };\n \n+enum class BlockfileType {\n+    // For the purposes of blockfile fragmentation, treat background IBD chainstates\n+    // as normal.",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 14,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": 1310979704,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've just removed the comment because I don't think it adds much anymore.",
      "created_at": "2023-08-31T17:46:33Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311988064",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311988064"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 75,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311990281",
      "pull_request_review_id": 1604775714,
      "id": 1311990281,
      "node_id": "PRRC_kwDOABII585OM2IJ",
      "diff_hunk": "@@ -70,6 +71,30 @@ struct PruneLockInfo {\n     int height_first{std::numeric_limits<int>::max()}; //! Height of earliest block that should be kept and not pruned\n };\n \n+enum class BlockfileType {\n+    // For the purposes of blockfile fragmentation, treat background IBD chainstates\n+    // as normal.\n+    NORMAL,\n+    ASSUMED,\n+};\n+\n+std::ostream& operator<<(std::ostream& os, const BlockfileType& type);\n+\n+struct BlockfileCursor {\n+    // The latest blockfile number.\n+    int file_num{0};\n+\n+    // Track the largest height block whose undo data is in `file_num` blockfile.\n+    // When we move to the next blockfile, if the undo data is keeping up then\n+    // we know we can trim the size of the file and truncate any excess\n+    // allocations. If not, we assume that eventually we'll add more undo data\n+    // to this file, and when we revisit it we'll trim it then.\n+    int undo_height{0};",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 30,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": 1310971801,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oops, silent merge conflict. Fixed.\r\n\r\n`m_last_blockfile` just didn't make much sense to me when you're already in the context of a blockfile cursor; within that scope, `file_num` felt like it was a complete description. Same rationale for the other.",
      "created_at": "2023-08-31T17:47:53Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311990281",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1311990281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 87,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312004094",
      "pull_request_review_id": 1605373711,
      "id": 1312004094,
      "node_id": "PRRC_kwDOABII585OM5f-",
      "diff_hunk": "@@ -5205,6 +5205,9 @@ bool ChainstateManager::ActivateSnapshot(\n         const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n         assert(chaintip_loaded);\n \n+        // Transfer possession of the mempool to the snapshot chianstate.\n+        m_snapshot_chainstate->m_mempool = m_active_chainstate->m_mempool;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "f2dd7a0c1b67d3e4a6e086a619eff34fe6625263",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: assumeutxo: swap m_mempool on snapshot activation\" (f2dd7a0c1b67d3e4a6e086a619eff34fe6625263)\r\n\r\nCan this code assert that the mempool is empty, or clear it, or else explain why contents of the mempool transactions are compatible with m_snapshot_chainstate?\r\n\r\nIt would also be good to assert existing m_snapshot_chainstate pointer is not set, and make the `ActivateSnapshot` and `ActivateExistingSnapshot` versions of this code the same.",
      "created_at": "2023-08-31T17:59:11Z",
      "updated_at": "2023-08-31T18:32:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312004094",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312004094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312011711",
      "pull_request_review_id": 1604775714,
      "id": 1312011711,
      "node_id": "PRRC_kwDOABII585OM7W_",
      "diff_hunk": "@@ -5831,6 +5898,13 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n             std::vector<const CBlockIndex*> vToDownload;\n             NodeId staller = -1;\n             FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.vBlocksInFlight.size(), vToDownload, staller);\n+            if (m_chainman.BackgroundSyncInProgress() && !IsLimitedPeer(*peer)) {\n+                TryDownloadingHistoricalBlocks(\n+                    *peer,\n+                    MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.vBlocksInFlight.size(),",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 122,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "7b93d4adc976bdb32306951b21d7c98d9dacc972",
      "in_reply_to_id": 1311331956,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, now avoiding underflow with cast + max.",
      "created_at": "2023-08-31T18:06:58Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312011711",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312011711"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5904,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312013386",
      "pull_request_review_id": 1604775714,
      "id": 1312013386,
      "node_id": "PRRC_kwDOABII585OM7xK",
      "diff_hunk": "@@ -5737,6 +5737,16 @@ bool ChainstateManager::DeleteSnapshotChainstate()\n     return true;\n }\n \n+ChainstateRole Chainstate::GetRole() const\n+{\n+    if (m_chainman.GetAll().size() <= 1) {",
      "path": "src/validation.cpp",
      "position": 415,
      "original_position": 6,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "288dd732b5c0085618598fe3dbba23ac6d194173",
      "in_reply_to_id": 1311353331,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added a pointer to the ChainstateManager documentation this.",
      "created_at": "2023-08-31T18:08:39Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312013386",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312013386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5874,
      "original_line": 5874,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312025166",
      "pull_request_review_id": 1605373711,
      "id": 1312025166,
      "node_id": "PRRC_kwDOABII585OM-pO",
      "diff_hunk": "@@ -2699,6 +2699,91 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    fs::path path = fs::PathFromString(request.params[0].get_str());\n+    if (path.is_relative()) {\n+        path = gArgs.GetDataDirNet() / path;",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "82a8744f1384f07dc30aaa6339b0b8fb32dc3af0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add loadtxoutset\" (82a8744f1384f07dc30aaa6339b0b8fb32dc3af0)\r\n\r\nWould be good to simplify and remove gArgs reference:\r\n\r\n```diff\r\n--- a/src/rpc/blockchain.cpp\r\n+++ b/src/rpc/blockchain.cpp\r\n@@ -2718,10 +2718,8 @@ static RPCHelpMan loadtxoutset()\r\n         },\r\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\r\n {\r\n-    fs::path path = fs::PathFromString(request.params[0].get_str());\r\n-    if (path.is_relative()) {\r\n-        path = gArgs.GetDataDirNet() / path;\r\n-    }\r\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\r\n+    fs::path path{AbsPathForConfigVal(EnsureArgsman(node), fs::u8path(request.params[0].get_str()))};\r\n     FILE* file{fsbridge::fopen(path, \"rb\")};\r\n     CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\r\n     if (afile.IsNull()) {\r\n@@ -2739,7 +2737,6 @@ static RPCHelpMan loadtxoutset()\r\n     LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\r\n         base_blockhash.ToString());\r\n \r\n-    NodeContext& node = EnsureAnyNodeContext(request.context);\r\n     ChainstateManager& chainman = *node.chainman;\r\n \r\n     while (max_secs_to_wait_for_headers > 0) {\r\n\r\n```",
      "created_at": "2023-08-31T18:13:20Z",
      "updated_at": "2023-08-31T18:32:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312025166",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312025166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2723,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312027712",
      "pull_request_review_id": 1604775714,
      "id": 1312027712,
      "node_id": "PRRC_kwDOABII585OM_RA",
      "diff_hunk": "@@ -1961,7 +1965,10 @@ void PeerManagerImpl::BlockDisconnected(const std::shared_ptr<const CBlock> &blo\n  * Maintain state about the best-seen block and fast-announce a compact block\n  * to compatible peers.\n  */\n-void PeerManagerImpl::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock)\n+void PeerManagerImpl::NewPoWValidBlock(",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "d3b533d3f1e80addca2ab0b3ee97215d5d03d984",
      "in_reply_to_id": 1311360137,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Unclear if clients only want to know about NewPoWValidBlocks for background chainstate, but since the only usage is ignored (`PeerManagerImpl`) I'll just remove the role parameter and avoiding sending the notification from non-active chainstates.",
      "created_at": "2023-08-31T18:14:00Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312027712",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312027712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1968,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312036195",
      "pull_request_review_id": 1605373711,
      "id": 1312036195,
      "node_id": "PRRC_kwDOABII585ONBVj",
      "diff_hunk": "@@ -2699,6 +2699,91 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    fs::path path = fs::PathFromString(request.params[0].get_str());\n+    if (path.is_relative()) {\n+        path = gArgs.GetDataDirNet() / path;\n+    }\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        throw JSONRPCError(\n+            RPC_INVALID_PARAMETER,\n+            \"Couldn't open file \" + path.u8string() + \" for reading.\");\n+    }\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    while (max_secs_to_wait_for_headers > 0) {\n+        {\n+            LOCK(cs_main);\n+            snapshot_start_block = chainman.m_blockman.LookupBlockIndex(base_blockhash);\n+        }\n+        max_secs_to_wait_for_headers -= 1;\n+\n+        if (!snapshot_start_block) {\n+            std::this_thread::sleep_for(std::chrono::seconds(1));\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    if (snapshot_start_block == nullptr) {\n+        LogPrintf(\"[snapshot] timed out waiting for snapshot start blockheader %s\\n\",\n+            base_blockhash.ToString());\n+        throw JSONRPCError(\n+            RPC_INTERNAL_ERROR,\n+            \"Timed out waiting for base block header to appear in headers chain\");\n+    }\n+\n+    // TODO jamesob: no real need to lock cs_main here, but during testing it makes it\n+    // easier to follow the logs. We may want to remove this before merge.\n+    //\n+    LOCK(::cs_main);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "82a8744f1384f07dc30aaa6339b0b8fb32dc3af0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add loadtxoutset\" (82a8744f1384f07dc30aaa6339b0b8fb32dc3af0)\r\n\r\nShould probably remove this if testing code which isn't assuming cs_main is locked.",
      "created_at": "2023-08-31T18:18:13Z",
      "updated_at": "2023-08-31T18:32:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312036195",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312036195"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 2767,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2770,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312037894",
      "pull_request_review_id": 1605373711,
      "id": 1312037894,
      "node_id": "PRRC_kwDOABII585ONBwG",
      "diff_hunk": "@@ -2699,6 +2699,91 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "82a8744f1384f07dc30aaa6339b0b8fb32dc3af0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add loadtxoutset\" (82a8744f1384f07dc30aaa6339b0b8fb32dc3af0)\r\n\r\nMissing result description",
      "created_at": "2023-08-31T18:19:59Z",
      "updated_at": "2023-08-31T18:32:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312037894",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312037894"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 2713,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2735,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312038932",
      "pull_request_review_id": 1605373711,
      "id": 1312038932,
      "node_id": "PRRC_kwDOABII585ONCAU",
      "diff_hunk": "@@ -2729,6 +2814,7 @@ void RegisterBlockchainRPCCommands(CRPCTable& t)\n         {\"hidden\", &waitforblockheight},\n         {\"hidden\", &syncwithvalidationinterfacequeue},\n         {\"hidden\", &dumptxoutset},\n+        {\"hidden\", &loadtxoutset},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 96,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "82a8744f1384f07dc30aaa6339b0b8fb32dc3af0",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add loadtxoutset\" (82a8744f1384f07dc30aaa6339b0b8fb32dc3af0)\r\n\r\nShould dumptxoutset and loadtxoutset still be hidden?",
      "created_at": "2023-08-31T18:21:07Z",
      "updated_at": "2023-08-31T18:32:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312038932",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312038932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2880,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312040274",
      "pull_request_review_id": 1605373711,
      "id": 1312040274,
      "node_id": "PRRC_kwDOABII585ONCVS",
      "diff_hunk": "@@ -2784,6 +2784,69 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "555206238129c6ed9fcbbc498c81455c7fe6d851",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add getchainstates\" (555206238129c6ed9fcbbc498c81455c7fe6d851)\r\n\r\nMissing documentation for return value",
      "created_at": "2023-08-31T18:22:28Z",
      "updated_at": "2023-08-31T18:32:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312040274",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312040274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312045678",
      "pull_request_review_id": 1605373711,
      "id": 1312045678,
      "node_id": "PRRC_kwDOABII585ONDpu",
      "diff_hunk": "@@ -2784,6 +2784,69 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    auto make_chain_data = [&](Chainstate* cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        UniValue data(UniValue::VOBJ);\n+        if (!cs || !cs->m_chain.Tip()) {\n+            return data;\n+        }\n+        const CChain& chain = cs->m_chain;\n+        const CBlockIndex* tip = chain.Tip();\n+\n+        data.pushKV(\"blocks\",                (int)chain.Height());\n+        data.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n+        data.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+        data.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n+        data.pushKV(\"snapshot_blockhash\",    cs->m_from_snapshot_blockhash.value_or(uint256{}).ToString());",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "555206238129c6ed9fcbbc498c81455c7fe6d851",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add getchainstates\" (555206238129c6ed9fcbbc498c81455c7fe6d851)\r\n\r\nProbably would be a little better to make this null instead of \"\" if unset",
      "created_at": "2023-08-31T18:27:14Z",
      "updated_at": "2023-08-31T18:32:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312045678",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312045678"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2843,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312046441",
      "pull_request_review_id": 1604775714,
      "id": 1312046441,
      "node_id": "PRRC_kwDOABII585OND1p",
      "diff_hunk": "@@ -1916,9 +1916,15 @@ void PeerManagerImpl::BlockConnected(\n     const std::shared_ptr<const CBlock>& pblock,\n     const CBlockIndex* pindex)\n {\n-    m_orphanage.EraseForBlock(*pblock);\n+    // Update this for all chainstate roles so that we don't mistakenly see peers\n+    // helping us do background IBD as having a stale tip.\n     m_last_tip_update = GetTime<std::chrono::seconds>();\n \n+    if (role == ChainstateRole::BACKGROUND) {",
      "path": "src/net_processing.cpp",
      "position": 158,
      "original_position": 9,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "fbd05a9eed1e40be0c4915e2aef98b3771d7af6c",
      "in_reply_to_id": 1311371973,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point! The `m_block_stalling_timeout` was added about a year ago, so when preparing these changes I didn't consider it. It looks like we should keep it up to date for both chainstates. Fixed.",
      "created_at": "2023-08-31T18:28:03Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312046441",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312046441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1934,
      "original_line": 1934,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312047335",
      "pull_request_review_id": 1604775714,
      "id": 1312047335,
      "node_id": "PRRC_kwDOABII585ONEDn",
      "diff_hunk": "@@ -4204,7 +4204,7 @@ VerifyDBResult CVerifyDB::VerifyDB(\n     bool skipped_l3_checks{false};\n     LogPrintf(\"Verification progress: 0%%\\n\");\n \n-    const bool is_snapshot_cs{!chainstate.m_from_snapshot_blockhash};\n+    const bool is_snapshot_cs{chainstate.m_from_snapshot_blockhash};",
      "path": "src/validation.cpp",
      "position": 156,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b85530c18bfe24ff434f32f959d8dd843afca54d",
      "in_reply_to_id": 1311525906,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "My inclination is to say that if the user begins snapshot use with a client that has this changeset, they won't be able to downgrade without issue until the snapshot is validated (based on e.g. the net_processing changes here). I'm not sure where the best place to convey that would be... release notes?",
      "created_at": "2023-08-31T18:29:07Z",
      "updated_at": "2023-08-31T18:44:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312047335",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312047335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4314,
      "original_line": 4314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312095629",
      "pull_request_review_id": 1605519579,
      "id": 1312095629,
      "node_id": "PRRC_kwDOABII585ONP2N",
      "diff_hunk": "@@ -5205,6 +5205,9 @@ bool ChainstateManager::ActivateSnapshot(\n         const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n         assert(chaintip_loaded);\n \n+        // Transfer possession of the mempool to the snapshot chianstate.\n+        m_snapshot_chainstate->m_mempool = m_active_chainstate->m_mempool;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "f2dd7a0c1b67d3e4a6e086a619eff34fe6625263",
      "in_reply_to_id": 1312004094,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> It would also be good to assert existing m_snapshot_chainstate pointer is not set, and make the ActivateSnapshot and ActivateExistingSnapshot versions of this code the same.\r\n\r\nThat assertion happens here: https://github.com/bitcoin/bitcoin/blob/1b1d7110e67da11752ae1efadb1c12a9054eb867/src/validation.cpp#L5189\r\n\r\nEdit: oh oops, you're probably talking about `m_snapshot_chainstate->m_mempool`, which isn't checked.",
      "created_at": "2023-08-31T19:10:01Z",
      "updated_at": "2023-08-31T19:39:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312095629",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312095629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312115645",
      "pull_request_review_id": 1605548247,
      "id": 1312115645,
      "node_id": "PRRC_kwDOABII585ONUu9",
      "diff_hunk": "@@ -377,6 +380,42 @@ bool BlockManager::LoadBlockIndexDB(const std::optional<uint256>& snapshot_block\n         }\n     }\n \n+    std::optional<unsigned int> snapshot_base_height{std::nullopt};\n+    if (snapshot_blockhash) {\n+        const auto au_data = GetParams().AssumeutxoForBlockhash(*snapshot_blockhash);\n+        snapshot_base_height = Assert(au_data)->height;\n+    }\n+\n+    {\n+        // Initialize the blockfile cursors.\n+        LOCK(cs_LastBlockFile);\n+        for (size_t i = 0; i < m_blockfile_info.size(); ++i) {\n+            const auto& fileinfo = m_blockfile_info[i];\n+            BlockfileType blockfile_type{BlockfileType::NORMAL};\n+\n+            // If we have a snapshot and the last height tracked by this blockfile\n+            // is in the chain region above the snapshot, updated the ASSUMED cursor.\n+            if (snapshot_base_height && fileinfo.nHeightLast > *snapshot_base_height) {\n+                blockfile_type = BlockfileType::ASSUMED;\n+            }\n+            m_blockfile_cursors[blockfile_type] = {static_cast<int>(i), 0};\n+            LogPrint(BCLog::BLOCKSTORAGE, \"Set blockfile cursor %s to %i\\n\",\n+                blockfile_type, *m_blockfile_cursors[blockfile_type]);\n+        }\n+\n+        // If we haven't yet seen an ASSUMED blockfile, plan to use the one past the\n+        // last NORMAL blockfile.\n+        if (snapshot_blockhash && !m_blockfile_cursors[BlockfileType::ASSUMED]) {\n+            const auto newcursor = BlockfileCursor{this->MaxBlockfileNum() + 1, 0};\n+            m_blockfile_cursors[BlockfileType::ASSUMED] = newcursor;\n+            LogPrint(BCLog::BLOCKSTORAGE, \"Initialized empty assumed blockfile cursor to %i\\n\", newcursor);\n+        }",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 93,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": 1310992182,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, thanks.",
      "created_at": "2023-08-31T19:16:48Z",
      "updated_at": "2023-08-31T19:16:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312115645",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312115645"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 406,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 517,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312293323",
      "pull_request_review_id": 1605787687,
      "id": 1312293323,
      "node_id": "PRRC_kwDOABII585OOAHL",
      "diff_hunk": "@@ -4204,7 +4204,7 @@ VerifyDBResult CVerifyDB::VerifyDB(\n     bool skipped_l3_checks{false};\n     LogPrintf(\"Verification progress: 0%%\\n\");\n \n-    const bool is_snapshot_cs{!chainstate.m_from_snapshot_blockhash};\n+    const bool is_snapshot_cs{chainstate.m_from_snapshot_blockhash};",
      "path": "src/validation.cpp",
      "position": 156,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b85530c18bfe24ff434f32f959d8dd843afca54d",
      "in_reply_to_id": 1311525906,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312047335\r\n\r\n> My inclination is to say that if the user begins snapshot use with a client that has this changeset, they won't be able to downgrade without issue until the snapshot is validated (based on e.g. the net_processing changes here). I'm not sure where the best place to convey that would be... release notes?\r\n\r\nI think the most helpful place would be the `loadtxoutset` RPC documentation, saying that using the  `loadtxoutset`  RPC will make it temporarily not possible to downgrade the node software until the snapshot is validated, and then after that it will be safe to downgrade again.\r\n\r\nI wonder if we can do something simple to avoid this problem, though, like tweaking the snapshot chainstate directory name before releasing, so old software ignores it, or backporting a patch to the stable branches that  makes them ignore the directory.\r\n\r\n",
      "created_at": "2023-08-31T21:18:08Z",
      "updated_at": "2023-08-31T21:18:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312293323",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1312293323"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4314,
      "original_line": 4314,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314295003",
      "pull_request_review_id": 1608559074,
      "id": 1314295003,
      "node_id": "PRRC_kwDOABII585OVozb",
      "diff_hunk": "@@ -144,40 +144,57 @@ void BlockManager::PruneOneBlockFile(const int fileNumber)\n     m_dirty_fileinfo.insert(fileNumber);\n }\n \n-void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height)\n+void BlockManager::FindFilesToPruneManual(\n+    std::set<int>& setFilesToPrune,\n+    int nManualPruneHeight,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     assert(IsPruneMode() && nManualPruneHeight > 0);\n \n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0) {\n+    if (chain.m_chain.Height() < 0) {\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    const auto [min_block_to_prune, last_block_can_prune] = chainman.GetPruneRange(chain, nManualPruneHeight);\n+\n     int count = 0;\n     for (int fileNumber = 0; fileNumber < m_last_blockfile; fileNumber++) {\n-        if (m_blockfile_info[fileNumber].nSize == 0 || m_blockfile_info[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n+        const auto& fileinfo = m_blockfile_info[fileNumber];\n+        if (fileinfo.nSize == 0 || fileinfo.nHeightLast > (unsigned)last_block_can_prune || fileinfo.nHeightFirst < (unsigned)min_block_to_prune) {\n             continue;\n         }\n+\n         PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n-    LogPrintf(\"Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\", nLastBlockWeCanPrune, count);\n+    LogPrintf(\"[%s] Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\",\n+        chain.GetRole(), last_block_can_prune, count);\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(\n+    std::set<int>& setFilesToPrune,\n+    int last_prune,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0 || GetPruneTarget() == 0) {\n+    // Distribute our -prune budget over all chainstates.\n+    const auto target = std::max(\n+        MIN_DISK_SPACE_FOR_BLOCK_FILES, GetPruneTarget() / chainman.GetAll().size());\n+\n+    auto chain_tip_height = static_cast<uint64_t>(chain.m_chain.Height());\n+    if (chain_tip_height < 0 || target == 0) {",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "51622e9c1f7ed16f65844817a4a5e9bcbc157b4f",
      "in_reply_to_id": null,
      "user": {
        "login": "andrewtoth",
        "id": 237213,
        "node_id": "MDQ6VXNlcjIzNzIxMw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andrewtoth",
        "html_url": "https://github.com/andrewtoth",
        "followers_url": "https://api.github.com/users/andrewtoth/followers",
        "following_url": "https://api.github.com/users/andrewtoth/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/andrewtoth/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/andrewtoth/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
        "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
        "repos_url": "https://api.github.com/users/andrewtoth/repos",
        "events_url": "https://api.github.com/users/andrewtoth/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: pruning for multiple chainstates\" (51622e9c1f7ed16f65844817a4a5e9bcbc157b4f)\r\n\r\nThis line gives a compilation warning. Checking if a `uint64_t` is negative is always false, and the `static_cast<uint64_t>` is also a possible underflow error if `chain.m_chain.Height() == -1`.\r\n\r\nPerhaps check if `chain.m_chain.Height() < 0` first and then assign to `chain_tip_height` after this line?",
      "created_at": "2023-09-03T17:51:21Z",
      "updated_at": "2023-09-03T17:52:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1314295003",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314295003"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314610529",
      "pull_request_review_id": 1609034756,
      "id": 1314610529,
      "node_id": "PRRC_kwDOABII585OW11h",
      "diff_hunk": "@@ -0,0 +1,7 @@\n+Pruning\n+-------\n+\n+When using assumeutxo with `-prune`, the prune budget may be exceeded. Prune budget is",
      "path": "doc/release-notes-27596.md",
      "position": null,
      "original_position": 4,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "51622e9c1f7ed16f65844817a4a5e9bcbc157b4f",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "51622e9c1f7ed16f65844817a4a5e9bcbc157b4f\r\n\r\nIt might be helpful to be more precise here (and in the prune doc). This is what a user (not a dev) will need to know assuming they have limited memory, no?\r\n\r\nHow large the exceeding can be?",
      "created_at": "2023-09-04T08:33:57Z",
      "updated_at": "2023-09-04T08:35:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1314610529",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314610529"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314618726",
      "pull_request_review_id": 1609046035,
      "id": 1314618726,
      "node_id": "PRRC_kwDOABII585OW31m",
      "diff_hunk": "@@ -5863,3 +5867,29 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     // indexed.\n     return (this->GetAll().size() > 1) ? *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<int, int> ChainstateManager::GetPruneRange(const Chainstate& chainstate, int last_height_can_prune)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};\n+    }\n+    int prune_start{0};\n+\n+    if (this->GetAll().size() > 1 && m_snapshot_chainstate.get() == &chainstate) {\n+        // Leave the blocks in the background IBD chain alone if we're pruning\n+        // the snapshot chain.\n+        prune_start = *Assert(GetSnapshotBaseHeight()) + 1;\n+    }\n+\n+    int max_prune = chainstate.m_chain.Height() - static_cast<int>(MIN_BLOCKS_TO_KEEP);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "51622e9c1f7ed16f65844817a4a5e9bcbc157b4f",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "51622e9c1f7ed16f65844817a4a5e9bcbc157b4f\r\n\r\nit's better to have std::max at this line, not below. This way I spend much less time thinking about the underflow, so does a future reviewer.",
      "created_at": "2023-09-04T08:39:00Z",
      "updated_at": "2023-09-04T08:39:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1314618726",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314618726"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5884,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314635072",
      "pull_request_review_id": 1609071331,
      "id": 1314635072,
      "node_id": "PRRC_kwDOABII585OW71A",
      "diff_hunk": "@@ -4765,6 +4765,10 @@ void ChainstateManager::CheckBlockIndex()\n     CBlockIndex* pindexFirstAssumeValid = nullptr; // Oldest ancestor of pindex which has BLOCK_ASSUMED_VALID\n     while (pindex != nullptr) {\n         nNodes++;\n+        if (pindex->pprev && pindex->nTx > 0) {\n+            // nChainTx should increase monotonically\n+            assert(pindex->pprev->nChainTx <= pindex->nChainTx);",
      "path": "src/validation.cpp",
      "position": 175,
      "original_position": 15,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9df91113b8bbab8c98924bef61da388a8141b4e6",
      "in_reply_to_id": 1310950827,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Well in theory that code is certainly prone to overflows, but I'm not sure whether that's the cause of a failure :)",
      "created_at": "2023-09-04T08:52:30Z",
      "updated_at": "2023-09-04T08:52:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1314635072",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1314635072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4843,
      "original_line": 4843,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319642325",
      "pull_request_review_id": 1617109738,
      "id": 1319642325,
      "node_id": "PRRC_kwDOABII585OqCTV",
      "diff_hunk": "@@ -5205,6 +5205,9 @@ bool ChainstateManager::ActivateSnapshot(\n         const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n         assert(chaintip_loaded);\n \n+        // Transfer possession of the mempool to the snapshot chianstate.\n+        m_snapshot_chainstate->m_mempool = m_active_chainstate->m_mempool;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "f2dd7a0c1b67d3e4a6e086a619eff34fe6625263",
      "in_reply_to_id": 1312004094,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added an assertion and comments. In practice, the mempool will be empty here because we wouldn't activate a snapshot outside of IBD, and acceptance to the mempool is closed until IBD completes. I'll add assertions elsewhere for that.",
      "created_at": "2023-09-08T09:52:36Z",
      "updated_at": "2023-09-08T14:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1319642325",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319642325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5292,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319668545",
      "pull_request_review_id": 1617109738,
      "id": 1319668545,
      "node_id": "PRRC_kwDOABII585OqItB",
      "diff_hunk": "@@ -2699,6 +2699,91 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    fs::path path = fs::PathFromString(request.params[0].get_str());\n+    if (path.is_relative()) {\n+        path = gArgs.GetDataDirNet() / path;",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "82a8744f1384f07dc30aaa6339b0b8fb32dc3af0",
      "in_reply_to_id": 1312025166,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, thanks.",
      "created_at": "2023-09-08T10:17:02Z",
      "updated_at": "2023-09-08T14:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1319668545",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319668545"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2723,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319668643",
      "pull_request_review_id": 1617109738,
      "id": 1319668643,
      "node_id": "PRRC_kwDOABII585OqIuj",
      "diff_hunk": "@@ -2699,6 +2699,91 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 17,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "82a8744f1384f07dc30aaa6339b0b8fb32dc3af0",
      "in_reply_to_id": 1312037894,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2023-09-08T10:17:08Z",
      "updated_at": "2023-09-08T14:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1319668643",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319668643"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 2713,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2735,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319670355",
      "pull_request_review_id": 1617109738,
      "id": 1319670355,
      "node_id": "PRRC_kwDOABII585OqJJT",
      "diff_hunk": "@@ -2699,6 +2699,91 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    fs::path path = fs::PathFromString(request.params[0].get_str());\n+    if (path.is_relative()) {\n+        path = gArgs.GetDataDirNet() / path;\n+    }\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        throw JSONRPCError(\n+            RPC_INVALID_PARAMETER,\n+            \"Couldn't open file \" + path.u8string() + \" for reading.\");\n+    }\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    while (max_secs_to_wait_for_headers > 0) {\n+        {\n+            LOCK(cs_main);\n+            snapshot_start_block = chainman.m_blockman.LookupBlockIndex(base_blockhash);\n+        }\n+        max_secs_to_wait_for_headers -= 1;\n+\n+        if (!snapshot_start_block) {\n+            std::this_thread::sleep_for(std::chrono::seconds(1));\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    if (snapshot_start_block == nullptr) {\n+        LogPrintf(\"[snapshot] timed out waiting for snapshot start blockheader %s\\n\",\n+            base_blockhash.ToString());\n+        throw JSONRPCError(\n+            RPC_INTERNAL_ERROR,\n+            \"Timed out waiting for base block header to appear in headers chain\");\n+    }\n+\n+    // TODO jamesob: no real need to lock cs_main here, but during testing it makes it\n+    // easier to follow the logs. We may want to remove this before merge.\n+    //\n+    LOCK(::cs_main);",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "82a8744f1384f07dc30aaa6339b0b8fb32dc3af0",
      "in_reply_to_id": 1312036195,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-09-08T10:18:56Z",
      "updated_at": "2023-09-08T14:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1319670355",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319670355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 2767,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2770,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319670520",
      "pull_request_review_id": 1617109738,
      "id": 1319670520,
      "node_id": "PRRC_kwDOABII585OqJL4",
      "diff_hunk": "@@ -2729,6 +2814,7 @@ void RegisterBlockchainRPCCommands(CRPCTable& t)\n         {\"hidden\", &waitforblockheight},\n         {\"hidden\", &syncwithvalidationinterfacequeue},\n         {\"hidden\", &dumptxoutset},\n+        {\"hidden\", &loadtxoutset},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 96,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "82a8744f1384f07dc30aaa6339b0b8fb32dc3af0",
      "in_reply_to_id": 1312038932,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, good point. Fixed.",
      "created_at": "2023-09-08T10:19:06Z",
      "updated_at": "2023-09-08T14:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1319670520",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319670520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2880,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319700227",
      "pull_request_review_id": 1617109738,
      "id": 1319700227,
      "node_id": "PRRC_kwDOABII585OqQcD",
      "diff_hunk": "@@ -2784,6 +2784,69 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    auto make_chain_data = [&](Chainstate* cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        UniValue data(UniValue::VOBJ);\n+        if (!cs || !cs->m_chain.Tip()) {\n+            return data;\n+        }\n+        const CChain& chain = cs->m_chain;\n+        const CBlockIndex* tip = chain.Tip();\n+\n+        data.pushKV(\"blocks\",                (int)chain.Height());\n+        data.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n+        data.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+        data.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n+        data.pushKV(\"snapshot_blockhash\",    cs->m_from_snapshot_blockhash.value_or(uint256{}).ToString());",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "555206238129c6ed9fcbbc498c81455c7fe6d851",
      "in_reply_to_id": 1312045678,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Actually have no idea how to express \"std::string or null\" in our RPC framework... is this possible?",
      "created_at": "2023-09-08T10:51:02Z",
      "updated_at": "2023-09-08T14:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1319700227",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319700227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2843,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319702230",
      "pull_request_review_id": 1617109738,
      "id": 1319702230,
      "node_id": "PRRC_kwDOABII585OqQ7W",
      "diff_hunk": "@@ -2784,6 +2784,69 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "555206238129c6ed9fcbbc498c81455c7fe6d851",
      "in_reply_to_id": 1312040274,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2023-09-08T10:53:20Z",
      "updated_at": "2023-09-08T14:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1319702230",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319702230"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319704895",
      "pull_request_review_id": 1617109738,
      "id": 1319704895,
      "node_id": "PRRC_kwDOABII585OqRk_",
      "diff_hunk": "@@ -144,40 +144,57 @@ void BlockManager::PruneOneBlockFile(const int fileNumber)\n     m_dirty_fileinfo.insert(fileNumber);\n }\n \n-void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height)\n+void BlockManager::FindFilesToPruneManual(\n+    std::set<int>& setFilesToPrune,\n+    int nManualPruneHeight,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     assert(IsPruneMode() && nManualPruneHeight > 0);\n \n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0) {\n+    if (chain.m_chain.Height() < 0) {\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    const auto [min_block_to_prune, last_block_can_prune] = chainman.GetPruneRange(chain, nManualPruneHeight);\n+\n     int count = 0;\n     for (int fileNumber = 0; fileNumber < m_last_blockfile; fileNumber++) {\n-        if (m_blockfile_info[fileNumber].nSize == 0 || m_blockfile_info[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n+        const auto& fileinfo = m_blockfile_info[fileNumber];\n+        if (fileinfo.nSize == 0 || fileinfo.nHeightLast > (unsigned)last_block_can_prune || fileinfo.nHeightFirst < (unsigned)min_block_to_prune) {\n             continue;\n         }\n+\n         PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n-    LogPrintf(\"Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\", nLastBlockWeCanPrune, count);\n+    LogPrintf(\"[%s] Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\",\n+        chain.GetRole(), last_block_can_prune, count);\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(\n+    std::set<int>& setFilesToPrune,\n+    int last_prune,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0 || GetPruneTarget() == 0) {\n+    // Distribute our -prune budget over all chainstates.\n+    const auto target = std::max(\n+        MIN_DISK_SPACE_FOR_BLOCK_FILES, GetPruneTarget() / chainman.GetAll().size());\n+\n+    auto chain_tip_height = static_cast<uint64_t>(chain.m_chain.Height());\n+    if (chain_tip_height < 0 || target == 0) {",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "51622e9c1f7ed16f65844817a4a5e9bcbc157b4f",
      "in_reply_to_id": 1314295003,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oops, good catch. Fixed.",
      "created_at": "2023-09-08T10:56:15Z",
      "updated_at": "2023-09-08T14:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1319704895",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319704895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 189,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319707355",
      "pull_request_review_id": 1617109738,
      "id": 1319707355,
      "node_id": "PRRC_kwDOABII585OqSLb",
      "diff_hunk": "@@ -0,0 +1,7 @@\n+Pruning\n+-------\n+\n+When using assumeutxo with `-prune`, the prune budget may be exceeded. Prune budget is",
      "path": "doc/release-notes-27596.md",
      "position": null,
      "original_position": 4,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "51622e9c1f7ed16f65844817a4a5e9bcbc157b4f",
      "in_reply_to_id": 1314610529,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Mentioned specific values here.",
      "created_at": "2023-09-08T10:58:07Z",
      "updated_at": "2023-09-08T14:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1319707355",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319707355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 4,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319709536",
      "pull_request_review_id": 1617109738,
      "id": 1319709536,
      "node_id": "PRRC_kwDOABII585OqStg",
      "diff_hunk": "@@ -5863,3 +5867,29 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     // indexed.\n     return (this->GetAll().size() > 1) ? *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<int, int> ChainstateManager::GetPruneRange(const Chainstate& chainstate, int last_height_can_prune)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};\n+    }\n+    int prune_start{0};\n+\n+    if (this->GetAll().size() > 1 && m_snapshot_chainstate.get() == &chainstate) {\n+        // Leave the blocks in the background IBD chain alone if we're pruning\n+        // the snapshot chain.\n+        prune_start = *Assert(GetSnapshotBaseHeight()) + 1;\n+    }\n+\n+    int max_prune = chainstate.m_chain.Height() - static_cast<int>(MIN_BLOCKS_TO_KEEP);",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "51622e9c1f7ed16f65844817a4a5e9bcbc157b4f",
      "in_reply_to_id": 1314618726,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-09-08T11:00:05Z",
      "updated_at": "2023-09-08T14:54:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1319709536",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319709536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5884,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320930329",
      "pull_request_review_id": 1618712088,
      "id": 1320930329,
      "node_id": "PRRC_kwDOABII585Ou8wZ",
      "diff_hunk": "@@ -431,12 +428,16 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n     int num_indexes{0};\n     int num_assumed_valid{0};\n     const int expected_assumed_valid{20};\n-    const int last_assumed_valid_idx{40};\n+    const int last_assumed_valid_idx{111};",
      "path": "src/test/validation_chainstatemanager_tests.cpp",
      "position": 149,
      "original_position": 104,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "64f431029f04cc47889dbe8fad55ccc139af9c07",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: adjust chainstate tests to use recognized snapshot base\" (64f431029f04cc47889dbe8fad55ccc139af9c07)\r\n\r\nOne problem with this change is that it makes the test less meaningful, now the snapshot block is the tip of the chain, and there are no blocks after it, so the test can no longer check that blocks after the snapshot block are added to the snapshot chain's setBlockIndex set. But it seems like if you just mine 20 blocks on line 435 and check for 120 blocks on line 440, the test will pass with no other changes and cover these blocks.\r\n\r\nAlso just in general I've been finding this test and the code around it very confusing, and think some extra comments and checks could help clarify it without having to change the existing code:\r\n\r\n```diff\r\n--- a/src/test/validation_chainstatemanager_tests.cpp\r\n+++ b/src/test/validation_chainstatemanager_tests.cpp\r\n@@ -422,17 +422,20 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\r\n \r\n     int num_indexes{0};\r\n     int num_assumed_valid{0};\r\n+    // Blocks in range [assumed_valid_start_idx, last_assumed_valid_idx) will be\r\n+    // marked as assumed-valid and not having data.\r\n     const int expected_assumed_valid{20};\r\n     const int last_assumed_valid_idx{111};\r\n     const int assumed_valid_start_idx = last_assumed_valid_idx - expected_assumed_valid;\r\n \r\n-    // Get to a valid assumeutxo snapshot\r\n-    mineBlocks(10);\r\n+    // Mine to height 120, past the hardcoded regtest assumeutxo snapshot at\r\n+    // height 110\r\n+    mineBlocks(20);\r\n \r\n     CBlockIndex* validated_tip{nullptr};\r\n     CBlockIndex* assumed_base{nullptr};\r\n     CBlockIndex* assumed_tip{WITH_LOCK(chainman.GetMutex(), return chainman.ActiveChain().Tip())};\r\n-    BOOST_CHECK_EQUAL(assumed_tip->nHeight, 110);\r\n+    BOOST_CHECK_EQUAL(assumed_tip->nHeight, 120);\r\n \r\n     auto reload_all_block_indexes = [&]() {\r\n         // For completeness, we also reset the block sequence counters to\r\n@@ -458,7 +461,7 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\r\n         LOCK(::cs_main);\r\n         auto index = cs1.m_chain[i];\r\n \r\n-        // Blocks with heights in range [90, 110] are marked ASSUMED_VALID\r\n+        // Blocks with heights in range [91, 110] are marked ASSUMED_VALID\r\n         if (i < last_assumed_valid_idx && i >= assumed_valid_start_idx) {\r\n             index->nStatus = BlockStatus::BLOCK_VALID_TREE | BlockStatus::BLOCK_ASSUMED_VALID;\r\n         }\r\n@@ -492,10 +495,36 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\r\n     // Set tip of the assume-valid-based chain to the assume-valid block\r\n     cs2.m_chain.SetTip(*assumed_base);\r\n \r\n+    // Sanity check test variables.\r\n+    BOOST_CHECK_EQUAL(num_indexes, 121); // 121 total blocks, including genesis\r\n+    BOOST_CHECK_EQUAL(assumed_tip->nHeight, 120);  // original chain has height 120\r\n+    BOOST_CHECK_EQUAL(validated_tip->nHeight, 90); // current cs1 chain has height 90\r\n+    BOOST_CHECK_EQUAL(assumed_base->nHeight, 110); // current cs2 chain has height 110\r\n+\r\n+    // Regenerate cs1.setBlockIndexCandidates and cs2.setBlockIndexCandidate and\r\n+    // check contents below.\r\n     reload_all_block_indexes();\r\n \r\n-    // The fully validated chain should have the current validated tip\r\n-    // and the assumed valid base as candidates.\r\n+    // The fully validated chain should only have the current validated tip and\r\n+    // the assumed valid base as candidates, blocks 90 and 110. Specifically:\r\n+    //\r\n+    // - It does not have blocks 0-89 because they contain less work than the\r\n+    //   chain tip.\r\n+    //\r\n+    // - It has block 90 because it has data and equal work to the chain tip,\r\n+    //   (since it is the chain tip).\r\n+    //\r\n+    // - It does not have blocks 91-109 because they do not contain data.\r\n+    //\r\n+    // - It has block 110 even though it does not have data, because\r\n+    //   LoadBlockIndex has a special case to always add the snapshot block as a\r\n+    //   candidate. The special case is only actually intended to apply to the\r\n+    //   snapshot chainstate cs2, not the background chainstate cs1, but it is\r\n+    //   written broadly and applies to both.\r\n+    //\r\n+    // - It does not have any blocks after height 110 because cs1 is a background\r\n+    //   chainstate, and only blocks where are ancestors of the snapshot block\r\n+    //   are added as candidates for the background chainstate.\r\n     BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.size(), 2);\r\n     BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.count(validated_tip), 1);\r\n     BOOST_CHECK_EQUAL(cs1.setBlockIndexCandidates.count(assumed_base), 1);\r\n@@ -503,8 +532,25 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\r\n     // The assumed-valid tolerant chain has the assumed valid base as a\r\n     // candidate, but otherwise has none of the assumed-valid (which do not\r\n     // HAVE_DATA) blocks as candidates.\r\n+    //\r\n+    // Specifically:\r\n+    // - All blocks below height 110 are not candidates, because cs2 chain tip\r\n+    //   has height 110 and they have less work than it does.\r\n+    //\r\n+    // - Block 110 is a candidate even though it does not have data, because it\r\n+    //   is the snapshot block, which is assumed valid.\r\n+    //\r\n+    // - Blocks 111-120 are added because they have data.\r\n+\r\n+    // Check that block 90 is absent\r\n     BOOST_CHECK_EQUAL(cs2.setBlockIndexCandidates.count(validated_tip), 0);\r\n+    // Check that block 109 is absent\r\n+    BOOST_CHECK_EQUAL(cs2.setBlockIndexCandidates.count(assumed_base->pprev), 0);\r\n+    // Check that block 110 is present\r\n+    BOOST_CHECK_EQUAL(cs2.setBlockIndexCandidates.count(assumed_base), 1);\r\n+    // Check that block 120 is present\r\n     BOOST_CHECK_EQUAL(cs2.setBlockIndexCandidates.count(assumed_tip), 1);\r\n+    // Check that 11 blocks total are present.\r\n     BOOST_CHECK_EQUAL(cs2.setBlockIndexCandidates.size(), num_indexes - last_assumed_valid_idx + 1);\r\n }\r\n \r\ndiff --git a/src/validation.cpp b/src/validation.cpp\r\nindex f77325daedb5..9c8815914a57 100644\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3462,7 +3462,8 @@ void Chainstate::ResetBlockFailureFlags(CBlockIndex *pindex) {\r\n void Chainstate::TryAddBlockIndexCandidate(CBlockIndex* pindex)\r\n {\r\n     AssertLockHeld(cs_main);\r\n-    // The block only is a candidate for the most-work-chain if it has more work than our current tip.\r\n+    // The block only is a candidate for the most-work-chain if it has the same\r\n+    // or more work than our current tip.\r\n     if (m_chain.Tip() != nullptr && setBlockIndexCandidates.value_comp()(pindex, m_chain.Tip())) {\r\n         return;\r\n     }\r\n```\r\n\r\nI think it would be possible to make other improvements to the test beyond just adding comments. For example, I think it would be good to get rid of most of the variables and constants and just refer to blocks directly by height. Also, it would be good to add a fork to the chain below the snapshot height, to make sure blocks not leading up to the snapshot are not added as candidates to the background chainstate.",
      "created_at": "2023-09-11T02:21:12Z",
      "updated_at": "2023-09-11T02:30:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1320930329",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320930329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 429,
      "original_line": 429,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323131550",
      "pull_request_review_id": 1622395165,
      "id": 1323131550,
      "node_id": "PRRC_kwDOABII585O3WKe",
      "diff_hunk": "@@ -70,6 +70,35 @@ struct PruneLockInfo {\n     int height_first{std::numeric_limits<int>::max()}; //! Height of earliest block that should be kept and not pruned\n };\n \n+enum class BlockfileType {\n+    // For the purposes of blockfile fragmentation, treat background IBD chainstates\n+    // as normal.\n+    NORMAL,\n+    ASSUMED,\n+};\n+\n+std::ostream& operator<<(std::ostream& os, const BlockfileType& type);\n+\n+struct BlockfileCursor {\n+    // The latest blockfile number.\n+    int file_num{0};\n+\n+    // Track the height of the highest block in m_last_blockfile whose undo",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 33,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (3ff26bc73374b53550dc2dd17dd3e1c58258fc30)\r\n\r\ns/m_last_blockfile/file_num/",
      "created_at": "2023-09-12T14:27:10Z",
      "updated_at": "2023-09-12T17:37:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1323131550",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323131550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323219325",
      "pull_request_review_id": 1622395165,
      "id": 1323219325,
      "node_id": "PRRC_kwDOABII585O3rl9",
      "diff_hunk": "@@ -92,7 +121,8 @@ class BlockManager\n      */\n     bool LoadBlockIndex(const std::optional<uint256>& snapshot_blockhash)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n-    void FlushBlockFile(bool fFinalize = false, bool finalize_undo = false);\n+    void FlushBlockFile(int blockfile_num, bool fFinalize = false, bool finalize_undo = false);",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 57,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (3ff26bc73374b53550dc2dd17dd3e1c58258fc30)\r\n\r\nPrepending new parameter to a method with default arguments can be dangerous because it can lead to silent merge conflicts. (Argument value intended as the `fFinalize` parameter could be interpreted as the `blockfile_num` parameter).\r\n\r\nIt would be pretty easy to just drop all the default arguments and make the code explicit:\r\n\r\n```diff\r\n--- a/src/node/blockstorage.h\r\n+++ b/src/node/blockstorage.h\r\n@@ -121,8 +121,8 @@ private:\r\n      */\r\n     bool LoadBlockIndex(const std::optional<uint256>& snapshot_blockhash)\r\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main);\r\n-    void FlushBlockFile(int blockfile_num, bool fFinalize = false, bool finalize_undo = false);\r\n-    void FlushChainstateBlockFile(int tip_height, bool fFinalize = false, bool finalize_undo = false);\r\n+    void FlushBlockFile(int blockfile_num, bool fFinalize, bool finalize_undo);\r\n+    void FlushChainstateBlockFile(int tip_height);\r\n     void FlushUndoFile(int block_file, bool finalize = false);\r\n     bool FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigned int nHeight, uint64_t nTime, bool fKnown);\r\n     bool FindUndoPos(BlockValidationState& state, int nFile, FlatFilePos& pos, unsigned int nAddSize);\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -630,14 +630,14 @@ BlockfileType BlockManager::BlockfileTypeForHeight(int height)\r\n     return (height >= *m_snapshot_height) ? BlockfileType::ASSUMED : BlockfileType::NORMAL;\r\n }\r\n \r\n-void BlockManager::FlushChainstateBlockFile(int tip_height, bool finalize, bool finalize_undo)\r\n+void BlockManager::FlushChainstateBlockFile(int tip_height)\r\n {\r\n     LOCK(cs_LastBlockFile);\r\n     auto& cursor = m_blockfile_cursors[BlockfileTypeForHeight(tip_height)];\r\n     if (cursor) {\r\n         // The cursor may not exist after a snapshot has been loaded but before any\r\n         // blocks have been downloaded.\r\n-        return FlushBlockFile(cursor->file_num, finalize, finalize_undo);\r\n+        return FlushBlockFile(cursor->file_num, /*fFinalize=*/false, /*finalize_undo=*/false);\r\n     }\r\n }\r\n \r\n```",
      "created_at": "2023-09-12T15:27:55Z",
      "updated_at": "2023-09-12T17:37:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1323219325",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323219325"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323226418",
      "pull_request_review_id": 1622395165,
      "id": 1323226418,
      "node_id": "PRRC_kwDOABII585O3tUy",
      "diff_hunk": "@@ -4765,6 +4765,10 @@ void ChainstateManager::CheckBlockIndex()\n     CBlockIndex* pindexFirstAssumeValid = nullptr; // Oldest ancestor of pindex which has BLOCK_ASSUMED_VALID\n     while (pindex != nullptr) {\n         nNodes++;\n+        if (pindex->pprev && pindex->nTx > 0) {\n+            // nChainTx should increase monotonically\n+            assert(pindex->pprev->nChainTx <= pindex->nChainTx);",
      "path": "src/validation.cpp",
      "position": 175,
      "original_position": 15,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9df91113b8bbab8c98924bef61da388a8141b4e6",
      "in_reply_to_id": 1310950827,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310950827\r\n\r\nIn commit \"validation: populate nChainTx value for assumedvalid chainstates\" (e3cae85738c8bf4116547af8d868c6c01577b80f)\r\n\r\nIt seems like one thing that was causing this assert to fail is that the hardcoded regtest `nChainTx` value is wrong. If I change the snapshot `nChainTx` value from `110` to `111` tests are able to pass.\r\n\r\nAnother problem is that some tests avoid storing blocks, so leave the `nChainTx` value unset. If I update the assert to allow `nChainTx` to still be unset, all tests seem to pass.\r\n\r\nSo I think the following changes would be make the check stronger and clarify the code:\r\n\r\n```diff\r\n--- a/src/kernel/chainparams.cpp\r\n+++ b/src/kernel/chainparams.cpp\r\n@@ -493,7 +493,7 @@ public:\r\n             {\r\n                 .height = 110,\r\n                 .hash_serialized = AssumeutxoHash{uint256S(\"0x1ebbf5850204c0bdb15bf030f47c7fe91d45c44c712697e4509ba67adb01c618\")},\r\n-                .nChainTx = 110,\r\n+                .nChainTx = 111,\r\n                 .blockhash = uint256S(\"0x696e92821f65549c7ee134edceeeeaaa4105647a3c4fd9f298c0aec0ab50425c\")\r\n             },\r\n             {\r\n--- a/src/test/validation_tests.cpp\r\n+++ b/src/test/validation_tests.cpp\r\n@@ -138,11 +138,11 @@ BOOST_AUTO_TEST_CASE(test_assumeutxo)\r\n \r\n     const auto out110 = *params->AssumeutxoForHeight(110);\r\n     BOOST_CHECK_EQUAL(out110.hash_serialized.ToString(), \"1ebbf5850204c0bdb15bf030f47c7fe91d45c44c712697e4509ba67adb01c618\");\r\n-    BOOST_CHECK_EQUAL(out110.nChainTx, 110U);\r\n+    BOOST_CHECK_EQUAL(out110.nChainTx, 111U);\r\n \r\n     const auto out110_2 = *params->AssumeutxoForBlockhash(uint256S(\"0x696e92821f65549c7ee134edceeeeaaa4105647a3c4fd9f298c0aec0ab50425c\"));\r\n     BOOST_CHECK_EQUAL(out110_2.hash_serialized.ToString(), \"1ebbf5850204c0bdb15bf030f47c7fe91d45c44c712697e4509ba67adb01c618\");\r\n-    BOOST_CHECK_EQUAL(out110_2.nChainTx, 110U);\r\n+    BOOST_CHECK_EQUAL(out110_2.nChainTx, 111U);\r\n }\r\n \r\n BOOST_AUTO_TEST_SUITE_END()\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -4762,10 +4762,15 @@ void ChainstateManager::CheckBlockIndex()\r\n     CBlockIndex* pindexFirstAssumeValid = nullptr; // Oldest ancestor of pindex which has BLOCK_ASSUMED_VALID\r\n     while (pindex != nullptr) {\r\n         nNodes++;\r\n-        if (pindex->pprev && pindex->nTx > 0) {\r\n-            // nChainTx should increase monotonically\r\n-            assert(pindex->pprev->nChainTx <= pindex->nChainTx);\r\n-        }\r\n+\r\n+        // Make sure nChainTx sum is correctly computed.\r\n+        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\r\n+        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\r\n+               // For testing, allow transaction counts to be completely unset.\r\n+               || (pindex->nChainTx == 0 && pindex->nTx == 0)\r\n+               // For testing, allow this nChainTx to be unset if previous is also unset.\r\n+               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev));\r\n+\r\n         if (pindexFirstAssumeValid == nullptr && pindex->nStatus & BLOCK_ASSUMED_VALID) pindexFirstAssumeValid = pindex;\r\n         if (pindexFirstInvalid == nullptr && pindex->nStatus & BLOCK_FAILED_VALID) pindexFirstInvalid = pindex;\r\n         if (pindexFirstMissing == nullptr && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\r\n```",
      "created_at": "2023-09-12T15:32:59Z",
      "updated_at": "2023-09-12T17:37:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1323226418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323226418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4843,
      "original_line": 4843,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323283485",
      "pull_request_review_id": 1622395165,
      "id": 1323283485,
      "node_id": "PRRC_kwDOABII585O37Qd",
      "diff_hunk": "@@ -386,6 +395,15 @@ bool BlockManager::LoadBlockIndexDB(const std::optional<uint256>& snapshot_block\n         }\n     }\n \n+    {\n+        // Initialize the blockfile cursors.\n+        LOCK(cs_LastBlockFile);\n+        for (size_t i = 0; i < m_blockfile_info.size(); ++i) {\n+            const auto last_height_in_file = m_blockfile_info[i].nHeightLast;\n+            m_blockfile_cursors[BlockfileTypeForHeight(last_height_in_file)] = {static_cast<int>(i), 0};",
      "path": "src/node/blockstorage.cpp",
      "position": 227,
      "original_position": 106,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (3ff26bc73374b53550dc2dd17dd3e1c58258fc30)\r\n\r\nNo need to change, but if you wanted an easy way to avoid repeatedly looking up the same two map elements in a loop, you could just replace the `m_blockfile_cursors` map with a fixed size array like @ajtowns recently suggested for https://github.com/bitcoin/bitcoin/pull/27213#discussion_r1281498873. I think the benefits would be similar: not just more efficiency but also more straightforward code where you don't have think about the `[]` operator default constructing elements or `at` method throwing exceptions.",
      "created_at": "2023-09-12T16:18:51Z",
      "updated_at": "2023-09-12T17:37:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1323283485",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323283485"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 516,
      "original_line": 516,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323297281",
      "pull_request_review_id": 1622395165,
      "id": 1323297281,
      "node_id": "PRRC_kwDOABII585O3-oB",
      "diff_hunk": "@@ -187,6 +226,19 @@ class BlockManager\n \n     BlockMap m_block_index GUARDED_BY(cs_main);\n \n+    /**\n+     * The height of the base block of an assumeutxo snapshot, if one is in use.\n+     *\n+     * This controls how blockfiles are segmented by chainstate type to avoid\n+     * comingling different height regions of the chain when an assumedvalid chainstate\n+     * is in use. If heights are drastically different in the same blockfile, pruning\n+     * suffers.\n+     *\n+     * This is set during ActivateSnapshot() or upon LoadBlockIndex() if a snapshot\n+     * had been previously loaded.",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 123,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (3ff26bc73374b53550dc2dd17dd3e1c58258fc30)\r\n\r\nCan the comment also say what happens after the snapshot is validated?",
      "created_at": "2023-09-12T16:31:13Z",
      "updated_at": "2023-09-12T17:37:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1323297281",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323297281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 237,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323311919",
      "pull_request_review_id": 1622395165,
      "id": 1323311919,
      "node_id": "PRRC_kwDOABII585O4CMv",
      "diff_hunk": "@@ -136,19 +166,26 @@ class BlockManager\n \n     RecursiveMutex cs_LastBlockFile;\n     std::vector<CBlockFileInfo> m_blockfile_info;\n-    int m_last_blockfile = 0;\n \n-    // Track the height of the highest block in m_last_blockfile whose undo\n-    // data has been written. Block data is written to block files in download\n-    // order, but is written to undo files in validation order, which is\n-    // usually in order by height. To avoid wasting disk space, undo files will\n-    // be trimmed whenever the corresponding block file is finalized and\n-    // the height of the highest block written to the block file equals the\n-    // height of the highest block written to the undo file. This is a\n-    // heuristic and can sometimes preemptively trim undo files that will write\n-    // more data later, and sometimes fail to trim undo files that can't have\n-    // more data written later.\n-    unsigned int m_undo_height_in_last_blockfile = 0;\n+    //! Since assumedvalid chainstates may be syncing a range of the chain that is very\n+    //! far away from the normal/background validation process, we should segment blockfiles\n+    //! for assumed chainstates. Otherwise, we might have wildly different height ranges\n+    //! mixed into the same block files, which would impair our ability to prune\n+    //! effectively.\n+    //!\n+    //! This data structure maintains separate blockfile number cursors for each\n+    //! BlockfileType. The ASSUMED state is initialized, when necessary, in FindBlockPos().\n+    std::map<BlockfileType, std::optional<BlockfileCursor>> m_blockfile_cursors GUARDED_BY(cs_LastBlockFile) = {\n+        {BlockfileType::NORMAL, BlockfileCursor{}},\n+        {BlockfileType::ASSUMED, std::nullopt},\n+    };\n+    int MaxBlockfileNum() const EXCLUSIVE_LOCKS_REQUIRED(cs_LastBlockFile)\n+    {\n+        static const BlockfileCursor empty_cursor{0, 0};",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 93,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (3ff26bc73374b53550dc2dd17dd3e1c58258fc30)\r\n\r\nHere and other places in this PR, I think it would be nice avoid hardcoding these 0's, and just use the default values that are already assigned in the struct definition. Alternately, if you think it is better to explicitly assign every field, it might be better to remove the default assignments in the struct so the compiler can warn when the assignments are missing.",
      "created_at": "2023-09-12T16:45:01Z",
      "updated_at": "2023-09-12T17:37:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1323311919",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323311919"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323314721",
      "pull_request_review_id": 1622395165,
      "id": 1323314721,
      "node_id": "PRRC_kwDOABII585O4C4h",
      "diff_hunk": "@@ -783,10 +843,10 @@ bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValid\n         // in the block file info as below; note that this does not catch the case where the undo writes are keeping up\n         // with the block writes (usually when a synced up node is getting newly mined blocks) -- this case is caught in\n         // the FindBlockPos function\n-        if (_pos.nFile < m_last_blockfile && static_cast<uint32_t>(block.nHeight) == m_blockfile_info[_pos.nFile].nHeightLast) {\n+        if (_pos.nFile < static_cast<int>(cursor.file_num) && static_cast<uint32_t>(block.nHeight) == m_blockfile_info[_pos.nFile].nHeightLast) {",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 256,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (3ff26bc73374b53550dc2dd17dd3e1c58258fc30)\r\n\r\nstatic_cast\\<int> here and below seems unnecessary because file_num should already be an int.",
      "created_at": "2023-09-12T16:47:41Z",
      "updated_at": "2023-09-12T17:37:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1323314721",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323314721"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 846,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323325683",
      "pull_request_review_id": 1622395165,
      "id": 1323325683,
      "node_id": "PRRC_kwDOABII585O4Fjz",
      "diff_hunk": "@@ -583,15 +623,30 @@ void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n         // have populated `m_blockfile_info` via LoadBlockIndexDB().\n         return;\n     }\n-    assert(static_cast<int>(m_blockfile_info.size()) > m_last_blockfile);\n+    assert(static_cast<int>(m_blockfile_info.size()) > blockfile_num);\n \n-    FlatFilePos block_pos_old(m_last_blockfile, m_blockfile_info[m_last_blockfile].nSize);\n+    FlatFilePos block_pos_old(blockfile_num, m_blockfile_info[blockfile_num].nSize);\n     if (!BlockFileSeq().Flush(block_pos_old, fFinalize)) {\n         m_opts.notifications.flushError(\"Flushing block file to disk failed. This is likely the result of an I/O error.\");\n     }\n     // we do not always flush the undo file, as the chain tip may be lagging behind the incoming blocks,\n     // e.g. during IBD or a sync after a node going offline\n-    if (!fFinalize || finalize_undo) FlushUndoFile(m_last_blockfile, finalize_undo);\n+    if (!fFinalize || finalize_undo) FlushUndoFile(blockfile_num, finalize_undo);\n+}\n+\n+static BlockfileType BlockfileTypeForRole(ChainstateRole chainstate_role)\n+{\n+    return chainstate_role == ChainstateRole::ASSUMEDVALID ?\n+        BlockfileType::ASSUMED : BlockfileType::NORMAL;\n+}\n+\n+void BlockManager::FlushChainstateBlockFile(ChainstateRole chainstate_role, bool finalize, bool finalize_undo)\n+{\n+    LOCK(cs_LastBlockFile);\n+    auto& cursor = m_blockfile_cursors[BlockfileTypeForRole(chainstate_role)];\n+    if (cursor) {",
      "path": "src/node/blockstorage.cpp",
      "position": 294,
      "original_position": 155,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": 1310990937,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1310990937\r\n\r\nIn commit \"blockstorage: segment normal/assumedvalid blockfiles\" (3ff26bc73374b53550dc2dd17dd3e1c58258fc30)\r\n\r\nWould suggest following change to mention it should be safe not to flush and also move the comment to be clearer it is describing the `if` condition not the flush call:\r\n\r\n```diff\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -634,9 +634,10 @@ void BlockManager::FlushChainstateBlockFile(int tip_height, bool finalize, bool\r\n {\r\n     LOCK(cs_LastBlockFile);\r\n     auto& cursor = m_blockfile_cursors[BlockfileTypeForHeight(tip_height)];\r\n+    // If the cursor does not exist, it means an assumeutxo snapshot is loaded,\r\n+    // but no blocks past the snapshot height have been written yet, so there\r\n+    // is no data associated with the chainstate, and it is safe not to flush.\r\n     if (cursor) {\r\n-        // The cursor may not exist after a snapshot has been loaded but before any\r\n-        // blocks have been downloaded.\r\n         return FlushBlockFile(cursor->file_num, finalize, finalize_undo);\r\n     }\r\n }\r\n```",
      "created_at": "2023-09-12T16:57:49Z",
      "updated_at": "2023-09-12T17:37:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1323325683",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323325683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 759,
      "original_line": 759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323346256",
      "pull_request_review_id": 1622395165,
      "id": 1323346256,
      "node_id": "PRRC_kwDOABII585O4KlQ",
      "diff_hunk": "@@ -675,27 +724,35 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\n             }\n         }\n         assert(nAddSize < max_blockfile_size);\n+\n         while (m_blockfile_info[nFile].nSize + nAddSize >= max_blockfile_size) {\n             // when the undo file is keeping up with the block file, we want to flush it explicitly\n             // when it is lagging behind (more blocks arrive than are being connected), we let the\n             // undo block write case handle it\n-            finalize_undo = (m_blockfile_info[nFile].nHeightLast == m_undo_height_in_last_blockfile);\n-            nFile++;\n-            if (m_blockfile_info.size() <= nFile) {\n+            finalize_undo = (static_cast<int>(m_blockfile_info[nFile].nHeightLast) ==\n+                    Assert(m_blockfile_cursors[chain_type])->undo_height);\n+\n+            // Try the next unclaimed blockfile number\n+            nFile = this->MaxBlockfileNum() + 1;\n+            // Set to increment MaxBlockfileNum() for next iteration\n+            m_blockfile_cursors[chain_type] = BlockfileCursor{static_cast<int>(nFile), 0};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 215,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (3ff26bc73374b53550dc2dd17dd3e1c58258fc30)\r\n\r\n`static_cast<int>(nFile)` cast here and blow seems unnecessary since nFile is already an int",
      "created_at": "2023-09-12T17:18:47Z",
      "updated_at": "2023-09-12T17:37:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1323346256",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323346256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 738,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323349847",
      "pull_request_review_id": 1622395165,
      "id": 1323349847,
      "node_id": "PRRC_kwDOABII585O4LdX",
      "diff_hunk": "@@ -70,6 +71,30 @@ struct PruneLockInfo {\n     int height_first{std::numeric_limits<int>::max()}; //! Height of earliest block that should be kept and not pruned\n };\n \n+enum class BlockfileType {\n+    // For the purposes of blockfile fragmentation, treat background IBD chainstates\n+    // as normal.",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 14,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": 1310979704,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1311988064\r\n\r\nIn commit \"blockstorage: segment normal/assumedvalid blockfiles\" (3ff26bc73374b53550dc2dd17dd3e1c58258fc30)\r\n\r\n> I've just removed the comment because I don't think it adds much anymore.\r\n\r\nComment seems to be here still (and would be good to remove)",
      "created_at": "2023-09-12T17:22:44Z",
      "updated_at": "2023-09-12T17:37:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1323349847",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323349847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 75,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323352284",
      "pull_request_review_id": 1622395165,
      "id": 1323352284,
      "node_id": "PRRC_kwDOABII585O4MDc",
      "diff_hunk": "@@ -265,13 +265,26 @@ CBlockIndex* BlockManager::InsertBlockIndex(const uint256& hash)\n     return pindex;\n }\n \n-bool BlockManager::LoadBlockIndex()\n+bool BlockManager::LoadBlockIndex(const std::optional<uint256>& snapshot_blockhash)\n {\n     if (!m_block_tree_db->LoadBlockIndexGuts(\n             GetConsensus(), [this](const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) { return this->InsertBlockIndex(hash); }, m_interrupt)) {\n         return false;\n     }\n \n+    int snapshot_height = -1;\n+    if (snapshot_blockhash) {\n+        const AssumeutxoData au_data = *Assert(GetParams().AssumeutxoForBlockhash(*snapshot_blockhash));\n+        snapshot_height = au_data.height;\n+        CBlockIndex* base{LookupBlockIndex(*snapshot_blockhash)};\n+\n+        // Since nChainTx (responsible for estiamted progress) isn't persisted",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "e3cae85738c8bf4116547af8d868c6c01577b80f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: populate nChainTx value for assumedvalid chainstates\" (e3cae85738c8bf4116547af8d868c6c01577b80f)\r\n\r\nestimated",
      "created_at": "2023-09-12T17:25:15Z",
      "updated_at": "2023-09-12T17:37:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1323352284",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1323352284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325166462",
      "pull_request_review_id": 1625584894,
      "id": 1325166462,
      "node_id": "PRRC_kwDOABII585O_G9-",
      "diff_hunk": "@@ -5671,16 +5676,20 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",\n         fs::PathToString(*path));\n \n-    this->ActivateExistingSnapshot(mempool, *base_blockhash);\n+    this->ActivateExistingSnapshot(*base_blockhash);\n     return true;\n }\n \n-Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uint256 base_blockhash)\n+Chainstate& ChainstateManager::ActivateExistingSnapshot(uint256 base_blockhash)\n {\n     assert(!m_snapshot_chainstate);\n     m_snapshot_chainstate =\n-        std::make_unique<Chainstate>(mempool, m_blockman, *this, base_blockhash);\n+        std::make_unique<Chainstate>(nullptr, m_blockman, *this, base_blockhash);\n     LogPrintf(\"[snapshot] switching active chainstate to %s\\n\", m_snapshot_chainstate->ToString());\n+    Assert(!m_snapshot_chainstate->m_mempool);\n+    // Mempool is empty at this point because we're still in IBD.\n+    m_snapshot_chainstate->m_mempool = m_active_chainstate->m_mempool;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "0958f11c18c615c83632129e7f9d010c71f480ea",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: assumeutxo: swap m_mempool on snapshot activation\" (0958f11c18c615c83632129e7f9d010c71f480ea)\r\n\r\nWould be nice  to add asserts here and above to back up the \"Mempool is empty at this point\" comment.\r\n\r\n```c++\r\nassert(m_active_chainstate->m_mempool->size() == 0);\r\n```\r\n\r\nI see there is another check added earlier in the code b9448bb8059208807492300bc84294a7f2f38edf, but this seems like a pretty important invariant to check in the actual places where the mempool swaps are happening.",
      "created_at": "2023-09-13T23:27:09Z",
      "updated_at": "2023-09-14T02:31:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325166462",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325166462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 5690,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5793,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325169631",
      "pull_request_review_id": 1625584894,
      "id": 1325169631,
      "node_id": "PRRC_kwDOABII585O_Hvf",
      "diff_hunk": "@@ -5,3 +5,22 @@ When using assumeutxo with `-prune`, the prune budget may be exceeded if it is s\n lower than 1100MB (i.e. `MIN_DISK_SPACE_FOR_BLOCK_FILES * 2`). Prune budget is normally\n split evenly across each chainstate, unless the resulting prune budget per chainstate\n is beneath `MIN_DISK_SPACE_FOR_BLOCK_FILES` in which case that value will be used.\n+\n+RPC\n+---\n+\n+`loadtxoutset` has been added, which allows loading a UTXO snapshot of the format\n+generated by `dumptxoutset`. Once this snapshot is loaded, its contents will be\n+deserialized into a second chainstate data structure, which is then used to sync to\n+the network's tip under a security model very much like `assumevalid`.\n+\n+Meanwhile, the original chainstate will complete the initial block download process in\n+the background, eventually validating up to the block that the snapshot is based upon.\n+\n+The result is a usable bitcoind instance that is current with the network tip in a\n+matter of minutes rather than hours. UTXO snapshot are typically obtained sources\n+third-party (HTTP, torrent, etc.) which is allowable since their contents are always\n+checked by hash.",
      "path": "doc/release-notes-27596.md",
      "position": null,
      "original_position": 19,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "d9405fe1b7ea30861be7b84515e13a149109be36",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add loadtxoutset\" (d9405fe1b7ea30861be7b84515e13a149109be36)\r\n\r\nThis information is nice to have in release notes, but it would be even more useful to have in the `loadtxoutset` RPC documentation. Right now the help text just consists of \"Load the serialized UTXO set from disk\" which does not provide much context.",
      "created_at": "2023-09-13T23:34:17Z",
      "updated_at": "2023-09-14T02:31:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325169631",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325169631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 12,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325175909",
      "pull_request_review_id": 1625584894,
      "id": 1325175909,
      "node_id": "PRRC_kwDOABII585O_JRl",
      "diff_hunk": "@@ -2699,6 +2700,95 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"coins_loaded\", \"the number of coins loaded from the snapshot\"},\n+                    {RPCResult::Type::STR_HEX, \"tip_hash\", \"the hash of the base of the snapshot\"},\n+                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n+                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was loaded from\"},\n+                }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    fs::path path{AbsPathForConfigVal(EnsureArgsman(node), fs::u8path(request.params[0].get_str()))};\n+\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        throw JSONRPCError(\n+            RPC_INVALID_PARAMETER,\n+            \"Couldn't open file \" + path.u8string() + \" for reading.\");\n+    }\n+\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    while (max_secs_to_wait_for_headers > 0) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 73,
      "original_position": 60,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "d9405fe1b7ea30861be7b84515e13a149109be36",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add loadtxoutset\" (d9405fe1b7ea30861be7b84515e13a149109be36)\r\n\r\nWould be good check `IsRPCRunning` and raise RPC_CLIENT_NOT_CONNECTED if it returns false so this doesn't delay shutdown.",
      "created_at": "2023-09-13T23:48:38Z",
      "updated_at": "2023-09-14T02:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325175909",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325175909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2764,
      "original_line": 2764,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325193433",
      "pull_request_review_id": 1625584894,
      "id": 1325193433,
      "node_id": "PRRC_kwDOABII585O_NjZ",
      "diff_hunk": "@@ -2699,6 +2700,95 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"coins_loaded\", \"the number of coins loaded from the snapshot\"},\n+                    {RPCResult::Type::STR_HEX, \"tip_hash\", \"the hash of the base of the snapshot\"},\n+                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n+                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was loaded from\"},\n+                }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    fs::path path{AbsPathForConfigVal(EnsureArgsman(node), fs::u8path(request.params[0].get_str()))};\n+\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        throw JSONRPCError(\n+            RPC_INVALID_PARAMETER,\n+            \"Couldn't open file \" + path.u8string() + \" for reading.\");\n+    }\n+\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    while (max_secs_to_wait_for_headers > 0) {\n+        snapshot_start_block = WITH_LOCK(::cs_main,\n+            return chainman.m_blockman.LookupBlockIndex(base_blockhash));\n+        max_secs_to_wait_for_headers -= 1;\n+\n+        if (!snapshot_start_block) {\n+            std::this_thread::sleep_for(std::chrono::seconds(1));\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    if (!snapshot_start_block) {\n+        LogPrintf(\"[snapshot] timed out waiting for snapshot start blockheader %s\\n\",\n+            base_blockhash.ToString());\n+        throw JSONRPCError(\n+            RPC_INTERNAL_ERROR,\n+            \"Timed out waiting for base block header to appear in headers chain\");\n+    }\n+    int active_height{WITH_LOCK(::cs_main, return chainman.ActiveHeight())};\n+    if (active_height >= snapshot_start_block->nHeight) {\n+        throw JSONRPCError(\n+            RPC_MISC_ERROR,\n+            \"Cannot activate a snapshot after the active chain has passed its base block.\");",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "d9405fe1b7ea30861be7b84515e13a149109be36",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add loadtxoutset\" (d9405fe1b7ea30861be7b84515e13a149109be36)\r\n\r\nIs there a race here? It seems good to check the height of the snapshot to provide a user friendly error if there is an attempt to download a snapshot that would not speed up synchronization, but because the check is done so early, before `PopulateAndValidateSnapshot` runs, it seems like the background chain could exceed this height by the time the snapshot is activated. I don't see currently see another check in ActivateSnapshot that would prevent this (though I didn't look exhaustively).\r\n\r\nIn any case, I think it would be good to move this check to the `ActivateSnapshot` function so it could be implemented without any race, and good to have `ActivateSnapshot` return `util::Result` instead of bool. This would let `ActivateSnapshot` return other descriptive errors to the RPC caller like the \"can't activate a snapshot-based chainstate more than once\" error. This would also make a GUI assumeutxo feature easier to implement, so GUI code wouldn't have to duplicate RPC code.\r\n",
      "created_at": "2023-09-14T00:10:17Z",
      "updated_at": "2023-09-14T02:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325193433",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325193433"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2774,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325201611",
      "pull_request_review_id": 1625584894,
      "id": 1325201611,
      "node_id": "PRRC_kwDOABII585O_PjL",
      "diff_hunk": "@@ -2789,6 +2789,85 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::BOOL, \"initialblockdownload\", \"is this chainstate in IBD\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "51dbde2bb73bcd03f73e3d5eb6c998e5e01b5536",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add getchainstates\" (51dbde2bb73bcd03f73e3d5eb6c998e5e01b5536)\r\n\r\nWould suggest dropping this field from chainstate information. I don't think it makes sense anymore after #28218",
      "created_at": "2023-09-14T00:22:36Z",
      "updated_at": "2023-09-14T02:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325201611",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325201611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2798,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325204093",
      "pull_request_review_id": 1625584894,
      "id": 1325204093,
      "node_id": "PRRC_kwDOABII585O_QJ9",
      "diff_hunk": "@@ -2784,6 +2784,69 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    auto make_chain_data = [&](Chainstate* cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        UniValue data(UniValue::VOBJ);\n+        if (!cs || !cs->m_chain.Tip()) {\n+            return data;\n+        }\n+        const CChain& chain = cs->m_chain;\n+        const CBlockIndex* tip = chain.Tip();\n+\n+        data.pushKV(\"blocks\",                (int)chain.Height());\n+        data.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n+        data.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+        data.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n+        data.pushKV(\"snapshot_blockhash\",    cs->m_from_snapshot_blockhash.value_or(uint256{}).ToString());",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "555206238129c6ed9fcbbc498c81455c7fe6d851",
      "in_reply_to_id": 1312045678,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1312045678\r\n\r\nIn commit \"rpc: add getchainstates\" (51dbde2bb73bcd03f73e3d5eb6c998e5e01b5536)\r\n\r\n> Actually have no idea how to express \"std::string or null\" in our RPC framework... is this possible?\r\n\r\nI think you already did it on the documentation side `/*optional=*/true` above, since in general we treat null and missing values the same.",
      "created_at": "2023-09-14T00:28:11Z",
      "updated_at": "2023-09-14T02:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325204093",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325204093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2843,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325204659",
      "pull_request_review_id": 1625584894,
      "id": 1325204659,
      "node_id": "PRRC_kwDOABII585O_QSz",
      "diff_hunk": "@@ -2789,6 +2789,85 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::BOOL, \"initialblockdownload\", \"is this chainstate in IBD\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::STR, \"active_chain_type\", \"one of \\\"ibd\\\", \\\"snapshot\\\", \\\"validated_snapshot\\\"\"},\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"ibd\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"validated_snapshot\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "51dbde2bb73bcd03f73e3d5eb6c998e5e01b5536",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add getchainstates\" (51dbde2bb73bcd03f73e3d5eb6c998e5e01b5536)\r\n\r\nDescriptions for these 3 fields aren't right, same one is copied over",
      "created_at": "2023-09-14T00:29:47Z",
      "updated_at": "2023-09-14T02:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325204659",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325204659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 2813,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2815,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325221867",
      "pull_request_review_id": 1625584894,
      "id": 1325221867,
      "node_id": "PRRC_kwDOABII585O_Ufr",
      "diff_hunk": "@@ -2789,6 +2789,85 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::BOOL, \"initialblockdownload\", \"is this chainstate in IBD\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::STR, \"active_chain_type\", \"one of \\\"ibd\\\", \\\"snapshot\\\", \\\"validated_snapshot\\\"\"},\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"ibd\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"validated_snapshot\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    auto make_chain_data = [&](Chainstate* cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        UniValue data(UniValue::VOBJ);\n+        if (!cs || !cs->m_chain.Tip()) {\n+            return data;\n+        }\n+        const CChain& chain = cs->m_chain;\n+        const CBlockIndex* tip = chain.Tip();\n+\n+        data.pushKV(\"blocks\",                (int)chain.Height());\n+        data.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n+        data.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+        data.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n+        data.pushKV(\"snapshot_blockhash\",    cs->m_from_snapshot_blockhash.value_or(uint256{}).ToString());\n+        data.pushKV(\"initialblockdownload\",  chainman.IsInitialBlockDownload());\n+        data.pushKV(\"coins_db_cache_bytes\",  cs->m_coinsdb_cache_size_bytes);\n+        data.pushKV(\"coins_tip_cache_bytes\", cs->m_coinstip_cache_size_bytes);\n+        return data;\n+    };\n+\n+    auto get_chain_type = [&chainman](Chainstate* cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        if (cs->m_from_snapshot_blockhash) {\n+            return (chainman.IsSnapshotValidated() ? \"validated_snapshot\" : \"snapshot\");\n+        }\n+        return \"ibd\";\n+    };",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "51dbde2bb73bcd03f73e3d5eb6c998e5e01b5536",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add getchainstates\" (51dbde2bb73bcd03f73e3d5eb6c998e5e01b5536)\r\n\r\nIMO, it is confusing and not useful to expose this \"ibd chainstate\" and \"validated_snapshot\" and \"active chainstate\" jargon to users. \r\n\r\nI would suggest dropping the \"active_chainstate\" field because it is trivial to infer which chainstate is \"active\" from the chainstate type. Having this field just adds ambiguity about what states are possible. I would also get rid of the 3-way \"validated_snapshot\" / \"snapshot\" / \"ibd\" split. The name \"ibd\" seems especially unhelpful because it seems to refer to a phase of download, not an chainstate or UTXO state.\r\n\r\nWould suggest returning just two chainstate fields:\r\n\r\n- One called \"normal\", which is always present, providing information about the fully validated chainstate.\r\n- One called \"snapshot\", which is only present when a snapshot is being validated, providing information about the partially validated chainstate based on the snapshot.\r\n\r\nAfter the snapshot chainstate is validated it should disappear, and there should just a \"normal\" chainstate.\r\n\r\nI don't think after snapshot is validated the RPC should enter a weird transient state where it is exposing information about an unused chainstate that is about to be deleted. The fact that the unused chainstate is not deleted until the next startup is a kludge we should fix, not a characteristic that should be baked into the terminology and UI.",
      "created_at": "2023-09-14T01:10:52Z",
      "updated_at": "2023-09-14T02:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325221867",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325221867"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 2850,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2856,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325243993",
      "pull_request_review_id": 1625584894,
      "id": 1325243993,
      "node_id": "PRRC_kwDOABII585O_Z5Z",
      "diff_hunk": "@@ -0,0 +1,221 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test for assumeutxo, a means of quickly bootstrapping a node using\n+a serialized version of the UTXO set at a certain height, which corresponds\n+to a hash that has been compiled into bitcoind.\n+\n+The assumeutxo value generated and used here is committed to in\n+`CRegTestParams::m_assumeutxo_data` in `src/chainparams.cpp`.\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, wait_until_helper\n+\n+START_HEIGHT = 199\n+SNAPSHOT_BASE_HEIGHT = 299\n+FINAL_HEIGHT = 399\n+COMPLETE_IDX = {'synced': True, 'best_block_height': FINAL_HEIGHT}\n+\n+\n+class AssumeutxoTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        \"\"\"Use the pregenerated, deterministic chain up to height 199.\"\"\"\n+        self.num_nodes = 3\n+        self.rpc_timeout = 120\n+        self.extra_args = [\n+            [],\n+            [\"-fastprune\", \"-prune=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+            [\"-txindex=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+        ]\n+\n+    def setup_network(self):\n+        \"\"\"Start with the nodes disconnected so that one can generate a snapshot\n+        including blocks the other hasn't yet seen.\"\"\"\n+        self.add_nodes(3)\n+        self.start_nodes(extra_args=self.extra_args)\n+\n+    def run_test(self):\n+        \"\"\"\n+        Bring up two (disconnected) nodes, mine some new blocks on the first,\n+        and generate a UTXO snapshot.\n+\n+        Load the snapshot into the second, ensure it syncs to tip and completes\n+        background validation when connected to the first.\n+        \"\"\"\n+        n0 = self.nodes[0]\n+        n1 = self.nodes[1]\n+        n2 = self.nodes[2]\n+\n+        # Mock time for a deterministic chain\n+        for n in self.nodes:\n+            n.setmocktime(n.getblockheader(n.getbestblockhash())['time'])\n+\n+        self.sync_blocks()\n+\n+        def no_sync():\n+            pass\n+\n+        # Generate a series of blocks that `n0` will have in the snapshot,\n+        # but that n1 doesn't yet see. In order for the snapshot to activate,\n+        # though, we have to ferry over the new headers to n1 so that it\n+        # isn't waiting forever to see the header of the snapshot's base block\n+        # while disconnected from n0.\n+        for i in range(100):\n+            self.generate(n0, nblocks=1, sync_fun=no_sync)\n+            newblock = n0.getblock(n0.getbestblockhash(), 0)\n+\n+            # make n1 aware of the new header, but don't give it the block.\n+            n1.submitheader(newblock)\n+            n2.submitheader(newblock)\n+\n+        # Ensure everyone is seeing the same headers.\n+        for n in self.nodes:\n+            assert_equal(n.getblockchaininfo()[\"headers\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        self.log.info(\"-- Testing assumeutxo + some indexes + pruning\")\n+\n+        assert_equal(n0.getblockcount(), SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockcount(), START_HEIGHT)\n+\n+        self.log.info(f\"Creating a UTXO snapshot at height {SNAPSHOT_BASE_HEIGHT}\")\n+        dump_output = n0.dumptxoutset('utxos.dat')\n+\n+        assert_equal(\n+            dump_output['txoutset_hash'],\n+            'ef45ccdca5898b6c2145e4581d2b88c56564dd389e4bd75a1aaf6961d3edd3c0')\n+        assert_equal(dump_output['nchaintx'], 300)\n+        assert_equal(n0.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        # Mine more blocks on top of the snapshot that n1 hasn't yet seen. This\n+        # will allow us to test n1's sync-to-tip on top of a snapshot.\n+        self.generate(n0, nblocks=100, sync_fun=no_sync)\n+\n+        assert_equal(n0.getblockcount(), FINAL_HEIGHT)\n+        assert_equal(n1.getblockcount(), START_HEIGHT)\n+\n+        assert_equal(n0.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n+\n+        self.log.info(f\"Loading snapshot into second node from {dump_output['path']}\")\n+        loaded = n1.loadtxoutset(dump_output['path'])\n+        assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n+\n+        monitor = n1.getchainstates()\n+        assert_equal(monitor['ibd']['blocks'], START_HEIGHT)\n+        assert_equal(monitor['snapshot']['blocks'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(monitor['snapshot']['snapshot_blockhash'], dump_output['base_hash'])\n+\n+        assert_equal(n1.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        PAUSE_HEIGHT = FINAL_HEIGHT - 40\n+\n+        self.log.info(\"Restarting node to stop at height %d\", PAUSE_HEIGHT)\n+        self.restart_node(1, extra_args=[\n+            f\"-stopatheight={PAUSE_HEIGHT}\", *self.extra_args[1]])\n+\n+        # Finally connect the nodes and let them sync.\n+        self.connect_nodes(0, 1)\n+\n+        n1.wait_until_stopped(timeout=5)\n+\n+        self.log.info(\"Checking that blocks are segmented on disk\")\n+        assert self.has_blockfile(n1, \"00000\"), \"normal blockfile missing\"\n+        assert self.has_blockfile(n1, \"00001\"), \"assumed blockfile missing\"\n+        assert not self.has_blockfile(n1, \"00002\"), \"too many blockfiles\"\n+\n+        self.log.info(\"Restarted node before snapshot validation completed, reloading...\")\n+        self.restart_node(1, extra_args=self.extra_args[1])\n+        self.connect_nodes(0, 1)\n+\n+        self.log.info(f\"Ensuring snapshot chain syncs to tip. ({FINAL_HEIGHT})\")\n+        wait_until_helper(lambda: n1.getchainstates()['snapshot']['blocks'] == FINAL_HEIGHT)\n+        self.sync_blocks(nodes=(n0, n1))\n+\n+        self.log.info(\"Ensuring background validation completes\")\n+        # N.B.: the `ibd` key disappears once the background validation is complete.\n+        wait_until_helper(lambda: not n1.getchainstates().get('ibd'))\n+\n+        # Ensure indexes have synced.\n+        completed_idx_state = {\n+            'basic block filter index': COMPLETE_IDX,\n+            'coinstatsindex': COMPLETE_IDX,\n+        }\n+        self.wait_until(lambda: n1.getindexinfo() == completed_idx_state)\n+\n+        # TODO: test submitting a transaction and verifying it appears in mempool",
      "path": "test/functional/feature_assumeutxo.py",
      "position": null,
      "original_position": 147,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3c7dacb823b0c226c02302b2c12cfe37121e0b0d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: add feature_assumeutxo functional test\" (3c7dacb823b0c226c02302b2c12cfe37121e0b0d)\r\n\r\nThis does seem like to a good idea to test to make sure snapshot is functional",
      "created_at": "2023-09-14T01:38:57Z",
      "updated_at": "2023-09-14T02:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325243993",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325243993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325246788",
      "pull_request_review_id": 1625584894,
      "id": 1325246788,
      "node_id": "PRRC_kwDOABII585O_alE",
      "diff_hunk": "@@ -0,0 +1,221 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test for assumeutxo, a means of quickly bootstrapping a node using\n+a serialized version of the UTXO set at a certain height, which corresponds\n+to a hash that has been compiled into bitcoind.\n+\n+The assumeutxo value generated and used here is committed to in\n+`CRegTestParams::m_assumeutxo_data` in `src/chainparams.cpp`.\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, wait_until_helper\n+\n+START_HEIGHT = 199\n+SNAPSHOT_BASE_HEIGHT = 299\n+FINAL_HEIGHT = 399\n+COMPLETE_IDX = {'synced': True, 'best_block_height': FINAL_HEIGHT}\n+\n+\n+class AssumeutxoTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        \"\"\"Use the pregenerated, deterministic chain up to height 199.\"\"\"\n+        self.num_nodes = 3\n+        self.rpc_timeout = 120\n+        self.extra_args = [\n+            [],\n+            [\"-fastprune\", \"-prune=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+            [\"-txindex=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+        ]\n+\n+    def setup_network(self):\n+        \"\"\"Start with the nodes disconnected so that one can generate a snapshot\n+        including blocks the other hasn't yet seen.\"\"\"\n+        self.add_nodes(3)\n+        self.start_nodes(extra_args=self.extra_args)\n+\n+    def run_test(self):\n+        \"\"\"\n+        Bring up two (disconnected) nodes, mine some new blocks on the first,\n+        and generate a UTXO snapshot.\n+\n+        Load the snapshot into the second, ensure it syncs to tip and completes\n+        background validation when connected to the first.\n+        \"\"\"\n+        n0 = self.nodes[0]\n+        n1 = self.nodes[1]\n+        n2 = self.nodes[2]\n+\n+        # Mock time for a deterministic chain\n+        for n in self.nodes:\n+            n.setmocktime(n.getblockheader(n.getbestblockhash())['time'])\n+\n+        self.sync_blocks()\n+\n+        def no_sync():\n+            pass\n+\n+        # Generate a series of blocks that `n0` will have in the snapshot,\n+        # but that n1 doesn't yet see. In order for the snapshot to activate,\n+        # though, we have to ferry over the new headers to n1 so that it\n+        # isn't waiting forever to see the header of the snapshot's base block\n+        # while disconnected from n0.\n+        for i in range(100):\n+            self.generate(n0, nblocks=1, sync_fun=no_sync)\n+            newblock = n0.getblock(n0.getbestblockhash(), 0)\n+\n+            # make n1 aware of the new header, but don't give it the block.\n+            n1.submitheader(newblock)\n+            n2.submitheader(newblock)\n+\n+        # Ensure everyone is seeing the same headers.\n+        for n in self.nodes:\n+            assert_equal(n.getblockchaininfo()[\"headers\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        self.log.info(\"-- Testing assumeutxo + some indexes + pruning\")\n+\n+        assert_equal(n0.getblockcount(), SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockcount(), START_HEIGHT)\n+\n+        self.log.info(f\"Creating a UTXO snapshot at height {SNAPSHOT_BASE_HEIGHT}\")\n+        dump_output = n0.dumptxoutset('utxos.dat')\n+\n+        assert_equal(\n+            dump_output['txoutset_hash'],\n+            'ef45ccdca5898b6c2145e4581d2b88c56564dd389e4bd75a1aaf6961d3edd3c0')\n+        assert_equal(dump_output['nchaintx'], 300)\n+        assert_equal(n0.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        # Mine more blocks on top of the snapshot that n1 hasn't yet seen. This\n+        # will allow us to test n1's sync-to-tip on top of a snapshot.\n+        self.generate(n0, nblocks=100, sync_fun=no_sync)\n+\n+        assert_equal(n0.getblockcount(), FINAL_HEIGHT)\n+        assert_equal(n1.getblockcount(), START_HEIGHT)\n+\n+        assert_equal(n0.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n+\n+        self.log.info(f\"Loading snapshot into second node from {dump_output['path']}\")\n+        loaded = n1.loadtxoutset(dump_output['path'])\n+        assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n+\n+        monitor = n1.getchainstates()\n+        assert_equal(monitor['ibd']['blocks'], START_HEIGHT)\n+        assert_equal(monitor['snapshot']['blocks'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(monitor['snapshot']['snapshot_blockhash'], dump_output['base_hash'])\n+\n+        assert_equal(n1.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        PAUSE_HEIGHT = FINAL_HEIGHT - 40\n+\n+        self.log.info(\"Restarting node to stop at height %d\", PAUSE_HEIGHT)\n+        self.restart_node(1, extra_args=[\n+            f\"-stopatheight={PAUSE_HEIGHT}\", *self.extra_args[1]])\n+\n+        # Finally connect the nodes and let them sync.\n+        self.connect_nodes(0, 1)\n+\n+        n1.wait_until_stopped(timeout=5)\n+\n+        self.log.info(\"Checking that blocks are segmented on disk\")\n+        assert self.has_blockfile(n1, \"00000\"), \"normal blockfile missing\"\n+        assert self.has_blockfile(n1, \"00001\"), \"assumed blockfile missing\"\n+        assert not self.has_blockfile(n1, \"00002\"), \"too many blockfiles\"\n+\n+        self.log.info(\"Restarted node before snapshot validation completed, reloading...\")\n+        self.restart_node(1, extra_args=self.extra_args[1])\n+        self.connect_nodes(0, 1)\n+\n+        self.log.info(f\"Ensuring snapshot chain syncs to tip. ({FINAL_HEIGHT})\")\n+        wait_until_helper(lambda: n1.getchainstates()['snapshot']['blocks'] == FINAL_HEIGHT)\n+        self.sync_blocks(nodes=(n0, n1))\n+\n+        self.log.info(\"Ensuring background validation completes\")\n+        # N.B.: the `ibd` key disappears once the background validation is complete.\n+        wait_until_helper(lambda: not n1.getchainstates().get('ibd'))\n+\n+        # Ensure indexes have synced.\n+        completed_idx_state = {\n+            'basic block filter index': COMPLETE_IDX,\n+            'coinstatsindex': COMPLETE_IDX,\n+        }\n+        self.wait_until(lambda: n1.getindexinfo() == completed_idx_state)\n+\n+        # TODO: test submitting a transaction and verifying it appears in mempool\n+\n+        for i in (0, 1):\n+            n = self.nodes[i]\n+            self.log.info(f\"Restarting node {i} to ensure (Check|Load)BlockIndex passes\")\n+            self.restart_node(i, extra_args=self.extra_args[i])\n+\n+            assert_equal(n.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n+\n+            assert_equal(n.getchainstates()['ibd']['blocks'], FINAL_HEIGHT)\n+            assert_equal(n.getchainstates().get('snapshot'), None)\n+\n+            if i != 0:\n+                # Ensure indexes have synced for the assumeutxo node\n+                self.wait_until(lambda: n.getindexinfo() == completed_idx_state)\n+\n+\n+        # Node 2: all indexes + reindex\n+        # -----------------------------\n+\n+        self.log.info(\"-- Testing all indexes + reindex\")\n+        assert_equal(n2.getblockcount(), START_HEIGHT)\n+\n+        self.log.info(f\"Loading snapshot into third node from {dump_output['path']}\")\n+        loaded = n2.loadtxoutset(dump_output['path'])\n+        assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n+\n+        monitor = n2.getchainstates()\n+        assert_equal(monitor['ibd']['blocks'], START_HEIGHT)\n+        assert_equal(monitor['snapshot']['blocks'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(monitor['snapshot']['snapshot_blockhash'], dump_output['base_hash'])\n+\n+        self.connect_nodes(0, 2)\n+        wait_until_helper(lambda: n2.getchainstates()['snapshot']['blocks'] == FINAL_HEIGHT)\n+        self.sync_blocks()\n+\n+        self.log.info(\"Ensuring background validation completes\")\n+        wait_until_helper(lambda: not n2.getchainstates().get('ibd'))\n+\n+        completed_idx_state = {\n+            'basic block filter index': COMPLETE_IDX,\n+            'coinstatsindex': COMPLETE_IDX,\n+            'txindex': COMPLETE_IDX,\n+        }\n+        self.wait_until(lambda: n2.getindexinfo() == completed_idx_state)\n+\n+        for i in (0, 2):\n+            n = self.nodes[i]\n+            self.log.info(f\"Restarting node {i} to ensure (Check|Load)BlockIndex passes\")\n+            self.restart_node(i, extra_args=self.extra_args[i])\n+\n+            assert_equal(n.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n+\n+            assert_equal(n.getchainstates()['ibd']['blocks'], FINAL_HEIGHT)\n+            assert_equal(n.getchainstates().get('snapshot'), None)\n+\n+            if i != 0:\n+                # Ensure indexes have synced for the assumeutxo node\n+                self.wait_until(lambda: n.getindexinfo() == completed_idx_state)\n+\n+        self.log.info(\"Test -reindex-chainstate of an assumeutxo-synced node\")\n+        self.restart_node(2, extra_args=[\n+            '-reindex-chainstate=1', *self.extra_args[2]])\n+        assert_equal(n2.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n+        wait_until_helper(lambda: n2.getblockcount() == FINAL_HEIGHT)\n+\n+        self.log.info(\"Test -reindex of an assumeutxo-synced node\")",
      "path": "test/functional/feature_assumeutxo.py",
      "position": 239,
      "original_position": 214,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3c7dacb823b0c226c02302b2c12cfe37121e0b0d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: add feature_assumeutxo functional test\" (3c7dacb823b0c226c02302b2c12cfe37121e0b0d)\r\n\r\nMight be good to test what happens with -reindex and -reindex-chainstate before the snapshot is validated, and make sure it's deleted successfully (or just add it as another TODO for improving the test later)",
      "created_at": "2023-09-14T01:42:39Z",
      "updated_at": "2023-09-14T02:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325246788",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325246788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 239,
      "original_line": 239,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325249448",
      "pull_request_review_id": 1625584894,
      "id": 1325249448,
      "node_id": "PRRC_kwDOABII585O_bOo",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$(($BASE_HEIGHT + $INCREMENTAL_HEIGHT))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes.",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 36,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b6f6eabfd84e14a1d621121e3cd841ac3ce91932",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"contrib: add script to demo/test assumeutxo\" (b6f6eabfd84e14a1d621121e3cd841ac3ce91932)\r\n\r\nCan comment clarify why? It's not clear if something later in the script needs these enabled or if this it just trying to hit more code paths for testing",
      "created_at": "2023-09-14T01:48:09Z",
      "updated_at": "2023-09-14T02:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325249448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325249448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325250465",
      "pull_request_review_id": 1625584894,
      "id": 1325250465,
      "node_id": "PRRC_kwDOABII585O_beh",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$(($BASE_HEIGHT + $INCREMENTAL_HEIGHT))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes.\n+ALL_INDEXES=\"-txindex -coinstatsindex -blockfilterindex=1\"\n+\n+if ! command -v jq >/dev/null ; then\n+  echo \"This script requires jq to parse JSON RPC output. Please install it.\"\n+  echo \"(e.g. sudo apt install jq)\"\n+  exit 1\n+fi\n+\n+finish() {\n+  echo\n+  echo \"Killing server and client PIDs ($SERVER_PID, $CLIENT_PID) and cleaning up datadirs\"\n+  echo\n+  rm -f \"$UTXO_DAT_FILE\" \"$DUMP_OUTPUT\"",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": 52,
      "original_position": 49,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b6f6eabfd84e14a1d621121e3cd841ac3ce91932",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"contrib: add script to demo/test assumeutxo\" (b6f6eabfd84e14a1d621121e3cd841ac3ce91932)\r\n\r\nWould be good to initialize DUMP_OUTPUT variable before this function so it is clear what path is being `rm -f'ed. Also so test environment doesn't cause something strange to happen.",
      "created_at": "2023-09-14T01:50:33Z",
      "updated_at": "2023-09-14T02:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325250465",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325250465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325252702",
      "pull_request_review_id": 1625584894,
      "id": 1325252702,
      "node_id": "PRRC_kwDOABII585O_cBe",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$(($BASE_HEIGHT + $INCREMENTAL_HEIGHT))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes.\n+ALL_INDEXES=\"-txindex -coinstatsindex -blockfilterindex=1\"\n+\n+if ! command -v jq >/dev/null ; then\n+  echo \"This script requires jq to parse JSON RPC output. Please install it.\"\n+  echo \"(e.g. sudo apt install jq)\"\n+  exit 1\n+fi\n+\n+finish() {\n+  echo\n+  echo \"Killing server and client PIDs ($SERVER_PID, $CLIENT_PID) and cleaning up datadirs\"\n+  echo\n+  rm -f \"$UTXO_DAT_FILE\" \"$DUMP_OUTPUT\"\n+  rm -rf \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+  kill -9 \"$SERVER_PID\" \"$CLIENT_PID\"\n+}\n+\n+trap finish EXIT\n+\n+# Need to specify these to trick client into accepting server as a peer\n+# it can IBD from.\n+CHAIN_HACK_FLAGS=\"-maxtipage=9223372036854775207 -minimumchainwork=0x00\"",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 58,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b6f6eabfd84e14a1d621121e3cd841ac3ce91932",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"contrib: add script to demo/test assumeutxo\" (b6f6eabfd84e14a1d621121e3cd841ac3ce91932)\r\n\r\nCan comment explain these more? They seem to be passed to all client and server commands, so I'm curious which one(s) they are actually necessary for.",
      "created_at": "2023-09-14T01:55:16Z",
      "updated_at": "2023-09-14T02:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325252702",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325252702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 56,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325255387",
      "pull_request_review_id": 1625584894,
      "id": 1325255387,
      "node_id": "PRRC_kwDOABII585O_crb",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$(($BASE_HEIGHT + $INCREMENTAL_HEIGHT))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes.\n+ALL_INDEXES=\"-txindex -coinstatsindex -blockfilterindex=1\"\n+\n+if ! command -v jq >/dev/null ; then\n+  echo \"This script requires jq to parse JSON RPC output. Please install it.\"\n+  echo \"(e.g. sudo apt install jq)\"\n+  exit 1\n+fi\n+\n+finish() {\n+  echo\n+  echo \"Killing server and client PIDs ($SERVER_PID, $CLIENT_PID) and cleaning up datadirs\"\n+  echo\n+  rm -f \"$UTXO_DAT_FILE\" \"$DUMP_OUTPUT\"\n+  rm -rf \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+  kill -9 \"$SERVER_PID\" \"$CLIENT_PID\"\n+}\n+\n+trap finish EXIT\n+\n+# Need to specify these to trick client into accepting server as a peer\n+# it can IBD from.\n+CHAIN_HACK_FLAGS=\"-maxtipage=9223372036854775207 -minimumchainwork=0x00\"\n+\n+server_rpc() {\n+  ./src/bitcoin-cli -rpcport=$SERVER_RPC_PORT -datadir=\"$SERVER_DATADIR\" \"$@\"\n+}\n+client_rpc() {\n+  ./src/bitcoin-cli -rpcport=$CLIENT_RPC_PORT -datadir=\"$CLIENT_DATADIR\" \"$@\"\n+}\n+server_sleep_til_boot() {\n+  while ! server_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+client_sleep_til_boot() {\n+  while ! client_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+\n+mkdir -p \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+\n+echo \"Hi, welcome to the assumeutxo demo/test\"\n+echo\n+echo \"We're going to\"\n+echo\n+echo \"  - start up a 'server' node, sync it via mainnet IBD to height ${BASE_HEIGHT}\"\n+echo \"  - create a UTXO snapshot at that height\"\n+echo \"  - IBD ${INCREMENTAL_HEIGHT} more blocks on top of that\"\n+echo\n+echo \"then we'll demonstrate assumeutxo by \"\n+echo\n+echo \"  - starting another node (the 'client') and loading the snapshot in\"\n+echo \"    * first you'll have to modify the code slightly (chainparams) and recompile\"\n+echo \"    * don't worry, we'll make it easy\"\n+echo \"  - observing the client sync ${INCREMENTAL_HEIGHT} blocks on top of the snapshot from the server\"\n+echo \"  - observing the client validate the snapshot chain via background IBD\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- Starting the demo. You might want to run the two following commands in\"\n+echo \"   separate terminal windows:\"\n+echo\n+echo \"   watch -n0.1 tail -n 30 $SERVER_DATADIR/debug.log\"\n+echo \"   watch -n0.1 tail -n 30 $CLIENT_DATADIR/debug.log\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- IBDing the blocks (height=$BASE_HEIGHT) required to the server node...\"\n+./src/bitcoind -logthreadnames=1 $SERVER_PORTS \\\n+    -datadir=\"$SERVER_DATADIR\" $CHAIN_HACK_FLAGS -stopatheight=\"$BASE_HEIGHT\" >/dev/null",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 105,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b6f6eabfd84e14a1d621121e3cd841ac3ce91932",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"contrib: add script to demo/test assumeutxo\" (b6f6eabfd84e14a1d621121e3cd841ac3ce91932)\r\n\r\nDoes it matter for the purposes of this script if -stopatheight is imprecise? (See https://github.com/bitcoin/bitcoin/issues/13477). Would be good to clarify in comment.",
      "created_at": "2023-09-14T02:00:33Z",
      "updated_at": "2023-09-14T02:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325255387",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325255387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325261488",
      "pull_request_review_id": 1625584894,
      "id": 1325261488,
      "node_id": "PRRC_kwDOABII585O_eKw",
      "diff_hunk": "@@ -43,6 +43,11 @@ Release Process\n     - On mainnet, the selected value must not be orphaned, so it may be useful to set the height two blocks back from the tip.\n     - Testnet should be set with a height some tens of thousands back from the tip, due to reorgs there.\n   - `nMinimumChainWork` with the \"chainwork\" value of RPC `getblockheader` using the same height as that selected for the previous step.\n+  - `m_assumeutxo_data` with the updated assumeutxo hash and nChainTx count.\n+    - You can obtain this information, and the corresponding snapshot, by running\n+      `./contrib/devtools/utxo_snapshot.sh <blockheight> <snapshot-out-path>`.\n+    - The height used should probably the be same as the assumevalid height chosen.\n+    - Ensure the resulting snapshot is uploaded somewhere publicly accessible (torrent, HTTP server, etc.).",
      "path": "doc/release-process.md",
      "position": null,
      "original_position": 8,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "27adc36a173d5636e82dfca27364dbda34f3b022",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"doc: update release-process.md for assumeutxo\" (27adc36a173d5636e82dfca27364dbda34f3b022)\r\n\r\nThis seems a little too vague for release instructions. Maybe this can be made more specific, or just marked as optional / TBD to distinguish it from the more well defined parts of the release process.",
      "created_at": "2023-09-14T02:11:33Z",
      "updated_at": "2023-09-14T02:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325261488",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1325261488"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1326535112",
      "pull_request_review_id": 1627779274,
      "id": 1326535112,
      "node_id": "PRRC_kwDOABII585PEVHI",
      "diff_hunk": "@@ -892,6 +892,37 @@ class PeerManagerImpl final : public PeerManager\n      */\n     void FindNextBlocksToDownload(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, NodeId& nodeStaller) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    void TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex* from_tip, const CBlockIndex* target_block) EXCLUSIVE_LOCKS_REQUIRED(cs_main);",
      "path": "src/net_processing.cpp",
      "position": 22,
      "original_position": 4,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "a42510ba9656aada250c5fdf402e3914ba6f51db",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "a42510ba9656aada250c5fdf402e3914ba6f51db: definition could use a short doc",
      "created_at": "2023-09-14T21:29:09Z",
      "updated_at": "2023-09-16T23:38:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1326535112",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1326535112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 897,
      "original_line": 897,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328019543",
      "pull_request_review_id": 1627779274,
      "id": 1328019543,
      "node_id": "PRRC_kwDOABII585PJ_hX",
      "diff_hunk": "@@ -1036,12 +1033,25 @@ class ChainstateManager\n     //! Otherwise, revert to using the ibd chainstate and shutdown.\n     SnapshotCompletionResult MaybeCompleteSnapshotValidation() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Returns nullptr if no snapshot has been loaded.\n+    const CBlockIndex* GetSnapshotBaseBlock() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n     //! The most-work chain.\n     Chainstate& ActiveChainstate() const;\n     CChain& ActiveChain() const EXCLUSIVE_LOCKS_REQUIRED(GetMutex()) { return ActiveChainstate().m_chain; }\n     int ActiveHeight() const EXCLUSIVE_LOCKS_REQUIRED(GetMutex()) { return ActiveChain().Height(); }\n     CBlockIndex* ActiveTip() const EXCLUSIVE_LOCKS_REQUIRED(GetMutex()) { return ActiveChain().Tip(); }\n \n+    //! The state of a background sync (for net processing)\n+    bool BackgroundSyncInProgress() const EXCLUSIVE_LOCKS_REQUIRED(GetMutex()) {\n+        return IsUsable(m_snapshot_chainstate.get()) && IsUsable(m_ibd_chainstate.get());",
      "path": "src/validation.h",
      "position": 71,
      "original_position": 25,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "a42510ba9656aada250c5fdf402e3914ba6f51db",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "a42510ba9656aada250c5fdf402e3914ba6f51db: I find the term \"usable\" in `IsUsable` a bit ambiguous. The doc also only explains what `false` means. Maybe expand it a bit, so it's easier to understand why the background state must be in progress when both states are \"usable\".",
      "created_at": "2023-09-16T23:17:13Z",
      "updated_at": "2023-09-16T23:38:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328019543",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328019543"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1049,
      "original_line": 1049,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328020510",
      "pull_request_review_id": 1627779274,
      "id": 1328020510,
      "node_id": "PRRC_kwDOABII585PJ_we",
      "diff_hunk": "@@ -5830,7 +5897,18 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         if (CanServeBlocks(*peer) && ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer)) || !m_chainman.IsInitialBlockDownload()) && state.vBlocksInFlight.size() < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n             std::vector<const CBlockIndex*> vToDownload;\n             NodeId staller = -1;\n-            FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.vBlocksInFlight.size(), vToDownload, staller);\n+            auto get_inflight_budget = [&state]() {\n+                return std::max(0, MAX_BLOCKS_IN_TRANSIT_PER_PEER - static_cast<int>(state.vBlocksInFlight.size()));\n+            };\n+\n+            FindNextBlocksToDownload(*peer, get_inflight_budget(), vToDownload, staller);",
      "path": "src/net_processing.cpp",
      "position": 194,
      "original_position": 124,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "a42510ba9656aada250c5fdf402e3914ba6f51db",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "a42510ba9656aada250c5fdf402e3914ba6f51db: maybe add a comment above here that we prioritize new blocks in the snapshot chainstate by adding them to `vToDownload` first.",
      "created_at": "2023-09-16T23:31:33Z",
      "updated_at": "2023-09-16T23:38:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328020510",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328020510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5934,
      "original_line": 5934,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328020790",
      "pull_request_review_id": 1627779274,
      "id": 1328020790,
      "node_id": "PRRC_kwDOABII585PJ_02",
      "diff_hunk": "@@ -1341,12 +1373,47 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     if (state->pindexLastCommonBlock == state->pindexBestKnownBlock)\n         return;\n \n-    std::vector<const CBlockIndex*> vToFetch;\n     const CBlockIndex *pindexWalk = state->pindexLastCommonBlock;\n     // Never fetch further than the best block we know the peer has, or more than BLOCK_DOWNLOAD_WINDOW + 1 beyond the last\n     // linked block we have in common with this peer. The +1 is so we can detect stalling, namely if we would be able to\n     // download that next block if the window were 1 larger.\n     int nWindowEnd = state->pindexLastCommonBlock->nHeight + BLOCK_DOWNLOAD_WINDOW;\n+\n+    FindNextBlocks(vBlocks, peer, state, pindexWalk, count, nWindowEnd, &m_chainman.ActiveChain(), &nodeStaller);\n+}\n+\n+void PeerManagerImpl::TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex *from_tip, const CBlockIndex* target_block)",
      "path": "src/net_processing.cpp",
      "position": 78,
      "original_position": 60,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "a42510ba9656aada250c5fdf402e3914ba6f51db",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "a42510ba9656aada250c5fdf402e3914ba6f51db: maybe rename to `FindHistoricalBlocksToDownload`? Since the actual downloading is done by `FindNextBlocks`, which in turn probably should be called `FindAndRequestBlocks`. Then again, maybe not worth renaming...",
      "created_at": "2023-09-16T23:35:13Z",
      "updated_at": "2023-09-16T23:38:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328020790",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328020790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1387,
      "original_line": 1387,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328020935",
      "pull_request_review_id": 1627779274,
      "id": 1328020935,
      "node_id": "PRRC_kwDOABII585PJ_3H",
      "diff_hunk": "@@ -1341,12 +1373,47 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     if (state->pindexLastCommonBlock == state->pindexBestKnownBlock)\n         return;\n \n-    std::vector<const CBlockIndex*> vToFetch;\n     const CBlockIndex *pindexWalk = state->pindexLastCommonBlock;\n     // Never fetch further than the best block we know the peer has, or more than BLOCK_DOWNLOAD_WINDOW + 1 beyond the last\n     // linked block we have in common with this peer. The +1 is so we can detect stalling, namely if we would be able to\n     // download that next block if the window were 1 larger.\n     int nWindowEnd = state->pindexLastCommonBlock->nHeight + BLOCK_DOWNLOAD_WINDOW;\n+\n+    FindNextBlocks(vBlocks, peer, state, pindexWalk, count, nWindowEnd, &m_chainman.ActiveChain(), &nodeStaller);\n+}\n+\n+void PeerManagerImpl::TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex *from_tip, const CBlockIndex* target_block)\n+{\n+    Assert(from_tip);\n+    Assert(target_block);\n+\n+    if (vBlocks.size() >= count) {\n+        return;\n+    }\n+\n+    vBlocks.reserve(count);\n+    CNodeState *state = Assert(State(peer.m_id));\n+\n+    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->GetAncestor(target_block->nHeight) != target_block) {\n+        // This peer can't provide us the complete series of blocks leading up to the\n+        // assumeutxo snapshot base.\n+        //\n+        // Presumably this peer's chain has less work than our ActiveChain()'s tip, or else we\n+        // will eventually crash when we try to reorg to it. Let other logic\n+        // deal with whether we disconnect this peer.\n+        //\n+        // TODO at some point in the future, we might choose to request what blocks\n+        // this peer does have from the historical chain, despite it not having a\n+        // complete history beneath the snapshot base.",
      "path": "src/net_processing.cpp",
      "position": 100,
      "original_position": 82,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "a42510ba9656aada250c5fdf402e3914ba6f51db",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "a42510ba9656aada250c5fdf402e3914ba6f51db: do I understand correctly that in the case of an alien reorg - that goes below the assumeutxo height - we depend on some other node having all the blocks for the original chain. Since with this code we can only do a deep reorg _after_ finishing background validation? ",
      "created_at": "2023-09-16T23:38:10Z",
      "updated_at": "2023-09-16T23:38:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328020935",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328020935"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1409,
      "original_line": 1409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328116700",
      "pull_request_review_id": 1630102347,
      "id": 1328116700,
      "node_id": "PRRC_kwDOABII585PKXPc",
      "diff_hunk": "@@ -265,13 +265,26 @@ CBlockIndex* BlockManager::InsertBlockIndex(const uint256& hash)\n     return pindex;\n }\n \n-bool BlockManager::LoadBlockIndex()\n+bool BlockManager::LoadBlockIndex(const std::optional<uint256>& snapshot_blockhash)\n {\n     if (!m_block_tree_db->LoadBlockIndexGuts(\n             GetConsensus(), [this](const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) { return this->InsertBlockIndex(hash); }, m_interrupt)) {\n         return false;\n     }\n \n+    int snapshot_height = -1;\n+    if (snapshot_blockhash) {\n+        const AssumeutxoData au_data = *Assert(GetParams().AssumeutxoForBlockhash(*snapshot_blockhash));\n+        snapshot_height = au_data.height;\n+        CBlockIndex* base{LookupBlockIndex(*snapshot_blockhash)};\n+\n+        // Since nChainTx (responsible for estiamted progress) isn't persisted",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "e3cae85738c8bf4116547af8d868c6c01577b80f",
      "in_reply_to_id": 1323352284,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-09-17T16:49:12Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328116700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328116700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328116726",
      "pull_request_review_id": 1630102347,
      "id": 1328116726,
      "node_id": "PRRC_kwDOABII585PKXP2",
      "diff_hunk": "@@ -386,6 +395,15 @@ bool BlockManager::LoadBlockIndexDB(const std::optional<uint256>& snapshot_block\n         }\n     }\n \n+    {\n+        // Initialize the blockfile cursors.\n+        LOCK(cs_LastBlockFile);\n+        for (size_t i = 0; i < m_blockfile_info.size(); ++i) {\n+            const auto last_height_in_file = m_blockfile_info[i].nHeightLast;\n+            m_blockfile_cursors[BlockfileTypeForHeight(last_height_in_file)] = {static_cast<int>(i), 0};",
      "path": "src/node/blockstorage.cpp",
      "position": 227,
      "original_position": 106,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": 1323283485,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good suggestion! Done.",
      "created_at": "2023-09-17T16:49:19Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328116726",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328116726"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 516,
      "original_line": 516,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328116994",
      "pull_request_review_id": 1630102347,
      "id": 1328116994,
      "node_id": "PRRC_kwDOABII585PKXUC",
      "diff_hunk": "@@ -675,27 +724,35 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\n             }\n         }\n         assert(nAddSize < max_blockfile_size);\n+\n         while (m_blockfile_info[nFile].nSize + nAddSize >= max_blockfile_size) {\n             // when the undo file is keeping up with the block file, we want to flush it explicitly\n             // when it is lagging behind (more blocks arrive than are being connected), we let the\n             // undo block write case handle it\n-            finalize_undo = (m_blockfile_info[nFile].nHeightLast == m_undo_height_in_last_blockfile);\n-            nFile++;\n-            if (m_blockfile_info.size() <= nFile) {\n+            finalize_undo = (static_cast<int>(m_blockfile_info[nFile].nHeightLast) ==\n+                    Assert(m_blockfile_cursors[chain_type])->undo_height);\n+\n+            // Try the next unclaimed blockfile number\n+            nFile = this->MaxBlockfileNum() + 1;\n+            // Set to increment MaxBlockfileNum() for next iteration\n+            m_blockfile_cursors[chain_type] = BlockfileCursor{static_cast<int>(nFile), 0};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 215,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": 1323346256,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah good catch, thanks. Fixed.",
      "created_at": "2023-09-17T16:52:11Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328116994",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328116994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 738,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328116997",
      "pull_request_review_id": 1630102347,
      "id": 1328116997,
      "node_id": "PRRC_kwDOABII585PKXUF",
      "diff_hunk": "@@ -783,10 +843,10 @@ bool BlockManager::WriteUndoDataForBlock(const CBlockUndo& blockundo, BlockValid\n         // in the block file info as below; note that this does not catch the case where the undo writes are keeping up\n         // with the block writes (usually when a synced up node is getting newly mined blocks) -- this case is caught in\n         // the FindBlockPos function\n-        if (_pos.nFile < m_last_blockfile && static_cast<uint32_t>(block.nHeight) == m_blockfile_info[_pos.nFile].nHeightLast) {\n+        if (_pos.nFile < static_cast<int>(cursor.file_num) && static_cast<uint32_t>(block.nHeight) == m_blockfile_info[_pos.nFile].nHeightLast) {",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 256,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": 1323314721,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2023-09-17T16:52:15Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328116997",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328116997"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 846,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328117048",
      "pull_request_review_id": 1630102347,
      "id": 1328117048,
      "node_id": "PRRC_kwDOABII585PKXU4",
      "diff_hunk": "@@ -70,6 +71,30 @@ struct PruneLockInfo {\n     int height_first{std::numeric_limits<int>::max()}; //! Height of earliest block that should be kept and not pruned\n };\n \n+enum class BlockfileType {\n+    // For the purposes of blockfile fragmentation, treat background IBD chainstates\n+    // as normal.",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 14,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": 1310979704,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oops! Fixed.",
      "created_at": "2023-09-17T16:52:51Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328117048",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328117048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 75,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 75,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328117072",
      "pull_request_review_id": 1630102347,
      "id": 1328117072,
      "node_id": "PRRC_kwDOABII585PKXVQ",
      "diff_hunk": "@@ -70,6 +70,35 @@ struct PruneLockInfo {\n     int height_first{std::numeric_limits<int>::max()}; //! Height of earliest block that should be kept and not pruned\n };\n \n+enum class BlockfileType {\n+    // For the purposes of blockfile fragmentation, treat background IBD chainstates\n+    // as normal.\n+    NORMAL,\n+    ASSUMED,\n+};\n+\n+std::ostream& operator<<(std::ostream& os, const BlockfileType& type);\n+\n+struct BlockfileCursor {\n+    // The latest blockfile number.\n+    int file_num{0};\n+\n+    // Track the height of the highest block in m_last_blockfile whose undo",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 33,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": 1323131550,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-09-17T16:53:12Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328117072",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328117072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 86,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328117373",
      "pull_request_review_id": 1630102347,
      "id": 1328117373,
      "node_id": "PRRC_kwDOABII585PKXZ9",
      "diff_hunk": "@@ -92,7 +121,8 @@ class BlockManager\n      */\n     bool LoadBlockIndex(const std::optional<uint256>& snapshot_blockhash)\n         EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n-    void FlushBlockFile(bool fFinalize = false, bool finalize_undo = false);\n+    void FlushBlockFile(int blockfile_num, bool fFinalize = false, bool finalize_undo = false);",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 57,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": 1323219325,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yep, easy to do and done.",
      "created_at": "2023-09-17T16:55:30Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328117373",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328117373"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328117840",
      "pull_request_review_id": 1630102347,
      "id": 1328117840,
      "node_id": "PRRC_kwDOABII585PKXhQ",
      "diff_hunk": "@@ -136,19 +166,26 @@ class BlockManager\n \n     RecursiveMutex cs_LastBlockFile;\n     std::vector<CBlockFileInfo> m_blockfile_info;\n-    int m_last_blockfile = 0;\n \n-    // Track the height of the highest block in m_last_blockfile whose undo\n-    // data has been written. Block data is written to block files in download\n-    // order, but is written to undo files in validation order, which is\n-    // usually in order by height. To avoid wasting disk space, undo files will\n-    // be trimmed whenever the corresponding block file is finalized and\n-    // the height of the highest block written to the block file equals the\n-    // height of the highest block written to the undo file. This is a\n-    // heuristic and can sometimes preemptively trim undo files that will write\n-    // more data later, and sometimes fail to trim undo files that can't have\n-    // more data written later.\n-    unsigned int m_undo_height_in_last_blockfile = 0;\n+    //! Since assumedvalid chainstates may be syncing a range of the chain that is very\n+    //! far away from the normal/background validation process, we should segment blockfiles\n+    //! for assumed chainstates. Otherwise, we might have wildly different height ranges\n+    //! mixed into the same block files, which would impair our ability to prune\n+    //! effectively.\n+    //!\n+    //! This data structure maintains separate blockfile number cursors for each\n+    //! BlockfileType. The ASSUMED state is initialized, when necessary, in FindBlockPos().\n+    std::map<BlockfileType, std::optional<BlockfileCursor>> m_blockfile_cursors GUARDED_BY(cs_LastBlockFile) = {\n+        {BlockfileType::NORMAL, BlockfileCursor{}},\n+        {BlockfileType::ASSUMED, std::nullopt},\n+    };\n+    int MaxBlockfileNum() const EXCLUSIVE_LOCKS_REQUIRED(cs_LastBlockFile)\n+    {\n+        static const BlockfileCursor empty_cursor{0, 0};",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 93,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": 1323311919,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, fixed.",
      "created_at": "2023-09-17T16:59:39Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328117840",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328117840"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328118025",
      "pull_request_review_id": 1630102347,
      "id": 1328118025,
      "node_id": "PRRC_kwDOABII585PKXkJ",
      "diff_hunk": "@@ -187,6 +226,19 @@ class BlockManager\n \n     BlockMap m_block_index GUARDED_BY(cs_main);\n \n+    /**\n+     * The height of the base block of an assumeutxo snapshot, if one is in use.\n+     *\n+     * This controls how blockfiles are segmented by chainstate type to avoid\n+     * comingling different height regions of the chain when an assumedvalid chainstate\n+     * is in use. If heights are drastically different in the same blockfile, pruning\n+     * suffers.\n+     *\n+     * This is set during ActivateSnapshot() or upon LoadBlockIndex() if a snapshot\n+     * had been previously loaded.",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 123,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3ff26bc73374b53550dc2dd17dd3e1c58258fc30",
      "in_reply_to_id": 1323297281,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-09-17T17:01:05Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328118025",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328118025"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 237,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328118875",
      "pull_request_review_id": 1630102347,
      "id": 1328118875,
      "node_id": "PRRC_kwDOABII585PKXxb",
      "diff_hunk": "@@ -5671,16 +5676,20 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",\n         fs::PathToString(*path));\n \n-    this->ActivateExistingSnapshot(mempool, *base_blockhash);\n+    this->ActivateExistingSnapshot(*base_blockhash);\n     return true;\n }\n \n-Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uint256 base_blockhash)\n+Chainstate& ChainstateManager::ActivateExistingSnapshot(uint256 base_blockhash)\n {\n     assert(!m_snapshot_chainstate);\n     m_snapshot_chainstate =\n-        std::make_unique<Chainstate>(mempool, m_blockman, *this, base_blockhash);\n+        std::make_unique<Chainstate>(nullptr, m_blockman, *this, base_blockhash);\n     LogPrintf(\"[snapshot] switching active chainstate to %s\\n\", m_snapshot_chainstate->ToString());\n+    Assert(!m_snapshot_chainstate->m_mempool);\n+    // Mempool is empty at this point because we're still in IBD.\n+    m_snapshot_chainstate->m_mempool = m_active_chainstate->m_mempool;",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 31,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "0958f11c18c615c83632129e7f9d010c71f480ea",
      "in_reply_to_id": 1325166462,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-09-17T17:08:25Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328118875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328118875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 5690,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5793,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328122437",
      "pull_request_review_id": 1630102347,
      "id": 1328122437,
      "node_id": "PRRC_kwDOABII585PKYpF",
      "diff_hunk": "@@ -5,3 +5,22 @@ When using assumeutxo with `-prune`, the prune budget may be exceeded if it is s\n lower than 1100MB (i.e. `MIN_DISK_SPACE_FOR_BLOCK_FILES * 2`). Prune budget is normally\n split evenly across each chainstate, unless the resulting prune budget per chainstate\n is beneath `MIN_DISK_SPACE_FOR_BLOCK_FILES` in which case that value will be used.\n+\n+RPC\n+---\n+\n+`loadtxoutset` has been added, which allows loading a UTXO snapshot of the format\n+generated by `dumptxoutset`. Once this snapshot is loaded, its contents will be\n+deserialized into a second chainstate data structure, which is then used to sync to\n+the network's tip under a security model very much like `assumevalid`.\n+\n+Meanwhile, the original chainstate will complete the initial block download process in\n+the background, eventually validating up to the block that the snapshot is based upon.\n+\n+The result is a usable bitcoind instance that is current with the network tip in a\n+matter of minutes rather than hours. UTXO snapshot are typically obtained sources\n+third-party (HTTP, torrent, etc.) which is allowable since their contents are always\n+checked by hash.",
      "path": "doc/release-notes-27596.md",
      "position": null,
      "original_position": 19,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "d9405fe1b7ea30861be7b84515e13a149109be36",
      "in_reply_to_id": 1325169631,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, added to the RPC def.",
      "created_at": "2023-09-17T17:41:43Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328122437",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328122437"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 12,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328122787",
      "pull_request_review_id": 1630102347,
      "id": 1328122787,
      "node_id": "PRRC_kwDOABII585PKYuj",
      "diff_hunk": "@@ -2699,6 +2700,95 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"coins_loaded\", \"the number of coins loaded from the snapshot\"},\n+                    {RPCResult::Type::STR_HEX, \"tip_hash\", \"the hash of the base of the snapshot\"},\n+                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n+                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was loaded from\"},\n+                }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    fs::path path{AbsPathForConfigVal(EnsureArgsman(node), fs::u8path(request.params[0].get_str()))};\n+\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        throw JSONRPCError(\n+            RPC_INVALID_PARAMETER,\n+            \"Couldn't open file \" + path.u8string() + \" for reading.\");\n+    }\n+\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    while (max_secs_to_wait_for_headers > 0) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 73,
      "original_position": 60,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "d9405fe1b7ea30861be7b84515e13a149109be36",
      "in_reply_to_id": 1325175909,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-09-17T17:44:59Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328122787",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328122787"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2764,
      "original_line": 2764,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328123875",
      "pull_request_review_id": 1630102347,
      "id": 1328123875,
      "node_id": "PRRC_kwDOABII585PKY_j",
      "diff_hunk": "@@ -2699,6 +2700,95 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"coins_loaded\", \"the number of coins loaded from the snapshot\"},\n+                    {RPCResult::Type::STR_HEX, \"tip_hash\", \"the hash of the base of the snapshot\"},\n+                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n+                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was loaded from\"},\n+                }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    fs::path path{AbsPathForConfigVal(EnsureArgsman(node), fs::u8path(request.params[0].get_str()))};\n+\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    if (afile.IsNull()) {\n+        throw JSONRPCError(\n+            RPC_INVALID_PARAMETER,\n+            \"Couldn't open file \" + path.u8string() + \" for reading.\");\n+    }\n+\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    while (max_secs_to_wait_for_headers > 0) {\n+        snapshot_start_block = WITH_LOCK(::cs_main,\n+            return chainman.m_blockman.LookupBlockIndex(base_blockhash));\n+        max_secs_to_wait_for_headers -= 1;\n+\n+        if (!snapshot_start_block) {\n+            std::this_thread::sleep_for(std::chrono::seconds(1));\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    if (!snapshot_start_block) {\n+        LogPrintf(\"[snapshot] timed out waiting for snapshot start blockheader %s\\n\",\n+            base_blockhash.ToString());\n+        throw JSONRPCError(\n+            RPC_INTERNAL_ERROR,\n+            \"Timed out waiting for base block header to appear in headers chain\");\n+    }\n+    int active_height{WITH_LOCK(::cs_main, return chainman.ActiveHeight())};\n+    if (active_height >= snapshot_start_block->nHeight) {\n+        throw JSONRPCError(\n+            RPC_MISC_ERROR,\n+            \"Cannot activate a snapshot after the active chain has passed its base block.\");",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "d9405fe1b7ea30861be7b84515e13a149109be36",
      "in_reply_to_id": 1325193433,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point! I think a user loading a snapshot just before IBD completes is pretty unlikely, but definitely something we should handle. Although if it gives everyone any comfort, `MaybeCompleteSnapshotValidation()` (as called by ABC) would have handled this case [by simply deleting/deactivating the snapshot](https://github.com/jamesob/bitcoin/blob/b9448bb8059208807492300bc84294a7f2f38edf/src/validation.cpp#L5475-L5521). \r\n\r\nI've added a commit with the check in `ActivateSnapshot`, but maybe we can do the `util::Result` return as a followup.\r\n\r\nNote that because of the difficulty inherent in generating snapshots in unittests, I had to include a hack in `test/util/chainstate/CreateAndActivateUTXOSnapshot()` as a result of this change that rewinds the active chain while activating a snapshot. I don't see an easy way around this.",
      "created_at": "2023-09-17T17:54:17Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328123875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328123875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2774,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328130342",
      "pull_request_review_id": 1630102347,
      "id": 1328130342,
      "node_id": "PRRC_kwDOABII585PKakm",
      "diff_hunk": "@@ -2789,6 +2789,85 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::BOOL, \"initialblockdownload\", \"is this chainstate in IBD\"},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "51dbde2bb73bcd03f73e3d5eb6c998e5e01b5536",
      "in_reply_to_id": 1325201611,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-09-17T18:51:22Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328130342",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328130342"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2798,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328130421",
      "pull_request_review_id": 1630102347,
      "id": 1328130421,
      "node_id": "PRRC_kwDOABII585PKal1",
      "diff_hunk": "@@ -2784,6 +2784,69 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    auto make_chain_data = [&](Chainstate* cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        UniValue data(UniValue::VOBJ);\n+        if (!cs || !cs->m_chain.Tip()) {\n+            return data;\n+        }\n+        const CChain& chain = cs->m_chain;\n+        const CBlockIndex* tip = chain.Tip();\n+\n+        data.pushKV(\"blocks\",                (int)chain.Height());\n+        data.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n+        data.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+        data.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n+        data.pushKV(\"snapshot_blockhash\",    cs->m_from_snapshot_blockhash.value_or(uint256{}).ToString());",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "555206238129c6ed9fcbbc498c81455c7fe6d851",
      "in_reply_to_id": 1312045678,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2023-09-17T18:52:19Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328130421",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328130421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2843,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328130516",
      "pull_request_review_id": 1630102347,
      "id": 1328130516,
      "node_id": "PRRC_kwDOABII585PKanU",
      "diff_hunk": "@@ -2789,6 +2789,85 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::BOOL, \"initialblockdownload\", \"is this chainstate in IBD\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::STR, \"active_chain_type\", \"one of \\\"ibd\\\", \\\"snapshot\\\", \\\"validated_snapshot\\\"\"},\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"ibd\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"validated_snapshot\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    auto make_chain_data = [&](Chainstate* cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        UniValue data(UniValue::VOBJ);\n+        if (!cs || !cs->m_chain.Tip()) {\n+            return data;\n+        }\n+        const CChain& chain = cs->m_chain;\n+        const CBlockIndex* tip = chain.Tip();\n+\n+        data.pushKV(\"blocks\",                (int)chain.Height());\n+        data.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n+        data.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+        data.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n+        data.pushKV(\"snapshot_blockhash\",    cs->m_from_snapshot_blockhash.value_or(uint256{}).ToString());\n+        data.pushKV(\"initialblockdownload\",  chainman.IsInitialBlockDownload());\n+        data.pushKV(\"coins_db_cache_bytes\",  cs->m_coinsdb_cache_size_bytes);\n+        data.pushKV(\"coins_tip_cache_bytes\", cs->m_coinstip_cache_size_bytes);\n+        return data;\n+    };\n+\n+    auto get_chain_type = [&chainman](Chainstate* cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        if (cs->m_from_snapshot_blockhash) {\n+            return (chainman.IsSnapshotValidated() ? \"validated_snapshot\" : \"snapshot\");\n+        }\n+        return \"ibd\";\n+    };",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "51dbde2bb73bcd03f73e3d5eb6c998e5e01b5536",
      "in_reply_to_id": 1325221867,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, good points. This RPC originally began as a debugging aid for development, but I think that use isn't necessary anymore.",
      "created_at": "2023-09-17T18:53:05Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328130516",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328130516"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 2850,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2856,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328131014",
      "pull_request_review_id": 1630102347,
      "id": 1328131014,
      "node_id": "PRRC_kwDOABII585PKavG",
      "diff_hunk": "@@ -2789,6 +2789,85 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::BOOL, \"initialblockdownload\", \"is this chainstate in IBD\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::STR, \"active_chain_type\", \"one of \\\"ibd\\\", \\\"snapshot\\\", \\\"validated_snapshot\\\"\"},\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"ibd\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"validated_snapshot\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "51dbde2bb73bcd03f73e3d5eb6c998e5e01b5536",
      "in_reply_to_id": 1325204659,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2023-09-17T18:57:28Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328131014",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328131014"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 2813,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2815,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328131057",
      "pull_request_review_id": 1630102347,
      "id": 1328131057,
      "node_id": "PRRC_kwDOABII585PKavx",
      "diff_hunk": "@@ -0,0 +1,221 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test for assumeutxo, a means of quickly bootstrapping a node using\n+a serialized version of the UTXO set at a certain height, which corresponds\n+to a hash that has been compiled into bitcoind.\n+\n+The assumeutxo value generated and used here is committed to in\n+`CRegTestParams::m_assumeutxo_data` in `src/chainparams.cpp`.\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, wait_until_helper\n+\n+START_HEIGHT = 199\n+SNAPSHOT_BASE_HEIGHT = 299\n+FINAL_HEIGHT = 399\n+COMPLETE_IDX = {'synced': True, 'best_block_height': FINAL_HEIGHT}\n+\n+\n+class AssumeutxoTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        \"\"\"Use the pregenerated, deterministic chain up to height 199.\"\"\"\n+        self.num_nodes = 3\n+        self.rpc_timeout = 120\n+        self.extra_args = [\n+            [],\n+            [\"-fastprune\", \"-prune=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+            [\"-txindex=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+        ]\n+\n+    def setup_network(self):\n+        \"\"\"Start with the nodes disconnected so that one can generate a snapshot\n+        including blocks the other hasn't yet seen.\"\"\"\n+        self.add_nodes(3)\n+        self.start_nodes(extra_args=self.extra_args)\n+\n+    def run_test(self):\n+        \"\"\"\n+        Bring up two (disconnected) nodes, mine some new blocks on the first,\n+        and generate a UTXO snapshot.\n+\n+        Load the snapshot into the second, ensure it syncs to tip and completes\n+        background validation when connected to the first.\n+        \"\"\"\n+        n0 = self.nodes[0]\n+        n1 = self.nodes[1]\n+        n2 = self.nodes[2]\n+\n+        # Mock time for a deterministic chain\n+        for n in self.nodes:\n+            n.setmocktime(n.getblockheader(n.getbestblockhash())['time'])\n+\n+        self.sync_blocks()\n+\n+        def no_sync():\n+            pass\n+\n+        # Generate a series of blocks that `n0` will have in the snapshot,\n+        # but that n1 doesn't yet see. In order for the snapshot to activate,\n+        # though, we have to ferry over the new headers to n1 so that it\n+        # isn't waiting forever to see the header of the snapshot's base block\n+        # while disconnected from n0.\n+        for i in range(100):\n+            self.generate(n0, nblocks=1, sync_fun=no_sync)\n+            newblock = n0.getblock(n0.getbestblockhash(), 0)\n+\n+            # make n1 aware of the new header, but don't give it the block.\n+            n1.submitheader(newblock)\n+            n2.submitheader(newblock)\n+\n+        # Ensure everyone is seeing the same headers.\n+        for n in self.nodes:\n+            assert_equal(n.getblockchaininfo()[\"headers\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        self.log.info(\"-- Testing assumeutxo + some indexes + pruning\")\n+\n+        assert_equal(n0.getblockcount(), SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockcount(), START_HEIGHT)\n+\n+        self.log.info(f\"Creating a UTXO snapshot at height {SNAPSHOT_BASE_HEIGHT}\")\n+        dump_output = n0.dumptxoutset('utxos.dat')\n+\n+        assert_equal(\n+            dump_output['txoutset_hash'],\n+            'ef45ccdca5898b6c2145e4581d2b88c56564dd389e4bd75a1aaf6961d3edd3c0')\n+        assert_equal(dump_output['nchaintx'], 300)\n+        assert_equal(n0.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        # Mine more blocks on top of the snapshot that n1 hasn't yet seen. This\n+        # will allow us to test n1's sync-to-tip on top of a snapshot.\n+        self.generate(n0, nblocks=100, sync_fun=no_sync)\n+\n+        assert_equal(n0.getblockcount(), FINAL_HEIGHT)\n+        assert_equal(n1.getblockcount(), START_HEIGHT)\n+\n+        assert_equal(n0.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n+\n+        self.log.info(f\"Loading snapshot into second node from {dump_output['path']}\")\n+        loaded = n1.loadtxoutset(dump_output['path'])\n+        assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n+\n+        monitor = n1.getchainstates()\n+        assert_equal(monitor['ibd']['blocks'], START_HEIGHT)\n+        assert_equal(monitor['snapshot']['blocks'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(monitor['snapshot']['snapshot_blockhash'], dump_output['base_hash'])\n+\n+        assert_equal(n1.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        PAUSE_HEIGHT = FINAL_HEIGHT - 40\n+\n+        self.log.info(\"Restarting node to stop at height %d\", PAUSE_HEIGHT)\n+        self.restart_node(1, extra_args=[\n+            f\"-stopatheight={PAUSE_HEIGHT}\", *self.extra_args[1]])\n+\n+        # Finally connect the nodes and let them sync.\n+        self.connect_nodes(0, 1)\n+\n+        n1.wait_until_stopped(timeout=5)\n+\n+        self.log.info(\"Checking that blocks are segmented on disk\")\n+        assert self.has_blockfile(n1, \"00000\"), \"normal blockfile missing\"\n+        assert self.has_blockfile(n1, \"00001\"), \"assumed blockfile missing\"\n+        assert not self.has_blockfile(n1, \"00002\"), \"too many blockfiles\"\n+\n+        self.log.info(\"Restarted node before snapshot validation completed, reloading...\")\n+        self.restart_node(1, extra_args=self.extra_args[1])\n+        self.connect_nodes(0, 1)\n+\n+        self.log.info(f\"Ensuring snapshot chain syncs to tip. ({FINAL_HEIGHT})\")\n+        wait_until_helper(lambda: n1.getchainstates()['snapshot']['blocks'] == FINAL_HEIGHT)\n+        self.sync_blocks(nodes=(n0, n1))\n+\n+        self.log.info(\"Ensuring background validation completes\")\n+        # N.B.: the `ibd` key disappears once the background validation is complete.\n+        wait_until_helper(lambda: not n1.getchainstates().get('ibd'))\n+\n+        # Ensure indexes have synced.\n+        completed_idx_state = {\n+            'basic block filter index': COMPLETE_IDX,\n+            'coinstatsindex': COMPLETE_IDX,\n+        }\n+        self.wait_until(lambda: n1.getindexinfo() == completed_idx_state)\n+\n+        # TODO: test submitting a transaction and verifying it appears in mempool",
      "path": "test/functional/feature_assumeutxo.py",
      "position": null,
      "original_position": 147,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3c7dacb823b0c226c02302b2c12cfe37121e0b0d",
      "in_reply_to_id": 1325243993,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Followup?",
      "created_at": "2023-09-17T18:57:48Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328131057",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328131057"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328131083",
      "pull_request_review_id": 1630102347,
      "id": 1328131083,
      "node_id": "PRRC_kwDOABII585PKawL",
      "diff_hunk": "@@ -0,0 +1,221 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test for assumeutxo, a means of quickly bootstrapping a node using\n+a serialized version of the UTXO set at a certain height, which corresponds\n+to a hash that has been compiled into bitcoind.\n+\n+The assumeutxo value generated and used here is committed to in\n+`CRegTestParams::m_assumeutxo_data` in `src/chainparams.cpp`.\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, wait_until_helper\n+\n+START_HEIGHT = 199\n+SNAPSHOT_BASE_HEIGHT = 299\n+FINAL_HEIGHT = 399\n+COMPLETE_IDX = {'synced': True, 'best_block_height': FINAL_HEIGHT}\n+\n+\n+class AssumeutxoTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        \"\"\"Use the pregenerated, deterministic chain up to height 199.\"\"\"\n+        self.num_nodes = 3\n+        self.rpc_timeout = 120\n+        self.extra_args = [\n+            [],\n+            [\"-fastprune\", \"-prune=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+            [\"-txindex=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+        ]\n+\n+    def setup_network(self):\n+        \"\"\"Start with the nodes disconnected so that one can generate a snapshot\n+        including blocks the other hasn't yet seen.\"\"\"\n+        self.add_nodes(3)\n+        self.start_nodes(extra_args=self.extra_args)\n+\n+    def run_test(self):\n+        \"\"\"\n+        Bring up two (disconnected) nodes, mine some new blocks on the first,\n+        and generate a UTXO snapshot.\n+\n+        Load the snapshot into the second, ensure it syncs to tip and completes\n+        background validation when connected to the first.\n+        \"\"\"\n+        n0 = self.nodes[0]\n+        n1 = self.nodes[1]\n+        n2 = self.nodes[2]\n+\n+        # Mock time for a deterministic chain\n+        for n in self.nodes:\n+            n.setmocktime(n.getblockheader(n.getbestblockhash())['time'])\n+\n+        self.sync_blocks()\n+\n+        def no_sync():\n+            pass\n+\n+        # Generate a series of blocks that `n0` will have in the snapshot,\n+        # but that n1 doesn't yet see. In order for the snapshot to activate,\n+        # though, we have to ferry over the new headers to n1 so that it\n+        # isn't waiting forever to see the header of the snapshot's base block\n+        # while disconnected from n0.\n+        for i in range(100):\n+            self.generate(n0, nblocks=1, sync_fun=no_sync)\n+            newblock = n0.getblock(n0.getbestblockhash(), 0)\n+\n+            # make n1 aware of the new header, but don't give it the block.\n+            n1.submitheader(newblock)\n+            n2.submitheader(newblock)\n+\n+        # Ensure everyone is seeing the same headers.\n+        for n in self.nodes:\n+            assert_equal(n.getblockchaininfo()[\"headers\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        self.log.info(\"-- Testing assumeutxo + some indexes + pruning\")\n+\n+        assert_equal(n0.getblockcount(), SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockcount(), START_HEIGHT)\n+\n+        self.log.info(f\"Creating a UTXO snapshot at height {SNAPSHOT_BASE_HEIGHT}\")\n+        dump_output = n0.dumptxoutset('utxos.dat')\n+\n+        assert_equal(\n+            dump_output['txoutset_hash'],\n+            'ef45ccdca5898b6c2145e4581d2b88c56564dd389e4bd75a1aaf6961d3edd3c0')\n+        assert_equal(dump_output['nchaintx'], 300)\n+        assert_equal(n0.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        # Mine more blocks on top of the snapshot that n1 hasn't yet seen. This\n+        # will allow us to test n1's sync-to-tip on top of a snapshot.\n+        self.generate(n0, nblocks=100, sync_fun=no_sync)\n+\n+        assert_equal(n0.getblockcount(), FINAL_HEIGHT)\n+        assert_equal(n1.getblockcount(), START_HEIGHT)\n+\n+        assert_equal(n0.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n+\n+        self.log.info(f\"Loading snapshot into second node from {dump_output['path']}\")\n+        loaded = n1.loadtxoutset(dump_output['path'])\n+        assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n+\n+        monitor = n1.getchainstates()\n+        assert_equal(monitor['ibd']['blocks'], START_HEIGHT)\n+        assert_equal(monitor['snapshot']['blocks'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(monitor['snapshot']['snapshot_blockhash'], dump_output['base_hash'])\n+\n+        assert_equal(n1.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        PAUSE_HEIGHT = FINAL_HEIGHT - 40\n+\n+        self.log.info(\"Restarting node to stop at height %d\", PAUSE_HEIGHT)\n+        self.restart_node(1, extra_args=[\n+            f\"-stopatheight={PAUSE_HEIGHT}\", *self.extra_args[1]])\n+\n+        # Finally connect the nodes and let them sync.\n+        self.connect_nodes(0, 1)\n+\n+        n1.wait_until_stopped(timeout=5)\n+\n+        self.log.info(\"Checking that blocks are segmented on disk\")\n+        assert self.has_blockfile(n1, \"00000\"), \"normal blockfile missing\"\n+        assert self.has_blockfile(n1, \"00001\"), \"assumed blockfile missing\"\n+        assert not self.has_blockfile(n1, \"00002\"), \"too many blockfiles\"\n+\n+        self.log.info(\"Restarted node before snapshot validation completed, reloading...\")\n+        self.restart_node(1, extra_args=self.extra_args[1])\n+        self.connect_nodes(0, 1)\n+\n+        self.log.info(f\"Ensuring snapshot chain syncs to tip. ({FINAL_HEIGHT})\")\n+        wait_until_helper(lambda: n1.getchainstates()['snapshot']['blocks'] == FINAL_HEIGHT)\n+        self.sync_blocks(nodes=(n0, n1))\n+\n+        self.log.info(\"Ensuring background validation completes\")\n+        # N.B.: the `ibd` key disappears once the background validation is complete.\n+        wait_until_helper(lambda: not n1.getchainstates().get('ibd'))\n+\n+        # Ensure indexes have synced.\n+        completed_idx_state = {\n+            'basic block filter index': COMPLETE_IDX,\n+            'coinstatsindex': COMPLETE_IDX,\n+        }\n+        self.wait_until(lambda: n1.getindexinfo() == completed_idx_state)\n+\n+        # TODO: test submitting a transaction and verifying it appears in mempool\n+\n+        for i in (0, 1):\n+            n = self.nodes[i]\n+            self.log.info(f\"Restarting node {i} to ensure (Check|Load)BlockIndex passes\")\n+            self.restart_node(i, extra_args=self.extra_args[i])\n+\n+            assert_equal(n.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n+\n+            assert_equal(n.getchainstates()['ibd']['blocks'], FINAL_HEIGHT)\n+            assert_equal(n.getchainstates().get('snapshot'), None)\n+\n+            if i != 0:\n+                # Ensure indexes have synced for the assumeutxo node\n+                self.wait_until(lambda: n.getindexinfo() == completed_idx_state)\n+\n+\n+        # Node 2: all indexes + reindex\n+        # -----------------------------\n+\n+        self.log.info(\"-- Testing all indexes + reindex\")\n+        assert_equal(n2.getblockcount(), START_HEIGHT)\n+\n+        self.log.info(f\"Loading snapshot into third node from {dump_output['path']}\")\n+        loaded = n2.loadtxoutset(dump_output['path'])\n+        assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n+\n+        monitor = n2.getchainstates()\n+        assert_equal(monitor['ibd']['blocks'], START_HEIGHT)\n+        assert_equal(monitor['snapshot']['blocks'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(monitor['snapshot']['snapshot_blockhash'], dump_output['base_hash'])\n+\n+        self.connect_nodes(0, 2)\n+        wait_until_helper(lambda: n2.getchainstates()['snapshot']['blocks'] == FINAL_HEIGHT)\n+        self.sync_blocks()\n+\n+        self.log.info(\"Ensuring background validation completes\")\n+        wait_until_helper(lambda: not n2.getchainstates().get('ibd'))\n+\n+        completed_idx_state = {\n+            'basic block filter index': COMPLETE_IDX,\n+            'coinstatsindex': COMPLETE_IDX,\n+            'txindex': COMPLETE_IDX,\n+        }\n+        self.wait_until(lambda: n2.getindexinfo() == completed_idx_state)\n+\n+        for i in (0, 2):\n+            n = self.nodes[i]\n+            self.log.info(f\"Restarting node {i} to ensure (Check|Load)BlockIndex passes\")\n+            self.restart_node(i, extra_args=self.extra_args[i])\n+\n+            assert_equal(n.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n+\n+            assert_equal(n.getchainstates()['ibd']['blocks'], FINAL_HEIGHT)\n+            assert_equal(n.getchainstates().get('snapshot'), None)\n+\n+            if i != 0:\n+                # Ensure indexes have synced for the assumeutxo node\n+                self.wait_until(lambda: n.getindexinfo() == completed_idx_state)\n+\n+        self.log.info(\"Test -reindex-chainstate of an assumeutxo-synced node\")\n+        self.restart_node(2, extra_args=[\n+            '-reindex-chainstate=1', *self.extra_args[2]])\n+        assert_equal(n2.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n+        wait_until_helper(lambda: n2.getblockcount() == FINAL_HEIGHT)\n+\n+        self.log.info(\"Test -reindex of an assumeutxo-synced node\")",
      "path": "test/functional/feature_assumeutxo.py",
      "position": 239,
      "original_position": 214,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3c7dacb823b0c226c02302b2c12cfe37121e0b0d",
      "in_reply_to_id": 1325246788,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added TODO.",
      "created_at": "2023-09-17T18:57:56Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328131083",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328131083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 239,
      "original_line": 239,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328153191",
      "pull_request_review_id": 1630102347,
      "id": 1328153191,
      "node_id": "PRRC_kwDOABII585PKgJn",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$(($BASE_HEIGHT + $INCREMENTAL_HEIGHT))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes.",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 36,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b6f6eabfd84e14a1d621121e3cd841ac3ce91932",
      "in_reply_to_id": 1325249448,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Coverage; clarified in comment.",
      "created_at": "2023-09-17T22:20:06Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328153191",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328153191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 36,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328153252",
      "pull_request_review_id": 1630102347,
      "id": 1328153252,
      "node_id": "PRRC_kwDOABII585PKgKk",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$(($BASE_HEIGHT + $INCREMENTAL_HEIGHT))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes.\n+ALL_INDEXES=\"-txindex -coinstatsindex -blockfilterindex=1\"\n+\n+if ! command -v jq >/dev/null ; then\n+  echo \"This script requires jq to parse JSON RPC output. Please install it.\"\n+  echo \"(e.g. sudo apt install jq)\"\n+  exit 1\n+fi\n+\n+finish() {\n+  echo\n+  echo \"Killing server and client PIDs ($SERVER_PID, $CLIENT_PID) and cleaning up datadirs\"\n+  echo\n+  rm -f \"$UTXO_DAT_FILE\" \"$DUMP_OUTPUT\"",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": 52,
      "original_position": 49,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b6f6eabfd84e14a1d621121e3cd841ac3ce91932",
      "in_reply_to_id": 1325250465,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2023-09-17T22:20:32Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328153252",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328153252"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 52,
      "original_line": 52,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328153353",
      "pull_request_review_id": 1630102347,
      "id": 1328153353,
      "node_id": "PRRC_kwDOABII585PKgMJ",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$(($BASE_HEIGHT + $INCREMENTAL_HEIGHT))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes.\n+ALL_INDEXES=\"-txindex -coinstatsindex -blockfilterindex=1\"\n+\n+if ! command -v jq >/dev/null ; then\n+  echo \"This script requires jq to parse JSON RPC output. Please install it.\"\n+  echo \"(e.g. sudo apt install jq)\"\n+  exit 1\n+fi\n+\n+finish() {\n+  echo\n+  echo \"Killing server and client PIDs ($SERVER_PID, $CLIENT_PID) and cleaning up datadirs\"\n+  echo\n+  rm -f \"$UTXO_DAT_FILE\" \"$DUMP_OUTPUT\"\n+  rm -rf \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+  kill -9 \"$SERVER_PID\" \"$CLIENT_PID\"\n+}\n+\n+trap finish EXIT\n+\n+# Need to specify these to trick client into accepting server as a peer\n+# it can IBD from.\n+CHAIN_HACK_FLAGS=\"-maxtipage=9223372036854775207 -minimumchainwork=0x00\"",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 58,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b6f6eabfd84e14a1d621121e3cd841ac3ce91932",
      "in_reply_to_id": 1325252702,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, also renamed variable.",
      "created_at": "2023-09-17T22:21:59Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328153353",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328153353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 56,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328153426",
      "pull_request_review_id": 1630102347,
      "id": 1328153426,
      "node_id": "PRRC_kwDOABII585PKgNS",
      "diff_hunk": "@@ -0,0 +1,199 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$(($BASE_HEIGHT + $INCREMENTAL_HEIGHT))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes.\n+ALL_INDEXES=\"-txindex -coinstatsindex -blockfilterindex=1\"\n+\n+if ! command -v jq >/dev/null ; then\n+  echo \"This script requires jq to parse JSON RPC output. Please install it.\"\n+  echo \"(e.g. sudo apt install jq)\"\n+  exit 1\n+fi\n+\n+finish() {\n+  echo\n+  echo \"Killing server and client PIDs ($SERVER_PID, $CLIENT_PID) and cleaning up datadirs\"\n+  echo\n+  rm -f \"$UTXO_DAT_FILE\" \"$DUMP_OUTPUT\"\n+  rm -rf \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+  kill -9 \"$SERVER_PID\" \"$CLIENT_PID\"\n+}\n+\n+trap finish EXIT\n+\n+# Need to specify these to trick client into accepting server as a peer\n+# it can IBD from.\n+CHAIN_HACK_FLAGS=\"-maxtipage=9223372036854775207 -minimumchainwork=0x00\"\n+\n+server_rpc() {\n+  ./src/bitcoin-cli -rpcport=$SERVER_RPC_PORT -datadir=\"$SERVER_DATADIR\" \"$@\"\n+}\n+client_rpc() {\n+  ./src/bitcoin-cli -rpcport=$CLIENT_RPC_PORT -datadir=\"$CLIENT_DATADIR\" \"$@\"\n+}\n+server_sleep_til_boot() {\n+  while ! server_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+client_sleep_til_boot() {\n+  while ! client_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+\n+mkdir -p \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+\n+echo \"Hi, welcome to the assumeutxo demo/test\"\n+echo\n+echo \"We're going to\"\n+echo\n+echo \"  - start up a 'server' node, sync it via mainnet IBD to height ${BASE_HEIGHT}\"\n+echo \"  - create a UTXO snapshot at that height\"\n+echo \"  - IBD ${INCREMENTAL_HEIGHT} more blocks on top of that\"\n+echo\n+echo \"then we'll demonstrate assumeutxo by \"\n+echo\n+echo \"  - starting another node (the 'client') and loading the snapshot in\"\n+echo \"    * first you'll have to modify the code slightly (chainparams) and recompile\"\n+echo \"    * don't worry, we'll make it easy\"\n+echo \"  - observing the client sync ${INCREMENTAL_HEIGHT} blocks on top of the snapshot from the server\"\n+echo \"  - observing the client validate the snapshot chain via background IBD\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- Starting the demo. You might want to run the two following commands in\"\n+echo \"   separate terminal windows:\"\n+echo\n+echo \"   watch -n0.1 tail -n 30 $SERVER_DATADIR/debug.log\"\n+echo \"   watch -n0.1 tail -n 30 $CLIENT_DATADIR/debug.log\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- IBDing the blocks (height=$BASE_HEIGHT) required to the server node...\"\n+./src/bitcoind -logthreadnames=1 $SERVER_PORTS \\\n+    -datadir=\"$SERVER_DATADIR\" $CHAIN_HACK_FLAGS -stopatheight=\"$BASE_HEIGHT\" >/dev/null",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": null,
      "original_position": 105,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b6f6eabfd84e14a1d621121e3cd841ac3ce91932",
      "in_reply_to_id": 1325255387,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Script expects that this is imprecise.",
      "created_at": "2023-09-17T22:22:48Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328153426",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328153426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328153712",
      "pull_request_review_id": 1630102347,
      "id": 1328153712,
      "node_id": "PRRC_kwDOABII585PKgRw",
      "diff_hunk": "@@ -43,6 +43,11 @@ Release Process\n     - On mainnet, the selected value must not be orphaned, so it may be useful to set the height two blocks back from the tip.\n     - Testnet should be set with a height some tens of thousands back from the tip, due to reorgs there.\n   - `nMinimumChainWork` with the \"chainwork\" value of RPC `getblockheader` using the same height as that selected for the previous step.\n+  - `m_assumeutxo_data` with the updated assumeutxo hash and nChainTx count.\n+    - You can obtain this information, and the corresponding snapshot, by running\n+      `./contrib/devtools/utxo_snapshot.sh <blockheight> <snapshot-out-path>`.\n+    - The height used should probably the be same as the assumevalid height chosen.\n+    - Ensure the resulting snapshot is uploaded somewhere publicly accessible (torrent, HTTP server, etc.).",
      "path": "doc/release-process.md",
      "position": null,
      "original_position": 8,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "27adc36a173d5636e82dfca27364dbda34f3b022",
      "in_reply_to_id": 1325261488,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Reworded.",
      "created_at": "2023-09-17T22:25:06Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328153712",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328153712"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328153951",
      "pull_request_review_id": 1630102347,
      "id": 1328153951,
      "node_id": "PRRC_kwDOABII585PKgVf",
      "diff_hunk": "@@ -1036,12 +1033,25 @@ class ChainstateManager\n     //! Otherwise, revert to using the ibd chainstate and shutdown.\n     SnapshotCompletionResult MaybeCompleteSnapshotValidation() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Returns nullptr if no snapshot has been loaded.\n+    const CBlockIndex* GetSnapshotBaseBlock() const EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+\n     //! The most-work chain.\n     Chainstate& ActiveChainstate() const;\n     CChain& ActiveChain() const EXCLUSIVE_LOCKS_REQUIRED(GetMutex()) { return ActiveChainstate().m_chain; }\n     int ActiveHeight() const EXCLUSIVE_LOCKS_REQUIRED(GetMutex()) { return ActiveChain().Height(); }\n     CBlockIndex* ActiveTip() const EXCLUSIVE_LOCKS_REQUIRED(GetMutex()) { return ActiveChain().Tip(); }\n \n+    //! The state of a background sync (for net processing)\n+    bool BackgroundSyncInProgress() const EXCLUSIVE_LOCKS_REQUIRED(GetMutex()) {\n+        return IsUsable(m_snapshot_chainstate.get()) && IsUsable(m_ibd_chainstate.get());",
      "path": "src/validation.h",
      "position": 71,
      "original_position": 25,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "a42510ba9656aada250c5fdf402e3914ba6f51db",
      "in_reply_to_id": 1328019543,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See the docstring for `IsUsable()`.",
      "created_at": "2023-09-17T22:27:00Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328153951",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328153951"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1049,
      "original_line": 1049,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328154010",
      "pull_request_review_id": 1630102347,
      "id": 1328154010,
      "node_id": "PRRC_kwDOABII585PKgWa",
      "diff_hunk": "@@ -1341,12 +1373,47 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     if (state->pindexLastCommonBlock == state->pindexBestKnownBlock)\n         return;\n \n-    std::vector<const CBlockIndex*> vToFetch;\n     const CBlockIndex *pindexWalk = state->pindexLastCommonBlock;\n     // Never fetch further than the best block we know the peer has, or more than BLOCK_DOWNLOAD_WINDOW + 1 beyond the last\n     // linked block we have in common with this peer. The +1 is so we can detect stalling, namely if we would be able to\n     // download that next block if the window were 1 larger.\n     int nWindowEnd = state->pindexLastCommonBlock->nHeight + BLOCK_DOWNLOAD_WINDOW;\n+\n+    FindNextBlocks(vBlocks, peer, state, pindexWalk, count, nWindowEnd, &m_chainman.ActiveChain(), &nodeStaller);\n+}\n+\n+void PeerManagerImpl::TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex *from_tip, const CBlockIndex* target_block)",
      "path": "src/net_processing.cpp",
      "position": 78,
      "original_position": 60,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "a42510ba9656aada250c5fdf402e3914ba6f51db",
      "in_reply_to_id": 1328020790,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Followup if at all.",
      "created_at": "2023-09-17T22:27:33Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328154010",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328154010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1387,
      "original_line": 1387,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328154139",
      "pull_request_review_id": 1630102347,
      "id": 1328154139,
      "node_id": "PRRC_kwDOABII585PKgYb",
      "diff_hunk": "@@ -5830,7 +5897,18 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         if (CanServeBlocks(*peer) && ((sync_blocks_and_headers_from_peer && !IsLimitedPeer(*peer)) || !m_chainman.IsInitialBlockDownload()) && state.vBlocksInFlight.size() < MAX_BLOCKS_IN_TRANSIT_PER_PEER) {\n             std::vector<const CBlockIndex*> vToDownload;\n             NodeId staller = -1;\n-            FindNextBlocksToDownload(*peer, MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.vBlocksInFlight.size(), vToDownload, staller);\n+            auto get_inflight_budget = [&state]() {\n+                return std::max(0, MAX_BLOCKS_IN_TRANSIT_PER_PEER - static_cast<int>(state.vBlocksInFlight.size()));\n+            };\n+\n+            FindNextBlocksToDownload(*peer, get_inflight_budget(), vToDownload, staller);",
      "path": "src/net_processing.cpp",
      "position": 194,
      "original_position": 124,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "a42510ba9656aada250c5fdf402e3914ba6f51db",
      "in_reply_to_id": 1328020510,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added a comment.",
      "created_at": "2023-09-17T22:28:56Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328154139",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328154139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5934,
      "original_line": 5934,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328154370",
      "pull_request_review_id": 1630102347,
      "id": 1328154370,
      "node_id": "PRRC_kwDOABII585PKgcC",
      "diff_hunk": "@@ -1341,12 +1373,47 @@ void PeerManagerImpl::FindNextBlocksToDownload(const Peer& peer, unsigned int co\n     if (state->pindexLastCommonBlock == state->pindexBestKnownBlock)\n         return;\n \n-    std::vector<const CBlockIndex*> vToFetch;\n     const CBlockIndex *pindexWalk = state->pindexLastCommonBlock;\n     // Never fetch further than the best block we know the peer has, or more than BLOCK_DOWNLOAD_WINDOW + 1 beyond the last\n     // linked block we have in common with this peer. The +1 is so we can detect stalling, namely if we would be able to\n     // download that next block if the window were 1 larger.\n     int nWindowEnd = state->pindexLastCommonBlock->nHeight + BLOCK_DOWNLOAD_WINDOW;\n+\n+    FindNextBlocks(vBlocks, peer, state, pindexWalk, count, nWindowEnd, &m_chainman.ActiveChain(), &nodeStaller);\n+}\n+\n+void PeerManagerImpl::TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex *from_tip, const CBlockIndex* target_block)\n+{\n+    Assert(from_tip);\n+    Assert(target_block);\n+\n+    if (vBlocks.size() >= count) {\n+        return;\n+    }\n+\n+    vBlocks.reserve(count);\n+    CNodeState *state = Assert(State(peer.m_id));\n+\n+    if (state->pindexBestKnownBlock == nullptr || state->pindexBestKnownBlock->GetAncestor(target_block->nHeight) != target_block) {\n+        // This peer can't provide us the complete series of blocks leading up to the\n+        // assumeutxo snapshot base.\n+        //\n+        // Presumably this peer's chain has less work than our ActiveChain()'s tip, or else we\n+        // will eventually crash when we try to reorg to it. Let other logic\n+        // deal with whether we disconnect this peer.\n+        //\n+        // TODO at some point in the future, we might choose to request what blocks\n+        // this peer does have from the historical chain, despite it not having a\n+        // complete history beneath the snapshot base.",
      "path": "src/net_processing.cpp",
      "position": 100,
      "original_position": 82,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "a42510ba9656aada250c5fdf402e3914ba6f51db",
      "in_reply_to_id": 1328020935,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Either peer is in alien reorg that doesn't include the snapshot base in its best chain or they don't have complete blocks up to the snapshot base.",
      "created_at": "2023-09-17T22:31:14Z",
      "updated_at": "2023-09-17T22:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1328154370",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1328154370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1409,
      "original_line": 1409,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1329992346",
      "pull_request_review_id": 1633063450,
      "id": 1329992346,
      "node_id": "PRRC_kwDOABII585PRhKa",
      "diff_hunk": "@@ -97,6 +97,34 @@ struct PruneLockInfo {\n     int height_first{std::numeric_limits<int>::max()}; //! Height of earliest block that should be kept and not pruned\n };\n \n+enum BlockfileType {\n+    // Values used as array indexes - do not change carelessly.\n+    NORMAL = 0,\n+    ASSUMED = 1,",
      "path": "src/node/blockstorage.h",
      "position": 15,
      "original_position": 23,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "f7f446f750146d74114e72b27c6cba0bf59473bb",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (f7f446f750146d74114e72b27c6cba0bf59473bb)\r\n\r\nWould suggest adding `NUM_TYPES = 2` enum value here, and replacing hardcoded `2` on line 206. This might be a little less fragile and make it a little easier to add new types.",
      "created_at": "2023-09-19T11:52:33Z",
      "updated_at": "2023-09-20T01:20:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1329992346",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1329992346"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 104,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1330422758",
      "pull_request_review_id": 1633063450,
      "id": 1330422758,
      "node_id": "PRRC_kwDOABII585PTKPm",
      "diff_hunk": "@@ -5238,6 +5238,18 @@ bool ChainstateManager::ActivateSnapshot(\n             snapshot_ok = false;\n         }\n     }\n+\n+    // Do a final check to ensure that the snapshot chainstate is actually at a more\n+    // advanced height than the active chainstate; a user could have loaded a snapshot\n+    // very late in the IBD process, and we wouldn't want to load a useless chainstate.\n+    {\n+        LOCK(::cs_main);\n+        if (snapshot_chainstate->m_chain.Height() <= ActiveHeight()) {\n+            LogPrintf(\"[snapshot] activation failed - height does not exceed active chainstate\\n\");\n+            snapshot_ok = false;\n+        }\n+    }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "f09536af610b8eaca13f38e24825b5f62f55c968",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: do not activate snapshot if behind active chain\" (f09536af610b8eaca13f38e24825b5f62f55c968)\r\n\r\nIt seems like it would be better to verify that the snapshot block has more work than the chain tip, instead of verifying that it has a bigger height. In theory it would be possible for the chain tip to be pointing at a block with a large height but less work, and then the snapshot might incorrectly refuse to load.\r\n\r\nAlso, it seems like there is a race condition here because cs_main is released after this check, and potentially more blocks could be attached when this happens. It looks like a better place for this check would be on line 5275 after `cs_main` is locked but before `m_snapshot_chainstate` is assigned. Moving the check there would be a slightly bigger code change because it would require moving the !snapshot_ok DeleteCoinsDBFromDisk cleanup call to the bottom of the function, but moving cleanup to the end of the function would probably make sense anyway.\r\n\r\n",
      "created_at": "2023-09-19T16:42:02Z",
      "updated_at": "2023-09-20T01:20:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1330422758",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1330422758"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 5242,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1330426193",
      "pull_request_review_id": 1633063450,
      "id": 1330426193,
      "node_id": "PRRC_kwDOABII585PTLFR",
      "diff_hunk": "@@ -5339,6 +5351,11 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n \n     const AssumeutxoData& au_data = *maybe_au_data;\n \n+    if (au_data.height <= WITH_LOCK(::cs_main, return ActiveHeight())) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "f09536af610b8eaca13f38e24825b5f62f55c968",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"validation: do not activate snapshot if behind active chain\" (f09536af610b8eaca13f38e24825b5f62f55c968)\r\n\r\nIt's a little surprising to see this check here because this function is just trying to load the snapshot data, and otherwise doesn't care at all about the state of the active chain. Might be good to clarify with a comment that is just an early check to avoid slow loading of a snapshot that won't be usable, and another check will happen later before the snapshot is activated.",
      "created_at": "2023-09-19T16:45:22Z",
      "updated_at": "2023-09-20T01:20:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1330426193",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1330426193"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5354,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1330505053",
      "pull_request_review_id": 1633063450,
      "id": 1330505053,
      "node_id": "PRRC_kwDOABII585PTeVd",
      "diff_hunk": "@@ -2699,6 +2700,105 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"\n+        \"Meanwhile, the original chainstate will complete the initial block download process in \"\n+        \"the background, eventually validating up to the block that the snapshot is based upon.\\n\\n\"\n+\n+        \"The result is a usable bitcoind instance that is current with the network tip in a \"\n+        \"matter of minutes rather than hours. UTXO snapshot are typically obtained sources \"",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "ef7da5ffce66afa7c3e5f7b3951ecbf0b5f4fe57",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add loadtxoutset\" (ef7da5ffce66afa7c3e5f7b3951ecbf0b5f4fe57)\r\n\r\nProbably should say \"obtained from third-party sources\"",
      "created_at": "2023-09-19T17:50:26Z",
      "updated_at": "2023-09-20T01:20:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1330505053",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1330505053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2715,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1330506362",
      "pull_request_review_id": 1633063450,
      "id": 1330506362,
      "node_id": "PRRC_kwDOABII585PTep6",
      "diff_hunk": "@@ -2799,6 +2799,79 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"normal\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"a chainstate that is assumed valid based upon a UTXO snapshot\", RPCHelpForChainstate},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "8a69ed3425bf807625f15d0d3f910d5cabfc4c24",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"rpc: add getchainstates\" (8a69ed3425bf807625f15d0d3f910d5cabfc4c24)\r\n\r\nWould suggest changing this to avoid the phrase \"initial block download chainstate.\" I've gotten a little used to this phrase from reviewing assumeutxo PRs, but I don't actually see how it makes sense as a description. The main distinction between the two chainstates, I think, is that one chainstate is fully validated and the other is partially validated. So maybe would make the documentation say:\r\n\r\n* \"normal\" - Fully validated chainstate containing blocks this node has validated starting from the genesis block.\r\n* \"snapshot\" - Only present if an assumeutxo snapshot is loaded. Partially validated chainstate containing blocks this node has validated starting from the snapshot. After the snapshot is validated (when the \"normal\" chainstate advances far enough to validate it), this chainstate will replace and become the \"normal\" chainstate.",
      "created_at": "2023-09-19T17:51:48Z",
      "updated_at": "2023-09-20T09:47:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1330506362",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1330506362"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 2821,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2822,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331194085",
      "pull_request_review_id": 1634958794,
      "id": 1331194085,
      "node_id": "PRRC_kwDOABII585PWGjl",
      "diff_hunk": "@@ -892,6 +892,38 @@ class PeerManagerImpl final : public PeerManager\n      */\n     void FindNextBlocksToDownload(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, NodeId& nodeStaller) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /** Request blocks for the background chainstate, if one is in use. */\n+    void TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex* from_tip, const CBlockIndex* target_block) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /**\n+    * \\brief Find next blocks to download from a peer after a starting block.\n+    *\n+    * \\param vBlocks      Vector of blocks to download which will be appended to.\n+    * \\param peer         ID of peer which blocks will be downloaded from.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "a9ea542e8aed092f45dab2d9a66da56aba742f51",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "a9ea542e8aed092f45dab2d9a66da56aba742f51\r\n\r\nnit: This probably used to be an `ID`, but now it's just a peer?",
      "created_at": "2023-09-20T08:06:11Z",
      "updated_at": "2023-09-21T12:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1331194085",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331194085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 902,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331240905",
      "pull_request_review_id": 1634958794,
      "id": 1331240905,
      "node_id": "PRRC_kwDOABII585PWR_J",
      "diff_hunk": "@@ -5786,6 +5791,23 @@ util::Result<void> Chainstate::InvalidateCoinsDBOnDisk()\n     return {};\n }\n \n+bool ChainstateManager::DeleteSnapshotChainstate()\n+{\n+    AssertLockHeld(::cs_main);\n+    Assert(m_snapshot_chainstate);\n+    Assert(m_ibd_chainstate);\n+\n+    fs::path snapshot_datadir = GetSnapshotCoinsDBPath(*m_snapshot_chainstate);\n+    if (!DeleteCoinsDBFromDisk(snapshot_datadir, /*is_snapshot=*/ true)) {\n+        LogPrintf(\"Deletion of %s failed. Please remove it manually to continue reindexing.\\n\",\n+                  fs::PathToString(snapshot_datadir));\n+        return false;\n+    }\n+    m_active_chainstate = m_ibd_chainstate.get();\n+    m_snapshot_chainstate.reset();",
      "path": "src/validation.cpp",
      "position": 409,
      "original_position": 51,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "00129799d97c746e77d929c323b689aae72b46b2",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "00129799d97c746e77d929c323b689aae72b46b2\r\n\r\n    //! Once this pointer is set to a corresponding chainstate, it will not\r\n    //! be reset until init.cpp:Shutdown().\r\n\r\nShould be updated?",
      "created_at": "2023-09-20T08:31:05Z",
      "updated_at": "2023-09-21T12:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1331240905",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331240905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5868,
      "original_line": 5868,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331255670",
      "pull_request_review_id": 1634958794,
      "id": 1331255670,
      "node_id": "PRRC_kwDOABII585PWVl2",
      "diff_hunk": "@@ -3248,16 +3250,21 @@ bool Chainstate::ActivateBestChain(BlockValidationState& state, std::shared_ptr<\n             if (!blocks_connected) return true;\n \n             const CBlockIndex* pindexFork = m_chain.FindFork(starting_tip);\n-            bool fInitialDownload = m_chainman.IsInitialBlockDownload();\n+            bool still_in_ibd = m_chainman.IsInitialBlockDownload();\n+\n+            if (was_in_ibd && !still_in_ibd) {",
      "path": "src/validation.cpp",
      "position": 83,
      "original_position": 23,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "3661b4b085b9501cecd55f606c3da40e38193455",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "3661b4b085b9501cecd55f606c3da40e38193455\r\n\r\nit's impossible to have `!was_in_ibd & still_in_ibd` right?\r\n`Assume` invariant could be added for the clarity of code.\r\n\r\nAlso, that's implied by the var name `still`, but i'd prefer `now_in_ibd` to lower the expectations.",
      "created_at": "2023-09-20T08:42:00Z",
      "updated_at": "2023-09-21T12:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1331255670",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331255670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3264,
      "original_line": 3264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331258939",
      "pull_request_review_id": 1634958794,
      "id": 1331258939,
      "node_id": "PRRC_kwDOABII585PWWY7",
      "diff_hunk": "@@ -5810,6 +5810,16 @@ bool ChainstateManager::DeleteSnapshotChainstate()\n     return true;\n }\n \n+ChainstateRole Chainstate::GetRole() const\n+{\n+    if (m_chainman.GetAll().size() <= 1) {",
      "path": "src/validation.cpp",
      "position": 415,
      "original_position": 6,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "6d5aca2340f85d4bace786463ac8f33d8d579d7f",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "When would it be 0?",
      "created_at": "2023-09-20T08:44:28Z",
      "updated_at": "2023-09-21T12:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1331258939",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331258939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5874,
      "original_line": 5874,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331521797",
      "pull_request_review_id": 1635464665,
      "id": 1331521797,
      "node_id": "PRRC_kwDOABII585PXWkF",
      "diff_hunk": "@@ -0,0 +1,223 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test for assumeutxo, a means of quickly bootstrapping a node using\n+a serialized version of the UTXO set at a certain height, which corresponds\n+to a hash that has been compiled into bitcoind.\n+\n+The assumeutxo value generated and used here is committed to in\n+`CRegTestParams::m_assumeutxo_data` in `src/chainparams.cpp`.\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, wait_until_helper\n+\n+START_HEIGHT = 199\n+SNAPSHOT_BASE_HEIGHT = 299\n+FINAL_HEIGHT = 399\n+COMPLETE_IDX = {'synced': True, 'best_block_height': FINAL_HEIGHT}\n+\n+\n+class AssumeutxoTest(BitcoinTestFramework):",
      "path": "test/functional/feature_assumeutxo.py",
      "position": 47,
      "original_position": 21,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "7deed0f9f05e9efc9526bc419c7f0a887f991d1f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: add feature_assumeutxo functional test\" (7deed0f9f05e9efc9526bc419c7f0a887f991d1f)\r\n\r\nTest seems to have pretty good coverage for the happy case, but it would be good to have coverage for pathological cases to make sure checks in the code written to handle them work correctly.\r\n\r\nIt should be possible to write a test using `itertools.product` or something similar to test different cases and starting states.\r\n\r\nInteresting test cases could be loading an assumeutxo snapshot file with:\r\n\r\n1. An invalid hash\r\n2. Valid hash but invalid snapshot file (bad coin height or truncated file or bad other serialization)\r\n3. Valid snapshot file, but referencing an unknown block\r\n4. Valid snapshot file, but referencing a snapshot block that turns out to be invalid, or has an invalid parent\r\n5. Valid snapshot file and snapshot block, but the block is not on the most-work chain\r\n\r\nInteresting starting states could be loading a snapshot when the current chain tip is:\r\n\r\n1. An ancestor of snapshot block                                                                                                                                                      \r\n2. Not an ancestor of the snapshot block but has less work\r\n3. The snapshot block\r\n4. A descendant of the snapshot block\r\n5. Not an ancestor or a descendant of the snapshot block and has more work\r\n\r\nMost combinations of test cases / starting states above should be possible. I don't think a test like this needs to be part of this PR, but would be nice as a followup. It might make sense to include a consolidated TODO comment in this PR documenting ways the test could be improved (also mentioning other test ideas\r\nhttps://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325243993\r\nhttps://github.com/bitcoin/bitcoin/pull/27596#discussion_r1325246788)",
      "created_at": "2023-09-20T11:58:35Z",
      "updated_at": "2023-09-20T13:01:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1331521797",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331521797"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331808617",
      "pull_request_review_id": 1635926855,
      "id": 1331808617,
      "node_id": "PRRC_kwDOABII585PYclp",
      "diff_hunk": "@@ -97,6 +97,34 @@ struct PruneLockInfo {\n     int height_first{std::numeric_limits<int>::max()}; //! Height of earliest block that should be kept and not pruned\n };\n \n+enum BlockfileType {\n+    // Values used as array indexes - do not change carelessly.\n+    NORMAL = 0,\n+    ASSUMED = 1,",
      "path": "src/node/blockstorage.h",
      "position": 15,
      "original_position": 23,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "f7f446f750146d74114e72b27c6cba0bf59473bb",
      "in_reply_to_id": 1329992346,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, done.",
      "created_at": "2023-09-20T15:26:01Z",
      "updated_at": "2023-09-20T16:59:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1331808617",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331808617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 104,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331819174",
      "pull_request_review_id": 1635926855,
      "id": 1331819174,
      "node_id": "PRRC_kwDOABII585PYfKm",
      "diff_hunk": "@@ -5238,6 +5238,18 @@ bool ChainstateManager::ActivateSnapshot(\n             snapshot_ok = false;\n         }\n     }\n+\n+    // Do a final check to ensure that the snapshot chainstate is actually at a more\n+    // advanced height than the active chainstate; a user could have loaded a snapshot\n+    // very late in the IBD process, and we wouldn't want to load a useless chainstate.\n+    {\n+        LOCK(::cs_main);\n+        if (snapshot_chainstate->m_chain.Height() <= ActiveHeight()) {\n+            LogPrintf(\"[snapshot] activation failed - height does not exceed active chainstate\\n\");\n+            snapshot_ok = false;\n+        }\n+    }",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "f09536af610b8eaca13f38e24825b5f62f55c968",
      "in_reply_to_id": 1330422758,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> It seems like it would be better to verify that the snapshot block has more work than the chain tip\r\n\r\nYep, good point. Fixed.\r\n\r\nI've refactored the structure a bit to perform all checks (work comparison, blockhash file write) atomically w.r.t. cs_main and the chainstate swaps.",
      "created_at": "2023-09-20T15:33:29Z",
      "updated_at": "2023-09-20T16:59:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1331819174",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331819174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 5242,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 5251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331862702",
      "pull_request_review_id": 1635926855,
      "id": 1331862702,
      "node_id": "PRRC_kwDOABII585PYpyu",
      "diff_hunk": "@@ -5339,6 +5351,11 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n \n     const AssumeutxoData& au_data = *maybe_au_data;\n \n+    if (au_data.height <= WITH_LOCK(::cs_main, return ActiveHeight())) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "f09536af610b8eaca13f38e24825b5f62f55c968",
      "in_reply_to_id": 1330426193,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Changed to work comparison and added an explanatory comment, thanks. Have also made you co-author of this commit since conceptually a lot of it is yours.",
      "created_at": "2023-09-20T15:54:47Z",
      "updated_at": "2023-09-20T16:59:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1331862702",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331862702"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5354,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331925624",
      "pull_request_review_id": 1635926855,
      "id": 1331925624,
      "node_id": "PRRC_kwDOABII585PY5J4",
      "diff_hunk": "@@ -2699,6 +2700,105 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"\n+        \"Meanwhile, the original chainstate will complete the initial block download process in \"\n+        \"the background, eventually validating up to the block that the snapshot is based upon.\\n\\n\"\n+\n+        \"The result is a usable bitcoind instance that is current with the network tip in a \"\n+        \"matter of minutes rather than hours. UTXO snapshot are typically obtained sources \"",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "ef7da5ffce66afa7c3e5f7b3951ecbf0b5f4fe57",
      "in_reply_to_id": 1330505053,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2023-09-20T16:47:09Z",
      "updated_at": "2023-09-20T16:59:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1331925624",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331925624"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2715,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331927201",
      "pull_request_review_id": 1635926855,
      "id": 1331927201,
      "node_id": "PRRC_kwDOABII585PY5ih",
      "diff_hunk": "@@ -2799,6 +2799,79 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"normal\", /*optional=*/true, \"a traditional initial block download chainstate\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"a chainstate that is assumed valid based upon a UTXO snapshot\", RPCHelpForChainstate},",
      "path": "src/rpc/blockchain.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "8a69ed3425bf807625f15d0d3f910d5cabfc4c24",
      "in_reply_to_id": 1330506362,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed, and made you co-author since at this point a lot of your ideas (and words) are in this commit.",
      "created_at": "2023-09-20T16:48:37Z",
      "updated_at": "2023-09-20T16:59:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1331927201",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331927201"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": 2821,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2822,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331929870",
      "pull_request_review_id": 1635926855,
      "id": 1331929870,
      "node_id": "PRRC_kwDOABII585PY6MO",
      "diff_hunk": "@@ -0,0 +1,223 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test for assumeutxo, a means of quickly bootstrapping a node using\n+a serialized version of the UTXO set at a certain height, which corresponds\n+to a hash that has been compiled into bitcoind.\n+\n+The assumeutxo value generated and used here is committed to in\n+`CRegTestParams::m_assumeutxo_data` in `src/chainparams.cpp`.\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, wait_until_helper\n+\n+START_HEIGHT = 199\n+SNAPSHOT_BASE_HEIGHT = 299\n+FINAL_HEIGHT = 399\n+COMPLETE_IDX = {'synced': True, 'best_block_height': FINAL_HEIGHT}\n+\n+\n+class AssumeutxoTest(BitcoinTestFramework):",
      "path": "test/functional/feature_assumeutxo.py",
      "position": 47,
      "original_position": 21,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "7deed0f9f05e9efc9526bc419c7f0a887f991d1f",
      "in_reply_to_id": 1331521797,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Interesting test cases could be loading an assumeutxo snapshot file with:\r\n\r\nAs you probably know, a lot of these cases are already covered by the unittests. I definitely agree it would be nice to test them from within the functional tests, but actually generating such invalid snapshots will require some thought.\r\n\r\nI've consolidated all the TODOs in the test's docstring.",
      "created_at": "2023-09-20T16:51:16Z",
      "updated_at": "2023-09-20T16:59:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1331929870",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1331929870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 47,
      "original_line": 47,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332550768",
      "pull_request_review_id": 1634958794,
      "id": 1332550768,
      "node_id": "PRRC_kwDOABII585PbRxw",
      "diff_hunk": "@@ -1245,6 +1241,19 @@ class ChainstateManager\n     //!   fully validated chain.\n     Chainstate& GetChainstateForIndexing() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Return the [start, end] (inclusive) of block heights we can prune.\n+    //!\n+    //! start > end is possible, meaning no blocks can be pruned.",
      "path": "src/validation.h",
      "position": 114,
      "original_position": 17,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "8cfd27186d7f54c03e7cf928b4723608a39c656b",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "8cfd27186d7f54c03e7cf928b4723608a39c656b\r\n\r\nnit: What's the use of exposing this to the caller? I'd rather return {0, 0} in this case after handling it internally. Unless the caller needs to know.",
      "created_at": "2023-09-21T06:43:54Z",
      "updated_at": "2023-09-21T12:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1332550768",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332550768"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1241,
      "original_line": 1241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332552609",
      "pull_request_review_id": 1634958794,
      "id": 1332552609,
      "node_id": "PRRC_kwDOABII585PbSOh",
      "diff_hunk": "@@ -1245,6 +1241,19 @@ class ChainstateManager\n     //!   fully validated chain.\n     Chainstate& GetChainstateForIndexing() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Return the [start, end] (inclusive) of block heights we can prune.\n+    //!\n+    //! start > end is possible, meaning no blocks can be pruned.\n+    //!\n+    //! If we're pruning the snapshot chainstate, be sure not to\n+    //! prune blocks being used by the background chainstate.",
      "path": "src/validation.h",
      "position": null,
      "original_position": 20,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "8cfd27186d7f54c03e7cf928b4723608a39c656b",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "8cfd27186d7f54c03e7cf928b4723608a39c656b\r\n\r\nIs this addressed to the caller of this function? If yes, it's not 100% clear why this is the case.\r\nI think the potential issue here better be expanded.\r\n\r\nAnd then, can't this be handled internally then?",
      "created_at": "2023-09-21T06:45:58Z",
      "updated_at": "2023-09-21T12:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1332552609",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332552609"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332554860",
      "pull_request_review_id": 1634958794,
      "id": 1332554860,
      "node_id": "PRRC_kwDOABII585PbSxs",
      "diff_hunk": "@@ -265,13 +265,26 @@ CBlockIndex* BlockManager::InsertBlockIndex(const uint256& hash)\n     return pindex;\n }\n \n-bool BlockManager::LoadBlockIndex()\n+bool BlockManager::LoadBlockIndex(const std::optional<uint256>& snapshot_blockhash)\n {\n     if (!m_block_tree_db->LoadBlockIndexGuts(\n             GetConsensus(), [this](const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) { return this->InsertBlockIndex(hash); }, m_interrupt)) {\n         return false;\n     }\n \n+    int snapshot_height = -1;\n+    if (snapshot_blockhash) {\n+        const AssumeutxoData au_data = *Assert(GetParams().AssumeutxoForBlockhash(*snapshot_blockhash));\n+        snapshot_height = au_data.height;\n+        CBlockIndex* base{LookupBlockIndex(*snapshot_blockhash)};\n+\n+        // Since nChainTx (responsible for estiamted progress) isn't persisted",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "e3cae85738c8bf4116547af8d868c6c01577b80f",
      "in_reply_to_id": 1323352284,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "a7a5debb6a6bdc4f7217050e043cebb1c6e0d33a\r\n\r\n`estiamted` still not fixed",
      "created_at": "2023-09-21T06:48:23Z",
      "updated_at": "2023-09-21T12:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1332554860",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332554860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332568561",
      "pull_request_review_id": 1634958794,
      "id": 1332568561,
      "node_id": "PRRC_kwDOABII585PbWHx",
      "diff_hunk": "@@ -401,7 +414,11 @@ bool BlockManager::LoadBlockIndex()\n         // Pruned nodes may have deleted the block.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->nChainTx > 0) {\n+                if (snapshot_blockhash && pindex->nHeight == snapshot_height &&\n+                        pindex->GetBlockHash() == *snapshot_blockhash) {\n+                    // Should have been set above; don't disturb it with code below.\n+                    Assert(pindex->nChainTx > 0);",
      "path": "src/node/blockstorage.cpp",
      "position": 174,
      "original_position": 36,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "a7a5debb6a6bdc4f7217050e043cebb1c6e0d33a",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "a7a5debb6a6bdc4f7217050e043cebb1c6e0d33a\r\n\r\nwhat's the use of this Assert? it is implied by `if (pindex->nTx > 0) {` above i guess.",
      "created_at": "2023-09-21T07:02:02Z",
      "updated_at": "2023-09-21T12:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1332568561",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332568561"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 427,
      "original_line": 427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332571729",
      "pull_request_review_id": 1634958794,
      "id": 1332571729,
      "node_id": "PRRC_kwDOABII585PbW5R",
      "diff_hunk": "@@ -265,13 +265,26 @@ CBlockIndex* BlockManager::InsertBlockIndex(const uint256& hash)\n     return pindex;\n }\n \n-bool BlockManager::LoadBlockIndex()\n+bool BlockManager::LoadBlockIndex(const std::optional<uint256>& snapshot_blockhash)\n {\n     if (!m_block_tree_db->LoadBlockIndexGuts(\n             GetConsensus(), [this](const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) { return this->InsertBlockIndex(hash); }, m_interrupt)) {\n         return false;\n     }\n \n+    int snapshot_height = -1;\n+    if (snapshot_blockhash) {\n+        const AssumeutxoData au_data = *Assert(GetParams().AssumeutxoForBlockhash(*snapshot_blockhash));\n+        snapshot_height = au_data.height;\n+        CBlockIndex* base{LookupBlockIndex(*snapshot_blockhash)};\n+\n+        // Since nChainTx (responsible for estiamted progress) isn't persisted",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "e3cae85738c8bf4116547af8d868c6c01577b80f",
      "in_reply_to_id": 1323352284,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ok, fixed later in bd770ff59075fa2fd0441311ef1c02439ed68fdd",
      "created_at": "2023-09-21T07:05:18Z",
      "updated_at": "2023-09-21T12:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1332571729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332571729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 281,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332579498",
      "pull_request_review_id": 1634958794,
      "id": 1332579498,
      "node_id": "PRRC_kwDOABII585PbYyq",
      "diff_hunk": "@@ -705,15 +724,34 @@ void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n         // have populated `m_blockfile_info` via LoadBlockIndexDB().\n         return;\n     }\n-    assert(static_cast<int>(m_blockfile_info.size()) > m_last_blockfile);\n+    assert(static_cast<int>(m_blockfile_info.size()) > blockfile_num);\n \n-    FlatFilePos block_pos_old(m_last_blockfile, m_blockfile_info[m_last_blockfile].nSize);\n+    FlatFilePos block_pos_old(blockfile_num, m_blockfile_info[blockfile_num].nSize);\n     if (!BlockFileSeq().Flush(block_pos_old, fFinalize)) {\n         m_opts.notifications.flushError(\"Flushing block file to disk failed. This is likely the result of an I/O error.\");\n     }\n     // we do not always flush the undo file, as the chain tip may be lagging behind the incoming blocks,\n     // e.g. during IBD or a sync after a node going offline\n-    if (!fFinalize || finalize_undo) FlushUndoFile(m_last_blockfile, finalize_undo);\n+    if (!fFinalize || finalize_undo) FlushUndoFile(blockfile_num, finalize_undo);\n+}\n+\n+BlockfileType BlockManager::BlockfileTypeForHeight(int height)\n+{\n+    if (!m_snapshot_height) {\n+        return BlockfileType::NORMAL;\n+    }\n+    return (height >= *m_snapshot_height) ? BlockfileType::ASSUMED : BlockfileType::NORMAL;\n+}\n+\n+void BlockManager::FlushChainstateBlockFile(int tip_height)\n+{\n+    LOCK(cs_LastBlockFile);\n+    auto& cursor = m_blockfile_cursors[BlockfileTypeForHeight(tip_height)];\n+    if (cursor) {\n+        // The cursor may not exist after a snapshot has been loaded but before any\n+        // blocks have been downloaded.\n+        return FlushBlockFile(cursor->file_num, /*fFinalize=*/false, /*finalize_undo=*/false);",
      "path": "src/node/blockstorage.cpp",
      "position": 297,
      "original_position": 171,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "bd770ff59075fa2fd0441311ef1c02439ed68fdd",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "bd770ff59075fa2fd0441311ef1c02439ed68fdd\r\n\r\nnit: return here is confusing.",
      "created_at": "2023-09-21T07:12:34Z",
      "updated_at": "2023-09-21T12:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1332579498",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332579498"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 762,
      "original_line": 762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332580222",
      "pull_request_review_id": 1634958794,
      "id": 1332580222,
      "node_id": "PRRC_kwDOABII585PbY9-",
      "diff_hunk": "@@ -583,15 +623,30 @@ void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n         // have populated `m_blockfile_info` via LoadBlockIndexDB().\n         return;\n     }\n-    assert(static_cast<int>(m_blockfile_info.size()) > m_last_blockfile);\n+    assert(static_cast<int>(m_blockfile_info.size()) > blockfile_num);\n \n-    FlatFilePos block_pos_old(m_last_blockfile, m_blockfile_info[m_last_blockfile].nSize);\n+    FlatFilePos block_pos_old(blockfile_num, m_blockfile_info[blockfile_num].nSize);\n     if (!BlockFileSeq().Flush(block_pos_old, fFinalize)) {\n         m_opts.notifications.flushError(\"Flushing block file to disk failed. This is likely the result of an I/O error.\");\n     }\n     // we do not always flush the undo file, as the chain tip may be lagging behind the incoming blocks,\n     // e.g. during IBD or a sync after a node going offline\n-    if (!fFinalize || finalize_undo) FlushUndoFile(m_last_blockfile, finalize_undo);\n+    if (!fFinalize || finalize_undo) FlushUndoFile(blockfile_num, finalize_undo);\n+}\n+\n+static BlockfileType BlockfileTypeForRole(ChainstateRole chainstate_role)\n+{\n+    return chainstate_role == ChainstateRole::ASSUMEDVALID ?\n+        BlockfileType::ASSUMED : BlockfileType::NORMAL;\n+}\n+\n+void BlockManager::FlushChainstateBlockFile(ChainstateRole chainstate_role, bool finalize, bool finalize_undo)\n+{\n+    LOCK(cs_LastBlockFile);\n+    auto& cursor = m_blockfile_cursors[BlockfileTypeForRole(chainstate_role)];\n+    if (cursor) {",
      "path": "src/node/blockstorage.cpp",
      "position": 294,
      "original_position": 155,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1c668b690eeb4b98899be7e0ff33373b79932f2a",
      "in_reply_to_id": 1310990937,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "bd770ff59075fa2fd0441311ef1c02439ed68fdd\r\n\r\nI agree with this suggested change.",
      "created_at": "2023-09-21T07:13:10Z",
      "updated_at": "2023-09-21T12:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1332580222",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332580222"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 759,
      "original_line": 759,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332985164",
      "pull_request_review_id": 1634958794,
      "id": 1332985164,
      "node_id": "PRRC_kwDOABII585Pc71M",
      "diff_hunk": "@@ -5744,16 +5750,22 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",\n         fs::PathToString(*path));\n \n-    this->ActivateExistingSnapshot(mempool, *base_blockhash);\n+    this->ActivateExistingSnapshot(*base_blockhash);\n     return true;\n }\n \n-Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uint256 base_blockhash)\n+Chainstate& ChainstateManager::ActivateExistingSnapshot(uint256 base_blockhash)\n {\n     assert(!m_snapshot_chainstate);\n     m_snapshot_chainstate =\n-        std::make_unique<Chainstate>(mempool, m_blockman, *this, base_blockhash);\n+        std::make_unique<Chainstate>(nullptr, m_blockman, *this, base_blockhash);\n     LogPrintf(\"[snapshot] switching active chainstate to %s\\n\", m_snapshot_chainstate->ToString());\n+\n+    // Mempool is empty at this point because we're still in IBD.\n+    Assert(m_active_chainstate->m_mempool->size() == 0);\n+    Assert(!m_snapshot_chainstate->m_mempool);\n+    m_snapshot_chainstate->m_mempool = m_active_chainstate->m_mempool;\n+    m_active_chainstate->m_mempool = nullptr;",
      "path": "src/validation.cpp",
      "position": 363,
      "original_position": 35,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "0f34fc74a7cf738167d788616fc9a24a581bc9fb",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "0f34fc74a7cf738167d788616fc9a24a581bc9fb\r\n\r\nthis is technically not necessary because we override it on the next line anyway, right?",
      "created_at": "2023-09-21T12:37:23Z",
      "updated_at": "2023-09-21T12:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1332985164",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332985164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5794,
      "original_line": 5794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332991240",
      "pull_request_review_id": 1634958794,
      "id": 1332991240,
      "node_id": "PRRC_kwDOABII585Pc9UI",
      "diff_hunk": "@@ -5256,30 +5245,48 @@ bool ChainstateManager::ActivateSnapshot(\n             }\n         }\n         return false;\n-    }\n+    };\n \n-    {\n+    if (!this->PopulateAndValidateSnapshot(*snapshot_chainstate, coins_file, metadata)) {\n         LOCK(::cs_main);\n-        assert(!m_snapshot_chainstate);\n-        m_snapshot_chainstate.swap(snapshot_chainstate);\n-        const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n-        assert(chaintip_loaded);\n-\n-        // Transfer possession of the mempool to the snapshot chianstate.\n-        // Mempool is empty at this point because we're still in IBD.\n-        Assert(m_active_chainstate->m_mempool->size() == 0);\n-        Assert(!m_snapshot_chainstate->m_mempool);\n-        m_snapshot_chainstate->m_mempool = m_active_chainstate->m_mempool;\n-        m_active_chainstate->m_mempool = nullptr;\n-        m_active_chainstate = m_snapshot_chainstate.get();\n-        m_blockman.m_snapshot_height = this->GetSnapshotBaseHeight();\n-\n-        LogPrintf(\"[snapshot] successfully activated snapshot %s\\n\", base_blockhash.ToString());\n-        LogPrintf(\"[snapshot] (%.2f MB)\\n\",\n-            m_snapshot_chainstate->CoinsTip().DynamicMemoryUsage() / (1000 * 1000));\n+        return cleanup_bad_snapshot(\"population failed\");\n+    }\n \n-        this->MaybeRebalanceCaches();\n+    LOCK(::cs_main);  // cs_main required for rest of snapshot activation.\n+\n+    // Do a final check to ensure that the snapshot chainstate is actually a more\n+    // work chain than the active chainstate; a user could have loaded a snapshot\n+    // very late in the IBD process, and we wouldn't want to load a useless chainstate.\n+    if (!CBlockIndexWorkComparator()(ActiveTip(), snapshot_chainstate->m_chain.Tip())) {\n+        return cleanup_bad_snapshot(\"work does not exceed active chainstate\");\n+    }\n+    // If not in-memory, persist the base blockhash for use during subsequent\n+    // initialization.\n+    if (!in_memory) {\n+        if (!node::WriteSnapshotBaseBlockhash(*snapshot_chainstate)) {\n+            return cleanup_bad_snapshot(\"could not write base blockhash\");\n+        }\n     }\n+\n+    assert(!m_snapshot_chainstate);\n+    m_snapshot_chainstate.swap(snapshot_chainstate);\n+    const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n+    assert(chaintip_loaded);\n+\n+    // Transfer possession of the mempool to the snapshot chianstate.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "126d7171a75c3a9ef4bbbb6687ba2c95fcf6750a",
      "in_reply_to_id": null,
      "user": {
        "login": "naumenkogs",
        "id": 7975071,
        "node_id": "MDQ6VXNlcjc5NzUwNzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7975071?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/naumenkogs",
        "html_url": "https://github.com/naumenkogs",
        "followers_url": "https://api.github.com/users/naumenkogs/followers",
        "following_url": "https://api.github.com/users/naumenkogs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/naumenkogs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/naumenkogs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/naumenkogs/subscriptions",
        "organizations_url": "https://api.github.com/users/naumenkogs/orgs",
        "repos_url": "https://api.github.com/users/naumenkogs/repos",
        "events_url": "https://api.github.com/users/naumenkogs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/naumenkogs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "126d7171a75c3a9ef4bbbb6687ba2c95fcf6750a\r\n\r\ntypo: `chainstate`",
      "created_at": "2023-09-21T12:41:59Z",
      "updated_at": "2023-09-21T12:56:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1332991240",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1332991240"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333155611",
      "pull_request_review_id": 1637992647,
      "id": 1333155611,
      "node_id": "PRRC_kwDOABII585Pdlcb",
      "diff_hunk": "@@ -401,7 +414,11 @@ bool BlockManager::LoadBlockIndex()\n         // Pruned nodes may have deleted the block.\n         if (pindex->nTx > 0) {\n             if (pindex->pprev) {\n-                if (pindex->pprev->nChainTx > 0) {\n+                if (snapshot_blockhash && pindex->nHeight == snapshot_height &&\n+                        pindex->GetBlockHash() == *snapshot_blockhash) {\n+                    // Should have been set above; don't disturb it with code below.\n+                    Assert(pindex->nChainTx > 0);",
      "path": "src/node/blockstorage.cpp",
      "position": 174,
      "original_position": 36,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "a7a5debb6a6bdc4f7217050e043cebb1c6e0d33a",
      "in_reply_to_id": 1332568561,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1332568561\r\n\r\n> [a7a5deb](https://github.com/bitcoin/bitcoin/commit/a7a5debb6a6bdc4f7217050e043cebb1c6e0d33a)\r\n> \r\n> what's the use of this Assert? it is implied by `if (pindex->nTx > 0) {` above i guess.\r\n\r\nOne use would be if someone modifies the `base->nChainTx = au_data.nChainTx` code earlier in this function and accidentally breaks it. The Assert could trigger and make it easier to debug the problem.\r\n",
      "created_at": "2023-09-21T14:29:46Z",
      "updated_at": "2023-09-21T15:00:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1333155611",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333155611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 427,
      "original_line": 427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333171036",
      "pull_request_review_id": 1637992647,
      "id": 1333171036,
      "node_id": "PRRC_kwDOABII585PdpNc",
      "diff_hunk": "@@ -1245,6 +1241,19 @@ class ChainstateManager\n     //!   fully validated chain.\n     Chainstate& GetChainstateForIndexing() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Return the [start, end] (inclusive) of block heights we can prune.\n+    //!\n+    //! start > end is possible, meaning no blocks can be pruned.\n+    //!\n+    //! If we're pruning the snapshot chainstate, be sure not to\n+    //! prune blocks being used by the background chainstate.",
      "path": "src/validation.h",
      "position": null,
      "original_position": 20,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "8cfd27186d7f54c03e7cf928b4723608a39c656b",
      "in_reply_to_id": 1332552609,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1332552609\r\n\r\n> [8cfd271](https://github.com/bitcoin/bitcoin/commit/8cfd27186d7f54c03e7cf928b4723608a39c656b)\r\n> \r\n> Is this addressed to the caller of this function? If yes, it's not 100% clear why this is the case. I think the potential issue here better be expanded.\r\n> \r\n> And then, can't this be handled internally then?\r\n\r\nAgree this is a little confusing. I think it is handled internally and the comment is just describing how the return range is determined. Probably it could be made a little clearer.",
      "created_at": "2023-09-21T14:36:29Z",
      "updated_at": "2023-09-21T15:00:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1333171036",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333171036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333204587",
      "pull_request_review_id": 1637992647,
      "id": 1333204587,
      "node_id": "PRRC_kwDOABII585PdxZr",
      "diff_hunk": "@@ -1245,6 +1241,19 @@ class ChainstateManager\n     //!   fully validated chain.\n     Chainstate& GetChainstateForIndexing() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Return the [start, end] (inclusive) of block heights we can prune.\n+    //!\n+    //! start > end is possible, meaning no blocks can be pruned.",
      "path": "src/validation.h",
      "position": 114,
      "original_position": 17,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "8cfd27186d7f54c03e7cf928b4723608a39c656b",
      "in_reply_to_id": 1332550768,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1332550768\r\n\r\n> [8cfd271](https://github.com/bitcoin/bitcoin/commit/8cfd27186d7f54c03e7cf928b4723608a39c656b)\r\n> \r\n> nit: What's the use of exposing this to the caller? I'd rather return {0, 0} in this case after handling it internally. Unless the caller needs to know.\r\n\r\nI suggested adding this comment. I thought it was important to clarify how an empty prune range would be represented, because with an inclusive [start, end] style range, it is not really obvious. By definition, returning {0,0} would mean \"prune the genesis block\", not \"prune no blocks\". The distinction is actually meaningful because it turns out this function does need to return {0, 0} and prune the genesis block. Otherwise pruning is less effective and tests fail: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1309300988\r\n\r\nOne way to represent empty ranges more straightforwardly would be to switch to a half-open [start, end) range style, but I think either style is fine as long as it's documented clearly.",
      "created_at": "2023-09-21T14:56:39Z",
      "updated_at": "2023-09-21T15:00:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1333204587",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1333204587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1241,
      "original_line": 1241,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341937735",
      "pull_request_review_id": 1651670387,
      "id": 1341937735,
      "node_id": "PRRC_kwDOABII585P_FhH",
      "diff_hunk": "@@ -5744,16 +5750,22 @@ bool ChainstateManager::DetectSnapshotChainstate(CTxMemPool* mempool)\n     LogPrintf(\"[snapshot] detected active snapshot chainstate (%s) - loading\\n\",\n         fs::PathToString(*path));\n \n-    this->ActivateExistingSnapshot(mempool, *base_blockhash);\n+    this->ActivateExistingSnapshot(*base_blockhash);\n     return true;\n }\n \n-Chainstate& ChainstateManager::ActivateExistingSnapshot(CTxMemPool* mempool, uint256 base_blockhash)\n+Chainstate& ChainstateManager::ActivateExistingSnapshot(uint256 base_blockhash)\n {\n     assert(!m_snapshot_chainstate);\n     m_snapshot_chainstate =\n-        std::make_unique<Chainstate>(mempool, m_blockman, *this, base_blockhash);\n+        std::make_unique<Chainstate>(nullptr, m_blockman, *this, base_blockhash);\n     LogPrintf(\"[snapshot] switching active chainstate to %s\\n\", m_snapshot_chainstate->ToString());\n+\n+    // Mempool is empty at this point because we're still in IBD.\n+    Assert(m_active_chainstate->m_mempool->size() == 0);\n+    Assert(!m_snapshot_chainstate->m_mempool);\n+    m_snapshot_chainstate->m_mempool = m_active_chainstate->m_mempool;\n+    m_active_chainstate->m_mempool = nullptr;",
      "path": "src/validation.cpp",
      "position": 363,
      "original_position": 35,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "0f34fc74a7cf738167d788616fc9a24a581bc9fb",
      "in_reply_to_id": 1332985164,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No, because that chainstate will still be used as the `m_ibd_chainstate`.",
      "created_at": "2023-09-30T09:41:30Z",
      "updated_at": "2023-09-30T09:41:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1341937735",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341937735"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5794,
      "original_line": 5794,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341938065",
      "pull_request_review_id": 1651670722,
      "id": 1341938065,
      "node_id": "PRRC_kwDOABII585P_FmR",
      "diff_hunk": "@@ -5786,6 +5791,23 @@ util::Result<void> Chainstate::InvalidateCoinsDBOnDisk()\n     return {};\n }\n \n+bool ChainstateManager::DeleteSnapshotChainstate()\n+{\n+    AssertLockHeld(::cs_main);\n+    Assert(m_snapshot_chainstate);\n+    Assert(m_ibd_chainstate);\n+\n+    fs::path snapshot_datadir = GetSnapshotCoinsDBPath(*m_snapshot_chainstate);\n+    if (!DeleteCoinsDBFromDisk(snapshot_datadir, /*is_snapshot=*/ true)) {\n+        LogPrintf(\"Deletion of %s failed. Please remove it manually to continue reindexing.\\n\",\n+                  fs::PathToString(snapshot_datadir));\n+        return false;\n+    }\n+    m_active_chainstate = m_ibd_chainstate.get();\n+    m_snapshot_chainstate.reset();",
      "path": "src/validation.cpp",
      "position": 409,
      "original_position": 51,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "00129799d97c746e77d929c323b689aae72b46b2",
      "in_reply_to_id": 1331240905,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point. Removed this outdated comment (not sure it was ever actually correct).",
      "created_at": "2023-09-30T09:45:17Z",
      "updated_at": "2023-09-30T10:49:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1341938065",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341938065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5868,
      "original_line": 5868,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341943097",
      "pull_request_review_id": 1651670722,
      "id": 1341943097,
      "node_id": "PRRC_kwDOABII585P_G05",
      "diff_hunk": "@@ -1245,6 +1241,19 @@ class ChainstateManager\n     //!   fully validated chain.\n     Chainstate& GetChainstateForIndexing() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n+    //! Return the [start, end] (inclusive) of block heights we can prune.\n+    //!\n+    //! start > end is possible, meaning no blocks can be pruned.\n+    //!\n+    //! If we're pruning the snapshot chainstate, be sure not to\n+    //! prune blocks being used by the background chainstate.",
      "path": "src/validation.h",
      "position": null,
      "original_position": 20,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "8cfd27186d7f54c03e7cf928b4723608a39c656b",
      "in_reply_to_id": 1332552609,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed this comment as it's internal logic not relevant to the caller.",
      "created_at": "2023-09-30T10:38:25Z",
      "updated_at": "2023-09-30T10:49:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1341943097",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341943097"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1249,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341943153",
      "pull_request_review_id": 1651670722,
      "id": 1341943153,
      "node_id": "PRRC_kwDOABII585P_G1x",
      "diff_hunk": "@@ -5256,30 +5245,48 @@ bool ChainstateManager::ActivateSnapshot(\n             }\n         }\n         return false;\n-    }\n+    };\n \n-    {\n+    if (!this->PopulateAndValidateSnapshot(*snapshot_chainstate, coins_file, metadata)) {\n         LOCK(::cs_main);\n-        assert(!m_snapshot_chainstate);\n-        m_snapshot_chainstate.swap(snapshot_chainstate);\n-        const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n-        assert(chaintip_loaded);\n-\n-        // Transfer possession of the mempool to the snapshot chianstate.\n-        // Mempool is empty at this point because we're still in IBD.\n-        Assert(m_active_chainstate->m_mempool->size() == 0);\n-        Assert(!m_snapshot_chainstate->m_mempool);\n-        m_snapshot_chainstate->m_mempool = m_active_chainstate->m_mempool;\n-        m_active_chainstate->m_mempool = nullptr;\n-        m_active_chainstate = m_snapshot_chainstate.get();\n-        m_blockman.m_snapshot_height = this->GetSnapshotBaseHeight();\n-\n-        LogPrintf(\"[snapshot] successfully activated snapshot %s\\n\", base_blockhash.ToString());\n-        LogPrintf(\"[snapshot] (%.2f MB)\\n\",\n-            m_snapshot_chainstate->CoinsTip().DynamicMemoryUsage() / (1000 * 1000));\n+        return cleanup_bad_snapshot(\"population failed\");\n+    }\n \n-        this->MaybeRebalanceCaches();\n+    LOCK(::cs_main);  // cs_main required for rest of snapshot activation.\n+\n+    // Do a final check to ensure that the snapshot chainstate is actually a more\n+    // work chain than the active chainstate; a user could have loaded a snapshot\n+    // very late in the IBD process, and we wouldn't want to load a useless chainstate.\n+    if (!CBlockIndexWorkComparator()(ActiveTip(), snapshot_chainstate->m_chain.Tip())) {\n+        return cleanup_bad_snapshot(\"work does not exceed active chainstate\");\n+    }\n+    // If not in-memory, persist the base blockhash for use during subsequent\n+    // initialization.\n+    if (!in_memory) {\n+        if (!node::WriteSnapshotBaseBlockhash(*snapshot_chainstate)) {\n+            return cleanup_bad_snapshot(\"could not write base blockhash\");\n+        }\n     }\n+\n+    assert(!m_snapshot_chainstate);\n+    m_snapshot_chainstate.swap(snapshot_chainstate);\n+    const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n+    assert(chaintip_loaded);\n+\n+    // Transfer possession of the mempool to the snapshot chianstate.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "126d7171a75c3a9ef4bbbb6687ba2c95fcf6750a",
      "in_reply_to_id": 1332991240,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2023-09-30T10:39:12Z",
      "updated_at": "2023-09-30T10:49:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1341943153",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341943153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5276,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341943181",
      "pull_request_review_id": 1651670722,
      "id": 1341943181,
      "node_id": "PRRC_kwDOABII585P_G2N",
      "diff_hunk": "@@ -892,6 +892,38 @@ class PeerManagerImpl final : public PeerManager\n      */\n     void FindNextBlocksToDownload(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, NodeId& nodeStaller) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    /** Request blocks for the background chainstate, if one is in use. */\n+    void TryDownloadingHistoricalBlocks(const Peer& peer, unsigned int count, std::vector<const CBlockIndex*>& vBlocks, const CBlockIndex* from_tip, const CBlockIndex* target_block) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n+    /**\n+    * \\brief Find next blocks to download from a peer after a starting block.\n+    *\n+    * \\param vBlocks      Vector of blocks to download which will be appended to.\n+    * \\param peer         ID of peer which blocks will be downloaded from.",
      "path": "src/net_processing.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "a9ea542e8aed092f45dab2d9a66da56aba742f51",
      "in_reply_to_id": 1331194085,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2023-09-30T10:39:37Z",
      "updated_at": "2023-09-30T10:49:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1341943181",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341943181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 902,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341985254",
      "pull_request_review_id": 1651722959,
      "id": 1341985254,
      "node_id": "PRRC_kwDOABII585P_RHm",
      "diff_hunk": "@@ -69,6 +69,7 @@\n #include <optional>\n #include <string>\n #include <utility>\n+#include <tuple>",
      "path": "src/validation.cpp",
      "position": 12,
      "original_position": 4,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1019c399825b0d512c1fd751c376d46fed4992b9",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Should be above `utility`",
      "created_at": "2023-09-30T16:33:37Z",
      "updated_at": "2023-10-01T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1341985254",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341985254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341994207",
      "pull_request_review_id": 1651722959,
      "id": 1341994207,
      "node_id": "PRRC_kwDOABII585P_TTf",
      "diff_hunk": "@@ -499,6 +508,15 @@ bool BlockManager::LoadBlockIndexDB(const std::optional<uint256>& snapshot_block\n         }\n     }\n \n+    {\n+        // Initialize the blockfile cursors.\n+        LOCK(cs_LastBlockFile);",
      "path": "src/node/blockstorage.cpp",
      "position": 224,
      "original_position": 104,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "7fcd21544a333ffdf1910b65c573579860be6a36",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hm, since there is still only one BlockManager I guess the two chainstate cursors block each other by holding this lock. That seems unnecessary and could be improved in a follow-up, giving each cursor it's own lock, I think.",
      "created_at": "2023-09-30T18:11:51Z",
      "updated_at": "2023-10-01T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1341994207",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341994207"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 513,
      "original_line": 513,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341995611",
      "pull_request_review_id": 1651722959,
      "id": 1341995611,
      "node_id": "PRRC_kwDOABII585P_Tpb",
      "diff_hunk": "@@ -2799,6 +2799,79 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"normal\", /*optional=*/true, \"fully validated chainstate containing blocks this node has validated starting from the genesis block\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"only present if an assumeutxo snapshot is loaded. Partially validated chainstate containing blocks this node has validated starting from the snapshot. After the snapshot is validated (when the 'normal' chainstate advances far enough to validate it), this chainstate will replace and become the 'normal' chainstate.\", RPCHelpForChainstate},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    auto make_chain_data = [&](const Chainstate& cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        UniValue data(UniValue::VOBJ);\n+        if (!cs.m_chain.Tip()) {\n+            return data;\n+        }\n+        const CChain& chain = cs.m_chain;\n+        const CBlockIndex* tip = chain.Tip();\n+\n+        data.pushKV(\"blocks\",                (int)chain.Height());\n+        data.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n+        data.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+        data.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n+        data.pushKV(\"coins_db_cache_bytes\",  cs.m_coinsdb_cache_size_bytes);\n+        data.pushKV(\"coins_tip_cache_bytes\", cs.m_coinstip_cache_size_bytes);\n+        if (cs.m_from_snapshot_blockhash) {\n+            data.pushKV(\"snapshot_blockhash\", cs.m_from_snapshot_blockhash->ToString());\n+        }\n+        return data;\n+    };\n+\n+    if (chainman.GetAll().size() > 1) {\n+        for (Chainstate* chainstate : chainman.GetAll()) {\n+            obj.pushKV(\n+                chainstate->m_from_snapshot_blockhash ? \"snapshot\" : \"normal\",",
      "path": "src/rpc/blockchain.cpp",
      "position": 170,
      "original_position": 63,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "0f64bac6030334d798ae205cd7af4bf248feddd9",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's kind of confusing that here in the results the ibd chainstate is also called normal. It might be good to add a comment on that.",
      "created_at": "2023-09-30T18:28:37Z",
      "updated_at": "2023-10-01T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1341995611",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341995611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2861,
      "original_line": 2861,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341996092",
      "pull_request_review_id": 1651722959,
      "id": 1341996092,
      "node_id": "PRRC_kwDOABII585P_Tw8",
      "diff_hunk": "@@ -2799,6 +2799,79 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"normal\", /*optional=*/true, \"fully validated chainstate containing blocks this node has validated starting from the genesis block\", RPCHelpForChainstate},",
      "path": "src/rpc/blockchain.cpp",
      "position": 130,
      "original_position": 23,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "0f64bac6030334d798ae205cd7af4bf248feddd9",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The normal chainstate (aka ibd maybe) is always present, right? So it would not be  `/*optional=*/true`.",
      "created_at": "2023-09-30T18:34:01Z",
      "updated_at": "2023-10-01T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1341996092",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1341996092"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2821,
      "original_line": 2821,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342009057",
      "pull_request_review_id": 1651722959,
      "id": 1342009057,
      "node_id": "PRRC_kwDOABII585P_W7h",
      "diff_hunk": "@@ -4148,6 +4148,12 @@ bool ChainstateManager::ProcessNewBlock(const std::shared_ptr<const CBlock>& blo\n         return error(\"%s: ActivateBestChain failed (%s)\", __func__, state.ToString());\n     }\n \n+    Chainstate* bg_chain{WITH_LOCK(cs_main, return BackgroundSyncInProgress() ? m_ibd_chainstate.get() : nullptr)};\n+    BlockValidationState bg_state;\n+    if (bg_chain && !bg_chain->ActivateBestChain(bg_state, block)) {\n+        return error(\"%s: [background] ActivateBestChain failed (%s)\", __func__, bg_state.ToString());",
      "path": "src/validation.cpp",
      "position": 145,
      "original_position": 7,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b73d3bbd23220857bf17cbb6401275bf58013b72",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: could adapt the error above to also include the name of the chainstate.",
      "created_at": "2023-09-30T21:07:43Z",
      "updated_at": "2023-10-01T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342009057",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342009057"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4184,
      "original_line": 4154,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342010458",
      "pull_request_review_id": 1651722959,
      "id": 1342010458,
      "node_id": "PRRC_kwDOABII585P_XRa",
      "diff_hunk": "@@ -185,7 +185,14 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     chainman.InitializeChainstate(options.mempool);\n \n     // Load a chain created from a UTXO snapshot, if any exist.\n-    chainman.DetectSnapshotChainstate(options.mempool);\n+    bool has_snapshot = chainman.DetectSnapshotChainstate(options.mempool);",
      "path": "src/node/chainstate.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "c711ca186f8d8a28810be0beedcb615ddcf93163",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It was added previously but as far as I can see the mempool param is unused in `DetectSnapshotChainstate()`.",
      "created_at": "2023-09-30T21:26:30Z",
      "updated_at": "2023-10-01T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342010458",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342010458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 188,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342010737",
      "pull_request_review_id": 1651722959,
      "id": 1342010737,
      "node_id": "PRRC_kwDOABII585P_XVx",
      "diff_hunk": "@@ -185,7 +185,14 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     chainman.InitializeChainstate(options.mempool);\n \n     // Load a chain created from a UTXO snapshot, if any exist.\n-    chainman.DetectSnapshotChainstate(options.mempool);\n+    bool has_snapshot = chainman.DetectSnapshotChainstate(options.mempool);\n+\n+    if (has_snapshot && (options.reindex || options.reindex_chainstate)) {\n+        LogPrintf(\"[snapshot] deleting snapshot chainstate due to reindexing\\n\");",
      "path": "src/node/chainstate.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "c711ca186f8d8a28810be0beedcb615ddcf93163",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Might be worth mentioning this in the reindexing documentation as well.",
      "created_at": "2023-09-30T21:29:42Z",
      "updated_at": "2023-10-01T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342010737",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342010737"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 191,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342011998",
      "pull_request_review_id": 1651722959,
      "id": 1342011998,
      "node_id": "PRRC_kwDOABII585P_Xpe",
      "diff_hunk": "@@ -5813,6 +5813,16 @@ bool ChainstateManager::DeleteSnapshotChainstate()\n     return true;\n }\n \n+ChainstateRole Chainstate::GetRole() const\n+{\n+    if (m_chainman.GetAll().size() <= 1) {\n+        return ChainstateRole::NORMAL;\n+    }\n+    return (this != &m_chainman.ActiveChainstate()) ?",
      "path": "src/validation.cpp",
      "position": 418,
      "original_position": 9,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "c6af23c5179cc383f8e6c275373af8d11e6a989f",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would checking `m_from_snapshot_blockhash` not be simpler here? We seem to use it in other places like this as well.",
      "created_at": "2023-09-30T21:46:18Z",
      "updated_at": "2023-10-01T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342011998",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342011998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5877,
      "original_line": 5821,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342013328",
      "pull_request_review_id": 1651722959,
      "id": 1342013328,
      "node_id": "PRRC_kwDOABII585P_X-Q",
      "diff_hunk": "@@ -1917,9 +1917,25 @@ void PeerManagerImpl::BlockConnected(\n     const std::shared_ptr<const CBlock>& pblock,\n     const CBlockIndex* pindex)\n {\n-    m_orphanage.EraseForBlock(*pblock);\n+    // Update this for all chainstate roles so that we don't mistakenly see peers\n+    // helping us do background IBD as having a stale tip.\n     m_last_tip_update = GetTime<std::chrono::seconds>();\n \n+    // In case the dynamic timeout was doubled once or more, reduce it slowly back to its default value\n+    auto stalling_timeout = m_block_stalling_timeout.load();\n+    Assume(stalling_timeout >= BLOCK_STALLING_TIMEOUT_DEFAULT);\n+    if (stalling_timeout != BLOCK_STALLING_TIMEOUT_DEFAULT) {\n+        const auto new_timeout = std::max(std::chrono::duration_cast<std::chrono::seconds>(stalling_timeout * 0.85), BLOCK_STALLING_TIMEOUT_DEFAULT);\n+        if (m_block_stalling_timeout.compare_exchange_strong(stalling_timeout, new_timeout)) {\n+            LogPrint(BCLog::NET, \"Decreased stalling timeout to %d seconds\\n\", count_seconds(new_timeout));\n+        }\n+    }\n+\n+    if (role == ChainstateRole::BACKGROUND) {",
      "path": "src/net_processing.cpp",
      "position": 158,
      "original_position": 19,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1fffdd76a1bca908f55d73b64983655b14cf7432",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Adding a small note here would be great, i.e. `The following task can be skipped since we don't maintain a mempool for the background chainstate.`",
      "created_at": "2023-09-30T22:02:40Z",
      "updated_at": "2023-10-01T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342013328",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342013328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1934,
      "original_line": 1934,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342014745",
      "pull_request_review_id": 1651722959,
      "id": 1342014745,
      "node_id": "PRRC_kwDOABII585P_YUZ",
      "diff_hunk": "@@ -0,0 +1,7 @@\n+Pruning\n+-------\n+\n+When using assumeutxo with `-prune`, the prune budget may be exceeded if it is set\n+lower than 1100MB (i.e. `MIN_DISK_SPACE_FOR_BLOCK_FILES * 2`). Prune budget is normally",
      "path": "doc/release-notes-27596.md",
      "position": 5,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1019c399825b0d512c1fd751c376d46fed4992b9",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As a follow-up it might be worth thinking about either erroring or printing a warning if <1100MB is configured. After all, if the user really doesn't have that much space they are risking a crash and a full disk might also effect other software.",
      "created_at": "2023-09-30T22:17:35Z",
      "updated_at": "2023-10-01T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342014745",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342014745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342015923",
      "pull_request_review_id": 1651722959,
      "id": 1342015923,
      "node_id": "PRRC_kwDOABII585P_Ymz",
      "diff_hunk": "@@ -5939,3 +5943,30 @@ Chainstate& ChainstateManager::GetChainstateForIndexing()\n     // indexed.\n     return (this->GetAll().size() > 1) ? *m_ibd_chainstate : *m_active_chainstate;\n }\n+\n+std::pair<int, int> ChainstateManager::GetPruneRange(const Chainstate& chainstate, int last_height_can_prune)\n+{\n+    if (chainstate.m_chain.Height() <= 0) {\n+        return {0, 0};\n+    }\n+    int prune_start{0};\n+\n+    if (this->GetAll().size() > 1 && m_snapshot_chainstate.get() == &chainstate) {\n+        // Leave the blocks in the background IBD chain alone if we're pruning\n+        // the snapshot chain.\n+        prune_start = *Assert(GetSnapshotBaseHeight()) + 1;",
      "path": "src/validation.cpp",
      "position": 449,
      "original_position": 40,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1019c399825b0d512c1fd751c376d46fed4992b9",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We need the `+ 1` only because we still need its data for when the background chainstate catches up to the snapshot base and we make sure all is well, right?",
      "created_at": "2023-09-30T22:35:35Z",
      "updated_at": "2023-10-01T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342015923",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342015923"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5998,
      "original_line": 5957,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342017833",
      "pull_request_review_id": 1651722959,
      "id": 1342017833,
      "node_id": "PRRC_kwDOABII585P_ZEp",
      "diff_hunk": "@@ -5268,6 +5268,12 @@ bool ChainstateManager::ActivateSnapshot(\n         const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n         assert(chaintip_loaded);\n \n+        // Transfer possession of the mempool to the snapshot chianstate.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9511fb3616b7bbe1d0d2f54a45ea0a650ba0367b",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: `chainstate`",
      "created_at": "2023-09-30T23:09:06Z",
      "updated_at": "2023-10-01T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342017833",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342017833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342018556",
      "pull_request_review_id": 1651722959,
      "id": 1342018556,
      "node_id": "PRRC_kwDOABII585P_ZP8",
      "diff_hunk": "@@ -2799,6 +2799,79 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"normal\", /*optional=*/true, \"fully validated chainstate containing blocks this node has validated starting from the genesis block\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"only present if an assumeutxo snapshot is loaded. Partially validated chainstate containing blocks this node has validated starting from the snapshot. After the snapshot is validated (when the 'normal' chainstate advances far enough to validate it), this chainstate will replace and become the 'normal' chainstate.\", RPCHelpForChainstate},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    auto make_chain_data = [&](const Chainstate& cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        UniValue data(UniValue::VOBJ);\n+        if (!cs.m_chain.Tip()) {\n+            return data;\n+        }\n+        const CChain& chain = cs.m_chain;\n+        const CBlockIndex* tip = chain.Tip();\n+\n+        data.pushKV(\"blocks\",                (int)chain.Height());\n+        data.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n+        data.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+        data.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n+        data.pushKV(\"coins_db_cache_bytes\",  cs.m_coinsdb_cache_size_bytes);\n+        data.pushKV(\"coins_tip_cache_bytes\", cs.m_coinstip_cache_size_bytes);\n+        if (cs.m_from_snapshot_blockhash) {\n+            data.pushKV(\"snapshot_blockhash\", cs.m_from_snapshot_blockhash->ToString());\n+        }\n+        return data;\n+    };\n+\n+    if (chainman.GetAll().size() > 1) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 167,
      "original_position": 60,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "0f64bac6030334d798ae205cd7af4bf248feddd9",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It looks to me like the inside of this `if` block also works for the case `chainman.GetAll().size() == 1`, so I think the if-else could be removed and only the for loop kept.",
      "created_at": "2023-09-30T23:19:40Z",
      "updated_at": "2023-10-01T00:17:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342018556",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342018556"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2858,
      "original_line": 2858,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342035181",
      "pull_request_review_id": 1651784367,
      "id": 1342035181,
      "node_id": "PRRC_kwDOABII585P_dTt",
      "diff_hunk": "@@ -2799,6 +2799,79 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"normal\", /*optional=*/true, \"fully validated chainstate containing blocks this node has validated starting from the genesis block\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"only present if an assumeutxo snapshot is loaded. Partially validated chainstate containing blocks this node has validated starting from the snapshot. After the snapshot is validated (when the 'normal' chainstate advances far enough to validate it), this chainstate will replace and become the 'normal' chainstate.\", RPCHelpForChainstate},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    auto make_chain_data = [&](const Chainstate& cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        UniValue data(UniValue::VOBJ);\n+        if (!cs.m_chain.Tip()) {\n+            return data;\n+        }\n+        const CChain& chain = cs.m_chain;\n+        const CBlockIndex* tip = chain.Tip();\n+\n+        data.pushKV(\"blocks\",                (int)chain.Height());\n+        data.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n+        data.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+        data.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n+        data.pushKV(\"coins_db_cache_bytes\",  cs.m_coinsdb_cache_size_bytes);\n+        data.pushKV(\"coins_tip_cache_bytes\", cs.m_coinstip_cache_size_bytes);\n+        if (cs.m_from_snapshot_blockhash) {\n+            data.pushKV(\"snapshot_blockhash\", cs.m_from_snapshot_blockhash->ToString());\n+        }\n+        return data;\n+    };\n+\n+    if (chainman.GetAll().size() > 1) {\n+        for (Chainstate* chainstate : chainman.GetAll()) {\n+            obj.pushKV(\n+                chainstate->m_from_snapshot_blockhash ? \"snapshot\" : \"normal\",",
      "path": "src/rpc/blockchain.cpp",
      "position": 170,
      "original_position": 63,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "0f64bac6030334d798ae205cd7af4bf248feddd9",
      "in_reply_to_id": 1341995611,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1341995611\r\n\r\n> It's kind of confusing that here in the results the ibd chainstate is also called normal. It might be good to add a comment on that.\r\n\r\n@fjahr could you maybe suggest specific changes that you would recommend here? I'm confused by this comment and the one about removing the if block https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342018556. Removing the if-block would not work (as far as I know) because it would cause the \"snapshot\" chainstate to stick around after it is validated, and the \"normal\" chainstate to disappear, instead of the \"snapshot\" chainstate replacing the \"normal\" chainstate when it is fully validated as intended.\r\n\r\nThe idea is for the \"normal\" chainstate to refer to a typical fully validated chainstate, and for the \"snapshot\" to refer to a temporarily assumed-valid chainstate loaded from a snapshot.\r\n\r\nI think the term \"IBD chainstate\" is basically meaningless because both chainstates are downloaded during IBD. Even though the term is used internally in code, I think it would be good to move away from it and not expose it in the RPC interface.\r\n\r\n\r\n\r\n",
      "created_at": "2023-10-01T01:17:41Z",
      "updated_at": "2023-10-01T01:17:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342035181",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342035181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2861,
      "original_line": 2861,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342789587",
      "pull_request_review_id": 1652908444,
      "id": 1342789587,
      "node_id": "PRRC_kwDOABII585QCVfT",
      "diff_hunk": "@@ -5268,6 +5268,12 @@ bool ChainstateManager::ActivateSnapshot(\n         const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n         assert(chaintip_loaded);\n \n+        // Transfer possession of the mempool to the snapshot chianstate.",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9511fb3616b7bbe1d0d2f54a45ea0a650ba0367b",
      "in_reply_to_id": 1342017833,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed this in a previous revision. :+1: ",
      "created_at": "2023-10-02T14:45:45Z",
      "updated_at": "2023-10-02T14:45:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342789587",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342789587"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5271,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342795165",
      "pull_request_review_id": 1652917347,
      "id": 1342795165,
      "node_id": "PRRC_kwDOABII585QCW2d",
      "diff_hunk": "@@ -848,9 +848,6 @@ class ChainstateManager\n     //! Points to either the ibd or snapshot chainstate; indicates our\n     //! most-work chain.\n     //!\n-    //! Once this pointer is set to a corresponding chainstate, it will not",
      "path": "src/validation.h",
      "position": 25,
      "original_position": 4,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "c711ca186f8d8a28810be0beedcb615ddcf93163",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"assumeutxo: remove snapshot during -reindex{-chainstate}\" (c711ca186f8d8a28810be0beedcb615ddcf93163)\r\n\r\nIf you're deleting this sentence, you also should delete the following \"This is especially important when\" following it.\r\n\r\nIMO it would also be good to clarify the previous 2 instances of \"This is especially important\" as well because they are pretty confusing. It sounds like they are saying \"It is especially important to _know_ that the pointer is not reset because cs_main is not held before calling ActivateBestChain,\" which doesn't make any sense. But the real meaning is \"It is important for the pointer to not _be_ deleted until shutdown, because cs_main is not always held when the pointer is accessed, for example when calling ActivateBestChain, so there's no way you could prevent code from using the pointer while deleting it.\"",
      "created_at": "2023-10-02T14:50:18Z",
      "updated_at": "2023-10-02T15:11:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342795165",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342795165"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 851,
      "original_line": 851,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342809382",
      "pull_request_review_id": 1652917347,
      "id": 1342809382,
      "node_id": "PRRC_kwDOABII585QCaUm",
      "diff_hunk": "@@ -708,23 +727,43 @@ bool BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n         // have populated `m_blockfile_info` via LoadBlockIndexDB().\n         return true;\n     }\n-    assert(static_cast<int>(m_blockfile_info.size()) > m_last_blockfile);\n+    assert(static_cast<int>(m_blockfile_info.size()) > blockfile_num);\n \n-    FlatFilePos block_pos_old(m_last_blockfile, m_blockfile_info[m_last_blockfile].nSize);\n+    FlatFilePos block_pos_old(blockfile_num, m_blockfile_info[blockfile_num].nSize);\n     if (!BlockFileSeq().Flush(block_pos_old, fFinalize)) {\n         m_opts.notifications.flushError(\"Flushing block file to disk failed. This is likely the result of an I/O error.\");\n         success = false;\n     }\n     // we do not always flush the undo file, as the chain tip may be lagging behind the incoming blocks,\n     // e.g. during IBD or a sync after a node going offline\n     if (!fFinalize || finalize_undo) {\n-        if (!FlushUndoFile(m_last_blockfile, finalize_undo)) {\n+        if (!FlushUndoFile(blockfile_num, finalize_undo)) {\n             success = false;\n         }\n     }\n     return success;\n }\n \n+BlockfileType BlockManager::BlockfileTypeForHeight(int height)\n+{\n+    if (!m_snapshot_height) {\n+        return BlockfileType::NORMAL;\n+    }\n+    return (height >= *m_snapshot_height) ? BlockfileType::ASSUMED : BlockfileType::NORMAL;\n+}\n+\n+bool BlockManager::FlushChainstateBlockFile(int tip_height)\n+{\n+    LOCK(cs_LastBlockFile);\n+    auto& cursor = m_blockfile_cursors[BlockfileTypeForHeight(tip_height)];\n+    if (cursor) {\n+        // The cursor may not exist after a snapshot has been loaded but before any\n+        // blocks have been downloaded.\n+        return FlushBlockFile(cursor->file_num, /*fFinalize=*/false, /*finalize_undo=*/false);\n+    }\n+    return false;",
      "path": "src/node/blockstorage.cpp",
      "position": 299,
      "original_position": 179,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "7fcd21544a333ffdf1910b65c573579860be6a36",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"blockstorage: segment normal/assumedvalid blockfiles\" (7fcd21544a333ffdf1910b65c573579860be6a36)\r\n\r\nI think you need to return `true` here to avoid spurious \"Failed to flush block file\" warnings. Also could reconsider suggested change https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1323325683 to make try to make this clearer.",
      "created_at": "2023-10-02T15:02:03Z",
      "updated_at": "2023-10-02T15:11:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1342809382",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1342809382"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 764,
      "original_line": 764,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343112029",
      "pull_request_review_id": 1653426165,
      "id": 1343112029,
      "node_id": "PRRC_kwDOABII585QDkNd",
      "diff_hunk": "@@ -5342,6 +5349,14 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n \n     const AssumeutxoData& au_data = *maybe_au_data;\n \n+    // This work comparison is a duplicate check with the one performed later in\n+    // ActivateSnapshot(), but is done so that we avoid doing the long work of staging\n+    // a snapshot that isn't actually usable.\n+    if (WITH_LOCK(::cs_main, return !CBlockIndexWorkComparator()(ActiveTip(), snapshot_start_block))) {\n+        LogPrintf(\"[snapshot] activation failed - height does not exceed active chainstate\\n\");",
      "path": "src/validation.cpp",
      "position": 325,
      "original_position": 99,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "62ac519e718eb7a31dca1102a96ba219fbc7f95d",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 62ac519e718eb7a31dca1102a96ba219fbc7f95d \"validation: do not activate snapshot if behind active chain\"\r\n\r\nnit: work, not height.",
      "created_at": "2023-10-02T20:15:22Z",
      "updated_at": "2023-10-02T20:54:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343112029",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343112029"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5364,
      "original_line": 5356,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343112529",
      "pull_request_review_id": 1653426165,
      "id": 1343112529,
      "node_id": "PRRC_kwDOABII585QDkVR",
      "diff_hunk": "@@ -0,0 +1,246 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test for assumeutxo, a means of quickly bootstrapping a node using\n+a serialized version of the UTXO set at a certain height, which corresponds\n+to a hash that has been compiled into bitcoind.\n+\n+The assumeutxo value generated and used here is committed to in\n+`CRegTestParams::m_assumeutxo_data` in `src/chainparams.cpp`.\n+\n+## Possible test improvements\n+\n+- TODO: test submitting a transaction and verifying it appears in mempool\n+- TODO: test what happens with -reindex and -reindex-chainstate before the\n+      snapshot is validated, and make sure it's deleted successfully.\n+\n+Interesting test cases could be loading an assumeutxo snapshot file with:\n+\n+- TODO: An invalid hash\n+- TODO: Valid hash but invalid snapshot file (bad coin height or truncated file or\n+      bad other serialization)\n+- TODO: Valid snapshot file, but referencing an unknown block\n+- TODO: Valid snapshot file, but referencing a snapshot block that turns out to be\n+      invalid, or has an invalid parent\n+- TODO: Valid snapshot file and snapshot block, but the block is not on the\n+      most-work chain\n+\n+Interesting starting states could be loading a snapshot when the current chain tip is:\n+\n+- TODO: An ancestor of snapshot block\n+- TODO: Not an ancestor of the snapshot block but has less work\n+- TODO: The snapshot block\n+- TODO: A descendant of the snapshot block\n+- TODO: Not an ancestor or a descendant of the snapshot block and has more work\n+\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, wait_until_helper\n+\n+START_HEIGHT = 199\n+SNAPSHOT_BASE_HEIGHT = 299\n+FINAL_HEIGHT = 399\n+COMPLETE_IDX = {'synced': True, 'best_block_height': FINAL_HEIGHT}\n+\n+\n+class AssumeutxoTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        \"\"\"Use the pregenerated, deterministic chain up to height 199.\"\"\"\n+        self.num_nodes = 3\n+        self.rpc_timeout = 120\n+        self.extra_args = [\n+            [],\n+            [\"-fastprune\", \"-prune=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+            [\"-txindex=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+        ]\n+\n+    def setup_network(self):\n+        \"\"\"Start with the nodes disconnected so that one can generate a snapshot\n+        including blocks the other hasn't yet seen.\"\"\"\n+        self.add_nodes(3)\n+        self.start_nodes(extra_args=self.extra_args)\n+\n+    def run_test(self):\n+        \"\"\"\n+        Bring up two (disconnected) nodes, mine some new blocks on the first,\n+        and generate a UTXO snapshot.\n+\n+        Load the snapshot into the second, ensure it syncs to tip and completes\n+        background validation when connected to the first.\n+        \"\"\"\n+        n0 = self.nodes[0]\n+        n1 = self.nodes[1]\n+        n2 = self.nodes[2]\n+\n+        # Mock time for a deterministic chain\n+        for n in self.nodes:\n+            n.setmocktime(n.getblockheader(n.getbestblockhash())['time'])\n+\n+        self.sync_blocks()\n+\n+        def no_sync():\n+            pass",
      "path": "test/functional/feature_assumeutxo.py",
      "position": 84,
      "original_position": 84,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "42cae39356fd20d521aaf99aff1ed85856f3c9f3",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 42cae39356fd20d521aaf99aff1ed85856f3c9f3 \"test: add feature_assumeutxo functional test\"\r\n\r\nnit: `self.no_op` already exists for this.",
      "created_at": "2023-10-02T20:15:53Z",
      "updated_at": "2023-10-02T20:54:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343112529",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343112529"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": 83,
      "original_start_line": 83,
      "start_side": "RIGHT",
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343154441",
      "pull_request_review_id": 1653426165,
      "id": 1343154441,
      "node_id": "PRRC_kwDOABII585QDukJ",
      "diff_hunk": "@@ -267,7 +267,12 @@ class CTestNetParams : public CChainParams {\n         };\n \n         m_assumeutxo_data = {\n-            // TODO to be specified in a future patch.\n+            {\n+                .height = 2'500'000,\n+                .hash_serialized = AssumeutxoHash{uint256S(\"0x2a8fdefef3bf75fa00540ccaaaba4b5281bea94229327bdb0f7416ef1e7a645c\")},\n+                .nChainTx = 29324631,",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "13c2066a17ba3e1dd0b81905625d1539d6e7a4f3",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 13c2066a17ba3e1dd0b81905625d1539d6e7a4f3 \"chainparams: add testnet assumeutxo param at height 2_500_000\"\r\n\r\nThis is `txouts`/`coins_written` (depending on which RPC you used), not the actual `nChainTx`. It should be 66484552.",
      "created_at": "2023-10-02T20:53:41Z",
      "updated_at": "2023-10-02T20:54:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343154441",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343154441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 273,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343155336",
      "pull_request_review_id": 1653426165,
      "id": 1343155336,
      "node_id": "PRRC_kwDOABII585QDuyI",
      "diff_hunk": "@@ -375,6 +375,15 @@ class SigNetParams : public CChainParams {\n \n         vFixedSeeds.clear();\n \n+        m_assumeutxo_data = {\n+            {\n+                .height = 160'000,\n+                .hash_serialized = AssumeutxoHash{uint256S(\"0x5225141cb62dee63ab3be95f9b03d60801f264010b1816d4bd00618b2736e7be\")},\n+                .nChainTx = 1278002,",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "d9e41a0f92081979764aee420a8ccb80898da862",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In d9e41a0f92081979764aee420a8ccb80898da862 \"chainparams: add signet assumeutxo param at height 160_000\"\r\n\r\nThis is `txouts`/`coins_written` (depending on which RPC you used), not the actual `nChainTx`. It should be 2289496.",
      "created_at": "2023-10-02T20:54:49Z",
      "updated_at": "2023-10-02T20:54:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343155336",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343155336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 382,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343157918",
      "pull_request_review_id": 1653504135,
      "id": 1343157918,
      "node_id": "PRRC_kwDOABII585QDvae",
      "diff_hunk": "@@ -267,7 +267,12 @@ class CTestNetParams : public CChainParams {\n         };\n \n         m_assumeutxo_data = {\n-            // TODO to be specified in a future patch.\n+            {\n+                .height = 2'500'000,\n+                .hash_serialized = AssumeutxoHash{uint256S(\"0x2a8fdefef3bf75fa00540ccaaaba4b5281bea94229327bdb0f7416ef1e7a645c\")},\n+                .nChainTx = 29324631,",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "13c2066a17ba3e1dd0b81905625d1539d6e7a4f3",
      "in_reply_to_id": 1343154441,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good find, fixed.",
      "created_at": "2023-10-02T20:58:01Z",
      "updated_at": "2023-10-02T20:58:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343157918",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343157918"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 273,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343158009",
      "pull_request_review_id": 1653504277,
      "id": 1343158009,
      "node_id": "PRRC_kwDOABII585QDvb5",
      "diff_hunk": "@@ -375,6 +375,15 @@ class SigNetParams : public CChainParams {\n \n         vFixedSeeds.clear();\n \n+        m_assumeutxo_data = {\n+            {\n+                .height = 160'000,\n+                .hash_serialized = AssumeutxoHash{uint256S(\"0x5225141cb62dee63ab3be95f9b03d60801f264010b1816d4bd00618b2736e7be\")},\n+                .nChainTx = 1278002,",
      "path": "src/kernel/chainparams.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "d9e41a0f92081979764aee420a8ccb80898da862",
      "in_reply_to_id": 1343155336,
      "user": {
        "login": "jamesob",
        "id": 73197,
        "node_id": "MDQ6VXNlcjczMTk3",
        "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jamesob",
        "html_url": "https://github.com/jamesob",
        "followers_url": "https://api.github.com/users/jamesob/followers",
        "following_url": "https://api.github.com/users/jamesob/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jamesob/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jamesob/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
        "organizations_url": "https://api.github.com/users/jamesob/orgs",
        "repos_url": "https://api.github.com/users/jamesob/repos",
        "events_url": "https://api.github.com/users/jamesob/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jamesob/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, fixed.",
      "created_at": "2023-10-02T20:58:07Z",
      "updated_at": "2023-10-02T20:58:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343158009",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343158009"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 382,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343167013",
      "pull_request_review_id": 1653519081,
      "id": 1343167013,
      "node_id": "PRRC_kwDOABII585QDxol",
      "diff_hunk": "@@ -0,0 +1,246 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test for assumeutxo, a means of quickly bootstrapping a node using\n+a serialized version of the UTXO set at a certain height, which corresponds\n+to a hash that has been compiled into bitcoind.\n+\n+The assumeutxo value generated and used here is committed to in\n+`CRegTestParams::m_assumeutxo_data` in `src/chainparams.cpp`.\n+\n+## Possible test improvements\n+\n+- TODO: test submitting a transaction and verifying it appears in mempool\n+- TODO: test what happens with -reindex and -reindex-chainstate before the\n+      snapshot is validated, and make sure it's deleted successfully.\n+\n+Interesting test cases could be loading an assumeutxo snapshot file with:\n+\n+- TODO: An invalid hash\n+- TODO: Valid hash but invalid snapshot file (bad coin height or truncated file or\n+      bad other serialization)\n+- TODO: Valid snapshot file, but referencing an unknown block\n+- TODO: Valid snapshot file, but referencing a snapshot block that turns out to be\n+      invalid, or has an invalid parent\n+- TODO: Valid snapshot file and snapshot block, but the block is not on the\n+      most-work chain\n+\n+Interesting starting states could be loading a snapshot when the current chain tip is:\n+\n+- TODO: An ancestor of snapshot block\n+- TODO: Not an ancestor of the snapshot block but has less work\n+- TODO: The snapshot block\n+- TODO: A descendant of the snapshot block\n+- TODO: Not an ancestor or a descendant of the snapshot block and has more work\n+\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, wait_until_helper\n+\n+START_HEIGHT = 199\n+SNAPSHOT_BASE_HEIGHT = 299\n+FINAL_HEIGHT = 399\n+COMPLETE_IDX = {'synced': True, 'best_block_height': FINAL_HEIGHT}\n+\n+\n+class AssumeutxoTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        \"\"\"Use the pregenerated, deterministic chain up to height 199.\"\"\"\n+        self.num_nodes = 3\n+        self.rpc_timeout = 120\n+        self.extra_args = [\n+            [],\n+            [\"-fastprune\", \"-prune=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+            [\"-txindex=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+        ]\n+\n+    def setup_network(self):\n+        \"\"\"Start with the nodes disconnected so that one can generate a snapshot\n+        including blocks the other hasn't yet seen.\"\"\"\n+        self.add_nodes(3)\n+        self.start_nodes(extra_args=self.extra_args)\n+\n+    def run_test(self):\n+        \"\"\"\n+        Bring up two (disconnected) nodes, mine some new blocks on the first,\n+        and generate a UTXO snapshot.\n+\n+        Load the snapshot into the second, ensure it syncs to tip and completes\n+        background validation when connected to the first.\n+        \"\"\"\n+        n0 = self.nodes[0]\n+        n1 = self.nodes[1]\n+        n2 = self.nodes[2]\n+\n+        # Mock time for a deterministic chain\n+        for n in self.nodes:\n+            n.setmocktime(n.getblockheader(n.getbestblockhash())['time'])\n+\n+        self.sync_blocks()\n+\n+        def no_sync():\n+            pass\n+\n+        # Generate a series of blocks that `n0` will have in the snapshot,\n+        # but that n1 doesn't yet see. In order for the snapshot to activate,\n+        # though, we have to ferry over the new headers to n1 so that it\n+        # isn't waiting forever to see the header of the snapshot's base block\n+        # while disconnected from n0.\n+        for i in range(100):\n+            self.generate(n0, nblocks=1, sync_fun=no_sync)\n+            newblock = n0.getblock(n0.getbestblockhash(), 0)\n+\n+            # make n1 aware of the new header, but don't give it the block.\n+            n1.submitheader(newblock)\n+            n2.submitheader(newblock)\n+\n+        # Ensure everyone is seeing the same headers.\n+        for n in self.nodes:\n+            assert_equal(n.getblockchaininfo()[\"headers\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        self.log.info(\"-- Testing assumeutxo + some indexes + pruning\")\n+\n+        assert_equal(n0.getblockcount(), SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockcount(), START_HEIGHT)\n+\n+        self.log.info(f\"Creating a UTXO snapshot at height {SNAPSHOT_BASE_HEIGHT}\")\n+        dump_output = n0.dumptxoutset('utxos.dat')\n+\n+        assert_equal(\n+            dump_output['txoutset_hash'],\n+            'ef45ccdca5898b6c2145e4581d2b88c56564dd389e4bd75a1aaf6961d3edd3c0')\n+        assert_equal(dump_output['nchaintx'], 300)\n+        assert_equal(n0.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        # Mine more blocks on top of the snapshot that n1 hasn't yet seen. This\n+        # will allow us to test n1's sync-to-tip on top of a snapshot.\n+        self.generate(n0, nblocks=100, sync_fun=no_sync)\n+\n+        assert_equal(n0.getblockcount(), FINAL_HEIGHT)\n+        assert_equal(n1.getblockcount(), START_HEIGHT)\n+\n+        assert_equal(n0.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n+\n+        self.log.info(f\"Loading snapshot into second node from {dump_output['path']}\")\n+        loaded = n1.loadtxoutset(dump_output['path'])\n+        assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n+\n+        monitor = n1.getchainstates()\n+        assert_equal(monitor['normal']['blocks'], START_HEIGHT)\n+        assert_equal(monitor['snapshot']['blocks'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(monitor['snapshot']['snapshot_blockhash'], dump_output['base_hash'])\n+\n+        assert_equal(n1.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        PAUSE_HEIGHT = FINAL_HEIGHT - 40\n+\n+        self.log.info(\"Restarting node to stop at height %d\", PAUSE_HEIGHT)\n+        self.restart_node(1, extra_args=[\n+            f\"-stopatheight={PAUSE_HEIGHT}\", *self.extra_args[1]])\n+\n+        # Finally connect the nodes and let them sync.\n+        self.connect_nodes(0, 1)\n+\n+        n1.wait_until_stopped(timeout=5)\n+\n+        self.log.info(\"Checking that blocks are segmented on disk\")\n+        assert self.has_blockfile(n1, \"00000\"), \"normal blockfile missing\"\n+        assert self.has_blockfile(n1, \"00001\"), \"assumed blockfile missing\"\n+        assert not self.has_blockfile(n1, \"00002\"), \"too many blockfiles\"\n+\n+        self.log.info(\"Restarted node before snapshot validation completed, reloading...\")\n+        self.restart_node(1, extra_args=self.extra_args[1])\n+        self.connect_nodes(0, 1)\n+\n+        self.log.info(f\"Ensuring snapshot chain syncs to tip. ({FINAL_HEIGHT})\")\n+        wait_until_helper(lambda: n1.getchainstates()['snapshot']['blocks'] == FINAL_HEIGHT)\n+        self.sync_blocks(nodes=(n0, n1))\n+\n+        self.log.info(\"Ensuring background validation completes\")\n+        # N.B.: the `snapshot` key disappears once the background validation is complete.\n+        wait_until_helper(lambda: not n1.getchainstates().get('snapshot'))",
      "path": "test/functional/feature_assumeutxo.py",
      "position": 164,
      "original_position": 164,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "42cae39356fd20d521aaf99aff1ed85856f3c9f3",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 42cae39356fd20d521aaf99aff1ed85856f3c9f3 \"test: add feature_assumeutxo functional test\"\r\n\r\nThese `wait_until_helper`s and `self.wait_until` can timeout if the machine is kinda slow, or if running in valgrind.",
      "created_at": "2023-10-02T21:09:12Z",
      "updated_at": "2023-10-02T21:09:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343167013",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343167013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 164,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343213786",
      "pull_request_review_id": 1653593116,
      "id": 1343213786,
      "node_id": "PRRC_kwDOABII585QD9Da",
      "diff_hunk": "@@ -2799,6 +2799,79 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"normal\", /*optional=*/true, \"fully validated chainstate containing blocks this node has validated starting from the genesis block\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"only present if an assumeutxo snapshot is loaded. Partially validated chainstate containing blocks this node has validated starting from the snapshot. After the snapshot is validated (when the 'normal' chainstate advances far enough to validate it), this chainstate will replace and become the 'normal' chainstate.\", RPCHelpForChainstate},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    auto make_chain_data = [&](const Chainstate& cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        UniValue data(UniValue::VOBJ);\n+        if (!cs.m_chain.Tip()) {\n+            return data;\n+        }\n+        const CChain& chain = cs.m_chain;\n+        const CBlockIndex* tip = chain.Tip();\n+\n+        data.pushKV(\"blocks\",                (int)chain.Height());\n+        data.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n+        data.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+        data.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n+        data.pushKV(\"coins_db_cache_bytes\",  cs.m_coinsdb_cache_size_bytes);\n+        data.pushKV(\"coins_tip_cache_bytes\", cs.m_coinstip_cache_size_bytes);\n+        if (cs.m_from_snapshot_blockhash) {\n+            data.pushKV(\"snapshot_blockhash\", cs.m_from_snapshot_blockhash->ToString());\n+        }\n+        return data;\n+    };\n+\n+    if (chainman.GetAll().size() > 1) {\n+        for (Chainstate* chainstate : chainman.GetAll()) {\n+            obj.pushKV(\n+                chainstate->m_from_snapshot_blockhash ? \"snapshot\" : \"normal\",",
      "path": "src/rpc/blockchain.cpp",
      "position": 170,
      "original_position": 63,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "0f64bac6030334d798ae205cd7af4bf248feddd9",
      "in_reply_to_id": 1341995611,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@ryanofsky Sure, first of all it sounds like we are on the same page that naming of the chainstates isn’t ideal. I think it will be harder for future developers to understand how assumeutxo works when snapshot and assumed_valid are used interchangably as well as ibd and background. In my mind is an area of improvement for the future but obviously the ship has sailed for this PR if we want to merge it any time soon and for James’ sanity also (and especially if this is merged while I write this :D ).\r\n\r\nI think it makes sense to hide that complexity from the users but that rationale should be documented for developers in a comment here, and that’s what I was asking for. In the future I think we should try to make chainstate naming consistent and if we believe that calling ibd chainstates normal both in the context of assume UTXO as well as outside of it, then we may want to even think about a DDD approach and rename ibd/background chainstate to something like normal_background.\r\n\r\nFor the if-else: right, I didn’t take that transition period when we are fully synced but both chainstates are still around into account correctly. I guess it can still work with a guard clause but it’s not much of an improvement anymore then. ",
      "created_at": "2023-10-02T22:12:00Z",
      "updated_at": "2023-10-02T22:12:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343213786",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343213786"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2861,
      "original_line": 2861,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343216646",
      "pull_request_review_id": 1653597408,
      "id": 1343216646,
      "node_id": "PRRC_kwDOABII585QD9wG",
      "diff_hunk": "@@ -2799,6 +2799,79 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"normal\", /*optional=*/true, \"fully validated chainstate containing blocks this node has validated starting from the genesis block\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"only present if an assumeutxo snapshot is loaded. Partially validated chainstate containing blocks this node has validated starting from the snapshot. After the snapshot is validated (when the 'normal' chainstate advances far enough to validate it), this chainstate will replace and become the 'normal' chainstate.\", RPCHelpForChainstate},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    auto make_chain_data = [&](const Chainstate& cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        UniValue data(UniValue::VOBJ);\n+        if (!cs.m_chain.Tip()) {\n+            return data;\n+        }\n+        const CChain& chain = cs.m_chain;\n+        const CBlockIndex* tip = chain.Tip();\n+\n+        data.pushKV(\"blocks\",                (int)chain.Height());\n+        data.pushKV(\"bestblockhash\",         tip->GetBlockHash().GetHex());\n+        data.pushKV(\"difficulty\",            (double)GetDifficulty(tip));\n+        data.pushKV(\"verificationprogress\",  GuessVerificationProgress(Params().TxData(), tip));\n+        data.pushKV(\"coins_db_cache_bytes\",  cs.m_coinsdb_cache_size_bytes);\n+        data.pushKV(\"coins_tip_cache_bytes\", cs.m_coinstip_cache_size_bytes);\n+        if (cs.m_from_snapshot_blockhash) {\n+            data.pushKV(\"snapshot_blockhash\", cs.m_from_snapshot_blockhash->ToString());\n+        }\n+        return data;\n+    };\n+\n+    if (chainman.GetAll().size() > 1) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 167,
      "original_position": 60,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "0f64bac6030334d798ae205cd7af4bf248feddd9",
      "in_reply_to_id": 1342018556,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not actually an improvement, as discussed above https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1341995611",
      "created_at": "2023-10-02T22:16:45Z",
      "updated_at": "2023-10-02T22:16:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343216646",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343216646"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2858,
      "original_line": 2858,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343266877",
      "pull_request_review_id": 1653763136,
      "id": 1343266877,
      "node_id": "PRRC_kwDOABII585QEKA9",
      "diff_hunk": "@@ -4148,6 +4148,12 @@ bool ChainstateManager::ProcessNewBlock(const std::shared_ptr<const CBlock>& blo\n         return error(\"%s: ActivateBestChain failed (%s)\", __func__, state.ToString());\n     }\n \n+    Chainstate* bg_chain{WITH_LOCK(cs_main, return BackgroundSyncInProgress() ? m_ibd_chainstate.get() : nullptr)};\n+    BlockValidationState bg_state;\n+    if (bg_chain && !bg_chain->ActivateBestChain(bg_state, block)) {",
      "path": "src/validation.cpp",
      "position": 144,
      "original_position": 6,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "b73d3bbd23220857bf17cbb6401275bf58013b72",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "a9ea542e8aed092f45dab2d9a66da56aba742f51: it's probably not significant, but if we split up the two `if`s we could avoid creating `bg_state` object each time a new block comes in when not using AssumeUtxo.",
      "created_at": "2023-10-02T23:56:37Z",
      "updated_at": "2023-10-03T22:15:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343266877",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343266877"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4183,
      "original_line": 4153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343273598",
      "pull_request_review_id": 1653763136,
      "id": 1343273598,
      "node_id": "PRRC_kwDOABII585QELp-",
      "diff_hunk": "@@ -0,0 +1,7 @@\n+Pruning\n+-------\n+\n+When using assumeutxo with `-prune`, the prune budget may be exceeded if it is set\n+lower than 1100MB (i.e. `MIN_DISK_SPACE_FOR_BLOCK_FILES * 2`). Prune budget is normally",
      "path": "doc/release-notes-27596.md",
      "position": 5,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1019c399825b0d512c1fd751c376d46fed4992b9",
      "in_reply_to_id": 1342014745,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe mention that if an index is enabled when pruning, also the 1100MB might not be sufficient because the prune locks wouldn't allow us to prune anything from the snapshot CS until the background CS has finished loading.",
      "created_at": "2023-10-03T00:11:58Z",
      "updated_at": "2023-10-03T22:15:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343273598",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343273598"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343846377",
      "pull_request_review_id": 1654826157,
      "id": 1343846377,
      "node_id": "PRRC_kwDOABII585QGXfp",
      "diff_hunk": "@@ -2699,6 +2700,105 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"",
      "path": "src/rpc/blockchain.cpp",
      "position": 19,
      "original_position": 19,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "ce585a9a158476b0ad3296477b922e79f308e795",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ce585a9a158476b0ad3296477b922e79f308e795: maybe drop \"under a security model very much like `assumevalid`\" - it seems better to discuss the security properties and trade-off in `assumeutxo.md`.",
      "created_at": "2023-10-03T10:02:41Z",
      "updated_at": "2023-10-03T14:01:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343846377",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343846377"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2710,
      "original_line": 2710,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343848899",
      "pull_request_review_id": 1654826157,
      "id": 1343848899,
      "node_id": "PRRC_kwDOABII585QGYHD",
      "diff_hunk": "@@ -2699,6 +2700,105 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"\n+        \"Meanwhile, the original chainstate will complete the initial block download process in \"\n+        \"the background, eventually validating up to the block that the snapshot is based upon.\\n\\n\"\n+\n+        \"The result is a usable bitcoind instance that is current with the network tip in a \"\n+        \"matter of minutes rather than hours. UTXO snapshot are typically obtained from \"\n+        \"third-party sources (HTTP, torrent, etc.) which is reasonable since their \"",
      "path": "src/rpc/blockchain.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "ce585a9a158476b0ad3296477b922e79f308e795",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ce585a9a158476b0ad3296477b922e79f308e795 \"which is reasonable since their contents are always checked\" -> \"and verified\"\r\n\r\n(re both comments: I'm trying to make the RPC doc sound a bit less like an advertisement)",
      "created_at": "2023-10-03T10:04:36Z",
      "updated_at": "2023-10-03T14:01:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343848899",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343848899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2716,
      "original_line": 2716,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343857210",
      "pull_request_review_id": 1654826157,
      "id": 1343857210,
      "node_id": "PRRC_kwDOABII585QGaI6",
      "diff_hunk": "@@ -2699,6 +2699,86 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::ELISION, \"\", \"\",\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    fs::path path = fs::PathFromString(request.params[0].get_str());\n+    if (path.is_relative()) {\n+        path = gArgs.GetDataDirNet() / path;\n+    }\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    CAutoFile afile{file, SER_DISK, CLIENT_VERSION};\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    while (max_secs_to_wait_for_headers > 0) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 73,
      "original_position": 42,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "8ac7427b41fdec1dbc7e06d0aa2c0e469b879ba2",
      "in_reply_to_id": 1291670706,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Any automated tool that loads a snapshot (e.g. for a server deployment) needs to wait for _something_ before calling this RPC, since they're not available immediately upon startup.\r\n\r\nSo they'll probably just end up waiting a little bit and then repeatedly calling it until it no long throws an error.\r\n\r\nWith that in mind, it seems fine to just fail if header sync is in progress. At the same time these 10 lines of RPC code seem fine and convenient.\r\n\r\nA more thorough improvement would be to make the call return immediately and have another method to track progress. E.g. the loading progress could be shoehorned into `getchainstates`. Having a way to poll for progress is nice for any UI as well (including our GUI).\r\n\r\nA `loadtxoutset` progress RPC also helps regular command-line users, because the logs are currently much too noisy to easily follow what's happening; if you call this very early on the node will be churning through early mainnet blocks at breakneck pace.",
      "created_at": "2023-10-03T10:11:33Z",
      "updated_at": "2023-10-03T14:01:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343857210",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343857210"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2764,
      "original_line": 2764,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343911171",
      "pull_request_review_id": 1654826157,
      "id": 1343911171,
      "node_id": "PRRC_kwDOABII585QGnUD",
      "diff_hunk": "@@ -5185,6 +5185,14 @@ bool ChainstateManager::ActivateSnapshot(\n         return false;\n     }\n \n+    {\n+        LOCK(::cs_main);\n+        if (Assert(m_active_chainstate->GetMempool())->size() > 0) {\n+            LogPrintf(\"[snapshot] can't activate a snapshot when mempool not empty\\n\");",
      "path": "src/validation.cpp",
      "position": 208,
      "original_position": 7,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "bb0585779472962f40d9cdd9c6532132850d371c",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "bb0585779472962f40d9cdd9c6532132850d371c  For this and similiar erors, it would be good if a followup PR has them returned via RPC.",
      "created_at": "2023-10-03T10:55:07Z",
      "updated_at": "2023-10-03T14:01:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343911171",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343911171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5191,
      "original_line": 5191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343913819",
      "pull_request_review_id": 1654826157,
      "id": 1343913819,
      "node_id": "PRRC_kwDOABII585QGn9b",
      "diff_hunk": "@@ -5342,6 +5349,14 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n \n     const AssumeutxoData& au_data = *maybe_au_data;\n \n+    // This work comparison is a duplicate check with the one performed later in\n+    // ActivateSnapshot(), but is done so that we avoid doing the long work of staging\n+    // a snapshot that isn't actually usable.\n+    if (WITH_LOCK(::cs_main, return !CBlockIndexWorkComparator()(ActiveTip(), snapshot_start_block))) {\n+        LogPrintf(\"[snapshot] activation failed - height does not exceed active chainstate\\n\");",
      "path": "src/validation.cpp",
      "position": 325,
      "original_position": 99,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "62ac519e718eb7a31dca1102a96ba219fbc7f95d",
      "in_reply_to_id": 1343112029,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "62ac519e718eb7a31dca1102a96ba219fbc7f95d: additionally, if we can do this before the mempool check (bb0585779472962f40d9cdd9c6532132850d371c) we'd have a less cryptic error message when a user tries to load a snapshot into an already synced node.",
      "created_at": "2023-10-03T10:57:30Z",
      "updated_at": "2023-10-03T14:01:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343913819",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343913819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5364,
      "original_line": 5356,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343917159",
      "pull_request_review_id": 1654826157,
      "id": 1343917159,
      "node_id": "PRRC_kwDOABII585QGoxn",
      "diff_hunk": "@@ -5342,6 +5349,14 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n \n     const AssumeutxoData& au_data = *maybe_au_data;\n \n+    // This work comparison is a duplicate check with the one performed later in\n+    // ActivateSnapshot(), but is done so that we avoid doing the long work of staging\n+    // a snapshot that isn't actually usable.\n+    if (WITH_LOCK(::cs_main, return !CBlockIndexWorkComparator()(ActiveTip(), snapshot_start_block))) {\n+        LogPrintf(\"[snapshot] activation failed - height does not exceed active chainstate\\n\");",
      "path": "src/validation.cpp",
      "position": 325,
      "original_position": 99,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "62ac519e718eb7a31dca1102a96ba219fbc7f95d",
      "in_reply_to_id": 1343112029,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(I tested that I can reach this error on a node that's synced well past the snapshot height, by deleting `mempool.dat` and running `-blocksonly`)",
      "created_at": "2023-10-03T11:00:34Z",
      "updated_at": "2023-10-03T14:01:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343917159",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343917159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5364,
      "original_line": 5356,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343920324",
      "pull_request_review_id": 1654826157,
      "id": 1343920324,
      "node_id": "PRRC_kwDOABII585QGpjE",
      "diff_hunk": "@@ -5259,30 +5248,48 @@ bool ChainstateManager::ActivateSnapshot(\n             }\n         }\n         return false;\n-    }\n+    };\n \n-    {\n+    if (!this->PopulateAndValidateSnapshot(*snapshot_chainstate, coins_file, metadata)) {\n         LOCK(::cs_main);\n-        assert(!m_snapshot_chainstate);\n-        m_snapshot_chainstate.swap(snapshot_chainstate);\n-        const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n-        assert(chaintip_loaded);\n-\n-        // Transfer possession of the mempool to the snapshot chianstate.\n-        // Mempool is empty at this point because we're still in IBD.\n-        Assert(m_active_chainstate->m_mempool->size() == 0);\n-        Assert(!m_snapshot_chainstate->m_mempool);\n-        m_snapshot_chainstate->m_mempool = m_active_chainstate->m_mempool;\n-        m_active_chainstate->m_mempool = nullptr;\n-        m_active_chainstate = m_snapshot_chainstate.get();\n-        m_blockman.m_snapshot_height = this->GetSnapshotBaseHeight();\n-\n-        LogPrintf(\"[snapshot] successfully activated snapshot %s\\n\", base_blockhash.ToString());\n-        LogPrintf(\"[snapshot] (%.2f MB)\\n\",\n-            m_snapshot_chainstate->CoinsTip().DynamicMemoryUsage() / (1000 * 1000));\n+        return cleanup_bad_snapshot(\"population failed\");\n+    }\n \n-        this->MaybeRebalanceCaches();\n+    LOCK(::cs_main);  // cs_main required for rest of snapshot activation.\n+\n+    // Do a final check to ensure that the snapshot chainstate is actually a more\n+    // work chain than the active chainstate; a user could have loaded a snapshot\n+    // very late in the IBD process, and we wouldn't want to load a useless chainstate.\n+    if (!CBlockIndexWorkComparator()(ActiveTip(), snapshot_chainstate->m_chain.Tip())) {\n+        return cleanup_bad_snapshot(\"work does not exceed active chainstate\");",
      "path": "src/validation.cpp",
      "position": 267,
      "original_position": 59,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "62ac519e718eb7a31dca1102a96ba219fbc7f95d",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "62ac519e718eb7a31dca1102a96ba219fbc7f95d: I managed to hit this as follows:\r\n\r\n1. call `invalidateblock` at height 799_900\r\n2. call `reconsiderblock`\r\n3. quickly shut down the node\r\n4. erase mempool.dat\r\n5. start node with `-blocksonly`\r\n6. load snapshot (bypassing the preliminary check below)\r\n7. watch the chain catch up beyond block 800_000 while it's still loading coins, and then flushing the snapshot\r\n8. see `loadtxoutset` fail and the above log message\r\n\r\nAs an aside, it would be nice to have a `rollback` RPC that just takes a height argument, _doesn't_ involve invalidating a block and optionally deletes the downloaded block.",
      "created_at": "2023-10-03T11:03:31Z",
      "updated_at": "2023-10-03T14:01:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343920324",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343920324"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5272,
      "original_line": 5264,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343952455",
      "pull_request_review_id": 1654978564,
      "id": 1343952455,
      "node_id": "PRRC_kwDOABII585QGxZH",
      "diff_hunk": "@@ -0,0 +1,200 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$(($BASE_HEIGHT + $INCREMENTAL_HEIGHT))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes to test that snapshot use works\n+# properly with indexes.\n+ALL_INDEXES=\"-txindex -coinstatsindex -blockfilterindex=1\"\n+\n+if ! command -v jq >/dev/null ; then\n+  echo \"This script requires jq to parse JSON RPC output. Please install it.\"\n+  echo \"(e.g. sudo apt install jq)\"\n+  exit 1\n+fi\n+\n+DUMP_OUTPUT=\"dumptxoutset-output-$BASE_HEIGHT.json\"\n+\n+finish() {\n+  echo\n+  echo \"Killing server and client PIDs ($SERVER_PID, $CLIENT_PID) and cleaning up datadirs\"\n+  echo\n+  rm -f \"$UTXO_DAT_FILE\" \"$DUMP_OUTPUT\"\n+  rm -rf \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+  kill -9 \"$SERVER_PID\" \"$CLIENT_PID\"\n+}\n+\n+trap finish EXIT\n+\n+# Need to specify these to trick client into accepting server as a peer\n+# it can IBD from, otherwise the default values prevent IBD from the server node.\n+EARLY_IBD_FLAGS=\"-maxtipage=9223372036854775207 -minimumchainwork=0x00\"\n+\n+server_rpc() {\n+  ./src/bitcoin-cli -rpcport=$SERVER_RPC_PORT -datadir=\"$SERVER_DATADIR\" \"$@\"\n+}\n+client_rpc() {\n+  ./src/bitcoin-cli -rpcport=$CLIENT_RPC_PORT -datadir=\"$CLIENT_DATADIR\" \"$@\"\n+}\n+server_sleep_til_boot() {\n+  while ! server_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+client_sleep_til_boot() {\n+  while ! client_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+\n+mkdir -p \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+\n+echo \"Hi, welcome to the assumeutxo demo/test\"\n+echo\n+echo \"We're going to\"\n+echo\n+echo \"  - start up a 'server' node, sync it via mainnet IBD to height ${BASE_HEIGHT}\"\n+echo \"  - create a UTXO snapshot at that height\"\n+echo \"  - IBD ${INCREMENTAL_HEIGHT} more blocks on top of that\"\n+echo\n+echo \"then we'll demonstrate assumeutxo by \"\n+echo\n+echo \"  - starting another node (the 'client') and loading the snapshot in\"\n+echo \"    * first you'll have to modify the code slightly (chainparams) and recompile\"\n+echo \"    * don't worry, we'll make it easy\"\n+echo \"  - observing the client sync ${INCREMENTAL_HEIGHT} blocks on top of the snapshot from the server\"\n+echo \"  - observing the client validate the snapshot chain via background IBD\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- Starting the demo. You might want to run the two following commands in\"\n+echo \"   separate terminal windows:\"\n+echo\n+echo \"   watch -n0.1 tail -n 30 $SERVER_DATADIR/debug.log\"\n+echo \"   watch -n0.1 tail -n 30 $CLIENT_DATADIR/debug.log\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- IBDing the blocks (height=$BASE_HEIGHT) required to the server node...\"\n+./src/bitcoind -logthreadnames=1 $SERVER_PORTS \\\n+    -datadir=\"$SERVER_DATADIR\" $EARLY_IBD_FLAGS -stopatheight=\"$BASE_HEIGHT\" >/dev/null\n+\n+echo\n+echo \"-- Creating snapshot at ~ height $BASE_HEIGHT ($UTXO_DAT_FILE)...\"\n+sleep 2",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": 112,
      "original_position": 112,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: May be good to add a comment why this is needed.",
      "created_at": "2023-10-03T11:33:01Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343952455",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343952455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 112,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343985564",
      "pull_request_review_id": 1654826157,
      "id": 1343985564,
      "node_id": "PRRC_kwDOABII585QG5ec",
      "diff_hunk": "@@ -5259,30 +5248,48 @@ bool ChainstateManager::ActivateSnapshot(\n             }\n         }\n         return false;\n-    }\n+    };\n \n-    {\n+    if (!this->PopulateAndValidateSnapshot(*snapshot_chainstate, coins_file, metadata)) {\n         LOCK(::cs_main);\n-        assert(!m_snapshot_chainstate);\n-        m_snapshot_chainstate.swap(snapshot_chainstate);\n-        const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n-        assert(chaintip_loaded);\n-\n-        // Transfer possession of the mempool to the snapshot chianstate.\n-        // Mempool is empty at this point because we're still in IBD.\n-        Assert(m_active_chainstate->m_mempool->size() == 0);\n-        Assert(!m_snapshot_chainstate->m_mempool);\n-        m_snapshot_chainstate->m_mempool = m_active_chainstate->m_mempool;\n-        m_active_chainstate->m_mempool = nullptr;\n-        m_active_chainstate = m_snapshot_chainstate.get();\n-        m_blockman.m_snapshot_height = this->GetSnapshotBaseHeight();\n-\n-        LogPrintf(\"[snapshot] successfully activated snapshot %s\\n\", base_blockhash.ToString());\n-        LogPrintf(\"[snapshot] (%.2f MB)\\n\",\n-            m_snapshot_chainstate->CoinsTip().DynamicMemoryUsage() / (1000 * 1000));\n+        return cleanup_bad_snapshot(\"population failed\");\n+    }\n \n-        this->MaybeRebalanceCaches();\n+    LOCK(::cs_main);  // cs_main required for rest of snapshot activation.\n+\n+    // Do a final check to ensure that the snapshot chainstate is actually a more\n+    // work chain than the active chainstate; a user could have loaded a snapshot\n+    // very late in the IBD process, and we wouldn't want to load a useless chainstate.\n+    if (!CBlockIndexWorkComparator()(ActiveTip(), snapshot_chainstate->m_chain.Tip())) {\n+        return cleanup_bad_snapshot(\"work does not exceed active chainstate\");\n+    }\n+    // If not in-memory, persist the base blockhash for use during subsequent\n+    // initialization.\n+    if (!in_memory) {\n+        if (!node::WriteSnapshotBaseBlockhash(*snapshot_chainstate)) {\n+            return cleanup_bad_snapshot(\"could not write base blockhash\");\n+        }\n     }\n+\n+    assert(!m_snapshot_chainstate);\n+    m_snapshot_chainstate.swap(snapshot_chainstate);\n+    const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n+    assert(chaintip_loaded);\n+\n+    // Transfer possession of the mempool to the snapshot chainstate.\n+    // Mempool is empty at this point because we're still in IBD.",
      "path": "src/validation.cpp",
      "position": 283,
      "original_position": 75,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "62ac519e718eb7a31dca1102a96ba219fbc7f95d",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "62ac519e718eb7a31dca1102a96ba219fbc7f95d: not if we finished IBD while the snapshot was loading and its chainstate finished flushing, as I did above. The `CBlockIndexWorkComparator` check above catches that, but it seems better to do another explicit (non fatal) check.\r\n\r\nSee also earlier discussion: https://github.com/bitcoin/bitcoin/pull/27596/commits/9511fb3616b7bbe1d0d2f54a45ea0a650ba0367b#r1319642325",
      "created_at": "2023-10-03T11:59:59Z",
      "updated_at": "2023-10-03T14:01:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343985564",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343985564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5288,
      "original_line": 5280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343998883",
      "pull_request_review_id": 1654978564,
      "id": 1343998883,
      "node_id": "PRRC_kwDOABII585QG8uj",
      "diff_hunk": "@@ -250,8 +259,19 @@ bool BaseIndex::Rewind(const CBlockIndex* current_tip, const CBlockIndex* new_ti\n     return true;\n }\n \n-void BaseIndex::BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex)\n+void BaseIndex::BlockConnected(ChainstateRole role, const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex)\n {\n+    // Ignore events from the assumed-valid chain; we will process its blocks\n+    // (sequentially) after it is fully verified by the background chainstate. This\n+    // is to avoid any out-of-order indexing.\n+    //\n+    // TODO at some point we could parameterize whether a particular index can be",
      "path": "src/index/base.cpp",
      "position": 56,
      "original_position": 56,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Not sure about adding `TODO` that are unclear on how to fix. I think it should be clear *first* that this will offer a user-facing benefit, before someone `grep`s for this and starts working on it.\r\n\r\nSeems fine to remove completely or replace with `This could be parameterized on whether ...\"",
      "created_at": "2023-10-03T12:12:01Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1343998883",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1343998883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 268,
      "original_line": 268,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344002707",
      "pull_request_review_id": 1654978564,
      "id": 1344002707,
      "node_id": "PRRC_kwDOABII585QG9qT",
      "diff_hunk": "@@ -1478,6 +1478,25 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.chainman = std::make_unique<ChainstateManager>(node.kernel->interrupt, chainman_opts, blockman_opts);\n         ChainstateManager& chainman = *node.chainman;\n \n+        // This is defined and set here instead of inline in validation.h to avoid a hard\n+        // dependency between validation and index/base, since the latter is not in\n+        // libbitcoinkernel.\n+        chainman.restart_indexes = [&node]() {\n+            LogPrintf(\"[snapshot] restarting indexes\\n\");\n+\n+            // Drain the validation interface queue to ensure that the old indexes\n+            // don't have any pending work.\n+            SyncWithValidationInterfaceQueue();\n+\n+            for (auto* index : node.indexes) {\n+                index->Interrupt();\n+                index->Stop();\n+                if (!(index->Init() && index->StartBackgroundSync())) {\n+                    LogPrintf(\"[snapshot] WARNING failed to restart index %s on snapshot chain\\n\", index->GetName());",
      "path": "src/init.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Shouldn't this be a fatal `InitError`?",
      "created_at": "2023-10-03T12:15:17Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344002707",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344002707"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1495,
      "original_line": 1495,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344006030",
      "pull_request_review_id": 1654978564,
      "id": 1344006030,
      "node_id": "PRRC_kwDOABII585QG-eO",
      "diff_hunk": "@@ -0,0 +1,28 @@\n+Pruning\n+-------\n+\n+When using assumeutxo with `-prune`, the prune budget may be exceeded if it is set\n+lower than 1100MB (i.e. `MIN_DISK_SPACE_FOR_BLOCK_FILES * 2`). Prune budget is normally\n+split evenly across each chainstate, unless the resulting prune budget per chainstate\n+is beneath `MIN_DISK_SPACE_FOR_BLOCK_FILES` in which case that value will be used.\n+\n+RPC\n+---\n+\n+`loadtxoutset` has been added, which allows loading a UTXO snapshot of the format\n+generated by `dumptxoutset`. Once this snapshot is loaded, its contents will be\n+deserialized into a second chainstate data structure, which is then used to sync to\n+the network's tip under a security model very much like `assumevalid`.",
      "path": "doc/release-notes-27596.md",
      "position": 15,
      "original_position": 15,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit: Not sure if it makes sense to use the release notes to compare this with `assumevalid`. In any case, `assumevalid` has POW built on top of it, and this one doesn't, so the security model seems different?",
      "created_at": "2023-10-03T12:18:02Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344006030",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344006030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 15,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344017553",
      "pull_request_review_id": 1654978564,
      "id": 1344017553,
      "node_id": "PRRC_kwDOABII585QHBSR",
      "diff_hunk": "@@ -25,3 +26,13 @@ interfaces::BlockInfo MakeBlockInfo(const CBlockIndex* index, const CBlock* data\n     return info;\n }\n } // namespace kernel\n+\n+std::ostream& operator<<(std::ostream& os, const ChainstateRole& role) {\n+    switch(role) {\n+        case ChainstateRole::NORMAL: os << \"normal\"; break;\n+        case ChainstateRole::ASSUMEDVALID: os << \"assumedvalid\"; break;\n+        case ChainstateRole::BACKGROUND: os << \"background\"; break;\n+        default: os.setstate(std::ios_base::failbit);",
      "path": "src/kernel/chain.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This disables compiler warnings. May be better to use the style recommended in the dev notes. Also, `assert(0)` may be better than an exception, which is unclear whether it will be thrown at all and whether or where it will be caught.",
      "created_at": "2023-10-03T12:26:46Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344017553",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344017553"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344433079",
      "pull_request_review_id": 1655698150,
      "id": 1344433079,
      "node_id": "PRRC_kwDOABII585QImu3",
      "diff_hunk": "@@ -5259,30 +5248,48 @@ bool ChainstateManager::ActivateSnapshot(\n             }\n         }\n         return false;\n-    }\n+    };\n \n-    {\n+    if (!this->PopulateAndValidateSnapshot(*snapshot_chainstate, coins_file, metadata)) {\n         LOCK(::cs_main);\n-        assert(!m_snapshot_chainstate);\n-        m_snapshot_chainstate.swap(snapshot_chainstate);\n-        const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n-        assert(chaintip_loaded);\n-\n-        // Transfer possession of the mempool to the snapshot chianstate.\n-        // Mempool is empty at this point because we're still in IBD.\n-        Assert(m_active_chainstate->m_mempool->size() == 0);\n-        Assert(!m_snapshot_chainstate->m_mempool);\n-        m_snapshot_chainstate->m_mempool = m_active_chainstate->m_mempool;\n-        m_active_chainstate->m_mempool = nullptr;\n-        m_active_chainstate = m_snapshot_chainstate.get();\n-        m_blockman.m_snapshot_height = this->GetSnapshotBaseHeight();\n-\n-        LogPrintf(\"[snapshot] successfully activated snapshot %s\\n\", base_blockhash.ToString());\n-        LogPrintf(\"[snapshot] (%.2f MB)\\n\",\n-            m_snapshot_chainstate->CoinsTip().DynamicMemoryUsage() / (1000 * 1000));\n+        return cleanup_bad_snapshot(\"population failed\");\n+    }\n \n-        this->MaybeRebalanceCaches();\n+    LOCK(::cs_main);  // cs_main required for rest of snapshot activation.\n+\n+    // Do a final check to ensure that the snapshot chainstate is actually a more\n+    // work chain than the active chainstate; a user could have loaded a snapshot\n+    // very late in the IBD process, and we wouldn't want to load a useless chainstate.\n+    if (!CBlockIndexWorkComparator()(ActiveTip(), snapshot_chainstate->m_chain.Tip())) {\n+        return cleanup_bad_snapshot(\"work does not exceed active chainstate\");\n+    }\n+    // If not in-memory, persist the base blockhash for use during subsequent\n+    // initialization.\n+    if (!in_memory) {\n+        if (!node::WriteSnapshotBaseBlockhash(*snapshot_chainstate)) {\n+            return cleanup_bad_snapshot(\"could not write base blockhash\");\n+        }\n     }\n+\n+    assert(!m_snapshot_chainstate);\n+    m_snapshot_chainstate.swap(snapshot_chainstate);\n+    const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n+    assert(chaintip_loaded);\n+\n+    // Transfer possession of the mempool to the snapshot chainstate.\n+    // Mempool is empty at this point because we're still in IBD.",
      "path": "src/validation.cpp",
      "position": 283,
      "original_position": 75,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "62ac519e718eb7a31dca1102a96ba219fbc7f95d",
      "in_reply_to_id": 1343985564,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@Sjors The link to the earlier discussion doesn't seem to work ",
      "created_at": "2023-10-03T16:51:59Z",
      "updated_at": "2023-10-03T16:51:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344433079",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344433079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5288,
      "original_line": 5280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344605396",
      "pull_request_review_id": 1654978564,
      "id": 1344605396,
      "node_id": "PRRC_kwDOABII585QJQzU",
      "diff_hunk": "@@ -257,40 +258,56 @@ void BlockManager::PruneOneBlockFile(const int fileNumber)\n     m_dirty_fileinfo.insert(fileNumber);\n }\n \n-void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height)\n+void BlockManager::FindFilesToPruneManual(\n+    std::set<int>& setFilesToPrune,\n+    int nManualPruneHeight,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     assert(IsPruneMode() && nManualPruneHeight > 0);\n \n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0) {\n+    if (chain.m_chain.Height() < 0) {\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    const auto [min_block_to_prune, last_block_can_prune] = chainman.GetPruneRange(chain, nManualPruneHeight);\n+\n     int count = 0;\n-    for (int fileNumber = 0; fileNumber < m_last_blockfile; fileNumber++) {\n-        if (m_blockfile_info[fileNumber].nSize == 0 || m_blockfile_info[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n+    for (int fileNumber = 0; fileNumber < this->MaxBlockfileNum(); fileNumber++) {\n+        const auto& fileinfo = m_blockfile_info[fileNumber];\n+        if (fileinfo.nSize == 0 || fileinfo.nHeightLast > (unsigned)last_block_can_prune || fileinfo.nHeightFirst < (unsigned)min_block_to_prune) {\n             continue;\n         }\n+\n         PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n-    LogPrintf(\"Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\", nLastBlockWeCanPrune, count);\n+    LogPrintf(\"[%s] Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\",\n+        chain.GetRole(), last_block_can_prune, count);\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(\n+    std::set<int>& setFilesToPrune,\n+    int last_prune,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0 || GetPruneTarget() == 0) {\n+    // Distribute our -prune budget over all chainstates.\n+    const auto target = std::max(\n+        MIN_DISK_SPACE_FOR_BLOCK_FILES, GetPruneTarget() / chainman.GetAll().size());\n+\n+    if (chain.m_chain.Height() < 0 || target == 0) {",
      "path": "src/node/blockstorage.cpp",
      "position": 62,
      "original_position": 62,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why would `target==0` ever be hit? `std::max(MIN_DISK_SPACE_FOR_BLOCK_FILES, 0)` shouldn't be `0`. ",
      "created_at": "2023-10-03T19:10:53Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344605396",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344605396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 302,
      "original_line": 302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344617893",
      "pull_request_review_id": 1654978564,
      "id": 1344617893,
      "node_id": "PRRC_kwDOABII585QJT2l",
      "diff_hunk": "@@ -360,13 +379,32 @@ CBlockIndex* BlockManager::InsertBlockIndex(const uint256& hash)\n     return pindex;\n }\n \n-bool BlockManager::LoadBlockIndex()\n+bool BlockManager::LoadBlockIndex(const std::optional<uint256>& snapshot_blockhash)\n {\n     if (!m_block_tree_db->LoadBlockIndexGuts(\n             GetConsensus(), [this](const uint256& hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main) { return this->InsertBlockIndex(hash); }, m_interrupt)) {\n         return false;\n     }\n \n+    if (snapshot_blockhash) {\n+        const AssumeutxoData au_data = *Assert(GetParams().AssumeutxoForBlockhash(*snapshot_blockhash));\n+        m_snapshot_height = au_data.height;\n+        CBlockIndex* base{LookupBlockIndex(*snapshot_blockhash)};",
      "path": "src/node/blockstorage.cpp",
      "position": 147,
      "original_position": 147,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: `CBlockIndex& base{*Assert(LookupBlockIndex(*snapshot_blockhash))};` to avoid UB in the presence of bugs?",
      "created_at": "2023-10-03T19:22:21Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344617893",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344617893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 392,
      "original_line": 392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344629969",
      "pull_request_review_id": 1654978564,
      "id": 1344629969,
      "node_id": "PRRC_kwDOABII585QJWzR",
      "diff_hunk": "@@ -1091,4 +1187,18 @@ void ImportBlocks(ChainstateManager& chainman, std::vector<fs::path> vImportFile\n         }\n     } // End scope of ImportingNow\n }\n+\n+std::ostream& operator<<(std::ostream& os, const BlockfileType& type) {\n+    switch(type) {\n+        case BlockfileType::NORMAL: os << \"normal\"; break;\n+        case BlockfileType::ASSUMED: os << \"assumed\"; break;\n+        default: os.setstate(std::ios_base::failbit);",
      "path": "src/node/blockstorage.cpp",
      "position": 421,
      "original_position": 421,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Same here?",
      "created_at": "2023-10-03T19:32:35Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344629969",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344629969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1195,
      "original_line": 1195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344648372",
      "pull_request_review_id": 1654978564,
      "id": 1344648372,
      "node_id": "PRRC_kwDOABII585QJbS0",
      "diff_hunk": "@@ -154,24 +189,39 @@ class BlockManager\n      * A db flag records the fact that at least some block files have been pruned.\n      *\n      * @param[out]   setFilesToPrune   The set of file indices that can be unlinked will be returned\n+     * @param        last_prune        The last height we're able to prune, according to the prune locks\n      */\n-    void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd);\n+    void FindFilesToPrune(\n+        std::set<int>& setFilesToPrune,\n+        int last_prune,\n+        const Chainstate& chain,\n+        ChainstateManager& chainman);\n \n     RecursiveMutex cs_LastBlockFile;\n     std::vector<CBlockFileInfo> m_blockfile_info;\n-    int m_last_blockfile = 0;\n \n-    // Track the height of the highest block in m_last_blockfile whose undo\n-    // data has been written. Block data is written to block files in download\n-    // order, but is written to undo files in validation order, which is\n-    // usually in order by height. To avoid wasting disk space, undo files will\n-    // be trimmed whenever the corresponding block file is finalized and\n-    // the height of the highest block written to the block file equals the\n-    // height of the highest block written to the undo file. This is a\n-    // heuristic and can sometimes preemptively trim undo files that will write\n-    // more data later, and sometimes fail to trim undo files that can't have\n-    // more data written later.\n-    unsigned int m_undo_height_in_last_blockfile = 0;\n+    //! Since assumedvalid chainstates may be syncing a range of the chain that is very\n+    //! far away from the normal/background validation process, we should segment blockfiles\n+    //! for assumed chainstates. Otherwise, we might have wildly different height ranges\n+    //! mixed into the same block files, which would impair our ability to prune\n+    //! effectively.\n+    //!\n+    //! This data structure maintains separate blockfile number cursors for each\n+    //! BlockfileType. The ASSUMED state is initialized, when necessary, in FindBlockPos().\n+    //!\n+    //! The first element is the NORMAL cursor, second is ASSUMED.\n+    std::array<std::optional<BlockfileCursor>, BlockfileType::NUM_TYPES>\n+        m_blockfile_cursors GUARDED_BY(cs_LastBlockFile) = {\n+            BlockfileCursor{},\n+            std::nullopt,\n+    };\n+    int MaxBlockfileNum() const EXCLUSIVE_LOCKS_REQUIRED(cs_LastBlockFile)\n+    {\n+        static const BlockfileCursor empty_cursor;\n+        const auto& normal = m_blockfile_cursors[BlockfileType::NORMAL].value_or(empty_cursor);\n+        const auto& assumed = m_blockfile_cursors[BlockfileType::ASSUMED].value_or(empty_cursor);\n+        return std::max(normal.file_num, assumed.file_num);",
      "path": "src/node/blockstorage.h",
      "position": 125,
      "original_position": 125,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I don't really understand the use of an array, but then require indexing each type here. I wonder if it was easier to just have two member fields for the two types. Otherwise it would be better to use a for-loop here and iterate over the array?",
      "created_at": "2023-10-03T19:46:46Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344648372",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344648372"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 223,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344688088",
      "pull_request_review_id": 1654978564,
      "id": 1344688088,
      "node_id": "PRRC_kwDOABII585QJk_Y",
      "diff_hunk": "@@ -2699,6 +2700,178 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"",
      "path": "src/rpc/blockchain.cpp",
      "position": 19,
      "original_position": 19,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I don't think the security model is similar, because assumevalid must be covered by POW. This one not.\r\nIt may be better to omit this sentence, or just explain the security trade-offs, if there is any value and need for it.",
      "created_at": "2023-10-03T20:17:38Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344688088",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344688088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2710,
      "original_line": 2710,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344694600",
      "pull_request_review_id": 1654978564,
      "id": 1344694600,
      "node_id": "PRRC_kwDOABII585QJmlI",
      "diff_hunk": "@@ -2699,6 +2700,178 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"\n+        \"Meanwhile, the original chainstate will complete the initial block download process in \"\n+        \"the background, eventually validating up to the block that the snapshot is based upon.\\n\\n\"\n+\n+        \"The result is a usable bitcoind instance that is current with the network tip in a \"\n+        \"matter of minutes rather than hours. UTXO snapshot are typically obtained from \"\n+        \"third-party sources (HTTP, torrent, etc.) which is reasonable since their \"\n+        \"contents are always checked by hash.\\n\\n\"\n+\n+        \"You can find more information on this process in the `assumeutxo` design \"\n+        \"document (<https://github.com/bitcoin/bitcoin/blob/master/doc/design/assumeutxo.md>).\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"coins_loaded\", \"the number of coins loaded from the snapshot\"},\n+                    {RPCResult::Type::STR_HEX, \"tip_hash\", \"the hash of the base of the snapshot\"},\n+                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n+                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was loaded from\"},\n+                }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    fs::path path{AbsPathForConfigVal(EnsureArgsman(node), fs::u8path(request.params[0].get_str()))};\n+\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    AutoFile afile{file};\n+    if (afile.IsNull()) {\n+        throw JSONRPCError(\n+            RPC_INVALID_PARAMETER,\n+            \"Couldn't open file \" + path.u8string() + \" for reading.\");\n+    }\n+\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    while (max_secs_to_wait_for_headers > 0) {\n+        snapshot_start_block = WITH_LOCK(::cs_main,\n+            return chainman.m_blockman.LookupBlockIndex(base_blockhash));\n+        max_secs_to_wait_for_headers -= 1;\n+\n+        if (!IsRPCRunning()) {\n+            throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Shutting down\");\n+        }\n+\n+        if (!snapshot_start_block) {\n+            std::this_thread::sleep_for(std::chrono::seconds(1));\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    if (!snapshot_start_block) {\n+        LogPrintf(\"[snapshot] timed out waiting for snapshot start blockheader %s\\n\",\n+            base_blockhash.ToString());\n+        throw JSONRPCError(\n+            RPC_INTERNAL_ERROR,\n+            \"Timed out waiting for base block header to appear in headers chain\");\n+    }\n+    if (!chainman.ActivateSnapshot(afile, metadata, false)) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to load UTXO snapshot \" + fs::PathToString(path));\n+    }\n+    CBlockIndex* new_tip{WITH_LOCK(::cs_main, return chainman.ActiveTip())};",
      "path": "src/rpc/blockchain.cpp",
      "position": 99,
      "original_position": 99,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This seems racy. Why would `new_tip` be equal to `snapshot_start_block` when blocks can be received on the network thread? Also, why is there a need to get this at all, when the existing `snapshot_start_block` can be used?",
      "created_at": "2023-10-03T20:23:23Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344694600",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344694600"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2790,
      "original_line": 2790,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344696121",
      "pull_request_review_id": 1654978564,
      "id": 1344696121,
      "node_id": "PRRC_kwDOABII585QJm85",
      "diff_hunk": "@@ -2699,6 +2700,178 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"\n+        \"Meanwhile, the original chainstate will complete the initial block download process in \"\n+        \"the background, eventually validating up to the block that the snapshot is based upon.\\n\\n\"\n+\n+        \"The result is a usable bitcoind instance that is current with the network tip in a \"\n+        \"matter of minutes rather than hours. UTXO snapshot are typically obtained from \"\n+        \"third-party sources (HTTP, torrent, etc.) which is reasonable since their \"\n+        \"contents are always checked by hash.\\n\\n\"\n+\n+        \"You can find more information on this process in the `assumeutxo` design \"\n+        \"document (<https://github.com/bitcoin/bitcoin/blob/master/doc/design/assumeutxo.md>).\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"coins_loaded\", \"the number of coins loaded from the snapshot\"},\n+                    {RPCResult::Type::STR_HEX, \"tip_hash\", \"the hash of the base of the snapshot\"},\n+                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n+                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was loaded from\"},\n+                }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    fs::path path{AbsPathForConfigVal(EnsureArgsman(node), fs::u8path(request.params[0].get_str()))};\n+\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    AutoFile afile{file};",
      "path": "src/rpc/blockchain.cpp",
      "position": 54,
      "original_position": 54,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could remove the `file` symbol and inline the fopen call to avoid having to symbols refer to the same resource?",
      "created_at": "2023-10-03T20:24:58Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344696121",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344696121"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": 2744,
      "original_start_line": 2744,
      "start_side": "RIGHT",
      "line": 2745,
      "original_line": 2745,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344698532",
      "pull_request_review_id": 1654978564,
      "id": 1344698532,
      "node_id": "PRRC_kwDOABII585QJnik",
      "diff_hunk": "@@ -2699,6 +2700,178 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"\n+        \"Meanwhile, the original chainstate will complete the initial block download process in \"\n+        \"the background, eventually validating up to the block that the snapshot is based upon.\\n\\n\"\n+\n+        \"The result is a usable bitcoind instance that is current with the network tip in a \"\n+        \"matter of minutes rather than hours. UTXO snapshot are typically obtained from \"\n+        \"third-party sources (HTTP, torrent, etc.) which is reasonable since their \"\n+        \"contents are always checked by hash.\\n\\n\"\n+\n+        \"You can find more information on this process in the `assumeutxo` design \"\n+        \"document (<https://github.com/bitcoin/bitcoin/blob/master/doc/design/assumeutxo.md>).\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"coins_loaded\", \"the number of coins loaded from the snapshot\"},\n+                    {RPCResult::Type::STR_HEX, \"tip_hash\", \"the hash of the base of the snapshot\"},\n+                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n+                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was loaded from\"},\n+                }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    fs::path path{AbsPathForConfigVal(EnsureArgsman(node), fs::u8path(request.params[0].get_str()))};\n+\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    AutoFile afile{file};\n+    if (afile.IsNull()) {\n+        throw JSONRPCError(\n+            RPC_INVALID_PARAMETER,\n+            \"Couldn't open file \" + path.u8string() + \" for reading.\");\n+    }\n+\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    ChainstateManager& chainman = *node.chainman;",
      "path": "src/rpc/blockchain.cpp",
      "position": 71,
      "original_position": 71,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`Ensure(any)Chainman` to avoid UB?",
      "created_at": "2023-10-03T20:27:05Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344698532",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344698532"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2762,
      "original_line": 2762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344698747",
      "pull_request_review_id": 1654978564,
      "id": 1344698747,
      "node_id": "PRRC_kwDOABII585QJnl7",
      "diff_hunk": "@@ -2699,6 +2700,178 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"\n+        \"Meanwhile, the original chainstate will complete the initial block download process in \"\n+        \"the background, eventually validating up to the block that the snapshot is based upon.\\n\\n\"\n+\n+        \"The result is a usable bitcoind instance that is current with the network tip in a \"\n+        \"matter of minutes rather than hours. UTXO snapshot are typically obtained from \"\n+        \"third-party sources (HTTP, torrent, etc.) which is reasonable since their \"\n+        \"contents are always checked by hash.\\n\\n\"\n+\n+        \"You can find more information on this process in the `assumeutxo` design \"\n+        \"document (<https://github.com/bitcoin/bitcoin/blob/master/doc/design/assumeutxo.md>).\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"coins_loaded\", \"the number of coins loaded from the snapshot\"},\n+                    {RPCResult::Type::STR_HEX, \"tip_hash\", \"the hash of the base of the snapshot\"},\n+                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n+                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was loaded from\"},\n+                }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    fs::path path{AbsPathForConfigVal(EnsureArgsman(node), fs::u8path(request.params[0].get_str()))};\n+\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    AutoFile afile{file};\n+    if (afile.IsNull()) {\n+        throw JSONRPCError(\n+            RPC_INVALID_PARAMETER,\n+            \"Couldn't open file \" + path.u8string() + \" for reading.\");\n+    }\n+\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    while (max_secs_to_wait_for_headers > 0) {\n+        snapshot_start_block = WITH_LOCK(::cs_main,\n+            return chainman.m_blockman.LookupBlockIndex(base_blockhash));\n+        max_secs_to_wait_for_headers -= 1;\n+\n+        if (!IsRPCRunning()) {\n+            throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Shutting down\");\n+        }\n+\n+        if (!snapshot_start_block) {\n+            std::this_thread::sleep_for(std::chrono::seconds(1));\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    if (!snapshot_start_block) {\n+        LogPrintf(\"[snapshot] timed out waiting for snapshot start blockheader %s\\n\",\n+            base_blockhash.ToString());\n+        throw JSONRPCError(\n+            RPC_INTERNAL_ERROR,\n+            \"Timed out waiting for base block header to appear in headers chain\");\n+    }\n+    if (!chainman.ActivateSnapshot(afile, metadata, false)) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to load UTXO snapshot \" + fs::PathToString(path));\n+    }\n+    CBlockIndex* new_tip{WITH_LOCK(::cs_main, return chainman.ActiveTip())};\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.pushKV(\"coins_loaded\", metadata.m_coins_count);\n+    result.pushKV(\"tip_hash\", new_tip->GetBlockHash().ToString());\n+    result.pushKV(\"base_height\", new_tip->nHeight);\n+    result.pushKV(\"path\", fs::PathToString(path));\n+    return result;\n+},\n+    };\n+}\n+\n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"normal\", /*optional=*/true, \"fully validated chainstate containing blocks this node has validated starting from the genesis block\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"only present if an assumeutxo snapshot is loaded. Partially validated chainstate containing blocks this node has validated starting from the snapshot. After the snapshot is validated (when the 'normal' chainstate advances far enough to validate it), this chainstate will replace and become the 'normal' chainstate.\", RPCHelpForChainstate},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;",
      "path": "src/rpc/blockchain.cpp",
      "position": 144,
      "original_position": 144,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "same?",
      "created_at": "2023-10-03T20:27:17Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344698747",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344698747"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2835,
      "original_line": 2835,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344699944",
      "pull_request_review_id": 1654978564,
      "id": 1344699944,
      "node_id": "PRRC_kwDOABII585QJn4o",
      "diff_hunk": "@@ -2699,6 +2700,178 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"\n+        \"Meanwhile, the original chainstate will complete the initial block download process in \"\n+        \"the background, eventually validating up to the block that the snapshot is based upon.\\n\\n\"\n+\n+        \"The result is a usable bitcoind instance that is current with the network tip in a \"\n+        \"matter of minutes rather than hours. UTXO snapshot are typically obtained from \"\n+        \"third-party sources (HTTP, torrent, etc.) which is reasonable since their \"\n+        \"contents are always checked by hash.\\n\\n\"\n+\n+        \"You can find more information on this process in the `assumeutxo` design \"\n+        \"document (<https://github.com/bitcoin/bitcoin/blob/master/doc/design/assumeutxo.md>).\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"coins_loaded\", \"the number of coins loaded from the snapshot\"},\n+                    {RPCResult::Type::STR_HEX, \"tip_hash\", \"the hash of the base of the snapshot\"},\n+                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n+                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was loaded from\"},\n+                }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    fs::path path{AbsPathForConfigVal(EnsureArgsman(node), fs::u8path(request.params[0].get_str()))};\n+\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    AutoFile afile{file};\n+    if (afile.IsNull()) {\n+        throw JSONRPCError(\n+            RPC_INVALID_PARAMETER,\n+            \"Couldn't open file \" + path.u8string() + \" for reading.\");\n+    }\n+\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    while (max_secs_to_wait_for_headers > 0) {\n+        snapshot_start_block = WITH_LOCK(::cs_main,\n+            return chainman.m_blockman.LookupBlockIndex(base_blockhash));\n+        max_secs_to_wait_for_headers -= 1;\n+\n+        if (!IsRPCRunning()) {\n+            throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Shutting down\");\n+        }\n+\n+        if (!snapshot_start_block) {\n+            std::this_thread::sleep_for(std::chrono::seconds(1));\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    if (!snapshot_start_block) {\n+        LogPrintf(\"[snapshot] timed out waiting for snapshot start blockheader %s\\n\",\n+            base_blockhash.ToString());\n+        throw JSONRPCError(\n+            RPC_INTERNAL_ERROR,\n+            \"Timed out waiting for base block header to appear in headers chain\");\n+    }\n+    if (!chainman.ActivateSnapshot(afile, metadata, false)) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to load UTXO snapshot \" + fs::PathToString(path));\n+    }\n+    CBlockIndex* new_tip{WITH_LOCK(::cs_main, return chainman.ActiveTip())};\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.pushKV(\"coins_loaded\", metadata.m_coins_count);\n+    result.pushKV(\"tip_hash\", new_tip->GetBlockHash().ToString());\n+    result.pushKV(\"base_height\", new_tip->nHeight);\n+    result.pushKV(\"path\", fs::PathToString(path));\n+    return result;\n+},\n+    };\n+}\n+\n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"normal\", /*optional=*/true, \"fully validated chainstate containing blocks this node has validated starting from the genesis block\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"only present if an assumeutxo snapshot is loaded. Partially validated chainstate containing blocks this node has validated starting from the snapshot. After the snapshot is validated (when the 'normal' chainstate advances far enough to validate it), this chainstate will replace and become the 'normal' chainstate.\", RPCHelpForChainstate},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    auto make_chain_data = [&](const Chainstate& cs) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n+        UniValue data(UniValue::VOBJ);\n+        if (!cs.m_chain.Tip()) {\n+            return data;\n+        }\n+        const CChain& chain = cs.m_chain;\n+        const CBlockIndex* tip = chain.Tip();\n+\n+        data.pushKV(\"blocks\",                (int)chain.Height());",
      "path": "src/rpc/blockchain.cpp",
      "position": 155,
      "original_position": 155,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Any reason for the c-style cast here?",
      "created_at": "2023-10-03T20:28:24Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344699944",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344699944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2846,
      "original_line": 2846,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344707056",
      "pull_request_review_id": 1654978564,
      "id": 1344707056,
      "node_id": "PRRC_kwDOABII585QJpnw",
      "diff_hunk": "@@ -109,7 +109,23 @@ CreateAndActivateUTXOSnapshot(\n             0 == WITH_LOCK(node.chainman->GetMutex(), return node.chainman->ActiveHeight()));\n     }\n \n-    return node.chainman->ActivateSnapshot(auto_infile, metadata, in_memory_chainstate);\n+    auto& new_active = node.chainman->ActiveChainstate();\n+    auto* tip = new_active.m_chain.Tip();\n+\n+    // Disconnect a block so that the snapshot chainstate will be ahead, otherwise\n+    // it will refuse to activate.\n+    //\n+    // TODO this is a unittest-specific hack, and we should probably rethink how to\n+    // better generate/activate snapshots in unittests.",
      "path": "src/test/util/chainstate.h",
      "position": 12,
      "original_position": 12,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: It may be better to explain why and what needs to be improved, otherwise this seems hard to act on.",
      "created_at": "2023-10-03T20:33:27Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344707056",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344707056"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344713537",
      "pull_request_review_id": 1654978564,
      "id": 1344713537,
      "node_id": "PRRC_kwDOABII585QJrNB",
      "diff_hunk": "@@ -5157,6 +5185,14 @@ bool ChainstateManager::ActivateSnapshot(\n         return false;\n     }\n \n+    {\n+        LOCK(::cs_main);\n+        if (Assert(m_active_chainstate->GetMempool())->size() > 0) {\n+            LogPrintf(\"[snapshot] can't activate a snapshot when mempool not empty\\n\");",
      "path": "src/validation.cpp",
      "position": 208,
      "original_position": 208,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could add a functional test for this?",
      "created_at": "2023-10-03T20:39:57Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344713537",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344713537"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5191,
      "original_line": 5191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344722098",
      "pull_request_review_id": 1654978564,
      "id": 1344722098,
      "node_id": "PRRC_kwDOABII585QJtSy",
      "diff_hunk": "@@ -979,3 +979,7 @@ def is_sqlite_compiled(self):\n     def is_bdb_compiled(self):\n         \"\"\"Checks whether the wallet module was compiled with BDB support.\"\"\"\n         return self.config[\"components\"].getboolean(\"USE_BDB\")\n+\n+    def has_blockfile(self, node, filenum: str):\n+        blocksdir = os.path.join(node.datadir, self.chain, 'blocks', '')",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 6,
      "original_position": 6,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: why not use `node.blocksdir_path`?",
      "created_at": "2023-10-03T20:48:30Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344722098",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344722098"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 984,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344725060",
      "pull_request_review_id": 1654978564,
      "id": 1344725060,
      "node_id": "PRRC_kwDOABII585QJuBE",
      "diff_hunk": "@@ -67,9 +67,13 @@ def main():\n         '*.sh',\n     ]\n     files = get_files(files_cmd)\n-    # remove everything that doesn't match this regex\n     reg = re.compile(r'src/[leveldb,secp256k1,minisketch]')\n-    files[:] = [file for file in files if not reg.match(file)]\n+\n+    def should_exclude(fname: str) -> bool:\n+        return bool(reg.match(fname)) or 'test_utxo_snapshots.sh' in fname",
      "path": "test/lint/lint-shell.py",
      "position": 9,
      "original_position": 9,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure about excluding this. If it is included it would be good to have it checked by `shellcheck` to aid reviewers and maintenance, unless there is a reason not to.",
      "created_at": "2023-10-03T20:51:35Z",
      "updated_at": "2023-10-03T20:53:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344725060",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344725060"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344764519",
      "pull_request_review_id": 1656162642,
      "id": 1344764519,
      "node_id": "PRRC_kwDOABII585QJ3pn",
      "diff_hunk": "@@ -67,9 +67,13 @@ def main():\n         '*.sh',\n     ]\n     files = get_files(files_cmd)\n-    # remove everything that doesn't match this regex\n     reg = re.compile(r'src/[leveldb,secp256k1,minisketch]')\n-    files[:] = [file for file in files if not reg.match(file)]\n+\n+    def should_exclude(fname: str) -> bool:\n+        return bool(reg.match(fname)) or 'test_utxo_snapshots.sh' in fname",
      "path": "test/lint/lint-shell.py",
      "position": 9,
      "original_position": 9,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344725060,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "There is a reason described in the commit message: `Add the script to the shellcheck exception list since the quoted variables rule needs to be violated in order to get bitcoind to pick up on $CHAIN_HACK_FLAGS.`",
      "created_at": "2023-10-03T21:28:43Z",
      "updated_at": "2023-10-03T21:28:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344764519",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344764519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344780851",
      "pull_request_review_id": 1656183959,
      "id": 1344780851,
      "node_id": "PRRC_kwDOABII585QJ7oz",
      "diff_hunk": "@@ -67,9 +67,13 @@ def main():\n         '*.sh',\n     ]\n     files = get_files(files_cmd)\n-    # remove everything that doesn't match this regex\n     reg = re.compile(r'src/[leveldb,secp256k1,minisketch]')\n-    files[:] = [file for file in files if not reg.match(file)]\n+\n+    def should_exclude(fname: str) -> bool:\n+        return bool(reg.match(fname)) or 'test_utxo_snapshots.sh' in fname",
      "path": "test/lint/lint-shell.py",
      "position": 9,
      "original_position": 9,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344725060,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It is possible to put a single exclude in the line prior to the violation instead of excluding the whole file",
      "created_at": "2023-10-03T21:48:16Z",
      "updated_at": "2023-10-03T21:48:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1344780851",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1344780851"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345406481",
      "pull_request_review_id": 1656957470,
      "id": 1345406481,
      "node_id": "PRRC_kwDOABII585QMUYR",
      "diff_hunk": "@@ -5259,30 +5248,48 @@ bool ChainstateManager::ActivateSnapshot(\n             }\n         }\n         return false;\n-    }\n+    };\n \n-    {\n+    if (!this->PopulateAndValidateSnapshot(*snapshot_chainstate, coins_file, metadata)) {\n         LOCK(::cs_main);\n-        assert(!m_snapshot_chainstate);\n-        m_snapshot_chainstate.swap(snapshot_chainstate);\n-        const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n-        assert(chaintip_loaded);\n-\n-        // Transfer possession of the mempool to the snapshot chianstate.\n-        // Mempool is empty at this point because we're still in IBD.\n-        Assert(m_active_chainstate->m_mempool->size() == 0);\n-        Assert(!m_snapshot_chainstate->m_mempool);\n-        m_snapshot_chainstate->m_mempool = m_active_chainstate->m_mempool;\n-        m_active_chainstate->m_mempool = nullptr;\n-        m_active_chainstate = m_snapshot_chainstate.get();\n-        m_blockman.m_snapshot_height = this->GetSnapshotBaseHeight();\n-\n-        LogPrintf(\"[snapshot] successfully activated snapshot %s\\n\", base_blockhash.ToString());\n-        LogPrintf(\"[snapshot] (%.2f MB)\\n\",\n-            m_snapshot_chainstate->CoinsTip().DynamicMemoryUsage() / (1000 * 1000));\n+        return cleanup_bad_snapshot(\"population failed\");\n+    }\n \n-        this->MaybeRebalanceCaches();\n+    LOCK(::cs_main);  // cs_main required for rest of snapshot activation.\n+\n+    // Do a final check to ensure that the snapshot chainstate is actually a more\n+    // work chain than the active chainstate; a user could have loaded a snapshot\n+    // very late in the IBD process, and we wouldn't want to load a useless chainstate.\n+    if (!CBlockIndexWorkComparator()(ActiveTip(), snapshot_chainstate->m_chain.Tip())) {\n+        return cleanup_bad_snapshot(\"work does not exceed active chainstate\");\n+    }\n+    // If not in-memory, persist the base blockhash for use during subsequent\n+    // initialization.\n+    if (!in_memory) {\n+        if (!node::WriteSnapshotBaseBlockhash(*snapshot_chainstate)) {\n+            return cleanup_bad_snapshot(\"could not write base blockhash\");\n+        }\n     }\n+\n+    assert(!m_snapshot_chainstate);\n+    m_snapshot_chainstate.swap(snapshot_chainstate);\n+    const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip();\n+    assert(chaintip_loaded);\n+\n+    // Transfer possession of the mempool to the snapshot chainstate.\n+    // Mempool is empty at this point because we're still in IBD.",
      "path": "src/validation.cpp",
      "position": 283,
      "original_position": 75,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "62ac519e718eb7a31dca1102a96ba219fbc7f95d",
      "in_reply_to_id": 1343985564,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Mmm, I'm not sure what I was referring too.",
      "created_at": "2023-10-04T08:27:20Z",
      "updated_at": "2023-10-04T08:27:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1345406481",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345406481"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5288,
      "original_line": 5280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345866623",
      "pull_request_review_id": 1657642134,
      "id": 1345866623,
      "node_id": "PRRC_kwDOABII585QOEt_",
      "diff_hunk": "@@ -257,40 +258,56 @@ void BlockManager::PruneOneBlockFile(const int fileNumber)\n     m_dirty_fileinfo.insert(fileNumber);\n }\n \n-void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nManualPruneHeight, int chain_tip_height)\n+void BlockManager::FindFilesToPruneManual(\n+    std::set<int>& setFilesToPrune,\n+    int nManualPruneHeight,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     assert(IsPruneMode() && nManualPruneHeight > 0);\n \n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0) {\n+    if (chain.m_chain.Height() < 0) {\n         return;\n     }\n \n-    // last block to prune is the lesser of (user-specified height, MIN_BLOCKS_TO_KEEP from the tip)\n-    unsigned int nLastBlockWeCanPrune = std::min((unsigned)nManualPruneHeight, chain_tip_height - MIN_BLOCKS_TO_KEEP);\n+    const auto [min_block_to_prune, last_block_can_prune] = chainman.GetPruneRange(chain, nManualPruneHeight);\n+\n     int count = 0;\n-    for (int fileNumber = 0; fileNumber < m_last_blockfile; fileNumber++) {\n-        if (m_blockfile_info[fileNumber].nSize == 0 || m_blockfile_info[fileNumber].nHeightLast > nLastBlockWeCanPrune) {\n+    for (int fileNumber = 0; fileNumber < this->MaxBlockfileNum(); fileNumber++) {\n+        const auto& fileinfo = m_blockfile_info[fileNumber];\n+        if (fileinfo.nSize == 0 || fileinfo.nHeightLast > (unsigned)last_block_can_prune || fileinfo.nHeightFirst < (unsigned)min_block_to_prune) {\n             continue;\n         }\n+\n         PruneOneBlockFile(fileNumber);\n         setFilesToPrune.insert(fileNumber);\n         count++;\n     }\n-    LogPrintf(\"Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\", nLastBlockWeCanPrune, count);\n+    LogPrintf(\"[%s] Prune (Manual): prune_height=%d removed %d blk/rev pairs\\n\",\n+        chain.GetRole(), last_block_can_prune, count);\n }\n \n-void BlockManager::FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd)\n+void BlockManager::FindFilesToPrune(\n+    std::set<int>& setFilesToPrune,\n+    int last_prune,\n+    const Chainstate& chain,\n+    ChainstateManager& chainman)\n {\n     LOCK2(cs_main, cs_LastBlockFile);\n-    if (chain_tip_height < 0 || GetPruneTarget() == 0) {\n+    // Distribute our -prune budget over all chainstates.\n+    const auto target = std::max(\n+        MIN_DISK_SPACE_FOR_BLOCK_FILES, GetPruneTarget() / chainman.GetAll().size());\n+\n+    if (chain.m_chain.Height() < 0 || target == 0) {",
      "path": "src/node/blockstorage.cpp",
      "position": 62,
      "original_position": 62,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344605396,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I guess this was or is dead code to begin with?",
      "created_at": "2023-10-04T14:11:30Z",
      "updated_at": "2023-10-04T14:11:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1345866623",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345866623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 302,
      "original_line": 302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346097648",
      "pull_request_review_id": 1657958289,
      "id": 1346097648,
      "node_id": "PRRC_kwDOABII585QO9Hw",
      "diff_hunk": "@@ -0,0 +1,246 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test for assumeutxo, a means of quickly bootstrapping a node using\n+a serialized version of the UTXO set at a certain height, which corresponds\n+to a hash that has been compiled into bitcoind.\n+\n+The assumeutxo value generated and used here is committed to in\n+`CRegTestParams::m_assumeutxo_data` in `src/chainparams.cpp`.\n+\n+## Possible test improvements\n+\n+- TODO: test submitting a transaction and verifying it appears in mempool\n+- TODO: test what happens with -reindex and -reindex-chainstate before the\n+      snapshot is validated, and make sure it's deleted successfully.\n+\n+Interesting test cases could be loading an assumeutxo snapshot file with:\n+\n+- TODO: An invalid hash\n+- TODO: Valid hash but invalid snapshot file (bad coin height or truncated file or\n+      bad other serialization)\n+- TODO: Valid snapshot file, but referencing an unknown block\n+- TODO: Valid snapshot file, but referencing a snapshot block that turns out to be\n+      invalid, or has an invalid parent\n+- TODO: Valid snapshot file and snapshot block, but the block is not on the\n+      most-work chain\n+\n+Interesting starting states could be loading a snapshot when the current chain tip is:\n+\n+- TODO: An ancestor of snapshot block\n+- TODO: Not an ancestor of the snapshot block but has less work\n+- TODO: The snapshot block\n+- TODO: A descendant of the snapshot block\n+- TODO: Not an ancestor or a descendant of the snapshot block and has more work\n+\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, wait_until_helper\n+\n+START_HEIGHT = 199\n+SNAPSHOT_BASE_HEIGHT = 299\n+FINAL_HEIGHT = 399\n+COMPLETE_IDX = {'synced': True, 'best_block_height': FINAL_HEIGHT}\n+\n+\n+class AssumeutxoTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        \"\"\"Use the pregenerated, deterministic chain up to height 199.\"\"\"\n+        self.num_nodes = 3\n+        self.rpc_timeout = 120\n+        self.extra_args = [\n+            [],\n+            [\"-fastprune\", \"-prune=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+            [\"-txindex=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+        ]\n+\n+    def setup_network(self):\n+        \"\"\"Start with the nodes disconnected so that one can generate a snapshot\n+        including blocks the other hasn't yet seen.\"\"\"\n+        self.add_nodes(3)\n+        self.start_nodes(extra_args=self.extra_args)\n+\n+    def run_test(self):\n+        \"\"\"\n+        Bring up two (disconnected) nodes, mine some new blocks on the first,\n+        and generate a UTXO snapshot.\n+\n+        Load the snapshot into the second, ensure it syncs to tip and completes\n+        background validation when connected to the first.\n+        \"\"\"\n+        n0 = self.nodes[0]\n+        n1 = self.nodes[1]\n+        n2 = self.nodes[2]\n+\n+        # Mock time for a deterministic chain\n+        for n in self.nodes:\n+            n.setmocktime(n.getblockheader(n.getbestblockhash())['time'])\n+\n+        self.sync_blocks()\n+\n+        def no_sync():\n+            pass\n+\n+        # Generate a series of blocks that `n0` will have in the snapshot,\n+        # but that n1 doesn't yet see. In order for the snapshot to activate,\n+        # though, we have to ferry over the new headers to n1 so that it\n+        # isn't waiting forever to see the header of the snapshot's base block\n+        # while disconnected from n0.\n+        for i in range(100):\n+            self.generate(n0, nblocks=1, sync_fun=no_sync)\n+            newblock = n0.getblock(n0.getbestblockhash(), 0)\n+\n+            # make n1 aware of the new header, but don't give it the block.\n+            n1.submitheader(newblock)\n+            n2.submitheader(newblock)\n+\n+        # Ensure everyone is seeing the same headers.\n+        for n in self.nodes:\n+            assert_equal(n.getblockchaininfo()[\"headers\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        self.log.info(\"-- Testing assumeutxo + some indexes + pruning\")\n+\n+        assert_equal(n0.getblockcount(), SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockcount(), START_HEIGHT)\n+\n+        self.log.info(f\"Creating a UTXO snapshot at height {SNAPSHOT_BASE_HEIGHT}\")\n+        dump_output = n0.dumptxoutset('utxos.dat')\n+\n+        assert_equal(\n+            dump_output['txoutset_hash'],\n+            'ef45ccdca5898b6c2145e4581d2b88c56564dd389e4bd75a1aaf6961d3edd3c0')\n+        assert_equal(dump_output['nchaintx'], 300)\n+        assert_equal(n0.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        # Mine more blocks on top of the snapshot that n1 hasn't yet seen. This\n+        # will allow us to test n1's sync-to-tip on top of a snapshot.\n+        self.generate(n0, nblocks=100, sync_fun=no_sync)\n+\n+        assert_equal(n0.getblockcount(), FINAL_HEIGHT)\n+        assert_equal(n1.getblockcount(), START_HEIGHT)\n+\n+        assert_equal(n0.getblockchaininfo()[\"blocks\"], FINAL_HEIGHT)\n+\n+        self.log.info(f\"Loading snapshot into second node from {dump_output['path']}\")\n+        loaded = n1.loadtxoutset(dump_output['path'])\n+        assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n+\n+        monitor = n1.getchainstates()\n+        assert_equal(monitor['normal']['blocks'], START_HEIGHT)\n+        assert_equal(monitor['snapshot']['blocks'], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(monitor['snapshot']['snapshot_blockhash'], dump_output['base_hash'])\n+\n+        assert_equal(n1.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\n+\n+        PAUSE_HEIGHT = FINAL_HEIGHT - 40\n+\n+        self.log.info(\"Restarting node to stop at height %d\", PAUSE_HEIGHT)\n+        self.restart_node(1, extra_args=[\n+            f\"-stopatheight={PAUSE_HEIGHT}\", *self.extra_args[1]])\n+\n+        # Finally connect the nodes and let them sync.\n+        self.connect_nodes(0, 1)\n+\n+        n1.wait_until_stopped(timeout=5)\n+\n+        self.log.info(\"Checking that blocks are segmented on disk\")\n+        assert self.has_blockfile(n1, \"00000\"), \"normal blockfile missing\"\n+        assert self.has_blockfile(n1, \"00001\"), \"assumed blockfile missing\"\n+        assert not self.has_blockfile(n1, \"00002\"), \"too many blockfiles\"\n+\n+        self.log.info(\"Restarted node before snapshot validation completed, reloading...\")\n+        self.restart_node(1, extra_args=self.extra_args[1])\n+        self.connect_nodes(0, 1)\n+\n+        self.log.info(f\"Ensuring snapshot chain syncs to tip. ({FINAL_HEIGHT})\")\n+        wait_until_helper(lambda: n1.getchainstates()['snapshot']['blocks'] == FINAL_HEIGHT)\n+        self.sync_blocks(nodes=(n0, n1))\n+\n+        self.log.info(\"Ensuring background validation completes\")\n+        # N.B.: the `snapshot` key disappears once the background validation is complete.\n+        wait_until_helper(lambda: not n1.getchainstates().get('snapshot'))",
      "path": "test/functional/feature_assumeutxo.py",
      "position": 164,
      "original_position": 164,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "42cae39356fd20d521aaf99aff1ed85856f3c9f3",
      "in_reply_to_id": 1343167013,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This might have been related to #28589, if not #28586 can be reopened to address this",
      "created_at": "2023-10-04T15:45:12Z",
      "updated_at": "2023-10-06T16:40:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1346097648",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346097648"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 164,
      "original_line": 164,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348475707",
      "pull_request_review_id": 1661470533,
      "id": 1348475707,
      "node_id": "PRRC_kwDOABII585QYBs7",
      "diff_hunk": "@@ -0,0 +1,7 @@\n+Pruning\n+-------\n+\n+When using assumeutxo with `-prune`, the prune budget may be exceeded if it is set\n+lower than 1100MB (i.e. `MIN_DISK_SPACE_FOR_BLOCK_FILES * 2`). Prune budget is normally",
      "path": "doc/release-notes-27596.md",
      "position": 5,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1019c399825b0d512c1fd751c376d46fed4992b9",
      "in_reply_to_id": 1342014745,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In general a user for who 0.5 GB makes a difference is going to have a problem. The downloaded snapshot itself is multiple GB and the chainstate (even without assumeutxo) is growing at 0.5 GB per month. We could add a hint that it's safe to delete `utxo-xxxxxx.dat` once the RPC returns (if there's no crash).",
      "created_at": "2023-10-06T09:28:30Z",
      "updated_at": "2023-10-06T14:21:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348475707",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348475707"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348772716",
      "pull_request_review_id": 1661470533,
      "id": 1348772716,
      "node_id": "PRRC_kwDOABII585QZKNs",
      "diff_hunk": "@@ -250,8 +259,19 @@ bool BaseIndex::Rewind(const CBlockIndex* current_tip, const CBlockIndex* new_ti\n     return true;\n }\n \n-void BaseIndex::BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex)\n+void BaseIndex::BlockConnected(ChainstateRole role, const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex)\n {\n+    // Ignore events from the assumed-valid chain; we will process its blocks\n+    // (sequentially) after it is fully verified by the background chainstate. This\n+    // is to avoid any out-of-order indexing.\n+    //\n+    // TODO at some point we could parameterize whether a particular index can be",
      "path": "src/index/base.cpp",
      "position": 56,
      "original_position": 56,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1343998883,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "373cf91531b84bfdd06fdf8abf4dca228029ce6b being able to build out of order is necessary for a pruned node.\r\n\r\n[note: currently running an IBD on mainnet with `-prune=2000` and `-blockfilterindex=1` to see what happens… I'm guessing it will be missing a range of blocks above the snapshot? If so then we should either refuse to load a snapshot or delay pruning with this combination. If we delay pruning, we should warn the user that enabling the index will temporarily require a lot of extra storage (x GB per month of how old the snapshot is)]",
      "created_at": "2023-10-06T14:08:58Z",
      "updated_at": "2023-10-06T14:37:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348772716",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348772716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 268,
      "original_line": 268,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348806713",
      "pull_request_review_id": 1662004717,
      "id": 1348806713,
      "node_id": "PRRC_kwDOABII585QZSg5",
      "diff_hunk": "@@ -250,8 +259,19 @@ bool BaseIndex::Rewind(const CBlockIndex* current_tip, const CBlockIndex* new_ti\n     return true;\n }\n \n-void BaseIndex::BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex)\n+void BaseIndex::BlockConnected(ChainstateRole role, const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex)\n {\n+    // Ignore events from the assumed-valid chain; we will process its blocks\n+    // (sequentially) after it is fully verified by the background chainstate. This\n+    // is to avoid any out-of-order indexing.\n+    //\n+    // TODO at some point we could parameterize whether a particular index can be",
      "path": "src/index/base.cpp",
      "position": 56,
      "original_position": 56,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1343998883,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it syncs ok, but just doesn't prune anything in the snapshot chainstate until the background chainstate has caught up (because of the prune locks introduced in #21726). This should probably be mentioned in some documentation (because users could run into disk space problems with it), see my comment below.",
      "created_at": "2023-10-06T14:35:21Z",
      "updated_at": "2023-10-06T14:35:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348806713",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348806713"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 268,
      "original_line": 268,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348929759",
      "pull_request_review_id": 1662228499,
      "id": 1348929759,
      "node_id": "PRRC_kwDOABII585QZwjf",
      "diff_hunk": "@@ -0,0 +1,246 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2021 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test for assumeutxo, a means of quickly bootstrapping a node using\n+a serialized version of the UTXO set at a certain height, which corresponds\n+to a hash that has been compiled into bitcoind.\n+\n+The assumeutxo value generated and used here is committed to in\n+`CRegTestParams::m_assumeutxo_data` in `src/chainparams.cpp`.\n+\n+## Possible test improvements\n+\n+- TODO: test submitting a transaction and verifying it appears in mempool\n+- TODO: test what happens with -reindex and -reindex-chainstate before the\n+      snapshot is validated, and make sure it's deleted successfully.\n+\n+Interesting test cases could be loading an assumeutxo snapshot file with:\n+\n+- TODO: An invalid hash\n+- TODO: Valid hash but invalid snapshot file (bad coin height or truncated file or\n+      bad other serialization)\n+- TODO: Valid snapshot file, but referencing an unknown block\n+- TODO: Valid snapshot file, but referencing a snapshot block that turns out to be\n+      invalid, or has an invalid parent\n+- TODO: Valid snapshot file and snapshot block, but the block is not on the\n+      most-work chain\n+\n+Interesting starting states could be loading a snapshot when the current chain tip is:\n+\n+- TODO: An ancestor of snapshot block\n+- TODO: Not an ancestor of the snapshot block but has less work\n+- TODO: The snapshot block\n+- TODO: A descendant of the snapshot block\n+- TODO: Not an ancestor or a descendant of the snapshot block and has more work\n+\n+\"\"\"\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal, wait_until_helper\n+\n+START_HEIGHT = 199\n+SNAPSHOT_BASE_HEIGHT = 299\n+FINAL_HEIGHT = 399\n+COMPLETE_IDX = {'synced': True, 'best_block_height': FINAL_HEIGHT}\n+\n+\n+class AssumeutxoTest(BitcoinTestFramework):\n+\n+    def set_test_params(self):\n+        \"\"\"Use the pregenerated, deterministic chain up to height 199.\"\"\"\n+        self.num_nodes = 3\n+        self.rpc_timeout = 120\n+        self.extra_args = [\n+            [],\n+            [\"-fastprune\", \"-prune=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+            [\"-txindex=1\", \"-blockfilterindex=1\", \"-coinstatsindex=1\"],\n+        ]\n+\n+    def setup_network(self):\n+        \"\"\"Start with the nodes disconnected so that one can generate a snapshot\n+        including blocks the other hasn't yet seen.\"\"\"\n+        self.add_nodes(3)\n+        self.start_nodes(extra_args=self.extra_args)\n+\n+    def run_test(self):\n+        \"\"\"\n+        Bring up two (disconnected) nodes, mine some new blocks on the first,\n+        and generate a UTXO snapshot.\n+\n+        Load the snapshot into the second, ensure it syncs to tip and completes\n+        background validation when connected to the first.\n+        \"\"\"\n+        n0 = self.nodes[0]\n+        n1 = self.nodes[1]\n+        n2 = self.nodes[2]\n+\n+        # Mock time for a deterministic chain\n+        for n in self.nodes:\n+            n.setmocktime(n.getblockheader(n.getbestblockhash())['time'])\n+\n+        self.sync_blocks()\n+\n+        def no_sync():\n+            pass",
      "path": "test/functional/feature_assumeutxo.py",
      "position": 84,
      "original_position": 84,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "42cae39356fd20d521aaf99aff1ed85856f3c9f3",
      "in_reply_to_id": 1343112529,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is addressed in #28562",
      "created_at": "2023-10-06T16:14:53Z",
      "updated_at": "2023-10-06T16:14:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348929759",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348929759"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": 83,
      "original_start_line": 83,
      "start_side": "RIGHT",
      "line": 84,
      "original_line": 84,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348930102",
      "pull_request_review_id": 1662229164,
      "id": 1348930102,
      "node_id": "PRRC_kwDOABII585QZwo2",
      "diff_hunk": "@@ -5342,6 +5349,14 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n \n     const AssumeutxoData& au_data = *maybe_au_data;\n \n+    // This work comparison is a duplicate check with the one performed later in\n+    // ActivateSnapshot(), but is done so that we avoid doing the long work of staging\n+    // a snapshot that isn't actually usable.\n+    if (WITH_LOCK(::cs_main, return !CBlockIndexWorkComparator()(ActiveTip(), snapshot_start_block))) {\n+        LogPrintf(\"[snapshot] activation failed - height does not exceed active chainstate\\n\");",
      "path": "src/validation.cpp",
      "position": 325,
      "original_position": 99,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "62ac519e718eb7a31dca1102a96ba219fbc7f95d",
      "in_reply_to_id": 1343112029,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> nit: work, not height.\r\n\r\nThis is addressed in #28562",
      "created_at": "2023-10-06T16:15:09Z",
      "updated_at": "2023-10-06T16:15:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348930102",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348930102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5364,
      "original_line": 5356,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348934486",
      "pull_request_review_id": 1662237980,
      "id": 1348934486,
      "node_id": "PRRC_kwDOABII585QZxtW",
      "diff_hunk": "@@ -2799,6 +2799,79 @@ static RPCHelpMan loadtxoutset()\n     };\n }\n \n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"normal\", /*optional=*/true, \"fully validated chainstate containing blocks this node has validated starting from the genesis block\", RPCHelpForChainstate},",
      "path": "src/rpc/blockchain.cpp",
      "position": 130,
      "original_position": 23,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "0f64bac6030334d798ae205cd7af4bf248feddd9",
      "in_reply_to_id": 1341996092,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not relevant anymore due to #28590",
      "created_at": "2023-10-06T16:19:10Z",
      "updated_at": "2023-10-06T16:19:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348934486",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348934486"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2821,
      "original_line": 2821,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348935011",
      "pull_request_review_id": 1662238980,
      "id": 1348935011,
      "node_id": "PRRC_kwDOABII585QZx1j",
      "diff_hunk": "@@ -69,6 +69,7 @@\n #include <optional>\n #include <string>\n #include <utility>\n+#include <tuple>",
      "path": "src/validation.cpp",
      "position": 12,
      "original_position": 4,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1019c399825b0d512c1fd751c376d46fed4992b9",
      "in_reply_to_id": 1341985254,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is addressed in #28562",
      "created_at": "2023-10-06T16:19:38Z",
      "updated_at": "2023-10-06T16:19:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348935011",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348935011"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 72,
      "original_line": 72,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348939181",
      "pull_request_review_id": 1662245295,
      "id": 1348939181,
      "node_id": "PRRC_kwDOABII585QZy2t",
      "diff_hunk": "@@ -4765,6 +4765,10 @@ void ChainstateManager::CheckBlockIndex()\n     CBlockIndex* pindexFirstAssumeValid = nullptr; // Oldest ancestor of pindex which has BLOCK_ASSUMED_VALID\n     while (pindex != nullptr) {\n         nNodes++;\n+        if (pindex->pprev && pindex->nTx > 0) {\n+            // nChainTx should increase monotonically\n+            assert(pindex->pprev->nChainTx <= pindex->nChainTx);",
      "path": "src/validation.cpp",
      "position": 175,
      "original_position": 15,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "9df91113b8bbab8c98924bef61da388a8141b4e6",
      "in_reply_to_id": 1310950827,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is addressed in #28562",
      "created_at": "2023-10-06T16:23:29Z",
      "updated_at": "2023-10-06T16:23:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348939181",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348939181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 4843,
      "original_line": 4843,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348959202",
      "pull_request_review_id": 1662278300,
      "id": 1348959202,
      "node_id": "PRRC_kwDOABII585QZ3vi",
      "diff_hunk": "@@ -705,15 +724,34 @@ void BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n         // have populated `m_blockfile_info` via LoadBlockIndexDB().\n         return;\n     }\n-    assert(static_cast<int>(m_blockfile_info.size()) > m_last_blockfile);\n+    assert(static_cast<int>(m_blockfile_info.size()) > blockfile_num);\n \n-    FlatFilePos block_pos_old(m_last_blockfile, m_blockfile_info[m_last_blockfile].nSize);\n+    FlatFilePos block_pos_old(blockfile_num, m_blockfile_info[blockfile_num].nSize);\n     if (!BlockFileSeq().Flush(block_pos_old, fFinalize)) {\n         m_opts.notifications.flushError(\"Flushing block file to disk failed. This is likely the result of an I/O error.\");\n     }\n     // we do not always flush the undo file, as the chain tip may be lagging behind the incoming blocks,\n     // e.g. during IBD or a sync after a node going offline\n-    if (!fFinalize || finalize_undo) FlushUndoFile(m_last_blockfile, finalize_undo);\n+    if (!fFinalize || finalize_undo) FlushUndoFile(blockfile_num, finalize_undo);\n+}\n+\n+BlockfileType BlockManager::BlockfileTypeForHeight(int height)\n+{\n+    if (!m_snapshot_height) {\n+        return BlockfileType::NORMAL;\n+    }\n+    return (height >= *m_snapshot_height) ? BlockfileType::ASSUMED : BlockfileType::NORMAL;\n+}\n+\n+void BlockManager::FlushChainstateBlockFile(int tip_height)\n+{\n+    LOCK(cs_LastBlockFile);\n+    auto& cursor = m_blockfile_cursors[BlockfileTypeForHeight(tip_height)];\n+    if (cursor) {\n+        // The cursor may not exist after a snapshot has been loaded but before any\n+        // blocks have been downloaded.\n+        return FlushBlockFile(cursor->file_num, /*fFinalize=*/false, /*finalize_undo=*/false);",
      "path": "src/node/blockstorage.cpp",
      "position": 297,
      "original_position": 171,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "bd770ff59075fa2fd0441311ef1c02439ed68fdd",
      "in_reply_to_id": 1332579498,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this is addressed in #28562",
      "created_at": "2023-10-06T16:34:33Z",
      "updated_at": "2023-10-06T16:34:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348959202",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348959202"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 762,
      "original_line": 762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348960162",
      "pull_request_review_id": 1662280003,
      "id": 1348960162,
      "node_id": "PRRC_kwDOABII585QZ3-i",
      "diff_hunk": "@@ -185,7 +185,14 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     chainman.InitializeChainstate(options.mempool);\n \n     // Load a chain created from a UTXO snapshot, if any exist.\n-    chainman.DetectSnapshotChainstate(options.mempool);\n+    bool has_snapshot = chainman.DetectSnapshotChainstate(options.mempool);",
      "path": "src/node/chainstate.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "c711ca186f8d8a28810be0beedcb615ddcf93163",
      "in_reply_to_id": 1342010458,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is addressed in #28562",
      "created_at": "2023-10-06T16:35:40Z",
      "updated_at": "2023-10-06T16:35:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348960162",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348960162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 188,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348961870",
      "pull_request_review_id": 1662283000,
      "id": 1348961870,
      "node_id": "PRRC_kwDOABII585QZ4ZO",
      "diff_hunk": "@@ -185,7 +185,14 @@ ChainstateLoadResult LoadChainstate(ChainstateManager& chainman, const CacheSize\n     chainman.InitializeChainstate(options.mempool);\n \n     // Load a chain created from a UTXO snapshot, if any exist.\n-    chainman.DetectSnapshotChainstate(options.mempool);\n+    bool has_snapshot = chainman.DetectSnapshotChainstate(options.mempool);\n+\n+    if (has_snapshot && (options.reindex || options.reindex_chainstate)) {\n+        LogPrintf(\"[snapshot] deleting snapshot chainstate due to reindexing\\n\");",
      "path": "src/node/chainstate.cpp",
      "position": 8,
      "original_position": 8,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "c711ca186f8d8a28810be0beedcb615ddcf93163",
      "in_reply_to_id": 1342010737,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is addressed in #28562",
      "created_at": "2023-10-06T16:37:26Z",
      "updated_at": "2023-10-06T16:37:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348961870",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348961870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 191,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348962182",
      "pull_request_review_id": 1662283483,
      "id": 1348962182,
      "node_id": "PRRC_kwDOABII585QZ4eG",
      "diff_hunk": "@@ -1917,9 +1917,25 @@ void PeerManagerImpl::BlockConnected(\n     const std::shared_ptr<const CBlock>& pblock,\n     const CBlockIndex* pindex)\n {\n-    m_orphanage.EraseForBlock(*pblock);\n+    // Update this for all chainstate roles so that we don't mistakenly see peers\n+    // helping us do background IBD as having a stale tip.\n     m_last_tip_update = GetTime<std::chrono::seconds>();\n \n+    // In case the dynamic timeout was doubled once or more, reduce it slowly back to its default value\n+    auto stalling_timeout = m_block_stalling_timeout.load();\n+    Assume(stalling_timeout >= BLOCK_STALLING_TIMEOUT_DEFAULT);\n+    if (stalling_timeout != BLOCK_STALLING_TIMEOUT_DEFAULT) {\n+        const auto new_timeout = std::max(std::chrono::duration_cast<std::chrono::seconds>(stalling_timeout * 0.85), BLOCK_STALLING_TIMEOUT_DEFAULT);\n+        if (m_block_stalling_timeout.compare_exchange_strong(stalling_timeout, new_timeout)) {\n+            LogPrint(BCLog::NET, \"Decreased stalling timeout to %d seconds\\n\", count_seconds(new_timeout));\n+        }\n+    }\n+\n+    if (role == ChainstateRole::BACKGROUND) {",
      "path": "src/net_processing.cpp",
      "position": 158,
      "original_position": 19,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "1fffdd76a1bca908f55d73b64983655b14cf7432",
      "in_reply_to_id": 1342013328,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is addressed in #28562",
      "created_at": "2023-10-06T16:37:46Z",
      "updated_at": "2023-10-06T16:37:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348962182",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348962182"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1934,
      "original_line": 1934,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348963687",
      "pull_request_review_id": 1662286001,
      "id": 1348963687,
      "node_id": "PRRC_kwDOABII585QZ41n",
      "diff_hunk": "@@ -848,9 +848,6 @@ class ChainstateManager\n     //! Points to either the ibd or snapshot chainstate; indicates our\n     //! most-work chain.\n     //!\n-    //! Once this pointer is set to a corresponding chainstate, it will not",
      "path": "src/validation.h",
      "position": 25,
      "original_position": 4,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "c711ca186f8d8a28810be0beedcb615ddcf93163",
      "in_reply_to_id": 1342795165,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is addressed in #28562",
      "created_at": "2023-10-06T16:39:34Z",
      "updated_at": "2023-10-06T16:39:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348963687",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348963687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 851,
      "original_line": 851,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348963927",
      "pull_request_review_id": 1662286433,
      "id": 1348963927,
      "node_id": "PRRC_kwDOABII585QZ45X",
      "diff_hunk": "@@ -708,23 +727,43 @@ bool BlockManager::FlushBlockFile(bool fFinalize, bool finalize_undo)\n         // have populated `m_blockfile_info` via LoadBlockIndexDB().\n         return true;\n     }\n-    assert(static_cast<int>(m_blockfile_info.size()) > m_last_blockfile);\n+    assert(static_cast<int>(m_blockfile_info.size()) > blockfile_num);\n \n-    FlatFilePos block_pos_old(m_last_blockfile, m_blockfile_info[m_last_blockfile].nSize);\n+    FlatFilePos block_pos_old(blockfile_num, m_blockfile_info[blockfile_num].nSize);\n     if (!BlockFileSeq().Flush(block_pos_old, fFinalize)) {\n         m_opts.notifications.flushError(\"Flushing block file to disk failed. This is likely the result of an I/O error.\");\n         success = false;\n     }\n     // we do not always flush the undo file, as the chain tip may be lagging behind the incoming blocks,\n     // e.g. during IBD or a sync after a node going offline\n     if (!fFinalize || finalize_undo) {\n-        if (!FlushUndoFile(m_last_blockfile, finalize_undo)) {\n+        if (!FlushUndoFile(blockfile_num, finalize_undo)) {\n             success = false;\n         }\n     }\n     return success;\n }\n \n+BlockfileType BlockManager::BlockfileTypeForHeight(int height)\n+{\n+    if (!m_snapshot_height) {\n+        return BlockfileType::NORMAL;\n+    }\n+    return (height >= *m_snapshot_height) ? BlockfileType::ASSUMED : BlockfileType::NORMAL;\n+}\n+\n+bool BlockManager::FlushChainstateBlockFile(int tip_height)\n+{\n+    LOCK(cs_LastBlockFile);\n+    auto& cursor = m_blockfile_cursors[BlockfileTypeForHeight(tip_height)];\n+    if (cursor) {\n+        // The cursor may not exist after a snapshot has been loaded but before any\n+        // blocks have been downloaded.\n+        return FlushBlockFile(cursor->file_num, /*fFinalize=*/false, /*finalize_undo=*/false);\n+    }\n+    return false;",
      "path": "src/node/blockstorage.cpp",
      "position": 299,
      "original_position": 179,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "7fcd21544a333ffdf1910b65c573579860be6a36",
      "in_reply_to_id": 1342809382,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is addressed in #28562",
      "created_at": "2023-10-06T16:39:49Z",
      "updated_at": "2023-10-06T16:39:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348963927",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348963927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 764,
      "original_line": 764,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348968869",
      "pull_request_review_id": 1662294447,
      "id": 1348968869,
      "node_id": "PRRC_kwDOABII585QZ6Gl",
      "diff_hunk": "@@ -2699,6 +2700,105 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"",
      "path": "src/rpc/blockchain.cpp",
      "position": 19,
      "original_position": 19,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "ce585a9a158476b0ad3296477b922e79f308e795",
      "in_reply_to_id": 1343846377,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I am dropping the reference in #28562 for now since that was also requested in IRC.",
      "created_at": "2023-10-06T16:44:45Z",
      "updated_at": "2023-10-06T16:44:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348968869",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348968869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2710,
      "original_line": 2710,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348971899",
      "pull_request_review_id": 1662299684,
      "id": 1348971899,
      "node_id": "PRRC_kwDOABII585QZ617",
      "diff_hunk": "@@ -2699,6 +2700,105 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"\n+        \"Meanwhile, the original chainstate will complete the initial block download process in \"\n+        \"the background, eventually validating up to the block that the snapshot is based upon.\\n\\n\"\n+\n+        \"The result is a usable bitcoind instance that is current with the network tip in a \"\n+        \"matter of minutes rather than hours. UTXO snapshot are typically obtained from \"\n+        \"third-party sources (HTTP, torrent, etc.) which is reasonable since their \"",
      "path": "src/rpc/blockchain.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "ce585a9a158476b0ad3296477b922e79f308e795",
      "in_reply_to_id": 1343848899,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If you meant to replace the first test snipped with the second one, I'm not sure how this improves the docs. It just makes it less precise but not less of an advertisement? ",
      "created_at": "2023-10-06T16:48:09Z",
      "updated_at": "2023-10-06T16:48:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348971899",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348971899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2716,
      "original_line": 2716,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348974421",
      "pull_request_review_id": 1662304317,
      "id": 1348974421,
      "node_id": "PRRC_kwDOABII585QZ7dV",
      "diff_hunk": "@@ -0,0 +1,28 @@\n+Pruning\n+-------\n+\n+When using assumeutxo with `-prune`, the prune budget may be exceeded if it is set\n+lower than 1100MB (i.e. `MIN_DISK_SPACE_FOR_BLOCK_FILES * 2`). Prune budget is normally\n+split evenly across each chainstate, unless the resulting prune budget per chainstate\n+is beneath `MIN_DISK_SPACE_FOR_BLOCK_FILES` in which case that value will be used.\n+\n+RPC\n+---\n+\n+`loadtxoutset` has been added, which allows loading a UTXO snapshot of the format\n+generated by `dumptxoutset`. Once this snapshot is loaded, its contents will be\n+deserialized into a second chainstate data structure, which is then used to sync to\n+the network's tip under a security model very much like `assumevalid`.",
      "path": "doc/release-notes-27596.md",
      "position": 15,
      "original_position": 15,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344006030,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is addressed in #28562 (dropping the reference)",
      "created_at": "2023-10-06T16:50:30Z",
      "updated_at": "2023-10-06T16:50:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348974421",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348974421"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 15,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348982459",
      "pull_request_review_id": 1662317009,
      "id": 1348982459,
      "node_id": "PRRC_kwDOABII585QZ9a7",
      "diff_hunk": "@@ -979,3 +979,7 @@ def is_sqlite_compiled(self):\n     def is_bdb_compiled(self):\n         \"\"\"Checks whether the wallet module was compiled with BDB support.\"\"\"\n         return self.config[\"components\"].getboolean(\"USE_BDB\")\n+\n+    def has_blockfile(self, node, filenum: str):\n+        blocksdir = os.path.join(node.datadir, self.chain, 'blocks', '')",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 6,
      "original_position": 6,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344722098,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Does this exist? When I grep for `blocksdir_path` I only find a local variable.",
      "created_at": "2023-10-06T16:58:44Z",
      "updated_at": "2023-10-06T16:58:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348982459",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348982459"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 984,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348983269",
      "pull_request_review_id": 1662318409,
      "id": 1348983269,
      "node_id": "PRRC_kwDOABII585QZ9nl",
      "diff_hunk": "@@ -2699,6 +2700,178 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"",
      "path": "src/rpc/blockchain.cpp",
      "position": 19,
      "original_position": 19,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344688088,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is addressed in #28562 (dropping reference for now)",
      "created_at": "2023-10-06T16:59:41Z",
      "updated_at": "2023-10-06T16:59:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1348983269",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348983269"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2710,
      "original_line": 2710,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349006892",
      "pull_request_review_id": 1662355460,
      "id": 1349006892,
      "node_id": "PRRC_kwDOABII585QaDYs",
      "diff_hunk": "@@ -1091,4 +1187,18 @@ void ImportBlocks(ChainstateManager& chainman, std::vector<fs::path> vImportFile\n         }\n     } // End scope of ImportingNow\n }\n+\n+std::ostream& operator<<(std::ostream& os, const BlockfileType& type) {\n+    switch(type) {\n+        case BlockfileType::NORMAL: os << \"normal\"; break;\n+        case BlockfileType::ASSUMED: os << \"assumed\"; break;\n+        default: os.setstate(std::ios_base::failbit);",
      "path": "src/node/blockstorage.cpp",
      "position": 421,
      "original_position": 421,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344629969,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This would be resolved by @ryanofsky 's effort to remove the chainstate names/types entirely, as discussed here and linked at the bottom: https://github.com/bitcoin/bitcoin/pull/28562#discussion_r1344824078",
      "created_at": "2023-10-06T17:11:14Z",
      "updated_at": "2023-10-06T17:11:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1349006892",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349006892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1195,
      "original_line": 1195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349008575",
      "pull_request_review_id": 1662357578,
      "id": 1349008575,
      "node_id": "PRRC_kwDOABII585QaDy_",
      "diff_hunk": "@@ -25,3 +26,13 @@ interfaces::BlockInfo MakeBlockInfo(const CBlockIndex* index, const CBlock* data\n     return info;\n }\n } // namespace kernel\n+\n+std::ostream& operator<<(std::ostream& os, const ChainstateRole& role) {\n+    switch(role) {\n+        case ChainstateRole::NORMAL: os << \"normal\"; break;\n+        case ChainstateRole::ASSUMEDVALID: os << \"assumedvalid\"; break;\n+        case ChainstateRole::BACKGROUND: os << \"background\"; break;\n+        default: os.setstate(std::ios_base::failbit);",
      "path": "src/kernel/chain.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344017553,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This would be resolved by @ryanofsky 's effort to remove the chainstate names/types entirely, as discussed here and linked at the bottom: https://github.com/bitcoin/bitcoin/pull/28562#discussion_r1344824078",
      "created_at": "2023-10-06T17:11:29Z",
      "updated_at": "2023-10-06T17:11:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1349008575",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349008575"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 35,
      "original_line": 35,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349131589",
      "pull_request_review_id": 1662509498,
      "id": 1349131589,
      "node_id": "PRRC_kwDOABII585Qah1F",
      "diff_hunk": "@@ -2699,6 +2700,105 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"\n+        \"Meanwhile, the original chainstate will complete the initial block download process in \"\n+        \"the background, eventually validating up to the block that the snapshot is based upon.\\n\\n\"\n+\n+        \"The result is a usable bitcoind instance that is current with the network tip in a \"\n+        \"matter of minutes rather than hours. UTXO snapshot are typically obtained from \"\n+        \"third-party sources (HTTP, torrent, etc.) which is reasonable since their \"",
      "path": "src/rpc/blockchain.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "ce585a9a158476b0ad3296477b922e79f308e795",
      "in_reply_to_id": 1343848899,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The phrase \"which is reasonable\" seems wrong for an RPC doc. It's part of the security discussion that seems more appropriate for the doc.",
      "created_at": "2023-10-06T17:30:51Z",
      "updated_at": "2023-10-06T17:30:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1349131589",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349131589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2716,
      "original_line": 2716,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349132562",
      "pull_request_review_id": 1662510921,
      "id": 1349132562,
      "node_id": "PRRC_kwDOABII585QaiES",
      "diff_hunk": "@@ -250,8 +259,19 @@ bool BaseIndex::Rewind(const CBlockIndex* current_tip, const CBlockIndex* new_ti\n     return true;\n }\n \n-void BaseIndex::BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex)\n+void BaseIndex::BlockConnected(ChainstateRole role, const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex)\n {\n+    // Ignore events from the assumed-valid chain; we will process its blocks\n+    // (sequentially) after it is fully verified by the background chainstate. This\n+    // is to avoid any out-of-order indexing.\n+    //\n+    // TODO at some point we could parameterize whether a particular index can be",
      "path": "src/index/base.cpp",
      "position": 56,
      "original_position": 56,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1343998883,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I was wondering if those prune locks would kick in. I'll find out.",
      "created_at": "2023-10-06T17:31:43Z",
      "updated_at": "2023-10-06T17:31:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1349132562",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349132562"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 268,
      "original_line": 268,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349138655",
      "pull_request_review_id": 1662520320,
      "id": 1349138655,
      "node_id": "PRRC_kwDOABII585Qajjf",
      "diff_hunk": "@@ -1478,6 +1478,25 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         node.chainman = std::make_unique<ChainstateManager>(node.kernel->interrupt, chainman_opts, blockman_opts);\n         ChainstateManager& chainman = *node.chainman;\n \n+        // This is defined and set here instead of inline in validation.h to avoid a hard\n+        // dependency between validation and index/base, since the latter is not in\n+        // libbitcoinkernel.\n+        chainman.restart_indexes = [&node]() {\n+            LogPrintf(\"[snapshot] restarting indexes\\n\");\n+\n+            // Drain the validation interface queue to ensure that the old indexes\n+            // don't have any pending work.\n+            SyncWithValidationInterfaceQueue();\n+\n+            for (auto* index : node.indexes) {\n+                index->Interrupt();\n+                index->Stop();\n+                if (!(index->Init() && index->StartBackgroundSync())) {\n+                    LogPrintf(\"[snapshot] WARNING failed to restart index %s on snapshot chain\\n\", index->GetName());",
      "path": "src/init.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344002707,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I tend to agree that there should be an error but it's tricky here because this function is defined during init but then only later called during `ActivateBestChain`. Do `InitError` is probably not appropriate?",
      "created_at": "2023-10-06T17:37:17Z",
      "updated_at": "2023-10-06T17:37:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1349138655",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349138655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1495,
      "original_line": 1495,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349144430",
      "pull_request_review_id": 1662529554,
      "id": 1349144430,
      "node_id": "PRRC_kwDOABII585Qak9u",
      "diff_hunk": "@@ -2699,6 +2700,178 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"\n+        \"Meanwhile, the original chainstate will complete the initial block download process in \"\n+        \"the background, eventually validating up to the block that the snapshot is based upon.\\n\\n\"\n+\n+        \"The result is a usable bitcoind instance that is current with the network tip in a \"\n+        \"matter of minutes rather than hours. UTXO snapshot are typically obtained from \"\n+        \"third-party sources (HTTP, torrent, etc.) which is reasonable since their \"\n+        \"contents are always checked by hash.\\n\\n\"\n+\n+        \"You can find more information on this process in the `assumeutxo` design \"\n+        \"document (<https://github.com/bitcoin/bitcoin/blob/master/doc/design/assumeutxo.md>).\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"coins_loaded\", \"the number of coins loaded from the snapshot\"},\n+                    {RPCResult::Type::STR_HEX, \"tip_hash\", \"the hash of the base of the snapshot\"},\n+                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n+                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was loaded from\"},\n+                }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    fs::path path{AbsPathForConfigVal(EnsureArgsman(node), fs::u8path(request.params[0].get_str()))};\n+\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    AutoFile afile{file};\n+    if (afile.IsNull()) {\n+        throw JSONRPCError(\n+            RPC_INVALID_PARAMETER,\n+            \"Couldn't open file \" + path.u8string() + \" for reading.\");\n+    }\n+\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    ChainstateManager& chainman = *node.chainman;\n+\n+    while (max_secs_to_wait_for_headers > 0) {\n+        snapshot_start_block = WITH_LOCK(::cs_main,\n+            return chainman.m_blockman.LookupBlockIndex(base_blockhash));\n+        max_secs_to_wait_for_headers -= 1;\n+\n+        if (!IsRPCRunning()) {\n+            throw JSONRPCError(RPC_CLIENT_NOT_CONNECTED, \"Shutting down\");\n+        }\n+\n+        if (!snapshot_start_block) {\n+            std::this_thread::sleep_for(std::chrono::seconds(1));\n+        } else {\n+            break;\n+        }\n+    }\n+\n+    if (!snapshot_start_block) {\n+        LogPrintf(\"[snapshot] timed out waiting for snapshot start blockheader %s\\n\",\n+            base_blockhash.ToString());\n+        throw JSONRPCError(\n+            RPC_INTERNAL_ERROR,\n+            \"Timed out waiting for base block header to appear in headers chain\");\n+    }\n+    if (!chainman.ActivateSnapshot(afile, metadata, false)) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to load UTXO snapshot \" + fs::PathToString(path));\n+    }\n+    CBlockIndex* new_tip{WITH_LOCK(::cs_main, return chainman.ActiveTip())};\n+\n+    UniValue result(UniValue::VOBJ);\n+    result.pushKV(\"coins_loaded\", metadata.m_coins_count);\n+    result.pushKV(\"tip_hash\", new_tip->GetBlockHash().ToString());\n+    result.pushKV(\"base_height\", new_tip->nHeight);\n+    result.pushKV(\"path\", fs::PathToString(path));\n+    return result;\n+},\n+    };\n+}\n+\n+const std::vector<RPCResult> RPCHelpForChainstate{\n+    {RPCResult::Type::NUM, \"blocks\", \"number of blocks in this chainstate\"},\n+    {RPCResult::Type::STR_HEX, \"bestblockhash\", \"blockhash of the tip\"},\n+    {RPCResult::Type::NUM, \"difficulty\", \"difficulty of the tip\"},\n+    {RPCResult::Type::NUM, \"verificationprogress\", \"progress towards the network tip\"},\n+    {RPCResult::Type::STR_HEX, \"snapshot_blockhash\", /*optional=*/true, \"the base block of the snapshot this chainstate is based on, if any\"},\n+    {RPCResult::Type::NUM, \"coins_db_cache_bytes\", \"size of the coinsdb cache\"},\n+    {RPCResult::Type::NUM, \"coins_tip_cache_bytes\", \"size of the coinstip cache\"},\n+};\n+\n+static RPCHelpMan getchainstates()\n+{\n+return RPCHelpMan{\n+        \"getchainstates\",\n+        \"\\nReturn information about chainstates.\\n\",\n+        {},\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\", {\n+                {RPCResult::Type::NUM, \"headers\", \"the number of headers seen so far\"},\n+                {RPCResult::Type::OBJ, \"normal\", /*optional=*/true, \"fully validated chainstate containing blocks this node has validated starting from the genesis block\", RPCHelpForChainstate},\n+                {RPCResult::Type::OBJ, \"snapshot\", /*optional=*/true, \"only present if an assumeutxo snapshot is loaded. Partially validated chainstate containing blocks this node has validated starting from the snapshot. After the snapshot is validated (when the 'normal' chainstate advances far enough to validate it), this chainstate will replace and become the 'normal' chainstate.\", RPCHelpForChainstate},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"getchainstates\", \"\")\n+    + HelpExampleRpc(\"getchainstates\", \"\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    LOCK(cs_main);\n+    UniValue obj(UniValue::VOBJ);\n+\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    ChainstateManager& chainman = *node.chainman;",
      "path": "src/rpc/blockchain.cpp",
      "position": 144,
      "original_position": 144,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344698747,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is addressed in #28562",
      "created_at": "2023-10-06T17:44:26Z",
      "updated_at": "2023-10-06T17:44:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1349144430",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349144430"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2835,
      "original_line": 2835,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349144474",
      "pull_request_review_id": 1662529634,
      "id": 1349144474,
      "node_id": "PRRC_kwDOABII585Qak-a",
      "diff_hunk": "@@ -2699,6 +2700,178 @@ UniValue CreateUTXOSnapshot(\n     return result;\n }\n \n+static RPCHelpMan loadtxoutset()\n+{\n+    return RPCHelpMan{\n+        \"loadtxoutset\",\n+        \"Load the serialized UTXO set from disk.\\n\"\n+        \"Once this snapshot is loaded, its contents will be \"\n+        \"deserialized into a second chainstate data structure, which is then used to sync to \"\n+        \"the network's tip under a security model very much like `assumevalid`. \"\n+        \"Meanwhile, the original chainstate will complete the initial block download process in \"\n+        \"the background, eventually validating up to the block that the snapshot is based upon.\\n\\n\"\n+\n+        \"The result is a usable bitcoind instance that is current with the network tip in a \"\n+        \"matter of minutes rather than hours. UTXO snapshot are typically obtained from \"\n+        \"third-party sources (HTTP, torrent, etc.) which is reasonable since their \"\n+        \"contents are always checked by hash.\\n\\n\"\n+\n+        \"You can find more information on this process in the `assumeutxo` design \"\n+        \"document (<https://github.com/bitcoin/bitcoin/blob/master/doc/design/assumeutxo.md>).\",\n+        {\n+            {\"path\",\n+                RPCArg::Type::STR,\n+                RPCArg::Optional::NO,\n+                \"path to the snapshot file. If relative, will be prefixed by datadir.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"coins_loaded\", \"the number of coins loaded from the snapshot\"},\n+                    {RPCResult::Type::STR_HEX, \"tip_hash\", \"the hash of the base of the snapshot\"},\n+                    {RPCResult::Type::NUM, \"base_height\", \"the height of the base of the snapshot\"},\n+                    {RPCResult::Type::STR, \"path\", \"the absolute path that the snapshot was loaded from\"},\n+                }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"loadtxoutset\", \"utxo.dat\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+    NodeContext& node = EnsureAnyNodeContext(request.context);\n+    fs::path path{AbsPathForConfigVal(EnsureArgsman(node), fs::u8path(request.params[0].get_str()))};\n+\n+    FILE* file{fsbridge::fopen(path, \"rb\")};\n+    AutoFile afile{file};\n+    if (afile.IsNull()) {\n+        throw JSONRPCError(\n+            RPC_INVALID_PARAMETER,\n+            \"Couldn't open file \" + path.u8string() + \" for reading.\");\n+    }\n+\n+    SnapshotMetadata metadata;\n+    afile >> metadata;\n+\n+    uint256 base_blockhash = metadata.m_base_blockhash;\n+    int max_secs_to_wait_for_headers = 60 * 10;\n+    CBlockIndex* snapshot_start_block = nullptr;\n+\n+    LogPrintf(\"[snapshot] waiting to see blockheader %s in headers chain before snapshot activation\\n\",\n+        base_blockhash.ToString());\n+\n+    ChainstateManager& chainman = *node.chainman;",
      "path": "src/rpc/blockchain.cpp",
      "position": 71,
      "original_position": 71,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344698532,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is addressed in #28562",
      "created_at": "2023-10-06T17:44:29Z",
      "updated_at": "2023-10-06T17:44:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1349144474",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349144474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2762,
      "original_line": 2762,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349148631",
      "pull_request_review_id": 1662535988,
      "id": 1349148631,
      "node_id": "PRRC_kwDOABII585Qal_X",
      "diff_hunk": "@@ -154,24 +189,39 @@ class BlockManager\n      * A db flag records the fact that at least some block files have been pruned.\n      *\n      * @param[out]   setFilesToPrune   The set of file indices that can be unlinked will be returned\n+     * @param        last_prune        The last height we're able to prune, according to the prune locks\n      */\n-    void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight, int chain_tip_height, int prune_height, bool is_ibd);\n+    void FindFilesToPrune(\n+        std::set<int>& setFilesToPrune,\n+        int last_prune,\n+        const Chainstate& chain,\n+        ChainstateManager& chainman);\n \n     RecursiveMutex cs_LastBlockFile;\n     std::vector<CBlockFileInfo> m_blockfile_info;\n-    int m_last_blockfile = 0;\n \n-    // Track the height of the highest block in m_last_blockfile whose undo\n-    // data has been written. Block data is written to block files in download\n-    // order, but is written to undo files in validation order, which is\n-    // usually in order by height. To avoid wasting disk space, undo files will\n-    // be trimmed whenever the corresponding block file is finalized and\n-    // the height of the highest block written to the block file equals the\n-    // height of the highest block written to the undo file. This is a\n-    // heuristic and can sometimes preemptively trim undo files that will write\n-    // more data later, and sometimes fail to trim undo files that can't have\n-    // more data written later.\n-    unsigned int m_undo_height_in_last_blockfile = 0;\n+    //! Since assumedvalid chainstates may be syncing a range of the chain that is very\n+    //! far away from the normal/background validation process, we should segment blockfiles\n+    //! for assumed chainstates. Otherwise, we might have wildly different height ranges\n+    //! mixed into the same block files, which would impair our ability to prune\n+    //! effectively.\n+    //!\n+    //! This data structure maintains separate blockfile number cursors for each\n+    //! BlockfileType. The ASSUMED state is initialized, when necessary, in FindBlockPos().\n+    //!\n+    //! The first element is the NORMAL cursor, second is ASSUMED.\n+    std::array<std::optional<BlockfileCursor>, BlockfileType::NUM_TYPES>\n+        m_blockfile_cursors GUARDED_BY(cs_LastBlockFile) = {\n+            BlockfileCursor{},\n+            std::nullopt,\n+    };\n+    int MaxBlockfileNum() const EXCLUSIVE_LOCKS_REQUIRED(cs_LastBlockFile)\n+    {\n+        static const BlockfileCursor empty_cursor;\n+        const auto& normal = m_blockfile_cursors[BlockfileType::NORMAL].value_or(empty_cursor);\n+        const auto& assumed = m_blockfile_cursors[BlockfileType::ASSUMED].value_or(empty_cursor);\n+        return std::max(normal.file_num, assumed.file_num);",
      "path": "src/node/blockstorage.h",
      "position": 125,
      "original_position": 125,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344648372,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This should also be made obsolete by getting rid of chainstate names/types I suppose (see https://github.com/bitcoin/bitcoin/pull/28562#discussion_r1344824078, draft linked at the bottom).",
      "created_at": "2023-10-06T17:49:35Z",
      "updated_at": "2023-10-06T17:49:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1349148631",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1349148631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 223,
      "original_line": 223,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350273252",
      "pull_request_review_id": 1664392850,
      "id": 1350273252,
      "node_id": "PRRC_kwDOABII585Qe4jk",
      "diff_hunk": "@@ -250,8 +259,19 @@ bool BaseIndex::Rewind(const CBlockIndex* current_tip, const CBlockIndex* new_ti\n     return true;\n }\n \n-void BaseIndex::BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex)\n+void BaseIndex::BlockConnected(ChainstateRole role, const std::shared_ptr<const CBlock>& block, const CBlockIndex* pindex)\n {\n+    // Ignore events from the assumed-valid chain; we will process its blocks\n+    // (sequentially) after it is fully verified by the background chainstate. This\n+    // is to avoid any out-of-order indexing.\n+    //\n+    // TODO at some point we could parameterize whether a particular index can be",
      "path": "src/index/base.cpp",
      "position": 56,
      "original_position": 56,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1343998883,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Looks like they did. Documented in #28618.",
      "created_at": "2023-10-09T12:56:05Z",
      "updated_at": "2023-10-09T12:56:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1350273252",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350273252"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 268,
      "original_line": 268,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350274812",
      "pull_request_review_id": 1664395493,
      "id": 1350274812,
      "node_id": "PRRC_kwDOABII585Qe478",
      "diff_hunk": "@@ -0,0 +1,200 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$(($BASE_HEIGHT + $INCREMENTAL_HEIGHT))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes to test that snapshot use works\n+# properly with indexes.\n+ALL_INDEXES=\"-txindex -coinstatsindex -blockfilterindex=1\"\n+\n+if ! command -v jq >/dev/null ; then\n+  echo \"This script requires jq to parse JSON RPC output. Please install it.\"\n+  echo \"(e.g. sudo apt install jq)\"\n+  exit 1\n+fi\n+\n+DUMP_OUTPUT=\"dumptxoutset-output-$BASE_HEIGHT.json\"\n+\n+finish() {\n+  echo\n+  echo \"Killing server and client PIDs ($SERVER_PID, $CLIENT_PID) and cleaning up datadirs\"\n+  echo\n+  rm -f \"$UTXO_DAT_FILE\" \"$DUMP_OUTPUT\"\n+  rm -rf \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+  kill -9 \"$SERVER_PID\" \"$CLIENT_PID\"\n+}\n+\n+trap finish EXIT\n+\n+# Need to specify these to trick client into accepting server as a peer\n+# it can IBD from, otherwise the default values prevent IBD from the server node.\n+EARLY_IBD_FLAGS=\"-maxtipage=9223372036854775207 -minimumchainwork=0x00\"\n+\n+server_rpc() {\n+  ./src/bitcoin-cli -rpcport=$SERVER_RPC_PORT -datadir=\"$SERVER_DATADIR\" \"$@\"\n+}\n+client_rpc() {\n+  ./src/bitcoin-cli -rpcport=$CLIENT_RPC_PORT -datadir=\"$CLIENT_DATADIR\" \"$@\"\n+}\n+server_sleep_til_boot() {\n+  while ! server_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+client_sleep_til_boot() {\n+  while ! client_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+\n+mkdir -p \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+\n+echo \"Hi, welcome to the assumeutxo demo/test\"\n+echo\n+echo \"We're going to\"\n+echo\n+echo \"  - start up a 'server' node, sync it via mainnet IBD to height ${BASE_HEIGHT}\"\n+echo \"  - create a UTXO snapshot at that height\"\n+echo \"  - IBD ${INCREMENTAL_HEIGHT} more blocks on top of that\"\n+echo\n+echo \"then we'll demonstrate assumeutxo by \"\n+echo\n+echo \"  - starting another node (the 'client') and loading the snapshot in\"\n+echo \"    * first you'll have to modify the code slightly (chainparams) and recompile\"\n+echo \"    * don't worry, we'll make it easy\"\n+echo \"  - observing the client sync ${INCREMENTAL_HEIGHT} blocks on top of the snapshot from the server\"\n+echo \"  - observing the client validate the snapshot chain via background IBD\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- Starting the demo. You might want to run the two following commands in\"\n+echo \"   separate terminal windows:\"\n+echo\n+echo \"   watch -n0.1 tail -n 30 $SERVER_DATADIR/debug.log\"\n+echo \"   watch -n0.1 tail -n 30 $CLIENT_DATADIR/debug.log\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- IBDing the blocks (height=$BASE_HEIGHT) required to the server node...\"\n+./src/bitcoind -logthreadnames=1 $SERVER_PORTS \\\n+    -datadir=\"$SERVER_DATADIR\" $EARLY_IBD_FLAGS -stopatheight=\"$BASE_HEIGHT\" >/dev/null\n+\n+echo\n+echo \"-- Creating snapshot at ~ height $BASE_HEIGHT ($UTXO_DAT_FILE)...\"\n+sleep 2",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": 112,
      "original_position": 112,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1343952455,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You mean the `sleep` command?",
      "created_at": "2023-10-09T12:57:33Z",
      "updated_at": "2023-10-09T12:57:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1350274812",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1350274812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 112,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1351819194",
      "pull_request_review_id": 1666683330,
      "id": 1351819194,
      "node_id": "PRRC_kwDOABII585Qkx-6",
      "diff_hunk": "@@ -979,3 +979,7 @@ def is_sqlite_compiled(self):\n     def is_bdb_compiled(self):\n         \"\"\"Checks whether the wallet module was compiled with BDB support.\"\"\"\n         return self.config[\"components\"].getboolean(\"USE_BDB\")\n+\n+    def has_blockfile(self, node, filenum: str):\n+        blocksdir = os.path.join(node.datadir, self.chain, 'blocks', '')",
      "path": "test/functional/test_framework/test_framework.py",
      "position": 6,
      "original_position": 6,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344722098,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sorry I meant `blocks_path`",
      "created_at": "2023-10-10T08:14:38Z",
      "updated_at": "2023-10-10T08:14:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1351819194",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1351819194"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 984,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1351823533",
      "pull_request_review_id": 1666691685,
      "id": 1351823533,
      "node_id": "PRRC_kwDOABII585QkzCt",
      "diff_hunk": "@@ -67,9 +67,13 @@ def main():\n         '*.sh',\n     ]\n     files = get_files(files_cmd)\n-    # remove everything that doesn't match this regex\n     reg = re.compile(r'src/[leveldb,secp256k1,minisketch]')\n-    files[:] = [file for file in files if not reg.match(file)]\n+\n+    def should_exclude(fname: str) -> bool:\n+        return bool(reg.match(fname)) or 'test_utxo_snapshots.sh' in fname",
      "path": "test/lint/lint-shell.py",
      "position": 9,
      "original_position": 9,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344725060,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "For example, grep for `# shellcheck disable=SC2086`",
      "created_at": "2023-10-10T08:15:35Z",
      "updated_at": "2023-10-10T08:15:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1351823533",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1351823533"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1351827477",
      "pull_request_review_id": 1666699922,
      "id": 1351827477,
      "node_id": "PRRC_kwDOABII585Qk0AV",
      "diff_hunk": "@@ -0,0 +1,200 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$(($BASE_HEIGHT + $INCREMENTAL_HEIGHT))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes to test that snapshot use works\n+# properly with indexes.\n+ALL_INDEXES=\"-txindex -coinstatsindex -blockfilterindex=1\"\n+\n+if ! command -v jq >/dev/null ; then\n+  echo \"This script requires jq to parse JSON RPC output. Please install it.\"\n+  echo \"(e.g. sudo apt install jq)\"\n+  exit 1\n+fi\n+\n+DUMP_OUTPUT=\"dumptxoutset-output-$BASE_HEIGHT.json\"\n+\n+finish() {\n+  echo\n+  echo \"Killing server and client PIDs ($SERVER_PID, $CLIENT_PID) and cleaning up datadirs\"\n+  echo\n+  rm -f \"$UTXO_DAT_FILE\" \"$DUMP_OUTPUT\"\n+  rm -rf \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+  kill -9 \"$SERVER_PID\" \"$CLIENT_PID\"\n+}\n+\n+trap finish EXIT\n+\n+# Need to specify these to trick client into accepting server as a peer\n+# it can IBD from, otherwise the default values prevent IBD from the server node.\n+EARLY_IBD_FLAGS=\"-maxtipage=9223372036854775207 -minimumchainwork=0x00\"\n+\n+server_rpc() {\n+  ./src/bitcoin-cli -rpcport=$SERVER_RPC_PORT -datadir=\"$SERVER_DATADIR\" \"$@\"\n+}\n+client_rpc() {\n+  ./src/bitcoin-cli -rpcport=$CLIENT_RPC_PORT -datadir=\"$CLIENT_DATADIR\" \"$@\"\n+}\n+server_sleep_til_boot() {\n+  while ! server_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+client_sleep_til_boot() {\n+  while ! client_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+\n+mkdir -p \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+\n+echo \"Hi, welcome to the assumeutxo demo/test\"\n+echo\n+echo \"We're going to\"\n+echo\n+echo \"  - start up a 'server' node, sync it via mainnet IBD to height ${BASE_HEIGHT}\"\n+echo \"  - create a UTXO snapshot at that height\"\n+echo \"  - IBD ${INCREMENTAL_HEIGHT} more blocks on top of that\"\n+echo\n+echo \"then we'll demonstrate assumeutxo by \"\n+echo\n+echo \"  - starting another node (the 'client') and loading the snapshot in\"\n+echo \"    * first you'll have to modify the code slightly (chainparams) and recompile\"\n+echo \"    * don't worry, we'll make it easy\"\n+echo \"  - observing the client sync ${INCREMENTAL_HEIGHT} blocks on top of the snapshot from the server\"\n+echo \"  - observing the client validate the snapshot chain via background IBD\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- Starting the demo. You might want to run the two following commands in\"\n+echo \"   separate terminal windows:\"\n+echo\n+echo \"   watch -n0.1 tail -n 30 $SERVER_DATADIR/debug.log\"\n+echo \"   watch -n0.1 tail -n 30 $CLIENT_DATADIR/debug.log\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- IBDing the blocks (height=$BASE_HEIGHT) required to the server node...\"\n+./src/bitcoind -logthreadnames=1 $SERVER_PORTS \\\n+    -datadir=\"$SERVER_DATADIR\" $EARLY_IBD_FLAGS -stopatheight=\"$BASE_HEIGHT\" >/dev/null\n+\n+echo\n+echo \"-- Creating snapshot at ~ height $BASE_HEIGHT ($UTXO_DAT_FILE)...\"\n+sleep 2",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": 112,
      "original_position": 112,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1343952455,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes",
      "created_at": "2023-10-10T08:16:35Z",
      "updated_at": "2023-10-10T08:16:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1351827477",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1351827477"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 112,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352027886",
      "pull_request_review_id": 1667062555,
      "id": 1352027886,
      "node_id": "PRRC_kwDOABII585Qlk7u",
      "diff_hunk": "@@ -67,9 +67,13 @@ def main():\n         '*.sh',\n     ]\n     files = get_files(files_cmd)\n-    # remove everything that doesn't match this regex\n     reg = re.compile(r'src/[leveldb,secp256k1,minisketch]')\n-    files[:] = [file for file in files if not reg.match(file)]\n+\n+    def should_exclude(fname: str) -> bool:\n+        return bool(reg.match(fname)) or 'test_utxo_snapshots.sh' in fname",
      "path": "test/lint/lint-shell.py",
      "position": 9,
      "original_position": 9,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344725060,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok, addressed with #28628",
      "created_at": "2023-10-10T09:38:58Z",
      "updated_at": "2023-10-10T09:38:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1352027886",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352027886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 73,
      "original_line": 73,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352256777",
      "pull_request_review_id": 1667327591,
      "id": 1352256777,
      "node_id": "PRRC_kwDOABII585Qmc0J",
      "diff_hunk": "@@ -0,0 +1,200 @@\n+#!/usr/bin/env bash\n+# Demonstrate the creation and usage of UTXO snapshots.\n+#\n+# A server node starts up, IBDs up to a certain height, then generates a UTXO\n+# snapshot at that point.\n+#\n+# The server then downloads more blocks (to create a diff from the snapshot).\n+#\n+# We bring a client up, load the UTXO snapshot, and we show the client sync to\n+# the \"network tip\" and then start a background validation of the snapshot it\n+# loaded. We see the background validation chainstate removed after validation\n+# completes.\n+#\n+\n+export LC_ALL=C\n+set -e\n+\n+BASE_HEIGHT=${1:-30000}\n+INCREMENTAL_HEIGHT=20000\n+FINAL_HEIGHT=$(($BASE_HEIGHT + $INCREMENTAL_HEIGHT))\n+\n+SERVER_DATADIR=\"$(pwd)/utxodemo-data-server-$BASE_HEIGHT\"\n+CLIENT_DATADIR=\"$(pwd)/utxodemo-data-client-$BASE_HEIGHT\"\n+UTXO_DAT_FILE=\"$(pwd)/utxo.$BASE_HEIGHT.dat\"\n+\n+# Chosen to try to not interfere with any running bitcoind processes.\n+SERVER_PORT=8633\n+SERVER_RPC_PORT=8632\n+\n+CLIENT_PORT=8733\n+CLIENT_RPC_PORT=8732\n+\n+SERVER_PORTS=\"-port=${SERVER_PORT} -rpcport=${SERVER_RPC_PORT}\"\n+CLIENT_PORTS=\"-port=${CLIENT_PORT} -rpcport=${CLIENT_RPC_PORT}\"\n+\n+# Ensure the client exercises all indexes to test that snapshot use works\n+# properly with indexes.\n+ALL_INDEXES=\"-txindex -coinstatsindex -blockfilterindex=1\"\n+\n+if ! command -v jq >/dev/null ; then\n+  echo \"This script requires jq to parse JSON RPC output. Please install it.\"\n+  echo \"(e.g. sudo apt install jq)\"\n+  exit 1\n+fi\n+\n+DUMP_OUTPUT=\"dumptxoutset-output-$BASE_HEIGHT.json\"\n+\n+finish() {\n+  echo\n+  echo \"Killing server and client PIDs ($SERVER_PID, $CLIENT_PID) and cleaning up datadirs\"\n+  echo\n+  rm -f \"$UTXO_DAT_FILE\" \"$DUMP_OUTPUT\"\n+  rm -rf \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+  kill -9 \"$SERVER_PID\" \"$CLIENT_PID\"\n+}\n+\n+trap finish EXIT\n+\n+# Need to specify these to trick client into accepting server as a peer\n+# it can IBD from, otherwise the default values prevent IBD from the server node.\n+EARLY_IBD_FLAGS=\"-maxtipage=9223372036854775207 -minimumchainwork=0x00\"\n+\n+server_rpc() {\n+  ./src/bitcoin-cli -rpcport=$SERVER_RPC_PORT -datadir=\"$SERVER_DATADIR\" \"$@\"\n+}\n+client_rpc() {\n+  ./src/bitcoin-cli -rpcport=$CLIENT_RPC_PORT -datadir=\"$CLIENT_DATADIR\" \"$@\"\n+}\n+server_sleep_til_boot() {\n+  while ! server_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+client_sleep_til_boot() {\n+  while ! client_rpc ping >/dev/null 2>&1; do sleep 0.1; done\n+}\n+\n+mkdir -p \"$SERVER_DATADIR\" \"$CLIENT_DATADIR\"\n+\n+echo \"Hi, welcome to the assumeutxo demo/test\"\n+echo\n+echo \"We're going to\"\n+echo\n+echo \"  - start up a 'server' node, sync it via mainnet IBD to height ${BASE_HEIGHT}\"\n+echo \"  - create a UTXO snapshot at that height\"\n+echo \"  - IBD ${INCREMENTAL_HEIGHT} more blocks on top of that\"\n+echo\n+echo \"then we'll demonstrate assumeutxo by \"\n+echo\n+echo \"  - starting another node (the 'client') and loading the snapshot in\"\n+echo \"    * first you'll have to modify the code slightly (chainparams) and recompile\"\n+echo \"    * don't worry, we'll make it easy\"\n+echo \"  - observing the client sync ${INCREMENTAL_HEIGHT} blocks on top of the snapshot from the server\"\n+echo \"  - observing the client validate the snapshot chain via background IBD\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- Starting the demo. You might want to run the two following commands in\"\n+echo \"   separate terminal windows:\"\n+echo\n+echo \"   watch -n0.1 tail -n 30 $SERVER_DATADIR/debug.log\"\n+echo \"   watch -n0.1 tail -n 30 $CLIENT_DATADIR/debug.log\"\n+echo\n+read -p \"Press [enter] to continue\" _\n+\n+echo\n+echo \"-- IBDing the blocks (height=$BASE_HEIGHT) required to the server node...\"\n+./src/bitcoind -logthreadnames=1 $SERVER_PORTS \\\n+    -datadir=\"$SERVER_DATADIR\" $EARLY_IBD_FLAGS -stopatheight=\"$BASE_HEIGHT\" >/dev/null\n+\n+echo\n+echo \"-- Creating snapshot at ~ height $BASE_HEIGHT ($UTXO_DAT_FILE)...\"\n+sleep 2",
      "path": "contrib/devtools/test_utxo_snapshots.sh",
      "position": 112,
      "original_position": 112,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1343952455,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Addressed with #28631",
      "created_at": "2023-10-10T11:02:15Z",
      "updated_at": "2023-10-10T11:02:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1352256777",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1352256777"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 112,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1480923337",
      "pull_request_review_id": 1866945244,
      "id": 1480923337,
      "node_id": "PRRC_kwDOABII585YRRjJ",
      "diff_hunk": "@@ -5157,6 +5185,14 @@ bool ChainstateManager::ActivateSnapshot(\n         return false;\n     }\n \n+    {\n+        LOCK(::cs_main);\n+        if (Assert(m_active_chainstate->GetMempool())->size() > 0) {\n+            LogPrintf(\"[snapshot] can't activate a snapshot when mempool not empty\\n\");",
      "path": "src/validation.cpp",
      "position": 208,
      "original_position": 208,
      "commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "original_commit_id": "edbed31066e3674ba52b8c093ab235625527f383",
      "in_reply_to_id": 1344713537,
      "user": {
        "login": "hernanmarino",
        "id": 87907936,
        "node_id": "MDQ6VXNlcjg3OTA3OTM2",
        "avatar_url": "https://avatars.githubusercontent.com/u/87907936?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hernanmarino",
        "html_url": "https://github.com/hernanmarino",
        "followers_url": "https://api.github.com/users/hernanmarino/followers",
        "following_url": "https://api.github.com/users/hernanmarino/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hernanmarino/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hernanmarino/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hernanmarino/subscriptions",
        "organizations_url": "https://api.github.com/users/hernanmarino/orgs",
        "repos_url": "https://api.github.com/users/hernanmarino/repos",
        "events_url": "https://api.github.com/users/hernanmarino/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hernanmarino/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I> Could add a functional test for this?\r\n\r\nI just did, see https://github.com/bitcoin/bitcoin/pull/29394",
      "created_at": "2024-02-07T05:42:02Z",
      "updated_at": "2024-02-07T05:42:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1480923337",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1480923337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27596"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 5191,
      "original_line": 5191,
      "side": "RIGHT"
    }
  ]
}