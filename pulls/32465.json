{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465",
    "id": 2510804916,
    "node_id": "PR_kwDOABII586Vp9e0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32465",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32465.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32465.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32465",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32465/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/96a341d4064132292621af404de908f01fbe3e2f",
    "number": 32465,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "thread-safety: fix annotations with REVERSE_LOCK",
    "user": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This is one of several PRs to cleanup/modernize our threading primitives.\r\n\r\nWhile replacing the old critical section locks in the mining code with a `REVERSE_LOCK`, I noticed that our thread-safety annotations weren't hooked up to it. This PR gets `REVERSE_LOCK` working properly.\r\n\r\nFirstly it modernizes the attributes as-recommended by the [clang docs](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html) (ctrl+f for `USE_LOCK_STYLE_THREAD_SAFETY_ATTRIBUTES`). There's a subtle difference between the old `unlock_function` and new `release_capability`, where our `reverse_lock` only works with the latter. I believe this is an upstream bug. I've [reported and attempted a fix here](https://github.com/llvm/llvm-project/pull/139343), but either way it makes sense to me to modernize.\r\n\r\nThe second commit just fixes an unrelated logging bug that I noticed while hacking around in here.\r\n\r\nThe third adds a missing annotation pointed out by a fixed `REVERSE_LOCK`. Because clang's thread-safety annotations aren't passed through a reference to `UniqueLock` as one may assume (see [here](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#no-alias-analysis) for more details), `cs_main` has to be listed explicitly as a requirement.\r\n\r\nThe last commit actually fixes the `reverse_lock` by making it a `SCOPED_LOCK` and using the pattern [found in a clang test](https://github.com/llvm/llvm-project/blob/main/clang/test/SemaCXX/warn-thread-safety-analysis.cpp#L3126). Though the docs don't describe how to accomplish it, the functionality was added [in this commit](https://github.com/llvm/llvm-project/commit/6a68efc959bd1024506bf661a9e155de8a8440da). Due to aliasing issues (see link above), in order to work correctly, the original mutex has to be passed along with the lock, so all existing `REVERSE_LOCK`s have been updated. To ensure that the mutexes actually match, a runtime assertion is added.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2025-05-10T00:49:47Z",
    "updated_at": "2025-06-03T12:45:11Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "ab1810d47ba75084be4bf77224ded88a22e3a86c",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "theuni:fix-reverselock",
      "ref": "fix-reverselock",
      "sha": "96a341d4064132292621af404de908f01fbe3e2f",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 10302141,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMDMwMjE0MQ==",
        "name": "bitcoin",
        "full_name": "theuni/bitcoin",
        "owner": {
          "login": "theuni",
          "id": 417043,
          "node_id": "MDQ6VXNlcjQxNzA0Mw==",
          "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/theuni",
          "html_url": "https://github.com/theuni",
          "followers_url": "https://api.github.com/users/theuni/followers",
          "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
          "organizations_url": "https://api.github.com/users/theuni/orgs",
          "repos_url": "https://api.github.com/users/theuni/repos",
          "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/theuni/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/theuni/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/theuni/bitcoin",
        "archive_url": "https://api.github.com/repos/theuni/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/theuni/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/theuni/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/theuni/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/theuni/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/theuni/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/theuni/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/theuni/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/theuni/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/theuni/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/theuni/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/theuni/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/theuni/bitcoin/events",
        "forks_url": "https://api.github.com/repos/theuni/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/theuni/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/theuni/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/theuni/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/theuni/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/theuni/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/theuni/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/theuni/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/theuni/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/theuni/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/theuni/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/theuni/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/theuni/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/theuni/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/theuni/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/theuni/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:theuni/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/theuni/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/theuni/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/theuni/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/theuni/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/theuni/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/theuni/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/theuni/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/theuni/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/theuni/bitcoin/hooks",
        "svn_url": "https://github.com/theuni/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 5,
        "watchers_count": 5,
        "size": 268521,
        "default_branch": "trivial-next",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-05-29T17:03:01Z",
        "created_at": "2013-05-26T18:55:06Z",
        "updated_at": "2025-05-16T09:56:09Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "19b1e177d673af190e589b7b9277fadc9e3a8d9e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37305,
        "stargazers_count": 83944,
        "watchers_count": 83944,
        "size": 283269,
        "default_branch": "master",
        "open_issues_count": 743,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-03T08:10:52Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-06-03T12:38:00Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 33,
    "deletions": 23,
    "changed_files": 6,
    "commits": 4,
    "review_comments": 6,
    "comments": 8
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgzMmM1N2E1MzQxMDg3MDQ3MWE1MjY0N2NlMTA3NDU0ZGUzYmM2OWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/832c57a53410870471a52647ce107454de3bc69c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/832c57a53410870471a52647ce107454de3bc69c",
      "tree": {
        "sha": "e6c3d17802d3dee58571beaa511b2de5712d0fb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e6c3d17802d3dee58571beaa511b2de5712d0fb2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/66c968b4b4a98b1d476cb79b0dd2f6b09420c945",
          "sha": "66c968b4b4a98b1d476cb79b0dd2f6b09420c945",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/66c968b4b4a98b1d476cb79b0dd2f6b09420c945"
        }
      ],
      "message": "thread-safety: modernize thread safety macros\n\nClang added new \"capability\"-based thread-safety attributes years ago, but the\nold ones remain supported for backwards-compatibility.\n\nHowever, while adding annotations for our reverse_lock, I noticed that there\nis a difference between the unlock_function and release_capability attributes.\n\nunlock_function actually maps to release_generic_capability, which does not\nwork properly when implementing a scoped unlocker.\n\nTo be consistent, the other capability-based attributes are updated here as\nwell. To avoid having to update our macro usage throughout the codebase, I\nreused our existing ones.\n\nAdditionally, SHARED_UNLOCK_FUNCTION is added here, as a subsequent PR will\nintroduce annotations for shared_mutex and shared_lock.",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2025-05-08T20:13:46Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2025-05-07T22:13:27Z"
      },
      "sha": "832c57a53410870471a52647ce107454de3bc69c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFlZWE1ZjBlYzExMmY5ZWMyOWRhMzc4MDY5MjVlOTYxYzQ5OTgzNjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aeea5f0ec112f9ec29da37806925e961c4998365",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/aeea5f0ec112f9ec29da37806925e961c4998365",
      "tree": {
        "sha": "02bd526c33323db3a1cd88fa62c72c8fa8cb2eb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02bd526c33323db3a1cd88fa62c72c8fa8cb2eb5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/832c57a53410870471a52647ce107454de3bc69c",
          "sha": "832c57a53410870471a52647ce107454de3bc69c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/832c57a53410870471a52647ce107454de3bc69c"
        }
      ],
      "message": "thread-safety: add missing lock annotation\n\nNo warning is currently emitted because our reverse_lock does not enforce our\nthread-safety annotations. Once it is fixed, the unlock would cause a warning.",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2025-05-08T20:14:00Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2025-05-08T13:30:12Z"
      },
      "sha": "aeea5f0ec112f9ec29da37806925e961c4998365"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAwNjViOTY3M2RiNWRhMjk5NGIwYjA3YzFkNTBlYmZiMTlhZjM5ZDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0065b9673db5da2994b0b07c1d50ebfb19af39d0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0065b9673db5da2994b0b07c1d50ebfb19af39d0",
      "tree": {
        "sha": "6d4f11510324b49cee0beec7b903c261e730ad89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d4f11510324b49cee0beec7b903c261e730ad89"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aeea5f0ec112f9ec29da37806925e961c4998365",
          "sha": "aeea5f0ec112f9ec29da37806925e961c4998365",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/aeea5f0ec112f9ec29da37806925e961c4998365"
        }
      ],
      "message": "thread-safety: add missing lockname for reverse_lock\n\nNoticed while adding annotations to reverse_lock.",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2025-05-08T20:16:10Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2025-05-08T14:22:13Z"
      },
      "sha": "0065b9673db5da2994b0b07c1d50ebfb19af39d0"
    },
    {
      "event": "commented",
      "id": 2868159902,
      "node_id": "IC_kwDOABII586q9KWe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2868159902",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-10T00:49:49Z",
      "updated_at": "2025-06-02T21:23:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32465.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/32465#pullrequestreview-2830729911), [davidgumberg](https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2917613764), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/32465#pullrequestreview-2879271077), [fjahr](https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2924853250) |\n| Concept ACK | [hebasto](https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2868610302), [achow101](https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2932543075) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32592](https://github.com/bitcoin/bitcoin/pull/32592) (threading: remove ancient CRITICAL_SECTION macros by theuni)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2868159902",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32465"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk2YTM0MWQ0MDY0MTMyMjkyNjIxYWY0MDRkZTkwOGYwMWZiZTNlMmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96a341d4064132292621af404de908f01fbe3e2f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/96a341d4064132292621af404de908f01fbe3e2f",
      "tree": {
        "sha": "f107f297fa0587754898253624265841122d3107",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f107f297fa0587754898253624265841122d3107"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0065b9673db5da2994b0b07c1d50ebfb19af39d0",
          "sha": "0065b9673db5da2994b0b07c1d50ebfb19af39d0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0065b9673db5da2994b0b07c1d50ebfb19af39d0"
        }
      ],
      "message": "thread-safety: fix annotations with REVERSE_LOCK\n\nWithout proper annotations, clang thinks that mutexes are still held for the\nduration of a reverse_lock. This could lead to subtle bugs as\nEXCLUSIVE_LOCKS_REQUIRED(foo) passes when it shouldn't.\n\nAs mentioned in the docs [0], clang's thread-safety analyzer is unable to deal\nwith aliases of mutexes, so it is not possible to use the lock's copy of the\nmutex for that purpose. Instead, the original mutex needs to be passed back to\nthe reverse_lock for the sake of thread-safety analysis, but it is not actually\nused otherwise.\n\n[0]: https://clang.llvm.org/docs/ThreadSafetyAnalysis.html",
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2025-05-10T03:48:17Z"
      },
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2025-05-07T16:01:10Z"
      },
      "sha": "96a341d4064132292621af404de908f01fbe3e2f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17599804343,
      "node_id": "HRFPE_lADOABII5862ACsKzwAAAAQZB7O3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17599804343",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "96a341d4064132292621af404de908f01fbe3e2f",
      "commit_url": "https://api.github.com/repos/theuni/bitcoin/commits/96a341d4064132292621af404de908f01fbe3e2f",
      "created_at": "2025-05-10T03:48:37Z"
    },
    {
      "event": "commented",
      "id": 2868610302,
      "node_id": "IC_kwDOABII586q-4T-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2868610302",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-10T07:43:53Z",
      "updated_at": "2025-05-10T07:43:53Z",
      "author_association": "MEMBER",
      "body": "Concept ACK.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2868610302",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32465"
    },
    {
      "event": "labeled",
      "id": 17601765646,
      "node_id": "LE_lADOABII5862ACsKzwAAAAQZJaEO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17601765646",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-10T10:53:00Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "labeled",
      "id": 17601766797,
      "node_id": "LE_lADOABII5862ACsKzwAAAAQZJaWN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17601766797",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-10T10:53:37Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 2830729911,
      "node_id": "PRR_kwDOABII586ouYK3",
      "url": null,
      "actor": null,
      "commit_id": "96a341d4064132292621af404de908f01fbe3e2f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 96a341d4064132292621af404de908f01fbe3e2f",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#pullrequestreview-2830729911",
      "submitted_at": "2025-05-10T12:07:13Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465"
    },
    {
      "event": "review_requested",
      "id": 17601959650,
      "node_id": "RRE_lADOABII5862ACsKzwAAAAQZKJbi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17601959650",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-10T12:07:17Z",
      "requested_reviewer": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "referenced",
      "id": 17776395957,
      "node_id": "REFE_lADOABII5862ACsKzwAAAAQjjka1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17776395957",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0a8ab559514fafd44340f8267202938c2136e2f5",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a8ab559514fafd44340f8267202938c2136e2f5",
      "created_at": "2025-05-22T16:57:38Z"
    },
    {
      "event": "reviewed",
      "id": 2862723933,
      "node_id": "PRR_kwDOABII586qobNd",
      "url": null,
      "actor": null,
      "commit_id": "96a341d4064132292621af404de908f01fbe3e2f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#pullrequestreview-2862723933",
      "submitted_at": "2025-05-22T23:17:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465"
    },
    {
      "event": "reviewed",
      "id": 2876361118,
      "node_id": "PRR_kwDOABII586rccme",
      "url": null,
      "actor": null,
      "commit_id": "96a341d4064132292621af404de908f01fbe3e2f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#pullrequestreview-2876361118",
      "submitted_at": "2025-05-28T20:35:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465"
    },
    {
      "event": "commented",
      "id": 2917613764,
      "node_id": "IC_kwDOABII586t50DE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2917613764",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-28T21:06:10Z",
      "updated_at": "2025-05-28T21:06:10Z",
      "author_association": "CONTRIBUTOR",
      "body": "crACK 96a341d4064132292621af404de908f01fbe3e2f\r\n\r\n`src/node/interfaces.cpp`'s `FillBlock()` is incorrectly annotated, and no warning is emitted, cherry-picking the commits that fix `reverse_lock`'s annotations, the thread safety analyzer complains as it should about `FillBlock()`:\r\n\r\n```bash\r\n$ git checkout --detach master && git cherry-pick 0065b9673db5da2994b0b07c1d50ebfb19af39d0^..96a341d4064132292621af404de908f01fbe3e2f\r\n$ CC=clang CXX=clang++ cmake -B build && cmake --build build -j $(nproc)\r\n# [...]\r\n/bitcoin/src/node/interfaces.cpp:446:9: warning: releasing mutex 'cs_main' that was not held [-Wthread-safety-analysis]\r\n  446 |         REVERSE_LOCK(lock, cs_main);\r\n      |         ^\r\n/bitcoin/src/sync.h:251:82: note: expanded from macro 'REVERSE_LOCK'\r\n  251 | #define REVERSE_LOCK(g, cs) typename std::decay<decltype(g)>::type::reverse_lock UNIQUE_NAME(revlock)(g, cs, #g, __FILE__, __LINE__)\r\n```\r\n\r\nTested that without 832c57a53410870471a52647ce107454de3bc69c's change to `UNLOCK_FUNCTION()` thread safety analysis also fails.\r\n",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2917613764",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32465"
    },
    {
      "event": "review_requested",
      "id": 17870557535,
      "node_id": "RRE_lADOABII5862ACsKzwAAAAQpKxFf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17870557535",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T15:29:44Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2879271077,
      "node_id": "PRR_kwDOABII586rnjCl",
      "url": null,
      "actor": null,
      "commit_id": "96a341d4064132292621af404de908f01fbe3e2f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 96a341d4064132292621af404de908f01fbe3e2f. Nice changes modernizing the annotations and supporting better thread safety warnings.\r\n\r\n@theuni I'd be happy to merge this since it now has 3 acks but I'm wondering what you think of the arguments davidgumberg pointed to in https://github.com/bitcoin/bitcoin/pull/32465#discussion_r2112707324 against having a REVERSE_LOCK object at all?\r\n\r\nI think those arguments are pretty compelling, and think maybe the ideal thing would be to close this PR (to avoid confusing different approaches) and open a new PR dropping `REVERSE_LOCK` entirely and replacing with it lock/unlock calls, or perhaps with a `WITH_UNLOCK()` macro that runs a fragment of code with `unlock()` before and `lock()` after, and does not relock when an exception is thrown, and does not make an unsafe `lock()` call inside a destructor.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#pullrequestreview-2879271077",
      "submitted_at": "2025-05-29T19:52:09Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465"
    },
    {
      "event": "commented",
      "id": 2923398293,
      "node_id": "IC_kwDOABII586uP4SV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2923398293",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T20:18:10Z",
      "updated_at": "2025-05-30T20:19:21Z",
      "author_association": "MEMBER",
      "body": "> I think those arguments are pretty compelling, and think maybe the ideal thing would be to close this PR (to avoid confusing different approaches) and open a new PR dropping `REVERSE_LOCK` entirely and replacing with it lock/unlock calls, or perhaps with a `WITH_UNLOCK()` macro that runs a fragment of code with `unlock()` before and `lock()` after, and does not relock when an exception is thrown, and does not make an unsafe `lock()` call inside a destructor.\r\n\r\nHmm.\r\n\r\nFor context, my primary motivation here is preparing for the follow-up commits that will actually remove the `lock`/`unlock` methods completely, in order to force the exception-safe RAII wrappers. See these two commits: https://github.com/theuni/bitcoin/commit/d4b09184ae8ce38862a758423653f606e8b96045 and https://github.com/theuni/bitcoin/commit/1f2a9afdb302dd3f1686fe3461b9d7918a6b1859. My logic there was that there's basically no good reason why lock/unlock shouldn't be called together in the same scope, and any attempt to do so is almost guaranteed to be either a bad design or a bug.\r\n\r\nFor even more context, this is in preparation for adding a SharedMutex (std::shared_mutex/shared_lock wrappers with proper thread-safety annotations). Much of that work involves copying our current implementations, so I wanted them cleaned/tightened up as much as possible first.\r\n\r\nPoint taken about dtor exceptions and unwinding, but yeah, I think in practice if we're throwing in a `lock()` while unwinding, things have already gone sideways.\r\n\r\nImo the `REVERSE_LOCK` pattern clearly demonstrates intent and, together with bare `lock()`/`unlock()` removal, makes it impossible to do crazy things. For example, it's not possible to reverse or re-lock a `reverse_lock`, so one level deep is as far as you can go before having to re-architect your code to be more reasonable.\r\n\r\nSo maybe before deciding what to do here, I should ask what you think of the two commits above? If you're not onboard with removing bare `lock`/`unlock` functionality as a follow-up, this PR becomes much less interesting.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2923398293",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32465"
    },
    {
      "event": "commented",
      "id": 2924853250,
      "node_id": "IC_kwDOABII586uVbgC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2924853250",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-31T10:09:51Z",
      "updated_at": "2025-05-31T10:09:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "utACK 96a341d4064132292621af404de908f01fbe3e2f",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2924853250",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32465"
    },
    {
      "event": "commented",
      "id": 2932543075,
      "node_id": "IC_kwDOABII586uyw5j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2932543075",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-02T21:23:49Z",
      "updated_at": "2025-06-02T21:23:49Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\n> preparing for the follow-up commits that will actually remove the lock/unlock methods completely, in order to force the exception-safe RAII wrappers.\r\n\r\nI think that's a good idea.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2932543075",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32465"
    },
    {
      "event": "commented",
      "id": 2934027032,
      "node_id": "IC_kwDOABII586u4bMY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2934027032",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T08:02:23Z",
      "updated_at": "2025-06-03T08:02:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK on dropping non-RAII locks/unlocks. Maybe this can be done without reverse locks, e.g. a (maybe dumb) approach at replacing REVERSE_LOCK with LOCK*'s: https://github.com/davidgumberg/bitcoin/commit/fde4e277550095ade852ebbe09bf2f0c7533a42e",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2934027032",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32465"
    },
    {
      "event": "commented",
      "id": 2935063889,
      "node_id": "IC_kwDOABII586u8YVR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2935063889",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T12:45:09Z",
      "updated_at": "2025-06-03T12:45:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: theuni https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2923398293\r\n\r\n> For context, my primary motivation here is preparing for the follow-up commits that will actually remove the `lock`/`unlock` methods completely, in order to force the exception-safe RAII wrappers. See these two commits: [theuni@d4b0918](https://github.com/theuni/bitcoin/commit/d4b09184ae8ce38862a758423653f606e8b96045) and [theuni@1f2a9af](https://github.com/theuni/bitcoin/commit/1f2a9afdb302dd3f1686fe3461b9d7918a6b1859).\r\n\r\nYeah I think I'd disagree with this approach and I don't think it makes sense to remove the unlock + lock methods for the reasons davidgumberg quoted in https://github.com/bitcoin/bitcoin/pull/32465#discussion_r2112707324. RAII locking is great and makes sense. RAII unlocking seems dangerous and inferior to static verification provided by the thread annotations.\r\n\r\nTemporary unlocking can be useful when performing slow operations, and sometimes necessary when dealing with condition variables and external notifications, so the C++ library provides manual unlock/lock methods, but does not provide an automatic unlocking+relocking class for good reasons.\r\n\r\n> My logic there was that there's basically no good reason why lock/unlock shouldn't be called together in the same scope, and any attempt to do so is almost guaranteed to be either a bad design or a bug.\r\n\r\nThis is true for lock+unlock, but not for unlock+relock. If you acquire a lock and perform an operation, and the operation fails, part of the cleanup afterward should be to release the lock, and it makes sense to enforce this. But if you temporarily release a lock to perform an operation and the operation fails, it usually will not make sense to reacquire the lock as part of cleanup, and this should probably not even be the default behavior, let alone something strictly enforced by an API.\r\n \r\n> For even more context, this is in preparation for adding a SharedMutex (std::shared_mutex/shared_lock wrappers with proper thread-safety annotations). Much of that work involves copying our current implementations, so I wanted them cleaned/tightened up as much as possible first.\r\n\r\nThat makes sense. If you think this PR helps with that, I don't think this change is worse than the status quo. I just think it would be better if we eliminated REVERSE_LOCK entirely and replaced it with manual unlock+lock calls or a WITH_UNLOCK macro that unlocked before performing an operation, and relocked afterwards when the operation does not throw an exception.\r\n\r\nSince implementing that would touch all the same lines of code that this PR touches, it would be nice to make that change instead of this change to reduce churn. But it also seems fine if we think it is good to improve REVERSE_LOCK now in this PR and then remove it later in a future PR.\r\n\r\n> Point taken about dtor exceptions and unwinding, but yeah, I think in practice if we're throwing in a `lock()` while unwinding, things have already gone sideways.\r\n\r\nI think the point about having a call that throws in a destructor is a small part of the argument. The bigger point is that it does not make sense to relock in the error case to begin with. In the error case, even when the relock call succeeds, it will usually be pointless and unnecessary because it will be immediately followed by another unlock call as the stack unwinds\r\n\r\nAlso, I'd reject the the idea that if a lock call fails it means there has been some catastrophic failure. We are using pretty basic locks, but more generally locks can support things like deadlock detection and timeouts so a good locking API will closely resemble the C++ standard API with a locking RAII class and manual lock and unlock methods. There will not be a funky unlocking RAII class that makes a lock call in the destructor because it's not really a good idea.\r\n\r\nre: davidgumberg https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2934027032\r\n\r\n> Concept ACK on dropping non-RAII locks/unlocks. Maybe this can be done without reverse locks, e.g. a (maybe dumb) approach at replacing REVERSE_LOCK with LOCK*'s: [davidgumberg@fde4e27](https://github.com/davidgumberg/bitcoin/commit/fde4e277550095ade852ebbe09bf2f0c7533a42e)\r\n\r\nIMO that commit is a good demonstration of why it would be good to replace REVERSE_LOCK with manual unlock() + lock() calls or with a WITH_UNLOCK macro that makes them automatically.\r\n\r\nFor example there would be no need to restructure `ValidationSignalsImpl::Iterate`. We could simply replace `{ REVERSE_LOCK(lock); f(); }` with `{ lock.unlock(); f(); lock.lock(); }` or `WITH_UNLOCK(lock, f());`",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#issuecomment-2935063889",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32465"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2083111057",
      "pull_request_review_id": 2830729911,
      "id": 2083111057,
      "node_id": "PRRC_kwDOABII5858KcCR",
      "diff_hunk": "@@ -15,23 +15,24 @@\n // See https://clang.llvm.org/docs/ThreadSafetyAnalysis.html\n // for documentation.  The clang compiler can do advanced static analysis\n // of locking when given the -Wthread-safety option.\n-#define LOCKABLE __attribute__((lockable))\n+#define LOCKABLE __attribute__((capability(\"\")))\n #define SCOPED_LOCKABLE __attribute__((scoped_lockable))",
      "path": "src/threadsafety.h",
      "position": 6,
      "original_position": 6,
      "commit_id": "96a341d4064132292621af404de908f01fbe3e2f",
      "original_commit_id": "832c57a53410870471a52647ce107454de3bc69c",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This threw me off for a bit, but while some attributes have been renamed, some have been kept the same, and their macros renamed instead. See: https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#mutex-h",
      "created_at": "2025-05-10T11:10:56Z",
      "updated_at": "2025-05-10T12:07:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#discussion_r2083111057",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2083111057"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2103549376",
      "pull_request_review_id": 2862723933,
      "id": 2103549376,
      "node_id": "PRRC_kwDOABII5859YZ3A",
      "diff_hunk": "@@ -15,23 +15,24 @@\n // See https://clang.llvm.org/docs/ThreadSafetyAnalysis.html\n // for documentation.  The clang compiler can do advanced static analysis\n // of locking when given the -Wthread-safety option.\n-#define LOCKABLE __attribute__((lockable))\n+#define LOCKABLE __attribute__((capability(\"\")))\n #define SCOPED_LOCKABLE __attribute__((scoped_lockable))\n #define GUARDED_BY(x) __attribute__((guarded_by(x)))\n #define PT_GUARDED_BY(x) __attribute__((pt_guarded_by(x)))\n #define ACQUIRED_AFTER(...) __attribute__((acquired_after(__VA_ARGS__)))\n #define ACQUIRED_BEFORE(...) __attribute__((acquired_before(__VA_ARGS__)))\n-#define EXCLUSIVE_LOCK_FUNCTION(...) __attribute__((exclusive_lock_function(__VA_ARGS__)))\n-#define SHARED_LOCK_FUNCTION(...) __attribute__((shared_lock_function(__VA_ARGS__)))\n-#define EXCLUSIVE_TRYLOCK_FUNCTION(...) __attribute__((exclusive_trylock_function(__VA_ARGS__)))\n-#define SHARED_TRYLOCK_FUNCTION(...) __attribute__((shared_trylock_function(__VA_ARGS__)))\n-#define UNLOCK_FUNCTION(...) __attribute__((unlock_function(__VA_ARGS__)))\n+#define EXCLUSIVE_LOCK_FUNCTION(...) __attribute__((acquire_capability(__VA_ARGS__)))\n+#define SHARED_LOCK_FUNCTION(...) __attribute__((acquire_shared_capability(__VA_ARGS__)))\n+#define EXCLUSIVE_TRYLOCK_FUNCTION(...) __attribute__((try_acquire_capability(__VA_ARGS__)))\n+#define SHARED_TRYLOCK_FUNCTION(...) __attribute__((try_acquire_shared_capability(__VA_ARGS__)))\n+#define UNLOCK_FUNCTION(...) __attribute__((release_capability(__VA_ARGS__)))",
      "path": "src/threadsafety.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "96a341d4064132292621af404de908f01fbe3e2f",
      "original_commit_id": "832c57a53410870471a52647ce107454de3bc69c",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit https://github.com/bitcoin/bitcoin/commit/832c57a53410870471a52647ce107454de3bc69c (_thread-safety: modernize thread safety macros_)\r\n\r\n----\r\n\r\nFeel free to disregard,  I am just trying to understand the motivation of this commit:\r\n\r\n> unlock_function actually maps to release_generic_capability, which does not\r\nwork properly when implementing a scoped unlocker.\r\n\r\nLooking at the example code in clang's [documentation](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#mutex-h):\r\n\r\n```cpp\r\n  // [ s/mutex/capability ] \r\n  // Release/unlock an exclusive mutex.\r\n  void Unlock() RELEASE();\r\n\r\n  // Release/unlock a shared mutex.\r\n  void ReaderUnlock() RELEASE_SHARED();\r\n\r\n  // Generic unlock, can unlock exclusive and shared mutexes.\r\n  void GenericUnlock() RELEASE_GENERIC();\r\n```\r\n\r\nSo, my assumption here is that when the \"unlock capability\" that ReverseLock takes is released generically, the thread safety analyzer can't be sure whether this was an exclusive capability or a shared one, consequently it is ambiguous whether the resource is locked again, because ReverseLock may have been one of many that took \"unlock capability\" on the lock, is that what the problem is? If release_generic can't disambiguate these situations, what is it even useful for annotating?\r\n\r\n-----\r\n\r\nI can see empirically why undoing just this part of the diff\r\n\r\n```diff\r\n\r\n-#define UNLOCK_FUNCTION(...) __attribute__((release_capability(__VA_ARGS__)))\r\n+#define UNLOCK_FUNCTION(...) __attribute__((unlock_function(__VA_ARGS__)))\r\n```\r\n\r\nthis passage:\r\n```cpp\r\n    if (block.m_data) {\r\n        REVERSE_LOCK(lock, cs_main);\r\n        if (!blockman.ReadBlock(*block.m_data, *index)) block.m_data->SetNull();\r\n    }\r\n    block.found = true;\r\n ```\r\n \r\n \r\nresults in the following error:\r\n\r\n```\r\nsrc/node/interfaces.cpp:449:19: warning: mutex 'cs_main' is not held on every path through here [-Wthread-safety-analysis]\r\n  449 |     block.found = true;\r\n```\r\n\r\nWhich indicates that the thread safety analyzer does not understand the \"unlock capability\" was released and the lock was taken again when the reverse lock went out of scope, I'm just not sure I understand why.",
      "created_at": "2025-05-22T23:13:11Z",
      "updated_at": "2025-05-22T23:17:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#discussion_r2103549376",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2103549376"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2112057623",
      "pull_request_review_id": 2875329330,
      "id": 2112057623,
      "node_id": "PRRC_kwDOABII585943EX",
      "diff_hunk": "@@ -15,23 +15,24 @@\n // See https://clang.llvm.org/docs/ThreadSafetyAnalysis.html\n // for documentation.  The clang compiler can do advanced static analysis\n // of locking when given the -Wthread-safety option.\n-#define LOCKABLE __attribute__((lockable))\n+#define LOCKABLE __attribute__((capability(\"\")))\n #define SCOPED_LOCKABLE __attribute__((scoped_lockable))\n #define GUARDED_BY(x) __attribute__((guarded_by(x)))\n #define PT_GUARDED_BY(x) __attribute__((pt_guarded_by(x)))\n #define ACQUIRED_AFTER(...) __attribute__((acquired_after(__VA_ARGS__)))\n #define ACQUIRED_BEFORE(...) __attribute__((acquired_before(__VA_ARGS__)))\n-#define EXCLUSIVE_LOCK_FUNCTION(...) __attribute__((exclusive_lock_function(__VA_ARGS__)))\n-#define SHARED_LOCK_FUNCTION(...) __attribute__((shared_lock_function(__VA_ARGS__)))\n-#define EXCLUSIVE_TRYLOCK_FUNCTION(...) __attribute__((exclusive_trylock_function(__VA_ARGS__)))\n-#define SHARED_TRYLOCK_FUNCTION(...) __attribute__((shared_trylock_function(__VA_ARGS__)))\n-#define UNLOCK_FUNCTION(...) __attribute__((unlock_function(__VA_ARGS__)))\n+#define EXCLUSIVE_LOCK_FUNCTION(...) __attribute__((acquire_capability(__VA_ARGS__)))\n+#define SHARED_LOCK_FUNCTION(...) __attribute__((acquire_shared_capability(__VA_ARGS__)))\n+#define EXCLUSIVE_TRYLOCK_FUNCTION(...) __attribute__((try_acquire_capability(__VA_ARGS__)))\n+#define SHARED_TRYLOCK_FUNCTION(...) __attribute__((try_acquire_shared_capability(__VA_ARGS__)))\n+#define UNLOCK_FUNCTION(...) __attribute__((release_capability(__VA_ARGS__)))",
      "path": "src/threadsafety.h",
      "position": 20,
      "original_position": 20,
      "commit_id": "96a341d4064132292621af404de908f01fbe3e2f",
      "original_commit_id": "832c57a53410870471a52647ce107454de3bc69c",
      "in_reply_to_id": 2103549376,
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> So, my assumption here is that when the \"unlock capability\" that ReverseLock takes is released generically, the thread safety analyzer can't be sure whether this was an exclusive capability or a shared one, consequently it is ambiguous whether the resource is locked again, because ReverseLock may have been one of many that took \"unlock capability\" on the lock, is that what the problem is? If release_generic can't disambiguate these situations, what is it even useful for annotating?\r\n\r\nMy best guess is that a generic unlock is intended to be usable for either a shared/unshared mutex. There's [conflicting info about what's supposed to happen when you call `unlock()` on a shared mutex](https://stackoverflow.com/questions/44652353/call-unlock-on-stdshared-mutex-that-is-locked-in-shared-mode), so perhaps the generic annotation is intended to simply work as both without complaining either way?\r\n\r\n> Which indicates that the thread safety analyzer does not understand the \"unlock capability\" was released and the lock was taken again when the reverse lock went out of scope, I'm just not sure I understand why.\r\n\r\nThis was my observation as well, and I think it's as simple as \"this is a clang bug\". See the PR description. I [PR'd an upstream fix here](https://github.com/llvm/llvm-project/pull/139343).",
      "created_at": "2025-05-28T14:25:32Z",
      "updated_at": "2025-05-28T14:25:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#discussion_r2112057623",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2112057623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2112707324",
      "pull_request_review_id": 2876361118,
      "id": 2112707324,
      "node_id": "PRRC_kwDOABII58597Vr8",
      "diff_hunk": "@@ -212,16 +213,19 @@ class SCOPED_LOCKABLE UniqueLock : public MutexType::unique_lock\n     /**\n      * An RAII-style reverse lock. Unlocks on construction and locks on destruction.\n      */\n-    class reverse_lock {\n+    class SCOPED_LOCKABLE reverse_lock {\n     public:\n-        explicit reverse_lock(UniqueLock& _lock, const char* _guardname, const char* _file, int _line) : lock(_lock), lockname(_guardname), file(_file), line(_line) {\n+        explicit reverse_lock(UniqueLock& _lock, const MutexType& mutex, const char* _guardname, const char* _file, int _line) UNLOCK_FUNCTION(mutex) : lock(_lock), lockname(_guardname), file(_file), line(_line) {\n+            // Ensure that mutex passed back for thread-safety analysis is indeed the original\n+            assert(std::addressof(mutex) == lock.mutex());\n+\n             CheckLastCritical((void*)lock.mutex(), lockname, _guardname, _file, _line);\n             lock.unlock();\n             LeaveCritical();\n             lock.swap(templock);\n         }\n \n-        ~reverse_lock() {\n+        ~reverse_lock() UNLOCK_FUNCTION() {",
      "path": "src/sync.h",
      "position": 27,
      "original_position": 27,
      "commit_id": "96a341d4064132292621af404de908f01fbe3e2f",
      "original_commit_id": "96a341d4064132292621af404de908f01fbe3e2f",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I was pretty puzzled by the annotations I think in part because of the deprecated \"lock/unlock\" terminology instead of \"acquire/release\", but also because the meaning of `UNLOCK_FUNCTION`/`RELEASE` appears to shift from the constructor to the destructor. \r\n\r\nA reasonable explanation of these semantics is provided by their author: https://bugs.llvm.org/show_bug.cgi?id=36162#c7\r\n> ```cpp\r\n> class SCOPED_CAPABILITY AutoUnlock {\r\n> public:\r\n>   // Release mu, implicitly acquire *this and connect it to mu.\r\n>   AutoUnlock(Mutex &mu) RELEASE(mu);\r\n> \r\n>   // Reacquire all underlying capabilities and warn on double lock.\r\n>   void lock() RELEASE();\r\n> \r\n>   // Release all underlying capabilities, warn on double unlock.\r\n>   void unlock() ACQUIRE();\r\n> \r\n>   // Release *this and acquire all underlying capabilities, if they are not held.\r\n>   // There is no warning on double lock.\r\n>   ~AutoUnlock() RELEASE();\r\n> };\r\n>``` \r\n>\r\n> Note that the destructor says RELEASE(), which seems a bit counter-intuitive. We release the scoped capability, which acquires the underlying capabilities.\r\n\r\nMore discussion here: https://bugs.llvm.org/show_bug.cgi?id=36162 and here: https://reviews.llvm.org/D52578\r\n\r\n----\r\n\r\nI wonder how persuaded one should be by the arguments *not* to use this pattern (RAII unlocks/reverse-locks) from [above](https://bugs.llvm.org/show_bug.cgi?id=36162#c3) \r\n\r\n> * Destructor calls are usually hidden behind return/break/continue statements and the regular exit from a block, which is why they are supposed to do only clean-up. Locking as part of cleaning up seems weird. As a consequence, there are potentially a bunch of implicit lock operations that are hard to see.\r\n> * The destructor will also be called on stack unwinding after an exception was thrown. This is an important reason for using AutoLock, but for AutoUnlock it means that we might acquire a mutex when unwinding the stack.\r\n> * Destructors are not supposed to throw exceptions, but locking can (generally) do that. Chromium's mutexes might not, but std::mutex::lock \"throws std::system_error when errors occur, including errors from the underlying operating system that would prevent lock from meeting its specifications.\" [1] Note that std::mutex::unlock is specified as noexcept.\r\n\r\nI think in the case of `ReadBlock()` a reverse lock could be avoided by moving locking from `ReadBlock()` to its callers, but, this topic is probably out of scope for this PR.",
      "created_at": "2025-05-28T20:35:48Z",
      "updated_at": "2025-05-29T20:02:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#discussion_r2112707324",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2112707324"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 228,
      "original_line": 228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2114541881",
      "pull_request_review_id": 2879271077,
      "id": 2114541881,
      "node_id": "PRRC_kwDOABII585-CVk5",
      "diff_hunk": "@@ -431,7 +431,7 @@ class NodeImpl : public Node\n };\n \n // NOLINTNEXTLINE(misc-no-recursion)\n-bool FillBlock(const CBlockIndex* index, const FoundBlock& block, UniqueLock<RecursiveMutex>& lock, const CChain& active, const BlockManager& blockman)\n+bool FillBlock(const CBlockIndex* index, const FoundBlock& block, UniqueLock<RecursiveMutex>& lock, const CChain& active, const BlockManager& blockman) EXCLUSIVE_LOCKS_REQUIRED(cs_main)",
      "path": "src/node/interfaces.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "96a341d4064132292621af404de908f01fbe3e2f",
      "original_commit_id": "aeea5f0ec112f9ec29da37806925e961c4998365",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"thread-safety: add missing lock annotation\" (aeea5f0ec112f9ec29da37806925e961c4998365)\r\n\r\nWould it also make sense to add `AssertLockHeld(cs_main)` here? Developer notes say to \"Combine annotations in function declarations with run-time asserts in function definitions\"",
      "created_at": "2025-05-29T18:42:48Z",
      "updated_at": "2025-05-29T19:52:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#discussion_r2114541881",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2114541881"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 434,
      "original_line": 434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2114630987",
      "pull_request_review_id": 2879271077,
      "id": 2114630987,
      "node_id": "PRRC_kwDOABII585-CrVL",
      "diff_hunk": "@@ -212,16 +213,19 @@ class SCOPED_LOCKABLE UniqueLock : public MutexType::unique_lock\n     /**\n      * An RAII-style reverse lock. Unlocks on construction and locks on destruction.\n      */\n-    class reverse_lock {\n+    class SCOPED_LOCKABLE reverse_lock {\n     public:\n-        explicit reverse_lock(UniqueLock& _lock, const char* _guardname, const char* _file, int _line) : lock(_lock), lockname(_guardname), file(_file), line(_line) {\n+        explicit reverse_lock(UniqueLock& _lock, const MutexType& mutex, const char* _guardname, const char* _file, int _line) UNLOCK_FUNCTION(mutex) : lock(_lock), lockname(_guardname), file(_file), line(_line) {\n+            // Ensure that mutex passed back for thread-safety analysis is indeed the original\n+            assert(std::addressof(mutex) == lock.mutex());\n+\n             CheckLastCritical((void*)lock.mutex(), lockname, _guardname, _file, _line);\n             lock.unlock();\n             LeaveCritical();\n             lock.swap(templock);\n         }\n \n-        ~reverse_lock() {\n+        ~reverse_lock() UNLOCK_FUNCTION() {",
      "path": "src/sync.h",
      "position": 27,
      "original_position": 27,
      "commit_id": "96a341d4064132292621af404de908f01fbe3e2f",
      "original_commit_id": "96a341d4064132292621af404de908f01fbe3e2f",
      "in_reply_to_id": 2112707324,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/32465#discussion_r2112707324\r\n\r\nThanks for finding the bugzilla link. Explanation there was very helpful.\r\n\r\nI also do find the arguments against AutoUnlock pretty persuasive, and looking at REVERSE_LOCK calls in our codebase, it seems like they could pretty easily be dropped and replaced with plain unlock/lock calls.\r\n\r\nDoesn't seem too important though. I think realistically if an exception is thrown, locking in the destructor should either be fine and succeed, or there must be a more serious bug or condition like an out of memory error where it wouldn't make a huge difference if the relock throws or deadlocks. \r\n\r\n",
      "created_at": "2025-05-29T19:40:14Z",
      "updated_at": "2025-05-29T19:52:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32465#discussion_r2114630987",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2114630987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32465"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 228,
      "original_line": 228,
      "side": "RIGHT"
    }
  ]
}