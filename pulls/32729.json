{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729",
    "id": 2584507258,
    "node_id": "PR_kwDOABII586aDHN6",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32729",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32729.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32729.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32729",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32729/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/54c2a4cb47959a109580c45dc835949819436f8f",
    "number": 32729,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test,refactor: extract script template helpers & widen sigop count coverage",
    "user": {
      "login": "l0rinc",
      "id": 1841944,
      "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l0rinc",
      "html_url": "https://github.com/l0rinc",
      "followers_url": "https://api.github.com/users/l0rinc/followers",
      "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
      "organizations_url": "https://api.github.com/users/l0rinc/orgs",
      "repos_url": "https://api.github.com/users/l0rinc/repos",
      "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/l0rinc/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "### Summary\r\n\r\nThis PR extracts a set of cheap, inline helpers for recognizing the most common script templates, clarifies the definition of valid op-codes for legacy (pre-Taproot) scripts, and splits the existing \"deserialize + check-block\" benchmark into three orthogonal micro-benchmarks.  \r\nThe change is behavior-neutral for consensus and policy - every modified call-site performs the same checks as before, just through clearer helper functions.\r\n\r\n### Context\r\n\r\nWhile working on [`GetSigOpCount` optimizations for known script templates](https://github.com/bitcoin/bitcoin/pull/32532) I noticed that feature-test coverage was [thin for this code path](https://maflcko.github.io/b-c-cov/total.coverage/src/script/script.cpp.gcov.html).  \r\nThis PR therefore adds tests for error cases (malformed push-data encodings) and for the expected sigop totals of the various script templates (including edge cases like a sigop after an `OP_RETURN`).\r\n\r\nGiven the difficulty of reviewing the [original optimizations themselves](https://github.com/bitcoin/bitcoin/pull/32532#issuecomment-2950665350), I split all test / benchmark work into this standalone PR.  \r\nThe recent burst of sigops related refactor activity ([#31624](https://github.com/bitcoin/bitcoin/pull/31624), [#32521](https://github.com/bitcoin/bitcoin/pull/32521), [#32533](https://github.com/bitcoin/bitcoin/pull/32533)) underlines the need for extra safety.\r\n\r\nThe refactors here eliminate magic numbers, deduplicate template checks, and lay groundwork for future performance work.\r\n\r\n### Structure\r\n\r\n* **Benchmarks** - first commits separate deserialization+hashing, validation, and sigop counting so each cost can be measured independently.  \r\n* **Template helpers** - tiny, mechanical commits move each script-template check into `script.h`, replace all ad-hoc byte-checks, and add tests where necessary.  \r\n* **Tests** - a full script-test suite covering malformed `PUSHDATA` sequences and the legacy / accurate sigop totals for every standard template.  \r\n* **Legacy opcode ceiling** - final commit documents, enforces, and tests that `OP_CHECKSIGADD` > `MAX_OPCODE`.\r\n* **Extra fuzzing** - enabled all possible opcodes in `ConsumeOpcodeType`",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2025-06-11T14:44:28Z",
    "updated_at": "2025-08-07T22:33:01Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "f41dfc83064f7d211ce77efb6ceeaf7299fcf161",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "l0rinc:l0rinc/sigop-testing",
      "ref": "l0rinc/sigop-testing",
      "sha": "54c2a4cb47959a109580c45dc835949819436f8f",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 674169038,
        "node_id": "R_kgDOKC8Azg",
        "name": "bitcoin",
        "full_name": "l0rinc/bitcoin",
        "owner": {
          "login": "l0rinc",
          "id": 1841944,
          "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/l0rinc",
          "html_url": "https://github.com/l0rinc",
          "followers_url": "https://api.github.com/users/l0rinc/followers",
          "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
          "organizations_url": "https://api.github.com/users/l0rinc/orgs",
          "repos_url": "https://api.github.com/users/l0rinc/repos",
          "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/l0rinc/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/l0rinc/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/l0rinc/bitcoin",
        "archive_url": "https://api.github.com/repos/l0rinc/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/l0rinc/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/l0rinc/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/l0rinc/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/l0rinc/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/l0rinc/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/l0rinc/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/l0rinc/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/l0rinc/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/l0rinc/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/l0rinc/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/l0rinc/bitcoin/events",
        "forks_url": "https://api.github.com/repos/l0rinc/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/l0rinc/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/l0rinc/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/l0rinc/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/l0rinc/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/l0rinc/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/l0rinc/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/l0rinc/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/l0rinc/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/l0rinc/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/l0rinc/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/l0rinc/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/l0rinc/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:l0rinc/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/l0rinc/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/l0rinc/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/l0rinc/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/l0rinc/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/l0rinc/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/l0rinc/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/l0rinc/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/l0rinc/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/l0rinc/bitcoin/hooks",
        "svn_url": "https://github.com/l0rinc/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 270889,
        "default_branch": "master",
        "open_issues_count": 5,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-07T22:35:52Z",
        "created_at": "2023-08-03T09:49:12Z",
        "updated_at": "2025-08-04T01:45:17Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2bb06bcaf284d3522db5411890c20ba1a587703e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37616,
        "stargazers_count": 84918,
        "watchers_count": 84918,
        "size": 290947,
        "default_branch": "master",
        "open_issues_count": 749,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-07T13:53:30Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-07T20:14:50Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 494,
    "deletions": 207,
    "changed_files": 26,
    "commits": 17,
    "review_comments": 80,
    "comments": 7
  },
  "events": [
    {
      "event": "commented",
      "id": 2963122620,
      "node_id": "IC_kwDOABII586wnam8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2963122620",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-11T14:44:32Z",
      "updated_at": "2025-08-07T22:32:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32729.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Stale ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/32729#pullrequestreview-3097866742) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32554](https://github.com/bitcoin/bitcoin/pull/32554) (bench: replace embedded raw block with configurable block generator by l0rinc)\n* [#32317](https://github.com/bitcoin/bitcoin/pull/32317) (kernel: Separate UTXO set access from validation functions by TheCharlatan)\n* [#31989](https://github.com/bitcoin/bitcoin/pull/31989) (BIP-119 (OP_CHECKTEMPLATEVERIFY) (regtest only) by jamesob)\n* [#31868](https://github.com/bitcoin/bitcoin/pull/31868) ([IBD] specialize block serialization by l0rinc)\n* [#31682](https://github.com/bitcoin/bitcoin/pull/31682) ([IBD] specialize CheckBlock's input & coinbase checks by l0rinc)\n* [#29060](https://github.com/bitcoin/bitcoin/pull/29060) (Policy: Report reason inputs are non standard by ismaelsadeeq)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#issuecomment-2963122620",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32729"
    },
    {
      "event": "renamed",
      "id": 18096108144,
      "node_id": "RTE_lADOABII5866_H3nzwAAAAQ2nLJw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18096108144",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-11T14:46:14Z",
      "rename": {
        "from": "test,refactor: sigops",
        "to": "test: extract script template helpers & widen sigop count coverage"
      }
    },
    {
      "event": "labeled",
      "id": 18096109274,
      "node_id": "LE_lADOABII5866_H3nzwAAAAQ2nLba",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18096109274",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-11T14:46:17Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "renamed",
      "id": 18096453480,
      "node_id": "RTE_lADOABII5866_H3nzwAAAAQ2ofdo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18096453480",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-11T15:02:25Z",
      "rename": {
        "from": "test: extract script template helpers & widen sigop count coverage",
        "to": "test,refactor: extract script template helpers & widen sigop count coverage"
      }
    },
    {
      "event": "ready_for_review",
      "id": 18099752595,
      "node_id": "RFRE_lADOABII5866_H3nzwAAAAQ21E6T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18099752595",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-11T18:21:25Z"
    },
    {
      "event": "labeled",
      "id": 18102627041,
      "node_id": "LE_lADOABII5866_H3nzwAAAAQ3ACrh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18102627041",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-11T22:14:06Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18113104532,
      "node_id": "HRFPE_lADOABII5866_H3nzwAAAAQ3oAqU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18113104532",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0582b630d7b61108bc37eaa91e9761e9923f5aed",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/0582b630d7b61108bc37eaa91e9761e9923f5aed",
      "created_at": "2025-06-12T11:12:47Z"
    },
    {
      "event": "unlabeled",
      "id": 18115228099,
      "node_id": "UNLE_lADOABII5866_H3nzwAAAAQ3wHHD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18115228099",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-12T13:07:35Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 18725479148,
      "node_id": "LE_lADOABII5866_H3nzwAAAARcICLs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18725479148",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-21T10:23:38Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3096072785,
      "node_id": "IC_kwDOABII5864ilJR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3096072785",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-21T10:23:40Z",
      "updated_at": "2025-07-21T10:23:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `tidy`: https://github.com/bitcoin/bitcoin/runs/43965124848</sub>\n<sub>LLM reason (✨ experimental): The failure is caused by a compilation error in policy.cpp where a boolean value is incorrectly passed to a function expecting a CScript reference.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#issuecomment-3096072785",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32729"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18736001025,
      "node_id": "HRFPE_lADOABII5866_H3nzwAAAARcwLAB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18736001025",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5d29ce5c441656a3116d7151e78cd800ace6288e",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/5d29ce5c441656a3116d7151e78cd800ace6288e",
      "created_at": "2025-07-21T19:57:44Z"
    },
    {
      "event": "commented",
      "id": 3098376004,
      "node_id": "IC_kwDOABII5864rXdE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3098376004",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-21T19:58:48Z",
      "updated_at": "2025-07-21T19:58:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased after https://github.com/bitcoin/bitcoin/pull/32521/files#diff-ea6d307faa4ec9dfa5abcf6858bc19603079f2b8e110e1d62da4df98f4bdb9c0R184",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#issuecomment-3098376004",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32729"
    },
    {
      "event": "unlabeled",
      "id": 18739438037,
      "node_id": "UNLE_lADOABII5866_H3nzwAAAARc9SHV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18739438037",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-22T00:17:02Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBhYmJhZDJkZTQxM2IyODk0YTEwYTRkYWQ3NzNmM2NmMGE1NjI1MTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0abbad2de413b2894a10a4dad773f3cf0a562518",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0abbad2de413b2894a10a4dad773f3cf0a562518",
      "tree": {
        "sha": "94af1547fbcb7dc10702bd8d382132998f83190d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/94af1547fbcb7dc10702bd8d382132998f83190d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/321984705dbcc5982013c8cfb52389cf3f2e75f6",
          "sha": "321984705dbcc5982013c8cfb52389cf3f2e75f6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/321984705dbcc5982013c8cfb52389cf3f2e75f6"
        }
      ],
      "message": "bench: measure `CheckBlock` speed separately from serialization\n\nTo measure CheckBlock performance in isolation from deserialization overhead, a ResetChecked() method was introduced to re-enable the block's validation state, allowing repeated validation of the same block instance.",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-07-28T20:27:23Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-01-18T10:43:26Z"
      },
      "sha": "0abbad2de413b2894a10a4dad773f3cf0a562518"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM3ZjcyMzQwZjk1YzQ1ZTcxODU5NGI3NWMyMzFhNjk0ZjQyZWFkNDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37f72340f95c45e718594b75c231a694f42ead40",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/37f72340f95c45e718594b75c231a694f42ead40",
      "tree": {
        "sha": "216bd5adc55965fc49db07a4b8c4a8f849a0ac54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/216bd5adc55965fc49db07a4b8c4a8f849a0ac54"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0abbad2de413b2894a10a4dad773f3cf0a562518",
          "sha": "0abbad2de413b2894a10a4dad773f3cf0a562518",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0abbad2de413b2894a10a4dad773f3cf0a562518"
        }
      ],
      "message": "bench: measure `SigOpsBlock` speed separately\n\nAdd benchmark to measure the performance of counting legacy signature operations in a block, independent of other validation steps.",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-07-28T20:27:23Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-01-18T10:43:26Z"
      },
      "sha": "37f72340f95c45e718594b75c231a694f42ead40"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18864273057,
      "node_id": "HRFPE_lADOABII5866_H3nzwAAAARkZfah",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18864273057",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6bf4c8d48f61089254532b065d9ca8e1c2bf6868",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6bf4c8d48f61089254532b065d9ca8e1c2bf6868",
      "created_at": "2025-07-28T20:40:17Z"
    },
    {
      "event": "commented",
      "id": 3129749041,
      "node_id": "IC_kwDOABII5866jC4x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3129749041",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T20:42:00Z",
      "updated_at": "2025-07-28T20:42:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased after https://github.com/bitcoin/bitcoin/pull/32279 - updating the tests with the new convenience template helpers instead of using `Solver` for them. Ready for review again.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#issuecomment-3129749041",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32729"
    },
    {
      "event": "reviewed",
      "id": 3086147229,
      "node_id": "PRR_kwDOABII58638t6d",
      "url": null,
      "actor": null,
      "commit_id": "06cb252c8285746737e3385886da2efd1ab41f5a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#pullrequestreview-3086147229",
      "submitted_at": "2025-08-05T00:22:14Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18981662008,
      "node_id": "HRFPE_lADOABII5866_H3nzwAAAARrZS04",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18981662008",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1d49b3b3bd93b246dd70e26145735653a4baf45e",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/1d49b3b3bd93b246dd70e26145735653a4baf45e",
      "created_at": "2025-08-05T02:21:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18981691594,
      "node_id": "HRFPE_lADOABII5866_H3nzwAAAARrZaDK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18981691594",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "db4bf84c87bc27f10c0ca393469ec13e61b64fd1",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/db4bf84c87bc27f10c0ca393469ec13e61b64fd1",
      "created_at": "2025-08-05T02:25:20Z"
    },
    {
      "event": "labeled",
      "id": 18981814355,
      "node_id": "LE_lADOABII5866_H3nzwAAAARrZ4BT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18981814355",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-05T02:39:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3153073760,
      "node_id": "IC_kwDOABII58678BZg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3153073760",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-05T02:39:18Z",
      "updated_at": "2025-08-05T02:39:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `MSan, depends`: https://github.com/bitcoin/bitcoin/runs/47383324322</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by a compilation error in script_ops.cpp: 'GetSigOpCount' is missing in 'CScript'.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#issuecomment-3153073760",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32729"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18982513382,
      "node_id": "HRFPE_lADOABII5866_H3nzwAAAARrcirm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18982513382",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f8208e92bd103359f8c3ceb3361eb7904099e994",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/f8208e92bd103359f8c3ceb3361eb7904099e994",
      "created_at": "2025-08-05T03:56:58Z"
    },
    {
      "event": "unlabeled",
      "id": 18983160358,
      "node_id": "UNLE_lADOABII5866_H3nzwAAAARrfAom",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18983160358",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-05T05:04:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 3087824321,
      "node_id": "PRR_kwDOABII5864DHXB",
      "url": null,
      "actor": null,
      "commit_id": "f8208e92bd103359f8c3ceb3361eb7904099e994",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review f8208e92bd103359f8c3ceb3361eb7904099e994. Thanks for the updates, and I started reviewing the next chunk of this. Overall the changes seem helpful and well-considered and the extra test and benchmark coverage seem like they should be useful.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#pullrequestreview-3087824321",
      "submitted_at": "2025-08-05T12:34:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
    },
    {
      "event": "reviewed",
      "id": 3088705783,
      "node_id": "PRR_kwDOABII5864Gej3",
      "url": null,
      "actor": null,
      "commit_id": "f8208e92bd103359f8c3ceb3361eb7904099e994",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#pullrequestreview-3088705783",
      "submitted_at": "2025-08-05T16:02:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
    },
    {
      "event": "reviewed",
      "id": 3089148272,
      "node_id": "PRR_kwDOABII5864IKlw",
      "url": null,
      "actor": null,
      "commit_id": "f8208e92bd103359f8c3ceb3361eb7904099e994",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK f8208e92bd103359f8c3ceb3361eb7904099e994. I finished reviewing this and didn't see any problems, just left various suggestions. The changes overall seem nice for making this code less confusing and adding better test & benchmark coverage.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#pullrequestreview-3089148272",
      "submitted_at": "2025-08-05T18:41:55Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19002879870,
      "node_id": "HRFPE_lADOABII5866_H3nzwAAAARsqO9-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19002879870",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "dbf0a6791474efd8a498eb4e1ea15319f159ab14",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/dbf0a6791474efd8a498eb4e1ea15319f159ab14",
      "created_at": "2025-08-06T02:13:33Z"
    },
    {
      "event": "commented",
      "id": 3157187483,
      "node_id": "IC_kwDOABII5868Ltub",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3157187483",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-06T02:15:59Z",
      "updated_at": "2025-08-06T02:31:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "Addressed or responded to all concerns, thanks for spending the time to review this.\r\nI've extended the fuzzer to use the whole range of possible opcodes, I'm curious to see if it reveals any new failures.\r\nThe change consists of tiny, simple changes, other reviewers are welcome.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#issuecomment-3157187483",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32729"
    },
    {
      "event": "review_requested",
      "id": 19002913873,
      "node_id": "RRE_lADOABII5866_H3nzwAAAARsqXRR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19002913873",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-06T02:17:52Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19003011827,
      "node_id": "HRFPE_lADOABII5866_H3nzwAAAARsqvLz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19003011827",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "dd1a7ab428a7c7f87b2a02580aca0d593c2de68a",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/dd1a7ab428a7c7f87b2a02580aca0d593c2de68a",
      "created_at": "2025-08-06T02:30:44Z"
    },
    {
      "event": "labeled",
      "id": 19003017614,
      "node_id": "LE_lADOABII5866_H3nzwAAAARsqwmO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19003017614",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-06T02:31:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3157208110,
      "node_id": "IC_kwDOABII5868Lywu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3157208110",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-06T02:31:37Z",
      "updated_at": "2025-08-06T02:31:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/47470624304</sub>\n<sub>LLM reason (✨ experimental): Lint check failed due to locale-dependent code usage in src/test/sigopcount_tests.cpp.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#issuecomment-3157208110",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32729"
    },
    {
      "event": "unlabeled",
      "id": 19003591687,
      "node_id": "UNLE_lADOABII5866_H3nzwAAAARss8wH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19003591687",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-06T03:41:08Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 3097866742,
      "node_id": "PRR_kwDOABII5864pbH2",
      "url": null,
      "actor": null,
      "commit_id": "dd1a7ab428a7c7f87b2a02580aca0d593c2de68a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK dd1a7ab428a7c7f87b2a02580aca0d593c2de68a. Thanks for the updates! I left a few more suggestions, but nothing important.\r\n\r\nI think it might be good to link directly to your optimization commit d76d7531dfcc7ef2d104b8977a2239cb1fc89119 in the PR description since it helps explain the changes here and bring them together.\r\n\r\nOn style changes in the CScript methods I think they are an improvement overall, though personally I'd try to avoid front/back methods and magic numbers and write them more like:\r\n\r\n```c++\r\n        return size() == (5 + HASH160_SIZE) &&\r\n               (*this)[0] == OP_DUP &&\r\n               (*this)[1] == OP_HASH160 &&\r\n               (*this)[2] == HASH160_SIZE &&\r\n               (*this)[3 + HASH160_SIZE] == OP_EQUALVERIFY &&\r\n               (*this)[4 + HASH160_SIZE] == OP_CHECKSIG;\r\n```\r\n\r\nBut no need to bikeshed and whatever you or other reviewers prefer seems fine. Existing style also is fine.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#pullrequestreview-3097866742",
      "submitted_at": "2025-08-07T19:26:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY1NThmOWNlMzE5OWY4ZDk5YzJmZjE0MDUyMDAxYzBkZTY3MTA3NTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6558f9ce3199f8d99c2ff14052001c0de6710752",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6558f9ce3199f8d99c2ff14052001c0de6710752",
      "tree": {
        "sha": "c44e411f99df89eaac6c967d7c3b4340d75ef8fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c44e411f99df89eaac6c967d7c3b4340d75ef8fc"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37f72340f95c45e718594b75c231a694f42ead40",
          "sha": "37f72340f95c45e718594b75c231a694f42ead40",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/37f72340f95c45e718594b75c231a694f42ead40"
        }
      ],
      "message": "refactor: rename `GetSigOpCount` to `CountSigOps`\n\nPrevious `GetSigOpCount` method was overloaded to take either a `bool` or `scriptSig` as a parameter, without an explanation of when to call each overload.\nNew `CountSigOps` method avoids the overloading and documents how it should be called. The name was chosen to be clearer and consistent with the newer `CountWitnessSigOps` function.\nBesides the renames, also added primitive argument name reminders to the call sites to highlight the meaning of the call.\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T21:44:09Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-05-14T14:05:05Z"
      },
      "sha": "6558f9ce3199f8d99c2ff14052001c0de6710752"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg2NzBlMDcwOThkYjk4MzhmNTlhYTUzOTRiZjIyNGYwYjhlZjZhYzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8670e07098db9838f59aa5394bf224f0b8ef6ac4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8670e07098db9838f59aa5394bf224f0b8ef6ac4",
      "tree": {
        "sha": "7da158350df6d9363ae3a271f3a10faff720ee2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7da158350df6d9363ae3a271f3a10faff720ee2e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6558f9ce3199f8d99c2ff14052001c0de6710752",
          "sha": "6558f9ce3199f8d99c2ff14052001c0de6710752",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6558f9ce3199f8d99c2ff14052001c0de6710752"
        }
      ],
      "message": "refactor: split off `P2SH` from `GetSigOpCount`\n\nThe name `CountP2SHSigOps` was chosen to match `CountWitnessSigOps`, since the two functions are counterparts for handling `P2SH` and `SegWit` scripts.\nAlso, it's called by `GetP2SHSigOpCount` in consensus, so the new name clarifies its significance.\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T21:46:43Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-05T01:34:22Z"
      },
      "sha": "8670e07098db9838f59aa5394bf224f0b8ef6ac4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVkNDY4YWZmMWVmMDdiZGY0MjdlMmUxMDRlZDhiZjVhMDVmNzBkNDM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d468aff1ef07bdf427e2e104ed8bf5a05f70d43",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5d468aff1ef07bdf427e2e104ed8bf5a05f70d43",
      "tree": {
        "sha": "25ad9e102b3b4e5f75be3b8a05203ab485a3fc6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25ad9e102b3b4e5f75be3b8a05203ab485a3fc6c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8670e07098db9838f59aa5394bf224f0b8ef6ac4",
          "sha": "8670e07098db9838f59aa5394bf224f0b8ef6ac4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8670e07098db9838f59aa5394bf224f0b8ef6ac4"
        }
      ],
      "message": "refactor: move the script-hash-size constants to `script.h`\n\nThis enables using these constants in script.h definitions in upcoming commits. No naming conflicts exist with these constant names.",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T21:46:45Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-06-04T19:15:17Z"
      },
      "sha": "5d468aff1ef07bdf427e2e104ed8bf5a05f70d43"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ0NTk1NGU0MGM0YTgwYTI4Mjc0OTdjYzNmNjY2ZDJjNGQxMTM1ZjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/445954e40c4a80a2827497cc3f666d2c4d1135f3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/445954e40c4a80a2827497cc3f666d2c4d1135f3",
      "tree": {
        "sha": "36e12d43678cad3d151e847ca36f7bc4d81b3ad7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36e12d43678cad3d151e847ca36f7bc4d81b3ad7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d468aff1ef07bdf427e2e104ed8bf5a05f70d43",
          "sha": "5d468aff1ef07bdf427e2e104ed8bf5a05f70d43",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5d468aff1ef07bdf427e2e104ed8bf5a05f70d43"
        }
      ],
      "message": "refactor: pull `IsPayToScriptHash` to header\n\nMoved the implementation to the header (implicitly inline + noexcept), removed redundant `this` and parentheses and changed the `0x14`/`20` magic constants to descriptive `HASH160_OUTPUT_SIZE`.\nSee: https://learnmeabitcoin.com/technical/script/p2sh/#scriptpubkey",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T21:52:40Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-06-04T19:25:30Z"
      },
      "sha": "445954e40c4a80a2827497cc3f666d2c4d1135f3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc3MTkyN2E5YmJiZDA2MjI1YmIyNTAzZDNiMDkxNjA3MGRjNTA5YmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/771927a9bbbd06225bb2503d3b0916070dc509bd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/771927a9bbbd06225bb2503d3b0916070dc509bd",
      "tree": {
        "sha": "d47e30554b9f9dc3325c32320c14aa055d44a221",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d47e30554b9f9dc3325c32320c14aa055d44a221"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/445954e40c4a80a2827497cc3f666d2c4d1135f3",
          "sha": "445954e40c4a80a2827497cc3f666d2c4d1135f3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/445954e40c4a80a2827497cc3f666d2c4d1135f3"
        }
      ],
      "message": "refactor: pull `IsPayToWitnessScriptHash` to header\n\nMoved the implementation to the header (implicitly inline + noexcept), removed redundant `this` and parentheses, and changed the `0x20` magic constant to descriptive `WITNESS_V0_SCRIPTHASH_SIZE`.\nSee: https://learnmeabitcoin.com/technical/script/p2wsh/#scriptpubkey",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T21:53:28Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-06-04T19:26:16Z"
      },
      "sha": "771927a9bbbd06225bb2503d3b0916070dc509bd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVlZGM5NWU3YzY5MjBmZjM4MDc2OTY2MjYzOTgwMTZlOTI2MTI3N2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eedc95e7c6920ff3807696626398016e9261277b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/eedc95e7c6920ff3807696626398016e9261277b",
      "tree": {
        "sha": "b1be1dc4f9166b2d2b08088d5cfbaa30c47d7589",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1be1dc4f9166b2d2b08088d5cfbaa30c47d7589"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/771927a9bbbd06225bb2503d3b0916070dc509bd",
          "sha": "771927a9bbbd06225bb2503d3b0916070dc509bd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/771927a9bbbd06225bb2503d3b0916070dc509bd"
        }
      ],
      "message": "refactor: pull `IsPayToAnchor` to header\n\nMoved the implementation to the header (implicitly inline + noexcept), removed redundant `this` and parentheses.",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T21:53:29Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-06-04T19:30:35Z"
      },
      "sha": "eedc95e7c6920ff3807696626398016e9261277b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGFlYmEyMTQyZDBjN2Y2MGQ4ODdlZDE2NDc0ZTRmNmZkOWIyZmI5ZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aeba2142d0c7f60d887ed16474e4f6fd9b2fb9d9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/aeba2142d0c7f60d887ed16474e4f6fd9b2fb9d9",
      "tree": {
        "sha": "88569f1fe5a3c806c8339a7f8e57870929aa4aaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/88569f1fe5a3c806c8339a7f8e57870929aa4aaa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eedc95e7c6920ff3807696626398016e9261277b",
          "sha": "eedc95e7c6920ff3807696626398016e9261277b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/eedc95e7c6920ff3807696626398016e9261277b"
        }
      ],
      "message": "refactor: pull `IsPayToTaproot` to header\n\nMoved the implementation to the header (implicitly inline + noexcept), removed redundant `this` and parentheses, and changed the `0x20` magic constant to descriptive `WITNESS_V1_TAPROOT_SIZE`.\nSee: https://learnmeabitcoin.com/technical/script/p2tr/#scriptpubkey",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T21:53:51Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-06-04T19:31:25Z"
      },
      "sha": "aeba2142d0c7f60d887ed16474e4f6fd9b2fb9d9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGVhOTUzNzkwMWYwYTQzNGQyNTQ5M2Q3ZmQxMjAwOTIxNDE4NWZiZDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea9537901f0a434d25493d7fd12009214185fbd6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ea9537901f0a434d25493d7fd12009214185fbd6",
      "tree": {
        "sha": "ca69bfffb832fa3eff5401885d786ae4542673cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ca69bfffb832fa3eff5401885d786ae4542673cb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aeba2142d0c7f60d887ed16474e4f6fd9b2fb9d9",
          "sha": "aeba2142d0c7f60d887ed16474e4f6fd9b2fb9d9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/aeba2142d0c7f60d887ed16474e4f6fd9b2fb9d9"
        }
      ],
      "message": "refactor: add `IsPayToPubKeyHash` helper to script.h\n\nThe usages in `compressor.cpp` and `solver.cpp` were also updated to use the new method.\nSee: https://learnmeabitcoin.com/technical/script/p2pkh/#scriptpubkey",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T21:54:14Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-06-04T19:16:19Z"
      },
      "sha": "ea9537901f0a434d25493d7fd12009214185fbd6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk0NzgzMjI5ZGQzMDE0Njk5MTFkM2EzZTBlZDUwNzIxN2IwYTQ0NWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/94783229dd301469911d3a3e0ed507217b0a445f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/94783229dd301469911d3a3e0ed507217b0a445f",
      "tree": {
        "sha": "ad084ae416a807edb422e997cd2b22da10c4ec68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ad084ae416a807edb422e997cd2b22da10c4ec68"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea9537901f0a434d25493d7fd12009214185fbd6",
          "sha": "ea9537901f0a434d25493d7fd12009214185fbd6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ea9537901f0a434d25493d7fd12009214185fbd6"
        }
      ],
      "message": "refactor: add `IsCompressedPayToPubKey` helper to script.h\n\nThe usages in `compressor.cpp` and `solver.cpp` were also updated to use the new method.\nNote that compressor has additional prefix checks as well, which are not properly exercised by the `compressed_p2pk` unit test.\nSee: https://learnmeabitcoin.com/technical/script/p2pk/#scriptpubkey and https://learnmeabitcoin.com/technical/keys/public-key/#compressed",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T22:25:16Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-06-04T19:19:53Z"
      },
      "sha": "94783229dd301469911d3a3e0ed507217b0a445f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU5NDg2YTEyZTEyNjk2YmRiNjk3ZWQxZGMzYTNjOTQwYTdjNmUzNjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9486a12e12696bdb697ed1dc3a3c940a7c6e366",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e9486a12e12696bdb697ed1dc3a3c940a7c6e366",
      "tree": {
        "sha": "ba06af2f67eda77b872f4a607c9f326d8927b731",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba06af2f67eda77b872f4a607c9f326d8927b731"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/94783229dd301469911d3a3e0ed507217b0a445f",
          "sha": "94783229dd301469911d3a3e0ed507217b0a445f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/94783229dd301469911d3a3e0ed507217b0a445f"
        }
      ],
      "message": "refactor: add `IsUncompressedPayToPubKey` helper to script.h\n\nThe usages in `compressor.cpp` and `solver.cpp` were also updated to use the new method.\nNote that compressor has additional prefix checks as well, which are not properly exercised by the `uncompressed_p2pk` unit test.\nSee: https://learnmeabitcoin.com/technical/script/p2pk/#scriptpubkey and https://learnmeabitcoin.com/technical/keys/public-key/#uncompressed",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T22:25:43Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-06-04T19:20:02Z"
      },
      "sha": "e9486a12e12696bdb697ed1dc3a3c940a7c6e366"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZkYmMwNTRjNzk4YTk2ZDk0YzI1MGE3MjIzNjM2OWNhZjExN2M2M2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6dbc054c798a96d94c250a72236369caf117c63a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6dbc054c798a96d94c250a72236369caf117c63a",
      "tree": {
        "sha": "d1597c50ea063dad090f29fc2cd9493166a25708",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d1597c50ea063dad090f29fc2cd9493166a25708"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9486a12e12696bdb697ed1dc3a3c940a7c6e366",
          "sha": "e9486a12e12696bdb697ed1dc3a3c940a7c6e366",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e9486a12e12696bdb697ed1dc3a3c940a7c6e366"
        }
      ],
      "message": "refactor: add `IsPayToWitnessPubKeyHash` helper to script.h\n\nSee: https://learnmeabitcoin.com/technical/script/p2wpkh/#scriptpubkey",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T22:25:45Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-06-04T19:21:43Z"
      },
      "sha": "6dbc054c798a96d94c250a72236369caf117c63a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA5MzU4NTBiZjAzNWQ1Yjg1MDY0ZDVkYWQ0Nzc0ZGI5Zjk0MTY0ZWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0935850bf035d5b85064d5dad4774db9f94164eb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0935850bf035d5b85064d5dad4774db9f94164eb",
      "tree": {
        "sha": "a1d11400f35c9dc203cd5aa7c36e9c7e0d0bc188",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1d11400f35c9dc203cd5aa7c36e9c7e0d0bc188"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6dbc054c798a96d94c250a72236369caf117c63a",
          "sha": "6dbc054c798a96d94c250a72236369caf117c63a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6dbc054c798a96d94c250a72236369caf117c63a"
        }
      ],
      "message": "test: add `CountSigOps` edge-cases & known-template coverage\n\n* `CountSigOpsKnownTemplates` asserts the expected legacy/accurate sig-op totals for all common known script templates (P2PKH, P2SH, P2WPKH/WSH, P2TR, compressed & uncompressed P2PK, OP_RETURN, multisig).\n* `CountSigOpsErrors` feeds malformed PUSHDATA sequences to confirm the parser never crashes and still counts sig-ops that appear before the error.\n* `GetOpName_no_missing_mnemonics` checks all opcode names by category.",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T22:25:45Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-05-14T14:41:02Z"
      },
      "sha": "0935850bf035d5b85064d5dad4774db9f94164eb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYwMWVhZDkyM2Y5Zjc1ZjkyMzYzZGM5MTNiODFhNTkxZmJmMzQ2ZmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f01ead923f9f75f92363dc913b81a591fbf346fa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f01ead923f9f75f92363dc913b81a591fbf346fa",
      "tree": {
        "sha": "01523704b56f4fb4d82791b03c37cc8e758a4c6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01523704b56f4fb4d82791b03c37cc8e758a4c6e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0935850bf035d5b85064d5dad4774db9f94164eb",
          "sha": "0935850bf035d5b85064d5dad4774db9f94164eb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0935850bf035d5b85064d5dad4774db9f94164eb"
        }
      ],
      "message": "refactor: make sure `OP_CHECKSIGADD` isn't considered valid (pre-tapscript) sigop\n\nOP_CHECKSIGADD (opcode 0xba) is a Tapscript-only opcode introduced with Taproot and should not be counted as a signature operation in pre-Tapscript contexts.\nIt being larger than the \"max\" is confusing, hence the rename.",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T22:25:45Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-05T23:07:59Z"
      },
      "sha": "f01ead923f9f75f92363dc913b81a591fbf346fa"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg5Nzc5ZjViZTE0NzhiOGU5MDk3MTI1NTZhNmQ4OWZhYzdkYTEyOGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89779f5be1478b8e909712556a6d89fac7da128b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/89779f5be1478b8e909712556a6d89fac7da128b",
      "tree": {
        "sha": "6b745d6f955beaa8840b10f875ddedbc2b9944e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b745d6f955beaa8840b10f875ddedbc2b9944e2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f01ead923f9f75f92363dc913b81a591fbf346fa",
          "sha": "f01ead923f9f75f92363dc913b81a591fbf346fa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f01ead923f9f75f92363dc913b81a591fbf346fa"
        }
      ],
      "message": "test: exercise the `HasValidBaseOps` functionality\n\nAdd explicit test case checking that OP_CHECKSIGADD > MAX_BASE_OPCODE (i.e. that we have opcodes bigger than the max).\nThe other changes in the test are just inlines to reduce scope.\n\nAlso note that `OpCodeParser` deliberately skips `OP_CHECKSIGADD`, see: `script_parse_tests/parse_script`.",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T22:25:45Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-05T23:09:36Z"
      },
      "sha": "89779f5be1478b8e909712556a6d89fac7da128b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU0YzJhNGNiNDc5NTlhMTA5NTgwYzQ1ZGM4MzU5NDk4MTk0MzZmOGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54c2a4cb47959a109580c45dc835949819436f8f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/54c2a4cb47959a109580c45dc835949819436f8f",
      "tree": {
        "sha": "fda554872bc152888def0e3a220a92cdde180606",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fda554872bc152888def0e3a220a92cdde180606"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89779f5be1478b8e909712556a6d89fac7da128b",
          "sha": "89779f5be1478b8e909712556a6d89fac7da128b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/89779f5be1478b8e909712556a6d89fac7da128b"
        }
      ],
      "message": "fuzz: Extend `ConsumeOpcodeType` to cover all possible ops\n\n`OP_CHECKSIGADD` wasn't tested this way at all, but we should fuzz all possible values anyway.",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-07T22:25:45Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-08-06T01:47:12Z"
      },
      "sha": "54c2a4cb47959a109580c45dc835949819436f8f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19044587138,
      "node_id": "HRFPE_lADOABII5866_H3nzwAAAARvJVaC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19044587138",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/54c2a4cb47959a109580c45dc835949819436f8f",
      "created_at": "2025-08-07T22:32:03Z"
    },
    {
      "event": "reviewed",
      "id": 3098836449,
      "node_id": "PRR_kwDOABII5864tH3h",
      "url": null,
      "actor": null,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Pushed a new set of smaller, mostly test fixes - thanks for detailed review again!\r\n\r\n> though personally I'd try to avoid front/back methods\r\n\r\nDone, they're more uniform this way. I left the hard-coded indexes for redundancy.\r\n\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#pullrequestreview-3098836449",
      "submitted_at": "2025-08-07T22:33:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252835441",
      "pull_request_review_id": 3086147229,
      "id": 2252835441,
      "node_id": "PRRC_kwDOABII586GR4px",
      "diff_hunk": "@@ -534,7 +534,7 @@ class CScript : public CScriptBase\n      * counted more accurately, assuming they are of the form\n      *  ... OP_N CHECKMULTISIG ...\n      */\n-    unsigned int GetSigOpCount(bool fAccurate) const;\n+    unsigned int GetLegacySigOpCount(bool fAccurate) const;",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 5,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "06cb252c8285746737e3385886da2efd1ab41f5a",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: rename `GetSigOpCount` to `GetLegacySigOpCount`\" (06cb252c8285746737e3385886da2efd1ab41f5a)\r\n\r\nI like getting rid of this overload, but I found the code here very confusing before this change, and I think renaming this to `GetLegacySigOpCount` makes the confusion worse because this method is not acting like a legacy function when it's called with fAccurate = true. At first I though you might have been using legacy here to mean \"pre-segwit\" which is different than the way the `GetLegacySigOpCount(CTransaction)` uses legacy to mean \"pre-p2sh\". But after noticing this is also called by the segwit `WitnessSigOps` function, I don't see how the term \"legacy\" even applies here at all.\r\n\r\nI think I would suggest renaming this to `CountSigOps` to be consistent with the `CountWitnessSigOps` function, and giving it better documentation. I also think the other overload should be a standalone function not a CScript method because it is not really using the CScript.\r\n\r\nI think a change like the one below could be a lot clearer:\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\n--- a/src/consensus/tx_verify.cpp\r\n+++ b/src/consensus/tx_verify.cpp\r\n@@ -113,10 +113,10 @@ unsigned int GetLegacySigOpCount(const CTransaction& tx)\r\n {\r\n     unsigned int nSigOps = 0;\r\n     for (const auto& txin : tx.vin) {\r\n-        nSigOps += txin.scriptSig.GetLegacySigOpCount(/*fAccurate=*/false);\r\n+        nSigOps += txin.scriptSig.CountSigOps(/*fAccurate=*/false);\r\n     }\r\n     for (const auto& txout : tx.vout) {\r\n-        nSigOps += txout.scriptPubKey.GetLegacySigOpCount(/*fAccurate=*/false);\r\n+        nSigOps += txout.scriptPubKey.CountSigOps(/*fAccurate=*/false);\r\n     }\r\n     return nSigOps;\r\n }\r\n@@ -133,7 +133,7 @@ unsigned int GetP2SHSigOpCount(const CTransaction& tx, const CCoinsViewCache& in\r\n         assert(!coin.IsSpent());\r\n         const CTxOut &prevout = coin.out;\r\n         if (prevout.scriptPubKey.IsPayToScriptHash())\r\n-            nSigOps += prevout.scriptPubKey.GetSigOpCount(tx.vin[i].scriptSig);\r\n+            nSigOps += CountP2SHSigOps(tx.vin[i].scriptSig);\r\n     }\r\n     return nSigOps;\r\n }\r\n--- a/src/policy/policy.cpp\r\n+++ b/src/policy/policy.cpp\r\n@@ -181,8 +181,11 @@ static bool CheckSigopsBIP54(const CTransaction& tx, const CCoinsViewCache& inpu\r\n         // `fAccurate` means correctly accounting sigops for CHECKMULTISIGs(VERIFY) with 16 pubkeys\r\n         // or fewer. This method of accounting was introduced by BIP16, and BIP54 reuses it.\r\n         // The GetSigOpCount call on the previous scriptPubKey counts both bare and P2SH sigops.\r\n-        sigops += txin.scriptSig.GetLegacySigOpCount(/*fAccurate=*/true);\r\n-        sigops += prev_txo.scriptPubKey.GetSigOpCount(txin.scriptSig);\r\n+        sigops += txin.scriptSig.CountSigOps(/*fAccurate=*/true);\r\n+        sigops += prev_txo.scriptPubKey.CountSigOps(/*fAccurate=*/true);\r\n+        if (prev_txo.scriptPubKey.IsPayToScriptHash()) {\r\n+           sigops += CountP2SHSigOps(txin.scriptSig);\r\n+        }\r\n \r\n         if (sigops > MAX_TX_LEGACY_SIGOPS) {\r\n             return false;\r\n@@ -239,7 +242,7 @@ bool AreInputsStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\r\n             if (stack.empty())\r\n                 return false;\r\n             CScript subscript(stack.back().begin(), stack.back().end());\r\n-            if (subscript.GetLegacySigOpCount(/*fAccurate=*/true) > MAX_P2SH_SIGOPS) {\r\n+            if (subscript.CountSigOps(/*fAccurate=*/true) > MAX_P2SH_SIGOPS) {\r\n                 return false;\r\n             }\r\n         }\r\n--- a/src/script/interpreter.cpp\r\n+++ b/src/script/interpreter.cpp\r\n@@ -2084,7 +2084,7 @@ size_t static WitnessSigOps(int witversion, const std::vector<unsigned char>& wi\r\n \r\n         if (witprogram.size() == WITNESS_V0_SCRIPTHASH_SIZE && witness.stack.size() > 0) {\r\n             CScript subscript(witness.stack.back().begin(), witness.stack.back().end());\r\n-            return subscript.GetLegacySigOpCount(/*fAccurate=*/true);\r\n+            return subscript.CountSigOps(/*fAccurate=*/true);\r\n         }\r\n     }\r\n \r\n--- a/src/script/script.cpp\r\n+++ b/src/script/script.cpp\r\n@@ -156,7 +156,7 @@ std::string GetOpName(opcodetype opcode)\r\n     }\r\n }\r\n \r\n-unsigned int CScript::GetLegacySigOpCount(bool fAccurate) const\r\n+unsigned int CScript::CountSigOps(bool fAccurate) const\r\n {\r\n     unsigned int n = 0;\r\n     const_iterator pc = begin();\r\n@@ -180,15 +180,12 @@ unsigned int CScript::GetLegacySigOpCount(bool fAccurate) const\r\n     return n;\r\n }\r\n \r\n-unsigned int CScript::GetSigOpCount(const CScript& scriptSig) const\r\n+unsigned int CountP2SHSigOps(const CScript& scriptSig)\r\n {\r\n-    if (!IsPayToScriptHash())\r\n-        return GetLegacySigOpCount(/*fAccurate=*/true);\r\n-\r\n     // This is a pay-to-script-hash scriptPubKey;\r\n     // get the last item that the scriptSig\r\n     // pushes onto the stack:\r\n-    const_iterator pc = scriptSig.begin();\r\n+    CScript::const_iterator pc = scriptSig.begin();\r\n     std::vector<unsigned char> vData;\r\n     while (pc < scriptSig.end())\r\n     {\r\n@@ -201,7 +198,7 @@ unsigned int CScript::GetSigOpCount(const CScript& scriptSig) const\r\n \r\n     /// ... and return its opcount:\r\n     CScript subscript(vData.begin(), vData.end());\r\n-    return subscript.GetLegacySigOpCount(/*fAccurate=*/true);\r\n+    return subscript.CountSigOps(/*fAccurate=*/true);\r\n }\r\n \r\n bool CScript::IsPayToAnchor() const\r\n--- a/src/script/script.h\r\n+++ b/src/script/script.h\r\n@@ -528,19 +528,20 @@ public:\r\n     }\r\n \r\n     /**\r\n-     * Pre-version-0.6, Bitcoin always counted CHECKMULTISIGs\r\n-     * as 20 sigops. With pay-to-script-hash, that changed:\r\n-     * CHECKMULTISIGs serialized in scriptSigs are\r\n-     * counted more accurately, assuming they are of the form\r\n-     *  ... OP_N CHECKMULTISIG ...\r\n-     */\r\n-    unsigned int GetLegacySigOpCount(bool fAccurate) const;\r\n-\r\n-    /**\r\n-     * Accurately count sigOps, including sigOps in\r\n-     * pay-to-script-hash transactions:\r\n-     */\r\n-    unsigned int GetSigOpCount(const CScript& scriptSig) const;\r\n+    * Count the number of signature operations (sigops) in this script.\r\n+    *\r\n+    * The fAccurate parameter controls how sigops are counted for CHECKMULTISIG\r\n+    * operations. Set fAccurate = true when analyzing P2SH redeem scripts or\r\n+    * SegWit witness scripts, and false when analyzing scriptPubKeys or\r\n+    * scriptSigs.\r\n+    *\r\n+    * Historically, Bitcoin always counted each CHECKMULTISIG as 20 sigops\r\n+    * (MAX_PUBKEYS_PER_MULTISIG), regardless of the number of pubkeys. Starting\r\n+    * with P2SH in version 0.6, CHECKMULTISIG operations inside wrapped scripts\r\n+    * began to be counted more precisely, using the preceding OP_N opcode to\r\n+    * determine the number of pubkeys and thus the number of sigops.\r\n+    */\r\n+    unsigned int CountSigOps(bool fAccurate) const;\r\n \r\n     /*\r\n      * OP_1 <0x4e73>\r\n@@ -606,6 +607,15 @@ public:\r\n     explicit CScriptID(const uint160& in) : BaseHash(in) {}\r\n };\r\n \r\n+/**\r\n+ * Count the number of signature operations (sigops) in a P2SH scriptSig.\r\n+ *\r\n+ * If the scriptSig contains a SegWit redeem script (i.e., a P2SH-P2WPKH or\r\n+ * P2SH-P2WSH script), this function counts only the non-SegWit sigops.\r\n+ * To count SegWit sigops in such cases, use CountWitnessSigOps.\r\n+ */\r\n+unsigned int CountP2SHSigOps(const CScript& scriptSig);unsigned int CountP2SHSigOps(const CScript& scriptSig);\r\n+\r\n /** Test for OP_SUCCESSx opcodes as defined by BIP342. */\r\n bool IsOpSuccess(const opcodetype& opcode);\r\n \r\n```\r\n</p>\r\n</details>",
      "created_at": "2025-08-05T00:22:13Z",
      "updated_at": "2025-08-05T00:22:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2252835441",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252835441"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 537,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252952435",
      "pull_request_review_id": 3086297101,
      "id": 2252952435,
      "node_id": "PRRC_kwDOABII586GSVNz",
      "diff_hunk": "@@ -534,7 +534,7 @@ class CScript : public CScriptBase\n      * counted more accurately, assuming they are of the form\n      *  ... OP_N CHECKMULTISIG ...\n      */\n-    unsigned int GetSigOpCount(bool fAccurate) const;\n+    unsigned int GetLegacySigOpCount(bool fAccurate) const;",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 5,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "06cb252c8285746737e3385886da2efd1ab41f5a",
      "in_reply_to_id": 2252835441,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, love the inlining of `GetSigOpCount` (bothered me, too - it's a lot clearer this way), and the new `CountSigOps` name as well.\r\nAdded your comments (+ you as co-author, of course) and adjusted all the tests, now that `CountSigOps` is separated from `CountP2SHSigOps`: https://github.com/bitcoin/bitcoin/compare/6bf4c8d48f61089254532b065d9ca8e1c2bf6868..f8208e92bd103359f8c3ceb3361eb7904099e994\r\n\r\nEdit: note, that instead of\r\n```patch\r\n-        sigops += prev_txo.scriptPubKey.GetSigOpCount(txin.scriptSig);\r\n+        sigops += prev_txo.scriptPubKey.CountSigOps(/*fAccurate=*/true);\r\n+        if (prev_txo.scriptPubKey.IsPayToScriptHash()) {\r\n+           sigops += CountP2SHSigOps(txin.scriptSig);\r\n+        }\r\n```\r\nI did:\r\n```patch\r\n-        sigops += prev_txo.scriptPubKey.GetSigOpCount(txin.scriptSig);\r\n+        sigops += prev_txo.scriptPubKey.IsPayToScriptHash() ?\r\n+                      CountP2SHSigOps(txin.scriptSig) :\r\n+                      prev_txo.scriptPubKey.CountSigOps(/*fAccurate=*/true);\r\n```\r\n\r\nsince I don't think `CountSigOps` should always be applied (even if always `0`)",
      "created_at": "2025-08-05T02:22:54Z",
      "updated_at": "2025-08-05T03:57:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2252952435",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2252952435"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 537,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254023250",
      "pull_request_review_id": 3087824321,
      "id": 2254023250,
      "node_id": "PRRC_kwDOABII586GWapS",
      "diff_hunk": "@@ -528,13 +528,19 @@ class CScript : public CScriptBase\n     }\n \n     /**\n-     * Pre-version-0.6, Bitcoin always counted CHECKMULTISIGs\n-     * as 20 sigops. With pay-to-script-hash, that changed:\n-     * CHECKMULTISIGs serialized in scriptSigs are\n-     * counted more accurately, assuming they are of the form\n-     *  ... OP_N CHECKMULTISIG ...\n+     * Count the number of signature operations (sigops) in this script.\n+     *\n+     * The `fAccurate` parameter controls how sigops are counted for `CHECKMULTISIG` operations.\n+     * Set `fAccurate` to `true` when analyzing P2SH redeem scripts or SegWit witness scripts,\n+     * and to `false` when analyzing scriptPubKeys or scriptSigs.\n+     *\n+     * Historically, Bitcoin always counted each `CHECKMULTISIG` as\n+     * 20 sigops (`MAX_PUBKEYS_PER_MULTISIG`), regardless of the number of pubkeys.\n+     * Starting with P2SH in version 0.6, `CHECKMULTISIG` operations inside wrapped scripts\n+     * began to be counted more precisely, using the preceding OP_N opcode to determine\n+     * the number of pubkeys and thus the number of sigops.\n      */\n-    unsigned int GetSigOpCount(bool fAccurate) const;\n+    unsigned int CountSigOps(bool fAccurate) const;",
      "path": "src/script/script.h",
      "position": 63,
      "original_position": 22,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "4cbd303ddd7ae500683a7a595f38c5b8ff2de31e",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: rename `GetSigOpCount` to `CountSigOps`\" (4cbd303ddd7ae500683a7a595f38c5b8ff2de31e)\r\n\r\nIt's not obvious from commit message why this rename is being done. I think it might help to add some explanation like:\r\n\r\n- Previous `GetSigOpCount` method was overloaded to take either a bool or scriptSig as a parameter, without an explanation of when to call each overload. New `CountSigOps` method avoids the overloading and documents how it should be called. The name was chosen to be clearer and consistent with the newer `CountWitnessSigOps` function.\r\n\r\nI also think it would be reasonable to keep the current method name and just document the method better without renaming it, but I do like the current approach.",
      "created_at": "2025-08-05T11:14:15Z",
      "updated_at": "2025-08-05T12:34:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254023250",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254023250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 553,
      "original_line": 553,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254092329",
      "pull_request_review_id": 3087824321,
      "id": 2254092329,
      "node_id": "PRRC_kwDOABII586GWrgp",
      "diff_hunk": "@@ -612,6 +606,15 @@ class CScriptID : public BaseHash<uint160>\n     explicit CScriptID(const uint160& in) : BaseHash(in) {}\n };\n \n+/**\n+ * Count the number of signature operations (sigops) in a P2SH scriptSig.\n+ *\n+ * If the scriptSig contains a SegWit redeem script (i.e., a P2SH-P2WPKH or P2SH-P2WSH script),\n+ * this function counts only the non-SegWit sigops.\n+ * To count SegWit sigops in such cases, use `CountWitnessSigOps`.\n+ */\n+unsigned int CountP2SHSigOps(const CScript& scriptSig);",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 24,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "37c1d8fc8db2f1ddd6ddf4d8fccbd13bbc9c9935",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: split off `P2SH` from `GetSigOpCount`\" (37c1d8fc8db2f1ddd6ddf4d8fccbd13bbc9c9935)\r\n\r\nMight be helpful to say what is motivating this change in the commit message. Maybe add:\r\n\r\n- The name `CountP2SHSigOps` was chosen to match `CountWitnessSigOps`, since the two functions are counterparts for handling P2SH and SegWit scripts.",
      "created_at": "2025-08-05T11:42:03Z",
      "updated_at": "2025-08-05T12:34:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254092329",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254092329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 680,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254180036",
      "pull_request_review_id": 3087824321,
      "id": 2254180036,
      "node_id": "PRRC_kwDOABII586GXA7E",
      "diff_hunk": "@@ -555,7 +555,13 @@ class CScript : public CScriptBase\n      */\n     static bool IsPayToAnchor(int version, const std::vector<unsigned char>& program);\n \n-    bool IsPayToScriptHash() const;\n+    bool IsPayToScriptHash() const noexcept\n+    {\n+        return size() == 23 &&\n+               front() == OP_HASH160 &&\n+               (*this)[1] == WITNESS_V0_KEYHASH_SIZE &&",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 9,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "0d51088d1daa15ade3bf3c57410a0c12df235615",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: pull `IsPayToScriptHash` to header\" (0d51088d1daa15ade3bf3c57410a0c12df235615)\r\n\r\nIt doesn't seem like WITNESS_V0_KEYHASH_SIZE is really the right constant to use for a p2sh script. Maybe should introduce a SCRIPT_HASH_SIZE or similar constant instead? Could also make sense to use the same constant for the memcpy in IsToScriptID",
      "created_at": "2025-08-05T12:21:05Z",
      "updated_at": "2025-08-05T12:34:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254180036",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254180036"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254194990",
      "pull_request_review_id": 3087824321,
      "id": 2254194990,
      "node_id": "PRRC_kwDOABII586GXEku",
      "diff_hunk": "@@ -1222,7 +1222,7 @@ BOOST_AUTO_TEST_CASE(script_size_and_capacity_test)\n     // P2TR has direct allocation\n     {\n         const auto script{GetScriptForDestination(WitnessV1Taproot{XOnlyPubKey{dummy_pubkey}})};\n-        BOOST_CHECK_EQUAL(GetTxoutType(script), TxoutType::WITNESS_V1_TAPROOT);\n+        BOOST_CHECK(script.IsPayToTaproot());",
      "path": "src/test/script_tests.cpp",
      "position": 44,
      "original_position": 5,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "38e89f646221ec0c15158b6ef0007336fec008e3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: pull `IsPayToTaproot` to header\" (38e89f646221ec0c15158b6ef0007336fec008e3)\r\n\r\nCan commit message explain reason for other changes in this commit, like this test check and the IsWitnessProgram reordering above (assuming they are intentional)",
      "created_at": "2025-08-05T12:27:34Z",
      "updated_at": "2025-08-05T12:34:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254194990",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254194990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1229,
      "original_line": 1229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254641829",
      "pull_request_review_id": 3088705783,
      "id": 2254641829,
      "node_id": "PRRC_kwDOABII586GYxql",
      "diff_hunk": "@@ -612,6 +606,15 @@ class CScriptID : public BaseHash<uint160>\n     explicit CScriptID(const uint160& in) : BaseHash(in) {}\n };\n \n+/**\n+ * Count the number of signature operations (sigops) in a P2SH scriptSig.\n+ *\n+ * If the scriptSig contains a SegWit redeem script (i.e., a P2SH-P2WPKH or P2SH-P2WSH script),\n+ * this function counts only the non-SegWit sigops.\n+ * To count SegWit sigops in such cases, use `CountWitnessSigOps`.\n+ */\n+unsigned int CountP2SHSigOps(const CScript& scriptSig);",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 24,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "37c1d8fc8db2f1ddd6ddf4d8fccbd13bbc9c9935",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: split off `P2SH` from `GetSigOpCount`\" (37c1d8fc8db2f1ddd6ddf4d8fccbd13bbc9c9935)\r\n\r\nTwo things:\r\n\r\n- It might be nice to make `CountP2SHSigOps` function more similar to `CountWitnessSigOps` and accept a `scriptPubKey` argument. It looks like this change also makes call sites simpler.\r\n- I noticed with BIP54 the `CScript::CountSigOps` comment when to use `fAccurate=false` will not be right anymore. Would suggest qualifying the comment with \"When enforcing the `MAX_BLOCK_SIGOPS_COST` limit\".\r\n\r\nBoth changes are included in the diff below. Feel free to use, or keep the current code, or do something different if you prefer\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\n--- a/src/consensus/tx_verify.cpp\r\n+++ b/src/consensus/tx_verify.cpp\r\n@@ -131,9 +131,7 @@ unsigned int GetP2SHSigOpCount(const CTransaction& tx, const CCoinsViewCache& in\r\n     {\r\n         const Coin& coin = inputs.AccessCoin(tx.vin[i].prevout);\r\n         assert(!coin.IsSpent());\r\n-        if (coin.out.scriptPubKey.IsPayToScriptHash()) {\r\n-            nSigOps += CountP2SHSigOps(tx.vin[i].scriptSig);\r\n-        }\r\n+        nSigOps += CountP2SHSigOps(tx.vin[i].scriptSig, coin.out.scriptPubKey);\r\n     }\r\n     return nSigOps;\r\n }\r\n--- a/src/policy/policy.cpp\r\n+++ b/src/policy/policy.cpp\r\n@@ -180,10 +180,9 @@ static bool CheckSigopsBIP54(const CTransaction& tx, const CCoinsViewCache& inpu\r\n         // This means sigops in the spent scriptPubKey count toward the limit.\r\n         // `fAccurate` means correctly accounting sigops for CHECKMULTISIGs(VERIFY) with 16 pubkeys\r\n         // or fewer. This method of accounting was introduced by BIP16, and BIP54 reuses it.\r\n+        sigops += prev_txo.scriptPubKey.CountSigOps(/*fAccurate=*/true);\r\n         sigops += txin.scriptSig.CountSigOps(/*fAccurate=*/true);\r\n-        sigops += prev_txo.scriptPubKey.IsPayToScriptHash() ?\r\n-                      CountP2SHSigOps(txin.scriptSig) :\r\n-                      prev_txo.scriptPubKey.CountSigOps(/*fAccurate=*/true);\r\n+        sigops += CountP2SHSigOps(txin.scriptSig, prev_txo.scriptPubKey);\r\n \r\n         if (sigops > MAX_TX_LEGACY_SIGOPS) {\r\n             return false;\r\n--- a/src/script/script.cpp\r\n+++ b/src/script/script.cpp\r\n@@ -180,8 +180,12 @@ unsigned int CScript::CountSigOps(bool fAccurate) const\r\n     return n;\r\n }\r\n \r\n-unsigned int CountP2SHSigOps(const CScript& scriptSig)\r\n+unsigned int CountP2SHSigOps(const CScript& scriptSig, const CScript& scriptPubKey)\r\n {\r\n+    if (!scriptPubKey.IsPayToScriptHash()) {\r\n+        return 0;\r\n+    }\r\n+\r\n     // This is a pay-to-script-hash scriptPubKey;\r\n     // get the last item that the scriptSig\r\n     // pushes onto the stack:\r\n--- a/src/script/script.h\r\n+++ b/src/script/script.h\r\n@@ -531,8 +531,9 @@ public:\r\n      * Count the number of signature operations (sigops) in this script.\r\n      *\r\n      * The `fAccurate` parameter controls how sigops are counted for `CHECKMULTISIG` operations.\r\n-     * Set `fAccurate` to `true` when analyzing P2SH redeem scripts or SegWit witness scripts,\r\n-     * and to `false` when analyzing scriptPubKeys or scriptSigs.\r\n+     * When enforcing the `MAX_BLOCK_SIGOPS_COST` limit, set `fAccurate` to `true` when\r\n+     * analyzing P2SH redeem scripts or SegWit witness scripts, and to `false` when analyzing\r\n+     * scriptPubKeys or scriptSigs.\r\n      *\r\n      * Historically, Bitcoin always counted each `CHECKMULTISIG` as\r\n      * 20 sigops (`MAX_PUBKEYS_PER_MULTISIG`), regardless of the number of pubkeys.\r\n@@ -613,7 +614,7 @@ public:\r\n  * this function counts only the non-SegWit sigops.\r\n  * To count SegWit sigops in such cases, use `CountWitnessSigOps`.\r\n  */\r\n-unsigned int CountP2SHSigOps(const CScript& scriptSig);\r\n+unsigned int CountP2SHSigOps(const CScript& scriptSig, const CScript& scriptPubKey);\r\n \r\n /** Test for OP_SUCCESSx opcodes as defined by BIP342. */\r\n bool IsOpSuccess(const opcodetype& opcode);\r\n--- a/src/test/sigopcount_tests.cpp\r\n+++ b/src/test/sigopcount_tests.cpp\r\n@@ -44,7 +44,7 @@ BOOST_AUTO_TEST_CASE(CountSigOps)\r\n     CScript p2sh = GetScriptForDestination(ScriptHash(s1));\r\n     CScript scriptSig;\r\n     scriptSig << OP_0 << Serialize(s1);\r\n-    BOOST_CHECK_EQUAL(CountP2SHSigOps(scriptSig), 3U);\r\n+    BOOST_CHECK_EQUAL(CountP2SHSigOps(scriptSig, p2sh), 3U);\r\n \r\n     std::vector<CPubKey> keys;\r\n     for (int i = 0; i < 3; i++)\r\n@@ -61,7 +61,7 @@ BOOST_AUTO_TEST_CASE(CountSigOps)\r\n     BOOST_CHECK_EQUAL(p2sh.CountSigOps(/*fAccurate=*/false), 0U);\r\n     CScript scriptSig2;\r\n     scriptSig2 << OP_1 << ToByteVector(dummy) << ToByteVector(dummy) << Serialize(s2);\r\n-    BOOST_CHECK_EQUAL(CountP2SHSigOps(scriptSig2), 3U);\r\n+    BOOST_CHECK_EQUAL(CountP2SHSigOps(scriptSig2, p2sh), 3U);\r\n }\r\n \r\n /**\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nEDIT: Simplified GetP2SHSigOpCount after earlier post",
      "created_at": "2025-08-05T15:07:05Z",
      "updated_at": "2025-08-05T18:51:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254641829",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254641829"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 680,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254675962",
      "pull_request_review_id": 3088705783,
      "id": 2254675962,
      "node_id": "PRRC_kwDOABII586GY5_6",
      "diff_hunk": "@@ -562,7 +562,14 @@ class CScript : public CScriptBase\n                (*this)[1] == WITNESS_V0_KEYHASH_SIZE &&\n                back() == OP_EQUAL;\n     }\n-    bool IsPayToWitnessScriptHash() const;\n+\n+    bool IsPayToWitnessScriptHash() const noexcept\n+    {\n+        return size() == 34 &&",
      "path": "src/script/script.h",
      "position": 113,
      "original_position": 8,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "3c800a72b6520d94bc3996fa31ecded0f6fab22d",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: pull `IsPayToWitnessScriptHash` to header\" (3c800a72b6520d94bc3996fa31ecded0f6fab22d)\r\n\r\nChanging `34` to `WITNESS_V0_SCRIPTHASH_SIZE + 2` might make this a little more self-documenting.\r\n\r\n(I don't mean to bikeshed on use of literals vs constants and front/back in these functions though. I could imagine other developers preferring the literals for concreteness even if I like the constants, and I don't have a strong preference.)",
      "created_at": "2025-08-05T15:20:15Z",
      "updated_at": "2025-08-05T16:02:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254675962",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254675962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 595,
      "original_line": 595,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254692162",
      "pull_request_review_id": 3088705783,
      "id": 2254692162,
      "node_id": "PRRC_kwDOABII586GY99C",
      "diff_hunk": "@@ -575,9 +575,14 @@ class CScript : public CScriptBase\n                (*this)[1] == WITNESS_V0_SCRIPTHASH_SIZE;\n     }\n \n-    bool IsWitnessProgram(int& version, std::vector<unsigned char>& program) const;\n+    bool IsPayToTaproot() const noexcept\n+    {\n+        return size() == 34 &&",
      "path": "src/script/script.h",
      "position": 120,
      "original_position": 7,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "38e89f646221ec0c15158b6ef0007336fec008e3",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: pull `IsPayToTaproot` to header\" (38e89f646221ec0c15158b6ef0007336fec008e3)\r\n\r\nSimilar to previous, could replace `34` with `WITNESS_V1_TAPROOT_SIZE + 2` but no strong preference",
      "created_at": "2025-08-05T15:26:16Z",
      "updated_at": "2025-08-05T16:02:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254692162",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254692162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 602,
      "original_line": 602,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254707312",
      "pull_request_review_id": 3088705783,
      "id": 2254707312,
      "node_id": "PRRC_kwDOABII586GZBpw",
      "diff_hunk": "@@ -560,6 +560,16 @@ class CScript : public CScriptBase\n                back() == 0x73;\n     }\n \n+    bool IsPayToPubKeyHash() const noexcept\n+    {\n+        return size() == 25 &&\n+               front() == OP_DUP &&\n+               (*this)[1] == OP_HASH160 &&\n+               (*this)[2] == WITNESS_V0_KEYHASH_SIZE &&",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 9,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "5d23e9a4c6fa4aab530889c54565954486572afd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: add `IsPayToPubKeyHash` helper to script.h\" (5d23e9a4c6fa4aab530889c54565954486572afd)\r\n\r\nAgain it seems a little off to use a segwit constant in pre-segwit output. Might be better to stick with literal 20 or maybe introduce a HASH160_SIZE or PUBKEY_HASH_SIZE constant. No strong preference though and technically this should be ok.",
      "created_at": "2025-08-05T15:32:27Z",
      "updated_at": "2025-08-05T16:02:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254707312",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254707312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 568,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254716286",
      "pull_request_review_id": 3088705783,
      "id": 2254716286,
      "node_id": "PRRC_kwDOABII586GZD1-",
      "diff_hunk": "@@ -592,6 +593,13 @@ class CScript : public CScriptBase\n                (*this)[1] == WITNESS_V1_TAPROOT_SIZE;\n     }\n \n+    bool IsCompressedPayToPubKey() const noexcept\n+    {\n+        return size() == 35 &&",
      "path": "src/script/script.h",
      "position": 128,
      "original_position": 14,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "017f58821fe857a2bb7ac14f2b00b349936391d8",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: add `IsCompressedPayToPubKey` helper to script.h\" (017f58821fe857a2bb7ac14f2b00b349936391d8)\r\n\r\nI guess it is intentional to replace `CPubKey::COMPRESSED_SIZE + 2` with 35 here?",
      "created_at": "2025-08-05T15:38:37Z",
      "updated_at": "2025-08-05T16:02:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254716286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254716286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 610,
      "original_line": 610,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254731153",
      "pull_request_review_id": 3088705783,
      "id": 2254731153,
      "node_id": "PRRC_kwDOABII586GZHeR",
      "diff_hunk": "@@ -9,6 +9,7 @@\n #include <attributes.h>\n #include <crypto/common.h>\n #include <prevector.h> // IWYU pragma: export\n+#include <pubkey.h>",
      "path": "src/script/script.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "017f58821fe857a2bb7ac14f2b00b349936391d8",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: add `IsCompressedPayToPubKey` helper to script.h\" (017f58821fe857a2bb7ac14f2b00b349936391d8)\r\n\r\nSeems reasonable to include pubkey.h but since we are only using constants, it might be better to move constants somewhere.",
      "created_at": "2025-08-05T15:59:54Z",
      "updated_at": "2025-08-05T16:02:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254731153",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254731153"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254732750",
      "pull_request_review_id": 3088705783,
      "id": 2254732750,
      "node_id": "PRRC_kwDOABII586GZH3O",
      "diff_hunk": "@@ -592,6 +593,13 @@ class CScript : public CScriptBase\n                (*this)[1] == WITNESS_V1_TAPROOT_SIZE;\n     }\n \n+    bool IsCompressedPayToPubKey() const noexcept",
      "path": "src/script/script.h",
      "position": 126,
      "original_position": 12,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "017f58821fe857a2bb7ac14f2b00b349936391d8",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: add `IsCompressedPayToPubKey` helper to script.h\" (017f58821fe857a2bb7ac14f2b00b349936391d8)\r\n\r\nMight be good to document that this method does not check the pubkey prefix (even/odd/uncompressed) and verify this is even or odd.",
      "created_at": "2025-08-05T16:02:04Z",
      "updated_at": "2025-08-05T16:02:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254732750",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254732750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 608,
      "original_line": 608,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254943653",
      "pull_request_review_id": 3089148272,
      "id": 2254943653,
      "node_id": "PRRC_kwDOABII586GZ7Wl",
      "diff_hunk": "@@ -28,6 +30,172 @@ Serialize(const CScript& s)\n \n BOOST_FIXTURE_TEST_SUITE(sigopcount_tests, BasicTestingSetup)\n \n+// Feeds malformed PUSHDATA sequences to confirm the parser never crashes and still counts sig-ops that appear before the error.\n+BOOST_AUTO_TEST_CASE(CountSigOpsErrors)\n+{\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << opcodetype(0x4b)}; // push-75 with 0 bytes present\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG\n+                              << opcodetype(0x02)\n+                              << OP_CHECKSIGVERIFY}; // push-2 with only 1 byte present ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1}; // not enough data after OP_PUSHDATA1\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1\n+                              << opcodetype(0xff)\n+                              << OP_CHECKSIGVERIFY}; // out of bounds OP_PUSHDATA1 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2 << opcodetype(0xff)}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2\n+                              << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA2 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(100) << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA4 data size ignoring OP_CHECKMULTISIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+    }\n+}\n+\n+// Asserts the expected legacy/accurate sig-op totals for all common known script templates\n+BOOST_AUTO_TEST_CASE(CountSigOpsKnownTemplates)\n+{\n+    CKey dummyKey;\n+    dummyKey.MakeNewKey(true);",
      "path": "src/test/sigopcount_tests.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "c194618bb587a2e15ed11f268898599c74f1aa74",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: add `CountSigOps` edge-cases & known-template coverage\" (c194618bb587a2e15ed11f268898599c74f1aa74)\r\n\r\nMaybe add document boolean parameter with `/*fCompressed=*/` here and below",
      "created_at": "2025-08-05T17:36:52Z",
      "updated_at": "2025-08-05T18:41:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254943653",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254943653"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254951939",
      "pull_request_review_id": 3089148272,
      "id": 2254951939,
      "node_id": "PRRC_kwDOABII586GZ9YD",
      "diff_hunk": "@@ -28,6 +30,172 @@ Serialize(const CScript& s)\n \n BOOST_FIXTURE_TEST_SUITE(sigopcount_tests, BasicTestingSetup)\n \n+// Feeds malformed PUSHDATA sequences to confirm the parser never crashes and still counts sig-ops that appear before the error.\n+BOOST_AUTO_TEST_CASE(CountSigOpsErrors)\n+{\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << opcodetype(0x4b)}; // push-75 with 0 bytes present\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG\n+                              << opcodetype(0x02)\n+                              << OP_CHECKSIGVERIFY}; // push-2 with only 1 byte present ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1}; // not enough data after OP_PUSHDATA1\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1\n+                              << opcodetype(0xff)\n+                              << OP_CHECKSIGVERIFY}; // out of bounds OP_PUSHDATA1 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2 << opcodetype(0xff)}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2\n+                              << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA2 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(100) << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA4 data size ignoring OP_CHECKMULTISIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+    }\n+}\n+\n+// Asserts the expected legacy/accurate sig-op totals for all common known script templates\n+BOOST_AUTO_TEST_CASE(CountSigOpsKnownTemplates)",
      "path": "src/test/sigopcount_tests.cpp",
      "position": 15,
      "original_position": 83,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "c194618bb587a2e15ed11f268898599c74f1aa74",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: add `CountSigOps` edge-cases & known-template coverage\" (c194618bb587a2e15ed11f268898599c74f1aa74)\r\n\r\nMaybe reorder the CountSigOpsKnownTemplates before CountSigOpsErrors to make it easier to understand how the fake scripts differ from real scripts.",
      "created_at": "2025-08-05T17:41:18Z",
      "updated_at": "2025-08-05T18:41:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254951939",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254951939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254970939",
      "pull_request_review_id": 3089148272,
      "id": 2254970939,
      "node_id": "PRRC_kwDOABII586GaCA7",
      "diff_hunk": "@@ -218,8 +218,8 @@ enum opcodetype\n     OP_INVALIDOPCODE = 0xff,\n };\n \n-// Maximum value that an opcode can be\n-static const unsigned int MAX_OPCODE = OP_NOP10;\n+// Highest opcode allowed in pre-Taproot scripts",
      "path": "src/script/script.h",
      "position": 29,
      "original_position": 6,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "f8208e92bd103359f8c3ceb3361eb7904099e994",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: make sure OP_CHECKSIGADD isn't considered valid (legacy) sigop\" (f8208e92bd103359f8c3ceb3361eb7904099e994)\r\n\r\nWould suggest dropping \"test:\" prefix from this commit since it is changing non-test code. Could also split this up into a renaming and a test commit.\r\n\r\nAlso I'm not sure it is good to use LEGACY to mean pre-taproot here. In the OutputType enum, legacy seems to means \"pre-segwit\" and in GetLegacySigOpCount legacy seems to mean \"pre-p2sh\", so adding a third definition of \"legacy\" here would be nice to avoid. Maybe call it something like MAX_PRE_TAPSCRIPT_OPCODE or MAX_BASE_OPCODE?",
      "created_at": "2025-08-05T17:50:47Z",
      "updated_at": "2025-08-05T18:41:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254970939",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254970939"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 224,
      "original_line": 224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254983086",
      "pull_request_review_id": 3089148272,
      "id": 2254983086,
      "node_id": "PRRC_kwDOABII586GaE-u",
      "diff_hunk": "@@ -28,6 +30,172 @@ Serialize(const CScript& s)\n \n BOOST_FIXTURE_TEST_SUITE(sigopcount_tests, BasicTestingSetup)\n \n+// Feeds malformed PUSHDATA sequences to confirm the parser never crashes and still counts sig-ops that appear before the error.\n+BOOST_AUTO_TEST_CASE(CountSigOpsErrors)\n+{\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << opcodetype(0x4b)}; // push-75 with 0 bytes present\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG\n+                              << opcodetype(0x02)\n+                              << OP_CHECKSIGVERIFY}; // push-2 with only 1 byte present ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1}; // not enough data after OP_PUSHDATA1\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1\n+                              << opcodetype(0xff)\n+                              << OP_CHECKSIGVERIFY}; // out of bounds OP_PUSHDATA1 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2 << opcodetype(0xff)}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2\n+                              << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA2 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(100) << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA4 data size ignoring OP_CHECKMULTISIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+    }\n+}\n+\n+// Asserts the expected legacy/accurate sig-op totals for all common known script templates\n+BOOST_AUTO_TEST_CASE(CountSigOpsKnownTemplates)\n+{\n+    CKey dummyKey;\n+    dummyKey.MakeNewKey(true);\n+    const auto pubkey{dummyKey.GetPubKey()};\n+\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            // P2A\n+            const std::vector<unsigned char> anchor_data{0x4e, 0x73};\n+            const auto script{CScript() << OP_1 << anchor_data};\n+\n+            BOOST_CHECK(script.IsPayToAnchor());\n+            BOOST_CHECK(script.IsPayToAnchor(1, anchor_data));",
      "path": "src/test/sigopcount_tests.cpp",
      "position": 27,
      "original_position": 96,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "c194618bb587a2e15ed11f268898599c74f1aa74",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: add `CountSigOps` edge-cases & known-template coverage\" (c194618bb587a2e15ed11f268898599c74f1aa74)\r\n\r\nForgot to check sigops here?",
      "created_at": "2025-08-05T17:56:56Z",
      "updated_at": "2025-08-05T18:41:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254983086",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2254983086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 46,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255009999",
      "pull_request_review_id": 3089148272,
      "id": 2255009999,
      "node_id": "PRRC_kwDOABII586GaLjP",
      "diff_hunk": "@@ -28,6 +30,172 @@ Serialize(const CScript& s)\n \n BOOST_FIXTURE_TEST_SUITE(sigopcount_tests, BasicTestingSetup)\n \n+// Feeds malformed PUSHDATA sequences to confirm the parser never crashes and still counts sig-ops that appear before the error.\n+BOOST_AUTO_TEST_CASE(CountSigOpsErrors)\n+{\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << opcodetype(0x4b)}; // push-75 with 0 bytes present\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG\n+                              << opcodetype(0x02)\n+                              << OP_CHECKSIGVERIFY}; // push-2 with only 1 byte present ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1}; // not enough data after OP_PUSHDATA1\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1\n+                              << opcodetype(0xff)\n+                              << OP_CHECKSIGVERIFY}; // out of bounds OP_PUSHDATA1 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2 << opcodetype(0xff)}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2\n+                              << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA2 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(100) << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA4 data size ignoring OP_CHECKMULTISIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+    }\n+}\n+\n+// Asserts the expected legacy/accurate sig-op totals for all common known script templates\n+BOOST_AUTO_TEST_CASE(CountSigOpsKnownTemplates)\n+{\n+    CKey dummyKey;\n+    dummyKey.MakeNewKey(true);\n+    const auto pubkey{dummyKey.GetPubKey()};\n+\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            // P2A\n+            const std::vector<unsigned char> anchor_data{0x4e, 0x73};\n+            const auto script{CScript() << OP_1 << anchor_data};\n+\n+            BOOST_CHECK(script.IsPayToAnchor());\n+            BOOST_CHECK(script.IsPayToAnchor(1, anchor_data));\n+        }\n+        {\n+            // OP_RETURN with sigop after (non-standard, found first in block 229,712)\n+            const auto p2pkh_hash{\"cd2b3298b7f455f39805377e5f213093df3cc09a\"_hex_v_u8};\n+            const auto script{CScript() << OP_RETURN << OP_DUP << OP_HASH160 << p2pkh_hash << OP_EQUALVERIFY << OP_CHECKSIG};\n+\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            // P2WPKH\n+            const auto script{GetScriptForDestination(WitnessV0KeyHash(pubkey.GetID()))};\n+            BOOST_REQUIRE(script.IsPayToWitnessPubKeyHash());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 0);\n+        }\n+        {\n+            // P2SH\n+            const auto script{GetScriptForDestination(ScriptHash(CScript() << OP_TRUE))};\n+            BOOST_REQUIRE(script.IsPayToScriptHash());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 0);\n+\n+            BOOST_CHECK_EQUAL(CountP2SHSigOps(script), 0);\n+            const auto single_sigop{CScript() << ToByteVector(CScript() << OP_CHECKMULTISIG)};\n+            BOOST_CHECK_EQUAL(CountP2SHSigOps(single_sigop), 20); // arg is counted since script is P2SH\n+\n+            BOOST_CHECK_EQUAL(CountP2SHSigOps(CScript() << OP_PUSHDATA1), 0);   // error: OP_PUSHDATA1, but no size byte\n+            BOOST_CHECK_EQUAL(CountP2SHSigOps(CScript() << OP_CHECKSIGADD), 0); // error: OP_CHECKSIGADD > OP_16\n+        }\n+        {\n+            // P2PKH\n+            const auto script{GetScriptForDestination(PKHash(pubkey.GetID()))};\n+            BOOST_REQUIRE(script.IsPayToPubKeyHash());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            // P2WSH\n+            const auto script{GetScriptForDestination(WitnessV0ScriptHash(CScript() << OP_TRUE))};\n+            BOOST_REQUIRE(script.IsPayToWitnessScriptHash());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 0);\n+        }\n+        {\n+            // P2TR\n+            const auto script{GetScriptForDestination(WitnessV1Taproot(XOnlyPubKey(pubkey)))};\n+            BOOST_REQUIRE(script.IsPayToTaproot());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 0);\n+        }\n+        {\n+            // P2PK (compressed)\n+            const auto script{GetScriptForRawPubKey(pubkey)};\n+            BOOST_REQUIRE(script.IsCompressedPayToPubKey());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            // P2PK (uncompressed)\n+            CKey uncompressedKey;\n+            uncompressedKey.MakeNewKey(false);\n+            const auto script{GetScriptForRawPubKey(uncompressedKey.GetPubKey())};\n+            BOOST_REQUIRE(script.IsUncompressedPayToPubKey());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+    }\n+\n+    // MULTISIG\n+    std::vector<CPubKey> keys;\n+    keys.push_back(pubkey);\n+    keys.push_back(pubkey); // Using the same key twice for simplicity\n+    const auto script{GetScriptForMultisig(1, keys)};\n+    BOOST_CHECK_EQUAL(script.CountSigOps(/*fAccurate=*/false), 20); // Default max pubkeys\n+    BOOST_CHECK_EQUAL(script.CountSigOps(/*fAccurate=*/true), 2);   // Actual count\n+}\n+\n+BOOST_AUTO_TEST_CASE(GetOpName_no_missing_mnemonics)\n+{\n+    for (auto op{OP_0}; op < OP_INVALIDOPCODE; op = opcodetype(op + 1)) {\n+        const auto op_name{GetOpName(op)};\n+        BOOST_CHECK(!op_name.empty());\n+        if (op >= OP_PUSHDATA1 && !IsOpSuccess(op)) {",
      "path": "src/test/sigopcount_tests.cpp",
      "position": null,
      "original_position": 172,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "c194618bb587a2e15ed11f268898599c74f1aa74",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: add `CountSigOps` edge-cases & known-template coverage\" (c194618bb587a2e15ed11f268898599c74f1aa74)\r\n\r\nMaybe it would make sense to check that some (most?) of these opcodes actually do satisfy `op_name == \"OP_UNKNOWN\"`, if that is the case.",
      "created_at": "2025-08-05T18:10:46Z",
      "updated_at": "2025-08-05T18:41:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255009999",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255009999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255016916",
      "pull_request_review_id": 3089148272,
      "id": 2255016916,
      "node_id": "PRRC_kwDOABII586GaNPU",
      "diff_hunk": "@@ -28,6 +30,172 @@ Serialize(const CScript& s)\n \n BOOST_FIXTURE_TEST_SUITE(sigopcount_tests, BasicTestingSetup)\n \n+// Feeds malformed PUSHDATA sequences to confirm the parser never crashes and still counts sig-ops that appear before the error.\n+BOOST_AUTO_TEST_CASE(CountSigOpsErrors)\n+{\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << opcodetype(0x4b)}; // push-75 with 0 bytes present",
      "path": "src/test/sigopcount_tests.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "c194618bb587a2e15ed11f268898599c74f1aa74",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: add `CountSigOps` edge-cases & known-template coverage\" (c194618bb587a2e15ed11f268898599c74f1aa74)\r\n\r\nMaybe use `CScript{}` instead of `CScript()` since already using braced initialization for the variable",
      "created_at": "2025-08-05T18:14:36Z",
      "updated_at": "2025-08-05T18:41:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255016916",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255016916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255022936",
      "pull_request_review_id": 3089148272,
      "id": 2255022936,
      "node_id": "PRRC_kwDOABII586GaOtY",
      "diff_hunk": "@@ -28,6 +30,172 @@ Serialize(const CScript& s)\n \n BOOST_FIXTURE_TEST_SUITE(sigopcount_tests, BasicTestingSetup)\n \n+// Feeds malformed PUSHDATA sequences to confirm the parser never crashes and still counts sig-ops that appear before the error.\n+BOOST_AUTO_TEST_CASE(CountSigOpsErrors)\n+{\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << opcodetype(0x4b)}; // push-75 with 0 bytes present\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);",
      "path": "src/test/sigopcount_tests.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "c194618bb587a2e15ed11f268898599c74f1aa74",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: add `CountSigOps` edge-cases & known-template coverage\" (c194618bb587a2e15ed11f268898599c74f1aa74)\r\n\r\nThe checks in this test are very repetitive. You might be able to make it easier understand and maintain by building a `std::vector<CScript>` of invalid scripts and looping over it.",
      "created_at": "2025-08-05T18:17:50Z",
      "updated_at": "2025-08-05T18:41:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255022936",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255022936"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255054508",
      "pull_request_review_id": 3089148272,
      "id": 2255054508,
      "node_id": "PRRC_kwDOABII586GaWas",
      "diff_hunk": "@@ -27,7 +27,7 @@ class OpCodeParser\n public:\n     OpCodeParser()\n     {\n-        for (unsigned int op = 0; op <= MAX_OPCODE; ++op) {\n+        for (unsigned int op = 0; op <= MAX_LEGACY_OPCODE; ++op) {",
      "path": "src/core_read.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "f8208e92bd103359f8c3ceb3361eb7904099e994",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: make sure OP_CHECKSIGADD isn't considered valid (legacy) sigop\" (f8208e92bd103359f8c3ceb3361eb7904099e994)\r\n\r\nI'm confused about whether code that changes in this commit is actually doing the right thing currently, of if some of it should be improved to support taproot opcodes. Would be helpful if commit message could clarify.",
      "created_at": "2025-08-05T18:34:26Z",
      "updated_at": "2025-08-05T18:53:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255054508",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255054508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255351551",
      "pull_request_review_id": 3089736417,
      "id": 2255351551,
      "node_id": "PRRC_kwDOABII586Gbe7_",
      "diff_hunk": "@@ -27,7 +27,7 @@ class OpCodeParser\n public:\n     OpCodeParser()\n     {\n-        for (unsigned int op = 0; op <= MAX_OPCODE; ++op) {\n+        for (unsigned int op = 0; op <= MAX_LEGACY_OPCODE; ++op) {",
      "path": "src/core_read.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "f8208e92bd103359f8c3ceb3361eb7904099e994",
      "in_reply_to_id": 2255054508,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I also found this confusing, it's why I have renamed the max in the first place and why I added tests for `GetOpName`.\r\nBut given that we already had a test making sure that:\r\n```C++\r\nBOOST_CHECK_EXCEPTION(ParseScript(\"OP_CHECKSIGADD\"), std::runtime_error, HasReason(\"script parse error: unknown opcode\"));\r\n```\r\nit seems to be the expected behavior.\r\nAdded a short explanation to the commit message.\r\n\r\n---\r\n\r\nHowever, the fuzz usage in `ConsumeOpcodeType` didn't make sense to me, so I've extended that to test any kind of opcode - done in a separate commit at the end.\r\n\r\n<details>\r\n<summary>awkward fuzzing on my Mac</summary>\r\n\r\n```bash\r\nrm -rfd build_fuzz && \\\r\ncmake --preset=libfuzzer \\\r\n -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\\r\n -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\r\n -DCMAKE_OSX_SYSROOT=\"$(xcrun --show-sdk-path)\" \\\r\n -DCMAKE_C_FLAGS=\"-target arm64-apple-macos11\" \\\r\n -DCMAKE_CXX_FLAGS=\"-target arm64-apple-macos11\" \\\r\n -DCMAKE_EXE_LINKER_FLAGS=\"-fuse-ld=lld\" && \\\r\ncmake --build build_fuzz -j$(nproc) && \\\r\nFUZZ=script_ops build_fuzz/bin/fuzz\r\n```\r\n\r\n</details>\r\n",
      "created_at": "2025-08-05T21:11:24Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255351551",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255351551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 30,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255352640",
      "pull_request_review_id": 3089736417,
      "id": 2255352640,
      "node_id": "PRRC_kwDOABII586GbfNA",
      "diff_hunk": "@@ -528,13 +528,19 @@ class CScript : public CScriptBase\n     }\n \n     /**\n-     * Pre-version-0.6, Bitcoin always counted CHECKMULTISIGs\n-     * as 20 sigops. With pay-to-script-hash, that changed:\n-     * CHECKMULTISIGs serialized in scriptSigs are\n-     * counted more accurately, assuming they are of the form\n-     *  ... OP_N CHECKMULTISIG ...\n+     * Count the number of signature operations (sigops) in this script.\n+     *\n+     * The `fAccurate` parameter controls how sigops are counted for `CHECKMULTISIG` operations.\n+     * Set `fAccurate` to `true` when analyzing P2SH redeem scripts or SegWit witness scripts,\n+     * and to `false` when analyzing scriptPubKeys or scriptSigs.\n+     *\n+     * Historically, Bitcoin always counted each `CHECKMULTISIG` as\n+     * 20 sigops (`MAX_PUBKEYS_PER_MULTISIG`), regardless of the number of pubkeys.\n+     * Starting with P2SH in version 0.6, `CHECKMULTISIG` operations inside wrapped scripts\n+     * began to be counted more precisely, using the preceding OP_N opcode to determine\n+     * the number of pubkeys and thus the number of sigops.\n      */\n-    unsigned int GetSigOpCount(bool fAccurate) const;\n+    unsigned int CountSigOps(bool fAccurate) const;",
      "path": "src/script/script.h",
      "position": 63,
      "original_position": 22,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "4cbd303ddd7ae500683a7a595f38c5b8ff2de31e",
      "in_reply_to_id": 2254023250,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, thanks, kept the rename and added you as a co-author",
      "created_at": "2025-08-05T21:11:44Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255352640",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255352640"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 553,
      "original_line": 553,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255358039",
      "pull_request_review_id": 3089736417,
      "id": 2255358039,
      "node_id": "PRRC_kwDOABII586GbghX",
      "diff_hunk": "@@ -612,6 +606,15 @@ class CScriptID : public BaseHash<uint160>\n     explicit CScriptID(const uint160& in) : BaseHash(in) {}\n };\n \n+/**\n+ * Count the number of signature operations (sigops) in a P2SH scriptSig.\n+ *\n+ * If the scriptSig contains a SegWit redeem script (i.e., a P2SH-P2WPKH or P2SH-P2WSH script),\n+ * this function counts only the non-SegWit sigops.\n+ * To count SegWit sigops in such cases, use `CountWitnessSigOps`.\n+ */\n+unsigned int CountP2SHSigOps(const CScript& scriptSig);",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 24,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "37c1d8fc8db2f1ddd6ddf4d8fccbd13bbc9c9935",
      "in_reply_to_id": 2254092329,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added your explanation to the commit message - even though the changes themselves made that obvious, since we've added new comments to the methods",
      "created_at": "2025-08-05T21:13:40Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255358039",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255358039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 680,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255418199",
      "pull_request_review_id": 3089736417,
      "id": 2255418199,
      "node_id": "PRRC_kwDOABII586GbvNX",
      "diff_hunk": "@@ -555,7 +555,13 @@ class CScript : public CScriptBase\n      */\n     static bool IsPayToAnchor(int version, const std::vector<unsigned char>& program);\n \n-    bool IsPayToScriptHash() const;\n+    bool IsPayToScriptHash() const noexcept\n+    {\n+        return size() == 23 &&\n+               front() == OP_HASH160 &&\n+               (*this)[1] == WITNESS_V0_KEYHASH_SIZE &&",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 9,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "0d51088d1daa15ade3bf3c57410a0c12df235615",
      "in_reply_to_id": 2254180036,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Subtle, thanks, extracted it to:\r\n```C++\r\nstatic constexpr size_t HASH160_OUTPUT_SIZE{20};\r\nstatic constexpr size_t WITNESS_V0_KEYHASH_SIZE{HASH160_OUTPUT_SIZE};\r\n```\r\nand used these where it explains the magic number better",
      "created_at": "2025-08-05T21:50:36Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255418199",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255418199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255448800",
      "pull_request_review_id": 3089736417,
      "id": 2255448800,
      "node_id": "PRRC_kwDOABII586Gb2rg",
      "diff_hunk": "@@ -1222,7 +1222,7 @@ BOOST_AUTO_TEST_CASE(script_size_and_capacity_test)\n     // P2TR has direct allocation\n     {\n         const auto script{GetScriptForDestination(WitnessV1Taproot{XOnlyPubKey{dummy_pubkey}})};\n-        BOOST_CHECK_EQUAL(GetTxoutType(script), TxoutType::WITNESS_V1_TAPROOT);\n+        BOOST_CHECK(script.IsPayToTaproot());",
      "path": "src/test/script_tests.cpp",
      "position": 44,
      "original_position": 5,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "38e89f646221ec0c15158b6ef0007336fec008e3",
      "in_reply_to_id": 2254194990,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "There was no reordering, it was just inserted after the other helper, `IsPayToWitnessScriptHash` (looks like GitHub got confused).\r\nThe `BOOST_CHECK_EQUAL` to `BOOST_CHECK` change is just to test the new helper method in a simpler way, now that we don't have to use `Solver`.\r\nYou still think it needs additional explanations?",
      "created_at": "2025-08-05T22:13:45Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255448800",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255448800"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1229,
      "original_line": 1229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255456847",
      "pull_request_review_id": 3089736417,
      "id": 2255456847,
      "node_id": "PRRC_kwDOABII586Gb4pP",
      "diff_hunk": "@@ -562,7 +562,14 @@ class CScript : public CScriptBase\n                (*this)[1] == WITNESS_V0_KEYHASH_SIZE &&\n                back() == OP_EQUAL;\n     }\n-    bool IsPayToWitnessScriptHash() const;\n+\n+    bool IsPayToWitnessScriptHash() const noexcept\n+    {\n+        return size() == 34 &&",
      "path": "src/script/script.h",
      "position": 113,
      "original_position": 8,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "3c800a72b6520d94bc3996fa31ecded0f6fab22d",
      "in_reply_to_id": 2254675962,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In most other cases I used constants, but for the sizes I prefer redundancy and clarity, to make absolutely sure we're not accidentally changing anything here",
      "created_at": "2025-08-05T22:20:22Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255456847",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255456847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 595,
      "original_line": 595,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255457272",
      "pull_request_review_id": 3089736417,
      "id": 2255457272,
      "node_id": "PRRC_kwDOABII586Gb4v4",
      "diff_hunk": "@@ -575,9 +575,14 @@ class CScript : public CScriptBase\n                (*this)[1] == WITNESS_V0_SCRIPTHASH_SIZE;\n     }\n \n-    bool IsWitnessProgram(int& version, std::vector<unsigned char>& program) const;\n+    bool IsPayToTaproot() const noexcept\n+    {\n+        return size() == 34 &&",
      "path": "src/script/script.h",
      "position": 120,
      "original_position": 7,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "38e89f646221ec0c15158b6ef0007336fec008e3",
      "in_reply_to_id": 2254692162,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I prefer the constant here for redundancy",
      "created_at": "2025-08-05T22:20:40Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255457272",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255457272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 602,
      "original_line": 602,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255459207",
      "pull_request_review_id": 3089736417,
      "id": 2255459207,
      "node_id": "PRRC_kwDOABII586Gb5OH",
      "diff_hunk": "@@ -560,6 +560,16 @@ class CScript : public CScriptBase\n                back() == 0x73;\n     }\n \n+    bool IsPayToPubKeyHash() const noexcept\n+    {\n+        return size() == 25 &&\n+               front() == OP_DUP &&\n+               (*this)[1] == OP_HASH160 &&\n+               (*this)[2] == WITNESS_V0_KEYHASH_SIZE &&",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 9,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "5d23e9a4c6fa4aab530889c54565954486572afd",
      "in_reply_to_id": 2254707312,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, good point, already did that as part of the other similar comment you had.",
      "created_at": "2025-08-05T22:22:18Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255459207",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255459207"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 568,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255462973",
      "pull_request_review_id": 3089736417,
      "id": 2255462973,
      "node_id": "PRRC_kwDOABII586Gb6I9",
      "diff_hunk": "@@ -592,6 +593,13 @@ class CScript : public CScriptBase\n                (*this)[1] == WITNESS_V1_TAPROOT_SIZE;\n     }\n \n+    bool IsCompressedPayToPubKey() const noexcept\n+    {\n+        return size() == 35 &&",
      "path": "src/script/script.h",
      "position": 128,
      "original_position": 14,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "017f58821fe857a2bb7ac14f2b00b349936391d8",
      "in_reply_to_id": 2254716286,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, same reasoning as before - normally I'm all for deduplication, so that the reason is clear + if we change it, we don't have to touch multiple places. But here I want a bit of extra redundancy to make sure that we **do** have to change in multiple places if we **really** want to change this value.",
      "created_at": "2025-08-05T22:25:37Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255462973",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255462973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 610,
      "original_line": 610,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255465558",
      "pull_request_review_id": 3089736417,
      "id": 2255465558,
      "node_id": "PRRC_kwDOABII586Gb6xW",
      "diff_hunk": "@@ -9,6 +9,7 @@\n #include <attributes.h>\n #include <crypto/common.h>\n #include <prevector.h> // IWYU pragma: export\n+#include <pubkey.h>",
      "path": "src/script/script.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "017f58821fe857a2bb7ac14f2b00b349936391d8",
      "in_reply_to_id": 2254731153,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We kinda' depend on pubkey here - if you have a more concrete suggestion, please let me know, all other ones I thought of were uglier than this.",
      "created_at": "2025-08-05T22:28:02Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255465558",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255465558"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 12,
      "original_line": 12,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255500828",
      "pull_request_review_id": 3089736417,
      "id": 2255500828,
      "node_id": "PRRC_kwDOABII586GcDYc",
      "diff_hunk": "@@ -28,6 +30,172 @@ Serialize(const CScript& s)\n \n BOOST_FIXTURE_TEST_SUITE(sigopcount_tests, BasicTestingSetup)\n \n+// Feeds malformed PUSHDATA sequences to confirm the parser never crashes and still counts sig-ops that appear before the error.\n+BOOST_AUTO_TEST_CASE(CountSigOpsErrors)\n+{\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << opcodetype(0x4b)}; // push-75 with 0 bytes present\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG\n+                              << opcodetype(0x02)\n+                              << OP_CHECKSIGVERIFY}; // push-2 with only 1 byte present ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1}; // not enough data after OP_PUSHDATA1\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1\n+                              << opcodetype(0xff)\n+                              << OP_CHECKSIGVERIFY}; // out of bounds OP_PUSHDATA1 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2 << opcodetype(0xff)}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2\n+                              << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA2 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(100) << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA4 data size ignoring OP_CHECKMULTISIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+    }\n+}\n+\n+// Asserts the expected legacy/accurate sig-op totals for all common known script templates\n+BOOST_AUTO_TEST_CASE(CountSigOpsKnownTemplates)\n+{\n+    CKey dummyKey;\n+    dummyKey.MakeNewKey(true);",
      "path": "src/test/sigopcount_tests.cpp",
      "position": null,
      "original_position": 86,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "c194618bb587a2e15ed11f268898599c74f1aa74",
      "in_reply_to_id": 2254943653,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Even better, I used `CKey dummyKey{GenerateRandomKey(/*compressed=*/true)}`",
      "created_at": "2025-08-05T22:59:39Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255500828",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255500828"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255502272",
      "pull_request_review_id": 3089736417,
      "id": 2255502272,
      "node_id": "PRRC_kwDOABII586GcDvA",
      "diff_hunk": "@@ -28,6 +30,172 @@ Serialize(const CScript& s)\n \n BOOST_FIXTURE_TEST_SUITE(sigopcount_tests, BasicTestingSetup)\n \n+// Feeds malformed PUSHDATA sequences to confirm the parser never crashes and still counts sig-ops that appear before the error.\n+BOOST_AUTO_TEST_CASE(CountSigOpsErrors)\n+{\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << opcodetype(0x4b)}; // push-75 with 0 bytes present\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG\n+                              << opcodetype(0x02)\n+                              << OP_CHECKSIGVERIFY}; // push-2 with only 1 byte present ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1}; // not enough data after OP_PUSHDATA1\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1\n+                              << opcodetype(0xff)\n+                              << OP_CHECKSIGVERIFY}; // out of bounds OP_PUSHDATA1 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2 << opcodetype(0xff)}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2\n+                              << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA2 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(100) << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA4 data size ignoring OP_CHECKMULTISIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+    }\n+}\n+\n+// Asserts the expected legacy/accurate sig-op totals for all common known script templates\n+BOOST_AUTO_TEST_CASE(CountSigOpsKnownTemplates)",
      "path": "src/test/sigopcount_tests.cpp",
      "position": 15,
      "original_position": 83,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "c194618bb587a2e15ed11f268898599c74f1aa74",
      "in_reply_to_id": 2254951939,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, changed the order in the commit message as well.",
      "created_at": "2025-08-05T23:01:02Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255502272",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255502272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 34,
      "original_line": 34,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255512307",
      "pull_request_review_id": 3089736417,
      "id": 2255512307,
      "node_id": "PRRC_kwDOABII586GcGLz",
      "diff_hunk": "@@ -218,8 +218,8 @@ enum opcodetype\n     OP_INVALIDOPCODE = 0xff,\n };\n \n-// Maximum value that an opcode can be\n-static const unsigned int MAX_OPCODE = OP_NOP10;\n+// Highest opcode allowed in pre-Taproot scripts",
      "path": "src/script/script.h",
      "position": 29,
      "original_position": 6,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "f8208e92bd103359f8c3ceb3361eb7904099e994",
      "in_reply_to_id": 2254970939,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for the new name suggestion, I didn't like the `legacy` here, was hoping you will have a better suggestion!\r\n\r\nAlso extracted the test with explanations.",
      "created_at": "2025-08-05T23:09:57Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255512307",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255512307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 224,
      "original_line": 224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255514505",
      "pull_request_review_id": 3089736417,
      "id": 2255514505,
      "node_id": "PRRC_kwDOABII586GcGuJ",
      "diff_hunk": "@@ -28,6 +30,172 @@ Serialize(const CScript& s)\n \n BOOST_FIXTURE_TEST_SUITE(sigopcount_tests, BasicTestingSetup)\n \n+// Feeds malformed PUSHDATA sequences to confirm the parser never crashes and still counts sig-ops that appear before the error.\n+BOOST_AUTO_TEST_CASE(CountSigOpsErrors)\n+{\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << opcodetype(0x4b)}; // push-75 with 0 bytes present\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG\n+                              << opcodetype(0x02)\n+                              << OP_CHECKSIGVERIFY}; // push-2 with only 1 byte present ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1}; // not enough data after OP_PUSHDATA1\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1\n+                              << opcodetype(0xff)\n+                              << OP_CHECKSIGVERIFY}; // out of bounds OP_PUSHDATA1 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2 << opcodetype(0xff)}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2\n+                              << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA2 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(100) << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA4 data size ignoring OP_CHECKMULTISIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+    }\n+}\n+\n+// Asserts the expected legacy/accurate sig-op totals for all common known script templates\n+BOOST_AUTO_TEST_CASE(CountSigOpsKnownTemplates)\n+{\n+    CKey dummyKey;\n+    dummyKey.MakeNewKey(true);\n+    const auto pubkey{dummyKey.GetPubKey()};\n+\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            // P2A\n+            const std::vector<unsigned char> anchor_data{0x4e, 0x73};\n+            const auto script{CScript() << OP_1 << anchor_data};\n+\n+            BOOST_CHECK(script.IsPayToAnchor());\n+            BOOST_CHECK(script.IsPayToAnchor(1, anchor_data));",
      "path": "src/test/sigopcount_tests.cpp",
      "position": 27,
      "original_position": 96,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "c194618bb587a2e15ed11f268898599c74f1aa74",
      "in_reply_to_id": 2254983086,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Overzealous merge conflict resolution - thanks, added it back.",
      "created_at": "2025-08-05T23:12:00Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255514505",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255514505"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 46,
      "original_line": 46,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255568913",
      "pull_request_review_id": 3089736417,
      "id": 2255568913,
      "node_id": "PRRC_kwDOABII586GcUAR",
      "diff_hunk": "@@ -28,6 +30,172 @@ Serialize(const CScript& s)\n \n BOOST_FIXTURE_TEST_SUITE(sigopcount_tests, BasicTestingSetup)\n \n+// Feeds malformed PUSHDATA sequences to confirm the parser never crashes and still counts sig-ops that appear before the error.\n+BOOST_AUTO_TEST_CASE(CountSigOpsErrors)\n+{\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << opcodetype(0x4b)}; // push-75 with 0 bytes present\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG\n+                              << opcodetype(0x02)\n+                              << OP_CHECKSIGVERIFY}; // push-2 with only 1 byte present ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1}; // not enough data after OP_PUSHDATA1\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA1\n+                              << opcodetype(0xff)\n+                              << OP_CHECKSIGVERIFY}; // out of bounds OP_PUSHDATA1 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2 << opcodetype(0xff)}; // not enough data after OP_PUSHDATA2\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA2\n+                              << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA2 data size ignoring OP_CHECKSIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)}; // not enough data after OP_PUSHDATA4\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << OP_PUSHDATA4\n+                              << opcodetype(100) << opcodetype(0xff) << opcodetype(0xff) << opcodetype(0xff)\n+                              << OP_CHECKSIG << OP_CHECKSIGVERIFY << OP_CHECKMULTISIG << OP_CHECKMULTISIGVERIFY}; // out of bounds OP_PUSHDATA4 data size ignoring OP_CHECKMULTISIGVERIFY\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+    }\n+}\n+\n+// Asserts the expected legacy/accurate sig-op totals for all common known script templates\n+BOOST_AUTO_TEST_CASE(CountSigOpsKnownTemplates)\n+{\n+    CKey dummyKey;\n+    dummyKey.MakeNewKey(true);\n+    const auto pubkey{dummyKey.GetPubKey()};\n+\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            // P2A\n+            const std::vector<unsigned char> anchor_data{0x4e, 0x73};\n+            const auto script{CScript() << OP_1 << anchor_data};\n+\n+            BOOST_CHECK(script.IsPayToAnchor());\n+            BOOST_CHECK(script.IsPayToAnchor(1, anchor_data));\n+        }\n+        {\n+            // OP_RETURN with sigop after (non-standard, found first in block 229,712)\n+            const auto p2pkh_hash{\"cd2b3298b7f455f39805377e5f213093df3cc09a\"_hex_v_u8};\n+            const auto script{CScript() << OP_RETURN << OP_DUP << OP_HASH160 << p2pkh_hash << OP_EQUALVERIFY << OP_CHECKSIG};\n+\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            // P2WPKH\n+            const auto script{GetScriptForDestination(WitnessV0KeyHash(pubkey.GetID()))};\n+            BOOST_REQUIRE(script.IsPayToWitnessPubKeyHash());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 0);\n+        }\n+        {\n+            // P2SH\n+            const auto script{GetScriptForDestination(ScriptHash(CScript() << OP_TRUE))};\n+            BOOST_REQUIRE(script.IsPayToScriptHash());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 0);\n+\n+            BOOST_CHECK_EQUAL(CountP2SHSigOps(script), 0);\n+            const auto single_sigop{CScript() << ToByteVector(CScript() << OP_CHECKMULTISIG)};\n+            BOOST_CHECK_EQUAL(CountP2SHSigOps(single_sigop), 20); // arg is counted since script is P2SH\n+\n+            BOOST_CHECK_EQUAL(CountP2SHSigOps(CScript() << OP_PUSHDATA1), 0);   // error: OP_PUSHDATA1, but no size byte\n+            BOOST_CHECK_EQUAL(CountP2SHSigOps(CScript() << OP_CHECKSIGADD), 0); // error: OP_CHECKSIGADD > OP_16\n+        }\n+        {\n+            // P2PKH\n+            const auto script{GetScriptForDestination(PKHash(pubkey.GetID()))};\n+            BOOST_REQUIRE(script.IsPayToPubKeyHash());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            // P2WSH\n+            const auto script{GetScriptForDestination(WitnessV0ScriptHash(CScript() << OP_TRUE))};\n+            BOOST_REQUIRE(script.IsPayToWitnessScriptHash());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 0);\n+        }\n+        {\n+            // P2TR\n+            const auto script{GetScriptForDestination(WitnessV1Taproot(XOnlyPubKey(pubkey)))};\n+            BOOST_REQUIRE(script.IsPayToTaproot());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 0);\n+        }\n+        {\n+            // P2PK (compressed)\n+            const auto script{GetScriptForRawPubKey(pubkey)};\n+            BOOST_REQUIRE(script.IsCompressedPayToPubKey());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+        {\n+            // P2PK (uncompressed)\n+            CKey uncompressedKey;\n+            uncompressedKey.MakeNewKey(false);\n+            const auto script{GetScriptForRawPubKey(uncompressedKey.GetPubKey())};\n+            BOOST_REQUIRE(script.IsUncompressedPayToPubKey());\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);\n+        }\n+    }\n+\n+    // MULTISIG\n+    std::vector<CPubKey> keys;\n+    keys.push_back(pubkey);\n+    keys.push_back(pubkey); // Using the same key twice for simplicity\n+    const auto script{GetScriptForMultisig(1, keys)};\n+    BOOST_CHECK_EQUAL(script.CountSigOps(/*fAccurate=*/false), 20); // Default max pubkeys\n+    BOOST_CHECK_EQUAL(script.CountSigOps(/*fAccurate=*/true), 2);   // Actual count\n+}\n+\n+BOOST_AUTO_TEST_CASE(GetOpName_no_missing_mnemonics)\n+{\n+    for (auto op{OP_0}; op < OP_INVALIDOPCODE; op = opcodetype(op + 1)) {\n+        const auto op_name{GetOpName(op)};\n+        BOOST_CHECK(!op_name.empty());\n+        if (op >= OP_PUSHDATA1 && !IsOpSuccess(op)) {",
      "path": "src/test/sigopcount_tests.cpp",
      "position": null,
      "original_position": 172,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "c194618bb587a2e15ed11f268898599c74f1aa74",
      "in_reply_to_id": 2255009999,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, I just implemented all of them instead - thanks for the push.",
      "created_at": "2025-08-06T00:06:07Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255568913",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255568913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255571368",
      "pull_request_review_id": 3089736417,
      "id": 2255571368,
      "node_id": "PRRC_kwDOABII586GcUmo",
      "diff_hunk": "@@ -28,6 +30,172 @@ Serialize(const CScript& s)\n \n BOOST_FIXTURE_TEST_SUITE(sigopcount_tests, BasicTestingSetup)\n \n+// Feeds malformed PUSHDATA sequences to confirm the parser never crashes and still counts sig-ops that appear before the error.\n+BOOST_AUTO_TEST_CASE(CountSigOpsErrors)\n+{\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << opcodetype(0x4b)}; // push-75 with 0 bytes present",
      "path": "src/test/sigopcount_tests.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "c194618bb587a2e15ed11f268898599c74f1aa74",
      "in_reply_to_id": 2255016916,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-08-06T00:09:19Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255571368",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255571368"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255573983",
      "pull_request_review_id": 3089736417,
      "id": 2255573983,
      "node_id": "PRRC_kwDOABII586GcVPf",
      "diff_hunk": "@@ -28,6 +30,172 @@ Serialize(const CScript& s)\n \n BOOST_FIXTURE_TEST_SUITE(sigopcount_tests, BasicTestingSetup)\n \n+// Feeds malformed PUSHDATA sequences to confirm the parser never crashes and still counts sig-ops that appear before the error.\n+BOOST_AUTO_TEST_CASE(CountSigOpsErrors)\n+{\n+    for (const bool fAccurate : {false, true}) {\n+        {\n+            const auto script{CScript() << OP_CHECKSIG << opcodetype(0x4b)}; // push-75 with 0 bytes present\n+            BOOST_CHECK_EQUAL(script.CountSigOps(fAccurate), 1);",
      "path": "src/test/sigopcount_tests.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "c194618bb587a2e15ed11f268898599c74f1aa74",
      "in_reply_to_id": 2255022936,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, I thought of deduplicating them, but in that case they're not so explicit. I expect people to be interested in the behavior of a given template and see its behavior directly. If you insist, let me know and I'll think of something.",
      "created_at": "2025-08-06T00:11:41Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255573983",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255573983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 39,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255644392",
      "pull_request_review_id": 3089736417,
      "id": 2255644392,
      "node_id": "PRRC_kwDOABII586Gcmbo",
      "diff_hunk": "@@ -612,6 +606,15 @@ class CScriptID : public BaseHash<uint160>\n     explicit CScriptID(const uint160& in) : BaseHash(in) {}\n };\n \n+/**\n+ * Count the number of signature operations (sigops) in a P2SH scriptSig.\n+ *\n+ * If the scriptSig contains a SegWit redeem script (i.e., a P2SH-P2WPKH or P2SH-P2WSH script),\n+ * this function counts only the non-SegWit sigops.\n+ * To count SegWit sigops in such cases, use `CountWitnessSigOps`.\n+ */\n+unsigned int CountP2SHSigOps(const CScript& scriptSig);",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 24,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "37c1d8fc8db2f1ddd6ddf4d8fccbd13bbc9c9935",
      "in_reply_to_id": 2254641829,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I played with this, but really dislike the new version, mostly for how awkward `CheckSigopsBIP54` has become after it.\r\nBut I have kept your comment update and change the ternary, let me know what you think of this instead:\r\n```C++\r\nif (prev_txo.scriptPubKey.IsPayToScriptHash()) {\r\n    Assert(prev_txo.scriptPubKey.CountSigOps(/*fAccurate=*/true) == 0);\r\n    sigops += CountP2SHSigOps(txin.scriptSig);\r\n} else {\r\n    sigops += prev_txo.scriptPubKey.CountSigOps(/*fAccurate=*/true);\r\n}\r\n```\r\n\r\nIf we get to my original proposal which optimizes `CountSigOps` for the templates, I don't mind always executing it, even when `IsPayToScriptHash() == true`.\r\nBut it seems more logical to me to have two sigop updates here, like before.",
      "created_at": "2025-08-06T01:17:27Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255644392",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255644392"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 680,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255655601",
      "pull_request_review_id": 3089736417,
      "id": 2255655601,
      "node_id": "PRRC_kwDOABII586GcpKx",
      "diff_hunk": "@@ -592,6 +593,13 @@ class CScript : public CScriptBase\n                (*this)[1] == WITNESS_V1_TAPROOT_SIZE;\n     }\n \n+    bool IsCompressedPayToPubKey() const noexcept",
      "path": "src/script/script.h",
      "position": 126,
      "original_position": 12,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "017f58821fe857a2bb7ac14f2b00b349936391d8",
      "in_reply_to_id": 2254732750,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure, would we not consider it a `P2PK` without a valid prefix? Otherwise that's just an extra validation step that should be done elsewhere. We're not always checking the prefixes (see: `MatchPayToPubkey`), and we don't have extra info for other such quick checks - let me know if you have strong preferences here.",
      "created_at": "2025-08-06T01:28:42Z",
      "updated_at": "2025-08-06T02:16:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255655601",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2255655601"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 608,
      "original_line": 608,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2260808130",
      "pull_request_review_id": 3097866742,
      "id": 2260808130,
      "node_id": "PRRC_kwDOABII586GwTHC",
      "diff_hunk": "@@ -528,13 +528,19 @@ class CScript : public CScriptBase\n     }\n \n     /**\n-     * Pre-version-0.6, Bitcoin always counted CHECKMULTISIGs\n-     * as 20 sigops. With pay-to-script-hash, that changed:\n-     * CHECKMULTISIGs serialized in scriptSigs are\n-     * counted more accurately, assuming they are of the form\n-     *  ... OP_N CHECKMULTISIG ...\n+     * Count the number of signature operations (sigops) in this script.\n+     *\n+     * The `fAccurate` parameter controls how sigops are counted for `CHECKMULTISIG` operations.\n+     * Set `fAccurate` to `true` when analyzing P2SH redeem scripts or SegWit witness scripts,",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 12,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "006a428613710dde24866cf4f6efd7b68b6ee294",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: rename `GetSigOpCount` to `CountSigOps`\" (006a428613710dde24866cf4f6efd7b68b6ee294)\r\n\r\nThis sentence should be prefixed with \"When enforcing the `MAX_BLOCK_SIGOPS_COST` limit\" to be correct since it doesn't apply in other cases. (Problem is fixed in the next commit but the change belongs this commit. Sorry my previous feedback was a bit jumbled and I mixed the commits together.)",
      "created_at": "2025-08-07T16:14:44Z",
      "updated_at": "2025-08-07T19:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2260808130",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2260808130"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 534,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2260854463",
      "pull_request_review_id": 3097866742,
      "id": 2260854463,
      "node_id": "PRRC_kwDOABII586Gwea_",
      "diff_hunk": "@@ -131,9 +131,9 @@ unsigned int GetP2SHSigOpCount(const CTransaction& tx, const CCoinsViewCache& in\n     {\n         const Coin& coin = inputs.AccessCoin(tx.vin[i].prevout);\n         assert(!coin.IsSpent());\n-        const CTxOut &prevout = coin.out;\n-        if (prevout.scriptPubKey.IsPayToScriptHash())\n-            nSigOps += prevout.scriptPubKey.GetSigOpCount(tx.vin[i].scriptSig);\n+        if (coin.out.scriptPubKey.IsPayToScriptHash()) {\n+            nSigOps += CountP2SHSigOps(tx.vin[i].scriptSig);\n+        }",
      "path": "src/consensus/tx_verify.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "6bf5dce801e0da9d372d42d2c0650c283ec787f5",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: split off `P2SH` from `GetSigOpCount`\" (6bf5dce801e0da9d372d42d2c0650c283ec787f5)\r\n\r\nI still think you should consider simplifying these lines to:\r\n\r\n```c++\r\nnSigOps += CountP2SHSigOps(tx.vin[i].scriptSig, coin.out.scriptPubKey);\r\n```\r\n\r\nand simplifying CheckSigopsBIP54 to:\r\n\r\n```c++\r\nsigops += txin.scriptSig.CountSigOps(/*fAccurate=*/true);\r\nsigops += prev_txo.scriptPubKey.CountSigOps(/*fAccurate=*/true);\r\nsigops += CountP2SHSigOps(txin.scriptSig, prev_txo.scriptPubKey);\r\n```\r\n\r\nGetting rid of conditionals in these counting functions make them safer and more readable. In the case of BIP54 it also makes the code literally match the [specification](https://github.com/bitcoin/bips/blob/master/bip-0054.md#specification) which says \"For each input in the transaction, count the number of CHECKSIG and CHECKMULTISIG in the input scriptSig and previous output's scriptPubKey, including the P2SH redeemScript.\"\r\n\r\nAdditionally this would make the `CountP2SHSigOps` and `CountWitnessSigOps` functions take the same arguments and have the same semantics instead of having an unnecessary difference between them.\r\n",
      "created_at": "2025-08-07T16:35:02Z",
      "updated_at": "2025-08-07T19:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2260854463",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2260854463"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": 134,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2260876336",
      "pull_request_review_id": 3097866742,
      "id": 2260876336,
      "node_id": "PRRC_kwDOABII586Gwjww",
      "diff_hunk": "@@ -612,6 +606,15 @@ class CScriptID : public BaseHash<uint160>\n     explicit CScriptID(const uint160& in) : BaseHash(in) {}\n };\n \n+/**\n+ * Count the number of signature operations (sigops) in a P2SH scriptSig.\n+ *\n+ * If the scriptSig contains a SegWit redeem script (i.e., a P2SH-P2WPKH or P2SH-P2WSH script),\n+ * this function counts only the non-SegWit sigops.\n+ * To count SegWit sigops in such cases, use `CountWitnessSigOps`.\n+ */\n+unsigned int CountP2SHSigOps(const CScript& scriptSig);",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 24,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "37c1d8fc8db2f1ddd6ddf4d8fccbd13bbc9c9935",
      "in_reply_to_id": 2254092329,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255358039\r\n\r\nThanks. I think I just dislike reviewing changes before I know what purpose / motivation of the change is. I know you can often guess motivations after the fact, but it is usually helpful imo to see them stated explicitly.",
      "created_at": "2025-08-07T16:45:03Z",
      "updated_at": "2025-08-07T19:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2260876336",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2260876336"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 680,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2260899980",
      "pull_request_review_id": 3097866742,
      "id": 2260899980,
      "node_id": "PRRC_kwDOABII586GwpiM",
      "diff_hunk": "@@ -612,6 +606,15 @@ class CScriptID : public BaseHash<uint160>\n     explicit CScriptID(const uint160& in) : BaseHash(in) {}\n };\n \n+/**\n+ * Count the number of signature operations (sigops) in a P2SH scriptSig.\n+ *\n+ * If the scriptSig contains a SegWit redeem script (i.e., a P2SH-P2WPKH or P2SH-P2WSH script),\n+ * this function counts only the non-SegWit sigops.\n+ * To count SegWit sigops in such cases, use `CountWitnessSigOps`.\n+ */\n+unsigned int CountP2SHSigOps(const CScript& scriptSig);",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 24,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "37c1d8fc8db2f1ddd6ddf4d8fccbd13bbc9c9935",
      "in_reply_to_id": 2254641829,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255644392\r\n\r\n> I played with this, but really dislike the new version, mostly for how awkward `CheckSigopsBIP54` has become after it.\r\n\r\nI'm confused because the diff makes this code shorter than before, removes a conditional, and makes it match the BIP54 spec more closely (see other comment about BIP54 above). Also I liked the ternary version of this better than the current version. But whatever you prefer is fine with me and maybe some wires were just crossed here.\r\n",
      "created_at": "2025-08-07T16:53:39Z",
      "updated_at": "2025-08-07T19:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2260899980",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2260899980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 680,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261095050",
      "pull_request_review_id": 3097866742,
      "id": 2261095050,
      "node_id": "PRRC_kwDOABII586GxZKK",
      "diff_hunk": "@@ -218,8 +218,8 @@ enum opcodetype\n     OP_INVALIDOPCODE = 0xff,\n };\n \n-// Maximum value that an opcode can be\n-static const unsigned int MAX_OPCODE = OP_NOP10;\n+// Highest opcode allowed in pre-Taproot scripts",
      "path": "src/script/script.h",
      "position": 29,
      "original_position": 6,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "f8208e92bd103359f8c3ceb3361eb7904099e994",
      "in_reply_to_id": 2254970939,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: make sure `OP_CHECKSIGADD` isn't considered valid (legacy) sigop\" (a2cce66f11e635924c34b27b253214be8815b0bc)\r\n\r\nThanks, maybe also replace \"(legacy)\" in commit description with \"pre-tapscript\" or \"base\"",
      "created_at": "2025-08-07T18:15:05Z",
      "updated_at": "2025-08-07T19:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2261095050",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261095050"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 224,
      "original_line": 224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261132664",
      "pull_request_review_id": 3097866742,
      "id": 2261132664,
      "node_id": "PRRC_kwDOABII586GxiV4",
      "diff_hunk": "@@ -1222,7 +1222,7 @@ BOOST_AUTO_TEST_CASE(script_size_and_capacity_test)\n     // P2TR has direct allocation\n     {\n         const auto script{GetScriptForDestination(WitnessV1Taproot{XOnlyPubKey{dummy_pubkey}})};\n-        BOOST_CHECK_EQUAL(GetTxoutType(script), TxoutType::WITNESS_V1_TAPROOT);\n+        BOOST_CHECK(script.IsPayToTaproot());",
      "path": "src/test/script_tests.cpp",
      "position": 44,
      "original_position": 5,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "38e89f646221ec0c15158b6ef0007336fec008e3",
      "in_reply_to_id": 2254194990,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2255448800\r\n\r\n> You still think it needs additional explanations?\r\n\r\nIt seems ok, but maybe consider adding your explanation to the commit message: \"The `BOOST_CHECK_EQUAL` to `BOOST_CHECK` change is just to test the new helper method in a simpler way, now that we don't have to use `Solver`.\"\r\n\r\nI wouldn't have asked the question if I had known what the intention behind the solver change was, so this wasn't obvious to me.\r\n\r\nAlso I do see IsWitnessProgram followed by IsPayToTaproot in the header before b71e7a07becb5d74db4bc1fdd60899b5ec5157f4 and IsPayToTaproot followed by IsWitnessProgram after that commit, so I am still wondering if reordering was intended here. Seems fine either way though.",
      "created_at": "2025-08-07T18:33:46Z",
      "updated_at": "2025-08-07T19:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2261132664",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261132664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1229,
      "original_line": 1229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261177012",
      "pull_request_review_id": 3097866742,
      "id": 2261177012,
      "node_id": "PRRC_kwDOABII586GxtK0",
      "diff_hunk": "@@ -592,6 +593,13 @@ class CScript : public CScriptBase\n                (*this)[1] == WITNESS_V1_TAPROOT_SIZE;\n     }\n \n+    bool IsCompressedPayToPubKey() const noexcept",
      "path": "src/script/script.h",
      "position": 126,
      "original_position": 12,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "017f58821fe857a2bb7ac14f2b00b349936391d8",
      "in_reply_to_id": 2254732750,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2254732750\r\n\r\nTo clarify I agree code is doing the right thing and the CScript class shouldn't be looking inside the keys to check the format. I just think short comments could be helpful to prevent misunderstandings. Maybe:\r\n\r\n- `//! Detect P2PK script with a compressed public key. Doesn't check the 0x02/0x03 key prefix.`\r\n- `//! Detect P2PK script with a uncompressed public key. Doesn't check the 0x04 key prefix.`\r\n\r\nFeel free to leave as-is though, just a suggestion",
      "created_at": "2025-08-07T18:58:49Z",
      "updated_at": "2025-08-07T19:26:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2261177012",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261177012"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 608,
      "original_line": 608,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261477492",
      "pull_request_review_id": 3098836449,
      "id": 2261477492,
      "node_id": "PRRC_kwDOABII586Gy2h0",
      "diff_hunk": "@@ -131,9 +131,9 @@ unsigned int GetP2SHSigOpCount(const CTransaction& tx, const CCoinsViewCache& in\n     {\n         const Coin& coin = inputs.AccessCoin(tx.vin[i].prevout);\n         assert(!coin.IsSpent());\n-        const CTxOut &prevout = coin.out;\n-        if (prevout.scriptPubKey.IsPayToScriptHash())\n-            nSigOps += prevout.scriptPubKey.GetSigOpCount(tx.vin[i].scriptSig);\n+        if (coin.out.scriptPubKey.IsPayToScriptHash()) {\n+            nSigOps += CountP2SHSigOps(tx.vin[i].scriptSig);\n+        }",
      "path": "src/consensus/tx_verify.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "6bf5dce801e0da9d372d42d2c0650c283ec787f5",
      "in_reply_to_id": 2260854463,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-08-07T21:43:06Z",
      "updated_at": "2025-08-07T22:33:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2261477492",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261477492"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": 134,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261477694",
      "pull_request_review_id": 3098836449,
      "id": 2261477694,
      "node_id": "PRRC_kwDOABII586Gy2k-",
      "diff_hunk": "@@ -528,13 +528,19 @@ class CScript : public CScriptBase\n     }\n \n     /**\n-     * Pre-version-0.6, Bitcoin always counted CHECKMULTISIGs\n-     * as 20 sigops. With pay-to-script-hash, that changed:\n-     * CHECKMULTISIGs serialized in scriptSigs are\n-     * counted more accurately, assuming they are of the form\n-     *  ... OP_N CHECKMULTISIG ...\n+     * Count the number of signature operations (sigops) in this script.\n+     *\n+     * The `fAccurate` parameter controls how sigops are counted for `CHECKMULTISIG` operations.\n+     * Set `fAccurate` to `true` when analyzing P2SH redeem scripts or SegWit witness scripts,",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 12,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "006a428613710dde24866cf4f6efd7b68b6ee294",
      "in_reply_to_id": 2260808130,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Brought the change one commit earlier to avoid modifying the same thing twice.",
      "created_at": "2025-08-07T21:43:11Z",
      "updated_at": "2025-08-07T22:33:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2261477694",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261477694"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 534,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261493776",
      "pull_request_review_id": 3098836449,
      "id": 2261493776,
      "node_id": "PRRC_kwDOABII586Gy6gQ",
      "diff_hunk": "@@ -218,8 +218,8 @@ enum opcodetype\n     OP_INVALIDOPCODE = 0xff,\n };\n \n-// Maximum value that an opcode can be\n-static const unsigned int MAX_OPCODE = OP_NOP10;\n+// Highest opcode allowed in pre-Taproot scripts",
      "path": "src/script/script.h",
      "position": 29,
      "original_position": 6,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "f8208e92bd103359f8c3ceb3361eb7904099e994",
      "in_reply_to_id": 2254970939,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Reworded the commit message, thanks",
      "created_at": "2025-08-07T21:48:35Z",
      "updated_at": "2025-08-07T22:33:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2261493776",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261493776"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 224,
      "original_line": 224,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261517398",
      "pull_request_review_id": 3098836449,
      "id": 2261517398,
      "node_id": "PRRC_kwDOABII586GzARW",
      "diff_hunk": "@@ -1222,7 +1222,7 @@ BOOST_AUTO_TEST_CASE(script_size_and_capacity_test)\n     // P2TR has direct allocation\n     {\n         const auto script{GetScriptForDestination(WitnessV1Taproot{XOnlyPubKey{dummy_pubkey}})};\n-        BOOST_CHECK_EQUAL(GetTxoutType(script), TxoutType::WITNESS_V1_TAPROOT);\n+        BOOST_CHECK(script.IsPayToTaproot());",
      "path": "src/test/script_tests.cpp",
      "position": 44,
      "original_position": 5,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "38e89f646221ec0c15158b6ef0007336fec008e3",
      "in_reply_to_id": 2254194990,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Also I do see IsWitnessProgram followed by IsPayToTaproot in the header before https://github.com/bitcoin/bitcoin/commit/b71e7a07becb5d74db4bc1fdd60899b5ec5157f4 and IsPayToTaproot followed by IsWitnessProgram after that commit\r\n\r\nYes, the quick template helpers are grouped above the `IsWitnessProgram`, the move is deliberate.\r\n\r\n> test the new helper method in a simpler way, now that we don't have to use Solver\r\n\r\nI don't actually mind keeping both the solver and the new helpers - it's even better to make sure they're synchronized. Added both to each case.",
      "created_at": "2025-08-07T21:55:16Z",
      "updated_at": "2025-08-07T22:33:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2261517398",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261517398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1229,
      "original_line": 1229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261570975",
      "pull_request_review_id": 3098836449,
      "id": 2261570975,
      "node_id": "PRRC_kwDOABII586GzNWf",
      "diff_hunk": "@@ -131,9 +131,9 @@ unsigned int GetP2SHSigOpCount(const CTransaction& tx, const CCoinsViewCache& in\n     {\n         const Coin& coin = inputs.AccessCoin(tx.vin[i].prevout);\n         assert(!coin.IsSpent());\n-        const CTxOut &prevout = coin.out;\n-        if (prevout.scriptPubKey.IsPayToScriptHash())\n-            nSigOps += prevout.scriptPubKey.GetSigOpCount(tx.vin[i].scriptSig);\n+        if (coin.out.scriptPubKey.IsPayToScriptHash()) {\n+            nSigOps += CountP2SHSigOps(tx.vin[i].scriptSig);\n+        }",
      "path": "src/consensus/tx_verify.cpp",
      "position": null,
      "original_position": 9,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "6bf5dce801e0da9d372d42d2c0650c283ec787f5",
      "in_reply_to_id": 2260854463,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If you say you find it more readable, I don't mind - changed",
      "created_at": "2025-08-07T22:23:01Z",
      "updated_at": "2025-08-07T22:33:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2261570975",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261570975"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": 134,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 136,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261571418",
      "pull_request_review_id": 3098836449,
      "id": 2261571418,
      "node_id": "PRRC_kwDOABII586GzNda",
      "diff_hunk": "@@ -612,6 +606,15 @@ class CScriptID : public BaseHash<uint160>\n     explicit CScriptID(const uint160& in) : BaseHash(in) {}\n };\n \n+/**\n+ * Count the number of signature operations (sigops) in a P2SH scriptSig.\n+ *\n+ * If the scriptSig contains a SegWit redeem script (i.e., a P2SH-P2WPKH or P2SH-P2WSH script),\n+ * this function counts only the non-SegWit sigops.\n+ * To count SegWit sigops in such cases, use `CountWitnessSigOps`.\n+ */\n+unsigned int CountP2SHSigOps(const CScript& scriptSig);",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 24,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "37c1d8fc8db2f1ddd6ddf4d8fccbd13bbc9c9935",
      "in_reply_to_id": 2254092329,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not after the fact, but that the commited code contained the added comments already explaining - not important, it's done :)",
      "created_at": "2025-08-07T22:23:30Z",
      "updated_at": "2025-08-07T22:33:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2261571418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261571418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 680,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261573911",
      "pull_request_review_id": 3098836449,
      "id": 2261573911,
      "node_id": "PRRC_kwDOABII586GzOEX",
      "diff_hunk": "@@ -592,6 +593,13 @@ class CScript : public CScriptBase\n                (*this)[1] == WITNESS_V1_TAPROOT_SIZE;\n     }\n \n+    bool IsCompressedPayToPubKey() const noexcept",
      "path": "src/script/script.h",
      "position": 126,
      "original_position": 12,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "017f58821fe857a2bb7ac14f2b00b349936391d8",
      "in_reply_to_id": 2254732750,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-08-07T22:25:52Z",
      "updated_at": "2025-08-07T22:33:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2261573911",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261573911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 608,
      "original_line": 608,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261577984",
      "pull_request_review_id": 3098836449,
      "id": 2261577984,
      "node_id": "PRRC_kwDOABII586GzPEA",
      "diff_hunk": "@@ -612,6 +606,15 @@ class CScriptID : public BaseHash<uint160>\n     explicit CScriptID(const uint160& in) : BaseHash(in) {}\n };\n \n+/**\n+ * Count the number of signature operations (sigops) in a P2SH scriptSig.\n+ *\n+ * If the scriptSig contains a SegWit redeem script (i.e., a P2SH-P2WPKH or P2SH-P2WSH script),\n+ * this function counts only the non-SegWit sigops.\n+ * To count SegWit sigops in such cases, use `CountWitnessSigOps`.\n+ */\n+unsigned int CountP2SHSigOps(const CScript& scriptSig);",
      "path": "src/script/script.h",
      "position": null,
      "original_position": 24,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "37c1d8fc8db2f1ddd6ddf4d8fccbd13bbc9c9935",
      "in_reply_to_id": 2254641829,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-08-07T22:29:14Z",
      "updated_at": "2025-08-07T22:33:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2261577984",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261577984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 680,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261578300",
      "pull_request_review_id": 3098836449,
      "id": 2261578300,
      "node_id": "PRRC_kwDOABII586GzPI8",
      "diff_hunk": "@@ -592,6 +593,13 @@ class CScript : public CScriptBase\n                (*this)[1] == WITNESS_V1_TAPROOT_SIZE;\n     }\n \n+    bool IsCompressedPayToPubKey() const noexcept",
      "path": "src/script/script.h",
      "position": 126,
      "original_position": 12,
      "commit_id": "54c2a4cb47959a109580c45dc835949819436f8f",
      "original_commit_id": "017f58821fe857a2bb7ac14f2b00b349936391d8",
      "in_reply_to_id": 2254732750,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, done",
      "created_at": "2025-08-07T22:29:32Z",
      "updated_at": "2025-08-07T22:33:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32729#discussion_r2261578300",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2261578300"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32729"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 608,
      "original_line": 608,
      "side": "RIGHT"
    }
  ]
}