{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988",
    "id": 2095252001,
    "node_id": "PR_kwDOABII58584wIh",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30988",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30988.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30988.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/bcf1254e91782a33b5a1db542f3758831e0bfe2e",
    "number": 30988,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Split CConnman",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Currently `CConnman` is a mixture of:\r\n* low level socket handling, e.g. send, recv, poll, bind, listen, connect, and\r\n* higher level logic that is specific to the Bitcoin P2P protocol, e.g. V1/V2 transport, choosing which address to connect to, if we manage to connect mark the address good in `AddrMan`, maintaining the number of inbound and outbound connections, banning of peers, interacting with `PeerManager`.\r\n\r\n---\r\n\r\nThis PR splits the socket handling into a new class which makes the code more modular and reusable. Having more modular and reusable code is a good thing on its own, even if the code is not reused. Stratum V2 and libevent-less RPC/HTTP server could benefit from this, but it makes sense on its own, even without those projects.\r\n\r\n---\r\n\r\nThe socket operations are driven by the new class `SockMan` which informs the higher level via provided methods when e.g. new data arrives on the socket or a new connection is accepted. For this, `SockMan` provides some non-virtual methods to start it rolling and then it calls pure virtual methods which are implemented by the higher level (e.g. `CConnman`) on certain events, for example \"got this new data on this node's socket\".\r\n\r\nThe public interface of `SockMan` is:\r\n\r\n```cpp\r\n/**\r\n * A socket manager class which handles socket operations.\r\n * To use this class, inherit from it and implement the pure virtual methods.\r\n * Handled operations:\r\n * - binding and listening on sockets\r\n * - starting of necessary threads to process socket operations\r\n * - accepting incoming connections\r\n * - making outbound connections\r\n * - closing connections\r\n * - waiting for IO readiness on sockets and doing send/recv accordingly\r\n */\r\nclass SockMan\r\n{\r\npublic:\r\n\r\n    //\r\n    // Non-virtual functions, to be reused by children classes.\r\n    //\r\n\r\n    /**\r\n     * Bind to a new address:port, start listening and add the listen socket to `m_listen`.\r\n     * Should be called before `StartSocketsThreads()`.\r\n     * @param[in] to Where to bind.\r\n     * @param[out] errmsg Error string if an error occurs.\r\n     * @retval true Success.\r\n     * @retval false Failure, `strError` will be set.\r\n     */\r\n    bool BindAndStartListening(const CService& to, bilingual_str& errmsg);\r\n\r\n    /**\r\n     * Start the necessary threads for sockets IO.\r\n     */\r\n    void StartSocketsThreads(const Options& options);\r\n\r\n    /**\r\n     * Join (wait for) the threads started by `StartSocketsThreads()` to exit.\r\n     */\r\n    void JoinSocketsThreads();\r\n\r\n    /**\r\n     * Make an outbound connection, save the socket internally and return a newly generated node id.\r\n     * @param[in] to The address to connect to, either as CService or a host as string and port as\r\n     * an integer, if the later is used, then `proxy` must be valid.\r\n     * @param[in] is_important If true, then log failures with higher severity.\r\n     * @param[in] proxy Proxy to connect through if `proxy.IsValid()` is true.\r\n     * @param[out] proxy_failed If `proxy` is valid and the connection failed because of the\r\n     * proxy, then it will be set to true.\r\n     * @param[out] me If the connection was successful then this is set to the address on the\r\n     * local side of the socket.\r\n     * @return Newly generated node id, or std::nullopt if the operation fails.\r\n     */\r\n    std::optional<NodeId> ConnectAndMakeNodeId(const std::variant<CService, StringHostIntPort>& to,\r\n                                               bool is_important,\r\n                                               const Proxy& proxy,\r\n                                               bool& proxy_failed,\r\n                                               CService& me);\r\n\r\n    /**\r\n     * Disconnect a given peer by closing its socket and release resources occupied by it.\r\n     * @return Whether the peer existed and its socket was closed by this call.\r\n     */\r\n    bool CloseConnection(NodeId node_id);\r\n\r\n    /**\r\n     * Try to send some data to the given node.\r\n     * @param[in] node_id Identifier of the node to send to.\r\n     * @param[in] data The data to send, it might happen that only a prefix of this is sent.\r\n     * @param[in] will_send_more Used as an optimization if the caller knows that they will\r\n     * be sending more data soon after this call.\r\n     * @param[out] errmsg If <0 is returned then this will contain a human readable message\r\n     * explaining the error.\r\n     * @retval >=0 The number of bytes actually sent.\r\n     * @retval <0 A permanent error has occurred.\r\n     */\r\n    ssize_t SendBytes(NodeId node_id,\r\n                      Span<const unsigned char> data,\r\n                      bool will_send_more,\r\n                      std::string& errmsg) const;\r\n\r\n    /**\r\n     * Close all sockets.\r\n     */\r\n    void CloseSockets();\r\n\r\n    //\r\n    // Pure virtual functions must be implemented by children classes.\r\n    //\r\n\r\n    /**\r\n     * Be notified when a new connection has been accepted.\r\n     * @param[in] node_id Id of the newly accepted connection.\r\n     * @param[in] me The address and port at our side of the connection.\r\n     * @param[in] them The address and port at the peer's side of the connection.\r\n     * @retval true The new connection was accepted at the higher level.\r\n     * @retval false The connection was refused at the higher level, so the\r\n     * associated socket and node_id should be discarded by `SockMan`.\r\n     */\r\n    virtual bool EventNewConnectionAccepted(NodeId node_id,\r\n                                            const CService& me,\r\n                                            const CService& them) = 0;\r\n\r\n    /**\r\n     * Called when the socket is ready to send data and `ShouldTryToSend()` has\r\n     * returned true. This is where the higher level code serializes its messages\r\n     * and calls `SockMan::SendBytes()`.\r\n     * @param[in] node_id Id of the node whose socket is ready to send.\r\n     * @param[out] cancel_recv Should always be set upon return and if it is true,\r\n     * then the next attempt to receive data from that node will be omitted.\r\n     */\r\n    virtual void EventReadyToSend(NodeId node_id, bool& cancel_recv) = 0;\r\n\r\n    /**\r\n     * Called when new data has been received.\r\n     * @param[in] node_id Node for which the data arrived.\r\n     * @param[in] data Data buffer.\r\n     * @param[in] n Number of bytes in `data`.\r\n     */\r\n    virtual void EventGotData(NodeId node_id, const uint8_t* data, size_t n) = 0;\r\n\r\n    /**\r\n     * Called when the remote peer has sent an EOF on the socket. This is a graceful\r\n     * close of their writing side, we can still send and they will receive, if it\r\n     * makes sense at the application level.\r\n     * @param[in] node_id Node whose socket got EOF.\r\n     */\r\n    virtual void EventGotEOF(NodeId node_id) = 0;\r\n\r\n    /**\r\n     * Called when we get an irrecoverable error trying to read from a socket.\r\n     * @param[in] node_id Node whose socket got an error.\r\n     * @param[in] errmsg Message describing the error.\r\n     */\r\n    virtual void EventGotPermanentReadError(NodeId node_id, const std::string& errmsg) = 0;\r\n\r\n    //\r\n    // Non-pure virtual functions can be overridden by children classes or left\r\n    // alone to use the default implementation from SockMan.\r\n    //\r\n\r\n    /**\r\n     * SockMan would only call EventReadyToSend() if this returns true.\r\n     * Can be used to temporary pause sends for a node.\r\n     * The implementation in SockMan always returns true.\r\n     * @param[in] node_id Node for which to confirm or cancel a call to EventReadyToSend().\r\n     */\r\n    virtual bool ShouldTryToSend(NodeId node_id) const;\r\n\r\n    /**\r\n     * SockMan would only call Recv() on a node's socket if this returns true.\r\n     * Can be used to temporary pause receives for a node.\r\n     * The implementation in SockMan always returns true.\r\n     * @param[in] node_id Node for which to confirm or cancel a receive.\r\n     */\r\n    virtual bool ShouldTryToRecv(NodeId node_id) const;\r\n\r\n    /**\r\n     * SockMan has completed the current send+recv iteration for a node.\r\n     * It will do another send+recv for this node after processing all other nodes.\r\n     * Can be used to execute periodic tasks for a given node.\r\n     * The implementation in SockMan does nothing.\r\n     * @param[in] node_id Node for which send+recv has been done.\r\n     */\r\n    virtual void EventIOLoopCompletedForNode(NodeId node_id);\r\n\r\n    /**\r\n     * SockMan has completed send+recv for all nodes.\r\n     * Can be used to execute periodic tasks for all nodes.\r\n     * The implementation in SockMan does nothing.\r\n     */\r\n    virtual void EventIOLoopCompletedForAllPeers();\r\n\r\n    /**\r\n     * Be notified of a change in the state of listening for incoming I2P connections.\r\n     * The default behavior, implemented by `SockMan`, is to ignore this event.\r\n     * @param[in] addr Our listening address.\r\n     * @param[in] success If true then the listen succeeded and we are now\r\n     * listening for incoming I2P connections at `addr`. If false then the\r\n     * call failed and now we are not listening (even if this was invoked\r\n     * before with `true`).\r\n     */\r\n    virtual void EventI2PListen(const CService& addr, bool success);\r\n};\r\n```\r\n\r\nResolves: https://github.com/bitcoin/bitcoin/issues/30694\r\n\r\n---\r\n\r\nReview hint: this PR moves some code around, so reviewers may find this helpful: `git show --color-moved --color-moved-ws=allow-indentation-change`.",
    "labels": [],
    "created_at": "2024-09-27T07:57:10Z",
    "updated_at": "2025-01-15T13:59:48Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "c41da07b24af25fc70dcc9f42ffd01abb70b4859",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "vasild:sockman",
      "ref": "sockman",
      "sha": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 120608826,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA2MDg4MjY=",
        "name": "bitcoin",
        "full_name": "vasild/bitcoin",
        "owner": {
          "login": "vasild",
          "id": 266751,
          "node_id": "MDQ6VXNlcjI2Njc1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vasild",
          "html_url": "https://github.com/vasild",
          "followers_url": "https://api.github.com/users/vasild/followers",
          "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
          "organizations_url": "https://api.github.com/users/vasild/orgs",
          "repos_url": "https://api.github.com/users/vasild/repos",
          "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vasild/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/vasild/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vasild/bitcoin",
        "archive_url": "https://api.github.com/repos/vasild/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vasild/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vasild/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vasild/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vasild/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vasild/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vasild/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vasild/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vasild/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vasild/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vasild/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vasild/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vasild/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vasild/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vasild/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vasild/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vasild/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vasild/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vasild/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vasild/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vasild/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vasild/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vasild/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vasild/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vasild/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vasild/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vasild/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vasild/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vasild/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vasild/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vasild/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vasild/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vasild/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vasild/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vasild/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vasild/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vasild/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vasild/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vasild/bitcoin/hooks",
        "svn_url": "https://github.com/vasild/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 7,
        "watchers_count": 7,
        "size": 249851,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-15T08:21:25Z",
        "created_at": "2018-02-07T11:52:47Z",
        "updated_at": "2025-01-15T07:15:43Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "35bf426e02210c1bbb04926f4ca2e0285fbfcd11",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36535,
        "stargazers_count": 81421,
        "watchers_count": 81421,
        "size": 274215,
        "default_branch": "master",
        "open_issues_count": 696,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-14T21:06:46Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-01-15T13:51:22Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 1364,
    "deletions": 729,
    "changed_files": 19,
    "commits": 17,
    "review_comments": 44,
    "comments": 19
  },
  "events": [
    {
      "event": "commented",
      "id": 2378648531,
      "node_id": "IC_kwDOABII586Nx0vT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2378648531",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T07:57:13Z",
      "updated_at": "2024-12-20T23:41:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/30988.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [tdb3](https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2336026243) |\n| Stale ACK | [pinheadmz](https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2373476515) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31519](https://github.com/bitcoin/bitcoin/pull/31519) (refactor: Use std::span over Span by maflcko)\n* [#31022](https://github.com/bitcoin/bitcoin/pull/31022) (test: Add mockable steady clock, tests for PCP and NATPMP implementations by laanwj)\n* [#31014](https://github.com/bitcoin/bitcoin/pull/31014) (net: Use GetAdaptersAddresses to get local addresses on Windows by laanwj)\n* [#30951](https://github.com/bitcoin/bitcoin/pull/30951) (net: option to disallow v1 connection on ipv4 and ipv6 peers by stratospher)\n* [#30381](https://github.com/bitcoin/bitcoin/pull/30381) ([WIP] net: return result from addnode RPC by willcl-ark)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo over LogPrintf [WIP, NOMERGE, DRAFT] by maflcko)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n* [#28584](https://github.com/bitcoin/bitcoin/pull/28584) (Fuzz: extend CConnman tests by vasild)\n* [#28521](https://github.com/bitcoin/bitcoin/pull/28521) (net, net_processing: additional and consistent disconnect logging by Sjors)\n* [#28463](https://github.com/bitcoin/bitcoin/pull/28463) (p2p: Increase inbound capacity for block-relay only connections by mzumsande)\n* [#25832](https://github.com/bitcoin/bitcoin/pull/25832) (tracing: network connection tracepoints by 0xB10C)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2378648531",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "labeled",
      "id": 14428004914,
      "node_id": "LE_lADOABII586YIJemzwAAAANb-eIy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14428004914",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T09:09:45Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2379079961,
      "node_id": "IC_kwDOABII586NzeEZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2379079961",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T11:41:28Z",
      "updated_at": "2024-09-27T11:41:48Z",
      "author_association": "MEMBER",
      "body": "Nice! I'll try to use this for `Sv2Connman` in https://github.com/Sjors/bitcoin/pull/50 and will let you know if anything is missing.\r\n\r\nCan you put `sockman.h` in `libbitcoin_common` instead of `libbitcoin_node`? For the Template Provider I'm trying to prevent a circular dependency on the node. This should do the trick: https://github.com/bitcoin/bitcoin/commit/4dd51b2924860bf10466da080ea4ff7bed1a3e3f",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2379079961",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "reviewed",
      "id": 2333138089,
      "node_id": "PRR_kwDOABII586LENyp",
      "url": null,
      "actor": null,
      "commit_id": "03f6cc2b4a76cafd278b9ab92bd915d3946212a9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2333138089",
      "submitted_at": "2024-09-27T11:51:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14432633095,
      "node_id": "HRFPE_lADOABII586YIJemzwAAAANcQIEH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14432633095",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "created_at": "2024-09-27T15:05:31Z"
    },
    {
      "event": "commented",
      "id": 2379495804,
      "node_id": "IC_kwDOABII586N1Dl8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2379495804",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T15:07:28Z",
      "updated_at": "2024-09-27T15:07:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "`03f6cc2b4a...70c2f13f83`: fix CI failure, and address suggestions\r\n\r\n> Can you put sockman.h in libbitcoin_common\r\n\r\nDone.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2379495804",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "unlabeled",
      "id": 14433585567,
      "node_id": "UNLE_lADOABII586YIJemzwAAAANcTwmf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14433585567",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T16:23:34Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2379691000,
      "node_id": "IC_kwDOABII586N1zP4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2379691000",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-27T16:51:49Z",
      "updated_at": "2024-09-27T16:52:05Z",
      "author_association": "MEMBER",
      "body": "Here's an initial sketch of making `Sv2Connman` a subclass of `SockMan`. The test gets through the handshake but fails later on, so I'll need to study it a bit more closely.\r\n\r\nhttps://github.com/Sjors/bitcoin/pull/64",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2379691000",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "labeled",
      "id": 14443182181,
      "node_id": "LE_lADOABII586YIJemzwAAAANc4Xhl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14443182181",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-29T01:02:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 14445040755,
      "node_id": "UNLE_lADOABII586YIJemzwAAAANc_dRz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14445040755",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-29T11:27:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2336026243,
      "node_id": "PRR_kwDOABII586LPO6D",
      "url": null,
      "actor": null,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2336026243",
      "submitted_at": "2024-09-29T22:05:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "commented",
      "id": 2383223911,
      "node_id": "IC_kwDOABII586ODRxn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2383223911",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T13:38:34Z",
      "updated_at": "2024-09-30T13:38:34Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nThis looks great and the API in the header looks easy, thanks.\r\n\r\nI'm in the process of cleaning up my HTTP branch for a pull request and then I can start reviewing this and rebasing on top. \r\n\r\nOne element of libevent I'm not immediately seeing here is timed events. Really the only thing HTTP needs it for is `walletpassphrase` which calls `RPCRunLater()` which interacts with `HTTPRPCTimerInterface()`. I don't think Conman has a specific mechanism for this because timed things are attached directly to nodes like `m_last_getheaders_timestamp` etc. The current `HTTPRPCTimerInterface` uses libevent `event_new()`  and `evtimer_add()`, I accomplish this with a map of timestamps and callback functions in my event loop: https://github.com/pinheadmz/bitcoin/commit/42b7240378ffc4890ab4ba1453623e5986ea2a71",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2383223911",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "commented",
      "id": 2383313791,
      "node_id": "IC_kwDOABII586ODnt_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2383313791",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-30T14:07:19Z",
      "updated_at": "2024-09-30T14:07:19Z",
      "author_association": "MEMBER",
      "body": "> I accomplish this with a map of timestamps and callback functions in my event loop\r\n\r\nI wonder why the existing scheduler can't be used for re-locking the wallet? I know there is https://github.com/bitcoin/bitcoin/issues/18488 and https://github.com/bitcoin/bitcoin/issues/14289, but the thread is already filled with random stuff such as `BerkeleyDatabase::PeriodicFlush()`, and relocking the wallet seems(?) fast (I haven't benchmarked), so should be fine to put in there as well, at least from that perspective?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2383313791",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "commented",
      "id": 2391022009,
      "node_id": "IC_kwDOABII586OhBm5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2391022009",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-03T10:07:55Z",
      "updated_at": "2024-10-03T10:16:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "@pinheadmz, I think that the functionality of \"execute this code after some time\", is not much related to the sockets handling and better be implemented at some higher level, not inside `SockMan`. Maybe the scheduler, like @maflcko suggested, or in the `EventIOLoopCompletedForAllPeers()` method which will be called periodically by `SockMan`:\r\n\r\n```cpp\r\n    /**\r\n     * SockMan has completed send+recv for all nodes.\r\n     * Can be used to execute periodic tasks for all nodes.\r\n     * The implementation in SockMan does nothing.\r\n     */\r\n    virtual void EventIOLoopCompletedForAllPeers();\r\n```\r\n\r\nEdit: I guess `TriggerEvents()` from https://github.com/pinheadmz/bitcoin/commit/42b7240378ffc4890ab4ba1453623e5986ea2a71 can be called from `EventIOLoopCompletedForAllPeers()` or from the scheduler.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2391022009",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "mentioned",
      "id": 14501959506,
      "node_id": "MEE_lADOABII586YIJemzwAAAANgYldS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14501959506",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-03T10:07:57Z"
    },
    {
      "event": "subscribed",
      "id": 14501959523,
      "node_id": "SE_lADOABII586YIJemzwAAAANgYldj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14501959523",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-03T10:07:57Z"
    },
    {
      "event": "mentioned",
      "id": 14501959538,
      "node_id": "MEE_lADOABII586YIJemzwAAAANgYldy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14501959538",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-03T10:07:57Z"
    },
    {
      "event": "subscribed",
      "id": 14501959552,
      "node_id": "SE_lADOABII586YIJemzwAAAANgYleA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14501959552",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-03T10:07:57Z"
    },
    {
      "event": "commented",
      "id": 2393768768,
      "node_id": "IC_kwDOABII586OrgNA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2393768768",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-04T13:54:41Z",
      "updated_at": "2024-10-04T13:56:44Z",
      "author_association": "MEMBER",
      "body": "@vasild if you rebase past #31011, tidy might point out that `sockman.cpp.o depends on i2p.cpp`. So you probably need to either move `i2p.cpp` to common as well, or remove the dependency.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2393768768",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "mentioned",
      "id": 14519676585,
      "node_id": "MEE_lADOABII586YIJemzwAAAANhcK6p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14519676585",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-04T13:54:43Z"
    },
    {
      "event": "subscribed",
      "id": 14519676599,
      "node_id": "SE_lADOABII586YIJemzwAAAANhcK63",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14519676599",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-04T13:54:43Z"
    },
    {
      "event": "reviewed",
      "id": 2349481835,
      "node_id": "PRR_kwDOABII586MCj9r",
      "url": null,
      "actor": null,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "Jacksonearl2468",
        "id": 180059160,
        "node_id": "U_kgDOCrt8GA",
        "avatar_url": "https://avatars.githubusercontent.com/u/180059160?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jacksonearl2468",
        "html_url": "https://github.com/Jacksonearl2468",
        "followers_url": "https://api.github.com/users/Jacksonearl2468/followers",
        "following_url": "https://api.github.com/users/Jacksonearl2468/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Jacksonearl2468/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Jacksonearl2468/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Jacksonearl2468/subscriptions",
        "organizations_url": "https://api.github.com/users/Jacksonearl2468/orgs",
        "repos_url": "https://api.github.com/users/Jacksonearl2468/repos",
        "events_url": "https://api.github.com/users/Jacksonearl2468/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Jacksonearl2468/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2349481835",
      "submitted_at": "2024-10-05T04:02:01Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "labeled",
      "id": 14537194486,
      "node_id": "LE_lADOABII586YIJemzwAAAANie_v2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14537194486",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-07T09:27:40Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2372105727,
      "node_id": "PRR_kwDOABII586NY3X_",
      "url": null,
      "actor": null,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2372105727",
      "submitted_at": "2024-10-16T11:15:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "reviewed",
      "id": 2373476515,
      "node_id": "PRR_kwDOABII586NeGCj",
      "url": null,
      "actor": null,
      "commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 70c2f13f83a5cc740330d0b4af9cbd74515be6b2\r\n\r\nBuilt and ran tests on macos/arm as well as debian/x86.\r\n\r\nSynced to signet with this build on a debian server, then synced from that node locally using the macos build.\r\n\r\nI left a lot of comments below but most are for myself to track during rebases, indicate to the maintainers the depth that I'm actually reviewing, and also some notes for myself -- I'll be rebaing my non-libevent http server on this banch and consuming the new SockMan.\r\n\r\nI have a working branch with my own sock handler for http, so I was able to compare that work to the code in this PR to follow along.\r\n\r\nThere are two areas I am not entirely clear on that I will review more closely in the coming weeks which is I2P stuff, and reviewing all the mutex stuff.\r\n\r\n\r\n<details><summary>Show Signature</summary>\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA256\r\n\r\nACK 70c2f13f83a5cc740330d0b4af9cbd74515be6b2\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQIzBAEBCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmcSeTIACgkQ5+KYS2KJ\r\nyTp/1A//ZzhksZzWlBbV6rcfIXnUVQS0SIgmY7sZCN8AN0RoiN4ECALWyrXz9Rdg\r\nfONCWiQSTyxE5u2TnFo7os+o0Z+3ybxApufAx/OzqHaJwR8d5wnZPHU/uFTPYm/z\r\nqArPT3SHQgKb1sftt8S5ve7j37RW7IbshiJ+6bq8+DNMY1Ep1DX4BBzZgwbzx2ek\r\nqMcRFQkOkTbJg3/yOT1Vz361qCPLmbKjvbRyjYgYYG7oxtdwb5r/ezeagSCWKDJo\r\nYx/DJ2cwZ3uMWDvfnhNJOeql4MhOLZcU5hKyGGTRT3B5ER7ELNye5+Sz+pv0cJuP\r\nR+zfoxAfYV3opqB/ewTD1sM+gtFZFUiLNHigPgKFmK5GerLguXUqY+vgQ/4VIEpg\r\nXD2tHOCwwDULsekVLZ+hXJPSTBDmZAlHmJvcCBQgzLkjCMvrlmxJR8KpKg3lDgKM\r\nGwFcYoIWubyFKgRCAQL6vc1qFnGc7PJ1TWJLoKxpjXeyE6igHquSK0KE3flhCJ97\r\nCpWhZflrHwcaomSf9bDYsSaNvMN2MiFUzC4lbmLRWTzeOCS9oMFRMcIayQ+psUqC\r\n0gmbZzi+Qcf32gCNYvhxYwKqTeAlKih9x+vurTuK8831AZoUYwusetGaTsklwvOn\r\nbDpgEGoqFPdPIB8yHAiFBwQPcGmn7tVmTbVhck59B3HvdS/wOr4=\r\n=rnjt\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\npinheadmz's public key is [on keybase](https://keybase.io/pinheadmz/pgp_keys.asc?fingerprint=e61773cd6e01040e2f1bd78ce7e2984b6289c93a)\r\n</details>\r\n",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2373476515",
      "submitted_at": "2024-10-18T15:14:27Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "review_requested",
      "id": 14722788692,
      "node_id": "RRE_lADOABII586YIJemzwAAAANti-1U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14722788692",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-18T15:14:31Z",
      "requested_reviewer": {
        "login": "tdb3",
        "id": 106488469,
        "node_id": "U_kgDOBljilQ",
        "avatar_url": "https://avatars.githubusercontent.com/u/106488469?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tdb3",
        "html_url": "https://github.com/tdb3",
        "followers_url": "https://api.github.com/users/tdb3/followers",
        "following_url": "https://api.github.com/users/tdb3/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/tdb3/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/tdb3/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/tdb3/subscriptions",
        "organizations_url": "https://api.github.com/users/tdb3/orgs",
        "repos_url": "https://api.github.com/users/tdb3/repos",
        "events_url": "https://api.github.com/users/tdb3/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/tdb3/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "subscribed",
      "id": 14728527368,
      "node_id": "SE_lADOABII586YIJemzwAAAANt434I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14728527368",
      "actor": {
        "login": "0xB10C",
        "id": 19157360,
        "node_id": "MDQ6VXNlcjE5MTU3MzYw",
        "avatar_url": "https://avatars.githubusercontent.com/u/19157360?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/0xB10C",
        "html_url": "https://github.com/0xB10C",
        "followers_url": "https://api.github.com/users/0xB10C/followers",
        "following_url": "https://api.github.com/users/0xB10C/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/0xB10C/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/0xB10C/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
        "organizations_url": "https://api.github.com/users/0xB10C/orgs",
        "repos_url": "https://api.github.com/users/0xB10C/repos",
        "events_url": "https://api.github.com/users/0xB10C/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/0xB10C/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-19T00:27:08Z"
    },
    {
      "event": "commented",
      "id": 2426964142,
      "node_id": "IC_kwDOABII586QqIiu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2426964142",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T15:09:15Z",
      "updated_at": "2024-10-21T15:09:15Z",
      "author_association": "MEMBER",
      "body": "cc @theuni any takes?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2426964142",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "mentioned",
      "id": 14766693192,
      "node_id": "MEE_lADOABII586YIJemzwAAAANwKdtI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14766693192",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T15:09:17Z"
    },
    {
      "event": "subscribed",
      "id": 14766693210,
      "node_id": "SE_lADOABII586YIJemzwAAAANwKdta",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14766693210",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-21T15:09:17Z"
    },
    {
      "event": "labeled",
      "id": 14967071246,
      "node_id": "LE_lADOABII586YIJemzwAAAAN8G2IO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14967071246",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-28T17:52:52Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2476925664,
      "node_id": "IC_kwDOABII586TouLg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2476925664",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T16:47:02Z",
      "updated_at": "2024-11-14T16:50:12Z",
      "author_association": "MEMBER",
      "body": "This needs a rebase. Otherwise it's non-trivial for me to keep https://github.com/Sjors/bitcoin/pull/67 rebased.\r\n\r\nConflicts:\r\n* https://github.com/bitcoin/bitcoin/pull/30937",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2476925664",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15301694425,
      "node_id": "HRFPE_lADOABII586YIJemzwAAAAOQDVPZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15301694425",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c4f51c7f61e6c4e291025e450f6dd97c2b939b56",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/c4f51c7f61e6c4e291025e450f6dd97c2b939b56",
      "created_at": "2024-11-14T16:55:15Z"
    },
    {
      "event": "commented",
      "id": 2476951015,
      "node_id": "IC_kwDOABII586To0Xn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2476951015",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T16:58:07Z",
      "updated_at": "2024-11-14T16:58:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "`70c2f13f83...c4f51c7f61`: rebase due to conflicts, next I will look at @pinheadmz feedback above and implement changes from coredev discussions:\r\n\r\n* Store the node id -> CNode map in SockMan (then the SockMan class becomes templated)\r\n* SockMan <-> Connman calls based on CNode, not node id\r\n* Make the virtual methods in SockMan private, since they are called only from SockMan\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2476951015",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "mentioned",
      "id": 15301729382,
      "node_id": "MEE_lADOABII586YIJemzwAAAAOQDdxm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15301729382",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T16:58:09Z"
    },
    {
      "event": "subscribed",
      "id": 15301729394,
      "node_id": "SE_lADOABII586YIJemzwAAAAOQDdxy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15301729394",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T16:58:09Z"
    },
    {
      "event": "unlabeled",
      "id": 15302192423,
      "node_id": "UNLE_lADOABII586YIJemzwAAAAOQFO0n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15302192423",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T17:33:38Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 15303158917,
      "node_id": "UNLE_lADOABII586YIJemzwAAAAOQI6yF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15303158917",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-14T18:59:43Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15349386514,
      "node_id": "HRFPE_lADOABII586YIJemzwAAAAOS5Q0S",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15349386514",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2b0103705fefddff6b880b9eb72fb590740a7300",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/2b0103705fefddff6b880b9eb72fb590740a7300",
      "created_at": "2024-11-19T13:15:12Z"
    },
    {
      "event": "commented",
      "id": 2485715952,
      "node_id": "IC_kwDOABII586UKQPw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2485715952",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-19T13:28:24Z",
      "updated_at": "2024-11-19T13:28:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "`c4f51c7f61...2b0103705f`: rebase and make the virtual methods of `SockMan` private since they are only used by `SockMan`.\r\n\r\nAbout storing the `CNode` in `SockMan` (which would be templated like `SockMan<CNode>`) and making the communication between `SockMan` and the higher class (e.g. `CConnman`) based on `CNode` instead of node id: this is an excellent idea that will make the code more straight-forward and the higher classes simpler. However it would make this PR larger. I will leave it off for now. There is some specific `CNode` ref-counting in `CConnman` and the code around deleting a node is a bit complicated, so it would require further non-trivial changes to move that to `SockMan`.\r\n\r\nI think in general, in the long term, independently of this PR, it would be good to get rid of the manual `CNode` ref-counting and tap `std::shared_ptr` to do that for us. In other words, to revive https://github.com/bitcoin/bitcoin/pull/28222.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2485715952",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15510275499,
      "node_id": "HRFPE_lADOABII586YIJemzwAAAAOcfAWr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15510275499",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "645f625e29b36321bcba8db5758b0428b8ebd80f",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/645f625e29b36321bcba8db5758b0428b8ebd80f",
      "created_at": "2024-12-03T13:59:28Z"
    },
    {
      "event": "commented",
      "id": 2514637932,
      "node_id": "IC_kwDOABII586V4lRs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2514637932",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T13:59:38Z",
      "updated_at": "2024-12-03T13:59:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "`2b0103705f...645f625e29`: rebase and address suggestions",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2514637932",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "labeled",
      "id": 15560141466,
      "node_id": "LE_lADOABII586YIJemzwAAAAOfdOqa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15560141466",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T13:05:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2493471520,
      "node_id": "PRR_kwDOABII586Un1sg",
      "url": null,
      "actor": null,
      "commit_id": "645f625e29b36321bcba8db5758b0428b8ebd80f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2493471520",
      "submitted_at": "2024-12-10T20:12:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "commented",
      "id": 2552624259,
      "node_id": "IC_kwDOABII586YJfSD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2552624259",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-19T02:07:54Z",
      "updated_at": "2024-12-19T02:57:51Z",
      "author_association": "MEMBER",
      "body": "Looks like the merge conflict is with #31072 as well as #31223.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2552624259",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15712190038,
      "node_id": "HRFPE_lADOABII586YIJemzwAAAAOohP5W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15712190038",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b8b042626ea65c2c2b355a6de69cb7c98bd04de3",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/b8b042626ea65c2c2b355a6de69cb7c98bd04de3",
      "created_at": "2024-12-19T05:48:11Z"
    },
    {
      "event": "commented",
      "id": 2552841151,
      "node_id": "IC_kwDOABII586YKUO_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2552841151",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-19T05:48:57Z",
      "updated_at": "2024-12-19T05:48:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "`645f625e29...b8b042626e`: rebase due to conflicts and use `std::span` instead of `Span` in new code: https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1878764170",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2552841151",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "unlabeled",
      "id": 15712672155,
      "node_id": "UNLE_lADOABII586YIJemzwAAAAOojFmb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15712672155",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-19T06:54:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 15773413276,
      "node_id": "LE_lADOABII586YIJemzwAAAAOsKy-c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15773413276",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-27T15:06:51Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI2OWQxOTliN2ZkOTg2NzdjOGNlMDhmN2Y3ZTNlYTAxNTViZmU1MTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b69d199b7fd98677c8ce08f7f7e3ea0155bfe512",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b69d199b7fd98677c8ce08f7f7e3ea0155bfe512",
      "tree": {
        "sha": "b55039580df1010a984ea358b86d72b8c764915c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b55039580df1010a984ea358b86d72b8c764915c"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b55039580df1010a984ea358b86d72b8c764915c\nparent 35bf426e02210c1bbb04926f4ca2e0285fbfcd11\nauthor Vasil Dimov <vd@FreeBSD.org> 1724411497 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736776844 +0100\n\nnet: reduce CAddress usage to CService or CNetAddr\n\n* `CConnman::CalculateKeyedNetGroup()` needs `CNetAddr`, not `CAddress`,\n  thus change its argument.\n\n* Both callers of `CConnman::CreateNodeFromAcceptedSocket()` create a\n  dummy `CAddress` from `CService`, so use `CService` instead.\n\n* `GetBindAddress()` only needs to return `CAddress`.\n\n* `CNode::addrBind` does not need to be `CAddress`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeFHIwACgkQVN8G9ktV\ny79hKB//UT7MIUMzpd0luwR4Im/tda8VlBQSNyO/Hk6+QP5yX2iqMixY6PvMEqIK\nwiawEd9jsv5iflRlv3fW/FmbcCT6DU1j2YGbDMKsnqtNgM8f2l7xUX/EvYhC8nxh\nNsX1ixCNbfBUJL8AHACdn/lv23PQ29jlIkr8T6QlVMNSzcBuw6p/NrxJE6yJYqb9\nmBO2jcQR5vQHRdn8ONWR64ptt6QDkjqwjfbZtzEckLHer4rJltK4V1aTi1HFXFhq\nCt7FCsRb5S0hP3AyCnRm7jfB+HEy+MXSv+eKh7SQ99psqrkJXHamupk8/M7SSuYR\nBiBRflhfo788A6N8qFkyB6nXvCC4u1DBKgrlG/gWZR/wLDi7RDN0bfP3C5qjZG9n\nZucWGREcBV5UFZ4r37i2k9sWwB1gUF2ZSV2BI6sy2R22v7039AJbBGnuF/VX3EkC\n7oIh/Yh5bV6JjJWGOMKkMQu1VIm99WGkhtfncoCVe/0hjV+vK6YvMRDPRzdMy5eI\njdZ72NnccypiviA8IsWe5jK2q9sU5El6+iR3sc4Y0sLhQSMKfo9Q2TQ0RQQUaCc7\nWOxAaS40XXQ6XAdq/h+5d9ijc6c3vzaRqHjW5ZtGFGHScDjensyEg0F0j4OdDApk\nohqbqgzbNO1xZi7PK6iFKvNhlGbIkITm47pQa03VNIITWYvmS8fqKF1h+tqbuoKK\n5QdDa9Us/YWW/IsHTfapfHUtsDOqbk/i5UCrmDwYTBzG97qhkkzbj5t3dwpzBG5u\nY+pA/WekHExOevlLeaUXcDJbUD98XwZFqoIYsMw3CEevN7M65nmYbPNTfwmDYE16\nW78AezkJQBAmaz6/ct423r93xoH5ARq0BzCHm+AGFkX8/UCnkvjSghqkEALd++b3\ns5VlWZ/KfMXiG+lfczSiYAx2Tlxqy3DkfdxrI2vF7hHcygsUb9dMTpASqDpBHQoy\nAzpzaedsNffIvT7DyZt+2CnoKarxwtSlh1HXcv1wVXA8Tu4nFx1NhLbEHjpBbgvU\naLG8eeMjcSyH0U4RwD20uRP1Ifmpc2lvvqObObIfaUV/L8b5pvZB3ro6XW8NXMUi\n5asEZy24lho3BbgBl/EkJZeQWmSwr0iFHp2ZS8epblRrUS3tFFTFZ2EbebRfYVv4\nuV5fUl2VQybTv6szQMcNt56Y5UTQF3i4WqHOr4nYdjIMZhAklCZZqpfUfFTFPE1G\n41ybbzP81M9gGi9Sk2VJ0BTWqm5JiNNfs2dnQpoidTqF5IQhSdYQNzax0qhnBSlF\nSb7jQbJWxvlTFFWrw26smq6WyRVjWeUzY1NA12nO5Msk7BDMuf4/efFwyu7eXSEC\nDY935CR1QOABR4TZb3uyGNulSOjMSA==\n=DrPl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35bf426e02210c1bbb04926f4ca2e0285fbfcd11",
          "sha": "35bf426e02210c1bbb04926f4ca2e0285fbfcd11",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/35bf426e02210c1bbb04926f4ca2e0285fbfcd11"
        }
      ],
      "message": "net: reduce CAddress usage to CService or CNetAddr\n\n* `CConnman::CalculateKeyedNetGroup()` needs `CNetAddr`, not `CAddress`,\n  thus change its argument.\n\n* Both callers of `CConnman::CreateNodeFromAcceptedSocket()` create a\n  dummy `CAddress` from `CService`, so use `CService` instead.\n\n* `GetBindAddress()` only needs to return `CAddress`.\n\n* `CNode::addrBind` does not need to be `CAddress`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-13T14:00:44Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-08-23T11:11:37Z"
      },
      "sha": "b69d199b7fd98677c8ce08f7f7e3ea0155bfe512"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15906018639,
      "node_id": "HRFPE_lADOABII586YIJemzwAAAAO0EpVP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15906018639",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f71f1a346c71909750e5e7d11305dd0a1c24373c",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/f71f1a346c71909750e5e7d11305dd0a1c24373c",
      "created_at": "2025-01-13T14:31:15Z"
    },
    {
      "event": "commented",
      "id": 2587261731,
      "node_id": "IC_kwDOABII586aNnsj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2587261731",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-13T14:31:34Z",
      "updated_at": "2025-01-13T14:31:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "`b8b042626e...f71f1a346c`: rebase due to conflicts",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2587261731",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "unlabeled",
      "id": 15906562198,
      "node_id": "UNLE_lADOABII586YIJemzwAAAAO0GuCW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15906562198",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-13T14:58:27Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2590020502,
      "node_id": "IC_kwDOABII586aYJOW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2590020502",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-14T14:09:51Z",
      "updated_at": "2025-01-14T14:09:51Z",
      "author_association": "MEMBER",
      "body": "I found myself confused by e8b589ef45d5c94c47209fb952e8b05d631a9c47 dropping `AddSocketPermissionFlags`. Can you move that to a separate (earlier?) commit?",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2590020502",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "reviewed",
      "id": 2550005361,
      "node_id": "PRR_kwDOABII586X_f5x",
      "url": null,
      "actor": null,
      "commit_id": "f71f1a346c71909750e5e7d11305dd0a1c24373c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2550005361",
      "submitted_at": "2025-01-14T15:31:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZkODE4MjAyMTRlNjk1YmEyMjhhOTU0NTA2Mzk3YzNkNzgxZmUzZmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd81820214e695ba228a954506397c3d781fe3fe",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fd81820214e695ba228a954506397c3d781fe3fe",
      "tree": {
        "sha": "a66125c8fa5821b78d53ca4bb7289a38a10a824b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a66125c8fa5821b78d53ca4bb7289a38a10a824b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a66125c8fa5821b78d53ca4bb7289a38a10a824b\nparent b69d199b7fd98677c8ce08f7f7e3ea0155bfe512\nauthor Vasil Dimov <vd@FreeBSD.org> 1736871862 +0100\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736871862 +0100\n\nnet: separate the listening socket from the permissions\n\nThey were coupled in `struct ListenSocket`, but the socket belongs to\nthe lower level transport protocol, whereas the permissions are specific\nto the higher Bitcoin P2P protocol.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGkE8ACgkQVN8G9ktV\ny7/8Gx/+OTX5gmK0/btGuh5DTVbKNvmSoy5ezHy55fMTO9i6CdBsjfWjaGQCXurr\nMMu8c3/Uu7ENw63c+6T+m5l5hoMQDhIicLw5W4fbMmr0mGHz57i7hX+tI7XL444p\nWqVDVknKY8nc9QSMGnWbvfkjTjz1GOSKed/TD0K9GBSlZ319yRxLOXMXiiMHvzJ4\nA24J+J7ulY8FkaMdN7hBbAiWTktr5ndk2gluFib+1XURSR/9dn11hTLelz9xnWC7\nP45TKXM22TrMDU8bfM1oO9O1C+TTnr8BAPtNHhQCm1a073wO4oKCV6mz6IFIuBh5\nuiaO/nd5YfDQ5XMg166QQem+Ppvc59xsL98/1XHR5icmBz77rTPsxAZqwW/5fDv7\n9auIs2LMotO1DqAPzIm44n6kVcVFNRDedIQvgcpYQfa+S0W0BzDhoEFSrhbLg6k2\nfLWpS55oCuERD728qzgHrwIe0yzO0EsdGJ/IDXnPFrNKZVe/Fks+3elA0dun/R0t\nys75wU6/imOGCBgz1ssJfHqm/5Ywn5GrANEKXii6UyvRCVShgFST3rO7yyz6PcoR\noFn/OSpl1nygDk9NvKOO3La1gvfImejc6XJCiCzlgcpwiOvi3RaBl7AYOKGPwg+0\nuYaRJk8V7nNQYfzFJxfTTMxR+0BnMNw80eqfL9jC121QqpwQFdm4o0I6JavNMqwS\nSqz+7v5WpU40fi3MT633a7CW4odwYkQYHlgn9Qg9xSC4S9hrV95SWc9s1yXYSUWl\ny85l17IxSGWoMSOEbJOHOjB9cj98fmR+y4YsmV4WWUWpXNllzQGkjyaP1/xKX0by\n6T8g2yIxyjt99WY/opFvBJIngRHsI0ExIFHQA7k9k/ILfDGrC+dVX0lF1fDzI2Z/\nZ5Tv6HMYPKIasXLqKwtP3WaT8RInUiol9yS2T2rB7hkY8IMmLKG199Q0L2DE9FCn\n6PtMXloElHdjdtP8Wt6vgC983iTA4hTmDI/2qy21UEqapUYQqjBH+8qaeS2Z6pDp\n+a+2fN4/hAEWjVrdwUfr53zRH+2Hvs9oJhIcReDPuTMuno89/myHzLN+6IZR4n4b\nb5NpznbqenbdQSGSuLLD0B5AhincX3Sg5OW1wU2uZqBIuewT/yOHH+JZncX48l4T\nRn9kLSPVCAhPE1HJc4Ya+AbW1c2pwsBvM9gJZEApxtr1eYJrv21y4WGef+k8K4iS\nRWjNEfzPLX2RNfwW0C0d6RohTQyqjDthS2AQZIVfDuPheP+MKviXv7JQ91I4cBnA\nkJcvdLiljEkyRyFjpx23x8bEKESNIy/CUVgYrXHR3a1LpxMG0Oyr+UF+8YTVGp9B\n1GH8RoU9jJtgsSTeV8EhZ1putIWiUA==\n=XP/V\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b69d199b7fd98677c8ce08f7f7e3ea0155bfe512",
          "sha": "b69d199b7fd98677c8ce08f7f7e3ea0155bfe512",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b69d199b7fd98677c8ce08f7f7e3ea0155bfe512"
        }
      ],
      "message": "net: separate the listening socket from the permissions\n\nThey were coupled in `struct ListenSocket`, but the socket belongs to\nthe lower level transport protocol, whereas the permissions are specific\nto the higher Bitcoin P2P protocol.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T16:24:22Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T16:24:22Z"
      },
      "sha": "fd81820214e695ba228a954506397c3d781fe3fe"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU1ZDM2ZWVhMDE1ZWZjMzFhYTM4ZDU0MGFmNGNmMzljOWUyZTQ2YjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5d36eea015efc31aa38d540af4cf39c9e2e46b0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e5d36eea015efc31aa38d540af4cf39c9e2e46b0",
      "tree": {
        "sha": "38fb519691c6516ef3bc75781ce562de9bd54930",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/38fb519691c6516ef3bc75781ce562de9bd54930"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 38fb519691c6516ef3bc75781ce562de9bd54930\nparent fd81820214e695ba228a954506397c3d781fe3fe\nauthor Vasil Dimov <vd@FreeBSD.org> 1724420200 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736872350 +0100\n\nnet: split CConnman::BindListenPort() off CConnman\n\nIntroduce a new low-level socket managing class `SockMan`\nand move the `CConnman::BindListenPort()` method to it.\n\nAlso, separate the listening socket from the permissions -\nthey were coupled in `struct ListenSocket`, but the socket\nis protocol agnostic, whereas the permissions are specific\nto the application of the Bitcoin P2P protocol.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGkaAACgkQVN8G9ktV\ny7/9Hh/9GptiK3cALOkZhVKrEA3iCrrBUt63TWFlMx/8DPWJyXM5O/SsD5FE7Zw6\nUcvVD44bw3otplhku1CygL+9BlI+VdGiNHXA5WB7jAPW73OrNZpza6i/0e1GIP6d\n5oS3PMnsNocWN3KFlDPeuHkUxLDlQYYWiZJPEjMBXKikJnDoUPXjKxwOaqwmfPHp\nKAjsJlkV5T9ZyfcYsFwKRIr7j/CNnafgmJDaMYiGshZAhxzlkIGt6Qf9vJQlFzLW\nZ97mhPUWOl5twq70fJAIl3i1z26RgKlwdxXeYWdbyzR1Ob0a2GfAhsRJKO5SdLfQ\nJni3g/i1IYlMFnCQu3Yw11cMdo90bMhBFTjil7d0Mwb9DKTU/fz9Y/4i3JuTblMX\nHjh9hWicfmnHrl3myBC9yt8zN/jliPJDyGYSL2L4rFJbBTVGSUhpwA3qb4nESJIe\nYZSa/vLFa/e6VSxzk2KnvrciFqJwmB2/lleTXfSgMFZiZsy97YJ4yjLtsnooPXTT\nrwjlmx4bDjEqCxJa1ySDixJ/xRR8xJmiMX5NONvgS/XpfwRch9DTov9sgnPuTThG\nrI3c713dF2N6Y6kLsDxFKsCr2fsyWfDk+voQzzw5BeqBvd4dGa9fLc6w0FjlNXkz\n99omMD7Zh53BXN/7TJKDdFHlmHGatPy793tIHIJrG8kWurt63N5oFzCLhZ5m0abh\n0UIObycGAfyV8i4fW4Rr3UR7M+md6mGauUoWaZd5b9g1MmtOsyiUNZb/+0eBKMCZ\no1yDixIsJfTZsaUvi/F8aCkEW0loARxj+J3NnkILtgS7RUCYpb/sV6Fe+p2u/d+4\nA/bdQWXYmFFSN+QHBVJp7zP9jO3hoGvBGujB2Xq6v+VCbFRTaFBVwJwiMhVmoqp7\n/iH9v+nKC3ic/feMncrqafQNfyYDDAvfMWcOaf4x3k2rcU3ZoHafV5rqzeVUQ83m\ngvqLuvx1/BmI9Pzflk7wN+tGjvLzpZctcKPgHbEAUIE8dxq3mwgujDv44q0QMAdC\nAqYowjb2Bv8t34wAyvCRzfzH8ltIeh9XCqN+SDDptWgEcMeWyAPcpLVoeG1n5F9Y\nz66M0fWWrwHMM4iwV3FXNhJM9MCx02BMLaAX/9PZ5p26Bj1BrgG60z92GMF+BbYu\n4YEEkx5Cdgt4MsXQju78ousCkvpURk8TTuKkIvzR4PvB31qRTB4IcA+Q4i4sgelt\nlTKNH6ZzC5Hom9CZc+RFQ4ses/AVCbErQA8BqI8vDOMRYahvGhyGFCNKBtnTk/FG\nkwdQvcXUi5mhLZ0np1BBEocoeO0bXTxx1LfIWUQxdjIY5n3EAK4XeYqbDSF0u1Ie\nhKYbiarDHyAT+2QINrVYcnIIMLeIdQ==\n=HX3Y\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd81820214e695ba228a954506397c3d781fe3fe",
          "sha": "fd81820214e695ba228a954506397c3d781fe3fe",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fd81820214e695ba228a954506397c3d781fe3fe"
        }
      ],
      "message": "net: split CConnman::BindListenPort() off CConnman\n\nIntroduce a new low-level socket managing class `SockMan`\nand move the `CConnman::BindListenPort()` method to it.\n\nAlso, separate the listening socket from the permissions -\nthey were coupled in `struct ListenSocket`, but the socket\nis protocol agnostic, whereas the permissions are specific\nto the application of the Bitcoin P2P protocol.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T16:32:30Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-08-23T13:36:40Z"
      },
      "sha": "e5d36eea015efc31aa38d540af4cf39c9e2e46b0"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15926435616,
      "node_id": "HRFPE_lADOABII586YIJemzwAAAAO1Sh8g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15926435616",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d83ff66fd74654e67b56d11a7d8e92d38a4bd17a",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/d83ff66fd74654e67b56d11a7d8e92d38a4bd17a",
      "created_at": "2025-01-14T16:39:29Z"
    },
    {
      "event": "commented",
      "id": 2590500946,
      "node_id": "IC_kwDOABII586aZ-hS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2590500946",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-14T16:40:02Z",
      "updated_at": "2025-01-14T16:40:02Z",
      "author_association": "CONTRIBUTOR",
      "body": "`f71f1a346c...d83ff66fd7`:\r\n\r\n> ... dropping `AddSocketPermissionFlags`. Can you move that to a separate (earlier?) commit?\r\n\r\nDone.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2590500946",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "labeled",
      "id": 15927367862,
      "node_id": "LE_lADOABII586YIJemzwAAAAO1WFi2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15927367862",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-14T17:33:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI3MTc1NTBiNThmNzc5MDY4MjM2MmJjOTVmNjAwNDdjOGE5OTQ3Nzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b717550b58f7790682362bc95f60047c8a994779",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b717550b58f7790682362bc95f60047c8a994779",
      "tree": {
        "sha": "1a0e811830f75451a696728f13281163f8fffa5d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a0e811830f75451a696728f13281163f8fffa5d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 1a0e811830f75451a696728f13281163f8fffa5d\nparent e5d36eea015efc31aa38d540af4cf39c9e2e46b0\nauthor Vasil Dimov <vd@FreeBSD.org> 1726578346 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876213 +0100\n\nstyle: modernize the style of SockMan::BindListenPort()\n\nIt was copied verbatim from `CConnman::BindListenPort()` in the previous\ncommit. Modernize its variables and style and log the error messages\nfrom the caller.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoLYACgkQVN8G9ktV\ny7/Jox/9EDP635UVUGbJsX07mCtzML4mG5PQsvDIPVWIX/PrGxNjWaX6hXvv27HK\n7vLgCjN38DBSaOMyYXPr8xB8LsUHt5RZbU3q653cIPDQMy19QlClKYks+Z24xri8\nBMt3/M3pat9ad18AISkHyKFmbw2cLfk4GJDfWtM4o/D0kuGBP9aAbWAZ8pw08TQ4\nChog4ILgSx2BNAbWbhPt6ymg3+JKEpa5deP3JUhBF0BdGx4k34t+aLwnt4Ommh9d\nTLviiWcN99OjJUz6Z9N0vodIGmlkUf8ev3a8eVJEhVx4aJwiw2PZYxvGrR81JYj7\nvpMMkr04CtPqivCOklSZJFpUH3x5l0N13k1W5h9qYQTQikrQW/+ocM/UL9D/zULo\nEcfJiA9GeNk5cDgWL5026U42d9pXQyOGiNVQPp/uD7SzLAbwVbLxi1U5P2UccMTt\n5g1CZy7mG0rzImW1n09Env8jEMiwnbz840uFxX0/KuMTLwgaSByC6H6GvraSXM3s\nzseTg0QzOoBbIdIT203iKKLYx6pSTpybV27B+BBmxFnYyLu42ZYYZlAj9cF1eMxo\nWQaaVzUQDM4+O2m2XOGAI0DUjVKKvs5evzXajxk5tYC4kXlavrjKyjhaNitFe0Vd\ndgLoBxNeKULmPdJnxnoyozEC/7zqVKoDWkgCpNulbVW8SnXsvSBFjcs7G71AdVhl\nFJe6tlXN9wo7xyXOxVIbEboxRxynnn45KPvM4Y+d/QqDBxTGbR7eU/QzQZGQAXk+\ngczT9sGMi0FJ2yn1uz2PQrMxpKRlUtdKXLYq3Vah1AUZPMdTZtiARbqusi4UPCGE\nF1ioCz6yks05vUgY6x+mWbeoy6eDtvwye1/P15MzPqdujzXmH3pv3MC5OVFffHXe\nMrzCmRfLDsmgkVYgaNXSBtOn8fi+T5se3lTAsWicsPcfdJdrwDMd0E0+bblYmSgm\nHn8eTruspKpIYaPnrbFojFDRYs59+XFFitcYuONeF4nrnKdYQQ4IhDeViBSkKiAi\n2xPWf758b0iBG9nBhQyuwYj2vrgWdxuUgBmtk32yIyyz7c2PrvWxGIy8MWES9Y/w\n6Z9lyO/pkK5c4b2EG0jUREcp1/i98UCilCgFKEvPaPG91S/3UKb/bU3H0ZZ2H5xl\nOUW35RI3WdRXZ531A40/CZmSFjnM2YB0NdAlxEpYITG7phFIvt2rJnoCrYV/j40X\n5BVDQb/sVyggXMOgqtb0pHox9r1Z9qttD2WQKOZz6BzC/dMV0De2mz3l9KqUYNtT\n1a3MHmCGsAwvvwUSZRg/dUVH4u0R/5iFiIvmJIhkOav/fIdCM4oZf+o1tBwOpVQJ\nGDVrBJ6pVdpNIcJR9ASY9dXDFa7eUg==\n=WhoK\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5d36eea015efc31aa38d540af4cf39c9e2e46b0",
          "sha": "e5d36eea015efc31aa38d540af4cf39c9e2e46b0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e5d36eea015efc31aa38d540af4cf39c9e2e46b0"
        }
      ],
      "message": "style: modernize the style of SockMan::BindListenPort()\n\nIt was copied verbatim from `CConnman::BindListenPort()` in the previous\ncommit. Modernize its variables and style and log the error messages\nfrom the caller.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:36:53Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-17T13:05:46Z"
      },
      "sha": "b717550b58f7790682362bc95f60047c8a994779"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAyNDFiMDRjZjQwNmQ0ODJhYmZhYzNmZGRmYWQ5YTljMjg3MjVmMzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0241b04cf406d482abfac3fddfad9a9c28725f32",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0241b04cf406d482abfac3fddfad9a9c28725f32",
      "tree": {
        "sha": "6974ecac8fc0be60a994eb4104b7a37f6f55d334",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6974ecac8fc0be60a994eb4104b7a37f6f55d334"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6974ecac8fc0be60a994eb4104b7a37f6f55d334\nparent b717550b58f7790682362bc95f60047c8a994779\nauthor Vasil Dimov <vd@FreeBSD.org> 1724670893 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876214 +0100\n\nnet: split CConnman::AcceptConnection() off CConnman\n\nMove the `CConnman::AcceptConnection()` method to `SockMan` and split\nparts of it:\n* the flip-to-CJDNS part: to just after the `AcceptConnection()` call\n* the permissions part: at the start of `CreateNodeFromAcceptedSocket()`\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoLYACgkQVN8G9ktV\ny7/ACx//ZY2uP4hiMqAwZGajmWCQnflMxC+fKAmXNRP0yMQWf06v8GplPTDACWy/\ncQ0YpdoVAunPZTW2UchbUTKXnOaeOr26aE5Boi6LbjB9dSp6EjjNz3VNuVmRq3Nk\nOqUwg04p3DYJlU5IrnpKL+/RDMFhx1CQr3N5+dZa5HZohBXh47HXODOQNOVm5fSl\nftLeOdbcrHM8zLBw/LfSx6aWWGE2lH29DQfIqujaTDTtV3LXSzKUcUY6Jou/IbXE\nsnt8wxuAf4ovty3oifUgRtx17fJjsLmfzg6g5q6NNzp0qUsXN5EbSFdic+ylQQxM\niqHpbI5qQUQAjgt1QEsk+6U5Q79XyoU7+NCcxmVGuc9iDeMzeFzhoxvFJ8f0YihS\n8OWK8+Vzzgq6OZ/5+QOnjekeF0xmRp1JbjsRLrv0eHOKDby+sH3H+7BF95PxeI9N\nvVIso4CVjUSe/XCoPUtPwdJyhayBi05igKdI1cvbaZRbQzzMsIAgLVqSamfiKBR9\nzLZ7fN/XYaIwISB/0iWSurPduhNBhvtGcKtkuNJHPZ/ZKLxGN/jtuudi/ozsM+Cw\nGxF89QlOoWTCN/naJIpW+MJ1jdBRj/etCAkO5jmEw1zY/2w15qPbAGsBepqf4GJ0\nusOpQNESLKdBBZRdCMcgvO67pIGDwzM9oY/9QqBNO3Ch8aClQ2g8Jt/9Rkj+GJic\n8uDyyZTzU8GTWUqB4imVcme51/BdeQH+lh3fyrSakNHCfKgNdraeto6ru2WkpRKg\nS5ZkI81FDf863LMgHYHiOCrSa6OVRsicK2LlMipevJXPmXszTFCUD5d2PCiUVNYE\nan2bJ21cT+Fs2c8p3IUm4Ajmj7Jt7Lnb7aBBuNyajOj7W73cmg1v1fC7HDMTYWEX\nDUVhHo/SRrHDzSn2pX1+Tf0y0NDWMyKmZJakndPeQfzpkJkSuVJQScdyRnqokMG8\ny/BtCqDpUm1bJ25YQLJLxoVy4IJTTReM3aE7Xx8nuxF65xk2uwU+SfQk4yrUdLyr\nPvZDJOjf/EqM8G/HAr62SFbyiXIKEUFMMXbFbySApl+Zx4hSbrCXVpDRUzHO60j2\n01qinkqWqNgsrEM6p4qd+E8hLwS/HXXziDiKDRfz42qHQuvOcLhyMxDzcVFYb7Oa\nm60NvdE80FOKnA38TD97hIzSzty0AOvf4YOTaYG+p+p0MD3SW1NijW4HSWTW6bxW\n60fQGyx9mz24zcpAYHQCvvdOvv0eN5LOdUkXd++I8VRLHVuS+Awh1bWHA9fsWeNJ\nnXpKOldkDcY/XGeCDwAfCJwoJRG4xFwU/x3SZKYa43sBCYFLLabIP1UNKX2E/mbE\n9Hxs4tNUhl1wEAjzoGKQFKjE9hxMrA==\n=y1Uv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b717550b58f7790682362bc95f60047c8a994779",
          "sha": "b717550b58f7790682362bc95f60047c8a994779",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b717550b58f7790682362bc95f60047c8a994779"
        }
      ],
      "message": "net: split CConnman::AcceptConnection() off CConnman\n\nMove the `CConnman::AcceptConnection()` method to `SockMan` and split\nparts of it:\n* the flip-to-CJDNS part: to just after the `AcceptConnection()` call\n* the permissions part: at the start of `CreateNodeFromAcceptedSocket()`",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:36:54Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-08-26T11:14:53Z"
      },
      "sha": "0241b04cf406d482abfac3fddfad9a9c28725f32"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg2NThmODMyYmE1NTAyZTM4NThmNGQ4NjM1ODNiODI3MDQ0OWUwNjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8658f832ba5502e3858f4d863583b8270449e063",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8658f832ba5502e3858f4d863583b8270449e063",
      "tree": {
        "sha": "93da76d746ca5635c50447d13abaebe5bc428d81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93da76d746ca5635c50447d13abaebe5bc428d81"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 93da76d746ca5635c50447d13abaebe5bc428d81\nparent 0241b04cf406d482abfac3fddfad9a9c28725f32\nauthor Vasil Dimov <vd@FreeBSD.org> 1726586947 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876215 +0100\n\nstyle: modernize the style of SockMan::AcceptConnection()\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoLcACgkQVN8G9ktV\ny78+TB/+NRYTX+K6j7g1SgDmFxfaE0mtXn3DfyVjxrwybZPa9IneRiNIVsxzd4LX\nbVyu9nbfvh4cmyUsn9pVnMedmQ5Twxim8nKwuCssCm9VRNET3XQQ+XTPUp9VIZeQ\ngRblVLpL5l3rb69mtKBb2adjb01CCi6wjMsVp+ONf2CLjaTp6KdRIBpKtWBQsWmw\nPGyhzXiVHfvQjHa1iY7zUrVg1bQw3XHSYzSU/OMz0RabWiGrkYSr83Rzk3nviQ7m\nOn7tnjoVY0XSiAa9alQ0c1AJa110zlmkAIicLVq+TnmizpD568wGHixe2wOrM16b\niD6y7Msq9AtUTVhyGUzgoV2zdPdsNtAsCj45sZiALPeq9G7eOTv/DoH3l2JyX5LS\nQVlszwghVYIGDiWKC6M90MO133J2PrPg+HZw5onjuo+Y5/VqdnSnwGQGDqSICO72\nTj5mWx9v9gZLBM5FDxe0xsTNcJvbk8FI5n9EsxAadTPFVY3ZxL1GM9tA3lyY+v81\nOeVdzJlv29N72Vk6iilSxK5QWfLIf6A4HS8O4/vulBK8xsqz4xbmjxfyAo0XIR0V\nrldjOuaU7kkS7JrgvF54Oubr9ZzImehpo4k2B37Ba0dQlnt4MJlcsqoFKI2281hk\nxoyX8q9k/NoomFfalypAfdv6JEFMYsJ6CLw1+6aJBtlly/jPmMqpExeYfyx/U2pQ\nfeiLrd0QAVJzY8vfZj28KxbAp7cw393mkmJATwE7f7rrABJqGVXTNPCsrLeYdN8X\nVQS8X6CCU5jZZKA/JtPDM4kaK5VpHa1YyVaoLknyRm4jCKV2IowN3abnrkFuYdbb\ncl0Qii7F1Nq2wnrqnVjtzwP/qh5A9vF15yUvphPA1S0ytFjEcEJDH62fH9qkkNDz\n2twfAdPJ9MBkp9ciLMT3c1VV9TXudyKFpjPfJa66+SdO0PKUXJhPdCwYD4HDLrUT\nc2NJHzeCvlGyIM+CdDGYMYzP5f+T1hhE2vuaHUUoKRXAXQ++gA7iz+dFdnGtjfZw\nX2RCtfmRlJbqwFZz5ibHCSXo3qJ+QV/L7Dyc0pWfOJ6UWknN7/+MHLS7YK06AcYI\nTjag3Ua9pK4/0tMsN1Uc7jhgiXvMME9iGhIft6C2iY7kG9mxA9wYdjJxfj+Ty/Kh\nKMzn5qJ40eseiYlok9U9eo4w5wxc7iJLLOplwTDXSHYCiX3JyHTQxcL+kACCGpUr\nW9aAAmTxpmg60T7N8H/zM+14wnuCuk2GYNZDStA7xzske1PHkCp5fY7WjIZmVivS\npBahzMq+eWmDfeIPH3pgohfsbyC0FsJRGDzAweHhDFD4QOlCNJBwSHsJZNy4zXRH\nH+/uXRhmlvzanartby/sxsQY6YmXSA==\n=BhK5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0241b04cf406d482abfac3fddfad9a9c28725f32",
          "sha": "0241b04cf406d482abfac3fddfad9a9c28725f32",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0241b04cf406d482abfac3fddfad9a9c28725f32"
        }
      ],
      "message": "style: modernize the style of SockMan::AcceptConnection()",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:36:55Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-17T15:29:07Z"
      },
      "sha": "8658f832ba5502e3858f4d863583b8270449e063"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFiMDVlMWQ0YmE1NWE0MmJhNzQwMjZiNjhmYTRlNjE2Yjk3M2UwNmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b05e1d4ba55a42ba74026b68fa4e616b973e06d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1b05e1d4ba55a42ba74026b68fa4e616b973e06d",
      "tree": {
        "sha": "31d30f95e99ba8cba4dcd3b80c916228d76fad59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31d30f95e99ba8cba4dcd3b80c916228d76fad59"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 31d30f95e99ba8cba4dcd3b80c916228d76fad59\nparent 8658f832ba5502e3858f4d863583b8270449e063\nauthor Vasil Dimov <vd@FreeBSD.org> 1724750724 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876215 +0100\n\nnet: move the generation of ids for new nodes from CConnman to SockMan\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoLgACgkQVN8G9ktV\ny78doyAAjPZ+jqqaqkhGId9/zNTi1iFotel/Gh014F8Ue3XEgyZ1P9dAE0kekiqN\n7ODmCw0W50MgJ4b95Mz3EinVebvPfFhInZcqvD3BA2YnuVzT8DW7dh+E6HwTYQZm\njxCtcWFjQossuWD5Jrii9EIhjCHy3rD5kaa1xyMynP0OicwLPBAk5b58m9iCyp8A\nxwalZxT3iw/MuJiV5mCaoGJ8wRFpxctTDEU3dX5qT/KnwtnSwL+OZBps+DC6aX0a\n/0M8a08pWmQXTfQ/lBc9YSrSu9DrQ0h8QtA+845Gcheb1rO+mWC1TtNuP7V+YmW8\nL7F37kEqOZTliMaAQaWiuZZqQw0yiUqZAhdVSXRDlBTC9OUhHHt5x/VyoJpoIf5G\nya26YT439AyW2jzlSpBSwpIzylcHmdP10s8jfLDOirGO6AreKqzM3wSlV+GQ91SO\nCszoVAvuiJzKvnsgGeMCiL2t1QHAWv8Sc1x6cdfH55yJQEuWH16bTd6TFJjhII8+\n8R0SDXcGuKURBHDjnY7MnFi9zyt/DXRxp/UNMmh8Xfm1XMZlng85HCpwJsR7DClF\nN2pHMu6umzfAbihY7j+vkvrFuwZ1w7qIYUxuLS9+jaHUfoTF+gDb8PJTfmBfioFl\n408AHK+9EtEmDs77K16wXUow0fC+YfgaSwaAYuOLK7Fu+chzBTPrvdJzNH1xmVDF\nVUCEw/9KhjKbL8MjjWm6h+EabCWOLn6uL/qVG6S1EnvCxspnHbZeIm3LLEAse3Xn\ny/NXcvp6pOUjdNYQMGfWlLEzVm6PGJQlIOKXH1G8Cv8FWorvrkCo5QixzfRak60Q\nWsLpqUZ1xDvqpC6oC+dANAN+hgHWe5b+Nvv4C5Mznc0ZKiAj84TqlpV/reNtNafo\niaEUTxR9IJIPF2WgqXN/kjzOKZ7z5NfRjkrELb3nrXeDqQOMoCBlbRHQlXZN0F/c\nfN6eNuoQtehNnniel39SDG6mtxuStNknLuTmtycPN0Ag+qg7FryuUkKOhD5jB2ZV\nYJZyZbaCYhnffI8EFwVKDCy7zDBpZQMF0srHfOdxQDUjdvWI0SwKjBsIoooGSdVQ\nBjSik7evd0ubXGEIqL3wRAx+NMzUouV3FqNqkOQ34l3+jfjQAFH7Oa2IppIUD/zn\nFN+5mp2w0GEVc8Et8XKlIuZaQr9JqRA0ObY/4eF+k/dyqWU1ggc3je5H5DRGAV3p\nhKFAo5YlY/Aa9mTbS9iSMHGSel0OS3yTt3Ln3irBaK2fDcEaHTatvFb+S/Mp9VEy\n+G54VVPLjqqvdhMxc7lpWTq+pEueOHNC+IgUgIgGWmq893InSaaUzut0F0sy2Wh2\nKL1QcvPBXyrvouHo1X+YdMxNvur1mw==\n=wwLb\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8658f832ba5502e3858f4d863583b8270449e063",
          "sha": "8658f832ba5502e3858f4d863583b8270449e063",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8658f832ba5502e3858f4d863583b8270449e063"
        }
      ],
      "message": "net: move the generation of ids for new nodes from CConnman to SockMan",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:36:55Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-08-27T09:25:24Z"
      },
      "sha": "1b05e1d4ba55a42ba74026b68fa4e616b973e06d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE0ZmNlZjZiMGQxZDFmYTkzOTVmOWFmMmJhZmJmM2RlNjNkMTRhYzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14fcef6b0d1d1fa9395f9af2bafbf3de63d14ac2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/14fcef6b0d1d1fa9395f9af2bafbf3de63d14ac2",
      "tree": {
        "sha": "abb1d428b496fbf8fc397da29688b770f723ba89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/abb1d428b496fbf8fc397da29688b770f723ba89"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree abb1d428b496fbf8fc397da29688b770f723ba89\nparent 1b05e1d4ba55a42ba74026b68fa4e616b973e06d\nauthor Vasil Dimov <vd@FreeBSD.org> 1724767895 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876216 +0100\n\nnet: move CConnman-specific parts away from ThreadI2PAcceptIncoming()\n\nCConnman-specific or in other words, Bitcoin P2P specific. Now\nthe `ThreadI2PAcceptIncoming()` method is protocol agnostic and\ncan be moved to `SockMan`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoLgACgkQVN8G9ktV\ny7/B8h/9E6FuRBnSYNF6r2AYHbH4hEsmdgT6AKMsHMC4+8/5rNbtiGoDsuPPg+6k\nzdjdF1K/tbce7AIps0dAISZA7LEXlgtTkp7ojLY4GpP98U/t0zc6w0v5HbJLzjI9\nbsTuNG4sBuq+up30QdXt7UjL2HQEIluDTQ8kO9m6MHrmtt/WwZ8y0P9Ujr+Jr1Oq\n2WksDrKtoaO5Lpmo2Pg9wEA3dfV9wCTx7HKJK52RMBv05mQg2OCwWImMmmEqMfGi\ndK/UR+24sk0C9uH1NVh1lmBLgLG3kNqF1c/UyDm6exhi9LFMf5glQ4Fn4wmR0USJ\nTW8Kg7T0WpBUjMOko7wzwCQegYVyhEEFREa0ICi3fVrdF5bbC2JXXxhzBfKq6X82\nddbC4Yd1Ihet5xSV1AZVF+yjn5ZVk0z+qMKS0msBM9XXqLFK86j9x0m+G08+h/00\nZUDK2g6orCEgv5Wd2jN/nSdDT4/6OBCYnb86PiL7ga5KvDU+keYWkHt+UI7iwXgD\nobOxqMjKOZYveXxpPwF/qDGRuA4ZDSNFD5M1cy3DfbMMg2y/LxX2TjmiSME+UKad\ne1zEzwVO95vhvgmTMq3BcG8dfHqHRVYdT/gPPsR6dUiGrm9bTT8eMNamNgBwCcCe\nj9Q0E4uPqG24OZq4iLMQNOnlta7KbvzOMXm8fxgI0O1j2wWUvKSUGrltK/1KY3ve\n343ToK4qjs6hraWzLms0cnFFGezS9DCrz6Mppxk4SBWhh2poCjKK+L2LvUaL5kv3\n6GEgUO5aiRjOD8PlaPETJZVoLhgDs4Oj9BIu69H/mfwtsZk9aMsKNea7tmVO7jBQ\n41Q8JuzDNd4Wi+UqFIk3j1FOYXRAx+2uCM/C0omzeZVroVufN/G2zP+rua059x5v\nELIIeUO7rpjCWYNBGEhUiS+/9+U6itk2bFtSV+SjnfBX4zTZq1AfLz+moNgh4w+U\nCqbDkVOyygGk7rk/6ZDvUKZLBVrnXVN3PMleDb4gq60prxYKr5s3SkdfPp5c0AlG\nP5qGb2VAO8dw5NOhiGFREsoiPmblb9vs+tNsy59b51Lmo0Re5cY/3F1vPxQBj/Up\nyPeiK57j2Kl5Ie/4SQCkfj7T1uB4bGi1lkQ40QUM+yb6mz/ddzU1zPpy9vWSsjWW\nqGzkQ4TsgT4IuMOb2mHo6sqK1XJYzs3hkI7FhHHfMjvolvLe9LZjywFikPkkhxVM\nzJwAy4xu4VMfes5yzYCjoRBhYyKqJo7saKNoY3oAxqOk2eaKEm9SvmVksDed7X8m\nn/60b6x6N+z3f/89GxP4iQxV4GUq92a2+agw/KPZ6Jh8zsxdFvYftb63VVvLPjEO\nYg7/PRC96epAaoSGm6iQCyFPSjMmqg==\n=shEs\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1b05e1d4ba55a42ba74026b68fa4e616b973e06d",
          "sha": "1b05e1d4ba55a42ba74026b68fa4e616b973e06d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1b05e1d4ba55a42ba74026b68fa4e616b973e06d"
        }
      ],
      "message": "net: move CConnman-specific parts away from ThreadI2PAcceptIncoming()\n\nCConnman-specific or in other words, Bitcoin P2P specific. Now\nthe `ThreadI2PAcceptIncoming()` method is protocol agnostic and\ncan be moved to `SockMan`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:36:56Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-08-27T14:11:35Z"
      },
      "sha": "14fcef6b0d1d1fa9395f9af2bafbf3de63d14ac2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxM2VjMDdlN2ZhMjYxZmExMzk0OTkyYzJiZWNjOGY3ZjZkN2FiNGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/213ec07e7fa261fa1394992c2becc8f7f6d7ab4e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/213ec07e7fa261fa1394992c2becc8f7f6d7ab4e",
      "tree": {
        "sha": "43fd0b7d9c39e2162816ffb68e221e4d111dda98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43fd0b7d9c39e2162816ffb68e221e4d111dda98"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 43fd0b7d9c39e2162816ffb68e221e4d111dda98\nparent 14fcef6b0d1d1fa9395f9af2bafbf3de63d14ac2\nauthor Vasil Dimov <vd@FreeBSD.org> 1724768611 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876216 +0100\n\nnet: move I2P-accept-incoming code from CConnman to SockMan\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoLkACgkQVN8G9ktV\ny7+Zeh//X1eIXP2Dqz5Dxumq+Fk5flxLhF5x4bbje5f5Y8SZy2D8Z0SDrVzI9nJb\nVpQd8/mS4x8yYFI+BdVoeVAQQ5RlresS4qmE3uvErmRjFiC7UPbeB3mOBskrUIgi\nIoiNiK+3btjxe9cqKyMA7E6Pga25NNizisE7paFirCA4DngipScnmqfOetQEIIXM\nPHqqmb4+j9eul43kvr1kvDKzHvZBybq+mKV+Cn7acAQdvmuCZuCfWFlSE5923fH8\nMEElrmwI6ebWQ6vt8t8pA5lhXcAN8tmZXg+a/QKwx/j3fZSSoyXv954V18rnJyqC\nseT1KKtgmFHspQZS19gUq2NTBpLIkA648d0jyKjjq+caQ9aMWIOaTR0z7FE78rXZ\nvymQ8gNP6wEgF3gQrZsEbrQDYcM4whNHWShd+TZVvopKYD8D0maLeW78KARVKger\nUs8xxrw0VZIoOKvFImf6Z0BhaDdcfSUaHLn6nnOwl8xOYsgskBgOhOABtNZhRhbM\n7+njJ894aKNNi73Kh37nKj5WjYiTv6rizQ1ropaHGfFZ12O5RIeFHepiK9uoVR42\nHjxIYB3t7JXlVKAk2H9kp5nB6aqrZS71rJ64A40Io7uS6WxtJwuYg+6d/J71bgf0\nynega4l1xjt7vT9A+TJeWa6FWdT/+4Zw6aU72XwezZ6UBFQQPq8uAPoVMpZmF6FL\nmEfJlpU+kIVguEgR0IvjEG2v97/OSAuSXLVjrzkX4hO7oVkDBVW2r6L5H+5agBI1\npOSh4E5plqQE8ukHX3Tvb2pTQfeR3jYuyHkJZRZr7+dVwcvhal2dp2ViVvxrAFs3\nqgPUC2CT0wuCClYz1RRvxmiZn9wSAuTyt71duP+YCxkhM9uWIxQQml4Iy1CpoiX6\nZVs+30fSuzwDV+cIHQDhqkSMESP3/95AoNPkOLS44Mb9csrMyA2sQqpkVPMSsVNP\nmHnVBjxQPA6Mq4YzUQcHEnSxzz+AP3Ml/2iacWQEMZMMeqvjKcnV6/21igHJ+T+r\nwyvnvDCnOSql5xIEhTe3Z+GUSdJPPt1kFHPHK483vVEsvXpbOF5FY8o8yPTun1y2\nF+ng4W3LVl9hetXaEUU/DwwPeRctbrvL4R4x/YGksLF5XFtnRuYOyNkn2s82Xa62\nkql3PaPPJ6YWaGN/rjdp80pX8+MCWqaci5CQtOeey/lkfldgqfhoEtA0Ep2335dQ\n3gEO2u7QYD5ZMtobBZ6XCTpbRrZSBoj2En1xVHb3uYnfixUo12qhjtXHrPzPKd+X\nQMYJchwLU1uiigkVgX+U51C+5x/28m7iZibji/r2Eqg/yuWDpmTBifZsOtdNoeL+\nYoYSZ29JU7TbayI4mqqAUD4S2oQABA==\n=DFNB\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14fcef6b0d1d1fa9395f9af2bafbf3de63d14ac2",
          "sha": "14fcef6b0d1d1fa9395f9af2bafbf3de63d14ac2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/14fcef6b0d1d1fa9395f9af2bafbf3de63d14ac2"
        }
      ],
      "message": "net: move I2P-accept-incoming code from CConnman to SockMan",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:36:56Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-08-27T14:23:31Z"
      },
      "sha": "213ec07e7fa261fa1394992c2becc8f7f6d7ab4e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIxYzVlMDU2MTljOGE2ZWI3MzZiYjFjNjE3MjVmNGI1ZjY2OWZmYjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21c5e05619c8a6eb736bb1c61725f4b5f669ffb4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/21c5e05619c8a6eb736bb1c61725f4b5f669ffb4",
      "tree": {
        "sha": "dfbdc447aad3bc8c4cdd1b28636508d175a6e5cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfbdc447aad3bc8c4cdd1b28636508d175a6e5cd"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree dfbdc447aad3bc8c4cdd1b28636508d175a6e5cd\nparent 213ec07e7fa261fa1394992c2becc8f7f6d7ab4e\nauthor Vasil Dimov <vd@FreeBSD.org> 1726831648 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876217 +0100\n\nnet: index nodes in CConnman by id\n\nChange `CConnman::m_nodes` from `std::vector<CNode*>` to\n`std::unordered_map<NodeId, CNode*>` because interaction\nbetween `CConnman` and `SockMan` is going to be based on\n`NodeId` and finding a node by its id would better be fast.\n\nAs a nice side effect the existent search-by-id operations in\n`CConnman::AttemptToEvictConnection()`,\n`CConnman::DisconnectNode()` and\n`CConnman::ForNode()` now become `O(1)` (were `O(number of nodes)`),\nas well as the erase in `CConnman::DisconnectNodes()`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoLkACgkQVN8G9ktV\ny78Z2R//UUIrNRyzuCtGJnpRDf7vj3dZj8hUiqAHH9/ekwNyKiOz1j2h3wO/bvBe\nDPEIqq2409DbwyNWkICB4J8qipOUcg3BpWSej6ce8MPJKoJmjaszxTj8mNeS4Cn/\n04ubld6pf53R307wkwj+P7Jx/KwwyhyYOH8Srajy4omWLGQcvl/UGzIGjbniuK7p\n48ajfXEemibJFvmW7pMRAdIPZfusRMviUqBwG/ToPNNDnQCHMoJXxx26otr2SPHI\nTYXLGc2ARJCT/y90IjLxuTgVq0apn3kC+CTiSHiZ/1fQkBdPqmWtTsyCGVg2lSvH\nuQyJg/uMcCXzeGUSRgmnoSgK6WlNRnde27CwsSNBSGmpkTMweLrZLJkWIJ0R0esT\n/GggGA2l6Thgfb4ofVEFgtJTStLwlPRi8HT3OGaGpWuT3hPbY/b11vLvqP7tIPzz\nJul9SFQdJMd2HESkkI6hfaTL5pQy0EGi5TkUDIWImAW856a6OoDRjukiucjqWIIZ\nkJG+hjpopNezcdFEx7m1BqivnhZwpVkufIU7WMPmM8jRYr42lOeQ34scYcKOwExL\nGmCexQekvkQxjWHvozZUTigLk5vTWxPTHUp8z6W6BhOG7M5cCWRrUaKQwDKkR/4h\nFW5Y/ouufZGA9CffsZJ47IRWwtQlWSQE6qVf9Z8rmcwj+a1GmoDizI2OVcdKXWDD\n2D6p9sbgC7Lo/hSsR45JIpGh2ghMYGs/8sjmqpWMc8BOmoT2fpnuEmE9nrO7SmY4\nlAtqjko0ZcJj1/Q8No6CqJn6NENSlRNyzV2gSY91sOj6Fg+49vrw04lGvWavseF+\nJ6RGjUySH3B+7UHwvkOKm8Km3bxXLymc4S1MchQBLJJ3Ho9VeOxdMsDrfU3zVkVz\n8MQ3dzikfYtP2gW4LjioFqEl4AX43pIavF9WnFmoEq+e+bw8/NXbQjBUj2a9bc8T\nQwoc77nY5HNwWdfeT/91rOgYq03YgHpBg76GIEsgnM0liPm+OYjKmlX3ScmdENSr\nt7HiC8bZhWNi3LjXKpGw1nDCz8cS7nWD1MTSLH6aWusBBC+QT4fxTJUpgyc/wc3j\nTwUd/ZQk+BdEgkGL0nneabH+Mdggq41QPAe4KXEqJsmmkeYtL24jKpgjG2SCbc7N\nC4HQPQ2N5Vtlawjn40Ilo1sWprjYJKmAcoaIXp/Ej0RKXh09G+diqea+8WFJtoJA\n5s2MPn0u/5G/PcSSrTQaEkFoFqUL/MqAp43RmJGKei0MJhuw1uqIGEbuDoF82+9V\nwNFMFDI6Fm41JpbzN4z0neN+fifgElnxVmEQU4ChIAigmGfWzYXD2NdW6UFYCNdb\nPrFOuQAZOCIYtaIqQnXGPOwi/Gza9g==\n=QOeV\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/213ec07e7fa261fa1394992c2becc8f7f6d7ab4e",
          "sha": "213ec07e7fa261fa1394992c2becc8f7f6d7ab4e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/213ec07e7fa261fa1394992c2becc8f7f6d7ab4e"
        }
      ],
      "message": "net: index nodes in CConnman by id\n\nChange `CConnman::m_nodes` from `std::vector<CNode*>` to\n`std::unordered_map<NodeId, CNode*>` because interaction\nbetween `CConnman` and `SockMan` is going to be based on\n`NodeId` and finding a node by its id would better be fast.\n\nAs a nice side effect the existent search-by-id operations in\n`CConnman::AttemptToEvictConnection()`,\n`CConnman::DisconnectNode()` and\n`CConnman::ForNode()` now become `O(1)` (were `O(number of nodes)`),\nas well as the erase in `CConnman::DisconnectNodes()`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:36:57Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-20T11:27:28Z"
      },
      "sha": "21c5e05619c8a6eb736bb1c61725f4b5f669ffb4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRjNjM5M2NiOTNjNDg1MWEzNjNiNjlmZDQ3NDY1NmNhYzFhZTNiM2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc6393cb93c4851a363b69fd474656cac1ae3b3b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/dc6393cb93c4851a363b69fd474656cac1ae3b3b",
      "tree": {
        "sha": "ab92289ee9a376807d95fffa526e99254aeefbc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab92289ee9a376807d95fffa526e99254aeefbc8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ab92289ee9a376807d95fffa526e99254aeefbc8\nparent 21c5e05619c8a6eb736bb1c61725f4b5f669ffb4\nauthor Vasil Dimov <vd@FreeBSD.org> 1726905934 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876217 +0100\n\nnet: isolate P2P specifics from GenerateWaitSockets()\n\nMove the parts of `CConnman::GenerateWaitSockets()` that are specific to\nthe Bitcoin-P2P protocol to dedicated methods:\n`ShouldTryToSend()` and `ShouldTryToRecv()`.\n\nThis brings us one step closer to moving `GenerateWaitSockets()` to the\nprotocol agnostic `SockMan` (which would call `ShouldTry...()` from\n`CConnman`).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoLoACgkQVN8G9ktV\ny7+EBiAAi3EBs2tzstz3V9g/POD7uUXKPOrCoaHHczkRtuJD++wlLarFK8NphrZe\n9Kw5L4mXNpAYy+jVuybma8ByynNYcRqaE3oe/tLo8yAm6+iglUuL421ZyxoZCVkw\n9R9OI2knJ0NnOkk/kM7IsL9eMmwM/eCVJUx7F7Hbv9HMadTsg2EjAI7peoyWTUXv\nqAVS3N6keEInpYEuGDyL6bqVZwMTfg2hIm32cqYEYzmHRu+RG0Fx5L/afE6oTM9E\nmYkeU55xccyj1auwuvcOrPUvwsGKV9vku0WOKdItwHeRueW1W3hHXPuBBDzJPCSZ\nIUOlxc8i/bEGcmEW/kbtxRfZJi3/lsWvRnaLOaqKim+1GmvPwegiinDkYAedXUax\nMRVSMBoqV7hp1fcxsgmvI9U7s2Yk2PEQXi+XyTBrJJcHQA17sfrvCg/4y997Ryfr\nQkK7khiYKRKrFJAyRa7Ia8vWydtl1+RU+qUDxCwSvtXcgTTpB2nivuzeh1UFOXtz\n+KaoOn0GF3uMzFt2ThKVFXCh5Uv5+UYknmHvA8l0kHQrmfWfwr9cQ5UUBuX8H+l2\n+3G7TtPXhakxnmBqC1QEbLt0xcCCbrYKS79g1/LI+5Y3AHH2ivfQV5O65JIf2vYL\nr2N2MXJfrh8tpGoBZ4DV8hFkyipp8Yvk2iirhTAz1PIc5+4FmP7+8HoadqQN/tDy\nn8W18fx4a1cEgCJt1SVGCPo4LbOem322wfNnhEhSStT2Qp2Igrq4sj7rlXsUi7j3\nYQ3jKv8R3lc7ZYdc8IEfHSq5fvLxtt9Gqqiqf3/tm4dilf3WsbGvuibSbHdjrR+j\nUZiBqUepUrbcnbDd9vz96VaIi6rHlTb55IQkI1F8n+zbDllZkmsj7zaUGj/uwrXk\n1MbROYscLlWPjRtRIr3418NndLMtfShIf/fYmn4VbvrpolNvGmfwh4hAJCoImzrH\nycXSk03JWa03BBcgk8CLy+3rThFVscTr8OkxEdwxiQPkKRCZyqh0OOTmIaJR41cm\nBDHADO//v92XItSQPwRuP37Cm2XxBcUmlI8eD3Yu3yxWPYDQiFV8OcU/eMGFC878\nfJtl+Qwf/aPokHQWMO0qqpX0jJNVP9mXpj/Y0tSYmaTx7A1/OmL39yqm9bAqyyzq\nM+enixDSnW37GpvhtGv3z2VxZuqH9Q2PgloSo7Uy5z7Ie91+9svzHZ/XbJcDkHoi\nDKZl+D2Ry2vmw1XY9L2cnjfhRKI58GpmSboQD+1yHOlR/7OpNXzbHxVgqhY8sehf\ntQG6uBYjnXfdsxr30V+jVc1Josg2zP2TUSN22xZGnAgUWjiS+l+aKQIoGAbNMeQf\nCJwHS1u8g4chJe0UY7165WvpXUn1GQ==\n=J5oV\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21c5e05619c8a6eb736bb1c61725f4b5f669ffb4",
          "sha": "21c5e05619c8a6eb736bb1c61725f4b5f669ffb4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/21c5e05619c8a6eb736bb1c61725f4b5f669ffb4"
        }
      ],
      "message": "net: isolate P2P specifics from GenerateWaitSockets()\n\nMove the parts of `CConnman::GenerateWaitSockets()` that are specific to\nthe Bitcoin-P2P protocol to dedicated methods:\n`ShouldTryToSend()` and `ShouldTryToRecv()`.\n\nThis brings us one step closer to moving `GenerateWaitSockets()` to the\nprotocol agnostic `SockMan` (which would call `ShouldTry...()` from\n`CConnman`).",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:36:57Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-21T08:05:34Z"
      },
      "sha": "dc6393cb93c4851a363b69fd474656cac1ae3b3b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdhNGE5MzA3NjMyYWQ5NWEzMmE1YjIzNmJhNTc1YzY4YTQ0Y2ZhNTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a4a9307632ad95a32a5b236ba575c68a44cfa57",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7a4a9307632ad95a32a5b236ba575c68a44cfa57",
      "tree": {
        "sha": "02918ffcf822e35e759e29293db281b82565eb63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02918ffcf822e35e759e29293db281b82565eb63"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 02918ffcf822e35e759e29293db281b82565eb63\nparent dc6393cb93c4851a363b69fd474656cac1ae3b3b\nauthor Vasil Dimov <vd@FreeBSD.org> 1726907513 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876218 +0100\n\nnet: isolate P2P specifics from SocketHandlerConnected() and ThreadSocketHandler()\n\nMove some parts of `CConnman::SocketHandlerConnected()` and\n`CConnman::ThreadSocketHandler()` that are specific to the Bitcoin-P2P\nprotocol to dedicated methods:\n`EventIOLoopCompletedForNode()` and `EventIOLoopCompletedForAllPeers()`.\n\nThis brings us one step closer to moving `SocketHandlerConnected()` and\n`ThreadSocketHandler()` to the protocol agnostic `SockMan` (which would\ncall `EventIOLoopCompleted...()` from `CConnman`).\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoLsACgkQVN8G9ktV\ny78RPSAAkXMNP8MZufC1TEBLU/PaWWwiI7TarYrOn6FdLVM6WeolioOWkxdWOaAN\nKOH85WtZm4tXWcOCOL9vJmcOadSQ3MjH01/rBCWihiQ13VvKwqCzW+vU/ioY7wXK\nqq77LLajWlV4LuRdH4NKJtCBf8bfJNYkDrrHlmr62Ka3j+P2lm2INY/zoz8bDbk4\nK49q4Ki54DKY0qlLnyBUFy5Md20u5hDn39Ox93dYIT7RUjY/A5D6wQuZm/Q9ydji\n4IWybRpBuQ604cn1CX/kU3EN51mDyKTAFjZbD2wXGu5NZKqRqu2Rw2K0cJYb86en\nwhhW7LN42FDsgtuqrPS4tAyVdxzcNf+wA0CBc1p/XGhJijrf8khbTrgM3r+DkqTT\nZkFuiPezwFnLXZ97hxy/+gaKjelrXpzH03JY6iwc64tBWIerGQ0OBK3twIG+rs+h\nLII5P23jaODy20sb2c89gokPY8zvZBF6B4+lwSEhR1cPRI9oWbPWMtkNkybJMjTb\nYexzJzsQYidhkmG1jDEk1JIOY+miNP8R1fHKGWklmxgem3lYM8l0o2+tVftSquP0\nbmwQ470aHdSQaoLZuNXPaKLBdCBlfSMvDgFKxZL0oEJBfGj/BQV+QD6cPYuWRqQw\nSV1wULPVf1E4qCz983vZqFPeBc1O1aZ6+tHOinldxWr8mixQyBSaFFMXANOele5/\nZbs5gB3ZFblhZvGddnDgJXQGKY0wmg9x4Mr/Hd8KYbQ73Ivkr/76EqaOq7Z+AAR4\n9lHqSviUq1fFbaZRHMRH1w/GEJJSff1qTar4bs8IJ/xSImcVAW+ZU8kW86rTvFxX\nzLFA4dNBsBbzCfy9T2uTFB9darYkgOr3iWcssz0jbVv3dkVoCxTg5YWP5Bx3QI7o\nWBLpFFAf2GNTPF/zOaaZthIrWbGFHt8OiDfuZSONyFDXYcWwbEPknc1mBZUFdblx\nGSBLYz6rd1VQdPF8ljcx4Mdr81WoELOn1jYp0i60nm20EUcDfm/Hr4r+t3Qii21w\nbs3+oqpNnQ7UEdJ7xKt2qEfftU9Elhbm7jAmwrRtMI0bSzAFAe/x4sj+t+1rhEDr\nHtZfjn3AUsDZvQVnsYO4pvGsCbmgtFSA5n+iDi5wenIaHP8FItJNxCCIfSTswnpE\nfXo+cj4yq9GMgMyxhpY3wOOl3Qrk13uK0JzFQc3H1W50NQHAC+NG0WUlxoNS2KLl\n+HAxM0rV3AjXQKH6E3qXELmeNA5SyBZAJw1on9HaUNgpAZpKvqO9Oof4zP5lWABC\nmKLRzFOfgKQ+x7+bU3oE0NrLsTEFkf/L2t8sUf/rmtPnTHS1pX79G8CIpULhRL5/\nje8JW7OFW5Ly4hMkUoToiNmgwk76aA==\n=MlPK\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dc6393cb93c4851a363b69fd474656cac1ae3b3b",
          "sha": "dc6393cb93c4851a363b69fd474656cac1ae3b3b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/dc6393cb93c4851a363b69fd474656cac1ae3b3b"
        }
      ],
      "message": "net: isolate P2P specifics from SocketHandlerConnected() and ThreadSocketHandler()\n\nMove some parts of `CConnman::SocketHandlerConnected()` and\n`CConnman::ThreadSocketHandler()` that are specific to the Bitcoin-P2P\nprotocol to dedicated methods:\n`EventIOLoopCompletedForNode()` and `EventIOLoopCompletedForAllPeers()`.\n\nThis brings us one step closer to moving `SocketHandlerConnected()` and\n`ThreadSocketHandler()` to the protocol agnostic `SockMan` (which would\ncall `EventIOLoopCompleted...()` from `CConnman`).",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:36:58Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-21T08:31:53Z"
      },
      "sha": "7a4a9307632ad95a32a5b236ba575c68a44cfa57"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVlYWU5OWQxMjI0Zjg5NzJiODk2MWNiZWEzOTdjZTlhMTQ3Y2ZlMWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5eae99d1224f8972b8961cbea397ce9a147cfe1e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5eae99d1224f8972b8961cbea397ce9a147cfe1e",
      "tree": {
        "sha": "c24b02dc73a096da2bcf688bfa09c1ca9317b9e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c24b02dc73a096da2bcf688bfa09c1ca9317b9e9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c24b02dc73a096da2bcf688bfa09c1ca9317b9e9\nparent 7a4a9307632ad95a32a5b236ba575c68a44cfa57\nauthor Vasil Dimov <vd@FreeBSD.org> 1726999902 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876219 +0100\n\nnet: isolate all remaining P2P specifics from SocketHandlerConnected()\n\nIntroduce 4 new methods for the interaction between `CConnman` and\n`SockMan`:\n\n* `EventReadyToSend()`:\n  called when there is readiness to send and do the actual sending of data.\n\n* `EventGotData()`, `EventGotEOF()`, `EventGotPermanentReadError()`:\n  called when the corresponing recv events occur.\n\nThese methods contain logic that is specific to the Bitcoin-P2P protocol\nand move it away from `CConnman::SocketHandlerConnected()` which will\nbecome a protocol agnostic method of `SockMan`.\n\nAlso, move the counting of sent bytes to `CConnman::SocketSendData()` -\nboth callers of that method called `RecordBytesSent()` just after the\ncall, so move it from the callers to inside\n`CConnman::SocketSendData()`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoLsACgkQVN8G9ktV\ny7/TCx/9H+wVz2p65AMRHESuxjhNCQ7+LgVRuDjBqnOSnEZ3fvRDhTr7Ey/P5kTU\nBAqFOCJdTA0RV2N6FlxC4EO5WmkOeY3eJEUcDL09g4swHWEg9tDohfaxuzSaMKdB\nrox6zupLdGZ8+jQwndUW5B9SXoz6KaYe1v67c6pUzseRzAb67l7PwPudYzGpWW19\n+tOr7qxpN5f6easLZJaaW4hAz7ermCUK9tgNWbmb0ytLRMBJVxJniAr+LSpw3NLj\nMatMGcuMrq3pvfzKL197/8IAG7o765OyHQt3fB2RSGiNnLP1cyB3KPjw7VCObqKz\n+KzFEdhWDwi3yK+FbyflEk2+R8ehDm1m/+n8hb+vj3kOf8ZG1QAkTikzmZdg5pU7\nTykdoW4lDfm7o9CNc/kzruiYsUgUOJDBZdkzhWJuyT61gVeiDpSjG4pCZIT/hrnI\nc/sqnVsRAqVm+uDldiEQj9Hf70wGUUUJeDW/7UdKg8ByZgPBqAuanQpQ5Vthw67Z\nNHue1K+ozywcixmHrz2VnCwkMZackvz5sn8UsQiwbUziho2Nc+N5/K/6MDmJt5bQ\nHJwHOMFBbiuWlZwC42ZW2ycY9T0J1Qz8tPKiGCvEd5+Dy8rZgTRU5kewsFp9Guli\nQTaUXfUpuY0tVR3LDQu/oIqTYrsj8E4eV7SFJCBlsnEHJtAWzCJFEXzce9RZL0f3\nmr6k7lTIdHvIiR+F/XjbIc3L1icS/yu12eGAwIT83OjwQkWhPKwelknSpX1li24R\nkQTacmJit9dD1W0+18pA6tBva4NM9zs4PbsxvEyE+rgMXhlHbY5yVXRUCcZ1qdXL\nJHh35dCri6f5vwPs33Ik3zPqq9Dre0WljUiQUrKBWd4fIuwTyk5zO5rKk/ifZcKs\nGx0EL+GJDpGpa54x6ui60kTRixdMVjXbcYwO7JIPkCMphAFmizUsYi990Z+vxeZc\nr1HMrfn7aR3oiDTD/8KWmia6+x0MBhd8IpAtXaDqz4/TKaZVGTIPDpZ6w1MRq3KA\n91FtRcMTeGjG8sW8FOUyXFxOP8P55EpOK8T1D+ttF3DVkuLURLXPaXK2RzUv2s59\nXser6q4wZFAMUtMpbZAt+UZVK29vlZ6AOJ1PhoXiGVeNuZOyA5aRIVxPKSAEIUgz\n3fnt7huTpyCa80zWUlPQW0xG/ATrkVt0aBpsdiqsQZYkL8JU5bl4bfpREsCYKG8n\nc4eU2YZ6b8T9RXTOrlzWy1i6Xk8Pi542LS0IvCLADdKUrSJn6A3qnjrSdoMYN/xC\neTqr/UY2MDiDt2VvHBFGEU05SFQVeIR34KQ5/B27AU+8tx7PzAs1o2cJFFf2Eg9/\n3svEDADcu+gfJ+RveMZGcziS2l+zhQ==\n=1w78\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a4a9307632ad95a32a5b236ba575c68a44cfa57",
          "sha": "7a4a9307632ad95a32a5b236ba575c68a44cfa57",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7a4a9307632ad95a32a5b236ba575c68a44cfa57"
        }
      ],
      "message": "net: isolate all remaining P2P specifics from SocketHandlerConnected()\n\nIntroduce 4 new methods for the interaction between `CConnman` and\n`SockMan`:\n\n* `EventReadyToSend()`:\n  called when there is readiness to send and do the actual sending of data.\n\n* `EventGotData()`, `EventGotEOF()`, `EventGotPermanentReadError()`:\n  called when the corresponing recv events occur.\n\nThese methods contain logic that is specific to the Bitcoin-P2P protocol\nand move it away from `CConnman::SocketHandlerConnected()` which will\nbecome a protocol agnostic method of `SockMan`.\n\nAlso, move the counting of sent bytes to `CConnman::SocketSendData()` -\nboth callers of that method called `RecordBytesSent()` just after the\ncall, so move it from the callers to inside\n`CConnman::SocketSendData()`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:36:59Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-22T10:11:42Z"
      },
      "sha": "5eae99d1224f8972b8961cbea397ce9a147cfe1e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ0ZGU2Yzk0NmMzOGY0NTljY2E4YjFkOGY2NTBiOTU3OWFlMGFlMWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4de6c946c38f459cca8b1d8f650b9579ae0ae1e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d4de6c946c38f459cca8b1d8f650b9579ae0ae1e",
      "tree": {
        "sha": "b695f4ec0c2208a1a8c08fb9e31de330af8a0ec0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b695f4ec0c2208a1a8c08fb9e31de330af8a0ec0"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b695f4ec0c2208a1a8c08fb9e31de330af8a0ec0\nparent 5eae99d1224f8972b8961cbea397ce9a147cfe1e\nauthor Vasil Dimov <vd@FreeBSD.org> 1727088625 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876219 +0100\n\nnet: split CConnman::ConnectNode()\n\nMove the protocol agnostic parts of `CConnman::ConnectNode()` into\n`SockMan::ConnectAndMakeNodeId()` and leave the Bitcoin-P2P specific\nstuff in `CConnman::ConnectNode()`.\n\nMove the protocol agnostic `CConnman::m_unused_i2p_sessions`, its mutex\nand `MAX_UNUSED_I2P_SESSIONS_SIZE` to `SockMan`.\n\nMove `GetBindAddress()` from `net.cpp` to `sockman.cpp`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoLwACgkQVN8G9ktV\ny7+hAR//R/FOY3gYSwzXf84xzbjlhH0xw00hRYbhr5DYpF/BpBxqJxNjDWyUqGvj\nz8csL2rqBGUvD+/93Z5wqDQlozMQ//EjA0EJQ7c9DKW0cw4x8ltMdEwAdqQB15Rj\n3TTy1ywLFP+IRNAn8W2GShnAZVRVpSpvJig/ZzckmLm8zgxVWL9Pn+PMVXkr33fS\nuMcC0beVKCYkGy46QhpFxX82iw1uZC+66tMtur+8GVjUkCBU3B9vhjO/6w/FQ6c1\nUYZ6k/Pc6oTIAg7lGtfEAfVkr8TTvwt4pFBndU2RRpmlARm+NNU2NlOp+OPTXuye\n3sMRNQbYNppzhybJYhuedFNgO/r/Xf6uc1j331P8RIgKuCbUdJirgoQSpJIiDqnk\n4y/HwRtGKsDZnFL4lQ6UMB6G1X/dVRF8BxS9jZzRKn2Bwxmy/mz5syw6526/Z8EA\nemwj++702QB2SY9sMJ87hw8juz5wWqz2zPOEfkKye9NccWmomuFXxh/R6ad75sxA\ndgS+3sAkdy6b38TJ7qMkp64OT/rld3Duv66IFatdSzbkFvOD3JwCHBS9enrnl7Z+\n4BtNRvPxcS8G0jMfO41eLXXdsWXR2Shhk7rzANuw5Oe+ntcuG5KNlFvZ1hwf22gM\nIoCrhmXxYBdlW++L7FXYrxYzABXVs36TffuDYxD7DnJ8FGLg/o8/9BIaBWVgBwuS\nch8stGfavbKzUzo4ztJLK+EHdFYC/i028XDLMWzzah3Do6e3eYf1iywHrIBXvg05\n+WNqcLAyFpF+4qaCRPKP2DRzqVHuFW5+ABYPThsf1qZzzkPS2lrqUgp6VfxKJVwf\nSW/sr7/ap4REp/eqV8hl3EVkPuUqtX7Kq9qRSVNJoZnRTBkphzTjlq3fuJRMfwNg\n6RpWCRABuUraPdE5n55cvy6fDeuYLRaLZRk2BxspFqjIS1sJFYk0JjWBLN9XBgAv\nyoqkjGkAd1Povt5gsv5KTXcx8vyYk3EwhvD5yI7b3Wf9q3kPjsf8he2xzmEvO+xQ\n6TWu8nXcipc2XgMzqGOOt0xhT4EowsiOwdGiNh2mRyR+JgdBZKXcvcUTVtFscNun\nQbtYfjy/i61Mw8q3edbFVorb3WxFhMJnE4ITxwT4JjN054tDc0cfmWw3Jg7b2Ps3\nEb6VQdvJ2TiAJLjzRv57c8Db3ISeIfiUOPTAu1i7GEa54JW7++5oZF3ossZQM6b+\n2A8YEb+1YO6sHRA79gWhAquVYGozvXtD4g4l4vi1scTvzDQgncC2DYZfmUskHCKo\ns3sy+ht1IKKZL6CZiHaIdbcUA92ftuxEU0HX7XpCi2MVe5Omhm/ldtIwQtiIPnIE\n9oSZrTZnKdN9sQRWF3arvN72QGQUvA==\n=9XtH\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5eae99d1224f8972b8961cbea397ce9a147cfe1e",
          "sha": "5eae99d1224f8972b8961cbea397ce9a147cfe1e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5eae99d1224f8972b8961cbea397ce9a147cfe1e"
        }
      ],
      "message": "net: split CConnman::ConnectNode()\n\nMove the protocol agnostic parts of `CConnman::ConnectNode()` into\n`SockMan::ConnectAndMakeNodeId()` and leave the Bitcoin-P2P specific\nstuff in `CConnman::ConnectNode()`.\n\nMove the protocol agnostic `CConnman::m_unused_i2p_sessions`, its mutex\nand `MAX_UNUSED_I2P_SESSIONS_SIZE` to `SockMan`.\n\nMove `GetBindAddress()` from `net.cpp` to `sockman.cpp`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:36:59Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-23T10:50:25Z"
      },
      "sha": "d4de6c946c38f459cca8b1d8f650b9579ae0ae1e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDAwNzBhY2Q5Mzc1NWExNzBiYjQ3ZGMzMjUyNGY2OTkyMzU5ODhjMzA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0070acd93755a170bb47dc32524f699235988c30",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0070acd93755a170bb47dc32524f699235988c30",
      "tree": {
        "sha": "fbc8eb44c83cfc63727910cc13f3d0a280cb2ff3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbc8eb44c83cfc63727910cc13f3d0a280cb2ff3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fbc8eb44c83cfc63727910cc13f3d0a280cb2ff3\nparent d4de6c946c38f459cca8b1d8f650b9579ae0ae1e\nauthor Vasil Dimov <vd@FreeBSD.org> 1727163707 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876220 +0100\n\nnet: tweak EventNewConnectionAccepted()\n\nMove `MaybeFlipIPv6toCJDNS()`, which is Bitcoin P2P specific from the\ncallers of `CConnman::EventNewConnectionAccepted()` to inside that\nmethod.\n\nMove the IsSelectable check, the `TCP_NODELAY` option set and the\ngeneration of new node id out of `CConnman::EventNewConnectionAccepted()`\nbecause those are protocol agnostic. Move those to a new method\n`SockMan::NewSockAccepted()` which is called instead of\n`CConnman::EventNewConnectionAccepted()`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoLwACgkQVN8G9ktV\ny7+xpB/8CrFRvNrT70MWKQaZbhQnlgKDtOhLlBSeuaWZYmiVzWcaHAQX9k4bn/qG\nipFe4axVGCWibV7AS/NIDw4RgjiAAOpTHrK02Q34QvJNHQmnNMvtou+YVzJdaACU\nlnd23r6JhEpJ8Q2+v88eZIReM5Qel1PEn586myWkq4BFmQ/R3AaPZM/ucKqpmE6s\n0cXkTOcrORu6euoXliY9YzriEYaqIJswVVqO7wexCYUF5c1/12YOGTg1Ox2dezP7\nkZMayZotmIEL5qOX1RiyF+4dziOUxLtSr37I/KKZG5nB3rmM3Ow8xfOlrUDPOhoL\nna/OBYqFGUxQBOVAFDVHjirpc5hdEZQKblKstdFfUDETv8RsMlR95g0d5awSUNZA\nGWyachvBvvrBvcXZgCqaZ05ZHnTxRcvUWY0BM4OPUZDtNB6Sq3lMFwEome5d/ZJx\noDVsVeDFs4syyFSHkUpHWogebpG/vgUdy1XC6f6apsSi8/pR/TRXHNlWXP9k+AxI\nDUJp9iJErSR6N3H7gzS1+jMmtONo1c/DjpRVgr3cgheRBMB4V3HoEtzUcKZnsU4Q\nYSe3Clas750Uf+epvhSMd9CwecG/fYS4I1w+REz9JxqrvVFYsjzDADRaAZL/oB8t\nLjbmyH2bpRebx6q/2Zx9WWO6wprry6etGCI8pwPfMicTdW0Z3sCyESdvLSZf8qML\negLEtvrr7a/PwxTdwyv5JxsA5uNBm5ZjQZQ+cQ9s73M5/jOcOxpNWU5ZqTS+NOVg\nWDVkMrrC2nJr24nqQjVGZ0NqvdcZfV605kT4vNILvsHDDcug1ElvoRoVqMKEFNbr\neqPV+6/fI/JuoYsMSCi2BfroNZHkcg9/AgdKTEF8G6okDqWDkSfZ1OU18CcRMUsb\nxh/WYh7Z7zSQeZFQiwmU+Ym8Ym2AN7jkxC6KQGDgvROTS0p/zYk4qMKSpJ7zvoE4\n6MgXBrInCbrKj02fejwtu8LugkByJBdL/7ckQ1M7ad6i7UmhzJ4rIVNQFnf1dcFX\nt6phbpsctFSDy7v1RzBrW/17j2c0WykEBpLtwh/R1UGoqTViHxqAltnBrpmGJTnG\nHJLBgdovN9ZBy4KuVQF23b9kiqlsZhpWJZVJXJHCbO+XJkPMDMzuE8YLsPw+8gO0\ncr0QiG4cgbnhCZTYD0zlR/2eQm1UNLlfoTNW57BEHzZKwivvRebmE/x3VaHOp6Jf\nWyrf7ZOxp9BZAy7H4oRrnaAM6enVR2Ib52I4/8qaCayg8iKuSBb5GcjeThbzzayY\nUfY9plHoEWo4gxBw9TITGhj1c5YYWER1Or+LrjqwmBRJ2lrkn5wXzQhINPgaT4Zq\n086ziU3209P2ZHXGPPIE5D96YEbloA==\n=rF0Q\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4de6c946c38f459cca8b1d8f650b9579ae0ae1e",
          "sha": "d4de6c946c38f459cca8b1d8f650b9579ae0ae1e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d4de6c946c38f459cca8b1d8f650b9579ae0ae1e"
        }
      ],
      "message": "net: tweak EventNewConnectionAccepted()\n\nMove `MaybeFlipIPv6toCJDNS()`, which is Bitcoin P2P specific from the\ncallers of `CConnman::EventNewConnectionAccepted()` to inside that\nmethod.\n\nMove the IsSelectable check, the `TCP_NODELAY` option set and the\ngeneration of new node id out of `CConnman::EventNewConnectionAccepted()`\nbecause those are protocol agnostic. Move those to a new method\n`SockMan::NewSockAccepted()` which is called instead of\n`CConnman::EventNewConnectionAccepted()`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:37:00Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-24T07:41:47Z"
      },
      "sha": "0070acd93755a170bb47dc32524f699235988c30"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc1NGZlNGEzMzNkNDg5YmU1MGI0ZGNmNjgwZDIyZmI4Y2Q5NWI3Nzc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/754fe4a333d489be50b4dcf680d22fb8cd95b777",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/754fe4a333d489be50b4dcf680d22fb8cd95b777",
      "tree": {
        "sha": "52e907e58ac7da02f9fa2d7e3d0082931e8ee510",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52e907e58ac7da02f9fa2d7e3d0082931e8ee510"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 52e907e58ac7da02f9fa2d7e3d0082931e8ee510\nparent 0070acd93755a170bb47dc32524f699235988c30\nauthor Vasil Dimov <vd@FreeBSD.org> 1727082212 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876220 +0100\n\nnet: move sockets from CNode to SockMan\n\nMove `CNode::m_sock` and `CNode::m_i2p_sam_session` to `SockMan::m_connected`.\nAlso move all the code that handles sockets to `SockMan`.\n\n`CNode::CloseSocketDisconnect()` becomes\n`CConnman::MarkAsDisconnectAndCloseConnection()`.\n\n`CConnman::SocketSendData()` is renamed to\n`CConnman::SendMessagesAsBytes()` and its sockets-touching bits are moved to\n`SockMan::SendBytes()`.\n\n`CConnman::GenerateWaitSockets()` goes to\n`SockMan::GenerateWaitSockets()`.\n\n`CConnman::ThreadSocketHandler()` and\n`CConnman::SocketHandler()` are combined into\n`SockMan::ThreadSocketHandler()`.\n\n`CConnman::SocketHandlerConnected()` goes to\n`SockMan::SocketHandlerConnected()`.\n\n`CConnman::SocketHandlerListening()` goes to\n`SockMan::SocketHandlerListening()`.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoL0ACgkQVN8G9ktV\ny793qCAAqErJbo9a3av7ZV8Jtkz6x8nHqmn8vIiMzlRuuP/IchWfiKvIhtRrM5LS\n3opOhBmxQyYBWKl7FIvHH97zM0dnJ4eTaCiaSpcmtOZyZGgtXan6/UYCtX/7QHX1\noL08WSeMYGTvGZI11sE4v1hNPKXJM9jSqcEARz1is6Itdr2akrKHK9Q5PHaIQCRn\nyjTJDXcvbbIWBnSUlJhUeYuZIOxoNJ5Iep3kJ+QZKtYmy+Id63/qnx7M/DL6QhRz\nauZBZZMD3yjPUXXFe21lk67SW2drLcEjhrn0Tud9u/SoSATxXSn3843mi+8MyhVA\nc6XdPIXpnSql6+PWo87Sxqsqyesh9YMLTI9bSjsO5Eb+fEkQTYwhas4M1weJkNmW\noXSUz4goJq7UkwqO7UPgSyywAOYCiuRfYpvow9qUOtRWW+dlYtFS9COo/RxBZL6T\nQLu5hWiAcKxxxNPNZsK/LpAf5M8x99DhLKma9YmPK2YJxY6zYh25kRe15GiiyuV3\n3NEyR8VKQFYtlRo4o2Mi+XtvkAjnLSfTeN2nqXVxtQkRr770LtMmKkCew49bI6Wf\nbDjKrD7loFTTmYNNB5Z/88WyNzSAPLbb0iCHi4xaQnmlqYZYd+gwk7kcY1jRPIOR\nHe82YBE9OUOwBr5fon2A03sJ4tvoG6pnvhRMXREMSaB2YxRxos/qRKnxdnm3JYTg\nzDhRblaNVsgI7jn1i+jx7W0nlmy7BgW14MwmRDSu/wmxLeotVw/vb/HvG0hUDGJM\n6hL1zDsyrucsk8AdmliC2wHHrqJ7vIYtincrzaHa6Nf2I4vx5eoCrRS5+EmQmSZX\n3SEmPT4YpToITRTiToEZXO8oLOBA+ZuggQ+yu2N+KGxCAwqH84mG7hr0AVmt/s06\npLwfvJ5EseQbRgg5wFzFWNUTI8CV9QYDK5/Fyhe1/zeqYc+eKP1KhyxBQwYFYVM2\n8wJ7joQQ3W4dqQ+htlNJWBBpglqFoC4eK0y/zx0grw1JIrJlVHo/RvBC2aeLHnGl\nh9tUgRvlqNGNj72K5AroCJBJcC3ddimPy4wnb2cLgb040PqLHUlFk6cEiTd0Yr/L\nDDN+lI7CdWZ4h458O2CM6pOGakSoxTLUhDfnONg7D5hdwSPdKThz/hDSK6ehvttn\n1nRuXYp+aaJ1S5VC9eTa1t+0c6fJqFeYQJBM6TqN+bjjoPhuj2TYjQJ3jgWztFNE\n0JomleQyzD1W2UZOahpGO+5yAlDR0TOJh6oRYyT+DZnT7RTUjAHWEogeORL4gEZt\nzo8HqpWfycxJQIkwJAtbEWs4wrrfZv9JhPp2PfivBYpx9DPCdyiK0MyjDAl5mSth\nXKF8dOcdJNu+RizIjw7BW7LMxJbDfg==\n=88fy\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0070acd93755a170bb47dc32524f699235988c30",
          "sha": "0070acd93755a170bb47dc32524f699235988c30",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0070acd93755a170bb47dc32524f699235988c30"
        }
      ],
      "message": "net: move sockets from CNode to SockMan\n\nMove `CNode::m_sock` and `CNode::m_i2p_sam_session` to `SockMan::m_connected`.\nAlso move all the code that handles sockets to `SockMan`.\n\n`CNode::CloseSocketDisconnect()` becomes\n`CConnman::MarkAsDisconnectAndCloseConnection()`.\n\n`CConnman::SocketSendData()` is renamed to\n`CConnman::SendMessagesAsBytes()` and its sockets-touching bits are moved to\n`SockMan::SendBytes()`.\n\n`CConnman::GenerateWaitSockets()` goes to\n`SockMan::GenerateWaitSockets()`.\n\n`CConnman::ThreadSocketHandler()` and\n`CConnman::SocketHandler()` are combined into\n`SockMan::ThreadSocketHandler()`.\n\n`CConnman::SocketHandlerConnected()` goes to\n`SockMan::SocketHandlerConnected()`.\n\n`CConnman::SocketHandlerListening()` goes to\n`SockMan::SocketHandlerListening()`.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:37:00Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-23T09:03:32Z"
      },
      "sha": "754fe4a333d489be50b4dcf680d22fb8cd95b777"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJjZjEyNTRlOTE3ODJhMzNiNWExZGI1NDJmMzc1ODgzMWUwYmZlMmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "tree": {
        "sha": "93bbaf70bc94d27d36722327cf361123b2360d30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/93bbaf70bc94d27d36722327cf361123b2360d30"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 93bbaf70bc94d27d36722327cf361123b2360d30\nparent 754fe4a333d489be50b4dcf680d22fb8cd95b777\nauthor Vasil Dimov <vd@FreeBSD.org> 1727082359 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1736876221 +0100\n\nnet: move-only: improve encapsulation of SockMan\n\n`SockMan` members\n\n`AcceptConnection()`\n`NewSockAccepted()`\n`GetNewNodeId()`\n`m_i2p_sam_session`\n`m_listen private`\n\nare now used only by `SockMan`, thus make them private.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmeGoL4ACgkQVN8G9ktV\ny79qMx/8DJY3anU8++k289rdBji3gmy+vKJN71GcvW7z9XPmZkufv8lFrp0pLZsY\nKo/UtjpVcuPlCIRA4ULgRQGng1lbvRgyuOV7dQQsUSrjrktEGR14wl0dOGjFwoC5\nDJfHcs/uleeOJ7PsruJ1+a5Wox6WU+jjjyRTSBjobWnOhiLRoMUbQc8SrOJ5ub8K\nYuWmlGom4g5ER3xBmQA1vpk9Q8DVNOtF8PfqEjrH3qGT1l9yanYVKg60iuKL4kOp\n3WfWkKb6XxxihzXYVgYqvgzhXBQa1eV4Cx0RjMhLJn2a083+sh1YwyeFaX6D1D6R\nONCW3Bx6a1pIV1Y+xbyKE4ilcYl9Nly6GzdDPldE7pwsIz5L/uRhcN4pykp3yu+t\nr0V4av9a5HtDz7z6ME8G6PABKFHO8ZpYhyb7PH+dXlbftc/kO/3bonoN77KyX57w\nFSXxEm/rsf/mec6NoQRV30wyk8uabtfHHvn3BQkzUzLPIG+dvrpT5a8Eudv4tY/l\nC5BB/s9lub8JLD4eNunEkYQVsRaW0vwl1dlpuAwXEHU+qYZHhSNNvYiT/uTJJJk3\nEmVJlOgvwiGwzFxdt7Gln9RYG761EpkVYiz994c+rs2mSPr4djb6xpaMumlklm8l\nnao0LSwS1rBkItEowaptCEIuqDsitlgmz5d/YA+aejPqgMSm5/RTt3X+fFb9nsKC\nQoc/OtsYUavMhiKZtCBBlRlRAsufG7iV7kRdah7mPOqxZKdT767Hz+agugtLKAO3\nr5Khl/nWdwIIZxyXpqiqaPSQO/CD3h7XAGdUPnD97ERuZHVrTc9MLctpibWoSuM5\nqL5YlasZ/WCneTH6Wh0H83v2hxYyFbR501gKdzhL+CG0Qwl9biqHmWfGgCS9c2Hg\nMRgh3D8I7VrAX4pc7d2DqLuvh7qukp0OhsDSLbO5Wydze36EuoClUyjR2EzdSpqV\nt2hot3mADsClCy0gR9vwWyJl2UUsTsb7dE9u+yW1KgnEuaw71maa1UwC4IXWybVT\ngVNvTgl+LqrSqVjdAva7sGADUVPm5+KbKhyyHsmsnV0Z3WEqjGU+1d4j1yL15CLq\nPMYWCfbLd92Mk4Q7BcflKBgwNYD0deSZKCOPKEWOxd5HKcitLjKQMZMMIi+RRujZ\nBJzpvSHvaVGZ4wANVr6YUpoEAGGjqFydLo4Z0cJsqs0RBcKnAJIeIkBhizbCue6u\nygqwb3by809D6I1nEUSTos8wvJ11WB9J4JL+W22+IQG85eUDbvN67N4L2j8WVZZ5\nFV5FXnEx41PJJUAv/7m9oDe7edyf7emld0TlcW64fU/R52SO1BYQOf0rAZFDh8CT\n1J66U0PGNehSsBW0hzGEYizuRwZ33w==\n=toRM\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/754fe4a333d489be50b4dcf680d22fb8cd95b777",
          "sha": "754fe4a333d489be50b4dcf680d22fb8cd95b777",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/754fe4a333d489be50b4dcf680d22fb8cd95b777"
        }
      ],
      "message": "net: move-only: improve encapsulation of SockMan\n\n`SockMan` members\n\n`AcceptConnection()`\n`NewSockAccepted()`\n`GetNewNodeId()`\n`m_i2p_sam_session`\n`m_listen private`\n\nare now used only by `SockMan`, thus make them private.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-01-14T17:37:01Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2024-09-23T09:05:59Z"
      },
      "sha": "bcf1254e91782a33b5a1db542f3758831e0bfe2e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15927448074,
      "node_id": "HRFPE_lADOABII586YIJemzwAAAAO1WZIK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15927448074",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "created_at": "2025-01-14T17:37:26Z"
    },
    {
      "event": "commented",
      "id": 2590687348,
      "node_id": "IC_kwDOABII586aasB0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2590687348",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-14T17:41:46Z",
      "updated_at": "2025-01-14T17:41:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "`d83ff66fd7...bcf1254e91`: adjust test after change of the log message in the previous push",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#issuecomment-2590687348",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30988"
    },
    {
      "event": "unlabeled",
      "id": 15928937968,
      "node_id": "UNLE_lADOABII586YIJemzwAAAAO1cE3w",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15928937968",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-14T19:02:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2552280742,
      "node_id": "PRR_kwDOABII586YILam",
      "url": null,
      "actor": null,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "> > ... dropping `AddSocketPermissionFlags`. Can you move that to a separate (earlier?) commit?\r\n> \r\n> Done.\r\n\r\nThanks. Don't forget to drop \"Also, separate the listening socket from the permissions\" from the commit description of e5d36eea015efc31aa38d540af4cf39c9e2e46b0.\r\n\r\nAlong similar lines, though less important, you could also have a separate commit that drops `ListenSocket` and introduces `m_listen` as a member of `CConnman`, before moving it to `Sockman`.\r\n\r\n(it makes `git show --color-moved=dimmed-zebra` more grey, less red and green when you introduce `SockMan`)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2552280742",
      "submitted_at": "2025-01-15T11:28:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "reviewed",
      "id": 2552366143,
      "node_id": "PRR_kwDOABII586YIgQ_",
      "url": null,
      "actor": null,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Reviewed up to 1b05e1d4ba55a42ba74026b68fa4e616b973e06d.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2552366143",
      "submitted_at": "2025-01-15T12:37:21Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    },
    {
      "event": "reviewed",
      "id": 2552728389,
      "node_id": "PRR_kwDOABII586YJ4tF",
      "url": null,
      "actor": null,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#pullrequestreview-2552728389",
      "submitted_at": "2025-01-15T13:32:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778257807",
      "pull_request_review_id": 2333138089,
      "id": 1778257807,
      "node_id": "PRRC_kwDOABII585p_g-P",
      "diff_hunk": "@@ -203,6 +203,15 @@ static RPCHelpMan getpeerinfo()\n     std::vector<CNodeStats> vstats;\n     connman.GetNodeStats(vstats);\n \n+    // An undocumented side effect of how CConnman previously stored nodes was\n+    // that they were returned ordered by id. At least some functional tests\n+    // rely on that, so keep it that way. An alternative is to remove this sort\n+    // and fix the tests and take the risk of breaking other users of the\n+    // \"getpeerinfo\" RPC.",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "03f6cc2b4a76cafd278b9ab92bd915d3946212a9",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Arrays are ordered data structures and I don't think it is user-friendly to shuffle them by ID. I think this comment can just be removed.",
      "created_at": "2024-09-27T08:41:33Z",
      "updated_at": "2024-09-27T11:52:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1778257807",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778257807"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": 206,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778767304",
      "pull_request_review_id": 2333986678,
      "id": 1778767304,
      "node_id": "PRRC_kwDOABII585qBdXI",
      "diff_hunk": "@@ -203,6 +203,15 @@ static RPCHelpMan getpeerinfo()\n     std::vector<CNodeStats> vstats;\n     connman.GetNodeStats(vstats);\n \n+    // An undocumented side effect of how CConnman previously stored nodes was\n+    // that they were returned ordered by id. At least some functional tests\n+    // rely on that, so keep it that way. An alternative is to remove this sort\n+    // and fix the tests and take the risk of breaking other users of the\n+    // \"getpeerinfo\" RPC.",
      "path": "src/rpc/net.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "03f6cc2b4a76cafd278b9ab92bd915d3946212a9",
      "in_reply_to_id": 1778257807,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed, thanks!",
      "created_at": "2024-09-27T15:05:41Z",
      "updated_at": "2024-09-27T15:05:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1778767304",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1778767304"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": 206,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 210,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802901394",
      "pull_request_review_id": 2372105727,
      "id": 1802901394,
      "node_id": "PRRC_kwDOABII585rdheS",
      "diff_hunk": "@@ -0,0 +1,528 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep",
      "path": "src/common/sockman.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "70c2f13f83a5cc740330d0b4af9cbd74515be6b2",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Silent merge conflict with #30937",
      "created_at": "2024-10-16T11:15:53Z",
      "updated_at": "2024-10-16T11:15:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1802901394",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1802901394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 5,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1803679987",
      "pull_request_review_id": 2373476515,
      "id": 1803679987,
      "node_id": "PRRC_kwDOABII585rgfjz",
      "diff_hunk": "@@ -1796,10 +1796,10 @@ void CConnman::CreateNodeFromAcceptedSocket(std::unique_ptr<Sock>&& sock,\n \n     CNode* pnode = new CNode(id,\n                              std::move(sock),\n-                             addr,\n+                             CAddress{addr, NODE_NONE},\n                              CalculateKeyedNetGroup(addr),\n                              nonce,\n-                             addr_bind,\n+                             CAddress{addr_bind, NODE_NONE},",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "1bfc1ca9b6b68c6356ffc23ecf01e417152ade95",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "1bfc1ca9b6b68c6356ffc23ecf01e417152ade95\r\n\r\nWhy do CNode .addr and .addrBind still need to be CAddress? maybe it makes some sense for .addr if that's where we also store the service flags for easier gossiping, but why would the local bind address need anything besides an IP and port?",
      "created_at": "2024-10-16T19:27:15Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1803679987",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1803679987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": 1799,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1715,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1803692315",
      "pull_request_review_id": 2373476515,
      "id": 1803692315,
      "node_id": "PRRC_kwDOABII585rgikb",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <common/sockman.h>\n+#include <logging.h>\n+#include <netbase.h>\n+#include <util/sock.h>\n+\n+bool SockMan::BindListenPort(const CService& addrBind, bilingual_str& strError)\n+{\n+    int nOne = 1;\n+\n+    // Create socket for listening for incoming connections\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (!addrBind.GetSockAddr((struct sockaddr*)&sockaddr, &len))\n+    {\n+        strError = strprintf(Untranslated(\"Bind address family for %s not supported\"), addrBind.ToStringAddrPort());\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n+        return false;\n+    }\n+\n+    std::unique_ptr<Sock> sock = CreateSock(addrBind.GetSAFamily(), SOCK_STREAM, IPPROTO_TCP);\n+    if (!sock) {\n+        strError = strprintf(Untranslated(\"Couldn't open socket for incoming connections (socket returned error %s)\"), NetworkErrorString(WSAGetLastError()));\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n+        return false;\n+    }\n+\n+    // Allow binding if the port is still in TIME_WAIT state after\n+    // the program was closed and restarted.\n+    if (sock->SetSockOpt(SOL_SOCKET, SO_REUSEADDR, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\n+        strError = strprintf(Untranslated(\"Error setting SO_REUSEADDR on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+        LogPrintf(\"%s\\n\", strError.original);\n+    }\n+\n+    // some systems don't have IPV6_V6ONLY but are always v6only; others do have the option\n+    // and enable it by default or not. Try to enable it, if possible.\n+    if (addrBind.IsIPv6()) {\n+#ifdef IPV6_V6ONLY\n+        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_V6ONLY, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\n+            strError = strprintf(Untranslated(\"Error setting IPV6_V6ONLY on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+            LogPrintf(\"%s\\n\", strError.original);\n+        }\n+#endif\n+#ifdef WIN32\n+        int nProtLevel = PROTECTION_LEVEL_UNRESTRICTED;\n+        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_PROTECTION_LEVEL, (const char*)&nProtLevel, sizeof(int)) == SOCKET_ERROR) {\n+            strError = strprintf(Untranslated(\"Error setting IPV6_PROTECTION_LEVEL on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+            LogPrintf(\"%s\\n\", strError.original);\n+        }\n+#endif\n+    }\n+",
      "path": "src/common/sockman.cpp",
      "position": 88,
      "original_position": 57,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2\r\n\r\nMaybe these are expected to be set by callers in future commits, so I'm just leaving myself a note to look for `SO_KEEPALIVE` and `TCP_NODELAY`",
      "created_at": "2024-10-16T19:38:45Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1803692315",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1803692315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804940161",
      "pull_request_review_id": 2373476515,
      "id": 1804940161,
      "node_id": "PRRC_kwDOABII585rlTOB",
      "diff_hunk": "@@ -9,9 +9,12 @@\n #include <util/sock.h>\n #include <util/translation.h>\n \n+#include <atomic>\n #include <memory>\n #include <vector>\n \n+typedef int64_t NodeId;",
      "path": "src/common/sockman.h",
      "position": 23,
      "original_position": 8,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "5d4920f630417ceeee1c79304faac6803795cd64",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "5d4920f630417ceeee1c79304faac6803795cd64\r\n\r\nI don't really have any better suggestion for this but the term \"node\" is now a higher-level ConnMan context, for HTTP and StratumV2 I'd probably refer to them as \"client\".",
      "created_at": "2024-10-17T14:53:34Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1804940161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804940161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804970448",
      "pull_request_review_id": 2373476515,
      "id": 1804970448,
      "node_id": "PRRC_kwDOABII585rlanQ",
      "diff_hunk": "@@ -124,3 +143,39 @@ void SockMan::CloseSockets()\n }\n \n void SockMan::EventI2PListen(const CService&, bool) {}\n+\n+void SockMan::ThreadI2PAccept()\n+{\n+    static constexpr auto err_wait_begin = 1s;\n+    static constexpr auto err_wait_cap = 5min;\n+    auto err_wait = err_wait_begin;\n+\n+    i2p::Connection conn;\n+\n+    auto SleepOnFailure = [&]() {\n+        interruptNet.sleep_for(err_wait);\n+        if (err_wait < err_wait_cap) {\n+            err_wait += 1s;\n+        }\n+    };\n+\n+    while (!interruptNet) {\n+\n+        if (!m_i2p_sam_session->Listen(conn)) {\n+            EventI2PListen(conn.me, /*success=*/false);",
      "path": "src/common/sockman.cpp",
      "position": 308,
      "original_position": 56,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc\r\n\r\nReminding myself to check for a test that covers a child class with i2p true but no Event listener",
      "created_at": "2024-10-17T15:11:34Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1804970448",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804970448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 308,
      "original_line": 308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804983489",
      "pull_request_review_id": 2373476515,
      "id": 1804983489,
      "node_id": "PRRC_kwDOABII585rldzB",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <common/sockman.h>\n+#include <logging.h>\n+#include <netbase.h>\n+#include <util/sock.h>\n+\n+bool SockMan::BindListenPort(const CService& addrBind, bilingual_str& strError)\n+{\n+    int nOne = 1;\n+\n+    // Create socket for listening for incoming connections\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (!addrBind.GetSockAddr((struct sockaddr*)&sockaddr, &len))\n+    {\n+        strError = strprintf(Untranslated(\"Bind address family for %s not supported\"), addrBind.ToStringAddrPort());\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n+        return false;\n+    }\n+\n+    std::unique_ptr<Sock> sock = CreateSock(addrBind.GetSAFamily(), SOCK_STREAM, IPPROTO_TCP);\n+    if (!sock) {\n+        strError = strprintf(Untranslated(\"Couldn't open socket for incoming connections (socket returned error %s)\"), NetworkErrorString(WSAGetLastError()));\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n+        return false;\n+    }\n+\n+    // Allow binding if the port is still in TIME_WAIT state after\n+    // the program was closed and restarted.\n+    if (sock->SetSockOpt(SOL_SOCKET, SO_REUSEADDR, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\n+        strError = strprintf(Untranslated(\"Error setting SO_REUSEADDR on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+        LogPrintf(\"%s\\n\", strError.original);\n+    }\n+\n+    // some systems don't have IPV6_V6ONLY but are always v6only; others do have the option\n+    // and enable it by default or not. Try to enable it, if possible.\n+    if (addrBind.IsIPv6()) {\n+#ifdef IPV6_V6ONLY\n+        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_V6ONLY, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\n+            strError = strprintf(Untranslated(\"Error setting IPV6_V6ONLY on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+            LogPrintf(\"%s\\n\", strError.original);\n+        }\n+#endif\n+#ifdef WIN32\n+        int nProtLevel = PROTECTION_LEVEL_UNRESTRICTED;\n+        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_PROTECTION_LEVEL, (const char*)&nProtLevel, sizeof(int)) == SOCKET_ERROR) {\n+            strError = strprintf(Untranslated(\"Error setting IPV6_PROTECTION_LEVEL on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+            LogPrintf(\"%s\\n\", strError.original);\n+        }\n+#endif\n+    }\n+",
      "path": "src/common/sockman.cpp",
      "position": 88,
      "original_position": 57,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2",
      "in_reply_to_id": 1803692315,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok I see NODELAY set  by ConnMan in EventNewConnectionAccepted in b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc\r\n\r\nI'm guessing we dont use KEEPALIVE for bitcoin p2p because we have out own ping/pong protocol",
      "created_at": "2024-10-17T15:19:48Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1804983489",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804983489"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804998403",
      "pull_request_review_id": 2373476515,
      "id": 1804998403,
      "node_id": "PRRC_kwDOABII585rlhcD",
      "diff_hunk": "@@ -63,6 +96,16 @@ class SockMan\n     // Pure virtual functions must be implemented by children classes.\n     //\n \n+    /**\n+     * Be notified when a new connection has been accepted.\n+     * @param[in] sock Connected socket to communicate with the peer.\n+     * @param[in] me The address and port at our side of the connection.\n+     * @param[in] them The address and port at the peer's side of the connection.\n+     */\n+    virtual void EventNewConnectionAccepted(std::unique_ptr<Sock>&& sock,",
      "path": "src/common/sockman.h",
      "position": null,
      "original_position": 77,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc\r\n\r\nSeems weird to me to move the unique pointer to a connected socket out of sockman, implying that sockman itself doesn't own the connections. Peeking ahead at future commits though I think this gets resolved.",
      "created_at": "2024-10-17T15:29:01Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1804998403",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1804998403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805112369",
      "pull_request_review_id": 2373476515,
      "id": 1805112369,
      "node_id": "PRRC_kwDOABII585rl9Qx",
      "diff_hunk": "@@ -1410,7 +1411,7 @@ class CConnman : private SockMan\n     std::vector<AddedNodeParams> m_added_node_params GUARDED_BY(m_added_nodes_mutex);\n \n     mutable Mutex m_added_nodes_mutex;\n-    std::vector<CNode*> m_nodes GUARDED_BY(m_nodes_mutex);\n+    std::unordered_map<NodeId, CNode*> m_nodes GUARDED_BY(m_nodes_mutex);",
      "path": "src/net.h",
      "position": 325,
      "original_position": 31,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "b96beb27d2b3d06a45644c537c114a08f0ccd285",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "b96beb27d2b3d06a45644c537c114a08f0ccd285\r\n\r\nLove this, great optimization and makes a lot of sense.",
      "created_at": "2024-10-17T16:52:54Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805112369",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805112369"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1413,
      "original_line": 1413,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805115729",
      "pull_request_review_id": 2373476515,
      "id": 1805115729,
      "node_id": "PRRC_kwDOABII585rl-FR",
      "diff_hunk": "@@ -45,12 +45,13 @@ FUZZ_TARGET(connman, .init = initialize_connman)\n     connman.Init(options);\n \n     CNetAddr random_netaddr;\n-    CNode random_node = ConsumeNode(fuzzed_data_provider);\n+    NodeId node_id{0};\n+    CNode random_node = ConsumeNode(fuzzed_data_provider, node_id++);",
      "path": "src/test/fuzz/connman.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "b96beb27d2b3d06a45644c537c114a08f0ccd285",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "b96beb27d2b3d06a45644c537c114a08f0ccd285\r\n\r\nWhy not use `GetNewNodeId()` here? (and below) Don't you have a Connman with its own `m_next_node_id`?",
      "created_at": "2024-10-17T16:55:41Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805115729",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805115729"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": 48,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805124507",
      "pull_request_review_id": 2373476515,
      "id": 1805124507,
      "node_id": "PRRC_kwDOABII585rmAOb",
      "diff_hunk": "@@ -111,6 +111,22 @@ class SockMan\n     // alone to use the default implementation from SockMan.\n     //\n \n+    /**\n+     * SockMan would only call EventReadyToSend() if this returns true.\n+     * Can be used to temporary pause sends for a node.\n+     * The implementation in SockMan always returns true.\n+     * @param[in] node_id Node for which to confirm or cancel a call to EventReadyToSend().\n+     */\n+    virtual bool ShouldTryToSend(NodeId node_id) const;\n+\n+    /**\n+     * SockMan would only call Recv() on a node's socket if this returns true.\n+     * Can be used to temporary pause receives for a node.",
      "path": "src/common/sockman.h",
      "position": null,
      "original_position": 14,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "bb5b91d430026c4826a2107c8c1a311518cc97ce",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "bb5b91d430026c4826a2107c8c1a311518cc97ce\r\n\r\nnit s/temporary/temporarily\r\n\r\nand above",
      "created_at": "2024-10-17T17:03:08Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805124507",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805124507"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805134391",
      "pull_request_review_id": 2373476515,
      "id": 1805134391,
      "node_id": "PRRC_kwDOABII585rmCo3",
      "diff_hunk": "@@ -127,6 +127,22 @@ class SockMan\n      */\n     virtual bool ShouldTryToRecv(NodeId node_id) const;\n \n+    /**\n+     * SockMan has completed the current send+recv iteration for a node.\n+     * It will do another send+recv for this node after processing all other nodes.\n+     * Can be used to execute periodic tasks for a given node.\n+     * The implementation in SockMan does nothing.\n+     * @param[in] node_id Node for which send+recv has been done.\n+     */\n+    virtual void EventIOLoopCompletedForNode(NodeId node_id);\n+\n+    /**\n+     * SockMan has completed send+recv for all nodes.\n+     * Can be used to execute periodic tasks for all nodes.\n+     * The implementation in SockMan does nothing.\n+     */\n+    virtual void EventIOLoopCompletedForAllPeers();",
      "path": "src/common/sockman.h",
      "position": 250,
      "original_position": 18,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "50cb52470ea6cc4de5a5e5260b8f308353942ec0",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "50cb52470ea6cc4de5a5e5260b8f308353942ec0\r\n\r\nThis is great, can be used for timed actions (like locking the wallet) we used to depend on libevent for",
      "created_at": "2024-10-17T17:12:00Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805134391",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805134391"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 250,
      "original_line": 250,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805142536",
      "pull_request_review_id": 2373476515,
      "id": 1805142536,
      "node_id": "PRRC_kwDOABII585rmEoI",
      "diff_hunk": "@@ -2013,6 +2013,29 @@ bool CConnman::ShouldTryToRecv(NodeId node_id) const\n     return !node->fPauseRecv;\n }\n \n+void CConnman::EventIOLoopCompletedForNode(NodeId node_id)\n+{\n+    AssertLockNotHeld(m_nodes_mutex);\n+\n+    CNode* node{GetNodeById(node_id)};\n+    if (node == nullptr) {\n+        return;\n+    }\n+\n+    if (InactivityCheck(*node)) {\n+        node->fDisconnect = true;\n+    }\n+}\n+\n+void CConnman::EventIOLoopCompletedForAllPeers()\n+{\n+    AssertLockNotHeld(m_nodes_mutex);\n+    AssertLockNotHeld(m_reconnections_mutex);\n+\n+    DisconnectNodes();",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "50cb52470ea6cc4de5a5e5260b8f308353942ec0",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "50cb52470ea6cc4de5a5e5260b8f308353942ec0\r\n\r\nInteresting that the parent class handles accepting connections but the child is expected to handle disconnections, and inside the utility event loop function. Of course only the derived class would know when disconnection is appropriate, I wonder if anything it makes sense just to add a comment in `sockman.h` that `EventIOLoopCompletedForAllPeers()` is expected to handle that, erasing items from `m_nodes`",
      "created_at": "2024-10-17T17:19:06Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805142536",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805142536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2035,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805157675",
      "pull_request_review_id": 2373476515,
      "id": 1805157675,
      "node_id": "PRRC_kwDOABII585rmIUr",
      "diff_hunk": "@@ -10,6 +10,19 @@\n #include <util/sock.h>\n #include <util/thread.h>\n \n+CService GetBindAddress(const Sock& sock)\n+{\n+    CService addr_bind;\n+    struct sockaddr_storage sockaddr_bind;\n+    socklen_t sockaddr_bind_len = sizeof(sockaddr_bind);\n+    if (!sock.GetSockName((struct sockaddr*)&sockaddr_bind, &sockaddr_bind_len)) {",
      "path": "src/common/sockman.cpp",
      "position": 24,
      "original_position": 9,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "3bb0145514978092ae966e30693cf619e4034837",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "3bb0145514978092ae966e30693cf619e4034837\r\n\r\nthe `else {error}` looked backwards to me here at first, might be more clear to use `== 0` instead of `!` but i dunno what the official style is for this.",
      "created_at": "2024-10-17T17:32:07Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805157675",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805157675"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805160999",
      "pull_request_review_id": 2373476515,
      "id": 1805160999,
      "node_id": "PRRC_kwDOABII585rmJIn",
      "diff_hunk": "@@ -10,6 +10,19 @@\n #include <util/sock.h>\n #include <util/thread.h>\n \n+CService GetBindAddress(const Sock& sock)",
      "path": "src/common/sockman.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "3bb0145514978092ae966e30693cf619e4034837",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "3bb0145514978092ae966e30693cf619e4034837\r\n\r\nWould this make more sense as a direct method of `Sock` ? Especially now that it returns the simpler `CService` instead of `CAddress`",
      "created_at": "2024-10-17T17:35:04Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805160999",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805160999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805171602",
      "pull_request_review_id": 2373476515,
      "id": 1805171602,
      "node_id": "PRRC_kwDOABII585rmLuS",
      "diff_hunk": "@@ -74,6 +79,37 @@ class SockMan\n      */\n     void JoinSocketsThreads();\n \n+    /**\n+     * A more readable std::tuple<std::string, uint16_t> for host and port.\n+     */\n+    struct StringHostIntPort {\n+        const std::string& host;\n+        uint16_t port;\n+    };\n+\n+    /**\n+     * Make an outbound connection, save the socket internally and return a newly generated node id.\n+     * @param[in] to The address to connect to, either as CService or a host as string and port as\n+     * an integer, if the later is used, then `proxy` must be valid.\n+     * @param[in] is_important If true, then log failures with higher severity.\n+     * @param[in] proxy Proxy to connect through if `proxy.IsValid()` is true.\n+     * @param[out] proxy_failed If `proxy` is valid and the connection failed because of the\n+     * proxy, then it will be set to true.\n+     * @param[out] me If the connection was successful then this is set to the address on the\n+     * local side of the socket.\n+     * @param[out] sock Connected socket, if the operation is successful.\n+     * @param[out] i2p_transient_session I2P session, if the operation is successful.\n+     * @return Newly generated node id, or std::nullopt if the operation fails.\n+     */\n+    std::optional<NodeId> ConnectAndMakeNodeId(const std::variant<CService, StringHostIntPort>& to,",
      "path": "src/common/sockman.h",
      "position": 103,
      "original_position": 50,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "3bb0145514978092ae966e30693cf619e4034837",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "3bb0145514978092ae966e30693cf619e4034837\r\n\r\nThis is great. Won't be needed immediately for HTTP or StratumV2 but means we can more easily remove libevent from `bitcoin-cli` !",
      "created_at": "2024-10-17T17:44:51Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805171602",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805171602"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 103,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805205812",
      "pull_request_review_id": 2373476515,
      "id": 1805205812,
      "node_id": "PRRC_kwDOABII585rmUE0",
      "diff_hunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#include <config/bitcoin-config.h> // IWYU pragma: keep\n+\n+#include <common/sockman.h>\n+#include <logging.h>\n+#include <netbase.h>\n+#include <util/sock.h>\n+\n+bool SockMan::BindListenPort(const CService& addrBind, bilingual_str& strError)\n+{\n+    int nOne = 1;\n+\n+    // Create socket for listening for incoming connections\n+    struct sockaddr_storage sockaddr;\n+    socklen_t len = sizeof(sockaddr);\n+    if (!addrBind.GetSockAddr((struct sockaddr*)&sockaddr, &len))\n+    {\n+        strError = strprintf(Untranslated(\"Bind address family for %s not supported\"), addrBind.ToStringAddrPort());\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n+        return false;\n+    }\n+\n+    std::unique_ptr<Sock> sock = CreateSock(addrBind.GetSAFamily(), SOCK_STREAM, IPPROTO_TCP);\n+    if (!sock) {\n+        strError = strprintf(Untranslated(\"Couldn't open socket for incoming connections (socket returned error %s)\"), NetworkErrorString(WSAGetLastError()));\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n+        return false;\n+    }\n+\n+    // Allow binding if the port is still in TIME_WAIT state after\n+    // the program was closed and restarted.\n+    if (sock->SetSockOpt(SOL_SOCKET, SO_REUSEADDR, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\n+        strError = strprintf(Untranslated(\"Error setting SO_REUSEADDR on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+        LogPrintf(\"%s\\n\", strError.original);\n+    }\n+\n+    // some systems don't have IPV6_V6ONLY but are always v6only; others do have the option\n+    // and enable it by default or not. Try to enable it, if possible.\n+    if (addrBind.IsIPv6()) {\n+#ifdef IPV6_V6ONLY\n+        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_V6ONLY, (sockopt_arg_type)&nOne, sizeof(int)) == SOCKET_ERROR) {\n+            strError = strprintf(Untranslated(\"Error setting IPV6_V6ONLY on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+            LogPrintf(\"%s\\n\", strError.original);\n+        }\n+#endif\n+#ifdef WIN32\n+        int nProtLevel = PROTECTION_LEVEL_UNRESTRICTED;\n+        if (sock->SetSockOpt(IPPROTO_IPV6, IPV6_PROTECTION_LEVEL, (const char*)&nProtLevel, sizeof(int)) == SOCKET_ERROR) {\n+            strError = strprintf(Untranslated(\"Error setting IPV6_PROTECTION_LEVEL on socket: %s, continuing anyway\"), NetworkErrorString(WSAGetLastError()));\n+            LogPrintf(\"%s\\n\", strError.original);\n+        }\n+#endif\n+    }\n+",
      "path": "src/common/sockman.cpp",
      "position": 88,
      "original_position": 57,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "41c87ddb3d7a18d2c0fa7eccfbde57e9d6e898c2",
      "in_reply_to_id": 1803692315,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Moved to `NewSockAccepted()` in 9d1b352a4d050ec88b59cdf59209c0f086fea4e6",
      "created_at": "2024-10-17T18:04:36Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805205812",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805205812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 88,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805233524",
      "pull_request_review_id": 2373476515,
      "id": 1805233524,
      "node_id": "PRRC_kwDOABII585rma10",
      "diff_hunk": "@@ -63,6 +96,16 @@ class SockMan\n     // Pure virtual functions must be implemented by children classes.\n     //\n \n+    /**\n+     * Be notified when a new connection has been accepted.\n+     * @param[in] sock Connected socket to communicate with the peer.\n+     * @param[in] me The address and port at our side of the connection.\n+     * @param[in] them The address and port at the peer's side of the connection.\n+     */\n+    virtual void EventNewConnectionAccepted(std::unique_ptr<Sock>&& sock,",
      "path": "src/common/sockman.h",
      "position": null,
      "original_position": 77,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc",
      "in_reply_to_id": 1804998403,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "resolved in b94f9d338fd0d3b47a4ea6165ce9cde48f3b19bc",
      "created_at": "2024-10-17T18:22:07Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1805233524",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1805233524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1806645938",
      "pull_request_review_id": 2373476515,
      "id": 1806645938,
      "node_id": "PRRC_kwDOABII585rrzqy",
      "diff_hunk": "@@ -262,8 +335,16 @@ void SockMan::EventIOLoopCompletedForAllPeers() {}\n \n void SockMan::EventI2PListen(const CService&, bool) {}\n \n+void SockMan::TestOnlyAddExistentNode(NodeId node_id, std::unique_ptr<Sock>&& sock)\n+{\n+    LOCK(m_connected_mutex);\n+    m_connected.emplace(node_id, std::make_shared<NodeSockets>(std::move(sock)));",
      "path": "src/common/sockman.cpp",
      "position": null,
      "original_position": 149,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "c133a634d10e172652ebbf05ca114037c8e551b9",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "c133a634d10e172652ebbf05ca114037c8e551b9\r\n\r\nI know this is for testing only, but what happens if there is a NodeId collision (An existing node is inserted with a duplicate ID, replacing a connected node in sockman)?",
      "created_at": "2024-10-18T14:57:30Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1806645938",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1806645938"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 282,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1806666862",
      "pull_request_review_id": 2373476515,
      "id": 1806666862,
      "node_id": "PRRC_kwDOABII585rr4xu",
      "diff_hunk": "@@ -297,3 +378,151 @@ void SockMan::ThreadI2PAccept()\n         err_wait = err_wait_begin;\n     }\n }\n+\n+void SockMan::ThreadSocketHandler()\n+{\n+    AssertLockNotHeld(m_connected_mutex);\n+\n+    while (!interruptNet) {\n+        EventIOLoopCompletedForAllPeers();\n+\n+        // Check for the readiness of the already connected sockets and the\n+        // listening sockets in one call (\"readiness\" as in poll(2) or\n+        // select(2)). If none are ready, wait for a short while and return\n+        // empty sets.\n+        auto io_readiness{GenerateWaitSockets()};\n+        if (io_readiness.events_per_sock.empty() ||\n+            !io_readiness.events_per_sock.begin()->first->WaitMany(SELECT_TIMEOUT,",
      "path": "src/common/sockman.cpp",
      "position": null,
      "original_position": 177,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "c133a634d10e172652ebbf05ca114037c8e551b9",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "c133a634d10e172652ebbf05ca114037c8e551b9\r\n\r\nYou might want to add another comment here - when I was trying to handle socks myself I found this a bit weird and wrote:\r\n\r\n```\r\n    // WaitMany() mine as well be a static function, the context\r\n    // of the first Sock in the vector is not relevant.\r\n```",
      "created_at": "2024-10-18T15:13:32Z",
      "updated_at": "2024-10-18T15:14:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1806666862",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1806666862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": 394,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 340,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867660305",
      "pull_request_review_id": 2475577960,
      "id": 1867660305,
      "node_id": "PRRC_kwDOABII585vUjwR",
      "diff_hunk": "@@ -1796,10 +1796,10 @@ void CConnman::CreateNodeFromAcceptedSocket(std::unique_ptr<Sock>&& sock,\n \n     CNode* pnode = new CNode(id,\n                              std::move(sock),\n-                             addr,\n+                             CAddress{addr, NODE_NONE},\n                              CalculateKeyedNetGroup(addr),\n                              nonce,\n-                             addr_bind,\n+                             CAddress{addr_bind, NODE_NONE},",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "1bfc1ca9b6b68c6356ffc23ecf01e417152ade95",
      "in_reply_to_id": 1803679987,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`CNode::addr` needs to be `CAddress` because at least `PeerManagerImpl::PushNodeVersion()` is using `addr.nServices`.\r\n\r\n`CNode::addrBind` indeed does not need to be `CAddress`. I changed it to `CService`.",
      "created_at": "2024-12-03T12:43:35Z",
      "updated_at": "2024-12-03T12:43:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1867660305",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867660305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": 1799,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1715,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867664745",
      "pull_request_review_id": 2475584933,
      "id": 1867664745,
      "node_id": "PRRC_kwDOABII585vUk1p",
      "diff_hunk": "@@ -9,9 +9,12 @@\n #include <util/sock.h>\n #include <util/translation.h>\n \n+#include <atomic>\n #include <memory>\n #include <vector>\n \n+typedef int64_t NodeId;",
      "path": "src/common/sockman.h",
      "position": 23,
      "original_position": 8,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "5d4920f630417ceeee1c79304faac6803795cd64",
      "in_reply_to_id": 1804940161,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "\"Peer\" is a good description for this, but that is already used in `net_processing`.",
      "created_at": "2024-12-03T12:46:38Z",
      "updated_at": "2024-12-03T12:46:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1867664745",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867664745"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867697664",
      "pull_request_review_id": 2475640361,
      "id": 1867697664,
      "node_id": "PRRC_kwDOABII585vUs4A",
      "diff_hunk": "@@ -45,12 +45,13 @@ FUZZ_TARGET(connman, .init = initialize_connman)\n     connman.Init(options);\n \n     CNetAddr random_netaddr;\n-    CNode random_node = ConsumeNode(fuzzed_data_provider);\n+    NodeId node_id{0};\n+    CNode random_node = ConsumeNode(fuzzed_data_provider, node_id++);",
      "path": "src/test/fuzz/connman.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "b96beb27d2b3d06a45644c537c114a08f0ccd285",
      "in_reply_to_id": 1805115729,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`GetNewNodeId()` is private. Not worth weakening the encapsulation for this test.",
      "created_at": "2024-12-03T13:10:42Z",
      "updated_at": "2024-12-03T13:10:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1867697664",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867697664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": 48,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 49,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867701118",
      "pull_request_review_id": 2475646217,
      "id": 1867701118,
      "node_id": "PRRC_kwDOABII585vUtt-",
      "diff_hunk": "@@ -111,6 +111,22 @@ class SockMan\n     // alone to use the default implementation from SockMan.\n     //\n \n+    /**\n+     * SockMan would only call EventReadyToSend() if this returns true.\n+     * Can be used to temporary pause sends for a node.\n+     * The implementation in SockMan always returns true.\n+     * @param[in] node_id Node for which to confirm or cancel a call to EventReadyToSend().\n+     */\n+    virtual bool ShouldTryToSend(NodeId node_id) const;\n+\n+    /**\n+     * SockMan would only call Recv() on a node's socket if this returns true.\n+     * Can be used to temporary pause receives for a node.",
      "path": "src/common/sockman.h",
      "position": null,
      "original_position": 14,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "bb5b91d430026c4826a2107c8c1a311518cc97ce",
      "in_reply_to_id": 1805124507,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-12-03T13:13:11Z",
      "updated_at": "2024-12-03T13:13:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1867701118",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867701118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867731551",
      "pull_request_review_id": 2475696688,
      "id": 1867731551,
      "node_id": "PRRC_kwDOABII585vU1Jf",
      "diff_hunk": "@@ -2013,6 +2013,29 @@ bool CConnman::ShouldTryToRecv(NodeId node_id) const\n     return !node->fPauseRecv;\n }\n \n+void CConnman::EventIOLoopCompletedForNode(NodeId node_id)\n+{\n+    AssertLockNotHeld(m_nodes_mutex);\n+\n+    CNode* node{GetNodeById(node_id)};\n+    if (node == nullptr) {\n+        return;\n+    }\n+\n+    if (InactivityCheck(*node)) {\n+        node->fDisconnect = true;\n+    }\n+}\n+\n+void CConnman::EventIOLoopCompletedForAllPeers()\n+{\n+    AssertLockNotHeld(m_nodes_mutex);\n+    AssertLockNotHeld(m_reconnections_mutex);\n+\n+    DisconnectNodes();",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "50cb52470ea6cc4de5a5e5260b8f308353942ec0",
      "in_reply_to_id": 1805142536,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good observation. I guess this is the nature of things: accepting new connections is driven (initiated) by low level socket event when a new connection arrives, while disconnecting can be low level driven or high level driven - e.g. misbehaving peer at the application layer.\r\n\r\nI extended the comment of `EventIOLoopCompletedForAllPeers()` a little bit:\r\n\r\n```diff\r\n    -+     * Can be used to execute periodic tasks for all nodes.                   \r\n    ++     * Can be used to execute periodic tasks for all nodes, like disconnecting\r\n    ++     * nodes due to higher level logic.           \r\n```",
      "created_at": "2024-12-03T13:34:07Z",
      "updated_at": "2024-12-03T13:34:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1867731551",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867731551"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2035,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867742015",
      "pull_request_review_id": 2475714232,
      "id": 1867742015,
      "node_id": "PRRC_kwDOABII585vU3s_",
      "diff_hunk": "@@ -10,6 +10,19 @@\n #include <util/sock.h>\n #include <util/thread.h>\n \n+CService GetBindAddress(const Sock& sock)\n+{\n+    CService addr_bind;\n+    struct sockaddr_storage sockaddr_bind;\n+    socklen_t sockaddr_bind_len = sizeof(sockaddr_bind);\n+    if (!sock.GetSockName((struct sockaddr*)&sockaddr_bind, &sockaddr_bind_len)) {",
      "path": "src/common/sockman.cpp",
      "position": 24,
      "original_position": 9,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "3bb0145514978092ae966e30693cf619e4034837",
      "in_reply_to_id": 1805157675,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think we have an official recommendation. My personal preference is to not treat integers as booleans: use `if (x == 0)` instead of `if (!x)` when `x` is an integer. But I am leaving this as it is because it is like that in `master` and this PR only moves it from `net.cpp` to `sockman.cpp` verbatim. I hope it is easier to reviewers to just check that a blob of code is moved without having to validate its correctness since that same code is already in `master`. This helps with such moves:\r\n\r\n`~/.gitconfig`:\r\n```\r\n[diff]  \r\n        colorMoved = dimmed-zebra\r\n        colorMovedWS = allow-indentation-change\r\n```",
      "created_at": "2024-12-03T13:41:11Z",
      "updated_at": "2024-12-03T13:41:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1867742015",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867742015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 24,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867749410",
      "pull_request_review_id": 2475726387,
      "id": 1867749410,
      "node_id": "PRRC_kwDOABII585vU5gi",
      "diff_hunk": "@@ -10,6 +10,19 @@\n #include <util/sock.h>\n #include <util/thread.h>\n \n+CService GetBindAddress(const Sock& sock)",
      "path": "src/common/sockman.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "3bb0145514978092ae966e30693cf619e4034837",
      "in_reply_to_id": 1805160999,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe yes, but `sock.{h,cpp}` does not currently include `netaddress.h` and I guess including it may cause circular dependency. It would also increase the scope of this PR. I am leaving it as it is.",
      "created_at": "2024-12-03T13:46:07Z",
      "updated_at": "2024-12-03T13:46:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1867749410",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867749410"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867761722",
      "pull_request_review_id": 2475746404,
      "id": 1867761722,
      "node_id": "PRRC_kwDOABII585vU8g6",
      "diff_hunk": "@@ -262,8 +335,16 @@ void SockMan::EventIOLoopCompletedForAllPeers() {}\n \n void SockMan::EventI2PListen(const CService&, bool) {}\n \n+void SockMan::TestOnlyAddExistentNode(NodeId node_id, std::unique_ptr<Sock>&& sock)\n+{\n+    LOCK(m_connected_mutex);\n+    m_connected.emplace(node_id, std::make_shared<NodeSockets>(std::move(sock)));",
      "path": "src/common/sockman.cpp",
      "position": null,
      "original_position": 149,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "c133a634d10e172652ebbf05ca114037c8e551b9",
      "in_reply_to_id": 1806645938,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It would be a mess. I added an assert to make it clear that a test which inserts duplicate ids is broken.",
      "created_at": "2024-12-03T13:53:20Z",
      "updated_at": "2024-12-03T13:53:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1867761722",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867761722"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 282,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867768931",
      "pull_request_review_id": 2475757783,
      "id": 1867768931,
      "node_id": "PRRC_kwDOABII585vU-Rj",
      "diff_hunk": "@@ -297,3 +378,151 @@ void SockMan::ThreadI2PAccept()\n         err_wait = err_wait_begin;\n     }\n }\n+\n+void SockMan::ThreadSocketHandler()\n+{\n+    AssertLockNotHeld(m_connected_mutex);\n+\n+    while (!interruptNet) {\n+        EventIOLoopCompletedForAllPeers();\n+\n+        // Check for the readiness of the already connected sockets and the\n+        // listening sockets in one call (\"readiness\" as in poll(2) or\n+        // select(2)). If none are ready, wait for a short while and return\n+        // empty sets.\n+        auto io_readiness{GenerateWaitSockets()};\n+        if (io_readiness.events_per_sock.empty() ||\n+            !io_readiness.events_per_sock.begin()->first->WaitMany(SELECT_TIMEOUT,",
      "path": "src/common/sockman.cpp",
      "position": null,
      "original_position": 177,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "c133a634d10e172652ebbf05ca114037c8e551b9",
      "in_reply_to_id": 1806666862,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-12-03T13:57:46Z",
      "updated_at": "2024-12-03T13:57:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1867768931",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867768931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": 394,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 340,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878764170",
      "pull_request_review_id": 2493471520,
      "id": 1878764170,
      "node_id": "PRRC_kwDOABII585v-6qK",
      "diff_hunk": "@@ -0,0 +1,427 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#ifndef BITCOIN_COMMON_SOCKMAN_H\n+#define BITCOIN_COMMON_SOCKMAN_H\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <util/fs.h>\n+#include <util/sock.h>\n+#include <util/translation.h>\n+\n+#include <atomic>\n+#include <memory>\n+#include <queue>\n+#include <thread>\n+#include <variant>\n+#include <vector>\n+\n+typedef int64_t NodeId;\n+\n+/**\n+ * A socket manager class which handles socket operations.\n+ * To use this class, inherit from it and implement the pure virtual methods.\n+ * Handled operations:\n+ * - binding and listening on sockets\n+ * - starting of necessary threads to process socket operations\n+ * - accepting incoming connections\n+ * - making outbound connections\n+ * - closing connections\n+ * - waiting for IO readiness on sockets and doing send/recv accordingly\n+ */\n+class SockMan\n+{\n+public:\n+\n+    virtual ~SockMan() = default;\n+\n+    //\n+    // Non-virtual functions, to be reused by children classes.\n+    //\n+\n+    /**\n+     * Bind to a new address:port, start listening and add the listen socket to `m_listen`.\n+     * Should be called before `StartSocketsThreads()`.\n+     * @param[in] to Where to bind.\n+     * @param[out] errmsg Error string if an error occurs.\n+     * @retval true Success.\n+     * @retval false Failure, `strError` will be set.\n+     */\n+    bool BindAndStartListening(const CService& to, bilingual_str& errmsg);\n+\n+    /**\n+     * Options to influence `StartSocketsThreads()`.\n+     */\n+    struct Options {\n+        struct I2P {\n+            explicit I2P(const fs::path& file, const Proxy& proxy) : private_key_file{file}, sam_proxy{proxy} {}\n+\n+            const fs::path private_key_file;\n+            const Proxy sam_proxy;\n+        };\n+\n+        /**\n+         * I2P options. If set then a thread will be started that will accept incoming I2P connections.\n+         */\n+        std::optional<I2P> i2p;\n+    };\n+\n+    /**\n+     * Start the necessary threads for sockets IO.\n+     */\n+    void StartSocketsThreads(const Options& options);\n+\n+    /**\n+     * Join (wait for) the threads started by `StartSocketsThreads()` to exit.\n+     */\n+    void JoinSocketsThreads();\n+\n+    /**\n+     * A more readable std::tuple<std::string, uint16_t> for host and port.\n+     */\n+    struct StringHostIntPort {\n+        const std::string& host;\n+        uint16_t port;\n+    };\n+\n+    /**\n+     * Make an outbound connection, save the socket internally and return a newly generated node id.\n+     * @param[in] to The address to connect to, either as CService or a host as string and port as\n+     * an integer, if the later is used, then `proxy` must be valid.\n+     * @param[in] is_important If true, then log failures with higher severity.\n+     * @param[in] proxy Proxy to connect through if `proxy.IsValid()` is true.\n+     * @param[out] proxy_failed If `proxy` is valid and the connection failed because of the\n+     * proxy, then it will be set to true.\n+     * @param[out] me If the connection was successful then this is set to the address on the\n+     * local side of the socket.\n+     * @return Newly generated node id, or std::nullopt if the operation fails.\n+     */\n+    std::optional<NodeId> ConnectAndMakeNodeId(const std::variant<CService, StringHostIntPort>& to,\n+                                               bool is_important,\n+                                               const Proxy& proxy,\n+                                               bool& proxy_failed,\n+                                               CService& me)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_connected_mutex, !m_unused_i2p_sessions_mutex);\n+\n+    /**\n+     * Disconnect a given peer by closing its socket and release resources occupied by it.\n+     * @return Whether the peer existed and its socket was closed by this call.\n+     */\n+    bool CloseConnection(NodeId node_id)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_connected_mutex);\n+\n+    /**\n+     * Try to send some data to the given node.\n+     * @param[in] node_id Identifier of the node to send to.\n+     * @param[in] data The data to send, it might happen that only a prefix of this is sent.\n+     * @param[in] will_send_more Used as an optimization if the caller knows that they will\n+     * be sending more data soon after this call.\n+     * @param[out] errmsg If <0 is returned then this will contain a human readable message\n+     * explaining the error.\n+     * @retval >=0 The number of bytes actually sent.\n+     * @retval <0 A permanent error has occurred.\n+     */\n+    ssize_t SendBytes(NodeId node_id,\n+                      Span<const unsigned char> data,",
      "path": "src/common/sockman.h",
      "position": null,
      "original_position": 128,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "645f625e29b36321bcba8db5758b0428b8ebd80f",
      "in_reply_to_id": null,
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why not use std::span? I thought `Span` was only a temporary fill-in until C++20 something something? Also, I'm using std::span elsewhere... is `Span` the preference?",
      "created_at": "2024-12-10T20:12:05Z",
      "updated_at": "2024-12-10T20:12:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1878764170",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878764170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1886282291",
      "pull_request_review_id": 2505319114,
      "id": 1886282291,
      "node_id": "PRRC_kwDOABII585wbmIz",
      "diff_hunk": "@@ -0,0 +1,427 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#ifndef BITCOIN_COMMON_SOCKMAN_H\n+#define BITCOIN_COMMON_SOCKMAN_H\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <util/fs.h>\n+#include <util/sock.h>\n+#include <util/translation.h>\n+\n+#include <atomic>\n+#include <memory>\n+#include <queue>\n+#include <thread>\n+#include <variant>\n+#include <vector>\n+\n+typedef int64_t NodeId;\n+\n+/**\n+ * A socket manager class which handles socket operations.\n+ * To use this class, inherit from it and implement the pure virtual methods.\n+ * Handled operations:\n+ * - binding and listening on sockets\n+ * - starting of necessary threads to process socket operations\n+ * - accepting incoming connections\n+ * - making outbound connections\n+ * - closing connections\n+ * - waiting for IO readiness on sockets and doing send/recv accordingly\n+ */\n+class SockMan\n+{\n+public:\n+\n+    virtual ~SockMan() = default;\n+\n+    //\n+    // Non-virtual functions, to be reused by children classes.\n+    //\n+\n+    /**\n+     * Bind to a new address:port, start listening and add the listen socket to `m_listen`.\n+     * Should be called before `StartSocketsThreads()`.\n+     * @param[in] to Where to bind.\n+     * @param[out] errmsg Error string if an error occurs.\n+     * @retval true Success.\n+     * @retval false Failure, `strError` will be set.\n+     */\n+    bool BindAndStartListening(const CService& to, bilingual_str& errmsg);\n+\n+    /**\n+     * Options to influence `StartSocketsThreads()`.\n+     */\n+    struct Options {\n+        struct I2P {\n+            explicit I2P(const fs::path& file, const Proxy& proxy) : private_key_file{file}, sam_proxy{proxy} {}\n+\n+            const fs::path private_key_file;\n+            const Proxy sam_proxy;\n+        };\n+\n+        /**\n+         * I2P options. If set then a thread will be started that will accept incoming I2P connections.\n+         */\n+        std::optional<I2P> i2p;\n+    };\n+\n+    /**\n+     * Start the necessary threads for sockets IO.\n+     */\n+    void StartSocketsThreads(const Options& options);\n+\n+    /**\n+     * Join (wait for) the threads started by `StartSocketsThreads()` to exit.\n+     */\n+    void JoinSocketsThreads();\n+\n+    /**\n+     * A more readable std::tuple<std::string, uint16_t> for host and port.\n+     */\n+    struct StringHostIntPort {\n+        const std::string& host;\n+        uint16_t port;\n+    };\n+\n+    /**\n+     * Make an outbound connection, save the socket internally and return a newly generated node id.\n+     * @param[in] to The address to connect to, either as CService or a host as string and port as\n+     * an integer, if the later is used, then `proxy` must be valid.\n+     * @param[in] is_important If true, then log failures with higher severity.\n+     * @param[in] proxy Proxy to connect through if `proxy.IsValid()` is true.\n+     * @param[out] proxy_failed If `proxy` is valid and the connection failed because of the\n+     * proxy, then it will be set to true.\n+     * @param[out] me If the connection was successful then this is set to the address on the\n+     * local side of the socket.\n+     * @return Newly generated node id, or std::nullopt if the operation fails.\n+     */\n+    std::optional<NodeId> ConnectAndMakeNodeId(const std::variant<CService, StringHostIntPort>& to,\n+                                               bool is_important,\n+                                               const Proxy& proxy,\n+                                               bool& proxy_failed,\n+                                               CService& me)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_connected_mutex, !m_unused_i2p_sessions_mutex);\n+\n+    /**\n+     * Disconnect a given peer by closing its socket and release resources occupied by it.\n+     * @return Whether the peer existed and its socket was closed by this call.\n+     */\n+    bool CloseConnection(NodeId node_id)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_connected_mutex);\n+\n+    /**\n+     * Try to send some data to the given node.\n+     * @param[in] node_id Identifier of the node to send to.\n+     * @param[in] data The data to send, it might happen that only a prefix of this is sent.\n+     * @param[in] will_send_more Used as an optimization if the caller knows that they will\n+     * be sending more data soon after this call.\n+     * @param[out] errmsg If <0 is returned then this will contain a human readable message\n+     * explaining the error.\n+     * @retval >=0 The number of bytes actually sent.\n+     * @retval <0 A permanent error has occurred.\n+     */\n+    ssize_t SendBytes(NodeId node_id,\n+                      Span<const unsigned char> data,",
      "path": "src/common/sockman.h",
      "position": null,
      "original_position": 128,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "645f625e29b36321bcba8db5758b0428b8ebd80f",
      "in_reply_to_id": 1878764170,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Even in relatively new code folks often use `Span`, e.g. #30043. cc @sipa, @laanwj",
      "created_at": "2024-12-16T07:10:15Z",
      "updated_at": "2024-12-16T07:10:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1886282291",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1886282291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1891188093",
      "pull_request_review_id": 2513401237,
      "id": 1891188093,
      "node_id": "PRRC_kwDOABII585wuT19",
      "diff_hunk": "@@ -0,0 +1,427 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#ifndef BITCOIN_COMMON_SOCKMAN_H\n+#define BITCOIN_COMMON_SOCKMAN_H\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <util/fs.h>\n+#include <util/sock.h>\n+#include <util/translation.h>\n+\n+#include <atomic>\n+#include <memory>\n+#include <queue>\n+#include <thread>\n+#include <variant>\n+#include <vector>\n+\n+typedef int64_t NodeId;\n+\n+/**\n+ * A socket manager class which handles socket operations.\n+ * To use this class, inherit from it and implement the pure virtual methods.\n+ * Handled operations:\n+ * - binding and listening on sockets\n+ * - starting of necessary threads to process socket operations\n+ * - accepting incoming connections\n+ * - making outbound connections\n+ * - closing connections\n+ * - waiting for IO readiness on sockets and doing send/recv accordingly\n+ */\n+class SockMan\n+{\n+public:\n+\n+    virtual ~SockMan() = default;\n+\n+    //\n+    // Non-virtual functions, to be reused by children classes.\n+    //\n+\n+    /**\n+     * Bind to a new address:port, start listening and add the listen socket to `m_listen`.\n+     * Should be called before `StartSocketsThreads()`.\n+     * @param[in] to Where to bind.\n+     * @param[out] errmsg Error string if an error occurs.\n+     * @retval true Success.\n+     * @retval false Failure, `strError` will be set.\n+     */\n+    bool BindAndStartListening(const CService& to, bilingual_str& errmsg);\n+\n+    /**\n+     * Options to influence `StartSocketsThreads()`.\n+     */\n+    struct Options {\n+        struct I2P {\n+            explicit I2P(const fs::path& file, const Proxy& proxy) : private_key_file{file}, sam_proxy{proxy} {}\n+\n+            const fs::path private_key_file;\n+            const Proxy sam_proxy;\n+        };\n+\n+        /**\n+         * I2P options. If set then a thread will be started that will accept incoming I2P connections.\n+         */\n+        std::optional<I2P> i2p;\n+    };\n+\n+    /**\n+     * Start the necessary threads for sockets IO.\n+     */\n+    void StartSocketsThreads(const Options& options);\n+\n+    /**\n+     * Join (wait for) the threads started by `StartSocketsThreads()` to exit.\n+     */\n+    void JoinSocketsThreads();\n+\n+    /**\n+     * A more readable std::tuple<std::string, uint16_t> for host and port.\n+     */\n+    struct StringHostIntPort {\n+        const std::string& host;\n+        uint16_t port;\n+    };\n+\n+    /**\n+     * Make an outbound connection, save the socket internally and return a newly generated node id.\n+     * @param[in] to The address to connect to, either as CService or a host as string and port as\n+     * an integer, if the later is used, then `proxy` must be valid.\n+     * @param[in] is_important If true, then log failures with higher severity.\n+     * @param[in] proxy Proxy to connect through if `proxy.IsValid()` is true.\n+     * @param[out] proxy_failed If `proxy` is valid and the connection failed because of the\n+     * proxy, then it will be set to true.\n+     * @param[out] me If the connection was successful then this is set to the address on the\n+     * local side of the socket.\n+     * @return Newly generated node id, or std::nullopt if the operation fails.\n+     */\n+    std::optional<NodeId> ConnectAndMakeNodeId(const std::variant<CService, StringHostIntPort>& to,\n+                                               bool is_important,\n+                                               const Proxy& proxy,\n+                                               bool& proxy_failed,\n+                                               CService& me)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_connected_mutex, !m_unused_i2p_sessions_mutex);\n+\n+    /**\n+     * Disconnect a given peer by closing its socket and release resources occupied by it.\n+     * @return Whether the peer existed and its socket was closed by this call.\n+     */\n+    bool CloseConnection(NodeId node_id)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_connected_mutex);\n+\n+    /**\n+     * Try to send some data to the given node.\n+     * @param[in] node_id Identifier of the node to send to.\n+     * @param[in] data The data to send, it might happen that only a prefix of this is sent.\n+     * @param[in] will_send_more Used as an optimization if the caller knows that they will\n+     * be sending more data soon after this call.\n+     * @param[out] errmsg If <0 is returned then this will contain a human readable message\n+     * explaining the error.\n+     * @retval >=0 The number of bytes actually sent.\n+     * @retval <0 A permanent error has occurred.\n+     */\n+    ssize_t SendBytes(NodeId node_id,\n+                      Span<const unsigned char> data,",
      "path": "src/common/sockman.h",
      "position": null,
      "original_position": 128,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "645f625e29b36321bcba8db5758b0428b8ebd80f",
      "in_reply_to_id": 1878764170,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Must have been just inertia. The caller of the newly added `SendBytes()` has an argument that is already `Span` from elsewhere in the code, coming from here:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/c1252b14d714448295200a595086dd3e78b46c8f/src/net.h#L307-L311\r\n\r\nNow I changed the argument of the newly added `SendBytes()` to `std::span`, looks better and the `Span` variable is accepted. Thanks!\r\n\r\nwen `s/Span/std::span/` all over the place?",
      "created_at": "2024-12-19T05:47:48Z",
      "updated_at": "2024-12-19T05:47:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1891188093",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1891188093"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1892975685",
      "pull_request_review_id": 2515908987,
      "id": 1892975685,
      "node_id": "PRRC_kwDOABII585w1IRF",
      "diff_hunk": "@@ -0,0 +1,427 @@\n+// Copyright (c) 2024-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or https://opensource.org/license/mit/.\n+\n+#ifndef BITCOIN_COMMON_SOCKMAN_H\n+#define BITCOIN_COMMON_SOCKMAN_H\n+\n+#include <i2p.h>\n+#include <netaddress.h>\n+#include <netbase.h>\n+#include <util/fs.h>\n+#include <util/sock.h>\n+#include <util/translation.h>\n+\n+#include <atomic>\n+#include <memory>\n+#include <queue>\n+#include <thread>\n+#include <variant>\n+#include <vector>\n+\n+typedef int64_t NodeId;\n+\n+/**\n+ * A socket manager class which handles socket operations.\n+ * To use this class, inherit from it and implement the pure virtual methods.\n+ * Handled operations:\n+ * - binding and listening on sockets\n+ * - starting of necessary threads to process socket operations\n+ * - accepting incoming connections\n+ * - making outbound connections\n+ * - closing connections\n+ * - waiting for IO readiness on sockets and doing send/recv accordingly\n+ */\n+class SockMan\n+{\n+public:\n+\n+    virtual ~SockMan() = default;\n+\n+    //\n+    // Non-virtual functions, to be reused by children classes.\n+    //\n+\n+    /**\n+     * Bind to a new address:port, start listening and add the listen socket to `m_listen`.\n+     * Should be called before `StartSocketsThreads()`.\n+     * @param[in] to Where to bind.\n+     * @param[out] errmsg Error string if an error occurs.\n+     * @retval true Success.\n+     * @retval false Failure, `strError` will be set.\n+     */\n+    bool BindAndStartListening(const CService& to, bilingual_str& errmsg);\n+\n+    /**\n+     * Options to influence `StartSocketsThreads()`.\n+     */\n+    struct Options {\n+        struct I2P {\n+            explicit I2P(const fs::path& file, const Proxy& proxy) : private_key_file{file}, sam_proxy{proxy} {}\n+\n+            const fs::path private_key_file;\n+            const Proxy sam_proxy;\n+        };\n+\n+        /**\n+         * I2P options. If set then a thread will be started that will accept incoming I2P connections.\n+         */\n+        std::optional<I2P> i2p;\n+    };\n+\n+    /**\n+     * Start the necessary threads for sockets IO.\n+     */\n+    void StartSocketsThreads(const Options& options);\n+\n+    /**\n+     * Join (wait for) the threads started by `StartSocketsThreads()` to exit.\n+     */\n+    void JoinSocketsThreads();\n+\n+    /**\n+     * A more readable std::tuple<std::string, uint16_t> for host and port.\n+     */\n+    struct StringHostIntPort {\n+        const std::string& host;\n+        uint16_t port;\n+    };\n+\n+    /**\n+     * Make an outbound connection, save the socket internally and return a newly generated node id.\n+     * @param[in] to The address to connect to, either as CService or a host as string and port as\n+     * an integer, if the later is used, then `proxy` must be valid.\n+     * @param[in] is_important If true, then log failures with higher severity.\n+     * @param[in] proxy Proxy to connect through if `proxy.IsValid()` is true.\n+     * @param[out] proxy_failed If `proxy` is valid and the connection failed because of the\n+     * proxy, then it will be set to true.\n+     * @param[out] me If the connection was successful then this is set to the address on the\n+     * local side of the socket.\n+     * @return Newly generated node id, or std::nullopt if the operation fails.\n+     */\n+    std::optional<NodeId> ConnectAndMakeNodeId(const std::variant<CService, StringHostIntPort>& to,\n+                                               bool is_important,\n+                                               const Proxy& proxy,\n+                                               bool& proxy_failed,\n+                                               CService& me)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_connected_mutex, !m_unused_i2p_sessions_mutex);\n+\n+    /**\n+     * Disconnect a given peer by closing its socket and release resources occupied by it.\n+     * @return Whether the peer existed and its socket was closed by this call.\n+     */\n+    bool CloseConnection(NodeId node_id)\n+        EXCLUSIVE_LOCKS_REQUIRED(!m_connected_mutex);\n+\n+    /**\n+     * Try to send some data to the given node.\n+     * @param[in] node_id Identifier of the node to send to.\n+     * @param[in] data The data to send, it might happen that only a prefix of this is sent.\n+     * @param[in] will_send_more Used as an optimization if the caller knows that they will\n+     * be sending more data soon after this call.\n+     * @param[out] errmsg If <0 is returned then this will contain a human readable message\n+     * explaining the error.\n+     * @retval >=0 The number of bytes actually sent.\n+     * @retval <0 A permanent error has occurred.\n+     */\n+    ssize_t SendBytes(NodeId node_id,\n+                      Span<const unsigned char> data,",
      "path": "src/common/sockman.h",
      "position": null,
      "original_position": 128,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "645f625e29b36321bcba8db5758b0428b8ebd80f",
      "in_reply_to_id": 1878764170,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> wen `s/Span/std::span/` all over the place?\r\n\r\nnow: https://github.com/bitcoin/bitcoin/pull/31519",
      "created_at": "2024-12-19T18:36:33Z",
      "updated_at": "2024-12-19T18:36:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1892975685",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1892975685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 128,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1914992602",
      "pull_request_review_id": 2550005361,
      "id": 1914992602,
      "node_id": "PRRC_kwDOABII585yJHfa",
      "diff_hunk": "@@ -3145,13 +3145,16 @@ bool CConnman::Bind(const CService& addr_, unsigned int flags, NetPermissionFlag\n     const CService addr{MaybeFlipIPv6toCJDNS(addr_)};\n \n     bilingual_str strError;\n-    if (!BindListenPort(addr, strError)) {\n+    if (!BindAndStartListening(addr, strError)) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n         if ((flags & BF_REPORT_ERROR) && m_client_interface) {\n             m_client_interface->ThreadSafeMessageBox(strError, \"\", CClientUIInterface::MSG_ERROR);\n         }\n         return false;\n     }\n \n+    LogPrintLevel(BCLog::NET, BCLog::Level::Info, \"Bound to and listening at %s\\n\", addr.ToStringAddrPort());",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "4c23aacc2b82083f96255963f543dc35fff28334",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "4c23aacc2b82083f96255963f543dc35fff28334: I'm inclined to say \"listening **on** %s\"\r\n\r\nAs in: we bind _to_ a port in order to listen _on_ it.\r\n\r\nThe linux manual for `listen` also uses \"on\", as in \"listen for connections on a socket\"\r\nhttps://man7.org/linux/man-pages/man2/listen.2.html",
      "created_at": "2025-01-14T15:05:33Z",
      "updated_at": "2025-01-14T15:31:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1914992602",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1914992602"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1915015927",
      "pull_request_review_id": 2550005361,
      "id": 1915015927,
      "node_id": "PRRC_kwDOABII585yJNL3",
      "diff_hunk": "@@ -9,68 +9,77 @@\n #include <netbase.h>\n #include <util/sock.h>\n \n-bool SockMan::BindListenPort(const CService& addrBind, bilingual_str& strError)\n+bool SockMan::BindAndStartListening(const CService& to, bilingual_str& errmsg)",
      "path": "src/common/sockman.cpp",
      "position": 32,
      "original_position": 5,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "4c23aacc2b82083f96255963f543dc35fff28334",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "4c23aacc2b82083f96255963f543dc35fff28334: since you need to print log statements here in a few places anyway, might as well drop the `errmsg` argument and always print logs here.",
      "created_at": "2025-01-14T15:15:03Z",
      "updated_at": "2025-01-14T15:31:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1915015927",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1915015927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1915209026",
      "pull_request_review_id": 2550364600,
      "id": 1915209026,
      "node_id": "PRRC_kwDOABII585yJ8VC",
      "diff_hunk": "@@ -9,68 +9,77 @@\n #include <netbase.h>\n #include <util/sock.h>\n \n-bool SockMan::BindListenPort(const CService& addrBind, bilingual_str& strError)\n+bool SockMan::BindAndStartListening(const CService& to, bilingual_str& errmsg)",
      "path": "src/common/sockman.cpp",
      "position": 32,
      "original_position": 5,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "4c23aacc2b82083f96255963f543dc35fff28334",
      "in_reply_to_id": 1915015927,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`BindAndStartListening()` needs to return an error string to the caller, because the caller not only logs it but also passes it to `ThreadSafeMessageBox()`.",
      "created_at": "2025-01-14T16:38:24Z",
      "updated_at": "2025-01-14T16:38:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1915209026",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1915209026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1915209813",
      "pull_request_review_id": 2550365991,
      "id": 1915209813,
      "node_id": "PRRC_kwDOABII585yJ8hV",
      "diff_hunk": "@@ -3145,13 +3145,16 @@ bool CConnman::Bind(const CService& addr_, unsigned int flags, NetPermissionFlag\n     const CService addr{MaybeFlipIPv6toCJDNS(addr_)};\n \n     bilingual_str strError;\n-    if (!BindListenPort(addr, strError)) {\n+    if (!BindAndStartListening(addr, strError)) {\n+        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"%s\\n\", strError.original);\n         if ((flags & BF_REPORT_ERROR) && m_client_interface) {\n             m_client_interface->ThreadSafeMessageBox(strError, \"\", CClientUIInterface::MSG_ERROR);\n         }\n         return false;\n     }\n \n+    LogPrintLevel(BCLog::NET, BCLog::Level::Info, \"Bound to and listening at %s\\n\", addr.ToStringAddrPort());",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 13,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "4c23aacc2b82083f96255963f543dc35fff28334",
      "in_reply_to_id": 1914992602,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, `s/at/on/`",
      "created_at": "2025-01-14T16:38:52Z",
      "updated_at": "2025-01-14T16:38:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1915209813",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1915209813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3156,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1915228277",
      "pull_request_review_id": 2550393864,
      "id": 1915228277,
      "node_id": "PRRC_kwDOABII585yKBB1",
      "diff_hunk": "@@ -9,68 +9,77 @@\n #include <netbase.h>\n #include <util/sock.h>\n \n-bool SockMan::BindListenPort(const CService& addrBind, bilingual_str& strError)\n+bool SockMan::BindAndStartListening(const CService& to, bilingual_str& errmsg)",
      "path": "src/common/sockman.cpp",
      "position": 32,
      "original_position": 5,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "4c23aacc2b82083f96255963f543dc35fff28334",
      "in_reply_to_id": 1915015927,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah ok, I missed that bit.",
      "created_at": "2025-01-14T16:45:41Z",
      "updated_at": "2025-01-14T16:45:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1915228277",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1915228277"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1916382790",
      "pull_request_review_id": 2552280742,
      "id": 1916382790,
      "node_id": "PRRC_kwDOABII585yOa5G",
      "diff_hunk": "@@ -1737,7 +1737,10 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     const CService addr_bind{MaybeFlipIPv6toCJDNS(GetBindAddress(*sock))};\n \n     NetPermissionFlags permission_flags = NetPermissionFlags::None;\n-    hListenSocket.AddSocketPermissionFlags(permission_flags);\n+    auto it{m_listen_permissions.find(addr_bind)};\n+    if (it != m_listen_permissions.end()) {",
      "path": "src/net.cpp",
      "position": 386,
      "original_position": 6,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "fd81820214e695ba228a954506397c3d781fe3fe",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fd81820214e695ba228a954506397c3d781fe3fe: do want to add an `Assume` here, given that `Bind` always adds an entry?",
      "created_at": "2025-01-15T11:18:27Z",
      "updated_at": "2025-01-15T11:28:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1916382790",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1916382790"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1672,
      "original_line": 1741,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1916431512",
      "pull_request_review_id": 2552366143,
      "id": 1916431512,
      "node_id": "PRRC_kwDOABII585yOmyY",
      "diff_hunk": "@@ -2195,7 +2169,16 @@ void CConnman::SocketHandlerListening(const Sock::EventsPerSock& events_per_sock\n         }\n         const auto it = events_per_sock.find(sock);\n         if (it != events_per_sock.end() && it->second.occurred & Sock::RECV) {\n-            AcceptConnection(*sock);\n+            CService addr_accepted;\n+\n+            auto sock_accepted{AcceptConnection(*sock, addr_accepted)};\n+\n+            if (sock_accepted) {\n+                addr_accepted = MaybeFlipIPv6toCJDNS(addr_accepted);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "0241b04cf406d482abfac3fddfad9a9c28725f32",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "0241b04cf406d482abfac3fddfad9a9c28725f32: previously this would not get called if `addr.SetSockAddr` failed in `AcceptConnection`. I suspect it doesn't matter though.",
      "created_at": "2025-01-15T11:54:18Z",
      "updated_at": "2025-01-15T12:37:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1916431512",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1916431512"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1916457190",
      "pull_request_review_id": 2552366143,
      "id": 1916457190,
      "node_id": "PRRC_kwDOABII585yOtDm",
      "diff_hunk": "@@ -9,9 +9,12 @@\n #include <util/sock.h>\n #include <util/translation.h>\n \n+#include <atomic>\n #include <memory>\n #include <vector>\n \n+typedef int64_t NodeId;",
      "path": "src/common/sockman.h",
      "position": 23,
      "original_position": 8,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "5d4920f630417ceeee1c79304faac6803795cd64",
      "in_reply_to_id": 1804940161,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "1b05e1d4ba55a42ba74026b68fa4e616b973e06d: maybe `ConnectionId`?\r\n\r\nAnd then in net.h use `typedef ConnectionId NodeId;`\r\n\r\nhttps://github.com/Sjors/bitcoin/commit/f33049b45b7013022ed4c75c0bc52d878fe15fd5\r\n\r\nMost of the churn would be in `sockman.{h,cpp}`, so that seems acceptable.\r\n\r\nThat said, I don't think it's very important.",
      "created_at": "2025-01-15T12:01:48Z",
      "updated_at": "2025-01-15T12:37:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1916457190",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1916457190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1916636569",
      "pull_request_review_id": 2552728389,
      "id": 1916636569,
      "node_id": "PRRC_kwDOABII585yPY2Z",
      "diff_hunk": "@@ -59,6 +66,26 @@ class SockMan\n \n private:\n \n+    //\n+    // Pure virtual functions must be implemented by children classes.\n+    //\n+\n+    //\n+    // Non-pure virtual functions can be overridden by children classes or left\n+    // alone to use the default implementation from SockMan.\n+    //\n+\n+    /**\n+     * Be notified of a change in the state of listening for incoming I2P connections.\n+     * The default behavior, implemented by `SockMan`, is to ignore this event.\n+     * @param[in] addr Our listening address.\n+     * @param[in] success If true then the listen succeeded and we are now",
      "path": "src/common/sockman.h",
      "position": 256,
      "original_position": 31,
      "commit_id": "bcf1254e91782a33b5a1db542f3758831e0bfe2e",
      "original_commit_id": "14fcef6b0d1d1fa9395f9af2bafbf3de63d14ac2",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "14fcef6b0d1d1fa9395f9af2bafbf3de63d14ac2: I find this confusing.\r\n\r\nI think the problem starts with the strange naming of `ThreadI2PAccept`, instead of `ThreadI2PHandler` akin to `ThreadSocketHandler`.\r\n\r\nAnyway, what that thread seems to do is, in a loop, try to `Listen` on the socket and once listening, `Accept(` new connections.\r\n\r\nWhenever listening fails or succeeds it calls `EventI2PListen` which then calls `AddLocal` / `RemoveLocal` to keep the announced public addresses up to date.\r\n\r\nWith that in mind, I would call this new method `EventI2PConnectivity` and rename `success` to either `connected` or `listening`. Then the rest makes sense.",
      "created_at": "2025-01-15T13:17:31Z",
      "updated_at": "2025-01-15T13:33:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30988#discussion_r1916636569",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1916636569"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30988"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 256,
      "original_line": 82,
      "side": "RIGHT"
    }
  ]
}