{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32862",
    "id": 2638192053,
    "node_id": "PR_kwDOABII586dP521",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32862",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32862.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32862.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32862",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32862/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32862/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32862/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fcfd3db563e89fd79820a4cdfa102d624d801de1",
    "number": 32862,
    "state": "closed",
    "locked": false,
    "maintainer_can_modify": false,
    "title": "rpc: use CScheduler for relocking wallet and remove RPCTimer",
    "user": {
      "login": "pinheadmz",
      "id": 2084648,
      "node_id": "MDQ6VXNlcjIwODQ2NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pinheadmz",
      "html_url": "https://github.com/pinheadmz",
      "followers_url": "https://api.github.com/users/pinheadmz/followers",
      "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
      "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
      "repos_url": "https://api.github.com/users/pinheadmz/repos",
      "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This removes the dependency on libevent for events scheduled by RPC commands, like re-locking a wallet some time after decryption with walletpassphrase. Since walletpassphrase is currently the only RPC that does this, `RPCRunLater`, `RPCTimerInterface` and all related methods are left unused, and deleted in the second commit. Any future RPC that needs to execute a callback in the future can follow the pattern in this PR and just use a scheduler from node or wallet context.\r\n\r\n\r\nThis is an alternative approach to #32796, described in https://github.com/bitcoin/bitcoin/pull/32796#issuecomment-3014309449\r\n\r\n",
    "labels": [
      {
        "id": 98279177,
        "node_id": "MDU6TGFiZWw5ODI3OTE3Nw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/RPC/REST/ZMQ",
        "name": "RPC/REST/ZMQ",
        "color": "0052cc",
        "default": false
      }
    ],
    "created_at": "2025-07-03T11:06:19Z",
    "updated_at": "2025-07-28T14:45:36Z",
    "closed_at": "2025-07-08T00:59:31Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2025-07-08T00:59:31Z",
    "merged_by": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "a8bff38236ac988f82dcfa85438946cfe0d3afe3",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "pinheadmz:http-scheduler-notimer",
      "ref": "http-scheduler-notimer",
      "sha": "fcfd3db563e89fd79820a4cdfa102d624d801de1",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 61248407,
        "node_id": "MDEwOlJlcG9zaXRvcnk2MTI0ODQwNw==",
        "name": "bitcoin",
        "full_name": "pinheadmz/bitcoin",
        "owner": {
          "login": "pinheadmz",
          "id": 2084648,
          "node_id": "MDQ6VXNlcjIwODQ2NDg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/pinheadmz",
          "html_url": "https://github.com/pinheadmz",
          "followers_url": "https://api.github.com/users/pinheadmz/followers",
          "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
          "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
          "repos_url": "https://api.github.com/users/pinheadmz/repos",
          "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/pinheadmz/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/pinheadmz/bitcoin",
        "archive_url": "https://api.github.com/repos/pinheadmz/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/pinheadmz/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/pinheadmz/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/pinheadmz/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/pinheadmz/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/pinheadmz/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/pinheadmz/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/pinheadmz/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/pinheadmz/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/pinheadmz/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/pinheadmz/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/pinheadmz/bitcoin/events",
        "forks_url": "https://api.github.com/repos/pinheadmz/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/pinheadmz/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/pinheadmz/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/pinheadmz/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/pinheadmz/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/pinheadmz/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/pinheadmz/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/pinheadmz/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/pinheadmz/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/pinheadmz/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/pinheadmz/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:pinheadmz/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/pinheadmz/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/pinheadmz/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/pinheadmz/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/pinheadmz/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/pinheadmz/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/pinheadmz/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/pinheadmz/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/pinheadmz/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/pinheadmz/bitcoin/hooks",
        "svn_url": "https://github.com/pinheadmz/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 279188,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-07-03T11:02:40Z",
        "created_at": "2016-06-15T23:48:20Z",
        "updated_at": "2025-06-10T17:35:30Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "927e9b220f17ed64e40225b7310f56de29a47a60",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37576,
        "stargazers_count": 84787,
        "watchers_count": 84787,
        "size": 289580,
        "default_branch": "master",
        "open_issues_count": 756,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-07-28T13:33:06Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-07-28T15:00:23Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32862"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 14,
    "deletions": 187,
    "changed_files": 10,
    "commits": 2,
    "review_comments": 0,
    "comments": 9
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhhMTc2NTc5NWZkM2JmZjc5ZDc5MDEwMmNhN2NlZmE4ZmQ5YjIwNGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a1765795fd3bff79d790102ca7cefa8fd9b204c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8a1765795fd3bff79d790102ca7cefa8fd9b204c",
      "tree": {
        "sha": "c0779946600ffb03bbbe1a88e524aaa5b4b11d1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0779946600ffb03bbbe1a88e524aaa5b4b11d1b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c0779946600ffb03bbbe1a88e524aaa5b4b11d1b\nparent a92e8b10a5fb1ac25484aa17787e27b4a8632f69\nauthor Matthew Zipkin <pinheadmz@pm.me> 1751498860 -0400\ncommitter Matthew Zipkin <pinheadmz@pm.me> 1751538373 -0400\n\nuse WalletContext scheduler for walletpassphrase callback\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmhmWsgACgkQ5+KYS2KJ\nyTqXiw/+KeUuVctK9QxGU4gq+QMzk0rwfjQBr+LXA1elJM4X2QX2vqN6juugK3x4\nCzXjL/Qf2NBMG1g9SjBK0ugKJmw6sdu9fl5Sh3RizexRlzbPixxkudmX/KyzB+5K\nOMxl0nxjvK5/pxyq88fSyyiYVW+2JFE0Az6h0uaO8TUpcr9GJn9EcJApgTBDkUaF\nBNGUqjjq8XJPf29jdyid8UOpRepahPHTZMlK0xvoMeisqpD/qABZdnSzS4aeCZZC\nSBWGXGDsoe7CBwdG/all28OwddtDEwrDYHT8DzKMlnCzN4JsnxJwcVauVYSddBUO\nIhl59ckSiJ2llDTDTRRA2SKEZpgwHv+KZWzj+yVM6Ct+nwql2Juah3iyjgMFQe1O\nOS+3YiF/rPK7TB/Vyy8nDai1vpqN8Hl0O1fsoYWpvgVpFDRC0e3MyyYfpJpTRl6L\nVWQ+94wjEg78RM9TLwtMccuJA5lUbp9d+GDHJF7Nx9+AWPFFBn2JDs3HOFi7u4Bg\nALWmNIC2/tHMSNA1WKs7Rx8brIhqKtGLa9ZIirdEtCXGcgEzw/Ak0wYFBERTdL5q\n+FYjLEb/523dm66HP7XKfjRSMNKJbuCKKVfjwr7iGqFjKyuY2HdffOZAvICy9ysD\nkiZKgOR5VV0/jQa86XvgaTbYJBC8x7rjU1wUGts7ccH+YF4UZ5I=\n=ufrU\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a92e8b10a5fb1ac25484aa17787e27b4a8632f69",
          "sha": "a92e8b10a5fb1ac25484aa17787e27b4a8632f69",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a92e8b10a5fb1ac25484aa17787e27b4a8632f69"
        }
      ],
      "message": "use WalletContext scheduler for walletpassphrase callback",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@pm.me",
        "date": "2025-07-03T10:26:13Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@pm.me",
        "date": "2025-07-02T23:27:40Z"
      },
      "sha": "8a1765795fd3bff79d790102ca7cefa8fd9b204c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZjZmQzZGI1NjNlODlmZDc5ODIwYTRjZGZhMTAyZDYyNGQ4MDFkZTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fcfd3db563e89fd79820a4cdfa102d624d801de1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fcfd3db563e89fd79820a4cdfa102d624d801de1",
      "tree": {
        "sha": "9ec1ea8c01a6cb7055bba64af0ab922ce6a0ed50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ec1ea8c01a6cb7055bba64af0ab922ce6a0ed50"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 9ec1ea8c01a6cb7055bba64af0ab922ce6a0ed50\nparent 8a1765795fd3bff79d790102ca7cefa8fd9b204c\nauthor Matthew Zipkin <pinheadmz@pm.me> 1751499812 -0400\ncommitter Matthew Zipkin <pinheadmz@pm.me> 1751538383 -0400\n\nremove RPCTimerInterface and RPCRunLater\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hdzzW4BBA4vG9eM5+KYS2KJyToFAmhmWs8ACgkQ5+KYS2KJ\nyTqCLxAArMIMaQYACCmD1pmK3Ws3Ylu7nItxnigMw3yXOMKDnCckNd8t37c5miTo\nb1ce/mB1v8Awvzrmqh8tx7C8+83+6zDjTU7kL46GIS+MSwGAJNPkcf1wP97m2MQ2\nNazctbh2j9H3mna/IdCnN5qkRMPx3iyyArzRQyzrDCT8wX3VmuzjusI6Kg4UdUHt\n2J41pBr8KiFV6OGfkyVyiQehBGOAPD2xNDq+iKJi8cRoLlRlD0dYYwtQvdXBpPJS\n4yGPMI7BuUGzBQ+BdPsVabVIjNlk2LTrO+ZSTS/Qan7JPAbiKTPHkvKGExLdMiEk\ngXjasdqWY2RTNjfGIiy5gHMu6FG2CyfViZR7mj+J7Y/ucBfKiIolawIydCJPjVmT\noyZpEybDaOWyMnPk+X+/cIO0+r14nLkWRa4tgxoiHI+wZX2lc/JAa8vil0C6ZVyc\nczfTAugsN2dfyElVe5vb4D63BSeAVkOtNidYxDQL8SIwEKKDhbOZboSDcl4jc7yW\nV3W6FCmFlB+8rlcUhDaYVNULCAv8bbJuZe5OV6V6tr0Z73cqfWIZxe0/JzaEYNT6\nTN9lYopv9vphoeepWZ5XF15v5Edux3PguKr5/bO9xH3B0gSuTIS+DnRATaDkya9v\nEPRNFXmJ0FroMSD3QevQ7h4PB9dvEK2+kxfE1eZNGTR6n8uEvdI=\n=1cCD\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a1765795fd3bff79d790102ca7cefa8fd9b204c",
          "sha": "8a1765795fd3bff79d790102ca7cefa8fd9b204c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/8a1765795fd3bff79d790102ca7cefa8fd9b204c"
        }
      ],
      "message": "remove RPCTimerInterface and RPCRunLater",
      "committer": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@pm.me",
        "date": "2025-07-03T10:26:23Z"
      },
      "author": {
        "name": "Matthew Zipkin",
        "email": "pinheadmz@pm.me",
        "date": "2025-07-02T23:43:32Z"
      },
      "sha": "fcfd3db563e89fd79820a4cdfa102d624d801de1"
    },
    {
      "event": "labeled",
      "id": 18450508490,
      "node_id": "LE_lADOABII586-rL1ezwAAAARLvGrK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18450508490",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-03T11:06:23Z",
      "label": {
        "name": "RPC/REST/ZMQ",
        "color": "0052cc"
      }
    },
    {
      "event": "commented",
      "id": 3031861048,
      "node_id": "IC_kwDOABII5860toc4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3031861048",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-03T11:06:25Z",
      "updated_at": "2025-07-08T00:32:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32862.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [furszy](https://github.com/bitcoin/bitcoin/pull/32862#pullrequestreview-2983397697), [fjahr](https://github.com/bitcoin/bitcoin/pull/32862#issuecomment-3040312858), [achow101](https://github.com/bitcoin/bitcoin/pull/32862#issuecomment-3046962563) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#bitcoin-core/gui/866](https://github.com/bitcoin-core/gui/pull/866) (Enhanced Traffic Graph Widget with Multi-timeframe Support and Data Persistence by rebroad)\n* [#32061](https://github.com/bitcoin/bitcoin/pull/32061) (Replace libevent with our own HTTP and socket-handling implementation by pinheadmz)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32862#issuecomment-3031861048",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32862"
    },
    {
      "event": "renamed",
      "id": 18450692518,
      "node_id": "RTE_lADOABII586-rL1ezwAAAARLvzmm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18450692518",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-03T11:18:16Z",
      "rename": {
        "from": "rpc: use CScheduler for HTTPRPCTimer and remove RPCTimer",
        "to": "rpc: use CScheduler for relocking wallwt and remove RPCTimer"
      }
    },
    {
      "event": "renamed",
      "id": 18450694704,
      "node_id": "RTE_lADOABII586-rL1ezwAAAARLv0Iw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18450694704",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-03T11:18:25Z",
      "rename": {
        "from": "rpc: use CScheduler for relocking wallwt and remove RPCTimer",
        "to": "rpc: use CScheduler for relocking wallet and remove RPCTimer"
      }
    },
    {
      "event": "reviewed",
      "id": 2983397697,
      "node_id": "PRR_kwDOABII586x0wlB",
      "url": null,
      "actor": null,
      "commit_id": "fcfd3db563e89fd79820a4cdfa102d624d801de1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK fcfd3db563e89fd79820a4cdfa102d624d801de1",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32862#pullrequestreview-2983397697",
      "submitted_at": "2025-07-03T14:22:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32862"
    },
    {
      "event": "commented",
      "id": 3040312858,
      "node_id": "IC_kwDOABII5861N34a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3040312858",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-05T21:51:26Z",
      "updated_at": "2025-07-05T21:51:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code Review ACK fcfd3db563e89fd79820a4cdfa102d624d801de1\r\n\r\nNice code removal, I did some additional grepping to make sure nothing was missed and didn't see anything.",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32862#issuecomment-3040312858",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32862"
    },
    {
      "event": "review_requested",
      "id": 18506986081,
      "node_id": "RRE_lADOABII586-rL1ezwAAAARPGjJh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18506986081",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-07T14:32:52Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 3046962563,
      "node_id": "IC_kwDOABII5861nPWD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3046962563",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-08T00:32:52Z",
      "updated_at": "2025-07-08T00:32:52Z",
      "author_association": "MEMBER",
      "body": "ACK fcfd3db563e89fd79820a4cdfa102d624d801de1",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32862#issuecomment-3046962563",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32862"
    },
    {
      "event": "merged",
      "id": 18515267444,
      "node_id": "ME_lADOABII586-rL1ezwAAAARPmI90",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18515267444",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a8bff38236ac988f82dcfa85438946cfe0d3afe3",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8bff38236ac988f82dcfa85438946cfe0d3afe3",
      "created_at": "2025-07-08T00:59:31Z"
    },
    {
      "event": "closed",
      "id": 18515267455,
      "node_id": "CE_lADOABII586-rL1ezwAAAARPmI9_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18515267455",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-08T00:59:31Z"
    },
    {
      "event": "referenced",
      "id": 18713119729,
      "node_id": "REFE_lADOABII586-rL1ezwAAAARbY4vx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18713119729",
      "actor": {
        "login": "stringintech",
        "id": 157148846,
        "node_id": "U_kgDOCV3mrg",
        "avatar_url": "https://avatars.githubusercontent.com/u/157148846?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stringintech",
        "html_url": "https://github.com/stringintech",
        "followers_url": "https://api.github.com/users/stringintech/followers",
        "following_url": "https://api.github.com/users/stringintech/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stringintech/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stringintech/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stringintech/subscriptions",
        "organizations_url": "https://api.github.com/users/stringintech/orgs",
        "repos_url": "https://api.github.com/users/stringintech/repos",
        "events_url": "https://api.github.com/users/stringintech/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stringintech/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f19e7819e9a21eeb539b6d3045876ab50e0ecef2",
      "commit_url": "https://api.github.com/repos/stringintech/go-bitcoinkernel/commits/f19e7819e9a21eeb539b6d3045876ab50e0ecef2",
      "created_at": "2025-07-19T20:44:04Z"
    },
    {
      "event": "commented",
      "id": 3114706601,
      "node_id": "IC_kwDOABII5865pqap",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3114706601",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-24T19:41:23Z",
      "updated_at": "2025-07-24T19:41:23Z",
      "author_association": "MEMBER",
      "body": "Just wanted to leave a note that this uncovers a false positive libc++ tsan warning, if anyone runs into this.\r\n\r\n<details><summary>more details</summary>\r\n\r\nhttps://cirrus-ci.com/task/5230471308640256?logs=check#L1679:\r\n\r\n```\r\nWARNING: ThreadSanitizer: data race (pid=22900)\r\n  Write of size 8 at 0x720c00021ab0 by thread T1 (mutexes: write M0):\r\n    #0 operator delete(void*, unsigned long) <null> (bitcoind+0x17e6cc) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #1 void std::__1::__libcpp_operator_delete[abi:ne200100]<std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>*, unsigned long>(std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>*, unsigned long) /usr/lib/llvm-20/bin/../include/c++/v1/__new/allocate.h:46:3 (bitcoind+0x828ae0) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #2 void std::__1::__libcpp_deallocate[abi:ne200100]<std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>>(std::__1::__type_identity<std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>>::type*, std::__1::__element_count, unsigned long) /usr/lib/llvm-20/bin/../include/c++/v1/__new/allocate.h:86:12 (bitcoind+0x828ae0)\r\n    #3 std::__1::allocator<std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>>::deallocate[abi:ne200100](std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>*, unsigned long) /usr/lib/llvm-20/bin/../include/c++/v1/__memory/allocator.h:120:7 (bitcoind+0x828ae0)\r\n    #4 std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>::__on_zero_shared_weak() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_ptr.h:134:7 (bitcoind+0x828ae0)\r\n    #5 std::__1::weak_ptr<wallet::CWallet>::~weak_ptr() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_ptr.h:1315:15 (bitcoind+0x8ec01a) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #6 wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'()::~() /tmp/cirrus-ci-build/bitcoin-core/bld/src/wallet/./wallet/rpc/encrypt.cpp:102:40 (bitcoind+0x8ec01a)\r\n    #7 std::__1::__function::__alloc_func<wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'(), std::__1::allocator<wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'()>, void ()>::destroy[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:181:14 (bitcoind+0x8ec01a)\r\n    #8 std::__1::__function::__func<wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'(), std::__1::allocator<wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'()>, void ()>::destroy() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:305:8 (bitcoind+0x8ec01a)\r\n    #9 std::__1::__function::__value_func<void ()>::~__value_func[abi:ne200100]() /tmp/cirrus-ci-build/bitcoin-core/bld/src/./scheduler.h (bitcoind+0xadd907) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #10 std::__1::function<void ()>::~function() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:986:43 (bitcoind+0xadd907)\r\n    #11 CScheduler::serviceQueue() /tmp/cirrus-ci-build/bitcoin-core/bld/src/./scheduler.cpp:62:9 (bitcoind+0xadd907)\r\n    #12 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6::operator()() const /tmp/cirrus-ci-build/bitcoin-core/bld/src/./init.cpp:1365:94 (bitcoind+0x1abe95) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #13 decltype(std::declval<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6&>()()) std::__1::__invoke[abi:ne200100]<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x1abe95)\r\n    #14 void std::__1::__invoke_void_return_wrapper<void, true>::__call[abi:ne200100]<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:251:5 (bitcoind+0x1abe95)\r\n    #15 void std::__1::__invoke_r[abi:ne200100]<void, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x1abe95)\r\n    #16 std::__1::__function::__alloc_func<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6, std::__1::allocator<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6>, void ()>::operator()[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x1abe95)\r\n    #17 std::__1::__function::__func<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6, std::__1::allocator<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6>, void ()>::operator()() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x1abe95)\r\n    #18 std::__1::__function::__value_func<void ()>::operator()[abi:ne200100]() const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0xbd0222) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #19 std::__1::function<void ()>::operator()() const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0xbd0222)\r\n    #20 util::TraceThread(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>) /tmp/cirrus-ci-build/bitcoin-core/bld/src/util/./util/thread.cpp:21:9 (bitcoind+0xbd0222)\r\n    #21 decltype(std::declval<void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>)>()(std::declval<char const*>(), std::declval<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6>())) std::__1::__invoke[abi:ne200100]<void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6>(void (*&&)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*&&, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x1aba8c) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #22 void std::__1::__thread_execute[abi:ne200100]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:199:3 (bitcoind+0x1aba8c)\r\n    #23 void* std::__1::__thread_proxy[abi:ne200100]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6>>(void*) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:208:3 (bitcoind+0x1aba8c)\r\n  Previous read of size 8 at 0x720c00021ab0 by thread T16:\r\n    #0 std::__1::__shared_count::__release_shared[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_count.h:91:7 (bitcoind+0x7d466e) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #1 std::__1::__shared_weak_count::__release_shared[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_count.h:120:25 (bitcoind+0x7d466e)\r\n    #2 std::__1::shared_ptr<wallet::CWallet>::~shared_ptr[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_ptr.h:558:17 (bitcoind+0x7d466e)\r\n    #3 std::__1::shared_ptr<wallet::CWallet>::reset[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_ptr.h:608:50 (bitcoind+0x7d466e)\r\n    #4 wallet::WaitForDeleteWallet(std::__1::shared_ptr<wallet::CWallet>&&) /tmp/cirrus-ci-build/bitcoin-core/bld/src/wallet/./wallet/wallet.cpp:264:12 (bitcoind+0x7d466e)\r\n    #5 wallet::unloadwallet()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /tmp/cirrus-ci-build/bitcoin-core/bld/src/wallet/./wallet/rpc/wallet.cpp:490:5 (bitcoind+0x772633) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #6 decltype(std::declval<wallet::unloadwallet()::$_0&>()(std::declval<RPCHelpMan const&>(), std::declval<JSONRPCRequest const&>())) std::__1::__invoke[abi:ne200100]<wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x772633)\r\n    #7 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call[abi:ne200100]<wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x772633)\r\n    #8 UniValue std::__1::__invoke_r[abi:ne200100]<UniValue, wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x772633)\r\n    #9 std::__1::__function::__alloc_func<wallet::unloadwallet()::$_0, std::__1::allocator<wallet::unloadwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:ne200100](RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x772633)\r\n    #10 std::__1::__function::__func<wallet::unloadwallet()::$_0, std::__1::allocator<wallet::unloadwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x772633)\r\n    #11 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:ne200100](RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0xac26da) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #12 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0xac26da)\r\n    #13 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const /tmp/cirrus-ci-build/bitcoin-core/bld/src/./rpc/util.cpp:663:20 (bitcoind+0xac26da)\r\n    #14 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /tmp/cirrus-ci-build/bitcoin-core/bld/src/./rpc/server.h:60:91 (bitcoind+0x41df78) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #15 decltype(std::declval<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:ne200100]<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x41df78)\r\n    #16 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call[abi:ne200100]<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x41df78)\r\n    #17 bool std::__1::__invoke_r[abi:ne200100]<bool, CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x41df78)\r\n    #18 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x41df78)\r\n    #19 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x41df78)\r\n    #20 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0x71db01) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #21 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0x71db01)\r\n    #22 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /tmp/cirrus-ci-build/bitcoin-core/bld/src/wallet/./wallet/interfaces.cpp:564:24 (bitcoind+0x71db01)\r\n    #23 decltype(std::declval<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:ne200100]<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x71db01)\r\n    #24 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call[abi:ne200100]<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x71db01)\r\n    #25 bool std::__1::__invoke_r[abi:ne200100]<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x71db01)\r\n    #26 std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x71db01)\r\n    #27 std::__1::__function::__func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x71db01)\r\n    #28 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0x31c3cc) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #29 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0x31c3cc)\r\n    #30 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /tmp/cirrus-ci-build/bitcoin-core/bld/src/./node/interfaces.cpp:511:24 (bitcoind+0x31c3cc)\r\n    #31 decltype(std::declval<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:ne200100]<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x31c3cc)\r\n    #32 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call[abi:ne200100]<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x31c3cc)\r\n    #33 bool std::__1::__invoke_r[abi:ne200100]<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x31c3cc)\r\n    #34 std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x31c3cc)\r\n    #35 std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x31c3cc)\r\n    #36 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0x58ac56) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #37 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0x58ac56)\r\n    #38 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./rpc/server.cpp:504:20 (bitcoind+0x58ac56)\r\n    #39 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*>> const&, JSONRPCRequest const&, UniValue&) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./rpc/server.cpp:471:13 (bitcoind+0x58ac56)\r\n    #40 CRPCTable::execute(JSONRPCRequest const&) const /tmp/cirrus-ci-build/bitcoin-core/bld/src/./rpc/server.cpp:491:13 (bitcoind+0x589831) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #41 JSONRPCExec(JSONRPCRequest const&, bool) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./rpc/server.cpp:347:31 (bitcoind+0x588e38) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #42 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./httprpc.cpp:165:21 (bitcoind+0x6cf06d) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #43 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const /tmp/cirrus-ci-build/bitcoin-core/bld/src/./httprpc.cpp:337:80 (bitcoind+0x6cf06d)\r\n    #44 decltype(std::declval<StartHTTPRPC(std::__1::any const&)::$_0&>()(std::declval<HTTPRequest*>(), std::declval<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>())) std::__1::__invoke[abi:ne200100]<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x6cf06d)\r\n    #45 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call[abi:ne200100]<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x6cf06d)\r\n    #46 bool std::__1::__invoke_r[abi:ne200100]<bool, StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x6cf06d)\r\n    #47 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:ne200100](HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x6cf06d)\r\n    #48 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x6cf06d)\r\n    #49 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:ne200100](HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0x6ddf10) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #50 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0x6ddf10)\r\n    #51 HTTPWorkItem::operator()() /tmp/cirrus-ci-build/bitcoin-core/bld/src/./httpserver.cpp:62:9 (bitcoind+0x6ddf10)\r\n    #52 WorkQueue<HTTPClosure>::Run() /tmp/cirrus-ci-build/bitcoin-core/bld/src/./httpserver.cpp:117:13 (bitcoind+0x6e0f92) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #53 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./httpserver.cpp:419:12 (bitcoind+0x6d8090) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #54 decltype(std::declval<void (*)(WorkQueue<HTTPClosure>*, int)>()(std::declval<WorkQueue<HTTPClosure>*>(), std::declval<int>())) std::__1::__invoke[abi:ne200100]<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x6e0de7) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #55 void std::__1::__thread_execute[abi:ne200100]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:199:3 (bitcoind+0x6e0de7)\r\n    #56 void* std::__1::__thread_proxy[abi:ne200100]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>(void*) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:208:3 (bitcoind+0x6e0de7)\r\n  Mutex M0 (0x722000000588) created at:\r\n    #0 pthread_mutex_lock <null> (bitcoind+0xfb93b) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #1 std::__1::mutex::lock() <null> (libc++.so.1.0.20+0x7160c) (BuildId: f9f8eb7e398c095067b1e1cffb9b2252bf006a38)\r\n    #2 CScheduler::scheduleFromNow(std::__1::function<void ()>, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./scheduler.h:55:9 (bitcoind+0x257246) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #3 CScheduler::scheduleEvery(std::__1::function<void ()>, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./scheduler.cpp:110:5 (bitcoind+0xade477) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #4 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./init.cpp:1368:15 (bitcoind+0x19c865) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #5 AppInit(node::NodeContext&) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./bitcoind.cpp:237:43 (bitcoind+0x17fc2a) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #6 main /tmp/cirrus-ci-build/bitcoin-core/bld/src/./bitcoind.cpp:283:10 (bitcoind+0x17fc2a)\r\n  Thread T1 'b-scheduler' (tid=22912, running) created by main thread at:\r\n    #0 pthread_create <null> (bitcoind+0xf9c2e) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #1 std::__1::__libcpp_thread_create[abi:ne200100](unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/support/pthread.h:182:10 (bitcoind+0x19c7d8) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #2 std::__1::thread::thread<void (&)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const (&) [10], AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6, 0>(void (&)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const (&) [10], AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_6&&) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:218:14 (bitcoind+0x19c7d8)\r\n    #3 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./init.cpp:1365:34 (bitcoind+0x19c7d8)\r\n    #4 AppInit(node::NodeContext&) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./bitcoind.cpp:237:43 (bitcoind+0x17fc2a) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #5 main /tmp/cirrus-ci-build/bitcoin-core/bld/src/./bitcoind.cpp:283:10 (bitcoind+0x17fc2a)\r\n  Thread T16 'b-httpworker.13' (tid=22927, running) created by main thread at:\r\n    #0 pthread_create <null> (bitcoind+0xf9c2e) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #1 std::__1::__libcpp_thread_create[abi:ne200100](unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/support/pthread.h:182:10 (bitcoind+0x6e0c9b) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #2 std::__1::thread::thread<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, 0>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:218:14 (bitcoind+0x6e0c9b)\r\n    #3 std::__1::thread* std::__1::construct_at[abi:ne200100]<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, std::__1::thread*>(std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__memory/construct_at.h:40:49 (bitcoind+0x6d7d4c) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #4 std::__1::thread* std::__1::__construct_at[abi:ne200100]<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, std::__1::thread*>(std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__memory/construct_at.h:48:10 (bitcoind+0x6d7d4c)\r\n    #5 void std::__1::allocator_traits<std::__1::allocator<std::__1::thread>>::construct[abi:ne200100]<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, void, 0>(std::__1::allocator<std::__1::thread>&, std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__memory/allocator_traits.h:318:5 (bitcoind+0x6d7d4c)\r\n    #6 void std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread>>::__construct_one_at_end[abi:ne200100]<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__vector/vector.h:742:5 (bitcoind+0x6d7d4c)\r\n    #7 std::__1::thread& std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread>>::emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__vector/vector.h:1133:5 (bitcoind+0x6d7d4c)\r\n    #8 StartHTTPServer() /tmp/cirrus-ci-build/bitcoin-core/bld/src/./httpserver.cpp:508:31 (bitcoind+0x6d7d4c)\r\n    #9 AppInitServers(node::NodeContext&) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./init.cpp:721:5 (bitcoind+0x1a72d5) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #10 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./init.cpp:1457:14 (bitcoind+0x19d537) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #11 AppInit(node::NodeContext&) /tmp/cirrus-ci-build/bitcoin-core/bld/src/./bitcoind.cpp:237:43 (bitcoind+0x17fc2a) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd)\r\n    #12 main /tmp/cirrus-ci-build/bitcoin-core/bld/src/./bitcoind.cpp:283:10 (bitcoind+0x17fc2a)\r\nSUMMARY: ThreadSanitizer: data race (/tmp/cirrus-ci-build/bitcoin-core/bld/bin/bitcoind+0x17e6cc) (BuildId: cfbd7d2fe965bb79ec7e44f4d6b230691518e5cd) in operator delete(void*, unsigned long)\r\n```\r\n\r\nThis can be reproduced locally via:\r\n\r\n`rm -rf ./bld-cmake && cmake -B ./bld-cmake -DCMAKE_C_COMPILER='clang' -DCMAKE_CXX_COMPILER='clang++;-stdlib=libc++' -DBUILD_GUI=OFF -DBUILD_TESTS=OFF  -DSANITIZERS=thread && cmake --build ./bld-cmake --parallel $( nproc ) && TSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/tsan:halt_on_error=1:second_deadlock_stack=1\" ./bld-cmake/test/functional/wallet_multiwallet.py`\r\n\r\n\r\nA minimal libc++ reproducer may look like: https://godbolt.org/z/TMEWcYTEK\r\n\r\n\r\n</details>",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32862#issuecomment-3114706601",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32862"
    },
    {
      "event": "commented",
      "id": 3117350070,
      "node_id": "IC_kwDOABII5865zvy2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3117350070",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-25T10:57:22Z",
      "updated_at": "2025-07-25T10:57:22Z",
      "author_association": "MEMBER",
      "body": "Reproduced locally (and consistently) on aarch64 and x86_64. Wondered why this isn't happening in the TSAN CI, it's because of `DEBUG_LOCKORDER`. If you drop that, then the CI will reproduce:\r\n\r\n<details><summary>more details</summary>\r\n\r\n```bash\r\n134/143 Test #107: transaction_tests ....................   Passed   19.46 sec\r\n135/143 Test #116: txvalidationcache_tests ..............   Passed   21.00 sec\r\n136/143 Test #140: wallet_tests .........................   Passed   18.79 sec\r\n137/143 Test   #5: secp256k1_exhaustive_tests ...........   Passed   67.90 sec\r\n138/143 Test  #79: random_tests .........................   Passed   63.75 sec\r\n139/143 Test  #31: coins_tests_dbbase ...................   Passed   93.41 sec\r\n140/143 Test #130: coinselector_tests ...................   Passed  100.65 sec\r\n141/143 Test   #7: bench_sanity_check ...................   Passed  173.72 sec\r\n142/143 Test   #3: secp256k1_noverify_tests .............   Passed  258.21 sec\r\n143/143 Test   #4: secp256k1_tests ......................   Passed  541.78 sec\r\n\r\n100% tests passed, 0 tests failed out of 143\r\n\r\nTotal Test time (real) = 541.79 sec\r\n+ '[' '' = true ']'\r\n+ '[' true = true ']'\r\n+ eval 'TEST_RUNNER_EXTRA=()'\r\n++ TEST_RUNNER_EXTRA=()\r\n+ LD_LIBRARY_PATH=/ci_container_base/depends/aarch64-unknown-linux-gnu/lib\r\n+ /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/test/functional/test_runner.py --ci -j17 --tmpdirprefix /ci_container_base/ci/scratch/test_runner/ --ansi --combinedlogslen=99999999 --timeout-factor=40 --quiet --failfast\r\n16/270 - wallet_multiwallet.py failed, Duration: 15 s\r\n\r\nstdout:\r\n2025-07-25T10:37:15.282773Z TestFramework (INFO): PRNG seed is: 9066748361541480888\r\n2025-07-25T10:37:15.283864Z TestFramework (INFO): Initializing test directory /ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250725_103610/wallet_multiwallet_242\r\n2025-07-25T10:37:16.186982Z TestFramework (INFO): Verify warning is emitted when failing to scan the wallets directory\r\n2025-07-25T10:37:16.187188Z TestFramework (WARNING): Skipping test involving chmod as it requires a non-root user.\r\n2025-07-25T10:37:20.220825Z TestFramework (INFO): Do not allow -upgradewallet with multiwallet\r\n2025-07-25T10:37:25.749244Z TestFramework (INFO): Check for per-wallet settxfee call\r\n2025-07-25T10:37:25.760051Z TestFramework (INFO): Test dynamic wallet loading\r\n2025-07-25T10:37:27.498254Z TestFramework (INFO): Load first wallet\r\n2025-07-25T10:37:27.543494Z TestFramework (INFO): Load second wallet\r\n2025-07-25T10:37:27.585449Z TestFramework (INFO): Concurrent wallet loading\r\n2025-07-25T10:37:27.627434Z TestFramework (INFO): Load remaining wallets\r\n2025-07-25T10:37:27.800707Z TestFramework (INFO): Test dynamic wallet creation.\r\n2025-07-25T10:37:27.918250Z TestFramework (INFO): Test dynamic wallet unloading\r\n2025-07-25T10:37:30.117073Z TestFramework (ERROR): Unexpected exception\r\nTraceback (most recent call last):\r\n  File \"/ci_container_base/test/functional/test_framework/test_framework.py\", line 195, in main\r\n    self.run_test()\r\n  File \"/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/test/functional/wallet_multiwallet.py\", line 366, in run_test\r\n    ensure_for(duration=1.1, f=lambda: 'w2' not in self.nodes[0].listwallets())\r\n  File \"/ci_container_base/test/functional/test_framework/util.py\", line 289, in ensure_for\r\n    if not f():\r\n           ^^^\r\n  File \"/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/test/functional/wallet_multiwallet.py\", line 366, in <lambda>\r\n    ensure_for(duration=1.1, f=lambda: 'w2' not in self.nodes[0].listwallets())\r\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/ci_container_base/test/functional/test_framework/coverage.py\", line 50, in __call__\r\n    return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/ci_container_base/test/functional/test_framework/authproxy.py\", line 137, in __call__\r\n    response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/ci_container_base/test/functional/test_framework/authproxy.py\", line 111, in _request\r\n    return self._get_response()\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/ci_container_base/test/functional/test_framework/authproxy.py\", line 174, in _get_response\r\n    http_response = self.__conn.getresponse()\r\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib/python3.12/http/client.py\", line 1428, in getresponse\r\n    response.begin()\r\n  File \"/usr/lib/python3.12/http/client.py\", line 331, in begin\r\n    version, status, reason = self._read_status()\r\n                              ^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib/python3.12/http/client.py\", line 300, in _read_status\r\n    raise RemoteDisconnected(\"Remote end closed connection without\"\r\nhttp.client.RemoteDisconnected: Remote end closed connection without response\r\n2025-07-25T10:37:30.170430Z TestFramework (INFO): Not stopping nodes as test failed. The dangling processes will be cleaned up later.\r\n2025-07-25T10:37:30.170649Z TestFramework (WARNING): Not cleaning up dir /ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250725_103610/wallet_multiwallet_242\r\n2025-07-25T10:37:30.170732Z TestFramework (ERROR): Test failed. Test logging available at /ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250725_103610/wallet_multiwallet_242/test_framework.log\r\n2025-07-25T10:37:30.171130Z TestFramework (ERROR): \r\n2025-07-25T10:37:30.171630Z TestFramework (ERROR): Hint: Call /ci_container_base/test/functional/combine_logs.py '/ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250725_103610/wallet_multiwallet_242' to consolidate all logs\r\n2025-07-25T10:37:30.171799Z TestFramework (ERROR): \r\n2025-07-25T10:37:30.171906Z TestFramework (ERROR): If this failure happened unexpectedly or intermittently, please file a bug and provide a link or upload of the combined log.\r\n2025-07-25T10:37:30.172049Z TestFramework (ERROR): https://github.com/bitcoin/bitcoin/issues\r\n2025-07-25T10:37:30.172133Z TestFramework (ERROR): \r\n\r\n\r\nstderr:\r\n[node 0] Cleaning up leftover process\r\n\r\n\r\nCombine the logs and print the last 99999999 lines ...\r\n\r\n============\r\nCombined log for /ci_container_base/ci/scratch/test_runner//test_runner_₿_🏃_20250725_103610/wallet_multiwallet_242:\r\n============\r\n\r\n test  2025-07-25T10:37:15.282773Z TestFramework (INFO): PRNG seed is: 9066748361541480888 \r\n test  2025-07-25T10:37:15.282988Z TestFramework (DEBUG): Setting up network thread \r\n test  2025-07-25T10:37:15.283864Z TestFramework (INFO): Initializing test directory /ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250725_103610/wallet_multiwallet_242 \r\n test  2025-07-25T10:37:15.286296Z TestFramework.node0 (DEBUG): bitcoind started, waiting for RPC to come up \r\n test  2025-07-25T10:37:15.288884Z TestFramework.node1 (DEBUG): bitcoind started, waiting for RPC to come up \r\n node0 2025-07-25T10:37:15.313892Z [init] [init/common.cpp:151] [void init::LogPackageVersion()] Bitcoin Core version v29.99.0-443c32a3e686-dirty (release build) \r\n node0 2025-07-25T10:37:15.313940Z [init] [init.cpp:731] [void InitParameterInteraction(ArgsManager &)] parameter interaction: -bind set -> setting -listen=1 \r\n node0 2025-07-25T10:37:15.314658Z [init] [kernel/context.cpp:20] [auto kernel::Context::Context()::(anonymous class)::operator()() const] Using the 'arm_shani(1way,2way)' SHA256 implementation \r\n node1 2025-07-25T10:37:15.316791Z [init] [init/common.cpp:151] [void init::LogPackageVersion()] Bitcoin Core version v29.99.0-443c32a3e686-dirty (release build) \r\n node1 2025-07-25T10:37:15.316825Z [init] [init.cpp:731] [void InitParameterInteraction(ArgsManager &)] parameter interaction: -bind set -> setting -listen=1 \r\n node1 2025-07-25T10:37:15.317582Z [init] [kernel/context.cpp:20] [auto kernel::Context::Context()::(anonymous class)::operator()() const] Using the 'arm_shani(1way,2way)' SHA256 implementation \r\n node0 2025-07-25T10:37:15.420537Z [init] [init/common.cpp:119] [bool init::StartLogging(const ArgsManager &)] Default data directory /root/.bitcoin \r\n node0 2025-07-25T10:37:15.420605Z [init] [init/common.cpp:120] [bool init::StartLogging(const ArgsManager &)] Using data directory /ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250725_103610/wallet_multiwallet_242/node0/regtest \r\n node0 2025-07-25T10:37:15.420697Z [init] [init/common.cpp:129] [bool init::StartLogging(const ArgsManager &)] Config file: /ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250725_103610/wallet_multiwallet_242/node0/bitcoin.conf \r\n node0 2025-07-25T10:37:15.420826Z [init] [common/args.cpp:850] [void ArgsManager::logArgsPrefix(const std::string &, const std::string &, const std::map<std::string, std::vector<common::SettingsValue>> &) const] Config file arg: regtest=\"1\" \r\n node0 2025-07-25T10:37:15.420924Z [init] [common/args.cpp:850] [void ArgsManager::logArgsPrefix(const std::string &, const std::string &, const std::map<std::string, std::vector<common::SettingsValue>> &) const] Config file arg: [regtest] bind=\"127.0.0.1\" \r\n node0 2025-07-25T10:37:15.420984Z [init] [common/args.cpp:850] [void ArgsManager::logArgsPrefix(const std::string &, const std::string &, const std::map<std::string, std::vector<common::SettingsValue>> &) const] Config file arg: [regtest] connect=\"0\" \r\n node0 2025-07-25T10:37:15.421061Z [init] [common/args.cpp:850] [void ArgsManager::logArgsPrefix(const std::string &, const std::string &, const std::map<std::string, std::vector<common::SettingsValue>> &) const] Config file arg: [regtest] discover=\"0\" \r\n node0 2025-07-25T10:37:15.421119Z [init] [common/args.cpp:850] [void ArgsManager::logArgsPrefix(const std::string &, const std::string &, const std::map<std::string, std::vector<common::SettingsValue>> &) const] Config file arg: [regtest] dnsseed=\"0\" \r\n <snip>\r\n node0 2025-07-25T10:37:29.304838Z [httpworker.3] [rpc/request.cpp:243] [void JSONRPCRequest::parse(const UniValue &)] [rpc] ThreadRPCServer method=listwallets user=__cookie__ \r\n node0 2025-07-25T10:37:29.507042Z [http] [httpserver.cpp:308] [void http_request_cb(struct evhttp_request *, void *)] [http] Received a POST request for / from 127.0.0.1:39730 \r\n node0 2025-07-25T10:37:29.507621Z [httpworker.4] [rpc/request.cpp:243] [void JSONRPCRequest::parse(const UniValue &)] [rpc] ThreadRPCServer method=listwallets user=__cookie__ \r\n test  2025-07-25T10:37:30.117073Z TestFramework (ERROR): Unexpected exception \r\n                                   Traceback (most recent call last):\r\n                                     File \"/ci_container_base/test/functional/test_framework/test_framework.py\", line 195, in main\r\n                                       self.run_test()\r\n                                     File \"/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/test/functional/wallet_multiwallet.py\", line 366, in run_test\r\n                                       ensure_for(duration=1.1, f=lambda: 'w2' not in self.nodes[0].listwallets())\r\n                                     File \"/ci_container_base/test/functional/test_framework/util.py\", line 289, in ensure_for\r\n                                       if not f():\r\n                                              ^^^\r\n                                     File \"/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/test/functional/wallet_multiwallet.py\", line 366, in <lambda>\r\n                                       ensure_for(duration=1.1, f=lambda: 'w2' not in self.nodes[0].listwallets())\r\n                                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                                     File \"/ci_container_base/test/functional/test_framework/coverage.py\", line 50, in __call__\r\n                                       return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                                     File \"/ci_container_base/test/functional/test_framework/authproxy.py\", line 137, in __call__\r\n                                       response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                                     File \"/ci_container_base/test/functional/test_framework/authproxy.py\", line 111, in _request\r\n                                       return self._get_response()\r\n                                              ^^^^^^^^^^^^^^^^^^^^\r\n                                     File \"/ci_container_base/test/functional/test_framework/authproxy.py\", line 174, in _get_response\r\n                                       http_response = self.__conn.getresponse()\r\n                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n                                     File \"/usr/lib/python3.12/http/client.py\", line 1428, in getresponse\r\n                                       response.begin()\r\n                                     File \"/usr/lib/python3.12/http/client.py\", line 331, in begin\r\n                                       version, status, reason = self._read_status()\r\n                                                                 ^^^^^^^^^^^^^^^^^^^\r\n                                     File \"/usr/lib/python3.12/http/client.py\", line 300, in _read_status\r\n                                       raise RemoteDisconnected(\"Remote end closed connection without\"\r\n                                   http.client.RemoteDisconnected: Remote end closed connection without response\r\n test  2025-07-25T10:37:30.119931Z TestFramework (DEBUG): Closing down network thread \r\n test  2025-07-25T10:37:30.170430Z TestFramework (INFO): Not stopping nodes as test failed. The dangling processes will be cleaned up later. \r\n test  2025-07-25T10:37:30.170649Z TestFramework (WARNING): Not cleaning up dir /ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250725_103610/wallet_multiwallet_242 \r\n test  2025-07-25T10:37:30.170732Z TestFramework (ERROR): Test failed. Test logging available at /ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250725_103610/wallet_multiwallet_242/test_framework.log \r\n test  2025-07-25T10:37:30.171130Z TestFramework (ERROR): \r\n test  2025-07-25T10:37:30.171630Z TestFramework (ERROR): Hint: Call /ci_container_base/test/functional/combine_logs.py '/ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250725_103610/wallet_multiwallet_242' to consolidate all logs \r\n test  2025-07-25T10:37:30.171799Z TestFramework (ERROR): \r\n test  2025-07-25T10:37:30.171906Z TestFramework (ERROR): If this failure happened unexpectedly or intermittently, please file a bug and provide a link or upload of the combined log. \r\n test  2025-07-25T10:37:30.172049Z TestFramework (ERROR): https://github.com/bitcoin/bitcoin/issues \r\n test  2025-07-25T10:37:30.172133Z TestFramework (ERROR): \r\n\r\n node0 stderr ==================\r\nWARNING: ThreadSanitizer: data race (pid=17110)\r\n  Write of size 8 at 0xffff92417b20 by thread T1 (mutexes: write M0):\r\n    #0 operator delete(void*, unsigned long) <null> (bitcoind+0x1af774) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #1 void std::__1::__libcpp_operator_delete[abi:ne200100]<std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>*, unsigned long>(std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>*, unsigned long) /usr/lib/llvm-20/bin/../include/c++/v1/__new/allocate.h:46:3 (bitcoind+0x741cd8) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #2 void std::__1::__libcpp_deallocate[abi:ne200100]<std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>>(std::__1::__type_identity<std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>>::type*, std::__1::__element_count, unsigned long) /usr/lib/llvm-20/bin/../include/c++/v1/__new/allocate.h:86:12 (bitcoind+0x741cd8)\r\n    #3 std::__1::allocator<std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>>::deallocate[abi:ne200100](std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>*, unsigned long) /usr/lib/llvm-20/bin/../include/c++/v1/__memory/allocator.h:120:7 (bitcoind+0x741cd8)\r\n    #4 std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>::__on_zero_shared_weak() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_ptr.h:134:7 (bitcoind+0x741cd8)\r\n    #5 std::__1::weak_ptr<wallet::CWallet>::~weak_ptr() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_ptr.h:1315:15 (bitcoind+0x7e2bcc) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #6 wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'()::~() /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/wallet/./wallet/rpc/encrypt.cpp:102:40 (bitcoind+0x7e2bcc)\r\n    #7 std::__1::__function::__alloc_func<wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'(), std::__1::allocator<wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'()>, void ()>::destroy[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:181:14 (bitcoind+0x7e2bcc)\r\n    #8 std::__1::__function::__func<wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'(), std::__1::allocator<wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'()>, void ()>::destroy() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:305:8 (bitcoind+0x7e2bcc)\r\n    #9 std::__1::__function::__value_func<void ()>::~__value_func[abi:ne200100]() /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./scheduler.h (bitcoind+0x9f0af0) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #10 std::__1::function<void ()>::~function() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:986:43 (bitcoind+0x9f0af0)\r\n    #11 CScheduler::serviceQueue() /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./scheduler.cpp:62:9 (bitcoind+0x9f0af0)\r\n    #12 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7::operator()() const /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./init.cpp:1364:94 (bitcoind+0x1d383c) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #13 decltype(std::declval<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>()()) std::__1::__invoke[abi:ne200100]<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x1d383c)\r\n    #14 void std::__1::__invoke_void_return_wrapper<void, true>::__call[abi:ne200100]<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:251:5 (bitcoind+0x1d383c)\r\n    #15 void std::__1::__invoke_r[abi:ne200100]<void, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x1d383c)\r\n    #16 std::__1::__function::__alloc_func<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, std::__1::allocator<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>, void ()>::operator()[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x1d383c)\r\n    #17 std::__1::__function::__func<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, std::__1::allocator<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>, void ()>::operator()() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x1d383c)\r\n    #18 std::__1::__function::__value_func<void ()>::operator()[abi:ne200100]() const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0xab77f8) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #19 std::__1::function<void ()>::operator()() const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0xab77f8)\r\n    #20 util::TraceThread(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/util/./util/thread.cpp:21:9 (bitcoind+0xab77f8)\r\n    #21 decltype(std::declval<void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>)>()(std::declval<char const*>(), std::declval<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>())) std::__1::__invoke[abi:ne200100]<void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>(void (*&&)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*&&, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x1d33c0) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #22 void std::__1::__thread_execute[abi:ne200100]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:199:3 (bitcoind+0x1d33c0)\r\n    #23 void* std::__1::__thread_proxy[abi:ne200100]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>>(void*) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:208:3 (bitcoind+0x1d33c0)\r\n\r\n  Previous read of size 8 at 0xffff92417b20 by thread T16:\r\n    #0 std::__1::__shared_count::__release_shared[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_count.h:91:7 (bitcoind+0x6f70cc) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #1 std::__1::__shared_weak_count::__release_shared[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_count.h:120:25 (bitcoind+0x6f70cc)\r\n    #2 std::__1::shared_ptr<wallet::CWallet>::~shared_ptr[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_ptr.h:558:17 (bitcoind+0x6f70cc)\r\n    #3 std::__1::shared_ptr<wallet::CWallet>::reset[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_ptr.h:608:50 (bitcoind+0x6f70cc)\r\n    #4 wallet::WaitForDeleteWallet(std::__1::shared_ptr<wallet::CWallet>&&) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/wallet/./wallet/wallet.cpp:264:12 (bitcoind+0x6f70cc)\r\n    #5 wallet::unloadwallet()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/wallet/./wallet/rpc/wallet.cpp:490:5 (bitcoind+0x6a3ad0) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #6 decltype(std::declval<wallet::unloadwallet()::$_0&>()(std::declval<RPCHelpMan const&>(), std::declval<JSONRPCRequest const&>())) std::__1::__invoke[abi:ne200100]<wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x6a3ad0)\r\n    #7 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call[abi:ne200100]<wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x6a3ad0)\r\n    #8 UniValue std::__1::__invoke_r[abi:ne200100]<UniValue, wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x6a3ad0)\r\n    #9 std::__1::__function::__alloc_func<wallet::unloadwallet()::$_0, std::__1::allocator<wallet::unloadwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:ne200100](RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x6a3ad0)\r\n    #10 std::__1::__function::__func<wallet::unloadwallet()::$_0, std::__1::allocator<wallet::unloadwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x6a3ad0)\r\n    #11 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:ne200100](RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0x9da0e0) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #12 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0x9da0e0)\r\n    #13 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./rpc/util.cpp:663:20 (bitcoind+0x9da0e0)\r\n    #14 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./rpc/server.h:60:91 (bitcoind+0x3f7570) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #15 decltype(std::declval<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:ne200100]<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x3f7570)\r\n    #16 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call[abi:ne200100]<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x3f7570)\r\n    #17 bool std::__1::__invoke_r[abi:ne200100]<bool, CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x3f7570)\r\n    #18 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x3f7570)\r\n    #19 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x3f7570)\r\n    #20 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0x65c7a8) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #21 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0x65c7a8)\r\n    #22 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/wallet/./wallet/interfaces.cpp:562:24 (bitcoind+0x65c7a8)\r\n    #23 decltype(std::declval<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:ne200100]<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x65c7a8)\r\n    #24 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call[abi:ne200100]<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x65c7a8)\r\n    #25 bool std::__1::__invoke_r[abi:ne200100]<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x65c7a8)\r\n    #26 std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x65c7a8)\r\n    #27 std::__1::__function::__func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x65c7a8)\r\n    #28 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0x31c3fc) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #29 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0x31c3fc)\r\n    #30 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./node/interfaces.cpp:511:24 (bitcoind+0x31c3fc)\r\n    #31 decltype(std::declval<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:ne200100]<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x31c3fc)\r\n    #32 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call[abi:ne200100]<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x31c3fc)\r\n    #33 bool std::__1::__invoke_r[abi:ne200100]<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x31c3fc)\r\n    #34 std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x31c3fc)\r\n    #35 std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x31c3fc)\r\n    #36 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0x5147e0) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #37 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0x5147e0)\r\n    #38 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./rpc/server.cpp:504:20 (bitcoind+0x5147e0)\r\n    #39 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*>> const&, JSONRPCRequest const&, UniValue&) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./rpc/server.cpp:471:13 (bitcoind+0x5147e0)\r\n    #40 CRPCTable::execute(JSONRPCRequest const&) const /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./rpc/server.cpp:491:13 (bitcoind+0x513848) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #41 JSONRPCExec(JSONRPCRequest const&, bool) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./rpc/server.cpp:347:31 (bitcoind+0x513070) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #42 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./httprpc.cpp:165:21 (bitcoind+0x61a3cc) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #43 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./httprpc.cpp:337:80 (bitcoind+0x61a3cc)\r\n    #44 decltype(std::declval<StartHTTPRPC(std::__1::any const&)::$_0&>()(std::declval<HTTPRequest*>(), std::declval<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>())) std::__1::__invoke[abi:ne200100]<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x61a3cc)\r\n    #45 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call[abi:ne200100]<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x61a3cc)\r\n    #46 bool std::__1::__invoke_r[abi:ne200100]<bool, StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x61a3cc)\r\n    #47 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:ne200100](HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x61a3cc)\r\n    #48 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x61a3cc)\r\n    #49 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:ne200100](HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0x626e64) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #50 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0x626e64)\r\n    #51 HTTPWorkItem::operator()() /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./httpserver.cpp:62:9 (bitcoind+0x626e64)\r\n    #52 WorkQueue<HTTPClosure>::Run() /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./httpserver.cpp:117:13 (bitcoind+0x6297a8) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #53 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./httpserver.cpp:419:12 (bitcoind+0x6216e8) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #54 decltype(std::declval<void (*)(WorkQueue<HTTPClosure>*, int)>()(std::declval<WorkQueue<HTTPClosure>*>(), std::declval<int>())) std::__1::__invoke[abi:ne200100]<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x629490) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #55 void std::__1::__thread_execute[abi:ne200100]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:199:3 (bitcoind+0x629490)\r\n    #56 void* std::__1::__thread_proxy[abi:ne200100]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>(void*) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:208:3 (bitcoind+0x629490)\r\n\r\n  Mutex M0 (0xffff90401dd8) created at:\r\n    #0 pthread_mutex_trylock <null> (bitcoind+0x12017c) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #1 std::__1::mutex::try_lock() <null> (libc++.so.1+0x6d524) (BuildId: d86dd6c86e9893451404de81c223ae225f27a256)\r\n    #2 UniqueLock<AnnotatedMixin<std::__1::mutex>>::UniqueLock(AnnotatedMixin<std::__1::mutex>&, char const*, char const*, int, bool) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./sync.h:183:13 (bitcoind+0x9f0fb8) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #3 CScheduler::schedule(std::__1::function<void ()>, std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l>>>) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./scheduler.cpp:74:9 (bitcoind+0x9f0fb8)\r\n    #4 CScheduler::scheduleFromNow(std::__1::function<void ()>, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./scheduler.h:55:9 (bitcoind+0x267dcc) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #5 CScheduler::scheduleEvery(std::__1::function<void ()>, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000l>>) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./scheduler.cpp:110:5 (bitcoind+0x9f1594) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #6 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./init.cpp:1367:15 (bitcoind+0x1c7974) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #7 AppInit(node::NodeContext&) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./bitcoind.cpp:237:43 (bitcoind+0x1b1168) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #8 main /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./bitcoind.cpp:283:10 (bitcoind+0x1b1168)\r\n\r\n  Thread T1 'b-scheduler' (tid=17117, running) created by main thread at:\r\n    #0 pthread_create <null> (bitcoind+0x11dbb0) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #1 std::__1::__libcpp_thread_create[abi:ne200100](unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/support/pthread.h:182:10 (bitcoind+0x1c790c) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #2 std::__1::thread::thread<void (&)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const (&) [10], AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, 0>(void (&)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const (&) [10], AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&&) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:218:14 (bitcoind+0x1c790c)\r\n    #3 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./init.cpp:1364:34 (bitcoind+0x1c790c)\r\n    #4 AppInit(node::NodeContext&) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./bitcoind.cpp:237:43 (bitcoind+0x1b1168) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #5 main /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./bitcoind.cpp:283:10 (bitcoind+0x1b1168)\r\n\r\n  Thread T16 'b-httpworker.13' (tid=17216, running) created by main thread at:\r\n    #0 pthread_create <null> (bitcoind+0x11dbb0) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #1 std::__1::__libcpp_thread_create[abi:ne200100](unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/support/pthread.h:182:10 (bitcoind+0x629364) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #2 std::__1::thread::thread<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, 0>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:218:14 (bitcoind+0x629364)\r\n    #3 std::__1::thread* std::__1::construct_at[abi:ne200100]<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, std::__1::thread*>(std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__memory/construct_at.h:40:49 (bitcoind+0x6213f0) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #4 std::__1::thread* std::__1::__construct_at[abi:ne200100]<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, std::__1::thread*>(std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__memory/construct_at.h:48:10 (bitcoind+0x6213f0)\r\n    #5 void std::__1::allocator_traits<std::__1::allocator<std::__1::thread>>::construct[abi:ne200100]<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, void, 0>(std::__1::allocator<std::__1::thread>&, std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__memory/allocator_traits.h:318:5 (bitcoind+0x6213f0)\r\n    #6 void std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread>>::__construct_one_at_end[abi:ne200100]<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__vector/vector.h:742:5 (bitcoind+0x6213f0)\r\n    #7 std::__1::thread& std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread>>::emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__vector/vector.h:1133:5 (bitcoind+0x6213f0)\r\n    #8 StartHTTPServer() /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./httpserver.cpp:508:31 (bitcoind+0x6213f0)\r\n    #9 AppInitServers(node::NodeContext&) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./init.cpp:720:5 (bitcoind+0x1cf4a8) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #10 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./init.cpp:1456:14 (bitcoind+0x1c83cc) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #11 AppInit(node::NodeContext&) /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./bitcoind.cpp:237:43 (bitcoind+0x1b1168) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8)\r\n    #12 main /ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/src/./bitcoind.cpp:283:10 (bitcoind+0x1b1168)\r\n\r\nSUMMARY: ThreadSanitizer: data race (/ci_container_base/ci/scratch/build-aarch64-unknown-linux-gnu/bin/bitcoind+0x1af774) (BuildId: b2fa3bc40a41b9880f72bdbcb3cd045b97456fe8) in operator delete(void*, unsigned long)\r\n================== \r\n node0 stderr Error: Invalid -wallet path 'w8_symlink'. -wallet path should point to a directory where wallet.dat and database/log.?????????? files can be stored, a location where such a directory could be created, or (for backwards compatibility) the name of an existing data file in -walletdir (\"/ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250725_103610/wallet_multiwallet_242/node0/regtest/wallets\") \r\n node0 stderr Error: Specified -walletdir \"debug.log\" is not a directory \r\n node0 stderr Error: Specified -walletdir \"/ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250725_103610/wallet_multiwallet_242/node0/regtest/wallets/notadir\" is not a directory \r\n node0 stderr Error: Specified -walletdir \"wallets\" is a relative path \r\n node0 stderr Error: Specified -walletdir \"bad\" does not exist \r\n node0 stderr Warning: Ignoring duplicate -wallet w1. \r\n node0 stderr Error: Specified -walletdir \"wallets\" does not exist \r\n node0 stderr Error: Error parsing command line arguments: Invalid parameter -upgradewallet \r\n node1 stderr Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another instance of Bitcoin Core? \r\n```\r\n\r\n</details>",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32862#issuecomment-3117350070",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32862"
    },
    {
      "event": "referenced",
      "id": 18815600590,
      "node_id": "REFE_lADOABII586-rL1ezwAAAARhf0fO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18815600590",
      "actor": {
        "login": "alexanderwiederin",
        "id": 37130778,
        "node_id": "MDQ6VXNlcjM3MTMwNzc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37130778?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexanderwiederin",
        "html_url": "https://github.com/alexanderwiederin",
        "followers_url": "https://api.github.com/users/alexanderwiederin/followers",
        "following_url": "https://api.github.com/users/alexanderwiederin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexanderwiederin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexanderwiederin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexanderwiederin/subscriptions",
        "organizations_url": "https://api.github.com/users/alexanderwiederin/orgs",
        "repos_url": "https://api.github.com/users/alexanderwiederin/repos",
        "events_url": "https://api.github.com/users/alexanderwiederin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexanderwiederin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9997c3d9933604190fb2fce86f640f95764618d9",
      "commit_url": "https://api.github.com/repos/alexanderwiederin/rust-bitcoinkernel/commits/9997c3d9933604190fb2fce86f640f95764618d9",
      "created_at": "2025-07-25T14:10:39Z"
    },
    {
      "event": "commented",
      "id": 3118790215,
      "node_id": "IC_kwDOABII58655PZH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3118790215",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-25T15:43:03Z",
      "updated_at": "2025-07-25T15:43:03Z",
      "author_association": "MEMBER",
      "body": "I'm unable to reproduce so far building master at 6cdc5a90cffe9ced4ec50d2028c9896d25a9cb6a\r\n\r\n\r\non Debian:\r\n\r\n`cmake -B ./bld-cmake -DCMAKE_C_COMPILER='clang-16' -DCMAKE_CXX_COMPILER='clang++-16' -DCMAKE_CXX_FLAGS='-std=c++20' -DBUILD_GUI=OFF -DBUILD_TESTS=OFF  -DSANITIZERS=thread && cmake --build ./bld-cmake --parallel $( nproc ) && TSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/tsan:halt_on_error=1:second_deadlock_stack=1\" ./bld-cmake/test/functional/wallet_multiwallet.py`\r\n\r\non macos (AppleClang 16.0.0)\r\n\r\n`cmake -B ./bld-cmake -DBUILD_GUI=OFF -DBUILD_TESTS=OFF  -DSANITIZERS=thread && cmake --build ./bld-cmake --parallel $( nproc ) && TSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/tsan:halt_on_error=1:second_deadlock_stack=1\" ./bld-cmake/test/functional/wallet_multiwallet.py`",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32862#issuecomment-3118790215",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32862"
    },
    {
      "event": "referenced",
      "id": 18848599495,
      "node_id": "REFE_lADOABII586-rL1ezwAAAARjds3H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18848599495",
      "actor": {
        "login": "alexanderwiederin",
        "id": 37130778,
        "node_id": "MDQ6VXNlcjM3MTMwNzc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37130778?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexanderwiederin",
        "html_url": "https://github.com/alexanderwiederin",
        "followers_url": "https://api.github.com/users/alexanderwiederin/followers",
        "following_url": "https://api.github.com/users/alexanderwiederin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexanderwiederin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexanderwiederin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexanderwiederin/subscriptions",
        "organizations_url": "https://api.github.com/users/alexanderwiederin/orgs",
        "repos_url": "https://api.github.com/users/alexanderwiederin/repos",
        "events_url": "https://api.github.com/users/alexanderwiederin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexanderwiederin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8d6ebb9c4e48e66b2b099241a25dd020d4a44a34",
      "commit_url": "https://api.github.com/repos/alexanderwiederin/rust-bitcoinkernel/commits/8d6ebb9c4e48e66b2b099241a25dd020d4a44a34",
      "created_at": "2025-07-28T07:44:58Z"
    },
    {
      "event": "referenced",
      "id": 18848602048,
      "node_id": "REFE_lADOABII586-rL1ezwAAAARjdtfA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18848602048",
      "actor": {
        "login": "alexanderwiederin",
        "id": 37130778,
        "node_id": "MDQ6VXNlcjM3MTMwNzc4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37130778?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/alexanderwiederin",
        "html_url": "https://github.com/alexanderwiederin",
        "followers_url": "https://api.github.com/users/alexanderwiederin/followers",
        "following_url": "https://api.github.com/users/alexanderwiederin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/alexanderwiederin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/alexanderwiederin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/alexanderwiederin/subscriptions",
        "organizations_url": "https://api.github.com/users/alexanderwiederin/orgs",
        "repos_url": "https://api.github.com/users/alexanderwiederin/repos",
        "events_url": "https://api.github.com/users/alexanderwiederin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/alexanderwiederin/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "533a4585b59dc147d445540fd742d7f6aff39359",
      "commit_url": "https://api.github.com/repos/alexanderwiederin/rust-bitcoinkernel/commits/533a4585b59dc147d445540fd742d7f6aff39359",
      "created_at": "2025-07-28T07:45:06Z"
    },
    {
      "event": "commented",
      "id": 3126641973,
      "node_id": "IC_kwDOABII5866XMU1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3126641973",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T10:45:37Z",
      "updated_at": "2025-07-28T10:45:37Z",
      "author_association": "MEMBER",
      "body": "> I'm unable to reproduce so far building master at [6cdc5a9](https://github.com/bitcoin/bitcoin/commit/6cdc5a90cffe9ced4ec50d2028c9896d25a9cb6a)\r\n\r\nYou'll have to use libc++, I guess?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32862#issuecomment-3126641973",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32862"
    },
    {
      "event": "commented",
      "id": 3127567379,
      "node_id": "IC_kwDOABII5866auQT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3127567379",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T14:43:49Z",
      "updated_at": "2025-07-28T14:43:49Z",
      "author_association": "MEMBER",
      "body": "Ok got a reliable crash on debian after upgrading to clang-20:\r\n\r\n```\r\n~/bitcoin$ rm -rf ./bld-cmake && \\\r\ncmake -B ./bld-cmake \\\r\n -DCMAKE_C_COMPILER='clang-20' \\\r\n -DCMAKE_CXX_COMPILER='clang++-20;-stdlib=libc++' \\\r\n -DBUILD_GUI=OFF \\\r\n -DBUILD_TESTS=OFF \\\r\n -DSANITIZERS=thread && \\\r\ncmake --build ./bld-cmake --parallel $( nproc ) && \\\r\nTSAN_OPTIONS=\"suppressions=$(pwd)/test/sanitizer_suppressions/tsan:halt_on_error=1:second_deadlock_stack=1\" ./bld-cmake/test/functional/wallet_multiwallet.py\r\n```\r\n\r\nStill could not reproduce on macos using clang-20 and essentially the same command, but will use debian to investigate and try to fix",
      "user": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32862#issuecomment-3127567379",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32862"
    },
    {
      "event": "commented",
      "id": 3127574724,
      "node_id": "IC_kwDOABII5866awDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3127574724",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T14:45:36Z",
      "updated_at": "2025-07-28T14:45:36Z",
      "author_association": "MEMBER",
      "body": "It looks like a false positive, so I guess if you really want to fix it, you'll have to do it upstream.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32862#issuecomment-3127574724",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32862"
    }
  ],
  "comments": []
}