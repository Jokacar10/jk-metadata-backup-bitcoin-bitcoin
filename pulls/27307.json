{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
    "id": 1286523296,
    "node_id": "PR_kwDOABII585Mrsmg",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/27307",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/27307.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/27307.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/5952292133d6cc889f51ae771f2e0557311e1efe",
    "number": 27307,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "wallet: track mempool conflicts with wallet transactions",
    "user": {
      "login": "ishaanam",
      "id": 75942586,
      "node_id": "MDQ6VXNlcjc1OTQyNTg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ishaanam",
      "html_url": "https://github.com/ishaanam",
      "followers_url": "https://api.github.com/users/ishaanam/followers",
      "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
      "organizations_url": "https://api.github.com/users/ishaanam/orgs",
      "repos_url": "https://api.github.com/users/ishaanam/repos",
      "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ishaanam/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "The `mempool_conflicts` variable is added to `CWalletTx`, it is a set of txids of txs in the mempool conflicting with the wallet tx or a wallet tx's parent. This PR only changes how mempool-conflicted txs are dealt with in memory.\r\n\r\n`IsSpent` now returns false for an output being spent by a mempool conflicted transaction where it previously returned true.\r\n\r\nA txid is added to `mempool_conflicts` during  `transactionAddedToMempool`. A txid is removed from `mempool_conflicts` during  `transactionRemovedFromMempool`.\r\n\r\nThis PR also adds a `mempoolconflicts` field to the `gettransaction` wallet RPC result.\r\n\r\nBuilds on #27145\r\nSecond attempt at #18600",
    "labels": [
      {
        "id": 149424,
        "node_id": "MDU6TGFiZWwxNDk0MjQ=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet",
        "name": "Wallet",
        "color": "08a781",
        "default": false
      }
    ],
    "created_at": "2023-03-22T21:30:01Z",
    "updated_at": "2025-03-27T07:42:02Z",
    "closed_at": "2024-03-27T16:45:17Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-03-27T16:45:17Z",
    "merged_by": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "c8e3978114716bb8fb10695b9d187652f3ab4926",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "ishaanam:track_mempool_wallet_conflicts",
      "ref": "track_mempool_wallet_conflicts",
      "sha": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 462046293,
        "node_id": "R_kgDOG4pEVQ",
        "name": "bitcoin",
        "full_name": "ishaanam/bitcoin",
        "owner": {
          "login": "ishaanam",
          "id": 75942586,
          "node_id": "MDQ6VXNlcjc1OTQyNTg2",
          "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ishaanam",
          "html_url": "https://github.com/ishaanam",
          "followers_url": "https://api.github.com/users/ishaanam/followers",
          "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
          "organizations_url": "https://api.github.com/users/ishaanam/orgs",
          "repos_url": "https://api.github.com/users/ishaanam/repos",
          "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ishaanam/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/ishaanam/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ishaanam/bitcoin",
        "archive_url": "https://api.github.com/repos/ishaanam/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ishaanam/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ishaanam/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ishaanam/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ishaanam/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ishaanam/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ishaanam/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ishaanam/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ishaanam/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ishaanam/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ishaanam/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ishaanam/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ishaanam/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ishaanam/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ishaanam/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ishaanam/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ishaanam/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ishaanam/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ishaanam/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ishaanam/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ishaanam/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ishaanam/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ishaanam/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ishaanam/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ishaanam/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ishaanam/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ishaanam/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ishaanam/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ishaanam/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ishaanam/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ishaanam/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ishaanam/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ishaanam/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ishaanam/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ishaanam/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ishaanam/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ishaanam/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ishaanam/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ishaanam/bitcoin/hooks",
        "svn_url": "https://github.com/ishaanam/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 252785,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-25T21:10:39Z",
        "created_at": "2022-02-21T22:03:42Z",
        "updated_at": "2022-08-26T19:13:19Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "bf1b6383dbbfdd0c96a161d4693a48bf3a6b6150",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36969,
        "stargazers_count": 82659,
        "watchers_count": 82659,
        "size": 278884,
        "default_branch": "master",
        "open_issues_count": 688,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-27T07:52:26Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-03-27T07:52:32Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 383,
    "deletions": 34,
    "changed_files": 10,
    "commits": 5,
    "review_comments": 146,
    "comments": 17
  },
  "events": [
    {
      "event": "commented",
      "id": 1480287022,
      "node_id": "IC_kwDOABII585YO2Mu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1480287022",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-22T21:30:09Z",
      "updated_at": "2024-03-27T13:07:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/27307).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [achow101](https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-2021315537), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1961735440), [furszy](https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1963245186) |\n| Approach ACK | [glozow](https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1643959917) |\n| Stale ACK | [murchandamus](https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1849792773) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29680](https://github.com/bitcoin/bitcoin/pull/29680) (wallet: fix unrelated parent conflict doesn't cause child tx to be marked as conflict by Eunovo)\n* [#28616](https://github.com/bitcoin/bitcoin/pull/28616) (Show transactions as not fully confirmed during background validation by Sjors)\n* [#27865](https://github.com/bitcoin/bitcoin/pull/27865) (wallet: Track no-longer-spendable TXOs separately by achow101)\n* [#27286](https://github.com/bitcoin/bitcoin/pull/27286) (wallet: Keep track of the wallet's own transaction outputs in memory by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1480287022",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "labeled",
      "id": 8821398827,
      "node_id": "LE_lADOABII585hi2CZzwAAAAINy90r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8821398827",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-03-22T21:30:11Z",
      "label": {
        "name": "Wallet",
        "color": "08a781"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8992834386,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAIYA8NS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8992834386",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ef722435b97039949b883d2fea40a6bb92124981",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/ef722435b97039949b883d2fea40a6bb92124981",
      "created_at": "2023-04-13T05:45:48Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 8993348760,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAIYC5yY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/8993348760",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f153a00907749566c9f49fada40aa1159d007ded",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/f153a00907749566c9f49fada40aa1159d007ded",
      "created_at": "2023-04-13T06:59:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9150686419,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAIhbGTT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9150686419",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ce757a5632afe511cded422ee66afeb4a6f83b61",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/ce757a5632afe511cded422ee66afeb4a6f83b61",
      "created_at": "2023-05-03T00:02:52Z"
    },
    {
      "event": "labeled",
      "id": 9150824421,
      "node_id": "LE_lADOABII585hi2CZzwAAAAIhbn_l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9150824421",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-03T00:45:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9240855679,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAImzER_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9240855679",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4ace58ee4b1297c84031fff4ee4b33ca5f6428c2",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/4ace58ee4b1297c84031fff4ee4b33ca5f6428c2",
      "created_at": "2023-05-14T22:38:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9240867966,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAImzHR-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9240867966",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "147957218283040bbc52391466ae5424d0ead9be",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/147957218283040bbc52391466ae5424d0ead9be",
      "created_at": "2023-05-14T22:50:35Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9240978695,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAImziUH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9240978695",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d9356d267140d2351934e56cd1daab86cb4f6500",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/d9356d267140d2351934e56cd1daab86cb4f6500",
      "created_at": "2023-05-15T00:06:33Z"
    },
    {
      "event": "unlabeled",
      "id": 9241133988,
      "node_id": "UNLE_lADOABII585hi2CZzwAAAAIm0IOk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9241133988",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-15T01:12:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9274743861,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAIo0Vw1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9274743861",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "03dc162d9cf93d236ffee27716e95e09b290ed83",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/03dc162d9cf93d236ffee27716e95e09b290ed83",
      "created_at": "2023-05-18T00:58:01Z"
    },
    {
      "event": "labeled",
      "id": 9274992856,
      "node_id": "LE_lADOABII585hi2CZzwAAAAIo1SjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9274992856",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-18T02:02:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 9358348196,
      "node_id": "LE_lADOABII585hi2CZzwAAAAItzQ-k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9358348196",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-27T19:04:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9359536399,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAIt3zEP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9359536399",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f1514057d8c9182f9f6f970dcb3aca6f5d090264",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/f1514057d8c9182f9f6f970dcb3aca6f5d090264",
      "created_at": "2023-05-28T01:23:41Z"
    },
    {
      "event": "ready_for_review",
      "id": 9359767663,
      "node_id": "RFRE_lADOABII585hi2CZzwAAAAIt4rhv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9359767663",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-28T02:26:24Z"
    },
    {
      "event": "unlabeled",
      "id": 9359852082,
      "node_id": "UNLE_lADOABII585hi2CZzwAAAAIt5AIy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9359852082",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-28T02:46:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 9359978006,
      "node_id": "UNLE_lADOABII585hi2CZzwAAAAIt5e4W",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9359978006",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-05-28T03:18:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9544753910,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAI46WL2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9544753910",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d4cbfee33a0d2aa275993d097c95eadef84dfb54",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/d4cbfee33a0d2aa275993d097c95eadef84dfb54",
      "created_at": "2023-06-15T20:37:39Z"
    },
    {
      "event": "labeled",
      "id": 9545143884,
      "node_id": "LE_lADOABII585hi2CZzwAAAAI471ZM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9545143884",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-15T21:35:43Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9545190348,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAI48AvM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9545190348",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ee11596f4a8654642c67c179bb902fd5a6cd65a5",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/ee11596f4a8654642c67c179bb902fd5a6cd65a5",
      "created_at": "2023-06-15T21:43:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9561566367,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAI56eyf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9561566367",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8c1773b9ace81c1ebb65c02adfb625e9c26f2a07",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/8c1773b9ace81c1ebb65c02adfb625e9c26f2a07",
      "created_at": "2023-06-18T16:46:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9561625455,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAI56tNv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9561625455",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0538ad7d4cfddb5a377f879cbf221b2b028c264a",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/0538ad7d4cfddb5a377f879cbf221b2b028c264a",
      "created_at": "2023-06-18T17:16:20Z"
    },
    {
      "event": "unlabeled",
      "id": 9561760111,
      "node_id": "UNLE_lADOABII585hi2CZzwAAAAI57OFv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9561760111",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-18T18:30:15Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1502236845,
      "node_id": "PRR_kwDOABII585ZilCt",
      "url": null,
      "actor": null,
      "commit_id": "0538ad7d4cfddb5a377f879cbf221b2b028c264a",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "evansmj",
        "id": 11140095,
        "node_id": "MDQ6VXNlcjExMTQwMDk1",
        "avatar_url": "https://avatars.githubusercontent.com/u/11140095?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/evansmj",
        "html_url": "https://github.com/evansmj",
        "followers_url": "https://api.github.com/users/evansmj/followers",
        "following_url": "https://api.github.com/users/evansmj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/evansmj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/evansmj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/evansmj/subscriptions",
        "organizations_url": "https://api.github.com/users/evansmj/orgs",
        "repos_url": "https://api.github.com/users/evansmj/repos",
        "events_url": "https://api.github.com/users/evansmj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/evansmj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1502236845",
      "submitted_at": "2023-06-28T04:26:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9681051395,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAJBCR8D",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9681051395",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4b3ea14f6b3152b1a65eb1dacafc8871b83f69c6",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/4b3ea14f6b3152b1a65eb1dacafc8871b83f69c6",
      "created_at": "2023-06-29T20:06:36Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9681060046,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAJBCUDO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9681060046",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "69d19aebde08a97de9ff71d255b8da70bcf07d14",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/69d19aebde08a97de9ff71d255b8da70bcf07d14",
      "created_at": "2023-06-29T20:07:23Z"
    },
    {
      "event": "labeled",
      "id": 9681814608,
      "node_id": "LE_lADOABII585hi2CZzwAAAAJBFMRQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9681814608",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-29T21:30:25Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9683212362,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAJBKhhK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9683212362",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5fae814de2472405d0ba1c9f585a53cff45ff2c5",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/5fae814de2472405d0ba1c9f585a53cff45ff2c5",
      "created_at": "2023-06-30T02:26:15Z"
    },
    {
      "event": "unlabeled",
      "id": 9683667006,
      "node_id": "UNLE_lADOABII585hi2CZzwAAAAJBMQg-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9683667006",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-06-30T04:01:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9832278361,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAJKDKlZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9832278361",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c4725171b635d7533b7a13ae9d8563e00fe1fed3",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/c4725171b635d7533b7a13ae9d8563e00fe1fed3",
      "created_at": "2023-07-17T01:52:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9832287187,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAJKDMvT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9832287187",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7aa98d17f671a4b744478991f2994f5a98dd3dad",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/7aa98d17f671a4b744478991f2994f5a98dd3dad",
      "created_at": "2023-07-17T01:55:58Z"
    },
    {
      "event": "labeled",
      "id": 9832626771,
      "node_id": "LE_lADOABII585hi2CZzwAAAAJKEfpT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9832626771",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-17T03:41:10Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9832836743,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAJKFS6H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9832836743",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "42412c592e01960e77972321f1f6999342cb0c6c",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/42412c592e01960e77972321f1f6999342cb0c6c",
      "created_at": "2023-07-17T04:27:43Z"
    },
    {
      "event": "reviewed",
      "id": 1540742589,
      "node_id": "PRR_kwDOABII585b1d29",
      "url": null,
      "actor": null,
      "commit_id": "42412c592e01960e77972321f1f6999342cb0c6c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1540742589",
      "submitted_at": "2023-07-21T08:46:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 9892097990,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAJNnW_G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9892097990",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "20d58f2554ba5cad1e6385a0f2d87b3750581442",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/20d58f2554ba5cad1e6385a0f2d87b3750581442",
      "created_at": "2023-07-23T04:28:24Z"
    },
    {
      "event": "unlabeled",
      "id": 9892189412,
      "node_id": "UNLE_lADOABII585hi2CZzwAAAAJNntTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/9892189412",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-07-23T06:10:57Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "review_requested",
      "id": 10425853851,
      "node_id": "RRE_lADOABII585hi2CZzwAAAAJtbeeb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10425853851",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T17:12:36Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10425853861,
      "node_id": "RRE_lADOABII585hi2CZzwAAAAJtbeel",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10425853861",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T17:12:36Z",
      "requested_reviewer": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10425853868,
      "node_id": "RRE_lADOABII585hi2CZzwAAAAJtbees",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10425853868",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T17:12:36Z",
      "requested_reviewer": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 10425853878,
      "node_id": "RRE_lADOABII585hi2CZzwAAAAJtbee2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10425853878",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-09-20T17:12:37Z",
      "requested_reviewer": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "labeled",
      "id": 10682983178,
      "node_id": "LE_lADOABII585hi2CZzwAAAAJ8wWMK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10682983178",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-17T19:42:28Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10685129474,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAJ84iMC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10685129474",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a29849740becd62175a450b9c227bd7bfafe8a86",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/a29849740becd62175a450b9c227bd7bfafe8a86",
      "created_at": "2023-10-17T23:44:29Z"
    },
    {
      "event": "unlabeled",
      "id": 10685169992,
      "node_id": "UNLE_lADOABII585hi2CZzwAAAAJ84sFI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10685169992",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-10-17T23:52:33Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1713437792,
      "node_id": "PRR_kwDOABII585mIPxg",
      "url": null,
      "actor": null,
      "commit_id": "a29849740becd62175a450b9c227bd7bfafe8a86",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1713437792",
      "submitted_at": "2023-11-03T20:11:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10863851559,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAKHiTgn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10863851559",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/003efbbe45079c4416810a025b2bc372559dff15",
      "created_at": "2023-11-04T23:47:06Z"
    },
    {
      "event": "reviewed",
      "id": 1716221992,
      "node_id": "PRR_kwDOABII585mS3go",
      "url": null,
      "actor": null,
      "commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1716221992",
      "submitted_at": "2023-11-06T21:39:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "labeled",
      "id": 10890748087,
      "node_id": "LE_lADOABII585hi2CZzwAAAAKJI6C3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10890748087",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-07T18:29:40Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1721396961,
      "node_id": "PRR_kwDOABII585mmm7h",
      "url": null,
      "actor": null,
      "commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1721396961",
      "submitted_at": "2023-11-09T20:33:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10930901579,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAKLiFJL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10930901579",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4d7524a563aa8ef8c075ce337e985a2d1aaeddd6",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/4d7524a563aa8ef8c075ce337e985a2d1aaeddd6",
      "created_at": "2023-11-11T01:52:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10930944120,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAKLiPh4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10930944120",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e2abed83cfce34f1f4cf9d458f2100835d41cb3f",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/e2abed83cfce34f1f4cf9d458f2100835d41cb3f",
      "created_at": "2023-11-11T02:09:02Z"
    },
    {
      "event": "labeled",
      "id": 10931012078,
      "node_id": "LE_lADOABII585hi2CZzwAAAAKLigHu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931012078",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T02:32:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 10931213286,
      "node_id": "UNLE_lADOABII585hi2CZzwAAAAKLjRPm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931213286",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T03:55:37Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10931331219,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAKLjuCT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931331219",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "63d0550323383e189bdfa13481d9cf40502d6d26",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/63d0550323383e189bdfa13481d9cf40502d6d26",
      "created_at": "2023-11-11T04:46:04Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10931352384,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAKLjzNA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931352384",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "19bb5842562582d831bc4af4d03e3671455bbcdd",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/19bb5842562582d831bc4af4d03e3671455bbcdd",
      "created_at": "2023-11-11T04:55:26Z"
    },
    {
      "event": "commented",
      "id": 1806687648,
      "node_id": "IC_kwDOABII585rr92g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1806687648",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T04:58:27Z",
      "updated_at": "2023-11-11T04:58:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased and addressed most of the review comments (thanks @achow101 and @murchandamus). I will address the remaining comments soon. ",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1806687648",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "mentioned",
      "id": 10931356870,
      "node_id": "MEE_lADOABII585hi2CZzwAAAAKLj0TG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931356870",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T04:58:27Z"
    },
    {
      "event": "subscribed",
      "id": 10931356878,
      "node_id": "SE_lADOABII585hi2CZzwAAAAKLj0TO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931356878",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T04:58:27Z"
    },
    {
      "event": "mentioned",
      "id": 10931356887,
      "node_id": "MEE_lADOABII585hi2CZzwAAAAKLj0TX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931356887",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T04:58:27Z"
    },
    {
      "event": "subscribed",
      "id": 10931356892,
      "node_id": "SE_lADOABII585hi2CZzwAAAAKLj0Tc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10931356892",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-11T04:58:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 10962788307,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAKNbt_T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10962788307",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "22778ac98f1bcb695de8ccf0b02fe9ebe39b01aa",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/22778ac98f1bcb695de8ccf0b02fe9ebe39b01aa",
      "created_at": "2023-11-15T04:35:27Z"
    },
    {
      "event": "commented",
      "id": 1811798648,
      "node_id": "IC_kwDOABII585r_dp4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1811798648",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-15T04:40:59Z",
      "updated_at": "2023-11-15T04:40:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "I have addressed the remaining questions, the only changes are the addition of comments to the functional test. ",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1811798648",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "unlabeled",
      "id": 10963023126,
      "node_id": "UNLE_lADOABII585hi2CZzwAAAAKNcnUW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/10963023126",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-11-15T05:19:07Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1797438722,
      "node_id": "PRR_kwDOABII585rIr0C",
      "url": null,
      "actor": null,
      "commit_id": "22778ac98f1bcb695de8ccf0b02fe9ebe39b01aa",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK  22778ac98f1bcb695de8ccf0b02fe9ebe39b01aa",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1797438722",
      "submitted_at": "2023-12-27T19:18:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11347086080,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAKkVssA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11347086080",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d4259cdaff2128c25e877d6a64e6ce15ecb9beca",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/d4259cdaff2128c25e877d6a64e6ce15ecb9beca",
      "created_at": "2023-12-27T20:27:57Z"
    },
    {
      "event": "commented",
      "id": 1870633370,
      "node_id": "IC_kwDOABII585vf5ma",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1870633370",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2023-12-27T21:19:06Z",
      "updated_at": "2023-12-27T21:19:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/27307/commits/d4259cdaff2128c25e877d6a64e6ce15ecb9beca, only documentation change",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1870633370",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "labeled",
      "id": 11477855333,
      "node_id": "LE_lADOABII585hi2CZzwAAAAKsIixl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11477855333",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-13T12:05:56Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 11588255090,
      "node_id": "LE_lADOABII585hi2CZzwAAAAKytr1y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11588255090",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-24T18:47:05Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11632525535,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAK1WkDf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11632525535",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "71059cf4267d80d2934b85a7046fc7b64900378b",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/71059cf4267d80d2934b85a7046fc7b64900378b",
      "created_at": "2024-01-29T19:50:24Z"
    },
    {
      "event": "unlabeled",
      "id": 11632826937,
      "node_id": "UNLE_lADOABII585hi2CZzwAAAAK1Xto5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11632826937",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T20:20:04Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1849792773,
      "node_id": "PRR_kwDOABII585uQZkF",
      "url": null,
      "actor": null,
      "commit_id": "71059cf4267d80d2934b85a7046fc7b64900378b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 71059cf4267d80d2934b85a7046fc7b64900378b",
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1849792773",
      "submitted_at": "2024-01-29T21:45:19Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "unlabeled",
      "id": 11634209000,
      "node_id": "UNLE_lADOABII585hi2CZzwAAAAK1c_Do",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11634209000",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-29T22:56:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1643959917,
      "node_id": "PRR_kwDOABII585h_NZt",
      "url": null,
      "actor": null,
      "commit_id": "71059cf4267d80d2934b85a7046fc7b64900378b",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1643959917",
      "submitted_at": "2024-01-30T16:40:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "comment_deleted",
      "id": 11644955821,
      "node_id": "CDE_lADOABII585hi2CZzwAAAAK2F-yt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11644955821",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-01-30T17:06:30Z"
    },
    {
      "event": "reviewed",
      "id": 1853918541,
      "node_id": "PRR_kwDOABII585ugI1N",
      "url": null,
      "actor": null,
      "commit_id": "71059cf4267d80d2934b85a7046fc7b64900378b",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review 71059cf4267d80d2934b85a7046fc7b64900378b\r\n\r\nI'm starting to review this, but I don't understand how it interacts with abandoned transactions. Is it still possible to abandon a transaction with conflicts with the mempool? If a transaction is already abandoned and we know it conflicts with the mempool does `isMempoolConflicted` still return false?\r\n\r\nIt seems to me like a more straightforward way to implement this feature would be to add a `bool mempool_conflicts` field to `TxStateInactive` rather than adding a new `TxStateMempoolConflicted` state. The description of `TxStateInactive` says \"May conflict with the mempool, or with an unknown block, or be abandoned, never broadcast, or rejected from the mempool for another reason.\" So the inactive state was meant to handle transactions that could have conflicts or be inactive for a variety of reasons.\r\n\r\nI think I would recommend removing the new `MempoolConflicted` state here, but otherwise keeping this PR unchanged. The mempool tracking feature, renames, and other cleanups here do seem very nice, so it is good to see this work.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1853918541",
      "submitted_at": "2024-01-31T15:34:34Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11678328225,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAK4FSWh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11678328225",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2600a28a776b2cd4c182b87e0fbae15ef3b8b40a",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/2600a28a776b2cd4c182b87e0fbae15ef3b8b40a",
      "created_at": "2024-02-02T02:49:20Z"
    },
    {
      "event": "reviewed",
      "id": 1860489670,
      "node_id": "PRR_kwDOABII585u5NHG",
      "url": null,
      "actor": null,
      "commit_id": "2600a28a776b2cd4c182b87e0fbae15ef3b8b40a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1860489670",
      "submitted_at": "2024-02-02T22:31:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "commented",
      "id": 1924814451,
      "node_id": "IC_kwDOABII585yulZz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924814451",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-02T22:37:01Z",
      "updated_at": "2024-02-02T22:37:19Z",
      "author_association": "MEMBER",
      "body": "> It seems to me like a more straightforward way to implement this feature would be to add a `bool mempool_conflicts` field to `TxStateInactive` rather than adding a new `TxStateMempoolConflicted` state. The description of `TxStateInactive` says \"May conflict with the mempool, or with an unknown block, or be abandoned, never broadcast, or rejected from the mempool for another reason.\" So the inactive state was meant to handle transactions that could have conflicts or be inactive for a variety of reasons.\r\n\r\nPersonally, I don't like how `TxStateInactive` is so broad. It's kind of a catch-all \"transaction is neither in a block nor in the mempool, and we don't know why\" (except for abandoned, and even then, I don't like how abandoned is a part of it and not a separate state). This PR introduces a distinct state of \"transaction currently has things in the mempool that conflict with it\" which is specific and we know the reason that something is not in the mempool, so I think it makes sense to be a separate state. I think it's more useful to carve out from `TxStateInactive` more specific states with reasons that we know for sure why something is in that state.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1924814451",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "commented",
      "id": 1924946068,
      "node_id": "IC_kwDOABII585yvFiU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924946068",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-03T00:43:17Z",
      "updated_at": "2024-02-03T01:00:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Personally, I don't like how `TxStateInactive` is so broad. [...]\r\n\r\nSure, but then I'm pretty sure we need to add a `bool abandoned;` field to the `TxStateMempoolConflicted` struct so we don't lose track of whether the user has abandoned the transaction.\r\n\r\nAlternately, we could go more in the other direction, getting rid of the inactive catch-all and dividing TxStateInactive into 4 states:\r\n\r\n- TxStateAbandonedAndConflictsWithMempool\r\n- TxStateAbandonedAndProbablyDoesntConflictWithMempool\r\n- TxStateNotAbandonedAndConflictsWithMempool\r\n- TxStateNotAbandonedAndProbablyDoesntConflictWithMempool\r\n\r\nPersonally I think just keeping the `TxStateInactive` state with `bool abandoned; bool mempool_conflicts;` is better than subdividing it, because most wallet code should just need to consider whether transactions are active or not, without reverse-engineering the causes of transaction becoming inactive and making special cases out of them. But any of these approaches would be fine as long as we aren't losing track of whether a transaction is abandoned after a conflict is detected.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1924946068",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "commented",
      "id": 1924962910,
      "node_id": "IC_kwDOABII585yvJpe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924962910",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-03T00:56:27Z",
      "updated_at": "2024-02-03T01:04:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Personally, I don't like how `TxStateInactive` is so broad. [...]\r\n\r\nI will also add that I think adding a new top-level state instead of just adding a new field to TxStateInactive makes this PR considerably harder to review because you have to manually search for every line of code that is accessing the `m_state` field directly or indirectly and verify that it is either:\r\n\r\n1. Treating the TxStateInactive and TxStateMempoolConflicted states equivalently and not changing behavior\r\n2. Treating the TxStateInactive and TxStateMempoolConflicted states differently and changing behavior in a useful way.\r\n\r\nIf can avoid adding a new top-level state it would make this PR easier to review, because you could focus on the second case, and easily see where behavior is changing and not changing, which I don't think is possible with the current approach.\r\n\r\nThis is not a fundamental objection, but might be something to consider.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1924962910",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "commented",
      "id": 1924998475,
      "node_id": "IC_kwDOABII585yvSVL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924998475",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-03T01:25:30Z",
      "updated_at": "2024-02-03T01:25:30Z",
      "author_association": "MEMBER",
      "body": "> Sure, but then I'm pretty sure we need to add a `bool abandoned;` field to the `TxStateMempoolConflicted` struct so we don't lose track of whether the user has abandoned the transaction.\r\n\r\nWe already lose track of that if a conflict is created and that conflict confirms. Abandoned is not a permanent state - as soon as it shows back up in the mempool, it'll no longer be abandoned. As soon as a conflict appears in a block, it'll no longer be abandoned. Likewise, if a transaction shows up in the mempool that conflicts with it, it should reflect that it is now conflicted and no longer needs to be marked as abandoned. Abandoned has always been a transient state since someone else could rebroadcast the transaction to the network. Once there's something else that makes the transaction invalid, I don't think it's useful to keep track of whether it is abandoned, so we wouldn't need to have more states to track that.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1924998475",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "commented",
      "id": 1925021602,
      "node_id": "IC_kwDOABII585yvX-i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1925021602",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-03T02:11:42Z",
      "updated_at": "2024-02-03T02:11:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Abandoned is not a permanent state - as soon as it shows back up in the mempool, it'll no longer be abandoned.\r\n\r\nIt makes sense that a transaction in the mempool can't be treated as abandoned. But I don't see why the abandoned state be should be cleared just because a mempool heuristic happened to detect a conflict. That just seems like a bad UX and a confusion of two orthogonal concepts. The abandoned state is transient in the sense that it can be overriden by mempool events and block confirmations, but it should be less transient than the mempool conflicted state because it (1) reflects user intent and (2) is actually serialized to disk, so it doesn't seem to me something that should be thrown away unnecessarily.\r\n\r\nAlso, the PR description doesn't mention anything about discarding the abandoned state so this seems to me like an unintentional bug than a sensible design choice.\r\n\r\nI would just recommend adding the conflict tracking feature without adding a new top level state and without changing the behavior of abandoned transactions (especially unintentionally). It would shrink this PR, make it safer and easier to review, and provide all the benefits of the current implementation. IMO, if we really do want to change the transaction state diagram and add new top level states, I think it would be better to do in a separate PR not tied to adding a new tracking feature.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1925021602",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11698957154,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAK5T-ti",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11698957154",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "600fc562f815941b4a95c9f4f357dc6eed04be6c",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/600fc562f815941b4a95c9f4f357dc6eed04be6c",
      "created_at": "2024-02-05T05:44:47Z"
    },
    {
      "event": "commented",
      "id": 1926350798,
      "node_id": "IC_kwDOABII585y0cfO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1926350798",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-05T07:08:40Z",
      "updated_at": "2024-02-05T07:08:40Z",
      "author_association": "CONTRIBUTOR",
      "body": ">  Is it still possible to abandon a transaction with conflicts with the mempool?\r\n\r\nYes, because of [this](https://github.com/bitcoin/bitcoin/pull/27307/commits/3de89342dcd44bdde4027a91cb27793dc0231847#diff-1f2db0e4d5c12d109c7f0962333c245b49b696cb39ff432da048e9d6c08944d8L1313-R1313) change. \r\n\r\n> If a transaction is already abandoned and we know it conflicts with the mempool does isMempoolConflicted still return false?\r\n\r\nYes\r\n\r\n> Sure, but then I'm pretty sure we need to add a bool abandoned; field to the TxStateMempoolConflicted struct so we don't lose track of whether the user has abandoned the transaction.\r\n\r\nIf the transaction has been abandoned, then it won't be marked as `TxStateMempoolConflicted` because of [these](https://github.com/bitcoin/bitcoin/pull/27307/commits/3de89342dcd44bdde4027a91cb27793dc0231847#diff-1f2db0e4d5c12d109c7f0962333c245b49b696cb39ff432da048e9d6c08944d8R1443-R1444) lines of code. Although the conflicting transactions are kept track of regardless, the actual transaction state only changes if the transaction is inactive (not abandoned).\r\n\r\n> I would just recommend adding the conflict tracking feature without adding a new top level state and without changing the behavior of abandoned transactions (especially unintentionally). It would shrink this PR, make it safer and easier to review, and provide all the benefits of the current implementation. IMO, if we really do want to change the transaction state diagram and add new top level states, I think it would be better to do in a separate PR not tied to adding a new tracking feature.\r\n\r\nFrom what I can tell, this PR is not changing the behavior of abandoned transactions. That being said, if anybody still thinks that `TxStateMempoolConflicted` should be removed in favor of just adding a boolean to `TxStateInactive`, I would be willing to implement that. I just think that `TxStateMempoolConflicted` makes more of a transition towards having more specific transaction states, which seems to be something we want. ",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1926350798",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "commented",
      "id": 1930854540,
      "node_id": "IC_kwDOABII585zFoCM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1930854540",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-06T22:18:34Z",
      "updated_at": "2024-02-06T22:18:34Z",
      "author_association": "MEMBER",
      "body": "ACK 600fc562f815941b4a95c9f4f357dc6eed04be6c",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1930854540",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "review_requested",
      "id": 11724585568,
      "node_id": "RRE_lADOABII585hi2CZzwAAAAK61vpg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11724585568",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-06T22:18:40Z",
      "requested_reviewer": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 11724585675,
      "node_id": "RRE_lADOABII585hi2CZzwAAAAK61vrL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11724585675",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-06T22:18:41Z",
      "requested_reviewer": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1867972899,
      "node_id": "PRR_kwDOABII585vVwEj",
      "url": null,
      "actor": null,
      "commit_id": "600fc562f815941b4a95c9f4f357dc6eed04be6c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "light review, left few comments, nothing big.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1867972899",
      "submitted_at": "2024-02-07T15:14:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11751970349,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAK8eNYt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11751970349",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3471ebc8c6ee268ad501525121ea3f3a221fb5ad",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/3471ebc8c6ee268ad501525121ea3f3a221fb5ad",
      "created_at": "2024-02-08T22:32:14Z"
    },
    {
      "event": "commented",
      "id": 1935283402,
      "node_id": "IC_kwDOABII585zWhTK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935283402",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T03:30:32Z",
      "updated_at": "2024-02-09T03:30:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21385308940</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1935283402",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "labeled",
      "id": 11753479277,
      "node_id": "LE_lADOABII585hi2CZzwAAAAK8j9xt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11753479277",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T03:30:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11760599151,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAK8_IBv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11760599151",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "09bc2699dfa3170317d09478ce6a3e717cd06028",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/09bc2699dfa3170317d09478ce6a3e717cd06028",
      "created_at": "2024-02-09T17:18:30Z"
    },
    {
      "event": "commented",
      "id": 1936304636,
      "node_id": "IC_kwDOABII585zaan8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1936304636",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T17:21:32Z",
      "updated_at": "2024-02-09T17:21:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1926350798\r\n\r\nThanks ishaanam for pointing out the lines of code that answer my questions. Since original links got broken in rebase, here are stable links that point to the two lines of code which prioritize the abandoned state over the conflicted state:\r\n\r\n- https://github.com/bitcoin/bitcoin/commit/3de89342dcd44bdde4027a91cb27793dc0231847#diff-1f2db0e4d5c12d109c7f0962333c245b49b696cb39ff432da048e9d6c08944d8L1313-R1313\r\n- https://github.com/bitcoin/bitcoin/commit/3de89342dcd44bdde4027a91cb27793dc0231847#diff-1f2db0e4d5c12d109c7f0962333c245b49b696cb39ff432da048e9d6c08944d8R1443-R1444\r\n\r\nThis is better than what I was afraid of, since the abandoned state consistently takes priority over the mempoolconflicted state. But this behavior is fragile and unnecessarily complicates our internal model and potential RPC and GUI interfaces, because there's no logical reason for the abandoned and mempool conflicted states to contradict each other, when both can be true at the same time.\r\n\r\nIf we take the current approach in 3471ebc8c6ee268ad501525121ea3f3a221fb5ad, we will have to be careful going forward, whenever we do any state change, to remember that the abandoned state is supposed to take priority over the mempool conflicted state (this is not even documented anywhere), and decide how we want to deal with potentially odd states like `mempool_conflicts` set being nonempty when the transaction is not in the `MempoolConflicted` state.\r\n\r\nFor background, I already think it's bad that abandoned and block-conflicted states exclude each other, and that the block conflicted state takes priority over the abandoned state and resets it. But the block conflicted state is pretty permanent, so it's basically just a UI quirk if a block conflict causes the abandoned state to be forgotten about. There are also backwards compatibility benefits to storing the block conflict and abandoned bit exclusively in the same field.\r\n\r\nIn the current case, though, there are no backwards compatibility concerns, so it seems wrong and unnecessary to go out our way to create an unenforced, undocumented, and confusing hierarchy of states: _MempoolConflicted < Abandoned < BlockConflicted_, when there is a simpler alternative of just straightforwardly representing the information we have about transactions directly.\r\n\r\nIt seems pretty clear to me that it would make this change simpler, safer and easier to review, make the code more straightforward and maintainable long term, and avoid potential bugs and confusion in the UI if it just represented abandoned and mempool conflicted states independently and didn't try to establish a hierarchy between them.\r\n\r\nI think a good approach would avoid adding a `TxStateMempoolConflicted` top-level state, and just add a `bool mempool_conflicts` or `std::set<Txid> mempool_conflicts` member to the `TxStateInactive` struct. And it is good to rename `TxStateConflicted` to `TxStateBlockConflicted` too for clarity. If you're skeptical of this approach, I'd be curious to know why, but we can also experiment in a separate PR if you are concerned there are benefits in this PR which would be lost.\r\n\r\nIf it would be helpful, I could make another PR next week to compare the two approaches. But I'd be curious to know what you think. There is a lot of a complexity and a long history of bugs in wallet transaction state tracking (https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking) so I think think it is worth taking a little more time to get this right.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1936304636",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "unlabeled",
      "id": 11761101395,
      "node_id": "UNLE_lADOABII585hi2CZzwAAAAK9BCpT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11761101395",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-09T18:14:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11766278646,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAAK9Uyn2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11766278646",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c891a65067f57ba87e443d0cdc4f7e6b434c436f",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/c891a65067f57ba87e443d0cdc4f7e6b434c436f",
      "created_at": "2024-02-11T05:15:55Z"
    },
    {
      "event": "commented",
      "id": 1937431126,
      "node_id": "IC_kwDOABII585zetpW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937431126",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-11T05:19:58Z",
      "updated_at": "2024-02-11T05:19:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I think a good approach would avoid adding a TxStateMempoolConflicted top-level state, and just add a bool mempool_conflicts or std::set<Txid> mempool_conflicts member to the TxStateInactive struct.\r\n\r\nThanks for your feedback, I have implemented this. ",
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1937431126",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "reviewed",
      "id": 1883484751,
      "node_id": "PRR_kwDOABII585wQ7JP",
      "url": null,
      "actor": null,
      "commit_id": "c891a65067f57ba87e443d0cdc4f7e6b434c436f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review c891a65067f57ba87e443d0cdc4f7e6b434c436f.\r\n\r\nThanks for the updates! A lot of nice changes and test coverage here, and I think the PR looks close to ready to ACK, though I did leave a number of suggestions below. Most of these should be very simple or simplify code, so should not create too much work.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1883484751",
      "submitted_at": "2024-02-15T20:49:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11897590974,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAALFJtS-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11897590974",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "923734ef6528e5d4e13748db7387f44d02237d4d",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/923734ef6528e5d4e13748db7387f44d02237d4d",
      "created_at": "2024-02-22T22:47:48Z"
    },
    {
      "event": "labeled",
      "id": 11898009674,
      "node_id": "LE_lADOABII585hi2CZzwAAAALFLThK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11898009674",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T23:52:45Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1960529036,
      "node_id": "IC_kwDOABII585020yM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1960529036",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-22T23:52:46Z",
      "updated_at": "2024-02-22T23:52:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21886408495</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1960529036",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "reviewed",
      "id": 1898382151,
      "node_id": "PRR_kwDOABII585xJwNH",
      "url": null,
      "actor": null,
      "commit_id": "923734ef6528e5d4e13748db7387f44d02237d4d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 923734ef6528e5d4e13748db7387f44d02237d4d. Seems like a very nice change that improves the wallet balance calculation and ability to spend, and also returns useful information about the mempool.\r\n\r\nThanks for the updates, too. I think comparing current a650caab9f11be7f5927f9aa556bb7d2a8ebed33 to previous a6ae5b23b1497ab6f4899db49348db623700a2d8, the resulting code is simpler and the charges are more direct and easier to review.\r\n\r\nI left some more suggestions below, but most are not important and none are critical so feel free to ignore them.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1898382151",
      "submitted_at": "2024-02-23T16:38:22Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "review_requested",
      "id": 11905888163,
      "node_id": "RRE_lADOABII585hi2CZzwAAAALFpW-j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11905888163",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-23T16:38:28Z",
      "requested_reviewer": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11946812135,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAALIFeLn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11946812135",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b853688c92d3745d5ec2ec5119584148084e7c1c",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/b853688c92d3745d5ec2ec5119584148084e7c1c",
      "created_at": "2024-02-28T06:04:43Z"
    },
    {
      "event": "unlabeled",
      "id": 11947210276,
      "node_id": "UNLE_lADOABII585hi2CZzwAAAALIG_Yk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11947210276",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T07:00:09Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1909652746,
      "node_id": "PRR_kwDOABII585x0v0K",
      "url": null,
      "actor": null,
      "commit_id": "b853688c92d3745d5ec2ec5119584148084e7c1c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK b853688c92d3745d5ec2ec5119584148084e7c1c. Just more simplifications since that last review. This PR keeps getting smaller and simpler, and seems like a very obvious improvement now.\r\n\r\nI left another suggestion (really 2 related suggestions), but it is not very important. This looks good in its current form.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1909652746",
      "submitted_at": "2024-02-29T19:28:00Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "reviewed",
      "id": 1920971953,
      "node_id": "PRR_kwDOABII585yf7Sx",
      "url": null,
      "actor": null,
      "commit_id": "b853688c92d3745d5ec2ec5119584148084e7c1c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "left few small things. Will get deeper.",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1920971953",
      "submitted_at": "2024-03-07T02:48:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "reviewed",
      "id": 1922351025,
      "node_id": "PRR_kwDOABII585ylL-x",
      "url": null,
      "actor": null,
      "commit_id": "b853688c92d3745d5ec2ec5119584148084e7c1c",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1922351025",
      "submitted_at": "2024-03-07T14:56:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE4MDk3M2E5NDE4MGY5ODQ5YmY3Y2IwZGFiN2M5MTc3YTk0MmVmYjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/180973a94180f9849bf7cb0dab7c9177a942efb8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/180973a94180f9849bf7cb0dab7c9177a942efb8",
      "tree": {
        "sha": "fe800a4beeedb1483a979d7022d6e2550b403e42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fe800a4beeedb1483a979d7022d6e2550b403e42"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/207220ce8b767d8efdb5abf042ecf23d846ded73",
          "sha": "207220ce8b767d8efdb5abf042ecf23d846ded73",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/207220ce8b767d8efdb5abf042ecf23d846ded73"
        }
      ],
      "message": "test: Add tests for wallet mempool conflicts",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2024-03-14T21:09:59Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2024-02-01T22:59:43Z"
      },
      "sha": "180973a94180f9849bf7cb0dab7c9177a942efb8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZmZTVmZjFmYjYyMmE4ZGExMWI2NjI4OWUxYjc3OGU0NWU0NDk4MTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffe5ff1fb622a8da11b66289e1b778e45e449811",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/ffe5ff1fb622a8da11b66289e1b778e45e449811",
      "tree": {
        "sha": "8e897b4078b6baefb9e3944b00be3b3de0e3f996",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e897b4078b6baefb9e3944b00be3b3de0e3f996"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/180973a94180f9849bf7cb0dab7c9177a942efb8",
          "sha": "180973a94180f9849bf7cb0dab7c9177a942efb8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/180973a94180f9849bf7cb0dab7c9177a942efb8"
        }
      ],
      "message": "scripted-diff: wallet: s/TxStateConflicted/TxStateBlockConflicted\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/TxStateConflicted/TxStateBlockConflicted/g' src/wallet/wallet.cpp src/wallet/interfaces.cpp src/wallet/transaction.h src/wallet/transaction.cpp\nsed -i 's/isConflicted/isBlockConflicted/g' src/wallet/transaction.h src/wallet/wallet.cpp\n-END VERIFY SCRIPT-",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2024-03-14T21:38:39Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2023-06-29T19:41:26Z"
      },
      "sha": "ffe5ff1fb622a8da11b66289e1b778e45e449811"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12124269071,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAALSqaoP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12124269071",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "dbcc4a75e4a1108f4a04c22cfae363848994c24d",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/dbcc4a75e4a1108f4a04c22cfae363848994c24d",
      "created_at": "2024-03-14T21:50:09Z"
    },
    {
      "event": "reviewed",
      "id": 1940028125,
      "node_id": "PRR_kwDOABII585zonrd",
      "url": null,
      "actor": null,
      "commit_id": "dbcc4a75e4a1108f4a04c22cfae363848994c24d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK dbcc4a75e4a1108f4a04c22cfae363848994c24d. Changes since last review were a few test improvements and some more simplifications. This looks very good. Left suggestions below, all minor, none important. This PR seems like a clear improvement and should be merged if it gets more ACKs.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1940028125",
      "submitted_at": "2024-03-15T19:02:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ2NDkyMmI1OTAzZTVmZmM4ZDJjZTBlNjc2MWY5OWYxNzNiNjA4MDA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d64922b5903e5ffc8d2ce0e6761f99f173b60800",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d64922b5903e5ffc8d2ce0e6761f99f173b60800",
      "tree": {
        "sha": "e1bb5c6bbbef6e04657dfe3d8833811ae50b7356",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e1bb5c6bbbef6e04657dfe3d8833811ae50b7356"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffe5ff1fb622a8da11b66289e1b778e45e449811",
          "sha": "ffe5ff1fb622a8da11b66289e1b778e45e449811",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/ffe5ff1fb622a8da11b66289e1b778e45e449811"
        }
      ],
      "message": "wallet refactor: use CWalletTx member functions to determine tx state",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2024-03-15T22:03:42Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2023-03-01T18:46:23Z"
      },
      "sha": "d64922b5903e5ffc8d2ce0e6761f99f173b60800"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU0ZTA3ZWUyMmZmMTZmYzY4NTgzYWRlMGQyYjhmZmZmYzgxZDQ0NGE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54e07ee22ff16fc68583ade0d2b8ffffc81d444a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/54e07ee22ff16fc68583ade0d2b8ffffc81d444a",
      "tree": {
        "sha": "17a38ec6538b1954f724f00a6435a820e1144cd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/17a38ec6538b1954f724f00a6435a820e1144cd4"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d64922b5903e5ffc8d2ce0e6761f99f173b60800",
          "sha": "d64922b5903e5ffc8d2ce0e6761f99f173b60800",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d64922b5903e5ffc8d2ce0e6761f99f173b60800"
        }
      ],
      "message": "wallet: track mempool conflicts\n\nBehavior changes are:\n- if a tx has a mempool conflict, the wallet will not attempt to\n  rebroadcast it\n- if a txo is spent by a mempool-conflicted tx, that txo is no\n  longer considered spent",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2024-03-20T19:05:34Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2023-05-18T00:56:25Z"
      },
      "sha": "54e07ee22ff16fc68583ade0d2b8ffffc81d444a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU5NTIyOTIxMzNkNmNjODg5ZjUxYWU3NzFmMmUwNTU3MzExZTFlZmU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5952292133d6cc889f51ae771f2e0557311e1efe",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5952292133d6cc889f51ae771f2e0557311e1efe",
      "tree": {
        "sha": "9205b27d3ba82a4a9cd4e7eeb5f09b211e5cc575",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9205b27d3ba82a4a9cd4e7eeb5f09b211e5cc575"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54e07ee22ff16fc68583ade0d2b8ffffc81d444a",
          "sha": "54e07ee22ff16fc68583ade0d2b8ffffc81d444a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/54e07ee22ff16fc68583ade0d2b8ffffc81d444a"
        }
      ],
      "message": "wallet, rpc: show mempool conflicts in `gettransaction` result",
      "committer": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2024-03-20T19:05:37Z"
      },
      "author": {
        "name": "ishaanam",
        "email": "ishaana.misra@gmail.com",
        "date": "2023-07-17T01:42:33Z"
      },
      "sha": "5952292133d6cc889f51ae771f2e0557311e1efe"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 12191528905,
      "node_id": "HRFPE_lADOABII585hi2CZzwAAAALWq_fJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12191528905",
      "actor": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "commit_url": "https://api.github.com/repos/ishaanam/bitcoin/commits/5952292133d6cc889f51ae771f2e0557311e1efe",
      "created_at": "2024-03-20T21:22:07Z"
    },
    {
      "event": "commented",
      "id": 2021315537,
      "node_id": "IC_kwDOABII5854etPR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2021315537",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-26T19:36:57Z",
      "updated_at": "2024-03-26T19:36:57Z",
      "author_association": "MEMBER",
      "body": "ACK 5952292133d6cc889f51ae771f2e0557311e1efe",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-2021315537",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "review_requested",
      "id": 12255625594,
      "node_id": "RRE_lADOABII585hi2CZzwAAAALafgF6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12255625594",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-26T19:37:03Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 1961735440,
      "node_id": "PRR_kwDOABII58507bUQ",
      "url": null,
      "actor": null,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 5952292133d6cc889f51ae771f2e0557311e1efe. Just small suggested changes since last review",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1961735440",
      "submitted_at": "2024-03-26T21:04:07Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "reviewed",
      "id": 1963245186,
      "node_id": "PRR_kwDOABII5851BL6C",
      "url": null,
      "actor": null,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 59522921",
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1963245186",
      "submitted_at": "2024-03-27T13:07:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
    },
    {
      "event": "merged",
      "id": 12268784265,
      "node_id": "ME_lADOABII585hi2CZzwAAAALbRsqJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12268784265",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c8e3978114716bb8fb10695b9d187652f3ab4926",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8e3978114716bb8fb10695b9d187652f3ab4926",
      "created_at": "2024-03-27T16:45:17Z"
    },
    {
      "event": "closed",
      "id": 12268784331,
      "node_id": "CE_lADOABII585hi2CZzwAAAALbRsrL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12268784331",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-27T16:45:18Z"
    },
    {
      "event": "commented",
      "id": 2023316847,
      "node_id": "IC_kwDOABII5854mV1v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2023316847",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-27T17:00:09Z",
      "updated_at": "2024-03-27T17:00:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "This is merged but it would be good to followup with documentation / test improvements from https://github.com/bitcoin/bitcoin/pull/27307#pullrequestreview-1963245186.\r\n\r\nMight also be useful to add release notes saying the wallet has a new heuristic to detect when wallet transactions conflict with the mempool, that conflicting mempool transactions are shown in a new `gettransaction` `\"mempoolconflicts\"` field, that this allows inputs to the conflicted transactions to be respent without manually abandoning the transactions, and can cause wallet balances to appear higher.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-2023316847",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/27307"
    },
    {
      "event": "referenced",
      "id": 13371687769,
      "node_id": "REFE_lADOABII585hi2CZzwAAAAMdA8NZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13371687769",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "74d61151e50802502b9bf7bcc6bf97ea4cb86457",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74d61151e50802502b9bf7bcc6bf97ea4cb86457",
      "created_at": "2024-07-02T20:51:16Z"
    },
    {
      "event": "locked",
      "id": 17007102682,
      "node_id": "LOE_lADOABII585hi2CZzwAAAAP1s8ra",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17007102682",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T07:42:02Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244653007",
      "pull_request_review_id": 1502236845,
      "id": 1244653007,
      "node_id": "PRRC_kwDOABII585KL-XP",
      "diff_hunk": "@@ -315,7 +321,9 @@ class CWalletTx\n     template<typename T> T* state() { return std::get_if<T>(&m_state); }\n \n     bool isAbandoned() const { return state<TxStateInactive>() && state<TxStateInactive>()->abandoned; }\n-    bool isConflicted() const { return state<TxStateConflicted>(); }\n+    bool isConflicted() const { return state<TxStateConflicted>() || state<TxStateMempoolConflicted>(); }\n+    bool isMempoolConflicted() const { return state<TxStateMempoolConflicted>(); }\n+    bool isBlockConflicted() const { return state<TxStateConflicted>(); }",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 43,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "0538ad7d4cfddb5a377f879cbf221b2b028c264a",
      "in_reply_to_id": null,
      "user": {
        "login": "evansmj",
        "id": 11140095,
        "node_id": "MDQ6VXNlcjExMTQwMDk1",
        "avatar_url": "https://avatars.githubusercontent.com/u/11140095?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/evansmj",
        "html_url": "https://github.com/evansmj",
        "followers_url": "https://api.github.com/users/evansmj/followers",
        "following_url": "https://api.github.com/users/evansmj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/evansmj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/evansmj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/evansmj/subscriptions",
        "organizations_url": "https://api.github.com/users/evansmj/orgs",
        "repos_url": "https://api.github.com/users/evansmj/repos",
        "events_url": "https://api.github.com/users/evansmj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/evansmj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What do you think of renaming the `TxStateConflicted` struct to `TxStateBlockConflicted`, since that one is used for block conflicts and there is now a difference here between block and mempool conflicts?",
      "created_at": "2023-06-28T04:26:28Z",
      "updated_at": "2023-06-28T04:27:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1244653007",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244653007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 326,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245286239",
      "pull_request_review_id": 1503214745,
      "id": 1245286239,
      "node_id": "PRRC_kwDOABII585KOY9f",
      "diff_hunk": "@@ -315,7 +321,9 @@ class CWalletTx\n     template<typename T> T* state() { return std::get_if<T>(&m_state); }\n \n     bool isAbandoned() const { return state<TxStateInactive>() && state<TxStateInactive>()->abandoned; }\n-    bool isConflicted() const { return state<TxStateConflicted>(); }\n+    bool isConflicted() const { return state<TxStateConflicted>() || state<TxStateMempoolConflicted>(); }\n+    bool isMempoolConflicted() const { return state<TxStateMempoolConflicted>(); }\n+    bool isBlockConflicted() const { return state<TxStateConflicted>(); }",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 43,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "0538ad7d4cfddb5a377f879cbf221b2b028c264a",
      "in_reply_to_id": 1244653007,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That makes sense, I'll do that using a [scripted diff.](https://github.com/bitcoin/bitcoin/blob/d6ee03507f39223889a5f039c4db7204ddfb91d5/doc/developer-notes.md#scripted-diffs)",
      "created_at": "2023-06-28T14:15:18Z",
      "updated_at": "2023-06-28T14:15:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1245286239",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245286239"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 326,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270411973",
      "pull_request_review_id": 1540742589,
      "id": 1270411973,
      "node_id": "PRRC_kwDOABII585LuPLF",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        # alice has all 0 txs, bob has 3\n+        assert_equal(len(alice.getrawmempool()), 0)",
      "path": "test/functional/wallet_conflicts.py",
      "position": 147,
      "original_position": 111,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "42412c592e01960e77972321f1f6999342cb0c6c",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://cirrus-ci.com/task/6496120092753920?logs=ci#L3132\r\n\r\n```\r\n test  2023-07-17T05:13:02.641000Z TestFramework (ERROR): Assertion failed \r\n                                   Traceback (most recent call last):\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 131, in main\r\n                                       self.run_test()\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_conflicts.py\", line 34, in run_test\r\n                                       self.test_mempool_and_block_conflicts()\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_conflicts.py\", line 219, in test_mempool_and_block_conflicts\r\n                                       assert_equal(len(alice.getrawmempool()), 0)\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/util.py\", line 57, in assert_equal\r\n                                       raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\r\n                                   AssertionError: not(1 == 0)",
      "created_at": "2023-07-21T08:46:08Z",
      "updated_at": "2023-07-21T08:46:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1270411973",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270411973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 255,
      "original_line": 255,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271448113",
      "pull_request_review_id": 1542251974,
      "id": 1271448113,
      "node_id": "PRRC_kwDOABII585LyMIx",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        # alice has all 0 txs, bob has 3\n+        assert_equal(len(alice.getrawmempool()), 0)",
      "path": "test/functional/wallet_conflicts.py",
      "position": 147,
      "original_position": 111,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "42412c592e01960e77972321f1f6999342cb0c6c",
      "in_reply_to_id": 1270411973,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed",
      "created_at": "2023-07-23T13:24:51Z",
      "updated_at": "2023-07-23T13:24:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1271448113",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271448113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 255,
      "original_line": 255,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337024969",
      "pull_request_review_id": 1643959917,
      "id": 1337024969,
      "node_id": "PRRC_kwDOABII585PsWHJ",
      "diff_hunk": "@@ -1386,6 +1385,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {",
      "path": "src/wallet/wallet.cpp",
      "position": 65,
      "original_position": 53,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "20d58f2554ba5cad1e6385a0f2d87b3750581442",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Question: What's the expected state of a transaction if its parent is replaced? My (shallow) understanding suggests it becomes inactive? And if the parent is re-added to mempool, it stays inactive?",
      "created_at": "2023-09-26T10:57:19Z",
      "updated_at": "2024-01-30T16:40:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1337024969",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1337024969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1427,
      "original_line": 1427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1382141691",
      "pull_request_review_id": 1713437792,
      "id": 1382141691,
      "node_id": "PRRC_kwDOABII585SYc77",
      "diff_hunk": "@@ -337,6 +337,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     void AddToSpends(const COutPoint& outpoint, const uint256& wtxid, WalletBatch* batch = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void AddToSpends(const CWalletTx& wtx, WalletBatch* batch = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n+    // Map of wtx hash to a set of mempool conflict hashes\n+    std::map<uint256, std::set<uint256>> MempoolConflicts GUARDED_BY(cs_wallet);",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 5,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "770a73c66a48434fa48f594709dbbf5831dc1d5d",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 770a73c66a48434fa48f594709dbbf5831dc1d5d \"wallet: track mempool conflicts\"\r\n\r\nnit: `snake_case` for member variables.\r\n\r\nAdditionally, this is tracking these conflicts at the `CWallet` level. However I wonder if it might be better to track it on a transaction level, i.e. have `CWalletTx` have the set of txids.",
      "created_at": "2023-11-03T19:52:41Z",
      "updated_at": "2023-11-03T20:11:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1382141691",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1382141691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1382482637",
      "pull_request_review_id": 1713887444,
      "id": 1382482637,
      "node_id": "PRRC_kwDOABII585SZwLN",
      "diff_hunk": "@@ -337,6 +337,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     void AddToSpends(const COutPoint& outpoint, const uint256& wtxid, WalletBatch* batch = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void AddToSpends(const CWalletTx& wtx, WalletBatch* batch = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n+    // Map of wtx hash to a set of mempool conflict hashes\n+    std::map<uint256, std::set<uint256>> MempoolConflicts GUARDED_BY(cs_wallet);",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 5,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "770a73c66a48434fa48f594709dbbf5831dc1d5d",
      "in_reply_to_id": 1382141691,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I agree it is better to track conflicts on a transaction level. I've implemented it this way now and it looks much better. ",
      "created_at": "2023-11-04T23:48:44Z",
      "updated_at": "2023-11-04T23:48:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1382482637",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1382482637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1383974021",
      "pull_request_review_id": 1716221992,
      "id": 1383974021,
      "node_id": "PRRC_kwDOABII585SfcSF",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 76,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\"\r\n\r\nnit: When doing separate test cases like this, we should also use different wallets to prevent state from one test cases from effecting another. So this should be making its own wallets once again.",
      "created_at": "2023-11-06T20:53:41Z",
      "updated_at": "2023-11-06T21:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1383974021",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1383974021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 182,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1383975379",
      "pull_request_review_id": 1716221992,
      "id": 1383975379,
      "node_id": "PRRC_kwDOABII585SfcnT",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 29,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\"\r\n\r\nnit: No need to make another wallet for the receiver, just use the default wallet.",
      "created_at": "2023-11-06T20:54:52Z",
      "updated_at": "2023-11-06T21:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1383975379",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1383975379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 136,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384017154",
      "pull_request_review_id": 1716221992,
      "id": 1384017154,
      "node_id": "PRRC_kwDOABII585Sfm0C",
      "diff_hunk": "@@ -1482,8 +1545,8 @@ void CWallet::blockConnected(ChainstateRole role, const interfaces::BlockInfo& b\n \n     // Scan block\n     for (size_t index = 0; index < block.data->vtx.size(); index++) {\n-        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});\n         transactionRemovedFromMempool(block.data->vtx[index], MemPoolRemovalReason::BLOCK);\n+        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 92,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 28a7e883c2f9249213fddbe24948ec5bb90b0fad \"wallet: track mempool conflicts\"\r\n\r\nIt's not clear to me that this change has any effect.",
      "created_at": "2023-11-06T21:30:10Z",
      "updated_at": "2023-11-06T21:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1384017154",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384017154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1485,
      "start_side": "LEFT",
      "line": null,
      "original_line": 1509,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384024252",
      "pull_request_review_id": 1716221992,
      "id": 1384024252,
      "node_id": "PRRC_kwDOABII585Sfoi8",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']",
      "path": "test/functional/wallet_conflicts.py",
      "position": 120,
      "original_position": 86,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\"\r\n\r\nThis can be compressed into one line using the `send` RPC.\r\n\r\n```suggestion\r\n        raw_tx1 = alice.send(outputs=[{bob.getnewaddress(): 24.9999}], inputs=[unspents[0]], add_to_wallet=False)[\"hex\"]\r\n```",
      "created_at": "2023-11-06T21:36:36Z",
      "updated_at": "2023-11-06T21:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1384024252",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384024252"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": 227,
      "original_start_line": 193,
      "start_side": "RIGHT",
      "line": 228,
      "original_line": 228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384032166",
      "pull_request_review_id": 1716221992,
      "id": 1384032166,
      "node_id": "PRRC_kwDOABII585Sfqem",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        # alice has 0 txs, bob has 3\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 3)\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99900000\"))\n+\n+        # bob broadcasts tx_1 conflict\n+        tx1_conflict = bob.sendrawtransaction(tx1_conflict)\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 2)\n+\n+        assert tx2 in bob.getrawmempool()\n+        assert tx1_conflict in bob.getrawmempool()\n+\n+        assert_equal(bob.gettransaction(tx1)[\"mempoolconflicts\"], [tx1_conflict])\n+        assert_equal(bob.gettransaction(tx2)[\"mempoolconflicts\"], [])\n+        assert_equal(bob.gettransaction(tx3)[\"mempoolconflicts\"], [tx1_conflict])\n+\n+        # check that tx3 is now conflicted, so the output from tx2 can now be spent\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"24.99990000\"))\n+\n+        # we will be disconnecting this block in the future\n+        tx2_conflict = alice.sendrawtransaction(tx2_conflict)\n+        assert_equal(len(alice.getrawmempool()), 1)\n+        blk = self.generate(self.nodes[0], 11, sync_fun=self.no_op)[0]",
      "path": "test/functional/wallet_conflicts.py",
      "position": 172,
      "original_position": 134,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\"\r\n\r\nIt would be useful to have a comment that explains that 11 blocks are mined so that when they are invalidated, `tx2_conflict` does not get put back into the mempool.",
      "created_at": "2023-11-06T21:39:23Z",
      "updated_at": "2023-11-06T21:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1384032166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384032166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 280,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384035046",
      "pull_request_review_id": 1716221992,
      "id": 1384035046,
      "node_id": "PRRC_kwDOABII585SfrLm",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 35,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\"\r\n\r\nThis isn't actually necessary since `listunspent` has these fields already and the extra ones are just ignored.",
      "created_at": "2023-11-06T21:39:51Z",
      "updated_at": "2023-11-06T21:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1384035046",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384035046"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385015371",
      "pull_request_review_id": 1717849509,
      "id": 1385015371,
      "node_id": "PRRC_kwDOABII585SjahL",
      "diff_hunk": "@@ -1482,8 +1545,8 @@ void CWallet::blockConnected(ChainstateRole role, const interfaces::BlockInfo& b\n \n     // Scan block\n     for (size_t index = 0; index < block.data->vtx.size(); index++) {\n-        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});\n         transactionRemovedFromMempool(block.data->vtx[index], MemPoolRemovalReason::BLOCK);\n+        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 92,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "in_reply_to_id": 1384017154,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think before this was to fix a bug, but I fixed that bug in a different way. Regardless, doesn't it make more sense to run `transactionRemovedFromMempool` before syncing the transaction as confirmed? ",
      "created_at": "2023-11-07T14:33:44Z",
      "updated_at": "2023-11-07T14:33:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1385015371",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385015371"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1485,
      "start_side": "LEFT",
      "line": null,
      "original_line": 1509,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1387276842",
      "pull_request_review_id": 1721396961,
      "id": 1387276842,
      "node_id": "PRRC_kwDOABII585SsCoq",
      "diff_hunk": "@@ -752,8 +752,7 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n         const uint256& wtxid = it->second;\n         const auto mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n-            int depth = GetTxDepthInMainChain(mit->second);\n-            if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n+            if (mit->second.isConfirmed() || mit->second.InMempool() || (mit->second.isInactive() && !mit->second.isAbandoned()))",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "5107e4e730a150068c5a214020a6393d2ba33aa8",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 5107e4e730a150068c5a214020a6393d2ba33aa8 \"wallet: use CWalletTx member functions to determine tx state\":\r\n\r\nWhile I see why `TxStateConflicted` would be excluded here, it is not quite obvious to me why your replacement is equivalent. Could you perhaps expand a bit on this in a comment or the commit message?",
      "created_at": "2023-11-08T22:40:26Z",
      "updated_at": "2023-11-09T20:33:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1387276842",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1387276842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 757,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1387279137",
      "pull_request_review_id": 1721396961,
      "id": 1387279137,
      "node_id": "PRRC_kwDOABII585SsDMh",
      "diff_hunk": "@@ -91,7 +91,7 @@ WalletTxStatus MakeWalletTxStatus(const CWallet& wallet, const CWalletTx& wtx)\n     WalletTxStatus result;\n     result.block_height =\n         wtx.state<TxStateConfirmed>() ? wtx.state<TxStateConfirmed>()->confirmed_block_height :\n-        wtx.state<TxStateConflicted>() ? wtx.state<TxStateConflicted>()->conflicting_block_height :",
      "path": "src/wallet/interfaces.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "920f16c9a11d167444f509a9fd2f0244f1f635eb",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 920f16c9a11d167444f509a9fd2f0244f1f635eb \"scripted-diff: wallet: s/TxStateConflicted/TxStateBlockConflicted\":\r\n\r\nI was considering whether there might be a way to better express that the transaction is in conflict with a confirmed transaction. How about:\r\n\r\n```suggestion\r\n        wtx.state<TxStateConfirmedConflict>() ? wtx.state<TxStateConfirmedConflict>()->conflicting_block_height :\r\n```",
      "created_at": "2023-11-08T22:43:49Z",
      "updated_at": "2023-11-09T20:33:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1387279137",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1387279137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388493685",
      "pull_request_review_id": 1721396961,
      "id": 1388493685,
      "node_id": "PRRC_kwDOABII585Swrt1",
      "diff_hunk": "@@ -1426,6 +1426,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 21,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 28a7e883c2f9249213fddbe24948ec5bb90b0fad \"wallet: track mempool conflicts\":\r\n\r\nNote to self and other reviewers: `TxSpends` is an `unordered_multimap` which permits multiple entries to have the same key, and `equal_range(…)` returns the range of iterators that match the given key denominated in first iterator to first iterator after the range.",
      "created_at": "2023-11-09T19:30:10Z",
      "updated_at": "2023-11-09T20:33:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388493685",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388493685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1431,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388510399",
      "pull_request_review_id": 1721396961,
      "id": 1388510399,
      "node_id": "PRRC_kwDOABII585Swvy_",
      "diff_hunk": "@@ -232,7 +232,9 @@ def run_test(self):\n         balance = newbalance\n \n         # Invalidate the block with the double spend. B & C's 10 BTC outputs should no longer be available\n-        self.nodes[0].invalidateblock(self.nodes[0].getbestblockhash())\n+        blk = self.nodes[0].getbestblockhash()\n+        self.generate(self.nodes[1], 10)",
      "path": "test/functional/wallet_abandonconflict.py",
      "position": 8,
      "original_position": 6,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 28a7e883c2f9249213fddbe24948ec5bb90b0fad \"wallet: track mempool conflicts\":\r\nCould you perhaps explain what the purpose of mining ten blocks here is?",
      "created_at": "2023-11-09T19:47:32Z",
      "updated_at": "2023-11-09T20:33:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388510399",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388510399"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388531074",
      "pull_request_review_id": 1721396961,
      "id": 1388531074,
      "node_id": "PRRC_kwDOABII585Sw02C",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 47,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\":\r\nIt’s a bit confusing that you take an input `tx1` here which is the 'hex' string of the raw transaction, but then assign the resulting 'txid' back to `tx1`.",
      "created_at": "2023-11-09T20:08:36Z",
      "updated_at": "2023-11-09T20:33:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388531074",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388531074"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388532260",
      "pull_request_review_id": 1721396961,
      "id": 1388532260,
      "node_id": "PRRC_kwDOABII585Sw1Ik",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent",
      "path": "test/functional/wallet_conflicts.py",
      "position": 87,
      "original_position": 66,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\":\r\nSince `tx2` replaced `tx1`, why would `unspents[0]` be considered spent here?",
      "created_at": "2023-11-09T20:09:50Z",
      "updated_at": "2023-11-09T20:33:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388532260",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388532260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 195,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388533849",
      "pull_request_review_id": 1721396961,
      "id": 1388533849,
      "node_id": "PRRC_kwDOABII585Sw1hZ",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 76,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": 1383974021,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, this could be a problem if you only run one of the tests separately instead of the whole suite. Then that test would fail, since it’s setup depends on the prior test having been run before.",
      "created_at": "2023-11-09T20:11:36Z",
      "updated_at": "2023-11-09T20:33:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388533849",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388533849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 182,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388545575",
      "pull_request_review_id": 1721396961,
      "id": 1388545575,
      "node_id": "PRRC_kwDOABII585Sw4Yn",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        # alice has 0 txs, bob has 3",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 110,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\":\r\nI’m having trouble keeping track of all the things going on here. Perhaps you could add in these comments which transactions each node now knows about",
      "created_at": "2023-11-09T20:24:58Z",
      "updated_at": "2023-11-09T20:33:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388545575",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388545575"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388547724",
      "pull_request_review_id": 1721396961,
      "id": 1388547724,
      "node_id": "PRRC_kwDOABII585Sw46M",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        # alice has 0 txs, bob has 3\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 3)\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99900000\"))\n+\n+        # bob broadcasts tx_1 conflict\n+        tx1_conflict = bob.sendrawtransaction(tx1_conflict)\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 2)",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 119,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\":\r\n`tx1_conflict` should displace `tx1`, but why does Bob not have 3 again now? Shouldn’t Bob know about `tx1`, `tx2`, and `tx3` before, and then `tx1_conflict`, `tx2`, and `tx3` after?",
      "created_at": "2023-11-09T20:27:27Z",
      "updated_at": "2023-11-09T20:33:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388547724",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388547724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 231,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389968548",
      "pull_request_review_id": 1725717976,
      "id": 1389968548,
      "node_id": "PRRC_kwDOABII585S2Tyk",
      "diff_hunk": "@@ -752,8 +752,7 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n         const uint256& wtxid = it->second;\n         const auto mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n-            int depth = GetTxDepthInMainChain(mit->second);\n-            if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n+            if (mit->second.isConfirmed() || mit->second.InMempool() || (mit->second.isInactive() && !mit->second.isAbandoned()))",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "5107e4e730a150068c5a214020a6393d2ba33aa8",
      "in_reply_to_id": 1387276842,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`depth > 0  || (depth == 0 && !mit->second.isAbandoned())` is saying that the spending transaction should be confirmed, or: must not be (block) conflicted, and it must not be abandoned, for the corresponding output to be considered spent. \r\n\r\n`mit->second.isConfirmed() || mit->second.InMempool() || (mit->second.isInactive() && !mit->second.isAbandoned())`  is saying that the spending transaction should be confirmed, or in the mempool, or: must be inactive and not abandoned for the corresponding output to be considered spent. \r\n\r\nIn this context, saying that a transaction must not be conflicted is logically equivalent to saying that the transaction must be inactive and not abandoned. I will add a comment to clarify this.",
      "created_at": "2023-11-10T22:05:56Z",
      "updated_at": "2023-11-10T22:05:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1389968548",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389968548"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 757,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389995261",
      "pull_request_review_id": 1725756150,
      "id": 1389995261,
      "node_id": "PRRC_kwDOABII585S2aT9",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent",
      "path": "test/functional/wallet_conflicts.py",
      "position": 87,
      "original_position": 66,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": 1388532260,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Because `tx3` replaced `tx2`, so `tx1` is now `TxStateInactive` instead of `TxStateMempoolConflicted`, making `unspents[0]` spent.",
      "created_at": "2023-11-10T22:49:45Z",
      "updated_at": "2023-11-10T22:49:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1389995261",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389995261"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 195,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390055024",
      "pull_request_review_id": 1725836363,
      "id": 1390055024,
      "node_id": "PRRC_kwDOABII585S2o5w",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']",
      "path": "test/functional/wallet_conflicts.py",
      "position": 120,
      "original_position": 86,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": 1384024252,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "These two things are not technically equivalent, because `send` creates a change output here, which results in intermittent failures for the rest of the test. Is there any way to tell `send` not to create a change output? ",
      "created_at": "2023-11-11T00:20:26Z",
      "updated_at": "2023-11-11T00:20:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390055024",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390055024"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": 227,
      "original_start_line": 193,
      "start_side": "RIGHT",
      "line": 228,
      "original_line": 228,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390071466",
      "pull_request_review_id": 1725860719,
      "id": 1390071466,
      "node_id": "PRRC_kwDOABII585S2s6q",
      "diff_hunk": "@@ -91,7 +91,7 @@ WalletTxStatus MakeWalletTxStatus(const CWallet& wallet, const CWalletTx& wtx)\n     WalletTxStatus result;\n     result.block_height =\n         wtx.state<TxStateConfirmed>() ? wtx.state<TxStateConfirmed>()->confirmed_block_height :\n-        wtx.state<TxStateConflicted>() ? wtx.state<TxStateConflicted>()->conflicting_block_height :",
      "path": "src/wallet/interfaces.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "920f16c9a11d167444f509a9fd2f0244f1f635eb",
      "in_reply_to_id": 1387279137,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think that `TxStateBlockConflicted` and `TxStateMempoolConflicted` are a bit more clear, because with something like `TxStateUnconfirmedConflict` instead of `TxStateMempoolConflicted`, it is unclear whether the conflict is in the mempool, or just hasn't been broadcasted yet. Additionally, I felt that it was more uniform with the other transaction states to be describing the state of the transaction instead of the state of a conflict. Eg. `TxStateBlockConflicted` indicates that the transaction is block-conflicted, and similarly `TxStateConfirmed` indicates that the transaction is confirmed. On the other hand, `TxStateConfirmedConflict` indicates the state of the conflict. \r\n\r\nThat being said, if you or others think that `TxStateConfirmedConflict` or something similar is better, I would be open to changing it. ",
      "created_at": "2023-11-11T01:00:10Z",
      "updated_at": "2023-11-11T01:00:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390071466",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390071466"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128297",
      "pull_request_review_id": 1725941221,
      "id": 1390128297,
      "node_id": "PRRC_kwDOABII585S26yp",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 76,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": 1383974021,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2023-11-11T04:47:28Z",
      "updated_at": "2023-11-11T04:47:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390128297",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128297"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 182,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128370",
      "pull_request_review_id": 1725941259,
      "id": 1390128370,
      "node_id": "PRRC_kwDOABII585S26zy",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 29,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": 1383975379,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2023-11-11T04:47:54Z",
      "updated_at": "2023-11-11T04:47:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390128370",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 136,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128432",
      "pull_request_review_id": 1725941363,
      "id": 1390128432,
      "node_id": "PRRC_kwDOABII585S260w",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        # alice has 0 txs, bob has 3\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 3)\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99900000\"))\n+\n+        # bob broadcasts tx_1 conflict\n+        tx1_conflict = bob.sendrawtransaction(tx1_conflict)\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 2)\n+\n+        assert tx2 in bob.getrawmempool()\n+        assert tx1_conflict in bob.getrawmempool()\n+\n+        assert_equal(bob.gettransaction(tx1)[\"mempoolconflicts\"], [tx1_conflict])\n+        assert_equal(bob.gettransaction(tx2)[\"mempoolconflicts\"], [])\n+        assert_equal(bob.gettransaction(tx3)[\"mempoolconflicts\"], [tx1_conflict])\n+\n+        # check that tx3 is now conflicted, so the output from tx2 can now be spent\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"24.99990000\"))\n+\n+        # we will be disconnecting this block in the future\n+        tx2_conflict = alice.sendrawtransaction(tx2_conflict)\n+        assert_equal(len(alice.getrawmempool()), 1)\n+        blk = self.generate(self.nodes[0], 11, sync_fun=self.no_op)[0]",
      "path": "test/functional/wallet_conflicts.py",
      "position": 172,
      "original_position": 134,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": 1384032166,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've added a comment.",
      "created_at": "2023-11-11T04:48:17Z",
      "updated_at": "2023-11-11T04:48:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390128432",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128432"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 280,
      "original_line": 280,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128566",
      "pull_request_review_id": 1725941466,
      "id": 1390128566,
      "node_id": "PRRC_kwDOABII585S2622",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 35,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": 1384035046,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed",
      "created_at": "2023-11-11T04:48:34Z",
      "updated_at": "2023-11-11T04:48:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390128566",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128566"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 143,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390129010",
      "pull_request_review_id": 1725942031,
      "id": 1390129010,
      "node_id": "PRRC_kwDOABII585S269y",
      "diff_hunk": "@@ -232,7 +232,9 @@ def run_test(self):\n         balance = newbalance\n \n         # Invalidate the block with the double spend. B & C's 10 BTC outputs should no longer be available\n-        self.nodes[0].invalidateblock(self.nodes[0].getbestblockhash())\n+        blk = self.nodes[0].getbestblockhash()\n+        self.generate(self.nodes[1], 10)",
      "path": "test/functional/wallet_abandonconflict.py",
      "position": 8,
      "original_position": 6,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "in_reply_to_id": 1388510399,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've added this comment explaining why 10 blocks need to be mined:\r\n```\r\n# mine 10 blocks so that when the blk is invalidated, the transactions are not\r\n# returned to the mempool\r\n```",
      "created_at": "2023-11-11T04:51:25Z",
      "updated_at": "2023-11-11T04:51:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390129010",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390129010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390129173",
      "pull_request_review_id": 1725942421,
      "id": 1390129173,
      "node_id": "PRRC_kwDOABII585S27AV",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 47,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": 1388531074,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've replaced `tx1` with `tx1_txid` here and for all other instances of this.",
      "created_at": "2023-11-11T04:53:01Z",
      "updated_at": "2023-11-11T04:53:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390129173",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390129173"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1393623761",
      "pull_request_review_id": 1731223899,
      "id": 1393623761,
      "node_id": "PRRC_kwDOABII585TEQLR",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        # alice has 0 txs, bob has 3\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 3)\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99900000\"))\n+\n+        # bob broadcasts tx_1 conflict\n+        tx1_conflict = bob.sendrawtransaction(tx1_conflict)\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 2)",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 119,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": 1388547724,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`tx1_conflict` also displaces `tx3` because `tx3` spends `tx1`, so it is also considered mempool-conflicted. So instead `tx1_conflict` and `tx2` are the only transactions left in the mempool. I've added a comment indicating this. ",
      "created_at": "2023-11-15T04:35:51Z",
      "updated_at": "2023-11-15T04:35:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1393623761",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1393623761"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 231,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1393624485",
      "pull_request_review_id": 1731225048,
      "id": 1393624485,
      "node_id": "PRRC_kwDOABII585TEQWl",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        # alice has 0 txs, bob has 3",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 110,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": 1388545575,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I agree that it gets a bit confusing, so I've added a lot more comments. ",
      "created_at": "2023-11-15T04:37:43Z",
      "updated_at": "2023-11-15T04:37:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1393624485",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1393624485"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 218,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437201563",
      "pull_request_review_id": 1797438722,
      "id": 1437201563,
      "node_id": "PRRC_kwDOABII585VqfSb",
      "diff_hunk": "@@ -752,8 +752,9 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n         const uint256& wtxid = it->second;\n         const auto mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n-            int depth = GetTxDepthInMainChain(mit->second);\n-            if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n+            // A transaction is considered spent if a spending transaction",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "80ba1d97f179121736d702b2d54bd3938cb57d96",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In \"wallet: use CWalletTx member functions to determine tx state\" (80ba1d97f179121736d702b2d54bd3938cb57d96):\r\n\r\nDid you mean \"An output is considered spent…\"?",
      "created_at": "2023-12-27T18:48:13Z",
      "updated_at": "2023-12-27T19:18:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1437201563",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437201563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 755,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437240468",
      "pull_request_review_id": 1797494889,
      "id": 1437240468,
      "node_id": "PRRC_kwDOABII585VqoyU",
      "diff_hunk": "@@ -752,8 +752,9 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n         const uint256& wtxid = it->second;\n         const auto mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n-            int depth = GetTxDepthInMainChain(mit->second);\n-            if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n+            // A transaction is considered spent if a spending transaction",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "80ba1d97f179121736d702b2d54bd3938cb57d96",
      "in_reply_to_id": 1437201563,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed",
      "created_at": "2023-12-27T20:28:25Z",
      "updated_at": "2023-12-27T20:28:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1437240468",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437240468"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 755,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1470229826",
      "pull_request_review_id": 1849792773,
      "id": 1470229826,
      "node_id": "PRRC_kwDOABII585Xoe1C",
      "diff_hunk": "@@ -91,7 +91,7 @@ WalletTxStatus MakeWalletTxStatus(const CWallet& wallet, const CWalletTx& wtx)\n     WalletTxStatus result;\n     result.block_height =\n         wtx.state<TxStateConfirmed>() ? wtx.state<TxStateConfirmed>()->confirmed_block_height :\n-        wtx.state<TxStateConflicted>() ? wtx.state<TxStateConflicted>()->conflicting_block_height :",
      "path": "src/wallet/interfaces.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "920f16c9a11d167444f509a9fd2f0244f1f635eb",
      "in_reply_to_id": 1387279137,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don’t feel strongly about it, please feel free to mark this comment as resolved.",
      "created_at": "2024-01-29T21:19:31Z",
      "updated_at": "2024-01-29T21:45:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1470229826",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1470229826"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 95,
      "original_line": 95,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1470235298",
      "pull_request_review_id": 1849792773,
      "id": 1470235298,
      "node_id": "PRRC_kwDOABII585XogKi",
      "diff_hunk": "@@ -48,7 +48,12 @@ struct TxStateBlockConflicted {\n     int conflicting_block_height;\n \n     explicit TxStateBlockConflicted(const uint256& block_hash, int height) : conflicting_block_hash(block_hash), conflicting_block_height(height) {}\n-    std::string toString() const { return strprintf(\"Conflicted (block=%s, height=%i)\", conflicting_block_hash.ToString(), conflicting_block_height); }\n+    std::string toString() const { return strprintf(\"BlockConflicted (block=%s, height=%i)\", conflicting_block_hash.ToString(), conflicting_block_height); }\n+};\n+\n+//! State of transaction with one or more mempool conflicts.\n+struct TxStateMempoolConflicted {\n+    std::string toString() const { return strprintf(\"MempoolConflicted\"); }",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 10,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": null,
      "user": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In  a6ae5b23b1497ab6f4899db49348db623700a2d8 \"wallet: track mempool conflicts\":\r\n\r\nNit: Should this perhaps also inform about the conflicting transactions like the _BlockConflicted_ state informs about the block?",
      "created_at": "2024-01-29T21:24:25Z",
      "updated_at": "2024-01-29T21:45:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1470235298",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1470235298"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471391179",
      "pull_request_review_id": 1643959917,
      "id": 1471391179,
      "node_id": "PRRC_kwDOABII585Xs6XL",
      "diff_hunk": "@@ -258,6 +265,8 @@ class CWalletTx\n     CTransactionRef tx;\n     TxState m_state;\n \n+    std::set<uint256> mempool_conflicts;",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 43,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in a6ae5b23b1497ab6f4899db49348db623700a2d8:\r\n\r\nIt's best to use `Txid` or `Wtxid` for this. And maybe add a doc stating whether these are direct conflicts only, or if they might be descendants of a conflicting transaction?",
      "created_at": "2024-01-30T15:03:31Z",
      "updated_at": "2024-01-30T16:40:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1471391179",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471391179"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 268,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471392482",
      "pull_request_review_id": 1643959917,
      "id": 1471392482,
      "node_id": "PRRC_kwDOABII585Xs6ri",
      "diff_hunk": "@@ -1419,6 +1419,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in a6ae5b23b1497ab6f4899db49348db623700a2d8\r\n\r\nsame, `auto` or `Txid` would be better",
      "created_at": "2024-01-30T15:04:20Z",
      "updated_at": "2024-01-30T16:40:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1471392482",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471392482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471530256",
      "pull_request_review_id": 1643959917,
      "id": 1471530256,
      "node_id": "PRRC_kwDOABII585XtcUQ",
      "diff_hunk": "@@ -1482,8 +1545,8 @@ void CWallet::blockConnected(ChainstateRole role, const interfaces::BlockInfo& b\n \n     // Scan block\n     for (size_t index = 0; index < block.data->vtx.size(); index++) {\n-        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});\n         transactionRemovedFromMempool(block.data->vtx[index], MemPoolRemovalReason::BLOCK);\n+        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 92,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "in_reply_to_id": 1384017154,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fwiw, it seems better to keep it the way it was if it's not doing anything. What was the bug?",
      "created_at": "2024-01-30T16:14:29Z",
      "updated_at": "2024-01-30T16:40:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1471530256",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471530256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1485,
      "start_side": "LEFT",
      "line": null,
      "original_line": 1509,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471531989",
      "pull_request_review_id": 1643959917,
      "id": 1471531989,
      "node_id": "PRRC_kwDOABII585XtcvV",
      "diff_hunk": "@@ -1419,6 +1419,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            if (_it->second == conflict_hash) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in 067189eddee1a2209c6c42741a91601c5514e170\r\n\r\nGot a little nervous seeing the txid comparison and \"same tx.\" Is it possible to run into a same-txid-different-witness situation here?",
      "created_at": "2024-01-30T16:15:33Z",
      "updated_at": "2024-01-30T16:40:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1471531989",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471531989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1434,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471533005",
      "pull_request_review_id": 1643959917,
      "id": 1471533005,
      "node_id": "PRRC_kwDOABII585Xtc_N",
      "diff_hunk": "@@ -417,6 +421,10 @@ static std::vector<RPCResult> TransactionDescriptionString()\n            }},\n            {RPCResult::Type::STR_HEX, \"replaced_by_txid\", /*optional=*/true, \"Only if 'category' is 'send'. The txid if this tx was replaced.\"},\n            {RPCResult::Type::STR_HEX, \"replaces_txid\", /*optional=*/true, \"Only if 'category' is 'send'. The txid if this tx replaces another.\"},\n+           {RPCResult::Type::ARR, \"mempoolconflicts\", \"Conflicting transaction currently in the mempool.\",",
      "path": "src/wallet/rpc/transactions.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "c71736d372c65b0978671501029e202574c6bbef",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "c71736d372c65b0978671501029e202574c6bbef\r\n\r\nAlso good to document - is it just directly conflicting, or descendants as well?",
      "created_at": "2024-01-30T16:16:14Z",
      "updated_at": "2024-01-30T16:40:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1471533005",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471533005"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 424,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471567921",
      "pull_request_review_id": 1643959917,
      "id": 1471567921,
      "node_id": "PRRC_kwDOABII585Xtlgx",
      "diff_hunk": "@@ -123,5 +130,165 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = alice.listunspent()\n+        assert_equal(len(unspents), 3)",
      "path": "test/functional/wallet_conflicts.py",
      "position": 45,
      "original_position": 37,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "71059cf4267d80d2934b85a7046fc7b64900378b",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "71059cf4267d80d2934b85a7046fc7b64900378b\r\n\r\nThere's not anything preventing us from checking the exact contents of `listunspent` right? Here and in the rest of the test.",
      "created_at": "2024-01-30T16:34:03Z",
      "updated_at": "2024-01-30T16:40:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1471567921",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471567921"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 153,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471575174",
      "pull_request_review_id": 1643959917,
      "id": 1471575174,
      "node_id": "PRRC_kwDOABII585XtnSG",
      "diff_hunk": "@@ -123,5 +130,165 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = alice.listunspent()\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1_txid = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2_txid = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1_txid)[\"mempoolconflicts\"], [tx2_txid])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1_txid)[\"mempoolconflicts\"], [])",
      "path": "test/functional/wallet_conflicts.py",
      "position": 84,
      "original_position": 65,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "71059cf4267d80d2934b85a7046fc7b64900378b",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "71059cf4267d80d2934b85a7046fc7b64900378b\r\n\r\nWe don't expect to see tx1 in mempool, right? It's not being rebroadcast, as it's inactive?\r\n\r\n```suggestion\r\n        assert tx1_txid not in self.nodes[0].getrawmempool()\r\n```\r\nMight be good to have a check for this behavior.",
      "created_at": "2024-01-30T16:38:45Z",
      "updated_at": "2024-01-30T16:40:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1471575174",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471575174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 192,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471581755",
      "pull_request_review_id": 1643959917,
      "id": 1471581755,
      "node_id": "PRRC_kwDOABII585Xto47",
      "diff_hunk": "@@ -123,5 +130,165 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):",
      "path": "test/functional/wallet_conflicts.py",
      "position": 33,
      "original_position": 25,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "71059cf4267d80d2934b85a7046fc7b64900378b",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure if in scope for this PR, but it would be nice to have a test for how the wallet sees descendants of conflicting transactions (e.g. if Bob creates a child off of tx1 or tx2).",
      "created_at": "2024-01-30T16:40:30Z",
      "updated_at": "2024-01-30T16:40:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1471581755",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471581755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471649978",
      "pull_request_review_id": 1851917202,
      "id": 1471649978,
      "node_id": "PRRC_kwDOABII585Xt5i6",
      "diff_hunk": "@@ -1386,6 +1385,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {",
      "path": "src/wallet/wallet.cpp",
      "position": 65,
      "original_position": 53,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "20d58f2554ba5cad1e6385a0f2d87b3750581442",
      "in_reply_to_id": 1337024969,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "With this PR, if a transaction's parent is replaced, then it should become `TxStateMempoolConflicted`. If the conflict is removed, then it becomes inactive. ",
      "created_at": "2024-01-30T17:19:02Z",
      "updated_at": "2024-01-30T17:19:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1471649978",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471649978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1427,
      "original_line": 1427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471690474",
      "pull_request_review_id": 1851971752,
      "id": 1471690474,
      "node_id": "PRRC_kwDOABII585XuDbq",
      "diff_hunk": "@@ -1419,6 +1419,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            if (_it->second == conflict_hash) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": 1471531989,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch, I think that is possible. Would just using wtxids everywhere here fix this?",
      "created_at": "2024-01-30T17:45:24Z",
      "updated_at": "2024-01-30T17:45:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1471690474",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1471690474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1434,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472578055",
      "pull_request_review_id": 1853327530,
      "id": 1472578055,
      "node_id": "PRRC_kwDOABII585XxcIH",
      "diff_hunk": "@@ -1419,6 +1419,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            if (_it->second == conflict_hash) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": 1471531989,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes I'd expect so",
      "created_at": "2024-01-31T09:57:34Z",
      "updated_at": "2024-01-31T09:57:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1472578055",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472578055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1434,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472586945",
      "pull_request_review_id": 1853342081,
      "id": 1472586945,
      "node_id": "PRRC_kwDOABII585XxeTB",
      "diff_hunk": "@@ -1386,6 +1385,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {",
      "path": "src/wallet/wallet.cpp",
      "position": 65,
      "original_position": 53,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "20d58f2554ba5cad1e6385a0f2d87b3750581442",
      "in_reply_to_id": 1337024969,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah makes sense! I think it would be good to add a test for this case?",
      "created_at": "2024-01-31T10:04:24Z",
      "updated_at": "2024-01-31T10:04:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1472586945",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472586945"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1427,
      "original_line": 1427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472930692",
      "pull_request_review_id": 1853918541,
      "id": 1472930692,
      "node_id": "PRRC_kwDOABII585XyyOE",
      "diff_hunk": "@@ -752,8 +752,7 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n         const uint256& wtxid = it->second;\n         const auto mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n-            int depth = GetTxDepthInMainChain(mit->second);\n-            if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n+            if (mit->second.isConfirmed() || mit->second.InMempool() || (mit->second.isInactive() && !mit->second.isAbandoned()))",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "5107e4e730a150068c5a214020a6393d2ba33aa8",
      "in_reply_to_id": 1387276842,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: use CWalletTx member functions to determine tx state\" (86aaf81f81b48e82358db6700a6c9d46c5b5b0df)\r\n\r\nCode comment here is just repeating the boolean expression and not explaining anything. I think the simplest explanation of this is \"An output is considered spent by a spending transaction, unless the spending transaction is conflicted or abandoned.\" Could also add \"But the check below is written to check for valid spending transactions instead of invalid ones so it isn't tied to wallet conflict tracking code which is imperfect and could change.\"",
      "created_at": "2024-01-31T14:44:48Z",
      "updated_at": "2024-01-31T15:34:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1472930692",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472930692"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 757,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472955815",
      "pull_request_review_id": 1853918541,
      "id": 1472955815,
      "node_id": "PRRC_kwDOABII585Xy4Wn",
      "diff_hunk": "@@ -48,7 +48,12 @@ struct TxStateBlockConflicted {\n     int conflicting_block_height;\n \n     explicit TxStateBlockConflicted(const uint256& block_hash, int height) : conflicting_block_hash(block_hash), conflicting_block_height(height) {}\n-    std::string toString() const { return strprintf(\"Conflicted (block=%s, height=%i)\", conflicting_block_hash.ToString(), conflicting_block_height); }\n+    std::string toString() const { return strprintf(\"BlockConflicted (block=%s, height=%i)\", conflicting_block_hash.ToString(), conflicting_block_height); }\n+};\n+\n+//! State of transaction with one or more mempool conflicts.",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 8,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (a6ae5b23b1497ab6f4899db49348db623700a2d8)\r\n\r\nI think it would be useful to add that mempool conflicted transactions are serialized as inactive transactions, so the distinction between TxStateMempoolConflicted and TxStateInactive only exists at runtime. ",
      "created_at": "2024-01-31T15:01:23Z",
      "updated_at": "2024-01-31T15:34:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1472955815",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472955815"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475234088",
      "pull_request_review_id": 1857789328,
      "id": 1475234088,
      "node_id": "PRRC_kwDOABII585X7kko",
      "diff_hunk": "@@ -1482,8 +1545,8 @@ void CWallet::blockConnected(ChainstateRole role, const interfaces::BlockInfo& b\n \n     // Scan block\n     for (size_t index = 0; index < block.data->vtx.size(); index++) {\n-        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});\n         transactionRemovedFromMempool(block.data->vtx[index], MemPoolRemovalReason::BLOCK);\n+        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 92,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "in_reply_to_id": 1384017154,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't remember exactly what the bug was, but I know that it had something to do with assuming that all transactions that we call `transactionRemovedFromMempool` on are `TxStateInMempool`. That being said, I will change it back to the way it was before because it is not causing any problems right now. ",
      "created_at": "2024-02-01T22:26:54Z",
      "updated_at": "2024-02-01T22:26:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1475234088",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475234088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1485,
      "start_side": "LEFT",
      "line": null,
      "original_line": 1509,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475452360",
      "pull_request_review_id": 1858148714,
      "id": 1475452360,
      "node_id": "PRRC_kwDOABII585X8Z3I",
      "diff_hunk": "@@ -48,7 +48,12 @@ struct TxStateBlockConflicted {\n     int conflicting_block_height;\n \n     explicit TxStateBlockConflicted(const uint256& block_hash, int height) : conflicting_block_hash(block_hash), conflicting_block_height(height) {}\n-    std::string toString() const { return strprintf(\"Conflicted (block=%s, height=%i)\", conflicting_block_hash.ToString(), conflicting_block_height); }\n+    std::string toString() const { return strprintf(\"BlockConflicted (block=%s, height=%i)\", conflicting_block_hash.ToString(), conflicting_block_height); }\n+};\n+\n+//! State of transaction with one or more mempool conflicts.\n+struct TxStateMempoolConflicted {\n+    std::string toString() const { return strprintf(\"MempoolConflicted\"); }",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 10,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": 1470235298,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This could be done in a follow-up if people want it, because currently the conflicting transactions are stored in the `CWalletTx`, and not the transaction state, so this function is not aware of the txids of the mempool conflicts. ",
      "created_at": "2024-02-02T02:48:15Z",
      "updated_at": "2024-02-02T02:48:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1475452360",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475452360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 58,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475453805",
      "pull_request_review_id": 1858150924,
      "id": 1475453805,
      "node_id": "PRRC_kwDOABII585X8aNt",
      "diff_hunk": "@@ -258,6 +265,8 @@ class CWalletTx\n     CTransactionRef tx;\n     TxState m_state;\n \n+    std::set<uint256> mempool_conflicts;",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 43,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": 1471391179,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-02T02:50:42Z",
      "updated_at": "2024-02-02T02:50:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1475453805",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475453805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 268,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475453968",
      "pull_request_review_id": 1858151189,
      "id": 1475453968,
      "node_id": "PRRC_kwDOABII585X8aQQ",
      "diff_hunk": "@@ -1419,6 +1419,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": 1471392482,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-02T02:50:52Z",
      "updated_at": "2024-02-02T02:50:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1475453968",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475453968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1423,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475454363",
      "pull_request_review_id": 1858151911,
      "id": 1475454363,
      "node_id": "PRRC_kwDOABII585X8aWb",
      "diff_hunk": "@@ -1419,6 +1419,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            if (_it->second == conflict_hash) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": 1471531989,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, that should be fixed now",
      "created_at": "2024-02-02T02:51:18Z",
      "updated_at": "2024-02-02T02:51:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1475454363",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475454363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1434,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475454524",
      "pull_request_review_id": 1858152191,
      "id": 1475454524,
      "node_id": "PRRC_kwDOABII585X8aY8",
      "diff_hunk": "@@ -417,6 +421,10 @@ static std::vector<RPCResult> TransactionDescriptionString()\n            }},\n            {RPCResult::Type::STR_HEX, \"replaced_by_txid\", /*optional=*/true, \"Only if 'category' is 'send'. The txid if this tx was replaced.\"},\n            {RPCResult::Type::STR_HEX, \"replaces_txid\", /*optional=*/true, \"Only if 'category' is 'send'. The txid if this tx replaces another.\"},\n+           {RPCResult::Type::ARR, \"mempoolconflicts\", \"Conflicting transaction currently in the mempool.\",",
      "path": "src/wallet/rpc/transactions.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "c71736d372c65b0978671501029e202574c6bbef",
      "in_reply_to_id": 1471533005,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-02T02:51:29Z",
      "updated_at": "2024-02-02T02:51:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1475454524",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475454524"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 424,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475454837",
      "pull_request_review_id": 1858152822,
      "id": 1475454837,
      "node_id": "PRRC_kwDOABII585X8ad1",
      "diff_hunk": "@@ -123,5 +130,165 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = alice.listunspent()\n+        assert_equal(len(unspents), 3)",
      "path": "test/functional/wallet_conflicts.py",
      "position": 45,
      "original_position": 37,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "71059cf4267d80d2934b85a7046fc7b64900378b",
      "in_reply_to_id": 1471567921,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, the tests now check the exact contents. ",
      "created_at": "2024-02-02T02:51:57Z",
      "updated_at": "2024-02-02T02:51:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1475454837",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475454837"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 153,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475455088",
      "pull_request_review_id": 1858153417,
      "id": 1475455088,
      "node_id": "PRRC_kwDOABII585X8ahw",
      "diff_hunk": "@@ -123,5 +130,165 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = alice.listunspent()\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1_txid = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2_txid = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1_txid)[\"mempoolconflicts\"], [tx2_txid])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1_txid)[\"mempoolconflicts\"], [])",
      "path": "test/functional/wallet_conflicts.py",
      "position": 84,
      "original_position": 65,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "71059cf4267d80d2934b85a7046fc7b64900378b",
      "in_reply_to_id": 1471575174,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've added an assertion that the tx isn't in the mempool. ",
      "created_at": "2024-02-02T02:52:22Z",
      "updated_at": "2024-02-02T02:52:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1475455088",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475455088"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 192,
      "original_line": 192,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475457535",
      "pull_request_review_id": 1858159997,
      "id": 1475457535,
      "node_id": "PRRC_kwDOABII585X8bH_",
      "diff_hunk": "@@ -123,5 +130,165 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):",
      "path": "test/functional/wallet_conflicts.py",
      "position": 33,
      "original_position": 25,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "71059cf4267d80d2934b85a7046fc7b64900378b",
      "in_reply_to_id": 1471581755,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, I will add these in a follow-up PR. ",
      "created_at": "2024-02-02T02:55:28Z",
      "updated_at": "2024-02-02T02:55:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1475457535",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475457535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1476795724",
      "pull_request_review_id": 1860487135,
      "id": 1476795724,
      "node_id": "PRRC_kwDOABII585YBh1M",
      "diff_hunk": "@@ -1419,6 +1419,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            if (_it->second == conflict_hash) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": 1471531989,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If we get the same txid but different wtxid, I'm not sure that the result is necessarily one that makes sense. Most things in the wallet are keyed and listed by txid, so with this change, we'd end up with a transaction that's listed as conflicted by it's own txid. Also, we won't ever update the wallet to store a transaction with a different wtxid.",
      "created_at": "2024-02-02T22:14:05Z",
      "updated_at": "2024-02-02T22:14:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1476795724",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1476795724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1434,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1476797365",
      "pull_request_review_id": 1860489670,
      "id": 1476797365,
      "node_id": "PRRC_kwDOABII585YBiO1",
      "diff_hunk": "@@ -1456,6 +1488,39 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n         // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n         SyncTransaction(tx, TxStateInactive{});\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                if (!wtx.mempool_conflicts.empty()) {\n+\n+                    // Remove the previously conflicting transaction from this wtx's entry\n+                    wtx.mempool_conflicts.erase(conflict_txid);\n+\n+                    if (wtx.mempool_conflicts.empty()) {\n+                        // If this wtx has no other mempool conflicts, erase this wtx entry",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "5fbf18b89d6768bed1be95dcbc98797df5788dfc",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 5fbf18b89d6768bed1be95dcbc98797df5788dfc \"wallet: track mempool conflicts\"\r\n\r\nI'm a little bit confused by the \"erase this wtx entry\" part of the comment. AFAICT, no entries are being erased, Perhaps this should say:\r\n\r\n```suggestion\r\n                        // If this wtx has no other mempool conflicts, mark it as inactive\r\n```",
      "created_at": "2024-02-02T22:16:48Z",
      "updated_at": "2024-02-02T22:31:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1476797365",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1476797365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1511,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1476798246",
      "pull_request_review_id": 1860489670,
      "id": 1476798246,
      "node_id": "PRRC_kwDOABII585YBicm",
      "diff_hunk": "@@ -1482,8 +1545,8 @@ void CWallet::blockConnected(ChainstateRole role, const interfaces::BlockInfo& b\n \n     // Scan block\n     for (size_t index = 0; index < block.data->vtx.size(); index++) {\n-        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});\n         transactionRemovedFromMempool(block.data->vtx[index], MemPoolRemovalReason::BLOCK);\n+        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 92,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "in_reply_to_id": 1384017154,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this hasn't been reverted yet?",
      "created_at": "2024-02-02T22:18:12Z",
      "updated_at": "2024-02-02T22:31:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1476798246",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1476798246"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1485,
      "start_side": "LEFT",
      "line": null,
      "original_line": 1509,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477695130",
      "pull_request_review_id": 1861928376,
      "id": 1477695130,
      "node_id": "PRRC_kwDOABII585YE9aa",
      "diff_hunk": "@@ -1386,6 +1385,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {",
      "path": "src/wallet/wallet.cpp",
      "position": 65,
      "original_position": 53,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "20d58f2554ba5cad1e6385a0f2d87b3750581442",
      "in_reply_to_id": 1337024969,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have now added a test for descendants of conflicted transactions. ",
      "created_at": "2024-02-05T05:45:48Z",
      "updated_at": "2024-02-05T05:45:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1477695130",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477695130"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1427,
      "original_line": 1427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477697474",
      "pull_request_review_id": 1861931951,
      "id": 1477697474,
      "node_id": "PRRC_kwDOABII585YE9_C",
      "diff_hunk": "@@ -123,5 +130,165 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):",
      "path": "test/functional/wallet_conflicts.py",
      "position": 33,
      "original_position": 25,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "71059cf4267d80d2934b85a7046fc7b64900378b",
      "in_reply_to_id": 1471581755,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Actually, I have just added a test in this PR. ",
      "created_at": "2024-02-05T05:50:12Z",
      "updated_at": "2024-02-05T05:50:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1477697474",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477697474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477697683",
      "pull_request_review_id": 1861932274,
      "id": 1477697683,
      "node_id": "PRRC_kwDOABII585YE-CT",
      "diff_hunk": "@@ -48,7 +48,12 @@ struct TxStateBlockConflicted {\n     int conflicting_block_height;\n \n     explicit TxStateBlockConflicted(const uint256& block_hash, int height) : conflicting_block_hash(block_hash), conflicting_block_height(height) {}\n-    std::string toString() const { return strprintf(\"Conflicted (block=%s, height=%i)\", conflicting_block_hash.ToString(), conflicting_block_height); }\n+    std::string toString() const { return strprintf(\"BlockConflicted (block=%s, height=%i)\", conflicting_block_hash.ToString(), conflicting_block_height); }\n+};\n+\n+//! State of transaction with one or more mempool conflicts.",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 8,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": 1472955815,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have added a comment indicating this.",
      "created_at": "2024-02-05T05:50:35Z",
      "updated_at": "2024-02-05T05:50:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1477697683",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477697683"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 54,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477699351",
      "pull_request_review_id": 1861934996,
      "id": 1477699351,
      "node_id": "PRRC_kwDOABII585YE-cX",
      "diff_hunk": "@@ -1456,6 +1488,39 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n         // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n         SyncTransaction(tx, TxStateInactive{});\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                if (!wtx.mempool_conflicts.empty()) {\n+\n+                    // Remove the previously conflicting transaction from this wtx's entry\n+                    wtx.mempool_conflicts.erase(conflict_txid);\n+\n+                    if (wtx.mempool_conflicts.empty()) {\n+                        // If this wtx has no other mempool conflicts, erase this wtx entry",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "5fbf18b89d6768bed1be95dcbc98797df5788dfc",
      "in_reply_to_id": 1476797365,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, this comment is from a previous version of the PR. I have fixed it. ",
      "created_at": "2024-02-05T05:53:59Z",
      "updated_at": "2024-02-05T05:53:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1477699351",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477699351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1511,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477700028",
      "pull_request_review_id": 1861935960,
      "id": 1477700028,
      "node_id": "PRRC_kwDOABII585YE-m8",
      "diff_hunk": "@@ -1482,8 +1545,8 @@ void CWallet::blockConnected(ChainstateRole role, const interfaces::BlockInfo& b\n \n     // Scan block\n     for (size_t index = 0; index < block.data->vtx.size(); index++) {\n-        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});\n         transactionRemovedFromMempool(block.data->vtx[index], MemPoolRemovalReason::BLOCK);\n+        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 92,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "in_reply_to_id": 1384017154,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should be fixed now. ",
      "created_at": "2024-02-05T05:55:07Z",
      "updated_at": "2024-02-05T05:55:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1477700028",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477700028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1485,
      "start_side": "LEFT",
      "line": null,
      "original_line": 1509,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1481573074",
      "pull_request_review_id": 1867972899,
      "id": 1481573074,
      "node_id": "PRRC_kwDOABII585YTwLS",
      "diff_hunk": "@@ -752,8 +752,9 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n         const uint256& wtxid = it->second;\n         const auto mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n-            int depth = GetTxDepthInMainChain(mit->second);\n-            if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n+            // An output is considered spent if a spending transaction\n+            // is either confirmed, or in the mempool, or inactive (but not abandoned)\n+            if (mit->second.isConfirmed() || mit->second.InMempool() || (mit->second.isInactive() && !mit->second.isAbandoned()))",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "86aaf81f81b48e82358db6700a6c9d46c5b5b0df",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 86aaf81f8:\r\n\r\nIf you touch this again; could pull `mit->second` into its own variable to improve readability.\r\n\r\n```c++\r\nconst auto& wtx = mit->second;\r\n// An output is considered spent by a spending transaction,\r\n// unless the spending transaction is conflicted or abandoned.\r\nif (wtx.isConfirmed() || wtx.InMempool() || (wtx.isInactive() && !wtx.isAbandoned()))\r\n    return true;\r\n```",
      "created_at": "2024-02-07T14:36:43Z",
      "updated_at": "2024-02-07T15:14:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1481573074",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1481573074"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 754,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 757,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1481600177",
      "pull_request_review_id": 1867972899,
      "id": 1481600177,
      "node_id": "PRRC_kwDOABII585YT2yx",
      "diff_hunk": "@@ -1419,6 +1419,38 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+    const Wtxid& conflict_wtxid = tx->GetWitnessHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            auto it = mapWallet.find(_it->second);\n+            if (it->second.tx->GetWitnessHash() == conflict_wtxid) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "3de89342dcd44bdde4027a91cb27793dc0231847",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would be good to explain that you are doing the `mapWallet` lookup because the wtx could have been updated. Because otherwise, this could just be a `if (_it->second == conflict_txid) continue;` right?.\r\n\r\nAlso, as you already know that the output belongs to one of the wallet's txs, could:\r\n```c++\r\nCWalletTx& wtx = mapWallet.at(_it->second);\r\nif (wtx.tx->GetWitnessHash() == conflict_wtxid) continue;\r\n```",
      "created_at": "2024-02-07T14:54:21Z",
      "updated_at": "2024-02-07T15:14:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1481600177",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1481600177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1434,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1437,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1481609541",
      "pull_request_review_id": 1867972899,
      "id": 1481609541,
      "node_id": "PRRC_kwDOABII585YT5FF",
      "diff_hunk": "@@ -1456,6 +1488,39 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n         // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n         SyncTransaction(tx, TxStateInactive{});\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                if (!wtx.mempool_conflicts.empty()) {\n+\n+                    // Remove the previously conflicting transaction from this wtx's entry\n+                    wtx.mempool_conflicts.erase(conflict_txid);\n+\n+                    if (wtx.mempool_conflicts.empty()) {\n+                        // If this wtx has no other mempool conflicts, it is now considered inactive\n+                        if (wtx.isMempoolConflicted()) {\n+                            wtx.m_state = TxStateInactive{};\n+                            return TxUpdate::CHANGED;\n+                        }\n+                    }\n+                }",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "3de89342dcd44bdde4027a91cb27793dc0231847",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can remove the initial `wtx.mempool_conflicts.empty()` call and directly call `erase`.\r\n\r\n```c++\r\nauto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\r\n    // Remove the previously conflicting transaction from this wtx's entry\r\n    wtx.mempool_conflicts.erase(conflict_txid);\r\n    if (wtx.mempool_conflicts.empty()) {\r\n        // If this wtx has no other mempool conflicts, it is now considered inactive\r\n        if (wtx.isMempoolConflicted()) {\r\n            wtx.m_state = TxStateInactive{};\r\n            return TxUpdate::CHANGED;\r\n        }\r\n    }\r\n    return TxUpdate::UNCHANGED;\r\n};\r\n```",
      "created_at": "2024-02-07T15:00:10Z",
      "updated_at": "2024-02-07T15:14:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1481609541",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1481609541"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1504,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1481616345",
      "pull_request_review_id": 1867972899,
      "id": 1481616345,
      "node_id": "PRRC_kwDOABII585YT6vZ",
      "diff_hunk": "@@ -123,5 +131,253 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = alice.listunspent()\n+        assert_equal(len(unspents), 3)\n+        assert all([tx[\"amount\"] == 25 for tx in unspents])\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1_txid = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent(), [unspents[2]])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2_txid = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent(), [unspents[0]])\n+        assert_equal(alice.getbalance(), 25)",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 59,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "600fc562f815941b4a95c9f4f357dc6eed04be6c",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could document why it has been replaced here. It is not immediately evident only by reading the code.",
      "created_at": "2024-02-07T15:04:31Z",
      "updated_at": "2024-02-07T15:14:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1481616345",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1481616345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 165,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 179,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1481621542",
      "pull_request_review_id": 1867972899,
      "id": 1481621542,
      "node_id": "PRRC_kwDOABII585YT8Am",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent",
      "path": "test/functional/wallet_conflicts.py",
      "position": 87,
      "original_position": 66,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": 1388532260,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would be good to document the behavior inside the code. It is not immediately evident only by reading the code.",
      "created_at": "2024-02-07T15:08:04Z",
      "updated_at": "2024-02-07T15:14:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1481621542",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1481621542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 195,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1481627720",
      "pull_request_review_id": 1867972899,
      "id": 1481627720,
      "node_id": "PRRC_kwDOABII585YT9hI",
      "diff_hunk": "@@ -123,5 +131,253 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = alice.listunspent()\n+        assert_equal(len(unspents), 3)\n+        assert all([tx[\"amount\"] == 25 for tx in unspents])\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1_txid = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent(), [unspents[2]])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2_txid = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent(), [unspents[0]])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1_txid)[\"mempoolconflicts\"], [tx2_txid])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1_txid)[\"mempoolconflicts\"], [])\n+        assert tx1_txid not in self.nodes[0].getrawmempool()\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        bob.sendall([self.nodes[2].getnewaddress()])\n+        self.generate(self.nodes[2], 1)",
      "path": "test/functional/wallet_conflicts.py",
      "position": 96,
      "original_position": 75,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "600fc562f815941b4a95c9f4f357dc6eed04be6c",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would be good to document why you are doing this. I guess that you are cleaning up the mempool and wallet for the next test?",
      "created_at": "2024-02-07T15:12:10Z",
      "updated_at": "2024-02-07T15:14:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1481627720",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1481627720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": 203,
      "original_start_line": 182,
      "start_side": "RIGHT",
      "line": 204,
      "original_line": 204,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484624000",
      "pull_request_review_id": 1872905623,
      "id": 1484624000,
      "node_id": "PRRC_kwDOABII585YfZCA",
      "diff_hunk": "@@ -752,8 +752,9 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n         const uint256& wtxid = it->second;\n         const auto mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n-            int depth = GetTxDepthInMainChain(mit->second);\n-            if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n+            // An output is considered spent if a spending transaction\n+            // is either confirmed, or in the mempool, or inactive (but not abandoned)\n+            if (mit->second.isConfirmed() || mit->second.InMempool() || (mit->second.isInactive() && !mit->second.isAbandoned()))",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 8,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "86aaf81f81b48e82358db6700a6c9d46c5b5b0df",
      "in_reply_to_id": 1481573074,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-09T17:39:57Z",
      "updated_at": "2024-02-09T17:39:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1484624000",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484624000"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 754,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 757,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484625047",
      "pull_request_review_id": 1872907037,
      "id": 1484625047,
      "node_id": "PRRC_kwDOABII585YfZSX",
      "diff_hunk": "@@ -123,5 +131,253 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = alice.listunspent()\n+        assert_equal(len(unspents), 3)\n+        assert all([tx[\"amount\"] == 25 for tx in unspents])\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1_txid = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent(), [unspents[2]])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2_txid = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent(), [unspents[0]])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1_txid)[\"mempoolconflicts\"], [tx2_txid])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1_txid)[\"mempoolconflicts\"], [])\n+        assert tx1_txid not in self.nodes[0].getrawmempool()\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        bob.sendall([self.nodes[2].getnewaddress()])\n+        self.generate(self.nodes[2], 1)",
      "path": "test/functional/wallet_conflicts.py",
      "position": 96,
      "original_position": 75,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "600fc562f815941b4a95c9f4f357dc6eed04be6c",
      "in_reply_to_id": 1481627720,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, I've added a comment for that.",
      "created_at": "2024-02-09T17:40:54Z",
      "updated_at": "2024-02-09T17:40:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1484625047",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484625047"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": 203,
      "original_start_line": 182,
      "start_side": "RIGHT",
      "line": 204,
      "original_line": 204,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484626857",
      "pull_request_review_id": 1872909954,
      "id": 1484626857,
      "node_id": "PRRC_kwDOABII585YfZup",
      "diff_hunk": "@@ -123,5 +131,253 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = alice.listunspent()\n+        assert_equal(len(unspents), 3)\n+        assert all([tx[\"amount\"] == 25 for tx in unspents])\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1_txid = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent(), [unspents[2]])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2_txid = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent(), [unspents[0]])\n+        assert_equal(alice.getbalance(), 25)",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 59,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "600fc562f815941b4a95c9f4f357dc6eed04be6c",
      "in_reply_to_id": 1481616345,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have added a lot more comments to the test which should clarify this. ",
      "created_at": "2024-02-09T17:42:50Z",
      "updated_at": "2024-02-09T17:42:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1484626857",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484626857"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 165,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 179,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484632206",
      "pull_request_review_id": 1872917636,
      "id": 1484632206,
      "node_id": "PRRC_kwDOABII585YfbCO",
      "diff_hunk": "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent",
      "path": "test/functional/wallet_conflicts.py",
      "position": 87,
      "original_position": 66,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "003efbbe45079c4416810a025b2bc372559dff15",
      "in_reply_to_id": 1388532260,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have added a comment before all of the tests in this file explaining how these tests create conflicts. ",
      "created_at": "2024-02-09T17:48:12Z",
      "updated_at": "2024-02-09T17:48:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1484632206",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484632206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 195,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484632803",
      "pull_request_review_id": 1872918612,
      "id": 1484632803,
      "node_id": "PRRC_kwDOABII585YfbLj",
      "diff_hunk": "@@ -1456,6 +1488,39 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n         // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n         SyncTransaction(tx, TxStateInactive{});\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                if (!wtx.mempool_conflicts.empty()) {\n+\n+                    // Remove the previously conflicting transaction from this wtx's entry\n+                    wtx.mempool_conflicts.erase(conflict_txid);\n+\n+                    if (wtx.mempool_conflicts.empty()) {\n+                        // If this wtx has no other mempool conflicts, it is now considered inactive\n+                        if (wtx.isMempoolConflicted()) {\n+                            wtx.m_state = TxStateInactive{};\n+                            return TxUpdate::CHANGED;\n+                        }\n+                    }\n+                }",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 78,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "3de89342dcd44bdde4027a91cb27793dc0231847",
      "in_reply_to_id": 1481609541,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-09T17:48:49Z",
      "updated_at": "2024-02-09T17:48:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1484632803",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484632803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1504,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1514,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484797295",
      "pull_request_review_id": 1873186730,
      "id": 1484797295,
      "node_id": "PRRC_kwDOABII585YgDVv",
      "diff_hunk": "@@ -1419,6 +1419,38 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+    const Wtxid& conflict_wtxid = tx->GetWitnessHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            auto it = mapWallet.find(_it->second);\n+            if (it->second.tx->GetWitnessHash() == conflict_wtxid) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "3de89342dcd44bdde4027a91cb27793dc0231847",
      "in_reply_to_id": 1481600177,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Would be good to explain that you are doing the mapWallet lookup because the wtx could have been updated.\r\n\r\nI just realized that the wtx could not have been updated, because for it to be updated, `transactionAddedToMempool` would need to be called, which would be after this call, right? So I have reverted the change which compares witness hashes. \r\n\r\n> Also, as you already know that the output belongs to one of the wallet's txs, could:\r\n\r\nYes, I have implemented this. ",
      "created_at": "2024-02-09T20:59:35Z",
      "updated_at": "2024-02-09T20:59:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1484797295",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484797295"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1434,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1437,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484800862",
      "pull_request_review_id": 1873192440,
      "id": 1484800862,
      "node_id": "PRRC_kwDOABII585YgENe",
      "diff_hunk": "@@ -1419,6 +1419,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            if (_it->second == conflict_hash) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a6ae5b23b1497ab6f4899db49348db623700a2d8",
      "in_reply_to_id": 1471531989,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> If we get the same txid but different wtxid, I'm not sure that the result is necessarily one that makes sense. Most things in the wallet are keyed and listed by txid, so with this change, we'd end up with a transaction that's listed as conflicted by it's own txid. Also, we won't ever update the wallet to store a transaction with a different wtxid.\r\n\r\nSorry I didn't see this earlier. After looking at this again I don't think that same-txid-different-witness will be a problem here. Please see: https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1484797295",
      "created_at": "2024-02-09T21:04:36Z",
      "updated_at": "2024-02-09T21:04:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1484800862",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484800862"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1434,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491412469",
      "pull_request_review_id": 1883484751,
      "id": 1491412469,
      "node_id": "PRRC_kwDOABII585Y5SX1",
      "diff_hunk": "@@ -335,7 +335,7 @@ class CWalletTx\n     void updateState(interfaces::Chain& chain);\n \n     bool isAbandoned() const { return state<TxStateInactive>() && state<TxStateInactive>()->abandoned; }\n-    bool isConflicted() const { return state<TxStateConflicted>(); }\n+    bool isConflicted() const { return state<TxStateBlockConflicted>(); }",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 55,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "df0130d73341bb2784b23cd2e8307f30da09ca37",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"scripted-diff: wallet: s/TxStateConflicted/TxStateBlockConflicted\" (df0130d73341bb2784b23cd2e8307f30da09ca37)\r\n\r\nNot very important, but I think it would be good if this scripted-diff commit renamed `CWalletTx::isConflicted` to `isBlockConflicted` up front, so `isConflicted` could be added as a new method later without affecting existing callers. Otherwise it takes extra effort for reviewers to look up all the existing callers of isConflicted recursively and making sure their behavior is not changing unintentionally.",
      "created_at": "2024-02-15T18:01:25Z",
      "updated_at": "2024-02-15T20:49:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1491412469",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491412469"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491434583",
      "pull_request_review_id": 1883484751,
      "id": 1491434583,
      "node_id": "PRRC_kwDOABII585Y5XxX",
      "diff_hunk": "@@ -752,8 +752,10 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n         const uint256& wtxid = it->second;\n         const auto mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n-            int depth = GetTxDepthInMainChain(mit->second);\n-            if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n+            // An output is considered spent if a spending transaction\n+            // is either confirmed, or in the mempool, or inactive (but not abandoned)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "523a48b7180409970cec286f0aef6afbbacd2ffa",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: use CWalletTx member functions to determine tx state\" (523a48b7180409970cec286f0aef6afbbacd2ffa)\r\n\r\nThis code comment is just repeating the boolean expression below without explaining it. Would suggest a comment explaining what it is trying to do like \"An output is considered spent by a spending transaction unless the spending transaction is conflicted or abandoned. The check below is written conservatively to check for the inverse condition and only consider spending transactions in known, potentially active states.\"\r\n\r\n(Made a similar suggestion earlier https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1472930692)",
      "created_at": "2024-02-15T18:22:04Z",
      "updated_at": "2024-02-16T01:49:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1491434583",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491434583"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 755,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 756,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491442105",
      "pull_request_review_id": 1883484751,
      "id": 1491442105,
      "node_id": "PRRC_kwDOABII585Y5Zm5",
      "diff_hunk": "@@ -258,6 +262,10 @@ class CWalletTx\n     CTransactionRef tx;\n     TxState m_state;\n \n+    // Transactions that conflict directly with the tx, or\n+    // that conflict with an ancestor transaction\n+    std::set<Txid> mempool_conflicts;",
      "path": "src/wallet/transaction.h",
      "position": 62,
      "original_position": 31,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (2c867784b2a719c9e701e19e389c3adfa7d7faae)\r\n\r\nWould suggest expanding comment to something like: \"Set of mempool transactions that conflict directly with the tx or an ancestor transaction. This set will be empty if the transaction is confirmed, but can be nonempty in other states.\"\r\n\r\nI was initially surprised to see that this set was populated not just for inactive transactions, but also for block-conflicted transactions, so think it is worth mentioning the relationship to the transaction state.",
      "created_at": "2024-02-15T18:28:50Z",
      "updated_at": "2024-02-15T20:49:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1491442105",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491442105"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 267,
      "original_line": 267,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491449136",
      "pull_request_review_id": 1883484751,
      "id": 1491449136,
      "node_id": "PRRC_kwDOABII585Y5bUw",
      "diff_hunk": "@@ -755,7 +755,7 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n             // An output is considered spent if a spending transaction\n             // is either confirmed, or in the mempool, or inactive (but not abandoned)\n             const auto& wtx = mit->second;\n-            if (wtx.isConfirmed() || wtx.InMempool() || (wtx.isInactive() && !wtx.isAbandoned()))\n+            if (wtx.isConfirmed() || wtx.InMempool() || (wtx.isInactive() && !wtx.isAbandoned() && !wtx.isMempoolConflicted()))",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (2c867784b2a719c9e701e19e389c3adfa7d7faae)\r\n\r\nI was surprised to see this change, since I thought intent of the preceding commit was to preserve current behavior and consider spending transactions active even they conflicted with mempool transactions. Both approaches seem ok, but if this behavior is intended, it seems like it would be simpler to write this condition as:\r\n\r\n```c++\r\nif (!wtx.IsAbandoned() && !wtx.isConflicted()) {\r\n    return true; // spent\r\n}\r\n```",
      "created_at": "2024-02-15T18:35:31Z",
      "updated_at": "2024-02-15T20:49:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1491449136",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491449136"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 761,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491468929",
      "pull_request_review_id": 1883484751,
      "id": 1491468929,
      "node_id": "PRRC_kwDOABII585Y5gKB",
      "diff_hunk": "@@ -335,7 +343,9 @@ class CWalletTx\n     void updateState(interfaces::Chain& chain);\n \n     bool isAbandoned() const { return state<TxStateInactive>() && state<TxStateInactive>()->abandoned; }\n-    bool isConflicted() const { return state<TxStateBlockConflicted>(); }\n+    bool isConflicted() const { return isBlockConflicted() || isMempoolConflicted(); }",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 41,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (2c867784b2a719c9e701e19e389c3adfa7d7faae)\r\n\r\nNote: effects of changing this definition seem to be:\r\n\r\n- `CachedTxIsTrusted` is changed, so if a mempool conflict with a transaction is detected, the transaction will no longer be trusted, and its outputs will show up in the unconfirmed balance and no longer be spent from.\r\n- `isUnconfirmed` is changed, so `ResubmitWalletTransactions` is changed, so if a mempool conflict with a transaction is detected, the wallet will not attempt to rebroadcast it.\r\n\r\nWould be good to mention these behavior changes and any others in the commit message. Also, if isConflicted were renamed to isBlockConflicted in the first commit, and then introduced as a new function here, these changes would be a lot more obvious because the relevant code would have visible diffs here.",
      "created_at": "2024-02-15T18:51:50Z",
      "updated_at": "2024-02-15T20:49:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1491468929",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491468929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 338,
      "start_side": "LEFT",
      "line": null,
      "original_line": 345,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491512496",
      "pull_request_review_id": 1883484751,
      "id": 1491512496,
      "node_id": "PRRC_kwDOABII585Y5qyw",
      "diff_hunk": "@@ -57,9 +57,13 @@ struct TxStateBlockConflicted {\n //! reason.\n struct TxStateInactive {\n     bool abandoned;\n+    bool mempool_conflicted;\n \n-    explicit TxStateInactive(bool abandoned = false) : abandoned(abandoned) {}\n-    std::string toString() const { return strprintf(\"Inactive (abandoned=%i)\", abandoned); }\n+    explicit TxStateInactive(bool abandoned = false, bool mempool_conflicted = false)\n+      : abandoned(abandoned),\n+        mempool_conflicted(mempool_conflicted)\n+        {}\n+    std::string toString() const { return strprintf(\"Inactive (abandoned=%i, mempool_conflicted=%i)\", abandoned, mempool_conflicted); }",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 21,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (2c867784b2a719c9e701e19e389c3adfa7d7faae)\r\n\r\nIt doesn't seem actually seem useful to add this `TxStateInactive::mempool_conflicted` member, so would suggest dropping it and changing definition of `isMempoolConflicted()` to just return `!mempool_conflicts.empty()`.\r\n\r\nWhen I made earlier suggestion to add this member in https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1936304636 I didn't dig into the relationship between the mempool conflicted state and `mempool_conflicts` variable, so I thought it might be needed to keep both, but it looks like `mempool_conflicted` is entirely redundant, so it would be confusing to have separate `mempool_conflicts` and `mempool_conflicted` variables for no reason.",
      "created_at": "2024-02-15T19:22:30Z",
      "updated_at": "2024-02-15T20:49:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1491512496",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491512496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 64,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491562385",
      "pull_request_review_id": 1883484751,
      "id": 1491562385,
      "node_id": "PRRC_kwDOABII585Y52-R",
      "diff_hunk": "@@ -1420,6 +1420,37 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            CWalletTx& wallet_tx = mapWallet.at(_it->second);\n+            if (wallet_tx.tx->GetHash() == conflict_txid) continue;\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Add this conflict to the wtx's entry (create one if one does not already exist)\n+                wtx.mempool_conflicts.insert(conflict_txid);\n+\n+                if (wtx.isInactive()) {\n+                    wtx.m_state = TxStateInactive{wtx.isAbandoned(), /*mempool_conflicted=*/ true};\n+                    return TxUpdate::CHANGED;\n+                } else {\n+                    return TxUpdate::UNCHANGED;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (2c867784b2a719c9e701e19e389c3adfa7d7faae)\r\n\r\nSeems like a minor bug here. If this returns `TxUpdate::UNCHANGED` it means RecursiveUpdateTxState will stop recursing, so the parent transaction will have its `mempool_conflicts` list updated, but its descendants will not.\r\n\r\nIn practice, this should be a minor bug because the only time `TxUpdate::UNCHANGED` is actually returned here is when the transaction is in `BlockConflicted` state, and it shouldn't be a big deal if mempool conflicts for child transactions aren't added when we already know there is a block conflict. But it would be better to track mempool conflicts consistently, not just at the top level in this case.\r\n\r\nTaken with above suggestion do drop the `mempool_conflicted` variable, it seems like it would make sense to replace this logic with just:\r\n\r\n```c++\r\nauto inserted = wtx.mempool_conflicts.insert(conflict_txid);\r\nif (inserted == wtx.mempool_conflicts.end()) TxUpdate::UNCHANGED;\r\nreturn TxUpdate::CHANGED;\r\n```",
      "created_at": "2024-02-15T19:49:55Z",
      "updated_at": "2024-02-15T20:49:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1491562385",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491562385"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1447,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491576720",
      "pull_request_review_id": 1883484751,
      "id": 1491576720,
      "node_id": "PRRC_kwDOABII585Y56eQ",
      "diff_hunk": "@@ -1420,6 +1420,37 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            CWalletTx& wallet_tx = mapWallet.at(_it->second);\n+            if (wallet_tx.tx->GetHash() == conflict_txid) continue;\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Add this conflict to the wtx's entry (create one if one does not already exist)\n+                wtx.mempool_conflicts.insert(conflict_txid);\n+\n+                if (wtx.isInactive()) {\n+                    wtx.m_state = TxStateInactive{wtx.isAbandoned(), /*mempool_conflicted=*/ true};\n+                    return TxUpdate::CHANGED;\n+                } else {\n+                    return TxUpdate::UNCHANGED;\n+                }\n+            };\n+\n+            RecursiveUpdateTxState(_it->second, try_updating_state);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (2c867784b2a719c9e701e19e389c3adfa7d7faae)\r\n\r\nIt seems wasteful and potentially slow to use RecursiveUpdateTxState in its current form because it will be calling WalletBatch::WriteTx for these transactions and updating the database even though the transaction data will not be changing.\r\n\r\nWould suggest fixing this by adding a `CWallet::RecursiveUpdateTxState` overload that takes a `WalletBatch*` parameter and does not call `WriteTx` when it is null. E.g.:\r\n\r\n```c++\r\nvoid CWallet::RecursiveUpdateTxState(const uint256& tx_hash, const TryUpdatingStateFn& try_updating_state)\r\n{\r\n    WalletBatch batch(GetDatabase(), false);\r\n    RecursiveUpdateTxState(&batch, tx_hash, try_updating_state);\r\n}\r\n\r\nvoid CWallet::RecursiveUpdateTxState(WalletBatch* batch, const uint256& tx_hash, const TryUpdatingStateFn& try_updating_state)\r\n{\r\n    // ...\r\n    if (batch) batch->WriteTx(wtx);\r\n    // ...\r\n}\r\n```\r\n",
      "created_at": "2024-02-15T19:56:29Z",
      "updated_at": "2024-02-15T20:49:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1491576720",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491576720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1451,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491586915",
      "pull_request_review_id": 1883484751,
      "id": 1491586915,
      "node_id": "PRRC_kwDOABII585Y589j",
      "diff_hunk": "@@ -1420,6 +1420,37 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            CWalletTx& wallet_tx = mapWallet.at(_it->second);\n+            if (wallet_tx.tx->GetHash() == conflict_txid) continue;\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Add this conflict to the wtx's entry (create one if one does not already exist)\n+                wtx.mempool_conflicts.insert(conflict_txid);\n+\n+                if (wtx.isInactive()) {\n+                    wtx.m_state = TxStateInactive{wtx.isAbandoned(), /*mempool_conflicted=*/ true};",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (2c867784b2a719c9e701e19e389c3adfa7d7faae)\r\n\r\nCan drop this code if `TxStateInactive::mempool_conflicted` member is dropped as suggested above.",
      "created_at": "2024-02-15T20:03:43Z",
      "updated_at": "2024-02-15T20:49:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1491586915",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491586915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1443,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491593170",
      "pull_request_review_id": 1883484751,
      "id": 1491593170,
      "node_id": "PRRC_kwDOABII585Y5-fS",
      "diff_hunk": "@@ -1457,6 +1488,36 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n         // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n         SyncTransaction(tx, TxStateInactive{});\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Remove the previously conflicting transaction from this wtx's entry\n+                wtx.mempool_conflicts.erase(conflict_txid);\n+\n+                if (wtx.mempool_conflicts.empty()) {\n+                    // If this wtx has no other mempool conflicts, it is now considered inactive\n+                    if (wtx.isMempoolConflicted()) {\n+                        wtx.m_state = TxStateInactive{};\n+                        return TxUpdate::CHANGED;\n+                    }\n+                }\n+                return TxUpdate::UNCHANGED;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (2c867784b2a719c9e701e19e389c3adfa7d7faae)\r\n\r\nThis has the same problems as the new transactionAddedToMempool code above. Would suggest avoiding the need for state transitions, and always updating the mempool_conflicts set recursively for BlockConflicted as well as Inactive transactions:\r\n\r\n```c++\r\nif (!wtx.mempool_conflicts.erase(conflict_txid)) return TxUpdate::UNCHANGED;\r\nreturn TxUpdate::CHANGED;\r\n```\r\n\r\n",
      "created_at": "2024-02-15T20:07:39Z",
      "updated_at": "2024-02-15T20:49:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1491593170",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491593170"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1506,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491596687",
      "pull_request_review_id": 1883484751,
      "id": 1491596687,
      "node_id": "PRRC_kwDOABII585Y5_WP",
      "diff_hunk": "@@ -1420,6 +1420,37 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (2c867784b2a719c9e701e19e389c3adfa7d7faae)\r\n\r\nJust IMO, but\r\n\r\n```c++\r\nauto range =  mapTxSpends.equal_range(tx_in.prevout);\r\nfor (auto it = range.first; it != range.second; ++it)\r\n```\r\n\r\nwould make core more readable, dropping the long type declarations and extra underscore. But feel free to keep current style if that is your preference.\r\n",
      "created_at": "2024-02-15T20:10:13Z",
      "updated_at": "2024-02-15T20:49:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1491596687",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491596687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1427,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491599010",
      "pull_request_review_id": 1883484751,
      "id": 1491599010,
      "node_id": "PRRC_kwDOABII585Y5_6i",
      "diff_hunk": "@@ -1420,6 +1420,37 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (2c867784b2a719c9e701e19e389c3adfa7d7faae)\r\n\r\nThere's no reason for this line. If the count is 0, equal_range will return an empty range and the result will be the same.",
      "created_at": "2024-02-15T20:12:47Z",
      "updated_at": "2024-02-15T20:49:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1491599010",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491599010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491620312",
      "pull_request_review_id": 1883484751,
      "id": 1491620312,
      "node_id": "PRRC_kwDOABII585Y6FHY",
      "diff_hunk": "@@ -28,6 +29,20 @@ def get_utxo_of_value(self, from_tx_id, search_value):\n         return next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(from_tx_id)[\"details\"] if tx_out[\"amount\"] == Decimal(f\"{search_value}\"))\n \n     def run_test(self):\n+        \"\"\"\n+        The following tests check the behavior of the wallet when",
      "path": "test/functional/wallet_conflicts.py",
      "position": 13,
      "original_position": 13,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "c891a65067f57ba87e443d0cdc4f7e6b434c436f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"test: Add tests for wallet mempool conflicts\" (c891a65067f57ba87e443d0cdc4f7e6b434c436f)\r\n\r\nIgnore this suggestion if it requires too much work, but IMO it would be really helpful for review if as much of the new test code as possible was added in the first commit before the C++ code changes, and the tests were updated alongside the code changes in subsequent commits.\r\n\r\nIndependently of this PR, the fact that a commit like 2c867784b2a719c9e701e19e389c3adfa7d7faae can make a number of behavior changes and not need any significant test updates shows that we are lacking a lot of test coverage for these code paths presently. So it would be very reassuring to add the test coverage before making the changes and see the changes having the expected effects on tests, instead of making the changes blindly and adding the test coverage later.",
      "created_at": "2024-02-15T20:22:46Z",
      "updated_at": "2024-02-15T20:49:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1491620312",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491620312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500031766",
      "pull_request_review_id": 1897110668,
      "id": 1500031766,
      "node_id": "PRRC_kwDOABII585ZaKsW",
      "diff_hunk": "@@ -335,7 +335,7 @@ class CWalletTx\n     void updateState(interfaces::Chain& chain);\n \n     bool isAbandoned() const { return state<TxStateInactive>() && state<TxStateInactive>()->abandoned; }\n-    bool isConflicted() const { return state<TxStateConflicted>(); }\n+    bool isConflicted() const { return state<TxStateBlockConflicted>(); }",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 55,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "df0130d73341bb2784b23cd2e8307f30da09ca37",
      "in_reply_to_id": 1491412469,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-22T22:48:21Z",
      "updated_at": "2024-02-22T22:48:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500031766",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500031766"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500031926",
      "pull_request_review_id": 1897110912,
      "id": 1500031926,
      "node_id": "PRRC_kwDOABII585ZaKu2",
      "diff_hunk": "@@ -752,8 +752,10 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n         const uint256& wtxid = it->second;\n         const auto mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n-            int depth = GetTxDepthInMainChain(mit->second);\n-            if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n+            // An output is considered spent if a spending transaction\n+            // is either confirmed, or in the mempool, or inactive (but not abandoned)",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "523a48b7180409970cec286f0aef6afbbacd2ffa",
      "in_reply_to_id": 1491434583,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-22T22:48:37Z",
      "updated_at": "2024-02-22T22:48:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500031926",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500031926"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 755,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 756,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500032073",
      "pull_request_review_id": 1897111147,
      "id": 1500032073,
      "node_id": "PRRC_kwDOABII585ZaKxJ",
      "diff_hunk": "@@ -258,6 +262,10 @@ class CWalletTx\n     CTransactionRef tx;\n     TxState m_state;\n \n+    // Transactions that conflict directly with the tx, or\n+    // that conflict with an ancestor transaction\n+    std::set<Txid> mempool_conflicts;",
      "path": "src/wallet/transaction.h",
      "position": 62,
      "original_position": 31,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": 1491442105,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-22T22:48:48Z",
      "updated_at": "2024-02-22T22:48:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500032073",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500032073"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 267,
      "original_line": 267,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500032885",
      "pull_request_review_id": 1897112449,
      "id": 1500032885,
      "node_id": "PRRC_kwDOABII585ZaK91",
      "diff_hunk": "@@ -755,7 +755,7 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n             // An output is considered spent if a spending transaction\n             // is either confirmed, or in the mempool, or inactive (but not abandoned)\n             const auto& wtx = mit->second;\n-            if (wtx.isConfirmed() || wtx.InMempool() || (wtx.isInactive() && !wtx.isAbandoned()))\n+            if (wtx.isConfirmed() || wtx.InMempool() || (wtx.isInactive() && !wtx.isAbandoned() && !wtx.isMempoolConflicted()))",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": 1491449136,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The preceding was more of a refactor, while this commit aims to have `IsSpent` return false for txos spent by mempool-conflicted transactions. ",
      "created_at": "2024-02-22T22:49:57Z",
      "updated_at": "2024-02-22T22:49:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500032885",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500032885"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 761,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500033137",
      "pull_request_review_id": 1897112814,
      "id": 1500033137,
      "node_id": "PRRC_kwDOABII585ZaLBx",
      "diff_hunk": "@@ -335,7 +343,9 @@ class CWalletTx\n     void updateState(interfaces::Chain& chain);\n \n     bool isAbandoned() const { return state<TxStateInactive>() && state<TxStateInactive>()->abandoned; }\n-    bool isConflicted() const { return state<TxStateBlockConflicted>(); }\n+    bool isConflicted() const { return isBlockConflicted() || isMempoolConflicted(); }",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 41,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": 1491468929,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have updated the commit message. ",
      "created_at": "2024-02-22T22:50:18Z",
      "updated_at": "2024-02-22T22:50:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500033137",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500033137"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 338,
      "start_side": "LEFT",
      "line": null,
      "original_line": 345,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500033473",
      "pull_request_review_id": 1897113356,
      "id": 1500033473,
      "node_id": "PRRC_kwDOABII585ZaLHB",
      "diff_hunk": "@@ -57,9 +57,13 @@ struct TxStateBlockConflicted {\n //! reason.\n struct TxStateInactive {\n     bool abandoned;\n+    bool mempool_conflicted;\n \n-    explicit TxStateInactive(bool abandoned = false) : abandoned(abandoned) {}\n-    std::string toString() const { return strprintf(\"Inactive (abandoned=%i)\", abandoned); }\n+    explicit TxStateInactive(bool abandoned = false, bool mempool_conflicted = false)\n+      : abandoned(abandoned),\n+        mempool_conflicted(mempool_conflicted)\n+        {}\n+    std::string toString() const { return strprintf(\"Inactive (abandoned=%i, mempool_conflicted=%i)\", abandoned, mempool_conflicted); }",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 21,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": 1491512496,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have removed the `mempool_conflicted` variable. ",
      "created_at": "2024-02-22T22:50:50Z",
      "updated_at": "2024-02-22T22:50:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500033473",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500033473"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 64,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 66,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500033983",
      "pull_request_review_id": 1897114188,
      "id": 1500033983,
      "node_id": "PRRC_kwDOABII585ZaLO_",
      "diff_hunk": "@@ -1420,6 +1420,37 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            CWalletTx& wallet_tx = mapWallet.at(_it->second);\n+            if (wallet_tx.tx->GetHash() == conflict_txid) continue;\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Add this conflict to the wtx's entry (create one if one does not already exist)\n+                wtx.mempool_conflicts.insert(conflict_txid);\n+\n+                if (wtx.isInactive()) {\n+                    wtx.m_state = TxStateInactive{wtx.isAbandoned(), /*mempool_conflicted=*/ true};\n+                    return TxUpdate::CHANGED;\n+                } else {\n+                    return TxUpdate::UNCHANGED;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": 1491562385,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, this bug should be fixed now. ",
      "created_at": "2024-02-22T22:51:24Z",
      "updated_at": "2024-02-22T22:51:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500033983",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500033983"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1447,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500034212",
      "pull_request_review_id": 1897114547,
      "id": 1500034212,
      "node_id": "PRRC_kwDOABII585ZaLSk",
      "diff_hunk": "@@ -1420,6 +1420,37 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            CWalletTx& wallet_tx = mapWallet.at(_it->second);\n+            if (wallet_tx.tx->GetHash() == conflict_txid) continue;\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Add this conflict to the wtx's entry (create one if one does not already exist)\n+                wtx.mempool_conflicts.insert(conflict_txid);\n+\n+                if (wtx.isInactive()) {\n+                    wtx.m_state = TxStateInactive{wtx.isAbandoned(), /*mempool_conflicted=*/ true};\n+                    return TxUpdate::CHANGED;\n+                } else {\n+                    return TxUpdate::UNCHANGED;\n+                }\n+            };\n+\n+            RecursiveUpdateTxState(_it->second, try_updating_state);",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": 1491576720,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done. ",
      "created_at": "2024-02-22T22:51:44Z",
      "updated_at": "2024-02-22T22:51:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500034212",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500034212"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1451,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500034300",
      "pull_request_review_id": 1897114701,
      "id": 1500034300,
      "node_id": "PRRC_kwDOABII585ZaLT8",
      "diff_hunk": "@@ -1420,6 +1420,37 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            CWalletTx& wallet_tx = mapWallet.at(_it->second);\n+            if (wallet_tx.tx->GetHash() == conflict_txid) continue;\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Add this conflict to the wtx's entry (create one if one does not already exist)\n+                wtx.mempool_conflicts.insert(conflict_txid);\n+\n+                if (wtx.isInactive()) {\n+                    wtx.m_state = TxStateInactive{wtx.isAbandoned(), /*mempool_conflicted=*/ true};",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 43,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": 1491586915,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-22T22:51:54Z",
      "updated_at": "2024-02-22T22:51:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500034300",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500034300"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1443,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500034499",
      "pull_request_review_id": 1897115039,
      "id": 1500034499,
      "node_id": "PRRC_kwDOABII585ZaLXD",
      "diff_hunk": "@@ -1457,6 +1488,36 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n         // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n         SyncTransaction(tx, TxStateInactive{});\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Remove the previously conflicting transaction from this wtx's entry\n+                wtx.mempool_conflicts.erase(conflict_txid);\n+\n+                if (wtx.mempool_conflicts.empty()) {\n+                    // If this wtx has no other mempool conflicts, it is now considered inactive\n+                    if (wtx.isMempoolConflicted()) {\n+                        wtx.m_state = TxStateInactive{};\n+                        return TxUpdate::CHANGED;\n+                    }\n+                }\n+                return TxUpdate::UNCHANGED;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": 1491593170,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-22T22:52:14Z",
      "updated_at": "2024-02-22T22:52:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500034499",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500034499"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1506,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500035581",
      "pull_request_review_id": 1897116712,
      "id": 1500035581,
      "node_id": "PRRC_kwDOABII585ZaLn9",
      "diff_hunk": "@@ -1420,6 +1420,37 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (TxSpends::const_iterator _it = range.first; _it != range.second; ++_it) {",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 33,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": 1491596687,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have implemented most of this, except for removing the extra underscore, because `it` was already defined above. ",
      "created_at": "2024-02-22T22:53:50Z",
      "updated_at": "2024-02-22T22:53:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500035581",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500035581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1427,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1434,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500035847",
      "pull_request_review_id": 1897117042,
      "id": 1500035847,
      "node_id": "PRRC_kwDOABII585ZaLsH",
      "diff_hunk": "@@ -1420,6 +1420,37 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": 1491599010,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed here and for `transactionRemovedFromMempool`.",
      "created_at": "2024-02-22T22:54:10Z",
      "updated_at": "2024-02-22T22:54:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500035847",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500035847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500036664",
      "pull_request_review_id": 1897118170,
      "id": 1500036664,
      "node_id": "PRRC_kwDOABII585ZaL44",
      "diff_hunk": "@@ -28,6 +29,20 @@ def get_utxo_of_value(self, from_tx_id, search_value):\n         return next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(from_tx_id)[\"details\"] if tx_out[\"amount\"] == Decimal(f\"{search_value}\"))\n \n     def run_test(self):\n+        \"\"\"\n+        The following tests check the behavior of the wallet when",
      "path": "test/functional/wallet_conflicts.py",
      "position": 13,
      "original_position": 13,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "c891a65067f57ba87e443d0cdc4f7e6b434c436f",
      "in_reply_to_id": 1491620312,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have made the first commit the commit with tests, and they are updated to reflect the changes in the following commits. ",
      "created_at": "2024-02-22T22:55:18Z",
      "updated_at": "2024-02-22T22:55:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500036664",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500036664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500828408",
      "pull_request_review_id": 1898382151,
      "id": 1500828408,
      "node_id": "PRRC_kwDOABII585ZdNL4",
      "diff_hunk": "@@ -258,6 +258,13 @@ class CWalletTx\n     CTransactionRef tx;\n     TxState m_state;\n \n+    // Set of mempool transactions that conflict\n+    // directly with the transaction, or that conflict\n+    // with an ancestor transaction. This set is empty\n+    // if the transaction is confirmed, but can be\n+    // non-empty in other states.",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 17,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a650caab9f11be7f5927f9aa556bb7d2a8ebed33",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (a650caab9f11be7f5927f9aa556bb7d2a8ebed33)\r\n\r\nWould maybe tweak comment to be more specific. \"This set will be empty if state is InMempool or Confirmed, but can be nonempty if state is Inactive or BlockConflicted.\"",
      "created_at": "2024-02-23T15:28:55Z",
      "updated_at": "2024-02-23T16:38:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500828408",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500828408"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 263,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 265,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500837836",
      "pull_request_review_id": 1898382151,
      "id": 1500837836,
      "node_id": "PRRC_kwDOABII585ZdPfM",
      "diff_hunk": "@@ -257,7 +257,7 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<uin\n {\n     AssertLockHeld(wallet.cs_wallet);\n     if (wtx.isConfirmed()) return true;\n-    if (wtx.isBlockConflicted()) return false;\n+    if (wtx.isConflicted()) return false;",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a650caab9f11be7f5927f9aa556bb7d2a8ebed33",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (a650caab9f11be7f5927f9aa556bb7d2a8ebed33)\r\n\r\nCan this change be reverted? This change seems like it will have no effect, because of the `if (!wtx.InMempool()) return false;` line below. If the transaction conflicts with the mempool, it should already not be in in the mempool and already not be trusted. \r\n\r\nWould suggest reverting this change and dropping \"if a tx has a mempool conflict, the tx will no longer be trusted\" from the commit description. Also might suggest dropping the `CWalletTx::isConflicted` method since it is only used one other place.",
      "created_at": "2024-02-23T15:36:40Z",
      "updated_at": "2024-02-23T16:39:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500837836",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500837836"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 260,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500848677",
      "pull_request_review_id": 1898382151,
      "id": 1500848677,
      "node_id": "PRRC_kwDOABII585ZdSIl",
      "diff_hunk": "@@ -755,7 +755,7 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n             // An output is considered spent if a spending transaction\n             // is either confirmed, or in the mempool, or inactive (but not abandoned)\n             const auto& wtx = mit->second;\n-            if (wtx.isConfirmed() || wtx.InMempool() || (wtx.isInactive() && !wtx.isAbandoned()))\n+            if (wtx.isConfirmed() || wtx.InMempool() || (wtx.isInactive() && !wtx.isAbandoned() && !wtx.isMempoolConflicted()))",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "2c867784b2a719c9e701e19e389c3adfa7d7faae",
      "in_reply_to_id": 1491449136,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (a650caab9f11be7f5927f9aa556bb7d2a8ebed33)\r\n\r\n> The preceding was more of a refactor, while this commit aims to have `IsSpent` return false for txos spent by mempool-conflicted transactions.\r\n\r\nSounds good. I guess I'm still curious why you prefer over:\r\n\r\n```c++\r\nif (wtx.isConfirmed() || wtx.InMempool() || (wtx.isInactive() && !wtx.isAbandoned() && !wtx.isMempoolConflicted())\r\n```\r\n\r\nover \r\n\r\n```c++\r\nif (!wtx.IsAbandoned() && !wtx.isConflicted())\r\n```\r\n\r\nsince both checks should equivalent. Either approach seems fine to me, though.",
      "created_at": "2024-02-23T15:45:16Z",
      "updated_at": "2024-02-23T16:38:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500848677",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500848677"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 761,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500861821",
      "pull_request_review_id": 1898382151,
      "id": 1500861821,
      "node_id": "PRRC_kwDOABII585ZdVV9",
      "diff_hunk": "@@ -1423,6 +1427,27 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        auto range =  mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (auto _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            CWalletTx& wallet_tx = mapWallet.at(_it->second);\n+            if (wallet_tx.tx->GetHash() == conflict_txid) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a650caab9f11be7f5927f9aa556bb7d2a8ebed33",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: use CWalletTx member functions to determine tx state\" (feb702a615cf4d9d2d4aa825b46951ae0f389183)\r\n\r\nThe mapWallet lookup appears to not do anything and it seems like could be simplified\r\n\r\n```diff\r\n-            CWalletTx& wallet_tx = mapWallet.at(_it->second);\r\n-            if (wallet_tx.tx->GetHash() == conflict_txid) continue;\r\n+            if (_it->second == conflict_txid) continue;\r\n```",
      "created_at": "2024-02-23T15:55:22Z",
      "updated_at": "2024-02-23T16:38:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500861821",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500861821"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1439,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1440,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500878535",
      "pull_request_review_id": 1898382151,
      "id": 1500878535,
      "node_id": "PRRC_kwDOABII585ZdZbH",
      "diff_hunk": "@@ -1423,6 +1427,27 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        auto range =  mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (auto _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            CWalletTx& wallet_tx = mapWallet.at(_it->second);\n+            if (wallet_tx.tx->GetHash() == conflict_txid) continue;\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                wtx.mempool_conflicts.insert(conflict_txid);\n+\n+                return TxUpdate::CHANGED;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a650caab9f11be7f5927f9aa556bb7d2a8ebed33",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (a650caab9f11be7f5927f9aa556bb7d2a8ebed33)\r\n\r\nWould be nice to add a check that conflict txid is actually inserted as assumed:\r\n\r\n```diff\r\n-                wtx.mempool_conflicts.insert(conflict_txid);\r\n-\r\n+                Assume(wtx.mempool_conflicts.insert(conflict_txid).second);\r\n```",
      "created_at": "2024-02-23T16:08:54Z",
      "updated_at": "2024-02-23T16:38:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500878535",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500878535"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1443,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500887407",
      "pull_request_review_id": 1898382151,
      "id": 1500887407,
      "node_id": "PRRC_kwDOABII585Zdblv",
      "diff_hunk": "@@ -1460,6 +1485,25 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n         // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n         SyncTransaction(tx, TxStateInactive{});\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        auto range =  mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (auto _it = range.first; _it != range.second; ++_it) {\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Remove the previously conflicting transaction from this wtx's entry\n+                if (wtx.mempool_conflicts.erase(conflict_txid)) return TxUpdate::CHANGED;\n+\n+                return TxUpdate::UNCHANGED;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a650caab9f11be7f5927f9aa556bb7d2a8ebed33",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (a650caab9f11be7f5927f9aa556bb7d2a8ebed33)\r\n\r\nUnimportant style point, but usually it makes more sense to return early when state is *not* changing than when it is changing:\r\n\r\n```diff\r\n-                if (wtx.mempool_conflicts.erase(conflict_txid)) return TxUpdate::CHANGED;\r\n-\r\n-                return TxUpdate::UNCHANGED;\r\n+                if (!wtx.mempool_conflicts.erase(conflict_txid)) return TxUpdate::UNCHANGED;\r\n+                return TxUpdate::CHANGED;\r\n```\r\n\r\nSo if someone wants to add extra code logging or dealing with the state change, there is a place to insert it after the early return.\r\n\r\nAlternately this could be simplified to\r\n\r\n```c++\r\nreturn wtx.mempool_conflicts.erase(conflict_txid)) ? TxUpdate::CHANGED : TxUpdate::UNCHANGED;\r\n```",
      "created_at": "2024-02-23T16:15:28Z",
      "updated_at": "2024-02-23T16:38:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500887407",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500887407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1498,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500890611",
      "pull_request_review_id": 1898382151,
      "id": 1500890611,
      "node_id": "PRRC_kwDOABII585ZdcXz",
      "diff_hunk": "@@ -346,7 +346,6 @@ def test_descendants_with_mempool_conflicts(self):\n         tx1_child = bob.signrawtransactionwithwallet(raw_tx)['hex']\n         tx1_child_txid = bob.sendrawtransaction(tx1_child)\n \n-        # Currently neither tx1 nor tx1_child should have any conflicts",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 37,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a650caab9f11be7f5927f9aa556bb7d2a8ebed33",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (a650caab9f11be7f5927f9aa556bb7d2a8ebed33)\r\n\r\nShould this comment be restored? Unclear why it is being removed here",
      "created_at": "2024-02-23T16:18:14Z",
      "updated_at": "2024-02-23T16:38:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1500890611",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500890611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 349,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505406725",
      "pull_request_review_id": 1905388009,
      "id": 1505406725,
      "node_id": "PRRC_kwDOABII585Zuq8F",
      "diff_hunk": "@@ -258,6 +258,13 @@ class CWalletTx\n     CTransactionRef tx;\n     TxState m_state;\n \n+    // Set of mempool transactions that conflict\n+    // directly with the transaction, or that conflict\n+    // with an ancestor transaction. This set is empty\n+    // if the transaction is confirmed, but can be\n+    // non-empty in other states.",
      "path": "src/wallet/transaction.h",
      "position": null,
      "original_position": 17,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a650caab9f11be7f5927f9aa556bb7d2a8ebed33",
      "in_reply_to_id": 1500828408,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-28T06:05:22Z",
      "updated_at": "2024-02-28T06:05:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1505406725",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505406725"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 263,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 265,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505406884",
      "pull_request_review_id": 1905388251,
      "id": 1505406884,
      "node_id": "PRRC_kwDOABII585Zuq-k",
      "diff_hunk": "@@ -257,7 +257,7 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<uin\n {\n     AssertLockHeld(wallet.cs_wallet);\n     if (wtx.isConfirmed()) return true;\n-    if (wtx.isBlockConflicted()) return false;\n+    if (wtx.isConflicted()) return false;",
      "path": "src/wallet/receive.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a650caab9f11be7f5927f9aa556bb7d2a8ebed33",
      "in_reply_to_id": 1500837836,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-28T06:05:35Z",
      "updated_at": "2024-02-28T06:05:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1505406884",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505406884"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 260,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505407087",
      "pull_request_review_id": 1905388564,
      "id": 1505407087,
      "node_id": "PRRC_kwDOABII585ZurBv",
      "diff_hunk": "@@ -1423,6 +1427,27 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        auto range =  mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (auto _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            CWalletTx& wallet_tx = mapWallet.at(_it->second);\n+            if (wallet_tx.tx->GetHash() == conflict_txid) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a650caab9f11be7f5927f9aa556bb7d2a8ebed33",
      "in_reply_to_id": 1500861821,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-28T06:05:53Z",
      "updated_at": "2024-02-28T06:05:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1505407087",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505407087"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1439,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1440,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505407288",
      "pull_request_review_id": 1905388908,
      "id": 1505407288,
      "node_id": "PRRC_kwDOABII585ZurE4",
      "diff_hunk": "@@ -1460,6 +1485,25 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n         // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n         SyncTransaction(tx, TxStateInactive{});\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        auto range =  mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (auto _it = range.first; _it != range.second; ++_it) {\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Remove the previously conflicting transaction from this wtx's entry\n+                if (wtx.mempool_conflicts.erase(conflict_txid)) return TxUpdate::CHANGED;\n+\n+                return TxUpdate::UNCHANGED;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 77,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a650caab9f11be7f5927f9aa556bb7d2a8ebed33",
      "in_reply_to_id": 1500887407,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-02-28T06:06:12Z",
      "updated_at": "2024-02-28T06:06:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1505407288",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505407288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1498,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505407590",
      "pull_request_review_id": 1905389385,
      "id": 1505407590,
      "node_id": "PRRC_kwDOABII585ZurJm",
      "diff_hunk": "@@ -346,7 +346,6 @@ def test_descendants_with_mempool_conflicts(self):\n         tx1_child = bob.signrawtransactionwithwallet(raw_tx)['hex']\n         tx1_child_txid = bob.sendrawtransaction(tx1_child)\n \n-        # Currently neither tx1 nor tx1_child should have any conflicts",
      "path": "test/functional/wallet_conflicts.py",
      "position": null,
      "original_position": 37,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a650caab9f11be7f5927f9aa556bb7d2a8ebed33",
      "in_reply_to_id": 1500890611,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That was a mistake, should be fixed now. ",
      "created_at": "2024-02-28T06:06:39Z",
      "updated_at": "2024-02-28T06:06:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1505407590",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505407590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 349,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505409219",
      "pull_request_review_id": 1905391820,
      "id": 1505409219,
      "node_id": "PRRC_kwDOABII585ZurjD",
      "diff_hunk": "@@ -1423,6 +1427,27 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        auto range =  mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (auto _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            CWalletTx& wallet_tx = mapWallet.at(_it->second);\n+            if (wallet_tx.tx->GetHash() == conflict_txid) continue;\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                wtx.mempool_conflicts.insert(conflict_txid);\n+\n+                return TxUpdate::CHANGED;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a650caab9f11be7f5927f9aa556bb7d2a8ebed33",
      "in_reply_to_id": 1500878535,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It seems like that is not always true, so I have changed this code to do something similar to `transactionRemovedFromMempool` where it only returns `TxUpdate::CHANGED` if the txid is actually inserted. ",
      "created_at": "2024-02-28T06:09:01Z",
      "updated_at": "2024-02-28T06:09:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1505409219",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505409219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1443,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508064286",
      "pull_request_review_id": 1909652746,
      "id": 1508064286,
      "node_id": "PRRC_kwDOABII585Z4zwe",
      "diff_hunk": "@@ -1423,6 +1427,27 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        auto range =  mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (auto _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            CWalletTx& wallet_tx = mapWallet.at(_it->second);\n+            if (wallet_tx.tx->GetHash() == conflict_txid) continue;\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                wtx.mempool_conflicts.insert(conflict_txid);\n+\n+                return TxUpdate::CHANGED;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "a650caab9f11be7f5927f9aa556bb7d2a8ebed33",
      "in_reply_to_id": 1500878535,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1505409219\r\n\r\n> It seems like that is not always true, so I have changed this code to do something similar to `transactionRemovedFromMempool` where it only returns `TxUpdate::CHANGED` if the txid is actually inserted.\r\n\r\nActually that's not surprising since a transaction could depend on another transaction through multiple paths. So the new code will now be a little more efficient.",
      "created_at": "2024-02-29T18:58:56Z",
      "updated_at": "2024-02-29T19:28:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1508064286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508064286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1443,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1444,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508079905",
      "pull_request_review_id": 1909652746,
      "id": 1508079905,
      "node_id": "PRRC_kwDOABII585Z43kh",
      "diff_hunk": "@@ -758,7 +758,7 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n             // check for the inverse condition and only consider spending\n             // transactions in known, potentially active states.\n             const auto& wtx = mit->second;\n-            if (wtx.isConfirmed() || wtx.InMempool() || (wtx.isInactive() && !wtx.isAbandoned()))\n+            if (!wtx.isAbandoned() && !wtx.isMempoolConflicted() && !wtx.isBlockConflicted())",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "9fa7f813281d8520a5eb5adbd29fe3a0d2ab5a4f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (9fa7f813281d8520a5eb5adbd29fe3a0d2ab5a4f)\r\n\r\nWould suggest deleting the \"An output is considered spent...\" comment above now that the code is simpler and it no longer adds any new information. The part of the comment about checking for the \"inverse condition\" is also no longer true, because the code is now checking directly if wtx is conflicted or abandoned, instead of checking for the inverse condition (that it is confirmed, or in mempool, or inactive and not abandoned).",
      "created_at": "2024-02-29T19:14:50Z",
      "updated_at": "2024-02-29T19:28:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1508079905",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508079905"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 758,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 761,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508083442",
      "pull_request_review_id": 1909652746,
      "id": 1508083442,
      "node_id": "PRRC_kwDOABII585Z44by",
      "diff_hunk": "@@ -752,8 +752,13 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n         const uint256& wtxid = it->second;\n         const auto mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n-            int depth = GetTxDepthInMainChain(mit->second);\n-            if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n+            // An output is considered spent by a spending transaction\n+            // unless the spending transaction is conflicted or\n+            // abandoned. The check below is written conservatively to\n+            // check for the inverse condition and only consider spending\n+            // transactions in known, potentially active states.\n+            const auto& wtx = mit->second;\n+            if (wtx.isConfirmed() || wtx.InMempool() || (wtx.isInactive() && !wtx.isAbandoned()))",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "92b3204b69e5ec25cbb29bd158f25d2b07e48cf6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: use CWalletTx member functions to determine tx state\" (92b3204b69e5ec25cbb29bd158f25d2b07e48cf6)\r\n\r\nWould suggest simplifying this code and deleting the comment so this is just:\r\n\r\n```c++\r\nconst auto& wtx = mit->second;\r\nif (!wtx.isAbandoned() && !wtx.isBlockConflicted())\r\n```\r\n\r\nUsing the simpler condition would make this commit easier to understand, and make the change in the next commit more obvious where the line becomes:\r\n\r\n```c++\r\nif (!wtx.isAbandoned() && !wtx.isMempoolConflicted() && !wtx.isBlockConflicted())\r\n```",
      "created_at": "2024-02-29T19:18:20Z",
      "updated_at": "2024-02-29T19:28:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1508083442",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508083442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 755,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 761,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515245021",
      "pull_request_review_id": 1920971953,
      "id": 1515245021,
      "node_id": "PRRC_kwDOABII585aUM3d",
      "diff_hunk": "@@ -123,5 +138,249 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):",
      "path": "test/functional/wallet_conflicts.py",
      "position": 33,
      "original_position": 33,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "d3f7764c802fe1b6a756f679790d9074a2b98525",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In d3f7764c802fe:\r\nIt would be good to unload the created wallet/s at the end of each test case (call `unloadwallet()`). Otherwise we keep them active for the entire test lifetime.\r\n",
      "created_at": "2024-03-06T22:38:07Z",
      "updated_at": "2024-03-07T02:48:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1515245021",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515245021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515248932",
      "pull_request_review_id": 1920971953,
      "id": 1515248932,
      "node_id": "PRRC_kwDOABII585aUN0k",
      "diff_hunk": "@@ -123,5 +138,249 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = alice.listunspent()\n+        assert_equal(len(unspents), 3)\n+        assert all([tx[\"amount\"] == 25 for tx in unspents])\n+\n+        # tx1 spends unspent[0] and unspent[1]\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # tx2 spends unspent[1] and unspent[2], conflicts with tx1\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # tx3 spends unspent[2], conflicts with tx2\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # broadcast tx1\n+        tx1_txid = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent(), [unspents[2]])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        # broadcast tx2, replaces tx1 in mempool\n+        tx2_txid = alice.sendrawtransaction(tx2)\n+\n+        # Check that unspent[0] is still not available because the wallet does not know that the tx spending it has a mempool conflicted\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        # broadcast tx3, replaces tx2 in mempool\n+        # Now that tx1's conflict has been removed, tx1 is now\n+        # not conflicted, and instead is inactive until it is\n+        # rebroadcasted. Now unspent[0] is not available, because\n+        # tx1 is no longer conflicted.\n+        alice.sendrawtransaction(tx3)\n+\n+        assert tx1_txid not in self.nodes[0].getrawmempool()\n+\n+        # now all of alice's outputs should be considered spent\n+        # unspent[0]: spent by inactive tx1\n+        # unspent[1]: spent by inactive tx1\n+        # unspent[2]: spent by active tx3\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        # Clean up for next test\n+        bob.sendall([self.nodes[2].getnewaddress()])\n+        self.generate(self.nodes[2], 1)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        self.nodes[0].createwallet(\"alice_2\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice_2\")\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        # alice and bob nodes are disconnected so that transactions can be\n+        # created by alice, but broadcasted from bob so that alice's wallet\n+        # doesn't know about them\n+        self.disconnect_nodes(0, 1)\n+\n+        # Sends funds to bob\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1_txid = bob.sendrawtransaction(raw_tx1) # broadcast original tx spending unspents[0] only to bob\n+\n+        # create a conflict to previous tx (also spends unspents[0]), but don't broadcast, sends funds back to alice\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # create a conflict to previous tx (also spends unspents[2]), but don't broadcast, sends funds back to alice\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # Sends funds to bob\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2_txid = bob.sendrawtransaction(raw_tx2) # broadcast another original tx spending unspents[1] only to bob\n+\n+        # create a conflict to previous tx (also spends unspents[1]), but don't broadcast, sends funds to alice\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1_txid, tx2_txid]]",
      "path": "test/functional/wallet_conflicts.py",
      "position": 136,
      "original_position": 135,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "d3f7764c802fe1b6a756f679790d9074a2b98525",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In d3f7764c802fe:\r\n\r\nTiny note for reviewers:\r\n`vout` is always 0 because \"alice only contain 3 utxo of 25 btc each. So, tx1 and tx2 are changeless transactions. (could be good to mention this in the code too)",
      "created_at": "2024-03-06T22:42:43Z",
      "updated_at": "2024-03-07T02:49:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1515248932",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515248932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 244,
      "original_line": 244,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515265443",
      "pull_request_review_id": 1920971953,
      "id": 1515265443,
      "node_id": "PRRC_kwDOABII585aUR2j",
      "diff_hunk": "@@ -1423,6 +1427,26 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        auto range =  mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (auto _it = range.first; _it != range.second; ++_it) {\n+            // if this tx is the same as the tx which was just added to the mempool, continue\n+            if (_it->second == conflict_txid) continue;\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                if (!wtx.mempool_conflicts.insert(conflict_txid).second) return TxUpdate::UNCHANGED;\n+\n+                return TxUpdate::CHANGED;\n+            };\n+\n+            RecursiveUpdateTxState(nullptr, _it->second, try_updating_state);\n+        }",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "9fa7f813281d8520a5eb5adbd29fe3a0d2ab5a4f",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "styling tiny nit:\r\n\r\nIn case you like it:\r\n```c++\r\n// Mark all already spent inputs, and all txs that consumes them, as conflicted\r\nfor (auto range = mapTxSpends.equal_range(tx_in.prevout); range.first != range.second; range.first++) {\r\n    const uint256& spent_id = range.first->second;\r\n    // Skip the recently added tx\r\n    if (spent_id == conflict_txid) continue;\r\n    RecursiveUpdateTxState(/*batch=*/nullptr, spent_id, [&conflict_txid](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\r\n    \treturn wtx.mempool_conflicts.insert(conflict_txid).second ? TxUpdate::CHANGED : TxUpdate::UNCHANGED;\r\n    });\r\n}\r\n```\r\n\r\n(same for `transactionRemovedFromMempool`)",
      "created_at": "2024-03-06T23:03:51Z",
      "updated_at": "2024-03-07T02:49:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1515265443",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515265443"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1434,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1436,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515397190",
      "pull_request_review_id": 1920971953,
      "id": 1515397190,
      "node_id": "PRRC_kwDOABII585aUyBG",
      "diff_hunk": "@@ -123,5 +138,249 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = alice.listunspent()\n+        assert_equal(len(unspents), 3)\n+        assert all([tx[\"amount\"] == 25 for tx in unspents])\n+\n+        # tx1 spends unspent[0] and unspent[1]\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # tx2 spends unspent[1] and unspent[2], conflicts with tx1\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # tx3 spends unspent[2], conflicts with tx2\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # broadcast tx1\n+        tx1_txid = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent(), [unspents[2]])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        # broadcast tx2, replaces tx1 in mempool\n+        tx2_txid = alice.sendrawtransaction(tx2)\n+\n+        # Check that unspent[0] is still not available because the wallet does not know that the tx spending it has a mempool conflicted\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        # broadcast tx3, replaces tx2 in mempool\n+        # Now that tx1's conflict has been removed, tx1 is now\n+        # not conflicted, and instead is inactive until it is\n+        # rebroadcasted. Now unspent[0] is not available, because\n+        # tx1 is no longer conflicted.\n+        alice.sendrawtransaction(tx3)\n+\n+        assert tx1_txid not in self.nodes[0].getrawmempool()\n+\n+        # now all of alice's outputs should be considered spent\n+        # unspent[0]: spent by inactive tx1\n+        # unspent[1]: spent by inactive tx1\n+        # unspent[2]: spent by active tx3\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        # Clean up for next test\n+        bob.sendall([self.nodes[2].getnewaddress()])\n+        self.generate(self.nodes[2], 1)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        self.nodes[0].createwallet(\"alice_2\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice_2\")\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        # alice and bob nodes are disconnected so that transactions can be\n+        # created by alice, but broadcasted from bob so that alice's wallet\n+        # doesn't know about them\n+        self.disconnect_nodes(0, 1)\n+\n+        # Sends funds to bob\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1_txid = bob.sendrawtransaction(raw_tx1) # broadcast original tx spending unspents[0] only to bob\n+\n+        # create a conflict to previous tx (also spends unspents[0]), but don't broadcast, sends funds back to alice\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # create a conflict to previous tx (also spends unspents[2]), but don't broadcast, sends funds back to alice\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # Sends funds to bob\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2_txid = bob.sendrawtransaction(raw_tx2) # broadcast another original tx spending unspents[1] only to bob\n+\n+        # create a conflict to previous tx (also spends unspents[1]), but don't broadcast, sends funds to alice\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1_txid, tx2_txid]]\n+\n+        # tx1 and tx2 are now in bob's mempool, and they are unconflicted, so bob has these funds\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        # spend both of bob's unspents, child tx of tx1 and tx2\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3_txid = bob.sendrawtransaction(raw_tx3) # broadcast tx only to bob\n+\n+        # alice knows about 0 txs, bob knows about 3\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 3)\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99900000\"))\n+\n+        # bob broadcasts tx_1 conflict\n+        tx1_conflict_txid = bob.sendrawtransaction(tx1_conflict)\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 2) # tx1_conflict kicks out both tx1, and its child tx3\n+\n+        assert tx2_txid in bob.getrawmempool()\n+        assert tx1_conflict_txid in bob.getrawmempool()\n+\n+        # check that the tx2 unspent is still not available because the wallet does not know that the tx spending it has a mempool conflict\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        # we will be disconnecting this block in the future\n+        alice.sendrawtransaction(tx2_conflict)\n+        assert_equal(len(alice.getrawmempool()), 1) # currently alice's mempool is only aware of tx2_conflict\n+        # 11 blocks are mined so that when they are invalidated, tx_2\n+        # does not get put back into the mempool\n+        blk = self.generate(self.nodes[0], 11, sync_fun=self.no_op)[0]\n+        assert_equal(len(alice.getrawmempool()), 0) # tx2_conflict is now mined\n+\n+        self.connect_nodes(0, 1)\n+        self.sync_blocks()\n+        assert_equal(alice.getbestblockhash(), bob.getbestblockhash())\n+\n+        # now that tx2 has a block conflict, tx1_conflict should be the only tx in bob's mempool\n+        assert tx1_conflict_txid in bob.getrawmempool()\n+        assert_equal(len(bob.getrawmempool()), 1)\n+\n+        # tx3 should now also be block-conflicted by tx2_conflict\n+        assert_equal(bob.gettransaction(tx3_txid)[\"confirmations\"], -11)\n+        # bob has no pending funds, since tx1, tx2, and tx3 are all conflicted\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+        bob.invalidateblock(blk) # remove tx2_conflict\n+        # bob should still have no pending funds because tx1 and tx3 are still conflicted, and tx2 has not been re-broadcast\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+        assert_equal(len(bob.getrawmempool()), 1)\n+        # check that tx3 is no longer block-conflicted\n+        assert_equal(bob.gettransaction(tx3_txid)[\"confirmations\"], 0)\n+\n+        bob.sendrawtransaction(raw_tx2)\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        bob.sendrawtransaction(tx1_conflict_conflict) # kick tx1_conflict out of the mempool\n+        bob.sendrawtransaction(raw_tx1) #re-broadcast tx1 because it is no longer conflicted",
      "path": "test/functional/wallet_conflicts.py",
      "position": 202,
      "original_position": 193,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "d3f7764c802fe1b6a756f679790d9074a2b98525",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In d3f7764c802fe:\r\n\r\nnit: \r\nCould move the `tx1_conflict_conflict` creation here. Basically because it adds unneeded information at the beginning of the test that reviewers/readers have to carry over. The tx only exist to kick `tx1_conflict` out of the mempool so `tx1` can be re-accepted at this point.",
      "created_at": "2024-03-07T02:32:02Z",
      "updated_at": "2024-03-07T02:48:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1515397190",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515397190"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": 309,
      "original_start_line": 300,
      "start_side": "RIGHT",
      "line": 310,
      "original_line": 310,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515405522",
      "pull_request_review_id": 1920971953,
      "id": 1515405522,
      "node_id": "PRRC_kwDOABII585aU0DS",
      "diff_hunk": "@@ -123,5 +138,249 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = alice.listunspent()\n+        assert_equal(len(unspents), 3)\n+        assert all([tx[\"amount\"] == 25 for tx in unspents])\n+\n+        # tx1 spends unspent[0] and unspent[1]\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # tx2 spends unspent[1] and unspent[2], conflicts with tx1\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # tx3 spends unspent[2], conflicts with tx2\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # broadcast tx1\n+        tx1_txid = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent(), [unspents[2]])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        # broadcast tx2, replaces tx1 in mempool\n+        tx2_txid = alice.sendrawtransaction(tx2)\n+\n+        # Check that unspent[0] is still not available because the wallet does not know that the tx spending it has a mempool conflicted\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        # broadcast tx3, replaces tx2 in mempool\n+        # Now that tx1's conflict has been removed, tx1 is now\n+        # not conflicted, and instead is inactive until it is\n+        # rebroadcasted. Now unspent[0] is not available, because\n+        # tx1 is no longer conflicted.\n+        alice.sendrawtransaction(tx3)\n+\n+        assert tx1_txid not in self.nodes[0].getrawmempool()\n+\n+        # now all of alice's outputs should be considered spent\n+        # unspent[0]: spent by inactive tx1\n+        # unspent[1]: spent by inactive tx1\n+        # unspent[2]: spent by active tx3\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        # Clean up for next test\n+        bob.sendall([self.nodes[2].getnewaddress()])\n+        self.generate(self.nodes[2], 1)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        self.nodes[0].createwallet(\"alice_2\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice_2\")\n+        bob = self.nodes[1]\n+\n+        self.nodes[2].send(outputs=[{alice.getnewaddress() : 25} for _ in range(3)])\n+        self.generate(self.nodes[2], 1)\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        # alice and bob nodes are disconnected so that transactions can be\n+        # created by alice, but broadcasted from bob so that alice's wallet\n+        # doesn't know about them\n+        self.disconnect_nodes(0, 1)\n+\n+        # Sends funds to bob\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1_txid = bob.sendrawtransaction(raw_tx1) # broadcast original tx spending unspents[0] only to bob\n+\n+        # create a conflict to previous tx (also spends unspents[0]), but don't broadcast, sends funds back to alice\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # create a conflict to previous tx (also spends unspents[2]), but don't broadcast, sends funds back to alice\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        # Sends funds to bob\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2_txid = bob.sendrawtransaction(raw_tx2) # broadcast another original tx spending unspents[1] only to bob\n+\n+        # create a conflict to previous tx (also spends unspents[1]), but don't broadcast, sends funds to alice\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1_txid, tx2_txid]]\n+\n+        # tx1 and tx2 are now in bob's mempool, and they are unconflicted, so bob has these funds\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        # spend both of bob's unspents, child tx of tx1 and tx2\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3_txid = bob.sendrawtransaction(raw_tx3) # broadcast tx only to bob\n+\n+        # alice knows about 0 txs, bob knows about 3\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 3)\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99900000\"))\n+\n+        # bob broadcasts tx_1 conflict\n+        tx1_conflict_txid = bob.sendrawtransaction(tx1_conflict)\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 2) # tx1_conflict kicks out both tx1, and its child tx3\n+\n+        assert tx2_txid in bob.getrawmempool()\n+        assert tx1_conflict_txid in bob.getrawmempool()\n+\n+        # check that the tx2 unspent is still not available because the wallet does not know that the tx spending it has a mempool conflict\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        # we will be disconnecting this block in the future\n+        alice.sendrawtransaction(tx2_conflict)\n+        assert_equal(len(alice.getrawmempool()), 1) # currently alice's mempool is only aware of tx2_conflict\n+        # 11 blocks are mined so that when they are invalidated, tx_2\n+        # does not get put back into the mempool\n+        blk = self.generate(self.nodes[0], 11, sync_fun=self.no_op)[0]\n+        assert_equal(len(alice.getrawmempool()), 0) # tx2_conflict is now mined\n+\n+        self.connect_nodes(0, 1)\n+        self.sync_blocks()\n+        assert_equal(alice.getbestblockhash(), bob.getbestblockhash())\n+\n+        # now that tx2 has a block conflict, tx1_conflict should be the only tx in bob's mempool\n+        assert tx1_conflict_txid in bob.getrawmempool()\n+        assert_equal(len(bob.getrawmempool()), 1)\n+\n+        # tx3 should now also be block-conflicted by tx2_conflict\n+        assert_equal(bob.gettransaction(tx3_txid)[\"confirmations\"], -11)\n+        # bob has no pending funds, since tx1, tx2, and tx3 are all conflicted\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+        bob.invalidateblock(blk) # remove tx2_conflict\n+        # bob should still have no pending funds because tx1 and tx3 are still conflicted, and tx2 has not been re-broadcast\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+        assert_equal(len(bob.getrawmempool()), 1)\n+        # check that tx3 is no longer block-conflicted\n+        assert_equal(bob.gettransaction(tx3_txid)[\"confirmations\"], 0)\n+\n+        bob.sendrawtransaction(raw_tx2)\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        bob.sendrawtransaction(tx1_conflict_conflict) # kick tx1_conflict out of the mempool\n+        bob.sendrawtransaction(raw_tx1) #re-broadcast tx1 because it is no longer conflicted\n+\n+        # Now bob has no pending funds because tx1 and tx2 are spent by tx3, which hasn't been re-broadcast yet\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        bob.sendrawtransaction(raw_tx3)\n+        assert_equal(len(bob.getrawmempool()), 4) # The mempool contains: tx1, tx2, tx1_conflict_conflict, tx3\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99900000\"))\n+\n+        # Clean up for next test\n+        bob.reconsiderblock(blk)\n+        assert_equal(alice.getbestblockhash(), bob.getbestblockhash())\n+        self.sync_mempools()\n+        self.generate(self.nodes[2], 1)\n+\n+    def test_descendants_with_mempool_conflicts(self):",
      "path": "test/functional/wallet_conflicts.py",
      "position": 219,
      "original_position": 208,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "d3f7764c802fe1b6a756f679790d9074a2b98525",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In d3f7764c802fe:\r\nCould add wallet balance checks along this test.\r\n\r\nAlso, could test the scenario where the parent and the child tx are conflicted by different txs, then only the parent gets unconflicted -> this shouldn't remove the \"conflicting\" status from the child.",
      "created_at": "2024-03-07T02:45:43Z",
      "updated_at": "2024-03-07T12:43:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1515405522",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515405522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 327,
      "original_line": 327,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1516099289",
      "pull_request_review_id": 1922351025,
      "id": 1516099289,
      "node_id": "PRRC_kwDOABII585aXdbZ",
      "diff_hunk": "@@ -518,7 +518,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     bool IsTxInMainChain(const CWalletTx& wtx) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet)\n     {\n         AssertLockHeld(cs_wallet);\n-        return GetTxDepthInMainChain(wtx) > 0;\n+        return wtx.isConfirmed();\n     }",
      "path": "src/wallet/wallet.h",
      "position": null,
      "original_position": 6,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "92b3204b69e5ec25cbb29bd158f25d2b07e48cf6",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 92b3204b69e:\r\nCould just remove this method and replace the two places that uses it for a simpler `wtx.isConfirmed()`.",
      "created_at": "2024-03-07T12:50:21Z",
      "updated_at": "2024-03-07T14:56:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1516099289",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1516099289"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 518,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 522,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1516106925",
      "pull_request_review_id": 1922351025,
      "id": 1516106925,
      "node_id": "PRRC_kwDOABII585aXfSt",
      "diff_hunk": "@@ -1363,8 +1363,12 @@ void CWallet::MarkConflicted(const uint256& hashBlock, int conflicting_height, c\n }\n \n void CWallet::RecursiveUpdateTxState(const uint256& tx_hash, const TryUpdatingStateFn& try_updating_state) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n-    // Do not flush the wallet here for performance reasons\n     WalletBatch batch(GetDatabase(), false);\n+    RecursiveUpdateTxState(&batch, tx_hash, try_updating_state);\n+}\n+\n+void CWallet::RecursiveUpdateTxState(WalletBatch* batch, const uint256& tx_hash, const TryUpdatingStateFn& try_updating_state) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+    // Do not flush the wallet here for performance reasons",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "9fa7f813281d8520a5eb5adbd29fe3a0d2ab5a4f",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 9fa7f81328:\r\n\r\nThis comment relates to the second argument of the `WalletBatch` constructor. Need to move it to the caller side, it does not mean anything inside `RecursiveUpdateTxState`.",
      "created_at": "2024-03-07T12:56:03Z",
      "updated_at": "2024-03-07T14:56:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1516106925",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1516106925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1370,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1371,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519844112",
      "pull_request_review_id": 1928035013,
      "id": 1519844112,
      "node_id": "PRRC_kwDOABII585alvsQ",
      "diff_hunk": "@@ -1363,8 +1363,12 @@ void CWallet::MarkConflicted(const uint256& hashBlock, int conflicting_height, c\n }\n \n void CWallet::RecursiveUpdateTxState(const uint256& tx_hash, const TryUpdatingStateFn& try_updating_state) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n-    // Do not flush the wallet here for performance reasons\n     WalletBatch batch(GetDatabase(), false);\n+    RecursiveUpdateTxState(&batch, tx_hash, try_updating_state);\n+}\n+\n+void CWallet::RecursiveUpdateTxState(WalletBatch* batch, const uint256& tx_hash, const TryUpdatingStateFn& try_updating_state) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+    // Do not flush the wallet here for performance reasons",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "9fa7f813281d8520a5eb5adbd29fe3a0d2ab5a4f",
      "in_reply_to_id": 1516106925,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1516106925\r\n\r\n> This comment relates to the second argument of the `WalletBatch` constructor. Need to move it to the caller side, it does not mean anything inside `RecursiveUpdateTxState`.\r\n\r\nAgree the comment makes sense where it was previously above `WalletBatch`, and shouldn't be moved in this commit\r\n",
      "created_at": "2024-03-11T14:44:18Z",
      "updated_at": "2024-03-11T14:45:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1519844112",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1519844112"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1370,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1371,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526690595",
      "pull_request_review_id": 1940028125,
      "id": 1526690595,
      "node_id": "PRRC_kwDOABII585a_3Mj",
      "diff_hunk": "@@ -101,7 +101,7 @@ WalletTxStatus MakeWalletTxStatus(const CWallet& wallet, const CWalletTx& wtx)\n     result.is_trusted = CachedTxIsTrusted(wallet, wtx);\n     result.is_abandoned = wtx.isAbandoned();\n     result.is_coinbase = wtx.IsCoinBase();\n-    result.is_in_main_chain = wallet.IsTxInMainChain(wtx);\n+    result.is_in_main_chain = wtx.isConfirmed();",
      "path": "src/wallet/interfaces.cpp",
      "position": 14,
      "original_position": 5,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "8fd1c8894b24d73bd2769363503c7464101af04f",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: use CWalletTx member functions to determine tx state\" (8fd1c8894b24d73bd2769363503c7464101af04f)\r\n\r\nWould be good to make clear that this commit is intended to be a refactoring, and shouldn't change behavior. (Could say this in commit message or put \"wallet refactor:\" in the commit subject or do both).",
      "created_at": "2024-03-15T18:40:07Z",
      "updated_at": "2024-03-15T19:02:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1526690595",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526690595"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 104,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526694521",
      "pull_request_review_id": 1940028125,
      "id": 1526694521,
      "node_id": "PRRC_kwDOABII585a_4J5",
      "diff_hunk": "@@ -1418,6 +1421,20 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // Mark all already spent inputs, and all txs that consumes them, as conflicted\n+        for (auto range = mapTxSpends.equal_range(tx_in.prevout); range.first != range.second; range.first++) {",
      "path": "src/wallet/wallet.cpp",
      "position": 67,
      "original_position": 38,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "3fa20dfb6a8a92a9b9f00248d546a21dbf6821d6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (3fa20dfb6a8a92a9b9f00248d546a21dbf6821d6)\r\n\r\nWould be helpful IMO to keep previous comment explaining the for loop \"// For each wallet transaction spending this prevout..\"",
      "created_at": "2024-03-15T18:43:54Z",
      "updated_at": "2024-03-15T19:02:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1526694521",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526694521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1429,
      "original_line": 1429,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526699085",
      "pull_request_review_id": 1940028125,
      "id": 1526699085,
      "node_id": "PRRC_kwDOABII585a_5RN",
      "diff_hunk": "@@ -1455,6 +1472,35 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n         // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n         SyncTransaction(tx, TxStateInactive{});\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        /*\n+        auto range =  mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (auto _it = range.first; _it != range.second; ++_it) {\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Remove the previously conflicting transaction from this wtx's entry\n+                if (!wtx.mempool_conflicts.erase(conflict_txid)) return TxUpdate::UNCHANGED;\n+\n+                return TxUpdate::CHANGED;\n+            };\n+\n+            RecursiveUpdateTxState(nullptr, _it->second, try_updating_state);\n+        }\n+        */\n+\n+        for (auto range = mapTxSpends.equal_range(tx_in.prevout); range.first != range.second; range.first++) {\n+            const uint256& spent_id = range.first->second;\n+\n+            RecursiveUpdateTxState(/*batch=*/nullptr, spent_id, [&conflict_txid](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                return !wtx.mempool_conflicts.erase(conflict_txid) ? TxUpdate::UNCHANGED : TxUpdate::CHANGED;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "3fa20dfb6a8a92a9b9f00248d546a21dbf6821d6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (3fa20dfb6a8a92a9b9f00248d546a21dbf6821d6)\r\n\r\nNegated logic is a little odd. Would suggest simplifying to:\r\n\r\n```c++\r\nreturn wtx.mempool_conflicts.erase(conflict_txid) ? TxUpdate::CHANGED : TxUpdate::UNCHANGED;\r\n```",
      "created_at": "2024-03-15T18:48:49Z",
      "updated_at": "2024-03-15T19:02:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1526699085",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526699085"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526702060",
      "pull_request_review_id": 1940028125,
      "id": 1526702060,
      "node_id": "PRRC_kwDOABII585a_5_s",
      "diff_hunk": "@@ -1455,6 +1472,35 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n         // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n         SyncTransaction(tx, TxStateInactive{});\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        /*\n+        auto range =  mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (auto _it = range.first; _it != range.second; ++_it) {\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Remove the previously conflicting transaction from this wtx's entry\n+                if (!wtx.mempool_conflicts.erase(conflict_txid)) return TxUpdate::UNCHANGED;\n+\n+                return TxUpdate::CHANGED;\n+            };\n+\n+            RecursiveUpdateTxState(nullptr, _it->second, try_updating_state);\n+        }\n+        */\n+",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "3fa20dfb6a8a92a9b9f00248d546a21dbf6821d6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (3fa20dfb6a8a92a9b9f00248d546a21dbf6821d6)\r\n\r\nProbably keeping this commented out code is unintentional, but I would suggest replacing with a real comment. Maybe \"Iterate over all wallet transactions spending txin.prev and recursively mark them as no longer conflicting with conflict_txid\"",
      "created_at": "2024-03-15T18:52:17Z",
      "updated_at": "2024-03-15T19:02:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1526702060",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526702060"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1479,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1495,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526706260",
      "pull_request_review_id": 1940028125,
      "id": 1526706260,
      "node_id": "PRRC_kwDOABII585a_7BU",
      "diff_hunk": "@@ -1418,6 +1421,20 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "3fa20dfb6a8a92a9b9f00248d546a21dbf6821d6",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"wallet: track mempool conflicts\" (3fa20dfb6a8a92a9b9f00248d546a21dbf6821d6)\r\n\r\nIMO `conflict_txid` is not the best name for this variable because it is inconsistent with other variable names in this function and we don't know if this transaction actually conflicts with anything. Would suggest renaming `conflict_txid` to `txid` or `tx_hash` to be consistent with other variables referring to the same transaction (`tx` and `tx_in`). \r\n\r\nWould also do same rename in the `transactionRemovedFromMempool` function below.",
      "created_at": "2024-03-15T18:56:00Z",
      "updated_at": "2024-03-15T19:05:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1526706260",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1526706260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1425,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532894213",
      "pull_request_review_id": 1950218214,
      "id": 1532894213,
      "node_id": "PRRC_kwDOABII585bXhwF",
      "diff_hunk": "@@ -101,7 +101,7 @@ WalletTxStatus MakeWalletTxStatus(const CWallet& wallet, const CWalletTx& wtx)\n     result.is_trusted = CachedTxIsTrusted(wallet, wtx);\n     result.is_abandoned = wtx.isAbandoned();\n     result.is_coinbase = wtx.IsCoinBase();\n-    result.is_in_main_chain = wallet.IsTxInMainChain(wtx);\n+    result.is_in_main_chain = wtx.isConfirmed();",
      "path": "src/wallet/interfaces.cpp",
      "position": 14,
      "original_position": 5,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "8fd1c8894b24d73bd2769363503c7464101af04f",
      "in_reply_to_id": 1526690595,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-03-20T21:22:28Z",
      "updated_at": "2024-03-20T21:22:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1532894213",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532894213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 104,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532896739",
      "pull_request_review_id": 1950221733,
      "id": 1532896739,
      "node_id": "PRRC_kwDOABII585bXiXj",
      "diff_hunk": "@@ -1418,6 +1421,20 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // Mark all already spent inputs, and all txs that consumes them, as conflicted\n+        for (auto range = mapTxSpends.equal_range(tx_in.prevout); range.first != range.second; range.first++) {",
      "path": "src/wallet/wallet.cpp",
      "position": 67,
      "original_position": 38,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "3fa20dfb6a8a92a9b9f00248d546a21dbf6821d6",
      "in_reply_to_id": 1526694521,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-03-20T21:25:09Z",
      "updated_at": "2024-03-20T21:25:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1532896739",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532896739"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1429,
      "original_line": 1429,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532896870",
      "pull_request_review_id": 1950221948,
      "id": 1532896870,
      "node_id": "PRRC_kwDOABII585bXiZm",
      "diff_hunk": "@@ -1455,6 +1472,35 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n         // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n         SyncTransaction(tx, TxStateInactive{});\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        /*\n+        auto range =  mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (auto _it = range.first; _it != range.second; ++_it) {\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Remove the previously conflicting transaction from this wtx's entry\n+                if (!wtx.mempool_conflicts.erase(conflict_txid)) return TxUpdate::UNCHANGED;\n+\n+                return TxUpdate::CHANGED;\n+            };\n+\n+            RecursiveUpdateTxState(nullptr, _it->second, try_updating_state);\n+        }\n+        */\n+\n+        for (auto range = mapTxSpends.equal_range(tx_in.prevout); range.first != range.second; range.first++) {\n+            const uint256& spent_id = range.first->second;\n+\n+            RecursiveUpdateTxState(/*batch=*/nullptr, spent_id, [&conflict_txid](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                return !wtx.mempool_conflicts.erase(conflict_txid) ? TxUpdate::UNCHANGED : TxUpdate::CHANGED;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "3fa20dfb6a8a92a9b9f00248d546a21dbf6821d6",
      "in_reply_to_id": 1526699085,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-03-20T21:25:19Z",
      "updated_at": "2024-03-20T21:25:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1532896870",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532896870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1500,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532896966",
      "pull_request_review_id": 1950222107,
      "id": 1532896966,
      "node_id": "PRRC_kwDOABII585bXibG",
      "diff_hunk": "@@ -1455,6 +1472,35 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRe\n         // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n         SyncTransaction(tx, TxStateInactive{});\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        /*\n+        auto range =  mapTxSpends.equal_range(tx_in.prevout);\n+\n+        // For each wallet transaction spending this prevout...\n+        for (auto _it = range.first; _it != range.second; ++_it) {\n+\n+            auto try_updating_state = [&](CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) {\n+                // Remove the previously conflicting transaction from this wtx's entry\n+                if (!wtx.mempool_conflicts.erase(conflict_txid)) return TxUpdate::UNCHANGED;\n+\n+                return TxUpdate::CHANGED;\n+            };\n+\n+            RecursiveUpdateTxState(nullptr, _it->second, try_updating_state);\n+        }\n+        */\n+",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 74,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "3fa20dfb6a8a92a9b9f00248d546a21dbf6821d6",
      "in_reply_to_id": 1526702060,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-03-20T21:25:27Z",
      "updated_at": "2024-03-20T21:25:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1532896966",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532896966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": 1479,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1495,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532897075",
      "pull_request_review_id": 1950222304,
      "id": 1532897075,
      "node_id": "PRRC_kwDOABII585bXicz",
      "diff_hunk": "@@ -1418,6 +1421,20 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const Txid& conflict_txid = tx->GetHash();",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 34,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "3fa20dfb6a8a92a9b9f00248d546a21dbf6821d6",
      "in_reply_to_id": 1526706260,
      "user": {
        "login": "ishaanam",
        "id": 75942586,
        "node_id": "MDQ6VXNlcjc1OTQyNTg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/75942586?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ishaanam",
        "html_url": "https://github.com/ishaanam",
        "followers_url": "https://api.github.com/users/ishaanam/followers",
        "following_url": "https://api.github.com/users/ishaanam/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ishaanam/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ishaanam/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ishaanam/subscriptions",
        "organizations_url": "https://api.github.com/users/ishaanam/orgs",
        "repos_url": "https://api.github.com/users/ishaanam/repos",
        "events_url": "https://api.github.com/users/ishaanam/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ishaanam/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-03-20T21:25:36Z",
      "updated_at": "2024-03-20T21:25:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1532897075",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1532897075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1425,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541059216",
      "pull_request_review_id": 1963245186,
      "id": 1541059216,
      "node_id": "PRRC_kwDOABII585b2rKQ",
      "diff_hunk": "@@ -28,6 +29,20 @@ def get_utxo_of_value(self, from_tx_id, search_value):\n         return next(tx_out[\"vout\"] for tx_out in self.nodes[0].gettransaction(from_tx_id)[\"details\"] if tx_out[\"amount\"] == Decimal(f\"{search_value}\"))\n \n     def run_test(self):\n+        \"\"\"\n+        The following tests check the behavior of the wallet when\n+        transaction conflicts are created. These conflicts are created\n+        using raw transaction RPCs that double-spend UTXOs and have more\n+        fees, replacing the original transaction.\n+        \"\"\"\n+\n+        self.test_block_conflicts()\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 7, self.nodes[2].getnewaddress())",
      "path": "test/functional/wallet_conflicts.py",
      "position": 20,
      "original_position": 20,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "180973a94180f9849bf7cb0dab7c9177a942efb8",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\nWould be good to mention why this `generatetoaddress` is needed. I removed it locally and the test still passes.",
      "created_at": "2024-03-27T12:56:45Z",
      "updated_at": "2024-03-27T13:07:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1541059216",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541059216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 40,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541073962",
      "pull_request_review_id": 1963245186,
      "id": 1541073962,
      "node_id": "PRRC_kwDOABII585b2uwq",
      "diff_hunk": "@@ -417,6 +421,10 @@ static std::vector<RPCResult> TransactionDescriptionString()\n            }},\n            {RPCResult::Type::STR_HEX, \"replaced_by_txid\", /*optional=*/true, \"Only if 'category' is 'send'. The txid if this tx was replaced.\"},\n            {RPCResult::Type::STR_HEX, \"replaces_txid\", /*optional=*/true, \"Only if 'category' is 'send'. The txid if this tx replaces another.\"},\n+           {RPCResult::Type::ARR, \"mempoolconflicts\", \"Transactions that directly conflict with either this transaction or an ancestor transaction\",",
      "path": "src/wallet/rpc/transactions.cpp",
      "position": 15,
      "original_position": 15,
      "commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "original_commit_id": "5952292133d6cc889f51ae771f2e0557311e1efe",
      "in_reply_to_id": null,
      "user": {
        "login": "furszy",
        "id": 5377650,
        "node_id": "MDQ6VXNlcjUzNzc2NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5377650?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/furszy",
        "html_url": "https://github.com/furszy",
        "followers_url": "https://api.github.com/users/furszy/followers",
        "following_url": "https://api.github.com/users/furszy/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/furszy/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/furszy/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/furszy/subscriptions",
        "organizations_url": "https://api.github.com/users/furszy/orgs",
        "repos_url": "https://api.github.com/users/furszy/repos",
        "events_url": "https://api.github.com/users/furszy/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/furszy/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not for this PR just so you don't have to re-touch it but it would be good to describe the difference between `walletconflicts` and `mempoolconflicts` inside the help text. `walletconflicts` description is quite vague.",
      "created_at": "2024-03-27T13:06:45Z",
      "updated_at": "2024-03-27T13:07:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1541073962",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1541073962"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 424,
      "original_line": 424,
      "side": "RIGHT"
    }
  ]
}