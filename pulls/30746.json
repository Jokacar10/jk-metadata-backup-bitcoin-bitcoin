{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746",
    "id": 2043269812,
    "node_id": "PR_kwDOABII5855ydK0",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30746",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30746.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30746.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30746",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30746/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
    "number": 30746,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test: cover base32/base58/base64 with symmetric roundtrip fuzz (and padding) tests",
    "user": {
      "login": "l0rinc",
      "id": 1841944,
      "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l0rinc",
      "html_url": "https://github.com/l0rinc",
      "followers_url": "https://api.github.com/users/l0rinc/followers",
      "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
      "organizations_url": "https://api.github.com/users/l0rinc/orgs",
      "repos_url": "https://api.github.com/users/l0rinc/repos",
      "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/l0rinc/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Added fuzzed roundtrips for `base32`/`base58`/`base64` encoding to make sure encoding/decoding are symmetric.\r\nNote that if we omit the padding in `EncodeBase32` we won't be able to decode it with `DecodeBase32`.\r\nAdded dedicated padding tests to hardcode the failure behavior.\r\nAlso moved over the Base58 json test edge cases from https://github.com/bitcoin/bitcoin/pull/30035",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2024-08-29T06:58:41Z",
    "updated_at": "2025-01-04T09:13:35Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "cf2b79f354a12fb7c2a464e53b3423da64992357",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "l0rinc:l0rinc/roundtrip-tests-base32-base64",
      "ref": "l0rinc/roundtrip-tests-base32-base64",
      "sha": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 674169038,
        "node_id": "R_kgDOKC8Azg",
        "name": "bitcoin",
        "full_name": "l0rinc/bitcoin",
        "owner": {
          "login": "l0rinc",
          "id": 1841944,
          "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/l0rinc",
          "html_url": "https://github.com/l0rinc",
          "followers_url": "https://api.github.com/users/l0rinc/followers",
          "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
          "organizations_url": "https://api.github.com/users/l0rinc/orgs",
          "repos_url": "https://api.github.com/users/l0rinc/repos",
          "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/l0rinc/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/l0rinc/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/l0rinc/bitcoin",
        "archive_url": "https://api.github.com/repos/l0rinc/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/l0rinc/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/l0rinc/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/l0rinc/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/l0rinc/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/l0rinc/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/l0rinc/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/l0rinc/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/l0rinc/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/l0rinc/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/l0rinc/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/l0rinc/bitcoin/events",
        "forks_url": "https://api.github.com/repos/l0rinc/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/l0rinc/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/l0rinc/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/l0rinc/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/l0rinc/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/l0rinc/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/l0rinc/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/l0rinc/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/l0rinc/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/l0rinc/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/l0rinc/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/l0rinc/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/l0rinc/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:l0rinc/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/l0rinc/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/l0rinc/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/l0rinc/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/l0rinc/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/l0rinc/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/l0rinc/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/l0rinc/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/l0rinc/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/l0rinc/bitcoin/hooks",
        "svn_url": "https://github.com/l0rinc/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 251823,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-03T21:05:40Z",
        "created_at": "2023-08-03T09:49:12Z",
        "updated_at": "2024-07-18T12:40:18Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9355578a77978a0c2f189bd7315a2883142d8119",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36473,
        "stargazers_count": 81041,
        "watchers_count": 81041,
        "size": 273906,
        "default_branch": "master",
        "open_issues_count": 690,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-03T18:58:26Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-01-04T08:44:35Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 114,
    "deletions": 50,
    "changed_files": 5,
    "commits": 4,
    "review_comments": 58,
    "comments": 6
  },
  "events": [
    {
      "event": "commented",
      "id": 2316852378,
      "node_id": "IC_kwDOABII586KGFya",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2316852378",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T06:58:44Z",
      "updated_at": "2024-12-30T15:26:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/30746.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [hodlinator](https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2525711019) |\n| Stale ACK | [marcofleon](https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2415779821) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#issuecomment-2316852378",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30746"
    },
    {
      "event": "ready_for_review",
      "id": 14059571960,
      "node_id": "RFRE_lADOABII586UoXQQzwAAAANGBAr4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14059571960",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T10:37:51Z"
    },
    {
      "event": "renamed",
      "id": 14059634787,
      "node_id": "RTE_lADOABII586UoXQQzwAAAANGBQBj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14059634787",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T10:43:10Z",
      "rename": {
        "from": "Add base32 and base64 roundtrip random padding tests",
        "to": "test: cover base32/base64 with random roundtrip padding tests"
      }
    },
    {
      "event": "labeled",
      "id": 14059635520,
      "node_id": "LE_lADOABII586UoXQQzwAAAANGBQNA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14059635520",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T10:43:13Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "reviewed",
      "id": 2269067741,
      "node_id": "PRR_kwDOABII586HPznd",
      "url": null,
      "actor": null,
      "commit_id": "caddc34c6cafe7df6a635d8660ed99d7b6b528f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2269067741",
      "submitted_at": "2024-08-29T14:54:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "reviewed",
      "id": 2269069447,
      "node_id": "PRR_kwDOABII586HP0CH",
      "url": null,
      "actor": null,
      "commit_id": "caddc34c6cafe7df6a635d8660ed99d7b6b528f5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2269069447",
      "submitted_at": "2024-08-29T14:54:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14067216512,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAANGeLCA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14067216512",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9f36a81b0f0da586d66d1b76b7799e881a0d3afb",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/9f36a81b0f0da586d66d1b76b7799e881a0d3afb",
      "created_at": "2024-08-29T17:27:23Z"
    },
    {
      "event": "renamed",
      "id": 14067234456,
      "node_id": "RTE_lADOABII586UoXQQzwAAAANGePaY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14067234456",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T17:28:38Z",
      "rename": {
        "from": "test: cover base32/base64 with random roundtrip padding tests",
        "to": "test: cover base32/base58/base64 with symmetric roundtrip fuzz (and some padding) tests"
      }
    },
    {
      "event": "renamed",
      "id": 14067293245,
      "node_id": "RTE_lADOABII586UoXQQzwAAAANGedw9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14067293245",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-29T17:32:53Z",
      "rename": {
        "from": "test: cover base32/base58/base64 with symmetric roundtrip fuzz (and some padding) tests",
        "to": "test: cover base32/base58/base64 with symmetric roundtrip fuzz (and padding) tests"
      }
    },
    {
      "event": "labeled",
      "id": 14073101535,
      "node_id": "LE_lADOABII586UoXQQzwAAAANG0nzf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14073101535",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-30T01:27:39Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14078718098,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAANHKDCS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14078718098",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "20ce1e1a8aa6afaa832a94be031b31748dd1c705",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/20ce1e1a8aa6afaa832a94be031b31748dd1c705",
      "created_at": "2024-08-30T10:06:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14079246614,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAANHMEEW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14079246614",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6283418e15b881fb5ab3099d21d04d891b53ec43",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6283418e15b881fb5ab3099d21d04d891b53ec43",
      "created_at": "2024-08-30T10:50:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14091953772,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAANH8iZs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14091953772",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3533e8b2b80acb89eb959d3f23d5172050f5aad4",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/3533e8b2b80acb89eb959d3f23d5172050f5aad4",
      "created_at": "2024-08-31T14:54:40Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14094745972,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAANIHMF0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14094745972",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2d05cdbd2e0ae4eac89be9eb2e2db8517a095da7",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/2d05cdbd2e0ae4eac89be9eb2e2db8517a095da7",
      "created_at": "2024-09-01T14:00:40Z"
    },
    {
      "event": "commented",
      "id": 2323415248,
      "node_id": "IC_kwDOABII586KfIDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2323415248",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-01T16:24:49Z",
      "updated_at": "2024-09-01T16:24:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "@maflcko, the Fuzz tests seem to be timing out now, is the new setup too heavy, should I maybe add them to different suites?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#issuecomment-2323415248",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30746"
    },
    {
      "event": "mentioned",
      "id": 14095096313,
      "node_id": "MEE_lADOABII586UoXQQzwAAAANIIhn5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14095096313",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-01T16:24:50Z"
    },
    {
      "event": "subscribed",
      "id": 14095096316,
      "node_id": "SE_lADOABII586UoXQQzwAAAANIIhn8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14095096316",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-01T16:24:50Z"
    },
    {
      "event": "commented",
      "id": 2323871915,
      "node_id": "IC_kwDOABII586Kg3ir",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2323871915",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T05:55:53Z",
      "updated_at": "2024-09-02T05:55:53Z",
      "author_association": "MEMBER",
      "body": "> @maflcko, the Fuzz tests seem to be timing out now, is the new setup too heavy, should I maybe add them to different suites?\r\n\r\nDid you run them locally, and can point out which commit makes them time out? Is there a flame graph, or some other kind of benchmark or performance debugging that would help tack this down?\r\n\r\nAbsent that, it seems odd that the fuzz tests would time out here.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#issuecomment-2323871915",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30746"
    },
    {
      "event": "mentioned",
      "id": 14097867042,
      "node_id": "MEE_lADOABII586UoXQQzwAAAANITGEi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14097867042",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T05:55:55Z"
    },
    {
      "event": "subscribed",
      "id": 14097867051,
      "node_id": "SE_lADOABII586UoXQQzwAAAANITGEr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14097867051",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T05:55:55Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14103563463,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAANIo0zH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14103563463",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2d9a94510c7470757598c4b64835df074f9ce86c",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/2d9a94510c7470757598c4b64835df074f9ce86c",
      "created_at": "2024-09-02T13:18:31Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14104468139,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAANIsRqr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14104468139",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "58fc3ce0a3c833356656a03b108a70fb97771011",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/58fc3ce0a3c833356656a03b108a70fb97771011",
      "created_at": "2024-09-02T14:28:11Z"
    },
    {
      "event": "commented",
      "id": 2324882761,
      "node_id": "IC_kwDOABII586KkuVJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2324882761",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T14:29:14Z",
      "updated_at": "2024-09-02T18:23:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "> it seems odd that the fuzz tests would time out here\r\n\r\nSplit the big fuzz target into separate base58_encode_decode / base58check_encode_decode / base32_encode_decode / base64_encode_decode / psbt_base64_decode - it's cleaner like this anyway.\r\n\r\nEdit: seems this fixed the timeout",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#issuecomment-2324882761",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30746"
    },
    {
      "event": "reviewed",
      "id": 2291987277,
      "node_id": "PRR_kwDOABII586InPNN",
      "url": null,
      "actor": null,
      "commit_id": "58fc3ce0a3c833356656a03b108a70fb97771011",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2291987277",
      "submitted_at": "2024-09-10T10:06:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "reviewed",
      "id": 2292448119,
      "node_id": "PRR_kwDOABII586Io_t3",
      "url": null,
      "actor": null,
      "commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "deep709",
        "id": 60227901,
        "node_id": "MDQ6VXNlcjYwMjI3OTAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/60227901?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/deep709",
        "html_url": "https://github.com/deep709",
        "followers_url": "https://api.github.com/users/deep709/followers",
        "following_url": "https://api.github.com/users/deep709/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/deep709/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/deep709/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/deep709/subscriptions",
        "organizations_url": "https://api.github.com/users/deep709/orgs",
        "repos_url": "https://api.github.com/users/deep709/repos",
        "events_url": "https://api.github.com/users/deep709/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/deep709/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2292448119",
      "submitted_at": "2024-09-10T13:09:16Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "unlabeled",
      "id": 14236157598,
      "node_id": "UNLE_lADOABII586UoXQQzwAAAANQioae",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14236157598",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-12T16:53:10Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2302833163,
      "node_id": "PRR_kwDOABII586JQnIL",
      "url": null,
      "actor": null,
      "commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "",
      "user": {
        "login": "Oaksta85",
        "id": 89581462,
        "node_id": "MDQ6VXNlcjg5NTgxNDYy",
        "avatar_url": "https://avatars.githubusercontent.com/u/89581462?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Oaksta85",
        "html_url": "https://github.com/Oaksta85",
        "followers_url": "https://api.github.com/users/Oaksta85/followers",
        "following_url": "https://api.github.com/users/Oaksta85/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Oaksta85/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Oaksta85/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Oaksta85/subscriptions",
        "organizations_url": "https://api.github.com/users/Oaksta85/orgs",
        "repos_url": "https://api.github.com/users/Oaksta85/repos",
        "events_url": "https://api.github.com/users/Oaksta85/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Oaksta85/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2302833163",
      "submitted_at": "2024-09-13T11:07:25Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "review_requested",
      "id": 14660415450,
      "node_id": "RRE_lADOABII586UoXQQzwAAAANp1C_a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14660415450",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-15T15:57:42Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2414420014,
      "node_id": "IC_kwDOABII586P6SAu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2414420014",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-15T15:58:08Z",
      "updated_at": "2024-10-15T15:58:08Z",
      "author_association": "MEMBER",
      "body": "cc @hodlinator ",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#issuecomment-2414420014",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30746"
    },
    {
      "event": "mentioned",
      "id": 14660421410,
      "node_id": "MEE_lADOABII586UoXQQzwAAAANp1Eci",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14660421410",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-15T15:58:09Z"
    },
    {
      "event": "subscribed",
      "id": 14660421430,
      "node_id": "SE_lADOABII586UoXQQzwAAAANp1Ec2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14660421430",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-15T15:58:09Z"
    },
    {
      "event": "labeled",
      "id": 14724634422,
      "node_id": "LE_lADOABII586UoXQQzwAAAANtqBc2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14724634422",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-18T17:22:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14848493943,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAAN1Cgl3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14848493943",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/ad917fb105b68fb369455ec7c42292a7673db1ad",
      "created_at": "2024-10-24T10:38:44Z"
    },
    {
      "event": "unlabeled",
      "id": 14851938309,
      "node_id": "UNLE_lADOABII586UoXQQzwAAAAN1PpgF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14851938309",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-10-24T13:45:42Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2397249971,
      "node_id": "PRR_kwDOABII586O4yGz",
      "url": null,
      "actor": null,
      "commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK ad917fb105b68fb369455ec7c42292a7673db1ad\r\n\r\n- Extra tests/coverage, does not modify files containing the functionality being tested.\r\n- Does remove `base58_random_encode_decode` unit test, but everything seems to be carried over to the modified fuzz test (except for testing for a variable count of insufficient result buffer sizes).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2397249971",
      "submitted_at": "2024-10-26T14:32:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14956943804,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAAN7gNm8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14956943804",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "created_at": "2024-10-28T11:47:18Z"
    },
    {
      "event": "reviewed",
      "id": 2400352264,
      "node_id": "PRR_kwDOABII586PEngI",
      "url": null,
      "actor": null,
      "commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2400352264",
      "submitted_at": "2024-10-28T22:20:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14983892348,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAAN9HA18",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14983892348",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6fd185c035c1cc4dd961cf14a2087e97fb069440",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6fd185c035c1cc4dd961cf14a2087e97fb069440",
      "created_at": "2024-10-29T12:56:56Z"
    },
    {
      "event": "reviewed",
      "id": 2407594484,
      "node_id": "PRR_kwDOABII586PgPn0",
      "url": null,
      "actor": null,
      "commit_id": "6fd185c035c1cc4dd961cf14a2087e97fb069440",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 6fd185c035c1cc4dd961cf14a2087e97fb069440\r\n\r\nrange-diff shows all notable changes since my [Concept ACK](https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2397249971) are in response to my suggestions.\r\n\r\nRan each new fuzz target with:\r\n```\r\n₿ FUZZ=<target name> build_fuzz/src/test/fuzz/fuzz -max_total_time=30 -jobs=8\r\n```\r\nAlso ran:\r\n```\r\n₿ ctest -j<X> --test-dir build --output-on-failure -R base\r\n```",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2407594484",
      "submitted_at": "2024-10-31T10:31:44Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "review_requested",
      "id": 15099385370,
      "node_id": "RRE_lADOABII586UoXQQzwAAAAOD_lYa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15099385370",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-04T07:51:08Z",
      "requested_reviewer": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 15099386197,
      "node_id": "RRE_lADOABII586UoXQQzwAAAAOD_llV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15099386197",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-04T07:51:13Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2415779821,
      "node_id": "PRR_kwDOABII586P_d_t",
      "url": null,
      "actor": null,
      "commit_id": "6fd185c035c1cc4dd961cf14a2087e97fb069440",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 6fd185c035c1cc4dd961cf14a2087e97fb069440\r\n\r\nNice improvements to the fuzz test. The separation into different targets for each encoding looks good to me. I guess in principle, each roundtrip should be separated as well. But seems fine as is for these simple targets.",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2415779821",
      "submitted_at": "2024-11-05T14:23:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "review_requested",
      "id": 15120813308,
      "node_id": "RRE_lADOABII586UoXQQzwAAAAOFRUz8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15120813308",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-05T14:23:18Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2416152348,
      "node_id": "PRR_kwDOABII586QA48c",
      "url": null,
      "actor": null,
      "commit_id": "6fd185c035c1cc4dd961cf14a2087e97fb069440",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK 6fd185c035c1cc4dd961cf14a2087e97fb069440\r\n\r\n(Hoping Drahtbot will react properly to this comment.. already ACKed the same PR version above).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2416152348",
      "submitted_at": "2024-11-05T16:34:59Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "reviewed",
      "id": 2423413243,
      "node_id": "PRR_kwDOABII586Qcln7",
      "url": null,
      "actor": null,
      "commit_id": "5ecef7b1521dec80b35bd531902076ca612084aa",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2423413243",
      "submitted_at": "2024-11-08T11:01:52Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15491318283,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAAObWsIL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15491318283",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "37e5fcfd4fad2f2daed041ddfd60b0c28e5da6b6",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/37e5fcfd4fad2f2daed041ddfd60b0c28e5da6b6",
      "created_at": "2024-12-02T11:11:29Z"
    },
    {
      "event": "review_requested",
      "id": 15498291407,
      "node_id": "RRE_lADOABII586UoXQQzwAAAAObxSjP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15498291407",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-02T19:21:58Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 15498292003,
      "node_id": "RRE_lADOABII586UoXQQzwAAAAObxSsj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15498292003",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-02T19:22:00Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 15498292949,
      "node_id": "RRE_lADOABII586UoXQQzwAAAAObxS7V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15498292949",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-02T19:22:04Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2475333971,
      "node_id": "PRR_kwDOABII586TiplT",
      "url": null,
      "actor": null,
      "commit_id": "37e5fcfd4fad2f2daed041ddfd60b0c28e5da6b6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2475333971",
      "submitted_at": "2024-12-03T13:45:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "review_requested",
      "id": 15511263811,
      "node_id": "RRE_lADOABII586UoXQQzwAAAAOcixpD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15511263811",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-03T14:57:46Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15540752671,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAAOeTREf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15540752671",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7ae68c6ac2d25a7373fc4f8fc5241dd9fec744ec",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/7ae68c6ac2d25a7373fc4f8fc5241dd9fec744ec",
      "created_at": "2024-12-05T09:15:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15540863235,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAAOeTsED",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15540863235",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "21c386bfe450f8a2863265dc3f99fc8b5690d47b",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/21c386bfe450f8a2863265dc3f99fc8b5690d47b",
      "created_at": "2024-12-05T09:24:01Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgzNmQ3MzNhNjc4OGM3ZjdlNjZkYTZmODAwN2ZiNjJmMTUxNjE0Mjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/836d733a6788c7f7e66da6f8007fb62f15161429",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/836d733a6788c7f7e66da6f8007fb62f15161429",
      "tree": {
        "sha": "2bf9a6748e212a8696221071a7f366dee2285114",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2bf9a6748e212a8696221071a7f366dee2285114"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8cc790fe2a223cfaa6dedfba88a6dc4f336f1d9",
          "sha": "e8cc790fe2a223cfaa6dedfba88a6dc4f336f1d9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e8cc790fe2a223cfaa6dedfba88a6dc4f336f1d9"
        }
      ],
      "message": "test: Add base32/base64 padding tests",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-05T09:27:06Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-04-10T11:20:50Z"
      },
      "sha": "836d733a6788c7f7e66da6f8007fb62f15161429"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM0NzgwYmE3MTg4OTc4MzM4ODg0MmFmODQ2NTFlYTU3NmQxZGRiYTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34780ba71889783388842af84651ea576d1ddba7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/34780ba71889783388842af84651ea576d1ddba7",
      "tree": {
        "sha": "7f1fcd26425f5445d96b3738899a811f5b54aac3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f1fcd26425f5445d96b3738899a811f5b54aac3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/836d733a6788c7f7e66da6f8007fb62f15161429",
          "sha": "836d733a6788c7f7e66da6f8007fb62f15161429",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/836d733a6788c7f7e66da6f8007fb62f15161429"
        }
      ],
      "message": "test: Extend the base58_encode_decode.json with edge cases\n\ne.g. on a transition of power of 58 to check the boundaries",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-05T09:27:06Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-08-29T17:23:16Z"
      },
      "sha": "34780ba71889783388842af84651ea576d1ddba7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNiNjZiN2UyMGRkYmE5NGQyNTFjOTc4MTg3MDBkNDYwMzBiMTRjYzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b66b7e20ddba94d251c97818700d46030b14cc5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3b66b7e20ddba94d251c97818700d46030b14cc5",
      "tree": {
        "sha": "ba5dc43869e3fbdd2e8b7aa8f8866342f1a30a88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba5dc43869e3fbdd2e8b7aa8f8866342f1a30a88"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34780ba71889783388842af84651ea576d1ddba7",
          "sha": "34780ba71889783388842af84651ea576d1ddba7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/34780ba71889783388842af84651ea576d1ddba7"
        }
      ],
      "message": "test: Fuzz Base32/Base58/Base64 roundtrips both ways\n\nA few other minor refactors were also done:\n* Spit out each base to separate fuzz target\n* Added symmetric encode-decode roundtrips all bases\n* Removed trim testing of encoded_string since base58 doesn't have whitespace padding\n* made the comparison stricter by removing unnecessary lowercase conversions for bases that have both cases in their alphabet\n\nCo-authored-by: Hodlinator <172445034+hodlinator@users.noreply.github.com>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-05T09:27:06Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-08-29T17:03:40Z"
      },
      "sha": "3b66b7e20ddba94d251c97818700d46030b14cc5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15540907777,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAAOeT28B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15540907777",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3b66b7e20ddba94d251c97818700d46030b14cc5",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/3b66b7e20ddba94d251c97818700d46030b14cc5",
      "created_at": "2024-12-05T09:27:17Z"
    },
    {
      "event": "commented",
      "id": 2519739672,
      "node_id": "IC_kwDOABII586WMC0Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2519739672",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T09:28:06Z",
      "updated_at": "2024-12-05T09:28:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks @maflcko & @hodlinator for the comments, I've [rebased](https://github.com/bitcoin/bitcoin/compare/37e5fcfd4fad2f2daed041ddfd60b0c28e5da6b6..7ae68c6ac2d25a7373fc4f8fc5241dd9fec744ec) the PR in the first push without any changes and [addresses your concerns](https://github.com/bitcoin/bitcoin/compare/7ae68c6ac2d25a7373fc4f8fc5241dd9fec744ec..3b66b7e20ddba94d251c97818700d46030b14cc5) in the second one - let me know if there's anything left:\r\n* Separated `\\0` tests from length validation tests\r\n* Suffixed strings with `\\0` with `\"sv`, kept the rest as normal strings\r\n* Brought back the `=\\0` case",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#issuecomment-2519739672",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30746"
    },
    {
      "event": "mentioned",
      "id": 15540919641,
      "node_id": "MEE_lADOABII586UoXQQzwAAAAOeT51Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15540919641",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T09:28:08Z"
    },
    {
      "event": "subscribed",
      "id": 15540919663,
      "node_id": "SE_lADOABII586UoXQQzwAAAAOeT51v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15540919663",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T09:28:08Z"
    },
    {
      "event": "mentioned",
      "id": 15540919681,
      "node_id": "MEE_lADOABII586UoXQQzwAAAAOeT52B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15540919681",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T09:28:08Z"
    },
    {
      "event": "subscribed",
      "id": 15540919697,
      "node_id": "SE_lADOABII586UoXQQzwAAAAOeT52R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15540919697",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T09:28:08Z"
    },
    {
      "event": "reviewed",
      "id": 2483233510,
      "node_id": "PRR_kwDOABII586UAyLm",
      "url": null,
      "actor": null,
      "commit_id": "3b66b7e20ddba94d251c97818700d46030b14cc5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK 3b66b7e20ddba94d251c97818700d46030b14cc5\r\n\r\n- Confirmed that changes since last review match https://github.com/bitcoin/bitcoin/pull/30746#issuecomment-2519739672. Thank you for incorporating our feedback.\r\n- Ran unit tests and each fuzz target for 5 seconds.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2483233510",
      "submitted_at": "2024-12-05T23:40:28Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "reviewed",
      "id": 2525417419,
      "node_id": "PRR_kwDOABII586Whs_L",
      "url": null,
      "actor": null,
      "commit_id": "a32002f2d5cff72639c9782d70ae52ec162d9ef8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK a32002f2d5cff72639c9782d70ae52ec162d9ef8\r\n\r\n- Only added commit that fuzzes the max length parameter of `DecodeBase58`&`DecodeBase58Check`.\r\n\r\nRe-ran the 2 modified fuzz-targets 30 seconds each.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2525417419",
      "submitted_at": "2024-12-30T10:24:25Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY5ODNkODJjODRkNGNhMzUxYTdjZDlkMWUwZTIwYWI4NzhkYTY0NzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "tree": {
        "sha": "7dccab2415288fd0cb9a99ce073db695b5b3a118",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7dccab2415288fd0cb9a99ce073db695b5b3a118"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b66b7e20ddba94d251c97818700d46030b14cc5",
          "sha": "3b66b7e20ddba94d251c97818700d46030b14cc5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3b66b7e20ddba94d251c97818700d46030b14cc5"
        }
      ],
      "message": "fuzz: fuzz max_ret_len for DecodeBase58/DecodeBase58Check\n\nDifferent values are used for `max_ret_len` throughout the codebase (e.g. 21, 34, 78) - and theoretically negative and 0 values are also permitted, let's stress those as well.\n\nCo-authored-by: brunoerg <brunoely.gc@gmail.com>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-30T11:49:05Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-12-27T21:16:25Z"
      },
      "sha": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15783917589,
      "node_id": "HRFPE_lADOABII586UoXQQzwAAAAOsy3gV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15783917589",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "created_at": "2024-12-30T11:51:23Z"
    },
    {
      "event": "reviewed",
      "id": 2525711019,
      "node_id": "PRR_kwDOABII586Wi0qr",
      "url": null,
      "actor": null,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK 6983d82c84d4ca351a7cd9d1e0e20ab878da6475\r\n\r\nResponding to my previous feedback + testing negative max return values.\r\n\r\nRetested modified targets.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2525711019",
      "submitted_at": "2024-12-30T15:26:19Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    },
    {
      "event": "reviewed",
      "id": 2530531104,
      "node_id": "PRR_kwDOABII586W1Ncg",
      "url": null,
      "actor": null,
      "commit_id": "3b66b7e20ddba94d251c97818700d46030b14cc5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#pullrequestreview-2530531104",
      "submitted_at": "2025-01-04T09:13:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1736402266",
      "pull_request_review_id": 2269067741,
      "id": 1736402266,
      "node_id": "PRRC_kwDOABII585nf2Va",
      "diff_hunk": "@@ -31,9 +32,45 @@ BOOST_AUTO_TEST_CASE(base32_testvectors)\n \n     // Decoding strings with embedded NUL characters should fail\n     BOOST_CHECK(!DecodeBase32(\"invalid\\0\"s)); // correct size, invalid due to \\0\n-    BOOST_CHECK(DecodeBase32(\"AWSX3VPP\"s)); // valid\n+    BOOST_CHECK( DecodeBase32(\"AWSX3VPP\"s)); // valid\n     BOOST_CHECK(!DecodeBase32(\"AWSX3VPP\\0invalid\"s)); // correct size, invalid due to \\0\n     BOOST_CHECK(!DecodeBase32(\"AWSX3VPPinvalid\"s)); // invalid size\n }\n \n+BOOST_AUTO_TEST_CASE(base32_padding)\n+{\n+    // Is valid without padding\n+    {\n+        const std::vector<uint8_t> in{'f', 'o', 'o', 'b', 'a'};\n+        const std::string out{\"mzxw6ytb\"};\n+        BOOST_CHECK_EQUAL(EncodeBase32(in), out);\n+    }\n+\n+    // Valid size\n+    BOOST_CHECK(!DecodeBase32(\"========\"s));\n+    BOOST_CHECK(!DecodeBase32(\"a=======\"s));\n+    BOOST_CHECK( DecodeBase32(\"aa======\"s));\n+    BOOST_CHECK(!DecodeBase32(\"aaa=====\"s));\n+    BOOST_CHECK( DecodeBase32(\"aaaa====\"s));\n+    BOOST_CHECK( DecodeBase32(\"aaaaa===\"s));\n+    BOOST_CHECK(!DecodeBase32(\"aaaaaa==\"s));\n+    BOOST_CHECK( DecodeBase32(\"aaaaaaa=\"s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(base32_roundtrip) {",
      "path": "src/test/base32_tests.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "caddc34c6cafe7df6a635d8660ed99d7b6b528f5",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Shouldn't this be a fuzzing test?",
      "created_at": "2024-08-29T14:54:05Z",
      "updated_at": "2024-08-29T14:54:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1736402266",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1736402266"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1736403323",
      "pull_request_review_id": 2269069447,
      "id": 1736403323,
      "node_id": "PRRC_kwDOABII585nf2l7",
      "diff_hunk": "@@ -37,10 +38,42 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n     }\n \n     // Decoding strings with embedded NUL characters should fail\n-    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s));\n-    BOOST_CHECK(DecodeBase64(\"nQB/pZw=\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s));\n+    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s)); // invalid size\n+}\n+\n+BOOST_AUTO_TEST_CASE(base64_padding)\n+{\n+    // Is valid without padding\n+    {\n+        const std::vector<uint8_t> in{'f', 'o', 'o', 'b', 'a', 'r'};\n+        const std::string out{\"Zm9vYmFy\"};\n+        BOOST_CHECK_EQUAL(EncodeBase64(in), out);\n+    }\n+\n+    // Valid size\n+    BOOST_CHECK(!DecodeBase64(\"====\"s));\n+    BOOST_CHECK(!DecodeBase64(\"a===\"s));\n+    BOOST_CHECK( DecodeBase64(\"YQ==\"s));\n+    BOOST_CHECK( DecodeBase64(\"YWE=\"s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(base64_roundtrip) {",
      "path": "src/test/base64_tests.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "caddc34c6cafe7df6a635d8660ed99d7b6b528f5",
      "in_reply_to_id": null,
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Here too, this is probably better implemented as a fuzzing test.",
      "created_at": "2024-08-29T14:54:31Z",
      "updated_at": "2024-08-29T14:54:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1736403323",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1736403323"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1736743895",
      "pull_request_review_id": 2269557606,
      "id": 1736743895,
      "node_id": "PRRC_kwDOABII585nhJvX",
      "diff_hunk": "@@ -31,9 +32,45 @@ BOOST_AUTO_TEST_CASE(base32_testvectors)\n \n     // Decoding strings with embedded NUL characters should fail\n     BOOST_CHECK(!DecodeBase32(\"invalid\\0\"s)); // correct size, invalid due to \\0\n-    BOOST_CHECK(DecodeBase32(\"AWSX3VPP\"s)); // valid\n+    BOOST_CHECK( DecodeBase32(\"AWSX3VPP\"s)); // valid\n     BOOST_CHECK(!DecodeBase32(\"AWSX3VPP\\0invalid\"s)); // correct size, invalid due to \\0\n     BOOST_CHECK(!DecodeBase32(\"AWSX3VPPinvalid\"s)); // invalid size\n }\n \n+BOOST_AUTO_TEST_CASE(base32_padding)\n+{\n+    // Is valid without padding\n+    {\n+        const std::vector<uint8_t> in{'f', 'o', 'o', 'b', 'a'};\n+        const std::string out{\"mzxw6ytb\"};\n+        BOOST_CHECK_EQUAL(EncodeBase32(in), out);\n+    }\n+\n+    // Valid size\n+    BOOST_CHECK(!DecodeBase32(\"========\"s));\n+    BOOST_CHECK(!DecodeBase32(\"a=======\"s));\n+    BOOST_CHECK( DecodeBase32(\"aa======\"s));\n+    BOOST_CHECK(!DecodeBase32(\"aaa=====\"s));\n+    BOOST_CHECK( DecodeBase32(\"aaaa====\"s));\n+    BOOST_CHECK( DecodeBase32(\"aaaaa===\"s));\n+    BOOST_CHECK(!DecodeBase32(\"aaaaaa==\"s));\n+    BOOST_CHECK( DecodeBase32(\"aaaaaaa=\"s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(base32_roundtrip) {",
      "path": "src/test/base32_tests.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "caddc34c6cafe7df6a635d8660ed99d7b6b528f5",
      "in_reply_to_id": 1736402266,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've modelled these based on https://github.com/bitcoin/bitcoin/blob/master/src/test/base58_tests.cpp#L84-L98 - but I guess the existing fuzz tests already cover this as well, so I'll migrate them all to https://github.com/bitcoin/bitcoin/blob/master/src/test/fuzz/base_encode_decode.cpp#L20-L54, thanks for the hint",
      "created_at": "2024-08-29T17:08:42Z",
      "updated_at": "2024-08-29T17:08:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1736743895",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1736743895"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1736744189",
      "pull_request_review_id": 2269558089,
      "id": 1736744189,
      "node_id": "PRRC_kwDOABII585nhJz9",
      "diff_hunk": "@@ -37,10 +38,42 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n     }\n \n     // Decoding strings with embedded NUL characters should fail\n-    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s));\n-    BOOST_CHECK(DecodeBase64(\"nQB/pZw=\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s));\n+    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s)); // invalid size\n+}\n+\n+BOOST_AUTO_TEST_CASE(base64_padding)\n+{\n+    // Is valid without padding\n+    {\n+        const std::vector<uint8_t> in{'f', 'o', 'o', 'b', 'a', 'r'};\n+        const std::string out{\"Zm9vYmFy\"};\n+        BOOST_CHECK_EQUAL(EncodeBase64(in), out);\n+    }\n+\n+    // Valid size\n+    BOOST_CHECK(!DecodeBase64(\"====\"s));\n+    BOOST_CHECK(!DecodeBase64(\"a===\"s));\n+    BOOST_CHECK( DecodeBase64(\"YQ==\"s));\n+    BOOST_CHECK( DecodeBase64(\"YWE=\"s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(base64_roundtrip) {",
      "path": "src/test/base64_tests.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "caddc34c6cafe7df6a635d8660ed99d7b6b528f5",
      "in_reply_to_id": 1736403323,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See: https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1736743895",
      "created_at": "2024-08-29T17:08:52Z",
      "updated_at": "2024-08-29T17:08:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1736744189",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1736744189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 63,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1736785063",
      "pull_request_review_id": 2269616319,
      "id": 1736785063,
      "node_id": "PRRC_kwDOABII585nhTyn",
      "diff_hunk": "@@ -31,9 +32,45 @@ BOOST_AUTO_TEST_CASE(base32_testvectors)\n \n     // Decoding strings with embedded NUL characters should fail\n     BOOST_CHECK(!DecodeBase32(\"invalid\\0\"s)); // correct size, invalid due to \\0\n-    BOOST_CHECK(DecodeBase32(\"AWSX3VPP\"s)); // valid\n+    BOOST_CHECK( DecodeBase32(\"AWSX3VPP\"s)); // valid\n     BOOST_CHECK(!DecodeBase32(\"AWSX3VPP\\0invalid\"s)); // correct size, invalid due to \\0\n     BOOST_CHECK(!DecodeBase32(\"AWSX3VPPinvalid\"s)); // invalid size\n }\n \n+BOOST_AUTO_TEST_CASE(base32_padding)\n+{\n+    // Is valid without padding\n+    {\n+        const std::vector<uint8_t> in{'f', 'o', 'o', 'b', 'a'};\n+        const std::string out{\"mzxw6ytb\"};\n+        BOOST_CHECK_EQUAL(EncodeBase32(in), out);\n+    }\n+\n+    // Valid size\n+    BOOST_CHECK(!DecodeBase32(\"========\"s));\n+    BOOST_CHECK(!DecodeBase32(\"a=======\"s));\n+    BOOST_CHECK( DecodeBase32(\"aa======\"s));\n+    BOOST_CHECK(!DecodeBase32(\"aaa=====\"s));\n+    BOOST_CHECK( DecodeBase32(\"aaaa====\"s));\n+    BOOST_CHECK( DecodeBase32(\"aaaaa===\"s));\n+    BOOST_CHECK(!DecodeBase32(\"aaaaaa==\"s));\n+    BOOST_CHECK( DecodeBase32(\"aaaaaaa=\"s));\n+}\n+\n+BOOST_AUTO_TEST_CASE(base32_roundtrip) {",
      "path": "src/test/base32_tests.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "caddc34c6cafe7df6a635d8660ed99d7b6b528f5",
      "in_reply_to_id": 1736402266,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2024-08-29T17:29:45Z",
      "updated_at": "2024-08-29T17:29:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1736785063",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1736785063"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 60,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1751663364",
      "pull_request_review_id": 2291987277,
      "id": 1751663364,
      "node_id": "PRRC_kwDOABII585oaEME",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base58check_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    if (DecodeBase58Check(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58Check(decoded);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    std::vector<unsigned char> decoded;\n+    if (DecodeBase58Check(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58Check(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58Check(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58Check(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58Check(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base32_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    auto result = DecodeBase32(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase32(*result);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase32(random_string)}) {\n+        auto encoded_string{EncodeBase32(*result)};\n+        assert(encoded_string == ToLower(TrimString(random_string)));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase32(random_data)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "58fc3ce0a3c833356656a03b108a70fb97771011",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Reusing the same data from the fuzz input for two different things (e.g. decode/encode and encode/decode) is usually not a good idea.\r\n\r\nHow about adding a decode step after the encoding above (i.e. decode -> encode -> decode)? Or alternatively split this second round-trip into its own harness as well?",
      "created_at": "2024-09-10T10:06:56Z",
      "updated_at": "2024-09-10T10:06:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1751663364",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1751663364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1751765403",
      "pull_request_review_id": 2292146681,
      "id": 1751765403,
      "node_id": "PRRC_kwDOABII585oadGb",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base58check_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    if (DecodeBase58Check(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58Check(decoded);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    std::vector<unsigned char> decoded;\n+    if (DecodeBase58Check(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58Check(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58Check(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58Check(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58Check(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base32_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    auto result = DecodeBase32(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase32(*result);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase32(random_string)}) {\n+        auto encoded_string{EncodeBase32(*result)};\n+        assert(encoded_string == ToLower(TrimString(random_string)));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase32(random_data)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "58fc3ce0a3c833356656a03b108a70fb97771011",
      "in_reply_to_id": 1751663364,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for the review!\r\n\r\n> is usually not a good idea\r\n\r\nCan you please expand on that? I don't mind splitting, as you've recommended, but I have to understand what the current drawbacks are.",
      "created_at": "2024-09-10T11:22:47Z",
      "updated_at": "2024-09-10T11:22:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1751765403",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1751765403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1751908222",
      "pull_request_review_id": 2292417867,
      "id": 1751908222,
      "node_id": "PRRC_kwDOABII585oa_9-",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base58check_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    if (DecodeBase58Check(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58Check(decoded);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    std::vector<unsigned char> decoded;\n+    if (DecodeBase58Check(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58Check(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58Check(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58Check(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58Check(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base32_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    auto result = DecodeBase32(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase32(*result);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase32(random_string)}) {\n+        auto encoded_string{EncodeBase32(*result)};\n+        assert(encoded_string == ToLower(TrimString(random_string)));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase32(random_data)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "58fc3ce0a3c833356656a03b108a70fb97771011",
      "in_reply_to_id": 1751663364,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It might be less obvious (and maybe not even a problem) for this simple harness but the decode/encode and encode/decode round-trips are different tests. Their input spaces are not the same, which means that reusing the same fuzz input for both leads to less efficient fuzzing (e.g. the corpus will include inputs that are only relevant to one of the tests but both will be executed).",
      "created_at": "2024-09-10T13:03:10Z",
      "updated_at": "2024-09-10T13:03:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1751908222",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1751908222"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1751986876",
      "pull_request_review_id": 2292550497,
      "id": 1751986876,
      "node_id": "PRRC_kwDOABII585obTK8",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base58check_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    if (DecodeBase58Check(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58Check(decoded);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    std::vector<unsigned char> decoded;\n+    if (DecodeBase58Check(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58Check(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58Check(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58Check(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58Check(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base32_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    auto result = DecodeBase32(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase32(*result);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase32(random_string)}) {\n+        auto encoded_string{EncodeBase32(*result)};\n+        assert(encoded_string == ToLower(TrimString(random_string)));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase32(random_data)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "58fc3ce0a3c833356656a03b108a70fb97771011",
      "in_reply_to_id": 1751663364,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "There is also an overhead that we probably don't want a separate fuzz target for every trivial function, because each fuzz target may be put into a separate binary and is allocated a separate folder. So in very trivial cases, I think it is fine to combine several trivial function calls into one fuzz target.\r\n\r\nEncode/Decode of a base seems to be trivial enough. I think the previous CI timeout may be unrelated https://github.com/bitcoin/bitcoin/pull/30746#issuecomment-2323871915 , because there are general CI issues right now. Generally, it is best to not rely on CI and separately double-check and confirm any result locally.\r\n\r\nIf you want to combine the test cases, but not want to always exclude both test branches, the `CallOneOf` helper can be used:\r\n\r\n\r\n```cpp\r\n        CallOneOf(\r\n            fuzzed_data_provider,\r\n            [&] {\r\n                Branch1(fuzzed_data_provider);\r\n            },\r\n            [&] {\r\n                Branch2(fuzzed_data_provider);\r\n        });\r\n",
      "created_at": "2024-09-10T13:35:02Z",
      "updated_at": "2024-09-10T13:35:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1751986876",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1751986876"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1752114277",
      "pull_request_review_id": 2292730609,
      "id": 1752114277,
      "node_id": "PRRC_kwDOABII585obyRl",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base58check_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    if (DecodeBase58Check(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58Check(decoded);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    std::vector<unsigned char> decoded;\n+    if (DecodeBase58Check(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58Check(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58Check(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58Check(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58Check(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base32_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    auto result = DecodeBase32(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase32(*result);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase32(random_string)}) {\n+        auto encoded_string{EncodeBase32(*result)};\n+        assert(encoded_string == ToLower(TrimString(random_string)));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase32(random_data)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "58fc3ce0a3c833356656a03b108a70fb97771011",
      "in_reply_to_id": 1751663364,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks @maflcko.\r\n@dergoegge, would a `CallOneOf` based solution satisfy your needs?",
      "created_at": "2024-09-10T14:35:17Z",
      "updated_at": "2024-09-10T14:35:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1752114277",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1752114277"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1758657903",
      "pull_request_review_id": 2302819875,
      "id": 1758657903,
      "node_id": "PRRC_kwDOABII585o0v1v",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base58check_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    if (DecodeBase58Check(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58Check(decoded);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    std::vector<unsigned char> decoded;\n+    if (DecodeBase58Check(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58Check(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58Check(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58Check(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58Check(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base32_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    auto result = DecodeBase32(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase32(*result);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase32(random_string)}) {\n+        auto encoded_string{EncodeBase32(*result)};\n+        assert(encoded_string == ToLower(TrimString(random_string)));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase32(random_data)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "58fc3ce0a3c833356656a03b108a70fb97771011",
      "in_reply_to_id": 1751663364,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> There is also an overhead that we probably don't want a separate fuzz target for every trivial function, because each fuzz target may be put into a separate binary and is allocated a separate folder.\r\n\r\nI don't think the binary sizes would be a problem after we merge something like https://github.com/bitcoin/bitcoin/pull/30882 and the extra folder for the corpus is also not a huge cost (they compress really nicely).\r\n\r\nI'd prefer to follow best practices over having to weigh triviality against some external overhead of running these tests. \"Put separate tests into separate harnesses\" is easier to follow than \"aggregate trivial functions in one harness\" because it is entirely subjective. What is trivial? How many unrelated trivial functions are allowed in one harness? I think this creates confusion for devs that aren't experts on fuzzing.\r\n\r\n> would a CallOneOf based solution satisfy your needs?\r\n\r\nI don't think this solves the issue, e.g. mutations that change the calloneof branch result in completely changing the meaning of the fuzz input (i.e. switching between the different tests).\r\n\r\nI don't mean to derail this PR, it's already improving things by splitting up `base_encode_decode`. Feel free to leave it as is.",
      "created_at": "2024-09-13T10:59:19Z",
      "updated_at": "2024-09-13T10:59:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1758657903",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1758657903"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1758707876",
      "pull_request_review_id": 2302887638,
      "id": 1758707876,
      "node_id": "PRRC_kwDOABII585o08Ck",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base58check_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    if (DecodeBase58Check(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58Check(decoded);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    std::vector<unsigned char> decoded;\n+    if (DecodeBase58Check(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58Check(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58Check(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58Check(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58Check(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base32_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    auto result = DecodeBase32(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase32(*result);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase32(random_string)}) {\n+        auto encoded_string{EncodeBase32(*result)};\n+        assert(encoded_string == ToLower(TrimString(random_string)));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase32(random_data)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "58fc3ce0a3c833356656a03b108a70fb97771011",
      "in_reply_to_id": 1751663364,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I don't think the binary sizes would be a problem after we merge something like #30882 and the extra folder for the corpus is also not a huge cost (they compress really nicely).\r\n\r\nAre you sure? IIUC 30882 creates a separate binary for each fuzz target, so depending on the compile/link options (static, without lto, ...), each fuzz target may or may not be heavy. For example, the OSS-Fuzzing already went down due to storage limitations (https://github.com/google/oss-fuzz/pull/12232). I am not saying that OSS-Fuzz should be considered a blocker, given that there are now several in-house backups, but I wanted to mention it for context.\r\n\r\n\r\n\r\n> I'd prefer to follow best practices over having to weigh triviality against some external overhead of running these tests. \"Put separate tests into separate harnesses\" is easier to follow than \"aggregate trivial functions in one harness\" because it is entirely subjective. What is trivial? How many unrelated trivial functions are allowed in one harness? I think this creates confusion for devs that aren't experts on fuzzing.\r\n\r\nI think I agree that it would be ideal to have an easy/trivial guideline to follow. However, I still think there is some threshold where a separate fuzz target (or maybe even a fuzz target at all) may not be the best choice. There are many pure util functions that (in theory) could go into a separate fuzz target. For example, `StringForFeeEstimateHorizon` https://github.com/bitcoin/bitcoin/blob/e43ce250c6fb65cc0c8903296c8ab228539d2204/src/test/fuzz/kitchen_sink.cpp#L45 should (in theory) be moved to a separate target. However, it is such a trivial function (a single switch-case) that linking the binary and starting it takes longer than reaching full coverage from an empty initial seed corpus. Maybe the function is too trivial to be put into a fuzz target at all, but I think there are plenty other pure util functions, such that there could easily be 500-1500 fuzz targets with similar properties. Of course there is nothing inherently wrong with having so many fuzz targets, but I could imagine that some tooling (introspector, coverage reports per fuzz target) or humans consuming the tool's output could be overwhelmed by the number of trivial fuzz targets and miss the actually important ones.\r\n\r\n",
      "created_at": "2024-09-13T11:38:20Z",
      "updated_at": "2024-09-13T11:38:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1758707876",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1758707876"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1758717219",
      "pull_request_review_id": 2302901208,
      "id": 1758717219,
      "node_id": "PRRC_kwDOABII585o0-Uj",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base58check_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    if (DecodeBase58Check(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58Check(decoded);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    std::vector<unsigned char> decoded;\n+    if (DecodeBase58Check(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58Check(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58Check(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58Check(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58Check(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base32_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    auto result = DecodeBase32(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase32(*result);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase32(random_string)}) {\n+        auto encoded_string{EncodeBase32(*result)};\n+        assert(encoded_string == ToLower(TrimString(random_string)));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase32(random_data)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "58fc3ce0a3c833356656a03b108a70fb97771011",
      "in_reply_to_id": 1751663364,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for the directions @dergoegge, @maflcko.\r\n\r\n> I don't mean to derail this PR, it's already improving things by splitting up base_encode_decode. Feel free to leave it as is.\r\n\r\nI'm all for separation of concerns, that's what I've done here as well.\r\nIf there's a simple and non-controvertial way to make it even better, let me know!",
      "created_at": "2024-09-13T11:45:58Z",
      "updated_at": "2024-09-13T11:45:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1758717219",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1758717219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817848501",
      "pull_request_review_id": 2397249971,
      "id": 1817848501,
      "node_id": "PRRC_kwDOABII585sWiq1",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should keep using `TrimStringView` here to avoid allocating extra `std::string` instances. Fuzzing code is re-run at high frequency so optimization (without compromising code coverage) is important.\r\n```suggestion\r\n        assert(encoded_string == TrimStringView(random_string));\r\n```",
      "created_at": "2024-10-26T13:05:53Z",
      "updated_at": "2024-10-26T14:32:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1817848501",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817848501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817849205",
      "pull_request_review_id": 2397249971,
      "id": 1817849205,
      "node_id": "PRRC_kwDOABII585sWi11",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I understand the change to use `random_string` as something that might either be encoded already, or as something to be encoded in the later half of these functions, so the rename makes sense. Would avoid stripping `const` for these slightly longer lived variables, just for peace of mind.\r\n```suggestion\r\n    const std::string random_string{buffer.begin(), buffer.end()};\r\n    const std::vector<unsigned char> random_data{ToByteVector(random_string)};\r\n```\r\n---\r\nAnother aspect is that `buffer` has the type `using FuzzBufferType = std::span<const uint8_t>` already, so it could potentially be used directly instead of introducing and allocating `random_data`. (Not super happy about the `memcmp` though).\r\n\r\n```diff\r\n FUZZ_TARGET(base58_encode_decode)\r\n {\r\n-    std::string random_string(buffer.begin(), buffer.end());\r\n-    std::vector<unsigned char> random_data{ToByteVector(random_string)};\r\n+    const std::string random_string{buffer.begin(), buffer.end()};\r\n \r\n     // Decode/Encode roundtrip\r\n     std::vector<unsigned char> decoded;\r\n@@ -27,11 +28,12 @@ FUZZ_TARGET(base58_encode_decode)\r\n         assert(encoded_string == TrimString(random_string));\r\n         assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));\r\n     }\r\n\r\n     // Encode/Decode roundtrip\r\n-    auto encoded{EncodeBase58(random_data)};\r\n+    auto encoded{EncodeBase58(buffer)};\r\n     std::vector<unsigned char> roundtrip_decoded;\r\n     assert(DecodeBase58(encoded, roundtrip_decoded, random_string.size())\r\n-        && roundtrip_decoded == random_data);\r\n+        && !std::memcmp(roundtrip_decoded.data(), buffer.data(), buffer.size()));\r\n }\r\n```",
      "created_at": "2024-10-26T13:09:41Z",
      "updated_at": "2024-10-26T14:32:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1817849205",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817849205"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 20,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817851827",
      "pull_request_review_id": 2397249971,
      "id": 1817851827,
      "node_id": "PRRC_kwDOABII585sWjez",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base58check_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    if (DecodeBase58Check(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58Check(decoded);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    std::vector<unsigned char> decoded;\n+    if (DecodeBase58Check(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58Check(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58Check(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58Check(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58Check(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base32_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    auto result = DecodeBase32(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase32(*result);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase32(random_string)}) {\n+        auto encoded_string{EncodeBase32(*result)};\n+        assert(encoded_string == ToLower(TrimString(random_string)));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase32(random_data)};\n+    auto decoded{DecodeBase32(encoded)};\n+    assert(decoded && random_data == *decoded);\n+}\n+\n+FUZZ_TARGET(base64_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    result = DecodeBase64(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase64(*result);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase64(random_string)}) {\n+        auto encoded_string{EncodeBase64(*result)};\n+        assert(encoded_string == TrimString(random_string));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase64(random_data)};\n+    auto decoded{DecodeBase64(encoded)};\n+    assert(decoded && random_data == *decoded);\n+}\n+\n+FUZZ_TARGET(psbt_base64_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n \n     PartiallySignedTransaction psbt;\n     std::string error;\n-    (void)DecodeBase64PSBT(psbt, random_encoded_string, error);\n+    (void) DecodeBase64PSBT(psbt, random_string, error);",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 108,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why add the space?\r\n\r\nCould also verify error is returned correctly.\r\n```suggestion\r\n    assert(DecodeBase64PSBT(psbt, random_string, error) == error.empty());\r\n```",
      "created_at": "2024-10-26T13:27:54Z",
      "updated_at": "2024-10-26T14:32:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1817851827",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817851827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817854496",
      "pull_request_review_id": 2397249971,
      "id": 1817854496,
      "node_id": "PRRC_kwDOABII585sWkIg",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": 30,
      "original_position": 23,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good that you removed the normalizing of the case for Base58 roundtripping as case is significant there (unlike how we treat base32). :+1: ",
      "created_at": "2024-10-26T13:45:34Z",
      "updated_at": "2024-10-26T14:32:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1817854496",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817854496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817857203",
      "pull_request_review_id": 2397249971,
      "id": 1817857203,
      "node_id": "PRRC_kwDOABII585sWkyz",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base58check_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    if (DecodeBase58Check(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58Check(decoded);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    std::vector<unsigned char> decoded;\n+    if (DecodeBase58Check(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58Check(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58Check(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58Check(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58Check(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base32_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    auto result = DecodeBase32(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase32(*result);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase32(random_string)}) {\n+        auto encoded_string{EncodeBase32(*result)};\n+        assert(encoded_string == ToLower(TrimString(random_string)));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase32(random_data)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "58fc3ce0a3c833356656a03b108a70fb97771011",
      "in_reply_to_id": 1751663364,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(My instinct would be to go with the following to avoid rocking the boat when it comes to seed corpus naming etc, but I'm too new to this aspect of fuzzing to carry much weight).\r\n```C++\r\nvoid base58_encode_decode(FuzzBufferType buffer);\r\nvoid base58check_encode_decode(FuzzBufferType buffer);\r\nvoid base32_encode_decode(FuzzBufferType buffer);\r\nvoid base64_encode_decode(FuzzBufferType buffer);\r\nvoid psbt_base64_decode(FuzzBufferType buffer);\r\n\r\nFUZZ_TARGET(base_encode_decode)\r\n{\r\n    base58_encode_decode(buffer);\r\n    base58check_encode_decode(buffer);\r\n    base32_encode_decode(buffer);\r\n    base64_encode_decode(buffer);\r\n    psbt_base64_decode(buffer);\r\n}\r\n```",
      "created_at": "2024-10-26T14:02:38Z",
      "updated_at": "2024-10-26T14:33:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1817857203",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817857203"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817861317",
      "pull_request_review_id": 2397249971,
      "id": 1817861317,
      "node_id": "PRRC_kwDOABII585sWlzF",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could test slightly more aggressively in line with the removed test:\r\nhttps://github.com/bitcoin/bitcoin/blob/a5b4e42a575b4680a9eedb6ab2275d2a723cc20d/src/test/base58_tests.cpp#L93-L94\r\n\r\n```suggestion\r\n        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, fuzzed_data_provider.ConsumeIntegralInRange(0, decoded.size() - 1)));\r\n```",
      "created_at": "2024-10-26T14:29:33Z",
      "updated_at": "2024-10-26T14:32:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1817861317",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1817861317"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818920353",
      "pull_request_review_id": 2398842176,
      "id": 1818920353,
      "node_id": "PRRC_kwDOABII585saoWh",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "in_reply_to_id": 1817849205,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Would avoid stripping const for these slightly longer lived variables, just for peace of mind.\r\n\r\nDone, thanks.\r\n\r\n> Not super happy about the memcmp though\r\n\r\nagree, `memcmp` is ugly, but [`std::ranges::equal`](https://github.com/bitcoin/bitcoin/compare/ad917fb105b68fb369455ec7c42292a7673db1ad..5bc0a8daab37a826a59ed83eb59aef4081f1fe19) should work here.",
      "created_at": "2024-10-28T11:47:17Z",
      "updated_at": "2024-10-28T11:51:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1818920353",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818920353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 20,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818920957",
      "pull_request_review_id": 2398842990,
      "id": 1818920957,
      "node_id": "PRRC_kwDOABII585saof9",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base58check_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    if (DecodeBase58Check(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58Check(decoded);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    std::vector<unsigned char> decoded;\n+    if (DecodeBase58Check(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58Check(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58Check(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58Check(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58Check(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base32_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    auto result = DecodeBase32(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase32(*result);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase32(random_string)}) {\n+        auto encoded_string{EncodeBase32(*result)};\n+        assert(encoded_string == ToLower(TrimString(random_string)));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase32(random_data)};\n+    auto decoded{DecodeBase32(encoded)};\n+    assert(decoded && random_data == *decoded);\n+}\n+\n+FUZZ_TARGET(base64_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    result = DecodeBase64(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase64(*result);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase64(random_string)}) {\n+        auto encoded_string{EncodeBase64(*result)};\n+        assert(encoded_string == TrimString(random_string));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase64(random_data)};\n+    auto decoded{DecodeBase64(encoded)};\n+    assert(decoded && random_data == *decoded);\n+}\n+\n+FUZZ_TARGET(psbt_base64_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n \n     PartiallySignedTransaction psbt;\n     std::string error;\n-    (void)DecodeBase64PSBT(psbt, random_encoded_string, error);\n+    (void) DecodeBase64PSBT(psbt, random_string, error);",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 108,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "in_reply_to_id": 1817851827,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[Perfection](https://github.com/bitcoin/bitcoin/compare/ad917fb105b68fb369455ec7c42292a7673db1ad..5bc0a8daab37a826a59ed83eb59aef4081f1fe19)! ✨👌✨",
      "created_at": "2024-10-28T11:47:44Z",
      "updated_at": "2024-10-28T11:50:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1818920957",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818920957"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 94,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818921051",
      "pull_request_review_id": 2398843149,
      "id": 1818921051,
      "node_id": "PRRC_kwDOABII585saohb",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": 30,
      "original_position": 23,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "in_reply_to_id": 1817854496,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "astute observation ;)",
      "created_at": "2024-10-28T11:47:49Z",
      "updated_at": "2024-10-28T11:47:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1818921051",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818921051"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 28,
      "original_line": 28,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818921173",
      "pull_request_review_id": 2398843361,
      "id": 1818921173,
      "node_id": "PRRC_kwDOABII585saojV",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "in_reply_to_id": 1817861317,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good idea, this will simplify the string generation as well since it requires a `FuzzedDataProvider` anyway",
      "created_at": "2024-10-28T11:47:55Z",
      "updated_at": "2024-10-28T11:47:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1818921173",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818921173"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818921361",
      "pull_request_review_id": 2398843634,
      "id": 1818921361,
      "node_id": "PRRC_kwDOABII585saomR",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "ad917fb105b68fb369455ec7c42292a7673db1ad",
      "in_reply_to_id": 1817848501,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, thanks",
      "created_at": "2024-10-28T11:48:03Z",
      "updated_at": "2024-10-28T11:48:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1818921361",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818921361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 27,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818923703",
      "pull_request_review_id": 2398847318,
      "id": 1818923703,
      "node_id": "PRRC_kwDOABII585sapK3",
      "diff_hunk": "@@ -10,45 +10,86 @@\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n \n using util::TrimString;\n-using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n+    // Decode/Encode roundtrip\n     std::vector<unsigned char> decoded;\n-    if (DecodeBase58(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58(decoded);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    if (DecodeBase58(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base58check_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    if (DecodeBase58Check(random_encoded_string, decoded, 100)) {\n-        const std::string encoded_string = EncodeBase58Check(decoded);\n-        assert(encoded_string == TrimString(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    std::vector<unsigned char> decoded;\n+    if (DecodeBase58Check(random_string, decoded, 100)) {\n+        auto encoded_string{EncodeBase58Check(decoded)};\n+        assert(encoded_string == TrimString(random_string));\n+        assert(encoded_string.empty() || !DecodeBase58Check(encoded_string, decoded, decoded.size() - 1));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase58Check(random_data)};\n+    std::vector<unsigned char> roundtrip_decoded;\n+    assert(DecodeBase58Check(encoded, roundtrip_decoded, random_string.size())\n+        && roundtrip_decoded == random_data);\n+}\n+\n+FUZZ_TARGET(base32_encode_decode)\n+{\n+    std::string random_string(buffer.begin(), buffer.end());\n+    std::vector<unsigned char> random_data{ToByteVector(random_string)};\n \n-    auto result = DecodeBase32(random_encoded_string);\n-    if (result) {\n-        const std::string encoded_string = EncodeBase32(*result);\n-        assert(encoded_string == TrimStringView(encoded_string));\n-        assert(ToLower(encoded_string) == ToLower(TrimString(random_encoded_string)));\n+    // Decode/Encode roundtrip\n+    if (auto result{DecodeBase32(random_string)}) {\n+        auto encoded_string{EncodeBase32(*result)};\n+        assert(encoded_string == ToLower(TrimString(random_string)));\n     }\n+    // Encode/Decode roundtrip\n+    auto encoded{EncodeBase32(random_data)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 75,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "58fc3ce0a3c833356656a03b108a70fb97771011",
      "in_reply_to_id": 1751663364,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is this a blocker for anyone? If anyone has strong feelings about this, please let me know, we can either restructure here or provide it in another PR. Resolving for now.",
      "created_at": "2024-10-28T11:49:56Z",
      "updated_at": "2024-10-28T11:49:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1818923703",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1818923703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819836232",
      "pull_request_review_id": 2400352264,
      "id": 1819836232,
      "node_id": "PRRC_kwDOABII585seH9I",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm afraid `FuzzedDataProvider::remaining_bytes_` becomes zero after this line in the current version, meaning `provider.ConsumeIntegralInRange<int>(0, decoded.size() - 1)` below will always return the minimum value if I'm reading the `ConsumeIntegralInRange`-implementation correctly.\r\n\r\n```suggestion\r\n    const std::string random_string{provider.ConsumeRandomLengthString(101)};\r\n```\r\n---\r\n\r\nCould maybe (in another PR) add something like `bool FuzzedDataProvider::consume_remaining_called_{false}` which is set by `ConsumeRemainingBytes*()` and then assert against it in the various consume methods, to catch cases like these.",
      "created_at": "2024-10-28T22:09:51Z",
      "updated_at": "2024-10-28T22:20:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1819836232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1819836232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1820218726",
      "pull_request_review_id": 2400934372,
      "id": 1820218726,
      "node_id": "PRRC_kwDOABII585sflVm",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Could maybe (in another PR)\r\n\r\nIn theory it could also be caught at compile time with https://clang.llvm.org/docs/AttributeReference.html#consumed-annotation-checking",
      "created_at": "2024-10-29T07:18:09Z",
      "updated_at": "2024-10-29T07:18:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1820218726",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1820218726"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1820658956",
      "pull_request_review_id": 2401633852,
      "id": 1820658956,
      "node_id": "PRRC_kwDOABII585shQ0M",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "However, as the file is taken from upstream, I wonder how much it should be modified at all.",
      "created_at": "2024-10-29T11:58:42Z",
      "updated_at": "2024-10-29T11:58:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1820658956",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1820658956"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1820669760",
      "pull_request_review_id": 2401653839,
      "id": 1820669760,
      "node_id": "PRRC_kwDOABII585shTdA",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "hmmm, I'll check it out, I wasn't aware that's how this works (fuzzing is currently completely broken for me locally), but this sounds like a huge blind-spot for fuzzing - like you said, we should investigate, false confidence in this area is dangerous.",
      "created_at": "2024-10-29T12:06:31Z",
      "updated_at": "2024-10-29T12:06:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1820669760",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1820669760"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1820941193",
      "pull_request_review_id": 2402132722,
      "id": 1820941193,
      "node_id": "PRRC_kwDOABII585siVuJ",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "[Done](https://github.com/bitcoin/bitcoin/compare/5bc0a8daab37a826a59ed83eb59aef4081f1fe19..6fd185c035c1cc4dd961cf14a2087e97fb069440), thanks",
      "created_at": "2024-10-29T14:41:01Z",
      "updated_at": "2024-10-29T14:41:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1820941193",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1820941193"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824164226",
      "pull_request_review_id": 2407492927,
      "id": 1824164226,
      "node_id": "PRRC_kwDOABII585suomC",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@dergoegge any thoughts on my suggestion of altering `FuzzedDataProvider` to trigger asserts when calls like `ConsumeIntegralInRange<int>(0, decoded.size() - 1)` are made after calls to `ConsumeRemainingBytes*()`? Maybe such an improvement could be upstreamed even (possibly with a flag to turn it off for sloppy tests).",
      "created_at": "2024-10-31T09:45:41Z",
      "updated_at": "2024-10-31T09:45:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1824164226",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824164226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824176187",
      "pull_request_review_id": 2407512657,
      "id": 1824176187,
      "node_id": "PRRC_kwDOABII585surg7",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'd say it would be easier to sell to upstream if it was checked at compile-time at no runtime cost/overhead. Is there a benefit of doing it at runtime?",
      "created_at": "2024-10-31T09:53:56Z",
      "updated_at": "2024-10-31T09:53:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1824176187",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824176187"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824185306",
      "pull_request_review_id": 2407526561,
      "id": 1824185306,
      "node_id": "PRRC_kwDOABII585sutva",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It might add extra friction to agree on preprocessor logic to make the code still compile on other compilers. Also, doing it at compile-time means it's an all/nothing thing that can't be turned off for individual sloppy tests. But I agree it would be great to see if upstream would take a compile-time version first.",
      "created_at": "2024-10-31T09:59:42Z",
      "updated_at": "2024-10-31T09:59:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1824185306",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824185306"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824197377",
      "pull_request_review_id": 2407545888,
      "id": 1824197377,
      "node_id": "PRRC_kwDOABII585suwsB",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> agree on preprocessor logic\r\n\r\nMaybe I am missing something, but it should be pretty standard, similar to\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/f07a533dfcb172321972e5afb3b38a4bd24edb87/src/span.h#L22-L30\r\n\r\n?",
      "created_at": "2024-10-31T10:05:15Z",
      "updated_at": "2024-10-31T10:05:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1824197377",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824197377"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824202809",
      "pull_request_review_id": 2407554179,
      "id": 1824202809,
      "node_id": "PRRC_kwDOABII585suyA5",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, hopefully shouldn't be much of an obstacle, maybe I'm too pessimistic about that aspect.",
      "created_at": "2024-10-31T10:09:39Z",
      "updated_at": "2024-10-31T10:09:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1824202809",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824202809"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824305883",
      "pull_request_review_id": 2407707678,
      "id": 1824305883,
      "node_id": "PRRC_kwDOABII585svLLb",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is there anything else for me to do here?",
      "created_at": "2024-10-31T11:37:43Z",
      "updated_at": "2024-10-31T11:37:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1824305883",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824305883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824361387",
      "pull_request_review_id": 2407794058,
      "id": 1824361387,
      "node_id": "PRRC_kwDOABII585svYur",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nothing more to do as far as this PR goes. Still interested to hear from folks more focused on fuzzing.",
      "created_at": "2024-10-31T12:25:28Z",
      "updated_at": "2024-10-31T12:25:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1824361387",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1824361387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825957996",
      "pull_request_review_id": 2410302120,
      "id": 1825957996,
      "node_id": "PRRC_kwDOABII585s1ehs",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Re https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1824164226: I think I agree with marco that a compile time check would be nicer and we should ideally upstream it so that our `FuzzedDataProvider` impl stays in sync.",
      "created_at": "2024-11-01T15:29:00Z",
      "updated_at": "2024-11-01T15:29:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1825957996",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1825957996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834151211",
      "pull_request_review_id": 2423413243,
      "id": 1834151211,
      "node_id": "PRRC_kwDOABII585tUu0r",
      "diff_hunk": "@@ -37,10 +37,22 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n     }\n \n     // Decoding strings with embedded NUL characters should fail\n-    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s));\n-    BOOST_CHECK(DecodeBase64(\"nQB/pZw=\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s));\n+    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s)); // invalid size",
      "path": "src/test/base64_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5ecef7b1521dec80b35bd531902076ca612084aa",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think this is correct. The size is identical for both, so how can it be invalid for one, but not the other? They are invalid due to the embedded `=` and `\\0`.",
      "created_at": "2024-11-08T11:01:52Z",
      "updated_at": "2024-11-08T11:01:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1834151211",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834151211"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863681310",
      "pull_request_review_id": 2470162576,
      "id": 1863681310,
      "node_id": "PRRC_kwDOABII585vFYUe",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I tried to implement this, but (compile-time) annotations are either useless, because they are not applied globally, or they are too verbose for this, because they need to be applied globally/virally.\r\n\r\nI think doing the check at runtime with a bool is probably good enough. Though that requires modifying the header file in some way or another.\r\n\r\nAn alternative could be to forbid the direct use of the depleting member functions (with a linter) and add a new helper which eats a `FuzzedDataProvider&&` and returns the bytes in it. This way, the existing use-after-move checks can be used.",
      "created_at": "2024-11-29T15:22:58Z",
      "updated_at": "2024-11-29T15:22:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1863681310",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863681310"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863916545",
      "pull_request_review_id": 2470485030,
      "id": 1863916545,
      "node_id": "PRRC_kwDOABII585vGRwB",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Great that you made time to look into this!\r\n\r\n> An alternative could be to forbid the direct use of the depleting member functions (with a linter) and add a new helper which eats a `FuzzedDataProvider&&` and returns the bytes in it. This way, the existing use-after-move checks can be used.\r\n\r\nSo you mean disallowing direct calls to `ConsumeRemainingBytes*`-family of methods only, and provide a helper that does only that part instead after swallowing up `FuzzedDataProvider&&` so it should no longer be used. Sounds like it's worth a try to me!\r\n\r\n",
      "created_at": "2024-11-29T20:28:27Z",
      "updated_at": "2024-11-29T20:28:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1863916545",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1863916545"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1865513573",
      "pull_request_review_id": 2472177268,
      "id": 1865513573,
      "node_id": "PRRC_kwDOABII585vMXpl",
      "diff_hunk": "@@ -6,49 +6,90 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRemainingBytesAsString()};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5bc0a8daab37a826a59ed83eb59aef4081f1fe19",
      "in_reply_to_id": 1819836232,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, and disallowing could be approximated with a single call to `git grep` in the linter, similar to https://github.com/bitcoin/bitcoin/blob/dbc8ba12f3b3548dd6955293c5d650320ca39c5b/test/lint/test_runner/src/main.rs#L270",
      "created_at": "2024-12-02T09:29:56Z",
      "updated_at": "2024-12-02T09:29:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1865513573",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1865513573"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1865666794",
      "pull_request_review_id": 2472413294,
      "id": 1865666794,
      "node_id": "PRRC_kwDOABII585vM9Dq",
      "diff_hunk": "@@ -37,10 +37,22 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n     }\n \n     // Decoding strings with embedded NUL characters should fail\n-    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s));\n-    BOOST_CHECK(DecodeBase64(\"nQB/pZw=\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s));\n+    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s)); // invalid size",
      "path": "src/test/base64_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5ecef7b1521dec80b35bd531902076ca612084aa",
      "in_reply_to_id": 1834151211,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I forgot about this comment, thanks for checking, both tests on 42 and 43 were invalid because of the non-trailing `=`, not the `\\0` - [updated them](https://github.com/bitcoin/bitcoin/compare/6fd185c035c1cc4dd961cf14a2087e97fb069440..37e5fcfd4fad2f2daed041ddfd60b0c28e5da6b6)",
      "created_at": "2024-12-02T11:12:33Z",
      "updated_at": "2024-12-02T11:12:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1865666794",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1865666794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867517086",
      "pull_request_review_id": 2475333971,
      "id": 1867517086,
      "node_id": "PRRC_kwDOABII585vUAye",
      "diff_hunk": "@@ -31,9 +31,25 @@ BOOST_AUTO_TEST_CASE(base32_testvectors)\n \n     // Decoding strings with embedded NUL characters should fail\n     BOOST_CHECK(!DecodeBase32(\"invalid\\0\"s)); // correct size, invalid due to \\0\n-    BOOST_CHECK(DecodeBase32(\"AWSX3VPP\"s)); // valid\n+    BOOST_CHECK( DecodeBase32(\"AWSX3VPP\"s)); // valid\n     BOOST_CHECK(!DecodeBase32(\"AWSX3VPP\\0invalid\"s)); // correct size, invalid due to \\0\n     BOOST_CHECK(!DecodeBase32(\"AWSX3VPPinvalid\"s)); // invalid size\n }\n \n+BOOST_AUTO_TEST_CASE(base32_padding)\n+{\n+    // Is valid without padding\n+    BOOST_CHECK_EQUAL(EncodeBase32(\"fooba\"), \"mzxw6ytb\");\n+\n+    // Valid size\n+    BOOST_CHECK(!DecodeBase32(\"========\"s));",
      "path": "src/test/base32_tests.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "37e5fcfd4fad2f2daed041ddfd60b0c28e5da6b6",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could use `\"\"sv` or simply `\"\"` to avoid string allocations here and in `base64_padding`.\r\n```suggestion\r\n    BOOST_CHECK(!DecodeBase32(\"========\"));\r\n```",
      "created_at": "2024-12-03T11:07:26Z",
      "updated_at": "2024-12-03T13:45:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1867517086",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867517086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867734893",
      "pull_request_review_id": 2475333971,
      "id": 1867734893,
      "node_id": "PRRC_kwDOABII585vU19t",
      "diff_hunk": "@@ -37,10 +37,21 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n     }\n \n     // Decoding strings with embedded NUL characters should fail\n-    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s));\n-    BOOST_CHECK(DecodeBase64(\"nQB/pZw=\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s));\n+    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\"s)); // invalid, padding only allowed at the end",
      "path": "src/test/base64_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "37e5fcfd4fad2f2daed041ddfd60b0c28e5da6b6",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Last line no longer has an embedded NUL character as specified in the comment above this code block (`// Decoding strings with embedded NUL characters should fail`). Might belong more in `base64_padding` or at least in its own newline-separated block here:\r\n```suggestion\r\n    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\r\n    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\r\n\r\n    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\"s)); // invalid, padding only allowed at the end\r\n```",
      "created_at": "2024-12-03T13:36:29Z",
      "updated_at": "2024-12-03T13:45:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1867734893",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867734893"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 40,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867745966",
      "pull_request_review_id": 2475333971,
      "id": 1867745966,
      "node_id": "PRRC_kwDOABII585vU4qu",
      "diff_hunk": "@@ -37,10 +37,22 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n     }\n \n     // Decoding strings with embedded NUL characters should fail\n-    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s));\n-    BOOST_CHECK(DecodeBase64(\"nQB/pZw=\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s));\n+    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s)); // invalid size",
      "path": "src/test/base64_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5ecef7b1521dec80b35bd531902076ca612084aa",
      "in_reply_to_id": 1834151211,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "They are invalid, but still worth testing regardless of why precisely the current implementation errors out?\r\n\r\n```C++\r\nBOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"); // padding and NUL followed by invalid data\r\nBOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"); // padding followed by invalid data and NUL\r\n```",
      "created_at": "2024-12-03T13:43:51Z",
      "updated_at": "2024-12-03T13:45:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1867745966",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867745966"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867881135",
      "pull_request_review_id": 2475941538,
      "id": 1867881135,
      "node_id": "PRRC_kwDOABII585vVZqv",
      "diff_hunk": "@@ -37,10 +37,22 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n     }\n \n     // Decoding strings with embedded NUL characters should fail\n-    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s));\n-    BOOST_CHECK(DecodeBase64(\"nQB/pZw=\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s));\n+    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s)); // invalid size",
      "path": "src/test/base64_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5ecef7b1521dec80b35bd531902076ca612084aa",
      "in_reply_to_id": 1834151211,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What's the advantage of the comment stating exactly what the code already states?\r\nWe're already testing `\\0` and non-trailing `=`, what else do these ones add?",
      "created_at": "2024-12-03T14:54:11Z",
      "updated_at": "2024-12-03T14:54:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1867881135",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867881135"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867882293",
      "pull_request_review_id": 2475943432,
      "id": 1867882293,
      "node_id": "PRRC_kwDOABII585vVZ81",
      "diff_hunk": "@@ -31,9 +31,25 @@ BOOST_AUTO_TEST_CASE(base32_testvectors)\n \n     // Decoding strings with embedded NUL characters should fail\n     BOOST_CHECK(!DecodeBase32(\"invalid\\0\"s)); // correct size, invalid due to \\0\n-    BOOST_CHECK(DecodeBase32(\"AWSX3VPP\"s)); // valid\n+    BOOST_CHECK( DecodeBase32(\"AWSX3VPP\"s)); // valid\n     BOOST_CHECK(!DecodeBase32(\"AWSX3VPP\\0invalid\"s)); // correct size, invalid due to \\0\n     BOOST_CHECK(!DecodeBase32(\"AWSX3VPPinvalid\"s)); // invalid size\n }\n \n+BOOST_AUTO_TEST_CASE(base32_padding)\n+{\n+    // Is valid without padding\n+    BOOST_CHECK_EQUAL(EncodeBase32(\"fooba\"), \"mzxw6ytb\");\n+\n+    // Valid size\n+    BOOST_CHECK(!DecodeBase32(\"========\"s));",
      "path": "src/test/base32_tests.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "37e5fcfd4fad2f2daed041ddfd60b0c28e5da6b6",
      "in_reply_to_id": 1867517086,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'll consider it if I need to touch again",
      "created_at": "2024-12-03T14:54:50Z",
      "updated_at": "2024-12-03T14:54:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1867882293",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867882293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867886473",
      "pull_request_review_id": 2475950348,
      "id": 1867886473,
      "node_id": "PRRC_kwDOABII585vVa-J",
      "diff_hunk": "@@ -37,10 +37,21 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n     }\n \n     // Decoding strings with embedded NUL characters should fail\n-    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s));\n-    BOOST_CHECK(DecodeBase64(\"nQB/pZw=\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s));\n+    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\"s)); // invalid, padding only allowed at the end",
      "path": "src/test/base64_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "37e5fcfd4fad2f2daed041ddfd60b0c28e5da6b6",
      "in_reply_to_id": 1867734893,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You're suggesting an empty line here only, right?\r\nI'll consider it if I need to edit again",
      "created_at": "2024-12-03T14:57:08Z",
      "updated_at": "2024-12-03T14:57:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1867886473",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1867886473"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 40,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1870221621",
      "pull_request_review_id": 2479807410,
      "id": 1870221621,
      "node_id": "PRRC_kwDOABII585veVE1",
      "diff_hunk": "@@ -37,10 +37,22 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n     }\n \n     // Decoding strings with embedded NUL characters should fail\n-    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s));\n-    BOOST_CHECK(DecodeBase64(\"nQB/pZw=\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s));\n+    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s)); // invalid size",
      "path": "src/test/base64_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5ecef7b1521dec80b35bd531902076ca612084aa",
      "in_reply_to_id": 1834151211,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> What's the advantage of the comment stating exactly what the code already states? \r\n\r\nValid point. Better to describe what is wrong according to the Base64 standard (+ `\\0` I guess).\r\n\r\n> We're already testing `\\0` and non-trailing `=`, what else do these ones add?\r\n\r\nThey cover slightly different cases, mixing of `\\0` and `=`. They may not test a unique error-handling path with the current implementation, but if they can uncover issues with a potential future implementation I think it was a mistake to remove them (@maflcko was just stating the comments were invalid as I understand it).",
      "created_at": "2024-12-04T20:13:23Z",
      "updated_at": "2024-12-04T20:13:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1870221621",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1870221621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1870252182",
      "pull_request_review_id": 2479858405,
      "id": 1870252182,
      "node_id": "PRRC_kwDOABII585veciW",
      "diff_hunk": "@@ -37,10 +37,21 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n     }\n \n     // Decoding strings with embedded NUL characters should fail\n-    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s));\n-    BOOST_CHECK(DecodeBase64(\"nQB/pZw=\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s));\n+    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\"s)); // invalid, padding only allowed at the end",
      "path": "src/test/base64_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "37e5fcfd4fad2f2daed041ddfd60b0c28e5da6b6",
      "in_reply_to_id": 1867734893,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The comment above the block doesn't match line 42, this is wrong - so you should do more than consider it if you edit IMO. But it's not a blocker for me.",
      "created_at": "2024-12-04T20:40:59Z",
      "updated_at": "2024-12-04T20:41:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1870252182",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1870252182"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 40,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1870901461",
      "pull_request_review_id": 2480915505,
      "id": 1870901461,
      "node_id": "PRRC_kwDOABII585vg7DV",
      "diff_hunk": "@@ -37,10 +37,22 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n     }\n \n     // Decoding strings with embedded NUL characters should fail\n-    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s));\n-    BOOST_CHECK(DecodeBase64(\"nQB/pZw=\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s));\n+    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s)); // invalid size",
      "path": "src/test/base64_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5ecef7b1521dec80b35bd531902076ca612084aa",
      "in_reply_to_id": 1834151211,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> (@maflcko was just stating the comments were invalid as I understand it).\r\n\r\nYes, it seemed odd to touch a line that doesn't need to be touched only to add a comment that is wrong. It seems better to not touch the line in this case.",
      "created_at": "2024-12-05T08:34:23Z",
      "updated_at": "2024-12-05T08:34:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1870901461",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1870901461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1870979614",
      "pull_request_review_id": 2481038180,
      "id": 1870979614,
      "node_id": "PRRC_kwDOABII585vhOIe",
      "diff_hunk": "@@ -31,9 +31,25 @@ BOOST_AUTO_TEST_CASE(base32_testvectors)\n \n     // Decoding strings with embedded NUL characters should fail\n     BOOST_CHECK(!DecodeBase32(\"invalid\\0\"s)); // correct size, invalid due to \\0\n-    BOOST_CHECK(DecodeBase32(\"AWSX3VPP\"s)); // valid\n+    BOOST_CHECK( DecodeBase32(\"AWSX3VPP\"s)); // valid\n     BOOST_CHECK(!DecodeBase32(\"AWSX3VPP\\0invalid\"s)); // correct size, invalid due to \\0\n     BOOST_CHECK(!DecodeBase32(\"AWSX3VPPinvalid\"s)); // invalid size\n }\n \n+BOOST_AUTO_TEST_CASE(base32_padding)\n+{\n+    // Is valid without padding\n+    BOOST_CHECK_EQUAL(EncodeBase32(\"fooba\"), \"mzxw6ytb\");\n+\n+    // Valid size\n+    BOOST_CHECK(!DecodeBase32(\"========\"s));",
      "path": "src/test/base32_tests.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "37e5fcfd4fad2f2daed041ddfd60b0c28e5da6b6",
      "in_reply_to_id": 1867517086,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, thanks, kept the `\"sv` only for the values with `\\0` in them",
      "created_at": "2024-12-05T09:24:03Z",
      "updated_at": "2024-12-05T09:24:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1870979614",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1870979614"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 45,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1870979871",
      "pull_request_review_id": 2481038567,
      "id": 1870979871,
      "node_id": "PRRC_kwDOABII585vhOMf",
      "diff_hunk": "@@ -37,10 +37,21 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n     }\n \n     // Decoding strings with embedded NUL characters should fail\n-    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s));\n-    BOOST_CHECK(DecodeBase64(\"nQB/pZw=\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s));\n+    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\"s)); // invalid, padding only allowed at the end",
      "path": "src/test/base64_tests.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "37e5fcfd4fad2f2daed041ddfd60b0c28e5da6b6",
      "in_reply_to_id": 1867734893,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "moved the values without `\\0` above the comment in 32 and 64 tests, thanks!",
      "created_at": "2024-12-05T09:24:13Z",
      "updated_at": "2024-12-05T09:28:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1870979871",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1870979871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 40,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1870987665",
      "pull_request_review_id": 2481051388,
      "id": 1870987665,
      "node_id": "PRRC_kwDOABII585vhQGR",
      "diff_hunk": "@@ -37,10 +37,22 @@ BOOST_AUTO_TEST_CASE(base64_testvectors)\n     }\n \n     // Decoding strings with embedded NUL characters should fail\n-    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s));\n-    BOOST_CHECK(DecodeBase64(\"nQB/pZw=\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s));\n-    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s));\n+    BOOST_CHECK(!DecodeBase64(\"invalid\\0\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK( DecodeBase64(\"nQB/pZw=\"s)); // valid\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=\\0invalid\"s)); // correct size, invalid due to \\0\n+    BOOST_CHECK(!DecodeBase64(\"nQB/pZw=invalid\\0\"s)); // invalid size",
      "path": "src/test/base64_tests.cpp",
      "position": null,
      "original_position": 11,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "5ecef7b1521dec80b35bd531902076ca612084aa",
      "in_reply_to_id": 1834151211,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, thanks",
      "created_at": "2024-12-05T09:28:38Z",
      "updated_at": "2024-12-05T09:28:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1870987665",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1870987665"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 42,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1899441448",
      "pull_request_review_id": 2525417419,
      "id": 1899441448,
      "node_id": "PRRC_kwDOABII585xNy0o",
      "diff_hunk": "@@ -6,49 +6,92 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRandomLengthString(1000)};\n+    const auto max_ret_len{provider.ConsumeIntegralInRange<int>(1, 300)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "a32002f2d5cff72639c9782d70ae52ec162d9ef8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: As `random_string` is currently `0-1000` long, and `max_ret_len` is `1-300`, most of the time `DecodeBase58()` is just returning `false` since `max_ret_len` is too small. But maybe that is intentional to stress that aspect?\r\n\r\nMight be better to have more similar lengths, and also to include `0` as `max_ret_len` since it might occur in places where that parameter is calculated.\r\n\r\n```suggestion\r\n    const std::string random_string{provider.ConsumeRandomLengthString(1000)};\r\n    const auto max_ret_len{provider.ConsumeIntegralInRange<int>(0, 1000)};\r\n```",
      "created_at": "2024-12-30T10:20:25Z",
      "updated_at": "2024-12-30T10:24:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1899441448",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1899441448"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 23,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1899492703",
      "pull_request_review_id": 2525500565,
      "id": 1899492703,
      "node_id": "PRRC_kwDOABII585xN_Vf",
      "diff_hunk": "@@ -6,49 +6,92 @@\n \n #include <base58.h>\n #include <psbt.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n \n #include <cassert>\n-#include <cstdint>\n #include <string>\n #include <vector>\n+#include <ranges>\n \n-using util::TrimString;\n using util::TrimStringView;\n \n-FUZZ_TARGET(base_encode_decode)\n+FUZZ_TARGET(base58_encode_decode)\n {\n-    const std::string random_encoded_string(buffer.begin(), buffer.end());\n+    FuzzedDataProvider provider(buffer.data(), buffer.size());\n+    const std::string random_string{provider.ConsumeRandomLengthString(1000)};\n+    const auto max_ret_len{provider.ConsumeIntegralInRange<int>(1, 300)};",
      "path": "src/test/fuzz/base_encode_decode.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "a32002f2d5cff72639c9782d70ae52ec162d9ef8",
      "in_reply_to_id": 1899441448,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, and even negative values theoretically - thanks, [pushed](https://github.com/bitcoin/bitcoin/compare/a32002f2d5cff72639c9782d70ae52ec162d9ef8..6983d82c84d4ca351a7cd9d1e0e20ab878da6475)",
      "created_at": "2024-12-30T11:52:01Z",
      "updated_at": "2024-12-30T11:52:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1899492703",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1899492703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": 23,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 24,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902903280",
      "pull_request_review_id": 2530531104,
      "id": 1902903280,
      "node_id": "PRRC_kwDOABII585xa__w",
      "diff_hunk": "@@ -82,20 +82,4 @@ BOOST_AUTO_TEST_CASE(base58_DecodeBase58)\n     BOOST_CHECK(!DecodeBase58Check(\"3vQB7B6MrGQZaxCuFg4oh\\0\" \"0IOl\"s, result, 100));",
      "path": "src/test/base58_tests.cpp",
      "position": 17,
      "original_position": 1,
      "commit_id": "6983d82c84d4ca351a7cd9d1e0e20ab878da6475",
      "original_commit_id": "3b66b7e20ddba94d251c97818700d46030b14cc5",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit 3b66b7e20ddba94d251c97818700d46030b14cc5\r\n\r\n`s/Spit/Split` in commit message.",
      "created_at": "2025-01-04T09:13:35Z",
      "updated_at": "2025-01-04T09:13:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30746#discussion_r1902903280",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902903280"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30746"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 82,
      "original_line": 82,
      "side": "RIGHT"
    }
  ]
}