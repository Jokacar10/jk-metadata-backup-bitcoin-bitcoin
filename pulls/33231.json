{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231",
    "id": 2761321592,
    "node_id": "PR_kwDOABII586klmx4",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33231",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33231.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33231.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33231",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33231/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
    "number": 33231,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "net: Prevent node from binding to the same `CService`",
    "user": {
      "login": "w0xlt",
      "id": 94266259,
      "node_id": "U_kgDOBZ5jkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/w0xlt",
      "html_url": "https://github.com/w0xlt",
      "followers_url": "https://api.github.com/users/w0xlt/followers",
      "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
      "organizations_url": "https://api.github.com/users/w0xlt/orgs",
      "repos_url": "https://api.github.com/users/w0xlt/repos",
      "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/w0xlt/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Currently, if the node inadvertently starts with repeated `-bind` options (e.g. `./build/bin/bitcoind -listen -bind=0.0.0.0 -bind=0.0.0.0`), the user will receive a misleading message followed by the node shutdown:\r\n\r\n```\r\n[net:error] Unable to bind to 0.0.0.0:8333 on this computer. Bitcoin Core is probably already running.\r\n[error] Unable to bind to 0.0.0.0:8333 on this computer. Bitcoin Core is probably already running.\r\n```\r\n\r\nAnd the user might spend some time looking for a `bitcoind` process or what application is using port 8333, when what happens is that Bitcoin Core successfully connected to port 8333 and then tries again, generating this fatal error.\r\n\r\nThis PR proposes that repeated `-bind` options have no effect.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2025-08-20T23:52:54Z",
    "updated_at": "2025-08-26T14:53:18Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "0366951c3bb7d3b1e8f62bff427a5cd0d2ca1fcd",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "w0xlt:mulitple_binds",
      "ref": "mulitple_binds",
      "sha": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 427811926,
        "node_id": "R_kgDOGX_kVg",
        "name": "bitcoin",
        "full_name": "w0xlt/bitcoin",
        "owner": {
          "login": "w0xlt",
          "id": 94266259,
          "node_id": "U_kgDOBZ5jkw",
          "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/w0xlt",
          "html_url": "https://github.com/w0xlt",
          "followers_url": "https://api.github.com/users/w0xlt/followers",
          "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
          "organizations_url": "https://api.github.com/users/w0xlt/orgs",
          "repos_url": "https://api.github.com/users/w0xlt/repos",
          "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/w0xlt/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/w0xlt/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/w0xlt/bitcoin",
        "archive_url": "https://api.github.com/repos/w0xlt/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/w0xlt/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/w0xlt/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/w0xlt/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/w0xlt/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/w0xlt/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/w0xlt/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/w0xlt/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/w0xlt/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/w0xlt/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/w0xlt/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/w0xlt/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/w0xlt/bitcoin/events",
        "forks_url": "https://api.github.com/repos/w0xlt/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/w0xlt/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/w0xlt/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/w0xlt/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/w0xlt/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/w0xlt/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/w0xlt/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/w0xlt/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/w0xlt/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/w0xlt/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/w0xlt/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/w0xlt/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/w0xlt/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/w0xlt/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/w0xlt/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/w0xlt/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:w0xlt/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/w0xlt/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/w0xlt/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/w0xlt/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/w0xlt/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/w0xlt/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/w0xlt/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/w0xlt/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/w0xlt/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/w0xlt/bitcoin/hooks",
        "svn_url": "https://github.com/w0xlt/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 5,
        "watchers_count": 5,
        "size": 283002,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-26T03:24:48Z",
        "created_at": "2021-11-14T01:34:01Z",
        "updated_at": "2025-08-20T22:43:07Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "6ca6f3b37b992591726bd13b494369bee3bd6468",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37660,
        "stargazers_count": 85207,
        "watchers_count": 85207,
        "size": 291722,
        "default_branch": "master",
        "open_issues_count": 755,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-25T21:12:06Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-26T14:49:52Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 62,
    "deletions": 0,
    "changed_files": 2,
    "commits": 1,
    "review_comments": 16,
    "comments": 7
  },
  "events": [
    {
      "event": "labeled",
      "id": 19255761904,
      "node_id": "LE_lADOABII587HEcR3zwAAAAR7u5vw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19255761904",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-20T23:52:57Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 3208478148,
      "node_id": "IC_kwDOABII586_PX3E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3208478148",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-20T23:52:59Z",
      "updated_at": "2025-08-26T03:24:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33231.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jonatack](https://github.com/bitcoin/bitcoin/pull/33231#pullrequestreview-3138666437), [yuvicc](https://github.com/bitcoin/bitcoin/pull/33231#issuecomment-3209170419), [cedwies](https://github.com/bitcoin/bitcoin/pull/33231#issuecomment-3214955658), [l0rinc](https://github.com/bitcoin/bitcoin/pull/33231#pullrequestreview-3149500267) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->\n### LLM Linter (✨ experimental)\n\nPossible typos and grammar issues:\n\n- configuration -> configurations [“across all binding configuration” should be pluralized to “configurations” for grammatical correctness]\n\n<sup>drahtbot_id_4_m</sup>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#issuecomment-3208478148",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33231"
    },
    {
      "event": "reviewed",
      "id": 3138666437,
      "node_id": "PRR_kwDOABII5867FD_F",
      "url": null,
      "actor": null,
      "commit_id": "132a59698e2df2e25fdbae3a6fba308b131419d2",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-21T00:44:18Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\n> This PR proposes that repeated -bind options have no effect.\r\n\r\nOnly no effect for repeated -bind options having the same value, yes? Would it be preferable to give the user feedback instead?\r\n\r\nWould be good to add test coverage.",
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#pullrequestreview-3138666437",
      "submitted_at": "2025-08-21T00:40:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
    },
    {
      "event": "commented",
      "id": 3209170419,
      "node_id": "IC_kwDOABII586_SA3z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3209170419",
      "actor": {
        "login": "yuvicc",
        "id": 92994932,
        "node_id": "U_kgDOBYr9dA",
        "avatar_url": "https://avatars.githubusercontent.com/u/92994932?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yuvicc",
        "html_url": "https://github.com/yuvicc",
        "followers_url": "https://api.github.com/users/yuvicc/followers",
        "following_url": "https://api.github.com/users/yuvicc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yuvicc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yuvicc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yuvicc/subscriptions",
        "organizations_url": "https://api.github.com/users/yuvicc/orgs",
        "repos_url": "https://api.github.com/users/yuvicc/repos",
        "events_url": "https://api.github.com/users/yuvicc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yuvicc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-21T06:29:28Z",
      "updated_at": "2025-08-21T06:29:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK ",
      "user": {
        "login": "yuvicc",
        "id": 92994932,
        "node_id": "U_kgDOBYr9dA",
        "avatar_url": "https://avatars.githubusercontent.com/u/92994932?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yuvicc",
        "html_url": "https://github.com/yuvicc",
        "followers_url": "https://api.github.com/users/yuvicc/followers",
        "following_url": "https://api.github.com/users/yuvicc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yuvicc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yuvicc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yuvicc/subscriptions",
        "organizations_url": "https://api.github.com/users/yuvicc/orgs",
        "repos_url": "https://api.github.com/users/yuvicc/repos",
        "events_url": "https://api.github.com/users/yuvicc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yuvicc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#issuecomment-3209170419",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33231"
    },
    {
      "event": "reviewed",
      "id": 3141565411,
      "node_id": "PRR_kwDOABII5867QHvj",
      "url": null,
      "actor": null,
      "commit_id": "132a59698e2df2e25fdbae3a6fba308b131419d2",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-21T17:17:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, but approach NACK 132a59698e2df2e25fdbae3a6fba308b131419d2\r\n\r\nI only did a code review pass on it, please let me know if my concerns are off, happy to ack if I was mistaken.\r\nMy biggest concern currently is silently dropping values by partial duplication, e.g. `-whitebind=[::1]:8335=relay -whitebind=[::1]:8335=relay,addr`.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#pullrequestreview-3141565411",
      "submitted_at": "2025-08-21T17:17:17Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
    },
    {
      "event": "commented",
      "id": 3214955658,
      "node_id": "IC_kwDOABII586_oFSK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3214955658",
      "actor": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-22T16:31:23Z",
      "updated_at": "2025-08-22T16:31:23Z",
      "author_association": "NONE",
      "body": "Concept ACK\r\n\r\nOne point to consider is a behavioral change in how the `onion_service_target` is selected.\r\nConsider:\r\n```md\r\n-bind=192.167.1.10:8333=onion\r\n-bind=127.0.0.1:8333=onion\r\n```\r\n\r\nCurrently `192.167.1.10:8333` will be selected as `onion_service_target`. With this PR, it will be changed to `127.0.0.1:8333` (though one line in logs shows which address is used as target). \r\n\r\n\r\nOne option would be to keep using sets for deduplication, while still preserving the historical “first specified wins” rule when selecting `onion_service_target`. That way dedup works as intended without changing existing semantics, and it matches operator expectations (since users may typically think in terms of argument order, not `CService`’s comparator). On the other hand, one could argue that relying on argument order is fragile, and that making the selection order-independent is preferable. Any thoughts?\r\n\r\n\r\n\r\n\r\n",
      "user": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#issuecomment-3214955658",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33231"
    },
    {
      "event": "commented",
      "id": 3215378037,
      "node_id": "IC_kwDOABII586_psZ1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3215378037",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-22T19:23:15Z",
      "updated_at": "2025-08-22T19:23:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "Since these lists are tiny, Instead of a set for deduplication, we might as well use a simple O^2 algorithm, iterate from the back and remove whatever appeared in the front (it will likely be even faster than a set). If you decide to do that, I'd appreciate a randomized unit test checking it against a set deduplication.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#issuecomment-3215378037",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33231"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19308544688,
      "node_id": "HRFPE_lADOABII587HEcR3zwAAAAR-4QKw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19308544688",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "afcafcf6156884441ff8af8e145bf4c9c429e40e",
      "commit_url": "https://api.github.com/repos/w0xlt/bitcoin/commits/afcafcf6156884441ff8af8e145bf4c9c429e40e",
      "created_at": "2025-08-24T05:18:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19308574633,
      "node_id": "HRFPE_lADOABII587HEcR3zwAAAAR-4Xep",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19308574633",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "93d373ae504dc08182cd798dec9cb82beb72d161",
      "commit_url": "https://api.github.com/repos/w0xlt/bitcoin/commits/93d373ae504dc08182cd798dec9cb82beb72d161",
      "created_at": "2025-08-24T05:32:41Z"
    },
    {
      "event": "labeled",
      "id": 19308575016,
      "node_id": "LE_lADOABII587HEcR3zwAAAAR-4Xko",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19308575016",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-24T05:32:51Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3217823165,
      "node_id": "IC_kwDOABII586_zBW9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3217823165",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-24T05:32:52Z",
      "updated_at": "2025-08-24T05:32:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/48752053890</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by errors detected by the linter `ruff`, specifically two fixable issues in Python code: missing trailing newline and an f-string without placeholders.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#issuecomment-3217823165",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33231"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19308583205,
      "node_id": "HRFPE_lADOABII587HEcR3zwAAAAR-4Zkl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19308583205",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cfdfee3faad8d85bc0ebba6819d36cf8c930e71b",
      "commit_url": "https://api.github.com/repos/w0xlt/bitcoin/commits/cfdfee3faad8d85bc0ebba6819d36cf8c930e71b",
      "created_at": "2025-08-24T05:36:20Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19308616719,
      "node_id": "HRFPE_lADOABII587HEcR3zwAAAAR-4hwP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19308616719",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1001b7ae76e4c5b9a275320a982cf68562f7f22e",
      "commit_url": "https://api.github.com/repos/w0xlt/bitcoin/commits/1001b7ae76e4c5b9a275320a982cf68562f7f22e",
      "created_at": "2025-08-24T05:51:16Z"
    },
    {
      "event": "commented",
      "id": 3217858176,
      "node_id": "IC_kwDOABII586_zJ6A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3217858176",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-24T06:11:22Z",
      "updated_at": "2025-08-24T06:15:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thank you all for the reviews.\r\nI completely changed the approach.\r\n\r\nWhile addressing the reviews, I realized that using `std::set` to avoid duplicates doesn't solve the problem. If the options with same address and port but different network like `-bind=127.0.0.1:8333 -bind=127.0.0.1:8333=onion` are present, the node will crash anyway, as one option will be allocated in the `CConnman::Options::vBinds` vector and the other in `CConnman::Options::onion_binds`.\r\n\r\nTherefore, even after deduplicating each vector, it is still necessary to check for conflicts between vectors.\r\n\r\nI used the following approach:\r\nIf the duplicate binds are the same (e.g., `bind=0.0.0.0 -bind=0.0.0.0`), they will be ignored.\r\nBut if they are different (e.g., `bind=0.0.0.0:10080 -bind=0.0.0.0:10080=onion`), the node will be terminated with a clear and specific message (e.g., `Different bind settings assigned to address 0.0.0.0:10080`), since we cannot know the user's true intent.\r\n\r\nI added the tests as requested. For more explanation about the first commit, see #33250.",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#issuecomment-3217858176",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33231"
    },
    {
      "event": "unlabeled",
      "id": 19308828160,
      "node_id": "UNLE_lADOABII587HEcR3zwAAAAR-5VYA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19308828160",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-24T07:01:37Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 3149500267,
      "node_id": "PRR_kwDOABII5867uY9r",
      "url": null,
      "actor": null,
      "commit_id": "1001b7ae76e4c5b9a275320a982cf68562f7f22e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-25T04:31:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nI personally would not try to correct the behavior (especially silently), given that it's rare, I would simply give the user a warning or error and let them fix the arguments.\r\n\r\nI also think the tests are a bit complicated and more stateful now, I have added a few suggestions, maybe we can simplify based on them.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#pullrequestreview-3149500267",
      "submitted_at": "2025-08-25T04:31:25Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
    },
    {
      "event": "reviewed",
      "id": 3149879153,
      "node_id": "PRR_kwDOABII5867v1dx",
      "url": null,
      "actor": null,
      "commit_id": "1001b7ae76e4c5b9a275320a982cf68562f7f22e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-25T04:34:37Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#pullrequestreview-3149879153",
      "submitted_at": "2025-08-25T04:34:37Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
    },
    {
      "event": "reviewed",
      "id": 3149881805,
      "node_id": "PRR_kwDOABII5867v2HN",
      "url": null,
      "actor": null,
      "commit_id": "1001b7ae76e4c5b9a275320a982cf68562f7f22e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-25T04:37:01Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#pullrequestreview-3149881805",
      "submitted_at": "2025-08-25T04:37:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI4ZmI3Zjc0YzRhZTY2ZGNiMGY5MTg3NzRkNjQ0YWMzYzM5M2YyNWI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "tree": {
        "sha": "ec9a9251e811186ad2cdafd1a6b3810a69c7617f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec9a9251e811186ad2cdafd1a6b3810a69c7617f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d9789401be4c91a9eb3c1112564a6524bdc4f70",
          "sha": "7d9789401be4c91a9eb3c1112564a6524bdc4f70",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7d9789401be4c91a9eb3c1112564a6524bdc4f70"
        }
      ],
      "message": "net: Prevent node from binding to the same CService\n\nCurrently, if the user inadvertently starts the node with duplicate bind options,\nsuch as `-bind=0.0.0.0 -bind=0.0.0.0`, it will cause a fatal error with the\nmisleading message \"Bitcoin Core is probably already running\".\n\nThis commit adds early validation to detect duplicate bindings across all binding\nconfigurations (-bind, -whitebind, and onion bindings) before attempting to bind.\nWhen duplicates are detected, the node terminates with a clear, specific error\nmessage: \"Duplicate binding configuration for address <addr>. Please check your\n-bind, -whitebind, and onion binding settings.\"\n\nThe validation catches duplicates both within the same option type (e.g.,\n`-bind=X -bind=X`) and across different types (e.g., `-bind=X -whitebind=Y@X`),\nhelping users identify and fix configuration mistakes.",
      "committer": {
        "name": "woltx",
        "email": "94266259+w0xlt@users.noreply.github.com",
        "date": "2025-08-26T03:22:33Z"
      },
      "author": {
        "name": "woltx",
        "email": "94266259+w0xlt@users.noreply.github.com",
        "date": "2025-08-26T03:22:33Z"
      },
      "sha": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19334427742,
      "node_id": "HRFPE_lADOABII587HEcR3zwAAAASAa_Re",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19334427742",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "commit_url": "https://api.github.com/repos/w0xlt/bitcoin/commits/28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "created_at": "2025-08-26T03:24:50Z"
    },
    {
      "event": "commented",
      "id": 3222458339,
      "node_id": "IC_kwDOABII587AEs_j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3222458339",
      "actor": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-26T03:32:21Z",
      "updated_at": "2025-08-26T03:32:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "@l0rinc thank you for your detailed reviews.\r\n\r\n> I personally would not try to correct the behavior (especially silently), given that it's rare, I would simply give the user a warning or error and let them fix the arguments.\r\n\r\nI adjusted the approach to meet this requirement. Now when duplicates are detected, the node terminates with a clear, specific error message: \"_Duplicate binding configuration for address < addr >. Please check your -bind, -whitebind, and onion binding settings._\"\r\n\r\nI don't have a strong opinion on whether the node should try to correct the behavior or not. For me, the main issue is the misleading message.\r\n\r\nThis version is much more simplified compared to the previous ones\r\n",
      "user": {
        "login": "w0xlt",
        "id": 94266259,
        "node_id": "U_kgDOBZ5jkw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/w0xlt",
        "html_url": "https://github.com/w0xlt",
        "followers_url": "https://api.github.com/users/w0xlt/followers",
        "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
        "organizations_url": "https://api.github.com/users/w0xlt/orgs",
        "repos_url": "https://api.github.com/users/w0xlt/repos",
        "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/w0xlt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#issuecomment-3222458339",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33231"
    },
    {
      "event": "mentioned",
      "id": 19334497508,
      "node_id": "MEE_lADOABII587HEcR3zwAAAASAbQTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19334497508",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-26T03:32:23Z"
    },
    {
      "event": "subscribed",
      "id": 19334497520,
      "node_id": "SE_lADOABII587HEcR3zwAAAASAbQTw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19334497520",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-26T03:32:23Z"
    },
    {
      "event": "reviewed",
      "id": 3155820862,
      "node_id": "PRR_kwDOABII5868GgE-",
      "url": null,
      "actor": null,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-26T14:53:18Z",
      "author_association": "NONE",
      "user": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#pullrequestreview-3155820862",
      "submitted_at": "2025-08-26T14:53:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2289594951",
      "pull_request_review_id": 3138666437,
      "id": 2289594951,
      "node_id": "PRRC_kwDOABII586IeHJH",
      "diff_hunk": "@@ -1590,7 +1590,7 @@ class CConnman\n      * A vector of -bind=<address>:<port>=onion arguments each of which is\n      * an address and port that are designated for incoming Tor connections.\n      */\n-    std::vector<CService> m_onion_binds;\n+    std::set<CService> m_onion_binds;",
      "path": "src/net.h",
      "position": null,
      "original_position": 18,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "132a59698e2df2e25fdbae3a6fba308b131419d2",
      "in_reply_to_id": null,
      "user": {
        "login": "jonatack",
        "id": 2415484,
        "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jonatack",
        "html_url": "https://github.com/jonatack",
        "followers_url": "https://api.github.com/users/jonatack/followers",
        "following_url": "https://api.github.com/users/jonatack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jonatack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jonatack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
        "organizations_url": "https://api.github.com/users/jonatack/orgs",
        "repos_url": "https://api.github.com/users/jonatack/repos",
        "events_url": "https://api.github.com/users/jonatack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jonatack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would need to update the doxygen (\"A vector...\")",
      "created_at": "2025-08-21T00:37:52Z",
      "updated_at": "2025-08-21T00:40:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2289594951",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2289594951"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1593,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2291645849",
      "pull_request_review_id": 3141565411,
      "id": 2291645849,
      "node_id": "PRRC_kwDOABII586Il72Z",
      "diff_hunk": "@@ -1068,9 +1068,9 @@ class CConnman\n         std::vector<std::string> vSeedNodes;\n         std::vector<NetWhitelistPermissions> vWhitelistedRangeIncoming;\n         std::vector<NetWhitelistPermissions> vWhitelistedRangeOutgoing;\n-        std::vector<NetWhitebindPermissions> vWhiteBinds;\n-        std::vector<CService> vBinds;\n-        std::vector<CService> onion_binds;\n+        std::set<NetWhitebindPermissions> vWhiteBinds;\n+        std::set<CService> vBinds;",
      "path": "src/net.h",
      "position": null,
      "original_position": 8,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "132a59698e2df2e25fdbae3a6fba308b131419d2",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "the `v` prefix doesn't make a lot of sense anymore, if they're not vectors",
      "created_at": "2025-08-21T16:57:55Z",
      "updated_at": "2025-08-21T17:17:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2291645849",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2291645849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": 1071,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1072,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2291649231",
      "pull_request_review_id": 3141565411,
      "id": 2291649231,
      "node_id": "PRRC_kwDOABII586Il8rP",
      "diff_hunk": "@@ -1590,7 +1590,7 @@ class CConnman\n      * A vector of -bind=<address>:<port>=onion arguments each of which is",
      "path": "src/net.h",
      "position": null,
      "original_position": 14,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "132a59698e2df2e25fdbae3a6fba308b131419d2",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "* I'd appreciate a test that checks what happens in this case, as @jonatack also mentioned\r\n* a release‑notes line under P2P noting that repeated -bind and -whitebind arguments are now deduplicated",
      "created_at": "2025-08-21T16:59:39Z",
      "updated_at": "2025-08-21T17:17:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2291649231",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2291649231"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1590,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2291660042",
      "pull_request_review_id": 3141565411,
      "id": 2291660042,
      "node_id": "PRRC_kwDOABII586Il_UK",
      "diff_hunk": "@@ -84,6 +84,10 @@ class NetWhitebindPermissions : public NetPermissions\n public:\n     static bool TryParse(const std::string& str, NetWhitebindPermissions& output, bilingual_str& error);\n     CService m_service;\n+\n+    bool operator<(const NetWhitebindPermissions& other) const {\n+        return m_service < other.m_service;",
      "path": "src/net_permissions.h",
      "position": null,
      "original_position": 6,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "132a59698e2df2e25fdbae3a6fba308b131419d2",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "isn't it confusing that in case of service duplicates the it's not obvious which `m_flags` is ignored?\r\n\r\nWhat do we expect to happen in case of something like `-whitebind=127.0.0.1:8335=relay,noban -whitebind=127.0.0.1:8335=relay` vs `-whitebind=127.0.0.1:8335=relay -whitebind=127.0.0.1:8335=relay,noban`?\r\nOr even worse, `-whitebind=127.0.0.1:8335=all -whitebind=127.0.0.1:8335=relay,mempool`?",
      "created_at": "2025-08-21T17:05:07Z",
      "updated_at": "2025-08-21T17:17:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2291660042",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2291660042"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 89,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2291661657",
      "pull_request_review_id": 3141565411,
      "id": 2291661657,
      "node_id": "PRRC_kwDOABII586Il_tZ",
      "diff_hunk": "@@ -84,6 +84,10 @@ class NetWhitebindPermissions : public NetPermissions\n public:\n     static bool TryParse(const std::string& str, NetWhitebindPermissions& output, bilingual_str& error);\n     CService m_service;\n+\n+    bool operator<(const NetWhitebindPermissions& other) const {",
      "path": "src/net_permissions.h",
      "position": null,
      "original_position": 5,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "132a59698e2df2e25fdbae3a6fba308b131419d2",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We could modernize this to C++20\r\n```C++\r\nstd::weak_ordering operator<=>(NetWhitebindPermissions const& other) const\r\n```\r\n\r\nnit: formatting is off\r\n",
      "created_at": "2025-08-21T17:05:54Z",
      "updated_at": "2025-08-21T17:17:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2291661657",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2291661657"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 88,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296801852",
      "pull_request_review_id": 3149500267,
      "id": 2296801852,
      "node_id": "PRRC_kwDOABII586I5mo8",
      "diff_hunk": "@@ -1233,6 +1233,94 @@ bool CheckHostPortOptions(const ArgsManager& args) {\n     return true;\n }\n \n+/**\n+ * @brief Deduplicates binding vectors internally and checks for cross-vector conflicts.\n+ *\n+ * For vWhiteBinds: Removes duplicates with identical service AND permissions, but reports\n+ * conflicts when same service has different permissions.\n+ * For other vectors: Simply removes duplicates.\n+ * Cross-vector duplicates are always reported as conflicts.\n+ *\n+ * @param vWhiteBinds Vector of whitelisted bind permissions (will be deduplicated)\n+ * @param vBinds Vector of regular bind services (will be deduplicated)\n+ * @param onion_binds Vector of onion-specific bind services (will be deduplicated)\n+ * @return std::optional<CService> containing the first conflict found, or std::nullopt if no conflicts\n+ */\n+std::optional<CService> DeduplicateAndCheckBindingConflicts(\n+    std::vector<NetWhitebindPermissions>& vWhiteBinds,\n+    std::vector<CService>& vBinds,\n+    std::vector<CService>& onion_binds)\n+{\n+    // Step 1: Handle vWhiteBinds deduplication with special logic for permissions\n+    {\n+        std::map<CService, NetPermissionFlags> seen_whitebinds;\n+        std::vector<NetWhitebindPermissions> deduplicated;\n+\n+        for (const auto& wb : vWhiteBinds) {\n+            auto it = seen_whitebinds.find(wb.m_service);\n+            if (it == seen_whitebinds.end()) {\n+                // First occurrence of this service\n+                seen_whitebinds[wb.m_service] = wb.m_flags;\n+                deduplicated.push_back(wb);\n+            } else if (it->second == wb.m_flags) {\n+                // Same service, same permissions - harmless duplicate, skip it\n+                continue;\n+            } else {\n+                // Same service, different permissions - conflict!\n+                return wb.m_service;\n+            }\n+        }\n+        vWhiteBinds = std::move(deduplicated);\n+    }\n+\n+    // Step 2: Simple deduplication for vBinds\n+    {\n+        std::set<CService> seen;\n+        auto it = std::remove_if(vBinds.begin(), vBinds.end(),\n+            [&seen](const CService& service) {\n+                return !seen.insert(service).second;  // Remove if already seen\n+            });\n+        vBinds.erase(it, vBinds.end());\n+    }\n+\n+    // Step 3: Simple deduplication for onion_binds\n+    {\n+        std::set<CService> seen;\n+        auto it = std::remove_if(onion_binds.begin(), onion_binds.end(),\n+            [&seen](const CService& service) {\n+                return !seen.insert(service).second;  // Remove if already seen\n+            });\n+        onion_binds.erase(it, onion_binds.end());\n+    }\n+\n+    // Step 4: Check for cross-vector conflicts\n+    // Build sets for efficient lookup\n+    std::set<CService> whitebind_services;\n+    for (const auto& wb : vWhiteBinds) {\n+        whitebind_services.insert(wb.m_service);\n+    }\n+\n+    // Check if any service from vBinds exists in vWhiteBinds\n+    for (const auto& bind : vBinds) {\n+        if (whitebind_services.count(bind)) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 73,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "1001b7ae76e4c5b9a275320a982cf68562f7f22e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n        if (whitebind_services.contains(bind)) {\r\n```",
      "created_at": "2025-08-24T20:47:28Z",
      "updated_at": "2025-08-25T04:31:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2296801852",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296801852"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1305,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296803517",
      "pull_request_review_id": 3149500267,
      "id": 2296803517,
      "node_id": "PRRC_kwDOABII586I5nC9",
      "diff_hunk": "@@ -1233,6 +1233,94 @@ bool CheckHostPortOptions(const ArgsManager& args) {\n     return true;\n }\n \n+/**\n+ * @brief Deduplicates binding vectors internally and checks for cross-vector conflicts.\n+ *\n+ * For vWhiteBinds: Removes duplicates with identical service AND permissions, but reports\n+ * conflicts when same service has different permissions.\n+ * For other vectors: Simply removes duplicates.\n+ * Cross-vector duplicates are always reported as conflicts.\n+ *\n+ * @param vWhiteBinds Vector of whitelisted bind permissions (will be deduplicated)\n+ * @param vBinds Vector of regular bind services (will be deduplicated)\n+ * @param onion_binds Vector of onion-specific bind services (will be deduplicated)\n+ * @return std::optional<CService> containing the first conflict found, or std::nullopt if no conflicts\n+ */\n+std::optional<CService> DeduplicateAndCheckBindingConflicts(\n+    std::vector<NetWhitebindPermissions>& vWhiteBinds,\n+    std::vector<CService>& vBinds,\n+    std::vector<CService>& onion_binds)",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "1001b7ae76e4c5b9a275320a982cf68562f7f22e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "output parameters are quite hard to reason about - given that the call-site assigns `connOptions` directly, can we either split this into 2-3 helper methods that return the new values (the vectors are tiny, they're likely as fast as passing it around), or if you insist on this big one, can we pass a single `CConnman::Options& connOptions` instead?\r\nAlso, some branches return, others don't erase, others replace one of the inputs - seems like has more than a single, easily defined responsibility (the name even has an `And` in the name), I personally would prefer doing the same in more focused methods.",
      "created_at": "2025-08-24T20:53:19Z",
      "updated_at": "2025-08-25T04:31:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2296803517",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296803517"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": 1250,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1252,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296806927",
      "pull_request_review_id": 3149500267,
      "id": 2296806927,
      "node_id": "PRRC_kwDOABII586I5n4P",
      "diff_hunk": "@@ -1233,6 +1233,94 @@ bool CheckHostPortOptions(const ArgsManager& args) {\n     return true;\n }\n \n+/**\n+ * @brief Deduplicates binding vectors internally and checks for cross-vector conflicts.\n+ *\n+ * For vWhiteBinds: Removes duplicates with identical service AND permissions, but reports\n+ * conflicts when same service has different permissions.\n+ * For other vectors: Simply removes duplicates.\n+ * Cross-vector duplicates are always reported as conflicts.\n+ *\n+ * @param vWhiteBinds Vector of whitelisted bind permissions (will be deduplicated)\n+ * @param vBinds Vector of regular bind services (will be deduplicated)\n+ * @param onion_binds Vector of onion-specific bind services (will be deduplicated)\n+ * @return std::optional<CService> containing the first conflict found, or std::nullopt if no conflicts\n+ */\n+std::optional<CService> DeduplicateAndCheckBindingConflicts(\n+    std::vector<NetWhitebindPermissions>& vWhiteBinds,\n+    std::vector<CService>& vBinds,\n+    std::vector<CService>& onion_binds)\n+{\n+    // Step 1: Handle vWhiteBinds deduplication with special logic for permissions\n+    {\n+        std::map<CService, NetPermissionFlags> seen_whitebinds;\n+        std::vector<NetWhitebindPermissions> deduplicated;\n+\n+        for (const auto& wb : vWhiteBinds) {\n+            auto it = seen_whitebinds.find(wb.m_service);\n+            if (it == seen_whitebinds.end()) {\n+                // First occurrence of this service\n+                seen_whitebinds[wb.m_service] = wb.m_flags;\n+                deduplicated.push_back(wb);\n+            } else if (it->second == wb.m_flags) {\n+                // Same service, same permissions - harmless duplicate, skip it\n+                continue;\n+            } else {\n+                // Same service, different permissions - conflict!\n+                return wb.m_service;\n+            }\n+        }\n+        vWhiteBinds = std::move(deduplicated);\n+    }\n+\n+    // Step 2: Simple deduplication for vBinds\n+    {\n+        std::set<CService> seen;\n+        auto it = std::remove_if(vBinds.begin(), vBinds.end(),",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "1001b7ae76e4c5b9a275320a982cf68562f7f22e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n```suggestion\r\n        auto it = std::ranges::remove_if(onion_binds,\r\n```",
      "created_at": "2025-08-24T21:07:06Z",
      "updated_at": "2025-08-25T04:31:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2296806927",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296806927"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1279,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296807196",
      "pull_request_review_id": 3149500267,
      "id": 2296807196,
      "node_id": "PRRC_kwDOABII586I5n8c",
      "diff_hunk": "@@ -1233,6 +1233,94 @@ bool CheckHostPortOptions(const ArgsManager& args) {\n     return true;\n }\n \n+/**\n+ * @brief Deduplicates binding vectors internally and checks for cross-vector conflicts.\n+ *\n+ * For vWhiteBinds: Removes duplicates with identical service AND permissions, but reports\n+ * conflicts when same service has different permissions.\n+ * For other vectors: Simply removes duplicates.\n+ * Cross-vector duplicates are always reported as conflicts.\n+ *\n+ * @param vWhiteBinds Vector of whitelisted bind permissions (will be deduplicated)\n+ * @param vBinds Vector of regular bind services (will be deduplicated)\n+ * @param onion_binds Vector of onion-specific bind services (will be deduplicated)\n+ * @return std::optional<CService> containing the first conflict found, or std::nullopt if no conflicts\n+ */\n+std::optional<CService> DeduplicateAndCheckBindingConflicts(\n+    std::vector<NetWhitebindPermissions>& vWhiteBinds,\n+    std::vector<CService>& vBinds,\n+    std::vector<CService>& onion_binds)\n+{\n+    // Step 1: Handle vWhiteBinds deduplication with special logic for permissions\n+    {\n+        std::map<CService, NetPermissionFlags> seen_whitebinds;\n+        std::vector<NetWhitebindPermissions> deduplicated;\n+\n+        for (const auto& wb : vWhiteBinds) {\n+            auto it = seen_whitebinds.find(wb.m_service);\n+            if (it == seen_whitebinds.end()) {\n+                // First occurrence of this service\n+                seen_whitebinds[wb.m_service] = wb.m_flags;\n+                deduplicated.push_back(wb);\n+            } else if (it->second == wb.m_flags) {\n+                // Same service, same permissions - harmless duplicate, skip it\n+                continue;\n+            } else {\n+                // Same service, different permissions - conflict!\n+                return wb.m_service;",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "1001b7ae76e4c5b9a275320a982cf68562f7f22e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since we don't expect this to happen often, I guess it's enough to stop at the first error instead of listing all 👍 ",
      "created_at": "2025-08-24T21:08:22Z",
      "updated_at": "2025-08-25T04:31:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2296807196",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296807196"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1270,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296866208",
      "pull_request_review_id": 3149500267,
      "id": 2296866208,
      "node_id": "PRRC_kwDOABII586I52Wg",
      "diff_hunk": "@@ -1233,6 +1233,94 @@ bool CheckHostPortOptions(const ArgsManager& args) {\n     return true;\n }\n \n+/**\n+ * @brief Deduplicates binding vectors internally and checks for cross-vector conflicts.\n+ *\n+ * For vWhiteBinds: Removes duplicates with identical service AND permissions, but reports\n+ * conflicts when same service has different permissions.\n+ * For other vectors: Simply removes duplicates.\n+ * Cross-vector duplicates are always reported as conflicts.\n+ *\n+ * @param vWhiteBinds Vector of whitelisted bind permissions (will be deduplicated)\n+ * @param vBinds Vector of regular bind services (will be deduplicated)\n+ * @param onion_binds Vector of onion-specific bind services (will be deduplicated)\n+ * @return std::optional<CService> containing the first conflict found, or std::nullopt if no conflicts\n+ */\n+std::optional<CService> DeduplicateAndCheckBindingConflicts(\n+    std::vector<NetWhitebindPermissions>& vWhiteBinds,\n+    std::vector<CService>& vBinds,\n+    std::vector<CService>& onion_binds)\n+{\n+    // Step 1: Handle vWhiteBinds deduplication with special logic for permissions\n+    {\n+        std::map<CService, NetPermissionFlags> seen_whitebinds;\n+        std::vector<NetWhitebindPermissions> deduplicated;\n+\n+        for (const auto& wb : vWhiteBinds) {\n+            auto it = seen_whitebinds.find(wb.m_service);\n+            if (it == seen_whitebinds.end()) {\n+                // First occurrence of this service\n+                seen_whitebinds[wb.m_service] = wb.m_flags;\n+                deduplicated.push_back(wb);\n+            } else if (it->second == wb.m_flags) {\n+                // Same service, same permissions - harmless duplicate, skip it\n+                continue;\n+            } else {\n+                // Same service, different permissions - conflict!\n+                return wb.m_service;\n+            }\n+        }\n+        vWhiteBinds = std::move(deduplicated);\n+    }\n+\n+    // Step 2: Simple deduplication for vBinds\n+    {\n+        std::set<CService> seen;\n+        auto it = std::remove_if(vBinds.begin(), vBinds.end(),\n+            [&seen](const CService& service) {\n+                return !seen.insert(service).second;  // Remove if already seen\n+            });\n+        vBinds.erase(it, vBinds.end());\n+    }\n+\n+    // Step 3: Simple deduplication for onion_binds\n+    {\n+        std::set<CService> seen;\n+        auto it = std::remove_if(onion_binds.begin(), onion_binds.end(),\n+            [&seen](const CService& service) {\n+                return !seen.insert(service).second;  // Remove if already seen\n+            });\n+        onion_binds.erase(it, onion_binds.end());\n+    }\n+\n+    // Step 4: Check for cross-vector conflicts\n+    // Build sets for efficient lookup\n+    std::set<CService> whitebind_services;\n+    for (const auto& wb : vWhiteBinds) {\n+        whitebind_services.insert(wb.m_service);\n+    }\n+\n+    // Check if any service from vBinds exists in vWhiteBinds\n+    for (const auto& bind : vBinds) {\n+        if (whitebind_services.count(bind)) {\n+            return bind;  // Conflict between vBinds and vWhiteBinds\n+        }\n+    }\n+\n+    // Check if any service from onion_binds exists in vWhiteBinds or vBinds\n+    std::set<CService> bind_services(vBinds.begin(), vBinds.end());",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 79,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "1001b7ae76e4c5b9a275320a982cf68562f7f22e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "as mentioned before, I think we can safely check `vBinds` directly - it's simpler and likely even faster than this",
      "created_at": "2025-08-25T00:11:04Z",
      "updated_at": "2025-08-25T04:39:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2296866208",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296866208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1311,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296866701",
      "pull_request_review_id": 3149500267,
      "id": 2296866701,
      "node_id": "PRRC_kwDOABII586I52eN",
      "diff_hunk": "@@ -1233,6 +1233,94 @@ bool CheckHostPortOptions(const ArgsManager& args) {\n     return true;\n }\n \n+/**\n+ * @brief Deduplicates binding vectors internally and checks for cross-vector conflicts.\n+ *\n+ * For vWhiteBinds: Removes duplicates with identical service AND permissions, but reports\n+ * conflicts when same service has different permissions.\n+ * For other vectors: Simply removes duplicates.\n+ * Cross-vector duplicates are always reported as conflicts.\n+ *\n+ * @param vWhiteBinds Vector of whitelisted bind permissions (will be deduplicated)\n+ * @param vBinds Vector of regular bind services (will be deduplicated)\n+ * @param onion_binds Vector of onion-specific bind services (will be deduplicated)\n+ * @return std::optional<CService> containing the first conflict found, or std::nullopt if no conflicts\n+ */\n+std::optional<CService> DeduplicateAndCheckBindingConflicts(\n+    std::vector<NetWhitebindPermissions>& vWhiteBinds,\n+    std::vector<CService>& vBinds,\n+    std::vector<CService>& onion_binds)\n+{\n+    // Step 1: Handle vWhiteBinds deduplication with special logic for permissions\n+    {\n+        std::map<CService, NetPermissionFlags> seen_whitebinds;\n+        std::vector<NetWhitebindPermissions> deduplicated;\n+\n+        for (const auto& wb : vWhiteBinds) {\n+            auto it = seen_whitebinds.find(wb.m_service);\n+            if (it == seen_whitebinds.end()) {\n+                // First occurrence of this service\n+                seen_whitebinds[wb.m_service] = wb.m_flags;\n+                deduplicated.push_back(wb);\n+            } else if (it->second == wb.m_flags) {\n+                // Same service, same permissions - harmless duplicate, skip it\n+                continue;\n+            } else {\n+                // Same service, different permissions - conflict!\n+                return wb.m_service;\n+            }\n+        }\n+        vWhiteBinds = std::move(deduplicated);\n+    }\n+\n+    // Step 2: Simple deduplication for vBinds\n+    {\n+        std::set<CService> seen;\n+        auto it = std::remove_if(vBinds.begin(), vBinds.end(),\n+            [&seen](const CService& service) {\n+                return !seen.insert(service).second;  // Remove if already seen\n+            });\n+        vBinds.erase(it, vBinds.end());\n+    }\n+\n+    // Step 3: Simple deduplication for onion_binds\n+    {\n+        std::set<CService> seen;\n+        auto it = std::remove_if(onion_binds.begin(), onion_binds.end(),\n+            [&seen](const CService& service) {\n+                return !seen.insert(service).second;  // Remove if already seen\n+            });\n+        onion_binds.erase(it, onion_binds.end());\n+    }\n+\n+    // Step 4: Check for cross-vector conflicts\n+    // Build sets for efficient lookup\n+    std::set<CService> whitebind_services;\n+    for (const auto& wb : vWhiteBinds) {\n+        whitebind_services.insert(wb.m_service);\n+    }",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 69,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "1001b7ae76e4c5b9a275320a982cf68562f7f22e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "do we really need to recreate this or can we reuse `seen_whitebinds` or even better, just iterate `vWhiteBinds` values directly?",
      "created_at": "2025-08-25T00:12:27Z",
      "updated_at": "2025-08-25T04:31:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2296866701",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296866701"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": 1298,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296873010",
      "pull_request_review_id": 3149500267,
      "id": 2296873010,
      "node_id": "PRRC_kwDOABII586I54Ay",
      "diff_hunk": "@@ -27,65 +27,84 @@ def set_test_params(self):\n         # Avoid any -bind= on the command line. Force the framework to avoid\n         # adding -bind=127.0.0.1.\n         self.bind_to_localhost_only = False\n-        self.num_nodes = 3\n+        self.num_nodes = 1\n \n     def skip_test_if_missing_module(self):\n         # Due to OS-specific network stats queries, we only run on Linux.\n         self.skip_if_platform_not_linux()\n \n     def setup_network(self):\n+        # Only setup the node initially, we'll restart it with different configs\n+        self.setup_nodes()\n+\n+    def run_test(self):\n         loopback_ipv4 = addr_to_hex(\"127.0.0.1\")\n \n         # Start custom ports by reusing unused p2p ports\n+        # We'll use different ports for each test to avoid conflicts\n         port = p2p_port(self.num_nodes)\n \n-        # Array of tuples [command line arguments, expected bind addresses].\n-        self.expected = []\n+        # Array of tuples [command line arguments, expected bind addresses, test description].\n+        test_cases = []\n \n-        # Node0, no normal -bind=... with -bind=...=onion, thus only the tor target.\n-        self.expected.append(\n+        # Test case 1: no normal -bind=... with -bind=...=onion, thus only the tor target.\n+        test_cases.append(\n             [\n                 [f\"-bind=127.0.0.1:{port}=onion\"],\n-                [(loopback_ipv4, port)]\n+                [(loopback_ipv4, port)],\n+                \"no normal -bind with -bind=...=onion\"\n             ],\n         )\n-        port += 1\n+        port += 1 # Increment port to avoid conflicts\n \n-        # Node1, both -bind=... and -bind=...=onion.\n-        self.expected.append(\n+        # Test case 2: both -bind=... and -bind=...=onion.\n+        test_cases.append(\n             [\n                 [f\"-bind=127.0.0.1:{port}\", f\"-bind=127.0.0.1:{port + 1}=onion\"],\n-                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)],\n+                \"both -bind and -bind=...=onion\"\n             ],\n         )\n-        port += 2\n+        port += 2 # Increment port to avoid conflicts",
      "path": "test/functional/feature_bind_extra.py",
      "position": null,
      "original_position": 53,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "6b448e2eab007c9abd9f6be3c96a533641a73abc",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: in first case `increment` means +1, here it's `+1` - but more generally, the code is already, it's enough if we just document the intent:\r\n```suggestion\r\n        port += 2 # avoid conflicts since we've used two ports before\r\n```\r\n\r\n----\r\n\r\nor even better, why are we even reusing the same variable, why not create a port iterator and instead of the list a lambda accepting two ports something like (untested, since this test is skipped on a Mac):\r\n```python\r\ndef run_test(self):\r\n    lp = addr_to_hex(\"127.0.0.1\")\r\n    test_cases = [\r\n        lambda p, _: ([[f\"-bind=127.0.0.1:{p}=onion\"], # onion-only\r\n                       [(lp, p)], \"no normal -bind with -bind=...=onion\"]),\r\n        lambda p, q: ([[f\"-bind=127.0.0.1:{p}\", f\"-bind=127.0.0.1:{q}=onion\"], # bind + onion\r\n                       [(lp, p), (lp, q)], \"both -bind and -bind=...=onion\"]),\r\n        lambda p, _: ([[f\"-bind=127.0.0.1:{p}\"], # bind only\r\n                       [(lp, p)], \"no -bind=...=onion\"]),\r\n        lambda p, q: ([[f\"-bind=127.0.0.1:{p}\", f\"-bind=127.0.0.1:{p}\", f\"-bind=127.0.0.1:{q}\"], # duplicated bind\r\n                       [(lp, p), (lp, p), (lp, q)], \"duplicated -bind=... and -bind=...\"]),\r\n        lambda p, q: ([[f\"-bind=127.0.0.1:{p}=onion\", f\"-bind=127.0.0.1:{p}=onion\", f\"-bind=127.0.0.1:{q}=onion\"], # duplicated onion bind\r\n                       [(lp, p), (lp, p), (lp, q)], \"duplicated -bind=...=onion and -bind=...=onion\"]),\r\n    ]\r\n\r\n    ports = itertools.count(p2p_port(self.num_nodes))\r\n    for i, make in enumerate(test_cases):\r\n        args, expected_services, description = make(next(ports), next(ports))\r\n        self.log.info(f\"Test case {i + 1}: {description}\")\r\n        self.log.info(f\"Restarting node 0 with args: {args}\")\r\n```\r\n\r\n---\r\n\r\nIt's also a bit inconsistent that at the end we just hardcode `-bind=127.0.0.1:11012`, maybe we could extract that port as well",
      "created_at": "2025-08-25T00:26:20Z",
      "updated_at": "2025-08-25T04:31:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2296873010",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2296873010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2297089974",
      "pull_request_review_id": 3149500267,
      "id": 2297089974,
      "node_id": "PRRC_kwDOABII586I6s-2",
      "diff_hunk": "@@ -1233,6 +1233,94 @@ bool CheckHostPortOptions(const ArgsManager& args) {\n     return true;\n }\n \n+/**\n+ * @brief Deduplicates binding vectors internally and checks for cross-vector conflicts.\n+ *\n+ * For vWhiteBinds: Removes duplicates with identical service AND permissions, but reports\n+ * conflicts when same service has different permissions.\n+ * For other vectors: Simply removes duplicates.\n+ * Cross-vector duplicates are always reported as conflicts.\n+ *\n+ * @param vWhiteBinds Vector of whitelisted bind permissions (will be deduplicated)\n+ * @param vBinds Vector of regular bind services (will be deduplicated)\n+ * @param onion_binds Vector of onion-specific bind services (will be deduplicated)\n+ * @return std::optional<CService> containing the first conflict found, or std::nullopt if no conflicts\n+ */\n+std::optional<CService> DeduplicateAndCheckBindingConflicts(\n+    std::vector<NetWhitebindPermissions>& vWhiteBinds,\n+    std::vector<CService>& vBinds,\n+    std::vector<CService>& onion_binds)\n+{\n+    // Step 1: Handle vWhiteBinds deduplication with special logic for permissions\n+    {\n+        std::map<CService, NetPermissionFlags> seen_whitebinds;\n+        std::vector<NetWhitebindPermissions> deduplicated;\n+\n+        for (const auto& wb : vWhiteBinds) {\n+            auto it = seen_whitebinds.find(wb.m_service);\n+            if (it == seen_whitebinds.end()) {\n+                // First occurrence of this service\n+                seen_whitebinds[wb.m_service] = wb.m_flags;\n+                deduplicated.push_back(wb);\n+            } else if (it->second == wb.m_flags) {\n+                // Same service, same permissions - harmless duplicate, skip it\n+                continue;\n+            } else {\n+                // Same service, different permissions - conflict!\n+                return wb.m_service;\n+            }\n+        }\n+        vWhiteBinds = std::move(deduplicated);\n+    }\n+\n+    // Step 2: Simple deduplication for vBinds\n+    {\n+        std::set<CService> seen;\n+        auto it = std::remove_if(vBinds.begin(), vBinds.end(),\n+            [&seen](const CService& service) {\n+                return !seen.insert(service).second;  // Remove if already seen\n+            });\n+        vBinds.erase(it, vBinds.end());\n+    }\n+\n+    // Step 3: Simple deduplication for onion_binds\n+    {\n+        std::set<CService> seen;\n+        auto it = std::remove_if(onion_binds.begin(), onion_binds.end(),\n+            [&seen](const CService& service) {\n+                return !seen.insert(service).second;  // Remove if already seen\n+            });\n+        onion_binds.erase(it, onion_binds.end());",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "79d2c0fedaa8d0b3a0ab9ab3a5dbb38f47213b2e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I find it a bit inconsistent that we're not erring here - we don't know why they provided the same thing twice, seems like a mistake, not sure we should attempt to correct it silently. Would also simplify the code if we unified the way we handle these",
      "created_at": "2025-08-25T04:28:02Z",
      "updated_at": "2025-08-25T04:31:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2297089974",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2297089974"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1293,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2297095727",
      "pull_request_review_id": 3149879153,
      "id": 2297095727,
      "node_id": "PRRC_kwDOABII586I6uYv",
      "diff_hunk": "@@ -1233,6 +1233,94 @@ bool CheckHostPortOptions(const ArgsManager& args) {\n     return true;\n }\n \n+/**\n+ * @brief Deduplicates binding vectors internally and checks for cross-vector conflicts.\n+ *\n+ * For vWhiteBinds: Removes duplicates with identical service AND permissions, but reports\n+ * conflicts when same service has different permissions.\n+ * For other vectors: Simply removes duplicates.\n+ * Cross-vector duplicates are always reported as conflicts.\n+ *\n+ * @param vWhiteBinds Vector of whitelisted bind permissions (will be deduplicated)\n+ * @param vBinds Vector of regular bind services (will be deduplicated)\n+ * @param onion_binds Vector of onion-specific bind services (will be deduplicated)\n+ * @return std::optional<CService> containing the first conflict found, or std::nullopt if no conflicts\n+ */\n+std::optional<CService> DeduplicateAndCheckBindingConflicts(\n+    std::vector<NetWhitebindPermissions>& vWhiteBinds,\n+    std::vector<CService>& vBinds,\n+    std::vector<CService>& onion_binds)\n+{\n+    // Step 1: Handle vWhiteBinds deduplication with special logic for permissions\n+    {\n+        std::map<CService, NetPermissionFlags> seen_whitebinds;\n+        std::vector<NetWhitebindPermissions> deduplicated;\n+\n+        for (const auto& wb : vWhiteBinds) {\n+            auto it = seen_whitebinds.find(wb.m_service);\n+            if (it == seen_whitebinds.end()) {",
      "path": "src/init.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "1001b7ae76e4c5b9a275320a982cf68562f7f22e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: would make sense to invert this if wee keep this format, it makes a bit more sense to use `it` in the condition where we're checking it (would also enable embedding it in the condition).\r\nNot sure this applies if you remove the reundant deduplication code and use iteration instead of sets. I think that would simplify all of this considerably.",
      "created_at": "2025-08-25T04:34:37Z",
      "updated_at": "2025-08-25T04:34:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2297095727",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2297095727"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1261,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2297097850",
      "pull_request_review_id": 3149881805,
      "id": 2297097850,
      "node_id": "PRRC_kwDOABII586I6u56",
      "diff_hunk": "@@ -27,65 +28,116 @@ def set_test_params(self):\n         # Avoid any -bind= on the command line. Force the framework to avoid\n         # adding -bind=127.0.0.1.\n         self.bind_to_localhost_only = False\n-        self.num_nodes = 3\n+        self.num_nodes = 1\n \n     def skip_test_if_missing_module(self):\n         # Due to OS-specific network stats queries, we only run on Linux.\n         self.skip_if_platform_not_linux()\n \n     def setup_network(self):\n+        # Only setup the node initially, we'll restart it with different configs\n+        self.setup_nodes()\n+\n+    def run_test(self):\n         loopback_ipv4 = addr_to_hex(\"127.0.0.1\")\n \n         # Start custom ports by reusing unused p2p ports\n+        # We'll use different ports for each test to avoid conflicts\n         port = p2p_port(self.num_nodes)\n \n-        # Array of tuples [command line arguments, expected bind addresses].\n-        self.expected = []\n+        # Array of tuples [command line arguments, expected bind addresses, test description].\n+        test_cases = []\n \n-        # Node0, no normal -bind=... with -bind=...=onion, thus only the tor target.\n-        self.expected.append(\n+        # Test case 1: no normal -bind=... with -bind=...=onion, thus only the tor target.\n+        test_cases.append(\n             [\n                 [f\"-bind=127.0.0.1:{port}=onion\"],\n-                [(loopback_ipv4, port)]\n+                [(loopback_ipv4, port)],\n+                \"no normal -bind with -bind=...=onion\"\n             ],\n         )\n-        port += 1\n+        port += 1 # Increment port to avoid conflicts\n \n-        # Node1, both -bind=... and -bind=...=onion.\n-        self.expected.append(\n+        # Test case 2: both -bind=... and -bind=...=onion.\n+        test_cases.append(\n             [\n                 [f\"-bind=127.0.0.1:{port}\", f\"-bind=127.0.0.1:{port + 1}=onion\"],\n-                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)],\n+                \"both -bind and -bind=...=onion\"\n             ],\n         )\n-        port += 2\n+        port += 2 # Increment port to avoid conflicts\n \n-        # Node2, no -bind=...=onion, thus no extra port for Tor target.\n-        self.expected.append(\n+        # Test case 3: no -bind=...=onion, thus no extra port for Tor target.\n+        test_cases.append(\n             [\n                 [f\"-bind=127.0.0.1:{port}\"],\n-                [(loopback_ipv4, port)]\n+                [(loopback_ipv4, port)],\n+                \"no -bind=...=onion\"\n             ],\n         )\n-        port += 1\n+        port += 1 # Increment port to avoid conflicts\n \n-        self.extra_args = list(map(lambda e: e[0], self.expected))\n-        self.setup_nodes()\n+        # Test case 4: duplicated -bind=... and -bind=...\n+        test_cases.append(\n+            [\n+                [f\"-bind=127.0.0.1:{port}\", f\"-bind=127.0.0.1:{port}\", f\"-bind=127.0.0.1:{port + 1}\"],\n+                [(loopback_ipv4, port), (loopback_ipv4, port), (loopback_ipv4, port + 1)],\n+                \"duplicated -bind=... and -bind=...\"\n+            ],\n+        )\n+        port += 2\n \n-    def run_test(self):\n-        for i, (args, expected_services) in enumerate(self.expected):\n-            self.log.info(f\"Checking listening ports of node {i} with {args}\")\n-            pid = self.nodes[i].process.pid\n+        # Test case 5: duplicated -bind=...=onion and -bind=...=onion\n+        test_cases.append(\n+            [\n+                [f\"-bind=127.0.0.1:{port}=onion\", f\"-bind=127.0.0.1:{port}=onion\", f\"-bind=127.0.0.1:{port + 1}=onion\"],\n+                [(loopback_ipv4, port), (loopback_ipv4, port), (loopback_ipv4, port + 1)],\n+                \"duplicated -bind=...=onion and -bind=...=onion\"\n+            ],\n+        )\n+        port += 2\n+\n+        # Run each test case by restarting the node with different configurations\n+        for i, (args, expected_services, description) in enumerate(test_cases):\n+            self.log.info(f\"Test case {i + 1}: {description}\")\n+            self.log.info(f\"Restarting node 0 with args: {args}\")\n+\n+            # Restart the node with the new configuration\n+            self.restart_node(0, extra_args=args)\n+\n+            # Check the listening ports\n+            pid = self.nodes[0].process.pid\n             binds = set(get_bind_addrs(pid))\n+\n             # Remove IPv6 addresses because on some CI environments \"::1\" is not configured\n             # on the system (so our test_ipv6_local() would return False), but it is\n             # possible to bind on \"::\". This makes it unpredictable whether to expect\n             # that bitcoind has bound on \"::1\" (for RPC) and \"::\" (for P2P).\n             ipv6_addr_len_bytes = 32\n             binds = set(filter(lambda e: len(e[0]) != ipv6_addr_len_bytes, binds))\n+\n             # Remove RPC ports. They are not relevant for this test.\n-            binds = set(filter(lambda e: e[1] != rpc_port(i), binds))\n+            binds = set(filter(lambda e: e[1] != rpc_port(0), binds))\n+\n+            self.log.info(f\"Expected binds: {expected_services}\")\n+            self.log.info(f\"Actual binds: {binds}\")\n+\n             assert_equal(binds, set(expected_services))\n+            self.log.info(f\"Test case {i + 1} passed!\\n\")\n+\n+        self.stop_node(0)\n+\n+        self.nodes[0].assert_start_raises_init_error(\n+            [\"-bind=127.0.0.1:11012\", \"-bind=127.0.0.1:11012=onion\"],\n+            \"Different binding configurations assigned to the address 127.0.0.1:11012\",",
      "path": "test/functional/feature_bind_extra.py",
      "position": null,
      "original_position": 136,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "1001b7ae76e4c5b9a275320a982cf68562f7f22e",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: if it's a regex, we need to escape some chars",
      "created_at": "2025-08-25T04:37:01Z",
      "updated_at": "2025-08-25T04:37:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2297097850",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2297097850"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 133,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301123345",
      "pull_request_review_id": 3155820862,
      "id": 2301123345,
      "node_id": "PRRC_kwDOABII586JKFsR",
      "diff_hunk": "@@ -2142,6 +2176,12 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     connOptions.m_i2p_accept_incoming = args.GetBoolArg(\"-i2pacceptincoming\", DEFAULT_I2P_ACCEPT_INCOMING);\n \n+    if (auto conflict = CheckBindingConflicts(connOptions)) {\n+        return InitError(Untranslated(strprintf(\"Duplicate binding configuration for address %s. \"",
      "path": "src/init.cpp",
      "position": 46,
      "original_position": 46,
      "commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "original_commit_id": "28fb7f74c4ae66dcb0f918774d644ac3c393f25b",
      "in_reply_to_id": null,
      "user": {
        "login": "cedwies",
        "id": 141683552,
        "node_id": "U_kgDOCHHrYA",
        "avatar_url": "https://avatars.githubusercontent.com/u/141683552?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cedwies",
        "html_url": "https://github.com/cedwies",
        "followers_url": "https://api.github.com/users/cedwies/followers",
        "following_url": "https://api.github.com/users/cedwies/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cedwies/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cedwies/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cedwies/subscriptions",
        "organizations_url": "https://api.github.com/users/cedwies/orgs",
        "repos_url": "https://api.github.com/users/cedwies/repos",
        "events_url": "https://api.github.com/users/cedwies/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cedwies/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice and clear! One small UX suggestion: since we already know which container the duplicate came from, it could be helpful to mention the categories in the error (e.g. “-bind vs -whitebind”). That said, even without categories, I think this should at least be translatable for consistency with nearby init errors (e.g. `i2psam`). Something like: \n```cpp\nreturn InitError(strprintf(\n    _(\"Duplicate binding configuration for address %s. \"\n      \"Please check your -bind, -whitebind, and onion binding settings.\"),\n    conflict->ToStringAddrPort()));\n```",
      "created_at": "2025-08-26T14:07:07Z",
      "updated_at": "2025-08-26T14:53:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33231#discussion_r2301123345",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2301123345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33231"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2180,
      "original_line": 2180,
      "side": "RIGHT"
    }
  ]
}