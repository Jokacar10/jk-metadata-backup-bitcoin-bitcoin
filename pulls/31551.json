{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551",
    "id": 2247912710,
    "node_id": "PR_kwDOABII586F_G0G",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31551",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31551.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31551.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
    "number": 31551,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "[IBD] batch block reads/writes during `AutoFile` serialization",
    "user": {
      "login": "l0rinc",
      "id": 1841944,
      "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l0rinc",
      "html_url": "https://github.com/l0rinc",
      "followers_url": "https://api.github.com/users/l0rinc/followers",
      "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
      "organizations_url": "https://api.github.com/users/l0rinc/orgs",
      "repos_url": "https://api.github.com/users/l0rinc/repos",
      "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/l0rinc/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This change is part of [[IBD] - Tracking PR for speeding up Initial Block Download](https://github.com/bitcoin/bitcoin/pull/32043)\r\n\r\n### Summary\r\nWe can serialize the blocks and undos to any `Stream` which implements the appropriate read/write methods.\r\n`AutoFile` is one of these, writing the results \"directly\" to disk (through the OS file cache). Batching these in memory first and reading/writing these to disk is measurably faster (likely because of fewer native fread calls or less locking, as [observed](https://github.com/bitcoin/bitcoin/pull/28226#issuecomment-1666842501) by Martinus in a similar change).\r\n\r\n### Unlocking new optimization opportunities\r\n\r\nBuffered writes will also enable batched obfuscation calculations (implemented in https://github.com/bitcoin/bitcoin/pull/31144) - especially since currently we need to copy the write input's std::span to do the obfuscation on it, and batching enables doing the operations on the internal buffer directly.\r\n\r\n### Measurements (micro benchmarks, full IBDs and reindexes)\r\n\r\nMicrobenchmarks for `[Read|Write]BlockBench` show a ~**30%**/**168%** speedup with `macOS/Clang`, and ~**19%**/**24%** with `Linux/GCC` (the follow-up XOR batching improves these further):\r\n\r\n<details>\r\n<summary>macOS Sequoia - Clang 19.1.7</summary>\r\n\r\n> Before:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        2,271,441.67 |              440.25 |    0.1% |     11.00 | `ReadBlockBench`\r\n|        5,149,564.31 |              194.19 |    0.8% |     10.95 | `WriteBlockBench`\r\n\r\n> After:\r\n\r\n|               ns/op |                op/s |    err% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------:|:----------\r\n|        1,738,683.04 |              575.15 |    0.2% |     11.04 | `ReadBlockBench`\r\n|        3,052,658.88 |              327.58 |    1.0% |     10.91 | `WriteBlockBench`\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>Ubuntu 24 - GNU 13.3.0</summary>\r\n\r\n> Before:\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        6,895,987.11 |              145.01 |    0.0% |   71,055,269.86 |   23,977,374.37 |  2.963 |   5,074,828.78 |    0.4% |     22.00 | `ReadBlockBench`\r\n|        5,152,973.58 |              194.06 |    2.2% |   19,350,886.41 |    8,784,539.75 |  2.203 |   3,079,335.21 |    0.4% |     23.18 | `WriteBlockBench`\r\n\r\n> After:\r\n\r\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\r\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\r\n|        5,771,882.71 |              173.25 |    0.0% |   65,741,889.82 |   20,453,232.33 |  3.214 |   3,971,321.75 |    0.3% |     22.01 | `ReadBlockBench`\r\n|        4,145,681.13 |              241.21 |    4.0% |   15,337,596.85 |    5,732,186.47 |  2.676 |   2,239,662.64 |    0.1% |     23.94 | `WriteBlockBench`\r\n\r\n</details>\r\n\r\n\r\n2 full IBD runs against master (compiled with GCC where the gains seem more modest) for **888888** blocks (seeded from real nodes) indicates a ~**7%** total speedup.\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nCOMMITS=\"d2b72b13699cf460ffbcb1028bcf5f3b07d3b73a 652b4e3de5c5e09fb812abe265f4a8946fa96b54\"; \\\r\nSTOP_HEIGHT=888888; DBCACHE=1000; \\\r\nC_COMPILER=gcc; CXX_COMPILER=g++; \\\r\nBASE_DIR=\"/mnt/my_storage\"; DATA_DIR=\"$BASE_DIR/BitcoinData\"; LOG_DIR=\"$BASE_DIR/logs\"; \\\r\n(for c in $COMMITS; do git fetch origin $c -q && git log -1 --pretty=format:'%h %s' $c || exit 1; done) && \\\r\nhyperfine \\\r\n  --sort 'command' \\\r\n  --runs 2 \\\r\n  --export-json \"$BASE_DIR/ibd-${COMMITS// /-}-$STOP_HEIGHT-$DBCACHE-$C_COMPILER.json\" \\\r\n  --parameter-list COMMIT ${COMMITS// /,} \\\r\n  --prepare \"killall bitcoind; rm -rf $DATA_DIR/*; git checkout {COMMIT}; git clean -fxd; git reset --hard; \\\r\n    cmake -B build -DCMAKE_BUILD_TYPE=Release -DENABLE_WALLET=OFF -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER && \\\r\n    cmake --build build -j$(nproc) --target bitcoind && \\\r\n    ./build/bin/bitcoind -datadir=$DATA_DIR -stopatheight=1 -printtoconsole=0; sleep 100\" \\\r\n  --cleanup \"cp $DATA_DIR/debug.log $LOG_DIR/debug-{COMMIT}-$(date +%s).log\" \\\r\n  \"COMPILER=$C_COMPILER COMMIT=${COMMIT:0:10} ./build/bin/bitcoind -datadir=$DATA_DIR -stopatheight=$STOP_HEIGHT -dbcache=$DBCACHE -blocksonly -printtoconsole=0\"\r\nd2b72b1369 refactor: rename leftover WriteBlockBench\r\n652b4e3de5 optimization: Bulk serialization writes in `WriteBlockUndo` and `WriteBlock`\r\nBenchmark 1: COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=1000 -blocksonly -printtoconsole=0 (COMMIT = d2b72b13699cf460ffbcb1028bcf5f3b07d3b73a)\r\n  Time (mean ± σ):     41528.104 s ± 354.003 s    [User: 44324.407 s, System: 3074.829 s]\r\n  Range (min … max):   41277.786 s … 41778.421 s    2 runs\r\n \r\nBenchmark 2: COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=1000 -blocksonly -printtoconsole=0 (COMMIT = 652b4e3de5c5e09fb812abe265f4a8946fa96b54)\r\n  Time (mean ± σ):     38771.457 s ± 441.941 s    [User: 41930.651 s, System: 3222.664 s]\r\n  Range (min … max):   38458.957 s … 39083.957 s    2 runs\r\n \r\nRelative speed comparison\r\n        1.07 ±  0.02  COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=1000 -blocksonly -printtoconsole=0 (COMMIT = d2b72b13699cf460ffbcb1028bcf5f3b07d3b73a)\r\n        1.00          COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=1000 -blocksonly -printtoconsole=0 (COMMIT = 652b4e3de5c5e09fb812abe265f4a8946fa96b54)\r\n```\r\n\r\n</details>",
    "labels": [],
    "created_at": "2024-12-21T14:34:11Z",
    "updated_at": "2025-04-14T10:15:23Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "ce9dddbf42b50d4a8a7433398964ea812dd183e8",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "l0rinc:l0rinc/bulk-block-read-write",
      "ref": "l0rinc/bulk-block-read-write",
      "sha": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 674169038,
        "node_id": "R_kgDOKC8Azg",
        "name": "bitcoin",
        "full_name": "l0rinc/bitcoin",
        "owner": {
          "login": "l0rinc",
          "id": 1841944,
          "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/l0rinc",
          "html_url": "https://github.com/l0rinc",
          "followers_url": "https://api.github.com/users/l0rinc/followers",
          "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
          "organizations_url": "https://api.github.com/users/l0rinc/orgs",
          "repos_url": "https://api.github.com/users/l0rinc/repos",
          "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/l0rinc/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/l0rinc/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/l0rinc/bitcoin",
        "archive_url": "https://api.github.com/repos/l0rinc/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/l0rinc/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/l0rinc/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/l0rinc/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/l0rinc/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/l0rinc/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/l0rinc/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/l0rinc/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/l0rinc/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/l0rinc/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/l0rinc/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/l0rinc/bitcoin/events",
        "forks_url": "https://api.github.com/repos/l0rinc/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/l0rinc/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/l0rinc/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/l0rinc/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/l0rinc/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/l0rinc/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/l0rinc/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/l0rinc/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/l0rinc/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/l0rinc/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/l0rinc/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/l0rinc/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/l0rinc/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:l0rinc/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/l0rinc/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/l0rinc/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/l0rinc/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/l0rinc/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/l0rinc/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/l0rinc/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/l0rinc/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/l0rinc/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/l0rinc/bitcoin/hooks",
        "svn_url": "https://github.com/l0rinc/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 258332,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-04-14T10:13:35Z",
        "created_at": "2023-08-03T09:49:12Z",
        "updated_at": "2025-04-10T09:35:41Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "51166559808c3528f148b5c0c38cb4481e536dd8",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37036,
        "stargazers_count": 82875,
        "watchers_count": 82875,
        "size": 279767,
        "default_branch": "master",
        "open_issues_count": 698,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-04-14T09:59:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-04-14T10:00:04Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 330,
    "deletions": 86,
    "changed_files": 7,
    "commits": 8,
    "review_comments": 128,
    "comments": 31
  },
  "events": [
    {
      "event": "mentioned",
      "id": 15739706237,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAOqKNt9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15739706237",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-21T14:34:12Z"
    },
    {
      "event": "subscribed",
      "id": 15739706241,
      "node_id": "SE_lADOABII586kKCBYzwAAAAOqKNuB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15739706241",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-21T14:34:12Z"
    },
    {
      "event": "commented",
      "id": 2558138730,
      "node_id": "IC_kwDOABII586Yehlq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2558138730",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-21T14:34:14Z",
      "updated_at": "2025-04-14T10:13:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31551.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Stale ACK | [hodlinator](https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2749056885), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2750506595), [maflcko](https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2800974237) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32043](https://github.com/bitcoin/bitcoin/pull/32043) ([IBD] Tracking PR for speeding up Initial Block Download by l0rinc)\n* [#31144](https://github.com/bitcoin/bitcoin/pull/31144) ([IBD] multi-byte block obfuscation by l0rinc)\n* [#29700](https://github.com/bitcoin/bitcoin/pull/29700) (kernel, refactor: return error status on all fatal errors by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2558138730",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15739708459,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAOqKOQr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15739708459",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1f9f1e65cc6316a800aaf145c22423c189852ba7",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/1f9f1e65cc6316a800aaf145c22423c189852ba7",
      "created_at": "2024-12-21T14:35:36Z"
    },
    {
      "event": "renamed",
      "id": 15739750328,
      "node_id": "RTE_lADOABII586kKCBYzwAAAAOqKYe4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15739750328",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-21T15:00:53Z",
      "rename": {
        "from": "optimization: bulk reads(27%)/writes(290%) in [undo]block [de]serialization",
        "to": "optimization: bulk reads(27%)/writes(290%) in [undo]block [de]serialization, 6% faster IBD"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15739811707,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAOqKnd7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15739811707",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1f736fbdb49fee1d79104b4230a741701becae38",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/1f736fbdb49fee1d79104b4230a741701becae38",
      "created_at": "2024-12-21T15:40:41Z"
    },
    {
      "event": "labeled",
      "id": 16033080808,
      "node_id": "LE_lADOABII586kKCBYzwAAAAO7pWXo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16033080808",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-22T18:14:07Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16034660510,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAO7vYCe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16034660510",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "69716334a62e98806799f5c61588860e1fb287d9",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/69716334a62e98806799f5c61588860e1fb287d9",
      "created_at": "2025-01-22T20:45:18Z"
    },
    {
      "event": "unlabeled",
      "id": 16034805162,
      "node_id": "UNLE_lADOABII586kKCBYzwAAAAO7v7Wq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16034805162",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-22T21:00:00Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16035926563,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAO70NIj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16035926563",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "11ace71e795567afe679047856f51b80f9eacb39",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/11ace71e795567afe679047856f51b80f9eacb39",
      "created_at": "2025-01-22T23:04:45Z"
    },
    {
      "event": "ready_for_review",
      "id": 16035926974,
      "node_id": "RFRE_lADOABII586kKCBYzwAAAAO70NO-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16035926974",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-22T23:04:49Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16035999244,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAO70e4M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16035999244",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b5d4f8c7d90addd6e3b066ae6eb2a96adbeec859",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/b5d4f8c7d90addd6e3b066ae6eb2a96adbeec859",
      "created_at": "2025-01-22T23:14:36Z"
    },
    {
      "event": "commented",
      "id": 2608461404,
      "node_id": "IC_kwDOABII586befZc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2608461404",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-22T23:14:41Z",
      "updated_at": "2025-01-22T23:14:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/36027778098</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2608461404",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "labeled",
      "id": 16035999774,
      "node_id": "LE_lADOABII586kKCBYzwAAAAO70fAe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16035999774",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-22T23:14:41Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16036011687,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAO70h6n",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16036011687",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0e9fb2ed330960c0e4cd36b077c64ac7d0f84240",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/0e9fb2ed330960c0e4cd36b077c64ac7d0f84240",
      "created_at": "2025-01-22T23:16:28Z"
    },
    {
      "event": "unlabeled",
      "id": 16037497037,
      "node_id": "UNLE_lADOABII586kKCBYzwAAAAO76MjN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16037497037",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-23T02:46:45Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 16041845161,
      "node_id": "CTDE_lADOABII586kKCBYzwAAAAO8KyGp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16041845161",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-23T10:40:41Z"
    },
    {
      "event": "ready_for_review",
      "id": 16041847910,
      "node_id": "RFRE_lADOABII586kKCBYzwAAAAO8Kyxm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16041847910",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-23T10:40:55Z"
    },
    {
      "event": "unsubscribed",
      "id": 16057144805,
      "node_id": "UE_lADOABII586kKCBYzwAAAAO9FJXl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16057144805",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-24T11:12:58Z"
    },
    {
      "event": "reviewed",
      "id": 2572715478,
      "node_id": "PRR_kwDOABII586ZWIXW",
      "url": null,
      "actor": null,
      "commit_id": "0e9fb2ed330960c0e4cd36b077c64ac7d0f84240",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2572715478",
      "submitted_at": "2025-01-24T13:58:44Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16059493555,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAO9OGyz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16059493555",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2a5c52ac4e0c098dc6dcf354d9e00fc5c78b6dfe",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/2a5c52ac4e0c098dc6dcf354d9e00fc5c78b6dfe",
      "created_at": "2025-01-24T14:28:20Z"
    },
    {
      "event": "reviewed",
      "id": 2572995240,
      "node_id": "PRR_kwDOABII586ZXMqo",
      "url": null,
      "actor": null,
      "commit_id": "2a5c52ac4e0c098dc6dcf354d9e00fc5c78b6dfe",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2572995240",
      "submitted_at": "2025-01-24T15:57:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
    },
    {
      "event": "commented",
      "id": 2612878047,
      "node_id": "IC_kwDOABII586bvVrf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2612878047",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-24T16:04:55Z",
      "updated_at": "2025-01-24T16:04:55Z",
      "author_association": "MEMBER",
      "body": "> 2 full IBD runs against master for 870k blocks (seeded from real nodes) indicates a 6% total speedup.\r\n> Note that this is only measurable with full IBD, not with `reindex(-chainstate)` since the gain comes from block reading/writing.\r\n\r\nI don't understand this. `-reindex(-chainstate)` requires the read of blocks, so why would it not be measurable? See also https://github.com/bitcoin/bitcoin/pull/28226 which this pull is inspired by(?) and which claims a speedup in reindex-chainstate.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2612878047",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16061009968,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAO9T5Aw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16061009968",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "97b4a50c714c801e08bc02648a9c259f284069c2",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/97b4a50c714c801e08bc02648a9c259f284069c2",
      "created_at": "2025-01-24T16:26:01Z"
    },
    {
      "event": "commented",
      "id": 2612930904,
      "node_id": "IC_kwDOABII586bvilY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2612930904",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-24T16:30:15Z",
      "updated_at": "2025-01-24T16:30:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "> which claims a speedup in reindex-chainstate\r\n\r\n> So the 9% improvement in unserializing seems to translate to roughly 1.2% total runtime improvement in -reindex-chainstate on my machine.\r\n\r\nI can measure several runs to see if it makes any difference (to be able to claim anything reliable about a ~1% potential speedup), but the reads are only 27% faster, while the writes are 2.9x faster, so I'm not surprised that reindex doesn't shine compared to IBD. But I'm currently rerunning them with the rebased PR to make sure my measurements were realistic.\r\nIf you have any concrete measurement you'd like me to do, feel free to specify them.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2612930904",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16070867727,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAO95fsP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16070867727",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2ecec47d9f3662c6de63eb64801f13f2ee528a9b",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/2ecec47d9f3662c6de63eb64801f13f2ee528a9b",
      "created_at": "2025-01-26T19:19:01Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16070900925,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAO95ny9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16070900925",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "bd5c3e33b90410e113f9eae7313d667b60f40d45",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/bd5c3e33b90410e113f9eae7313d667b60f40d45",
      "created_at": "2025-01-26T19:34:53Z"
    },
    {
      "event": "renamed",
      "id": 16080686494,
      "node_id": "RTE_lADOABII586kKCBYzwAAAAO-e82e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16080686494",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-27T16:30:35Z",
      "rename": {
        "from": "optimization: bulk reads(27%)/writes(290%) in [undo]block [de]serialization, 6% faster IBD",
        "to": "optimization: bulk reads(32%)/writes(298%) in [undo]block [de]serialization, ~6% faster IBD"
      }
    },
    {
      "event": "commented",
      "id": 2616340323,
      "node_id": "IC_kwDOABII586b8i9j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2616340323",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-27T16:48:18Z",
      "updated_at": "2025-01-27T16:57:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "> which this pull is inspired by(?)\r\n\r\nI did bump into it, but basically reinvented it (not the first time) while investigating why XOR is slow.\r\nI'll add @martinus as a coauthor as well, thanks for the hint @maflcko, he deserves it.\r\n\r\n------\r\n\r\n> -reindex(-chainstate) requires the read of blocks, so why would it not be measurable? \r\n\r\nThanks for the push, I have redone all the measurements:\r\n`reindex-chainstate` is very stable (see the updated PR description for details), two runs indicate a 4% speedup (with GCC, will try with Clang as well since it indicated a bigger speedup in the microbenchmarks):\r\n```bash\r\nSummary\r\n  COMMIT=97b4a50c714c801e08bc02648a9c259f284069c2 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=880000 -dbcache=30000 -printtoconsole=0 -reindex-chainstate -connect=0 ran\r\n    1.04 ± 0.00 times faster than COMMIT=5acf12bafeb126f2190b3f401f95199e0eea90c9 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=880000 -dbcache=30000 -printtoconsole=0 -reindex-chainstate -connect=0\r\n```\r\n\r\n\r\nWhile IBD is closer to the user's experience (having actual block- and undo writes, which is important since they were modified here), it's also less stable, so I ran 3 rounds of each, indicating a 6% speedup (bringing reindex and IBD speeds closer together):\r\n```bash \r\nSummary\r\n  COMMIT=0e9fb2ed330960c0e4cd36b077c64ac7d0f84240 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=880000 -dbcache=30000 -printtoconsole=0 ran\r\n    1.06 ± 0.02 times faster than COMMIT=5acf12bafeb126f2190b3f401f95199e0eea90c9 ./build/src/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=880000 -dbcache=30000 -printtoconsole=0\r\n```\r\n\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2616340323",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "mentioned",
      "id": 16080946131,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAO-f8PT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16080946131",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-27T16:48:19Z"
    },
    {
      "event": "subscribed",
      "id": 16080946151,
      "node_id": "SE_lADOABII586kKCBYzwAAAAO-f8Pn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16080946151",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-27T16:48:19Z"
    },
    {
      "event": "mentioned",
      "id": 16080946168,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAO-f8P4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16080946168",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-27T16:48:19Z"
    },
    {
      "event": "subscribed",
      "id": 16080946184,
      "node_id": "SE_lADOABII586kKCBYzwAAAAO-f8QI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16080946184",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-27T16:48:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16080971460,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAO-gCbE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16080971460",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d700b14491a27a6f4f9069dde86fe914784346ca",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/d700b14491a27a6f4f9069dde86fe914784346ca",
      "created_at": "2025-01-27T16:50:01Z"
    },
    {
      "event": "renamed",
      "id": 16714359510,
      "node_id": "RTE_lADOABII586kKCBYzwAAAAPkQOLW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16714359510",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T13:59:20Z",
      "rename": {
        "from": "optimization: bulk reads(32%)/writes(298%) in [undo]block [de]serialization, ~6% faster IBD",
        "to": "[IBD] batch `AutoFile` reads/writes during serialization"
      }
    },
    {
      "event": "mentioned",
      "id": 16714362960,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAPkQPBQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16714362960",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T13:59:31Z"
    },
    {
      "event": "subscribed",
      "id": 16714362988,
      "node_id": "SE_lADOABII586kKCBYzwAAAAPkQPBs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16714362988",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T13:59:31Z"
    },
    {
      "event": "mentioned",
      "id": 16714363033,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAPkQPCZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16714363033",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T13:59:31Z"
    },
    {
      "event": "subscribed",
      "id": 16714363055,
      "node_id": "SE_lADOABII586kKCBYzwAAAAPkQPCv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16714363055",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T13:59:31Z"
    },
    {
      "event": "mentioned",
      "id": 16714383183,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAPkQT9P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16714383183",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T14:00:37Z"
    },
    {
      "event": "subscribed",
      "id": 16714383224,
      "node_id": "SE_lADOABII586kKCBYzwAAAAPkQT94",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16714383224",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T14:00:37Z"
    },
    {
      "event": "renamed",
      "id": 16714405172,
      "node_id": "RTE_lADOABII586kKCBYzwAAAAPkQZU0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16714405172",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T14:01:50Z",
      "rename": {
        "from": "[IBD] batch `AutoFile` reads/writes during serialization",
        "to": "[IBD] batch block reads/writes during `AutoFile` serialization"
      }
    },
    {
      "event": "commented",
      "id": 2722752125,
      "node_id": "IC_kwDOABII586iSeZ9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2722752125",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-13T21:40:09Z",
      "updated_at": "2025-03-13T21:40:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review d700b14491a27a6f4f9069dde86fe914784346ca\r\n\r\nThis approach seems reaonable but maybe it would be good to have a more general solution to providing buffered reads and writes instead of having these ad-hoc `std::vector<uint8_t>` / `SpanReader` / `DataStream` / `write_large` calls.\r\n\r\nIdeally instead of:\r\n\r\n```c++\r\nstd::vector<uint8_t> mem(blk_size);\r\nfilein >> Span{mem};\r\nSpanReader(mem) >> TX_WITH_WITNESS(block);\r\n// ...\r\nfileout.write_large(DataStream(block_size) << TX_WITH_WITNESS(block));\r\n```\r\n\r\nCode could look more like:\r\n\r\n```c++\r\nBufferedReader{fileIn, blk_size} >> TX_WITH_WITNESS(block);\r\n// ...\r\nBufferedWriter{fileout, block_size} << TX_WITH_WITNESS(block);\r\n```\r\n\r\nBut I guess as long as the buffers are only going to be used once and thrown away in this case (and not be fixed-size ring buffers) having buffer classes wouldn't substantively improve this code much aside from making it look nicer. Buffer stream classes would seem more useful in cases where more fields are serialized and sizes are not known in advance.\r\n\r\nJust wanted to suggest this in case there are other places where serialization is slow and buffering could speed it up. We might want a more general solution if that is the case.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2722752125",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16775140131,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAPn4FMj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16775140131",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "177a3bff143ae41a536b4d2b5a44a255b768bf32",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/177a3bff143ae41a536b4d2b5a44a255b768bf32",
      "created_at": "2025-03-14T14:01:53Z"
    },
    {
      "event": "commented",
      "id": 2724844748,
      "node_id": "IC_kwDOABII586iadTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2724844748",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T14:20:09Z",
      "updated_at": "2025-03-14T14:20:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the review @ryanofsky \r\n\r\n> would be good to have a more general solution to providing buffered reads and writes\r\n\r\nThat's what I had originally (with a fixed-size buffer, so was even more general than your suggestion), making the call-site-diff trivial: https://github.com/bitcoin/bitcoin/pull/31539.\r\nIt was suggested by @theuni that it may be simpler to serialize to buffer directly. It does seem simpler to reason about this one, especially since they basically had the same speed. What do you think?\r\n\r\nWhat other places are candidates for similar buffering?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2724844748",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "mentioned",
      "id": 16775416649,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAPn5ItJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16775416649",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T14:20:10Z"
    },
    {
      "event": "subscribed",
      "id": 16775416674,
      "node_id": "SE_lADOABII586kKCBYzwAAAAPn5Iti",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16775416674",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T14:20:10Z"
    },
    {
      "event": "mentioned",
      "id": 16775416692,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAPn5It0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16775416692",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T14:20:10Z"
    },
    {
      "event": "subscribed",
      "id": 16775416715,
      "node_id": "SE_lADOABII586kKCBYzwAAAAPn5IuL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16775416715",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T14:20:10Z"
    },
    {
      "event": "commented",
      "id": 2725048933,
      "node_id": "IC_kwDOABII586ibPJl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2725048933",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T15:33:48Z",
      "updated_at": "2025-03-14T15:33:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "No strong opinion. I guess I'd be a little disappointed if you initially had a general solution that made it easy to enable buffering any place and then were told that instead of using that, you should add kludges to this code and implement ad-hoc buffering here. I don't think buffering is difficult to reason about and don't think buffering is the type of thing that needs to be deployed on a case-by-case basis, especially since performance of buffering should mostly depend on *where* data is being written, not *what* data is being written. So if there is evidence that XORed file i/o is faster with buffering one place, probably we should expect XORed file i/o with buffering to be faster other places as well.\r\n\r\nI have no problems with current version of this PR though, and I can understand reasons why there might be pushback against implementation in #31539 since since the BufferedReadOnlyFile class implemented there duplicated functionality of AutoFile, didn't support writing, and didn't work with any type of stream. So it could be faulted not just for introducing a new abstraction, but for the abstraction not being usable in more places and not being compatible with current stream classes.\r\n\r\nWould maybe suggest adding a little \"Design considerations\" or \"Alternatives considered\" section to end of PR description to link to #31539 and say how current design was chosen, because it would have been useful to see and know about the alternative when reviewing this PR.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2725048933",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "commented",
      "id": 2725167625,
      "node_id": "IC_kwDOABII586ibsIJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2725167625",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T16:20:54Z",
      "updated_at": "2025-03-14T16:20:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "> since the BufferedReadOnlyFile class implemented there duplicated functionality of AutoFile, didn't support writing, and didn't work with any type of stream\r\n\r\nThere was a writer as well, but it resulted in some [weird CI failures](https://github.com/bitcoin/bitcoin/pull/31539#issuecomment-2612262087) and given this alternative I just closed the PR.\r\n\r\n> disappointed if you initially had a general solution that made it easy to enable buffering any place and then were told that instead of using that\r\n\r\nNo, the suggested approach was better, that's why I kept this one. I'd be curious what other reviewers think, but I don't mind re-generalizing it (now or in a follow-up, when we find other usages).\r\n\r\n> XORed file i/o is faster with buffering one place, probably we should expect XORed file i/o with buffering to be faster other places as well\r\n\r\nIt's not just the xor though, many small writes seemed to be slower in general, it seems faster if *we* buffer instead of the OS (likely because of locality, the file is a global resource that needs locking).\r\n\r\n> don't think buffering is the type of thing that needs to be deployed on a case-by-case basis\r\n\r\nI can get behind that, can you point me to other usages where we could use this?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2725167625",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "commented",
      "id": 2725260200,
      "node_id": "IC_kwDOABII586icCuo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2725260200",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T17:01:36Z",
      "updated_at": "2025-03-14T17:01:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I can get behind that, can you point me to other usages where we could use this?\r\n\r\nI don't know, but if I were looking I'd just grep for places where AutoFile class is used. I don't have any real concerns here and I'm fine with the current approach. To the extent I do have concerns they are about readability and maintainability of code not performance, so I like an approach that makes it trivial to turn buffering on and off, which is I why thought BufferedReader / BufferedWriter stream adapters suggested in https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2722752125 might be a good idea. But when I posted that I didn't know a similar idea had already been tried before, so wouldn't suggest changing the approach again at this point without feedback from the other reviewers.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2725260200",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16781681386,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAPoRCLq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16781681386",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5a1c2bd341c9586b090b6b40c20edb011cb616eb",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/5a1c2bd341c9586b090b6b40c20edb011cb616eb",
      "created_at": "2025-03-14T22:39:11Z"
    },
    {
      "event": "commented",
      "id": 2725980816,
      "node_id": "IC_kwDOABII586ieyqQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2725980816",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T23:09:38Z",
      "updated_at": "2025-03-14T23:10:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks again for the hint @ryanofsky, I went through all changes again and [reworked the batching](https://github.com/bitcoin/bitcoin/compare/177a3bff143ae41a536b4d2b5a44a255b768bf32..5a1c2bd341c9586b090b6b40c20edb011cb616eb) - it's so much better this way and it includes your idea, @theuni's and @maflcko's.\r\n\r\nAdditionally I fixed a few things after rebase:\r\n* There was a  leftover `SaveBlock` from the previous refactor;\r\n* Commits and docs still contained `build/src/benc/bench_bitcoin` - changed them to `build/bin/bench_bitcoin`;\r\n* `BLOCK_SERIALIZATION_HEADER_SIZE` is used inline in the examples now and is too long - simplified it in a separate commit;\r\n* Added `BufferedFileW` and `BufferedFileR`, encapsulating the buffering (and the new `AutoFile::write_large`) so that we can have a similar usage to what you suggested;\r\n* I have also extracted the low-risk refactorings (which are needed for the batching later) to a separate commit to minimize the diffs in the risky commits.\r\n\r\nThe performance is same as before, the commits should be a lot simpler to review.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2725980816",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "mentioned",
      "id": 16782030617,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAPoSXcZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16782030617",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T23:09:39Z"
    },
    {
      "event": "subscribed",
      "id": 16782030628,
      "node_id": "SE_lADOABII586kKCBYzwAAAAPoSXck",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16782030628",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T23:09:40Z"
    },
    {
      "event": "mentioned",
      "id": 16782036570,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAPoSY5a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16782036570",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T23:10:40Z"
    },
    {
      "event": "subscribed",
      "id": 16782036584,
      "node_id": "SE_lADOABII586kKCBYzwAAAAPoSY5o",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16782036584",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T23:10:40Z"
    },
    {
      "event": "mentioned",
      "id": 16782036595,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAPoSY5z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16782036595",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T23:10:40Z"
    },
    {
      "event": "subscribed",
      "id": 16782036607,
      "node_id": "SE_lADOABII586kKCBYzwAAAAPoSY5_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16782036607",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T23:10:40Z"
    },
    {
      "event": "labeled",
      "id": 16899707163,
      "node_id": "LE_lADOABII586kKCBYzwAAAAPvTREb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16899707163",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T10:14:15Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16909543247,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAPv4ydP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16909543247",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6d06fb4b2b876c7e2de762ede517079517d14375",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/6d06fb4b2b876c7e2de762ede517079517d14375",
      "created_at": "2025-03-20T13:29:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16909650379,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAPv5MnL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16909650379",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cf019b73a7487df6bf15d2950a013723bf007405",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/cf019b73a7487df6bf15d2950a013723bf007405",
      "created_at": "2025-03-20T13:35:50Z"
    },
    {
      "event": "labeled",
      "id": 16909651819,
      "node_id": "LE_lADOABII586kKCBYzwAAAAPv5M9r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16909651819",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T13:35:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2740482830,
      "node_id": "IC_kwDOABII586jWHMO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2740482830",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T13:35:56Z",
      "updated_at": "2025-03-20T13:35:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/39110927855</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2740482830",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "reviewed",
      "id": 2702960726,
      "node_id": "PRR_kwDOABII586hG-hW",
      "url": null,
      "actor": null,
      "commit_id": "cf019b73a7487df6bf15d2950a013723bf007405",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2702960726",
      "submitted_at": "2025-03-20T14:25:45Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
    },
    {
      "event": "unlabeled",
      "id": 16912138761,
      "node_id": "UNLE_lADOABII586kKCBYzwAAAAPwCsIJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16912138761",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T14:35:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16914531990,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAPwL0aW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16914531990",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2c073b90ae977af1ac01164a894edd978529fdc6",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/2c073b90ae977af1ac01164a894edd978529fdc6",
      "created_at": "2025-03-20T16:46:03Z"
    },
    {
      "event": "unlabeled",
      "id": 16918842215,
      "node_id": "UNLE_lADOABII586kKCBYzwAAAAPwcQtn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16918842215",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T22:25:54Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2711550079,
      "node_id": "PRR_kwDOABII586hnvh_",
      "url": null,
      "actor": null,
      "commit_id": "2c073b90ae977af1ac01164a894edd978529fdc6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review 2c073b90ae977af1ac01164a894edd978529fdc6. I think the new BufferedFile approach implemented is reasonable and a little nicer than the [previous](https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2722752125) approach which made lower-level calls in block storage code to allocate and pass buffers. But the need to hardcode and compute sizes in 8782d6ed09bbb947426c1ed54ad4d5188326764d and 2c073b90ae977af1ac01164a894edd978529fdc6 still seems to make the storage code more awkward and fragile, and require earlier refactoring changes that make the PR more complicated overall.\r\n\r\nIf it would be possible, and if it would ok with you and other reviewers, I would prefer if it we could make minimal changes to the blockstorage code and instead add `BufferedReader`/`BufferedWriter` streams that only add buffering without making other changes. A diff of what this could look like is:\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -660,11 +660,12 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\r\n     const FlatFilePos pos{WITH_LOCK(::cs_main, return index.GetUndoPos())};\r\n \r\n     // Open history file to read\r\n-    AutoFile filein{OpenUndoFile(pos, true)};\r\n-    if (filein.IsNull()) {\r\n+    AutoFile file{OpenUndoFile(pos, true)};\r\n+    if (file.IsNull()) {\r\n         LogError(\"OpenUndoFile failed for %s\", pos.ToString());\r\n         return false;\r\n     }\r\n+    BufferedReader filein{file};\r\n \r\n     // Read block\r\n     uint256 hashChecksum;\r\n@@ -937,11 +938,12 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\r\n             return false;\r\n         }\r\n         // Open history file to append\r\n-        AutoFile fileout{OpenUndoFile(pos)};\r\n-        if (fileout.IsNull()) {\r\n+        AutoFile file{OpenUndoFile(pos)};\r\n+        if (file.IsNull()) {\r\n             LogError(\"OpenUndoFile failed\");\r\n             return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\r\n         }\r\n+        BufferedWriter fileout{file};\r\n \r\n         // Write index header\r\n         fileout << GetParams().MessageStart() << blockundo_size;\r\n@@ -986,11 +988,12 @@ bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\r\n     block.SetNull();\r\n \r\n     // Open history file to read\r\n-    AutoFile filein{OpenBlockFile(pos, true)};\r\n-    if (filein.IsNull()) {\r\n+    AutoFile file{OpenBlockFile(pos, true)};\r\n+    if (file.IsNull()) {\r\n         LogError(\"%s: OpenBlockFile failed for %s\\n\", __func__, pos.ToString());\r\n         return false;\r\n     }\r\n+    BufferedReader filein{file};\r\n \r\n     // Read block\r\n     try {\r\n@@ -1039,11 +1042,12 @@ bool BlockManager::ReadRawBlock(std::vector<uint8_t>& block, const FlatFilePos&\r\n         return false;\r\n     }\r\n     hpos.nPos -= 8; // Seek back 8 bytes for meta header\r\n-    AutoFile filein{OpenBlockFile(hpos, true)};\r\n-    if (filein.IsNull()) {\r\n+    AutoFile file{OpenBlockFile(hpos, true)};\r\n+    if (file.IsNull()) {\r\n         LogError(\"%s: OpenBlockFile failed for %s\\n\", __func__, pos.ToString());\r\n         return false;\r\n     }\r\n+    BufferedReader filein{file};\r\n \r\n     try {\r\n         MessageStartChars blk_start;\r\n@@ -1082,12 +1086,13 @@ FlatFilePos BlockManager::WriteBlock(const CBlock& block, int nHeight)\r\n         LogError(\"FindNextBlockPos failed\");\r\n         return FlatFilePos();\r\n     }\r\n-    AutoFile fileout{OpenBlockFile(pos)};\r\n-    if (fileout.IsNull()) {\r\n+    AutoFile file{OpenBlockFile(pos)};\r\n+    if (file.IsNull()) {\r\n         LogError(\"OpenBlockFile failed\");\r\n         m_opts.notifications.fatalError(_(\"Failed to write block.\"));\r\n         return FlatFilePos();\r\n     }\r\n+    BufferedWriter fileout{file};\r\n \r\n     // Write index header\r\n     fileout << GetParams().MessageStart() << block_size;\r\n--- a/src/streams.cpp\r\n+++ b/src/streams.cpp\r\n@@ -64,6 +64,15 @@ void AutoFile::read(std::span<std::byte> dst)\r\n     }\r\n }\r\n \r\n+void AutoFile::read_buffer(std::span<std::byte>& dst)\r\n+{\r\n+    size_t size{detail_fread(dst)};\r\n+    if (size != dst.size() && !feof()) {\r\n+        throw std::ios_base::failure(\"AutoFile::read_buffer: fread failed\");\r\n+    }\r\n+    dst = dst.first(size);\r\n+}\r\n+\r\n void AutoFile::ignore(size_t nSize)\r\n {\r\n     if (!m_file) throw std::ios_base::failure(\"AutoFile::ignore: file handle is nullptr\");\r\n@@ -102,6 +111,16 @@ void AutoFile::write(std::span<const std::byte> src)\r\n     }\r\n }\r\n \r\n+void AutoFile::write_buffer(std::span<std::byte> src)\r\n+{\r\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write_buffer: file handle is nullptr\");\r\n+    util::Xor(src, m_xor, *m_position); // obfuscate in-place\r\n+    if (std::fwrite(src.data(), 1, src.size(), m_file) != src.size()) {\r\n+        throw std::ios_base::failure(\"AutoFile::write_buffer: write failed\");\r\n+    }\r\n+    if (m_position) *m_position += src.size();\r\n+}\r\n+\r\n bool AutoFile::Commit()\r\n {\r\n     return ::FileCommit(m_file);\r\n--- a/src/streams.h\r\n+++ b/src/streams.h\r\n@@ -465,6 +465,11 @@ public:\r\n         ::Unserialize(*this, obj);\r\n         return *this;\r\n     }\r\n+\r\n+    //! Read into a mutable buffer more flexibly than read(), shortening the buffer if reached EOF.\r\n+    void read_buffer(std::span<std::byte>& dst);\r\n+    //! Write a mutable buffer more efficiently than write(), XORing the buffer in-place.\r\n+    void write_buffer(std::span<std::byte> src);\r\n };\r\n \r\n /** Wrapper around an AutoFile& that implements a ring buffer to\r\n@@ -614,4 +619,72 @@ public:\r\n     }\r\n };\r\n \r\n+template<typename S>\r\n+class BufferedReader\r\n+{\r\n+    S& m_stream;\r\n+    std::vector<std::byte> m_buffer;\r\n+    size_t m_pos; //!< Next m_buffer position to read.\r\n+public:\r\n+    BufferedReader(S& stream, size_t size=65536) : m_stream{stream}, m_buffer{size}, m_pos{size} {}\r\n+    void read(std::span<std::byte> dst)\r\n+    {\r\n+        while (!dst.empty()) {\r\n+            if (m_pos == m_buffer.size()) {\r\n+                std::span<std::byte> data{m_buffer};\r\n+                m_stream.read_buffer(data);\r\n+                m_buffer.resize(data.size()); // shrink on eof\r\n+                m_pos = 0;\r\n+            }\r\n+            if (m_buffer.size() == 0) throw std::ios_base::failure(\"BufferedReader::read: end of file\");\r\n+            size_t n = std::min(dst.size(), m_buffer.size() - m_pos);\r\n+            std::copy(m_buffer.begin() + m_pos, m_buffer.begin() + m_pos + n, dst.begin());\r\n+            m_pos += n;\r\n+            dst = dst.subspan(n);\r\n+        }\r\n+    }\r\n+\r\n+    template <typename T>\r\n+    BufferedReader& operator>>(T&& obj)\r\n+    {\r\n+        ::Unserialize(*this, obj);\r\n+        return *this;\r\n+    }\r\n+};\r\n+\r\n+template<typename S>\r\n+class BufferedWriter\r\n+{\r\n+    S& m_stream;\r\n+    std::vector<std::byte> m_buffer;\r\n+    size_t m_pos; //!< Next m_buffer position to write.\r\n+public:\r\n+    BufferedWriter(S& stream, size_t size=65536) : m_stream{stream}, m_buffer{size}, m_pos{0} {}\r\n+    ~BufferedWriter() { flush(); }\r\n+\r\n+    void write(std::span<const std::byte> src)\r\n+    {\r\n+        while (!src.empty()) {\r\n+            size_t n = std::min(src.size(), m_buffer.size() - m_pos);\r\n+            std::copy(src.begin(), src.begin() + n, m_buffer.begin() + m_pos);\r\n+            m_pos += n;\r\n+            if (m_pos == m_buffer.size()) flush();\r\n+            src = src.subspan(n);\r\n+        }\r\n+    }\r\n+\r\n+    void flush()\r\n+    {\r\n+         m_stream.write_buffer(std::span{m_buffer}.first(m_pos));\r\n+         m_pos = 0;\r\n+    }\r\n+\r\n+    template <typename T>\r\n+    BufferedWriter& operator<<(const T& obj)\r\n+    {\r\n+        ::Serialize(*this, obj);\r\n+        return *this;\r\n+    }\r\n+};\r\n+\r\n #endif // BITCOIN_STREAMS_H\r\n```\r\n</p>\r\n</details>\r\n\r\nThis is untested but compiles. If it's workable I think it would be a better direction to go in, both to keep blockstorage code simpler, but also to provide better support for buffered reads and writes in the stream API in case there are other parts of code that could benefit from them.\r\n\r\nI am also ok with with current approach and happy to review if there are issues with this or it's just not the direction we want to go.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2711550079",
      "submitted_at": "2025-03-24T20:00:11Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
    },
    {
      "event": "commented",
      "id": 2749384672,
      "node_id": "IC_kwDOABII586j4Efg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2749384672",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T21:00:31Z",
      "updated_at": "2025-03-24T21:04:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "@ryanofsky, thanks again for the review.\r\nYour suggestion seems to point back to the initial implementation of this PR, i.e. https://github.com/bitcoin/bitcoin/pull/31539/commits, where we didn't know the full size of the block, and read and wrote in chunks.\r\nThis current alternative was explicitly suggested by @theuni - and while it's a bit messy to always read the size, the resulting code is faster and seem to have fewer moving parts (e.g. `read` doesn't mutate the parameter, `write` doesn't copy the write buffer, doesn't loop inside on buffers of different size, etc), it's why I went this way.\r\nMaybe there's a middle ground by allocating max block size, ignoring the actual size - which would potentially simplify both approaches - would that be better than the current solutions? I'll investigate tomorrow...",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2749384672",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "mentioned",
      "id": 16963088236,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAPzFC9s",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16963088236",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T21:00:32Z"
    },
    {
      "event": "subscribed",
      "id": 16963088244,
      "node_id": "SE_lADOABII586kKCBYzwAAAAPzFC90",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16963088244",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T21:00:32Z"
    },
    {
      "event": "mentioned",
      "id": 16963088254,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAPzFC9-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16963088254",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T21:00:32Z"
    },
    {
      "event": "subscribed",
      "id": 16963088266,
      "node_id": "SE_lADOABII586kKCBYzwAAAAPzFC-K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16963088266",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T21:00:32Z"
    },
    {
      "event": "commented",
      "id": 2749457567,
      "node_id": "IC_kwDOABII586j4WSf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2749457567",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T21:37:06Z",
      "updated_at": "2025-03-24T21:37:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "> @ryanofsky, thanks again for the review. Your suggestion seems to point back to the initial implementation of this PR, i.e. https://github.com/bitcoin/bitcoin/pull/31539/commits\r\n\r\nAbsolutely yes. There are a few things I would change about that PR but overall it seems a lot cleaner and simpler to me than this PR. If it doesn't perform as well as this one that is surprising, because I thought the performance improvement here came from buffering, not from choosing buffers with magic sizes. But if you and other reviewers agree the current approach is better than the previous approach implemented in #31539, I guess this is the way to go, and I don't mind reviewing it as-is.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2749457567",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "mentioned",
      "id": 16963533858,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAPzGvwi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16963533858",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T21:37:07Z"
    },
    {
      "event": "subscribed",
      "id": 16963533881,
      "node_id": "SE_lADOABII586kKCBYzwAAAAPzGvw5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16963533881",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T21:37:07Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16994326825,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP08Nkp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16994326825",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "146ba13b25c7c4a8f0e81a770b151f3dbd9fab3f",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/146ba13b25c7c4a8f0e81a770b151f3dbd9fab3f",
      "created_at": "2025-03-26T14:39:58Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16994333057,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP08PGB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16994333057",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d02e10494118c5318657b91e66c8d137c65c8c5e",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/d02e10494118c5318657b91e66c8d137c65c8c5e",
      "created_at": "2025-03-26T14:40:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16994415986,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP08jVy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16994415986",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "06f37689a3b79f2f65ac95d8ae54a407ed2d4502",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/06f37689a3b79f2f65ac95d8ae54a407ed2d4502",
      "created_at": "2025-03-26T14:44:23Z"
    },
    {
      "event": "commented",
      "id": 2754721275,
      "node_id": "IC_kwDOABII586kMbX7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2754721275",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-26T14:54:41Z",
      "updated_at": "2025-03-28T10:26:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "@ryanofsky, I've experimented with your version, turns out I'm mostly fine with both solutions. https://github.com/bitcoin/bitcoin/compare/2c073b90ae977af1ac01164a894edd978529fdc6..06f37689a3b79f2f65ac95d8ae54a407ed2d4502\r\n\r\nI have based this version on the patch you've posted - with minor differences.\r\n\r\n* Removed all introduced `undo_size` seek backs - except in `ReadRawBlock`, which already steps back to get access to the size. I have cleaned it up in a separate commit - we don't need buffering there since we're not serializing anything there, just reading the whole block directly already.\r\n* read_buffer/write_buffer introduces non-trivial Duck Typing (i.e. now users have to know if the want to call `void write(std::span<const std::byte> src);` or `void write_buffer(std::span<std::byte> src);`), I don't particularly like it, but we can live with it.\r\n* `std::copy` can be simplified to `std::copy_n`\r\n* the new `AutoFile::write_buffer` can now be used in `AutoFile::write` to reduce duplication\r\n* Changed `read_buffer` to return the size instead of mutating the parameter, this enabled us to avoid resizing the buffer for  eof in `BufferedReader` (the benchmarks caught the slowdown)\r\n* Used `DataStream` as  buffers\r\n* Added tests for the buffered writers - for the read/write methods and separately for the serialization part\r\n\r\nThe `ReadBlockBench`/`WriteBlockBench` speedups changed slightly from `24%`/`31%` to `19%`/`24%` on Linux/GCC, and from `32%`/`298%` on Mac to `30%`/ `194%`\r\nTo see how real performance is affected, I'm rerunning a few full IBDs to measure the performance change after the buffering changes (reindex won't suffice here).",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2754721275",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "mentioned",
      "id": 16994622425,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAP09VvZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16994622425",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-26T14:54:43Z"
    },
    {
      "event": "subscribed",
      "id": 16994622473,
      "node_id": "SE_lADOABII586kKCBYzwAAAAP09VwJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16994622473",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-26T14:54:43Z"
    },
    {
      "event": "unsubscribed",
      "id": 16994740883,
      "node_id": "UE_lADOABII586kKCBYzwAAAAP09yqT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16994740883",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-26T15:00:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17029492897,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP3CXCh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17029492897",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8fe73a102f5b8406f166d7ac4b1a36bba84de7c4",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/8fe73a102f5b8406f166d7ac4b1a36bba84de7c4",
      "created_at": "2025-03-28T10:22:13Z"
    },
    {
      "event": "commented",
      "id": 2760846407,
      "node_id": "IC_kwDOABII586kjyxH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2760846407",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T10:23:58Z",
      "updated_at": "2025-03-28T10:26:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "@maflcko / @ryanofsky, this implementation seems to fail in the same weird way as https://github.com/bitcoin/bitcoin/actions/runs/12918565902/job/36027337187?pr=31539 - with 100% tests passing.\r\nThe last PR indicates it's the batch writing part - could it be an OOM because the sanitizer overhead in `DataStream#resize(1 << 20)`?\r\n`WriteBlockBench` indicates that even a buffer size of `1 << 16` is half the speed (Linux/GCC speed is the same) - but I'll try it, let's see if it passes CI at least.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2760846407",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "mentioned",
      "id": 17029521181,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAP3Cd8d",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17029521181",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T10:23:59Z"
    },
    {
      "event": "subscribed",
      "id": 17029521205,
      "node_id": "SE_lADOABII586kKCBYzwAAAAP3Cd81",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17029521205",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T10:23:59Z"
    },
    {
      "event": "mentioned",
      "id": 17029521232,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAP3Cd9Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17029521232",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T10:23:59Z"
    },
    {
      "event": "subscribed",
      "id": 17029521254,
      "node_id": "SE_lADOABII586kKCBYzwAAAAP3Cd9m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17029521254",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T10:23:59Z"
    },
    {
      "event": "commented",
      "id": 2760955554,
      "node_id": "IC_kwDOABII586kkNai",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2760955554",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T10:48:29Z",
      "updated_at": "2025-03-28T10:48:29Z",
      "author_association": "MEMBER",
      "body": "Does CI pass locally before and after? Measuring locally, what is the memory usage of the CI before and after?\r\n\r\n\r\nIt seems odd that using exact block sizes (this pull initially) passes, whereas using a `1<<20` approximation fails due to OOM.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2760955554",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "commented",
      "id": 2764716714,
      "node_id": "IC_kwDOABII586kyjqq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2764716714",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-30T19:47:06Z",
      "updated_at": "2025-03-30T19:48:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "> It seems odd that using exact block sizes (this pull initially) passes, whereas using a 1<<20 approximation fails due to OOM\r\n\r\nYes, I thought of the same, but the other PR had the same issue. I'm not familiar enough with the intricacies of `ASan + LSan + UBSan + integer, no depends, USDT` to have a good enough explanation - besides the instrumentation overhead causing it to overflow.\r\n\r\n> What is the memory usage of the CI before and after?\r\n\r\nI have measured a valgrind/massif IBD until the be benchmarked block #413567, indicating that there isn't a significant memory usage change - not sure about the CI usage, that seems messy to measure.\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nCOMMITS=\"06f37689a3b79f2f65ac95d8ae54a407ed2d4502 8fe73a102f5b8406f166d7ac4b1a36bba84de7c4\"; \\\r\nSTOP_HEIGHT=413567; DBCACHE=1000; \\\r\nC_COMPILER=gcc; CXX_COMPILER=g++; \\\r\nBASE_DIR=\"/mnt/my_storage\"; DATA_DIR=\"$BASE_DIR/BitcoinData\"; LOG_DIR=\"$BASE_DIR/logs\"; \\\r\nfor COMMIT in $COMMITS; do \\\r\n  git fetch --all -q && git fetch origin $COMMIT && git log -1 --oneline $COMMIT && \\\r\n  killall bitcoind; rm -rf $DATA_DIR/* && git checkout $COMMIT && git clean -fxd && git reset --hard && \\\r\n  cmake -B build -DCMAKE_BUILD_TYPE=Release -DENABLE_WALLET=OFF -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER && \\\r\n  cmake --build build -j$(nproc) --target bitcoind && \\\r\n  ./build/bin/bitcoind -datadir=$DATA_DIR -stopatheight=1 -printtoconsole=0 && \\\r\n  valgrind --tool=massif --time-unit=ms \\\r\n    --massif-out-file=\"$LOG_DIR/massif-$COMMIT-$STOP_HEIGHT-$DBCACHE.out\" \\\r\n    ./build/bin/bitcoind -datadir=$DATA_DIR \\\r\n    -stopatheight=$STOP_HEIGHT \\\r\n    -dbcache=$DBCACHE \\\r\n    -blocksonly=1 \\\r\n    -printtoconsole=0 && \\\r\n  cp $DATA_DIR/debug.log \"$LOG_DIR/debug-$COMMIT-$STOP_HEIGHT-$DBCACHE.log\" && \\\r\n  ms_print \"$LOG_DIR/massif-$COMMIT-$STOP_HEIGHT-$DBCACHE.out\" | tee \"$LOG_DIR/massif-$COMMIT-$STOP_HEIGHT-$DBCACHE.txt\"; \\\r\ndone\r\n```\r\n\r\n</details>\r\n\r\n> 06f37689a3 - size_t size = 1 << 20\r\n```bash\r\n    GB\r\n1.322^              #\r\n     |              #     :     :               @      :    :               :\r\n     |             @#     :     :    :          @:     :    :    :     :    :\r\n     |            :@#    ::    ::    :    ::    @:     :   ::    :    ::   ::\r\n     |            :@#   @::    ::   ::    :     @:    ::   ::    :    ::   @:\r\n     |            :@#   @::    ::   ::    :     @:    ::   ::   ::    ::   @:\r\n     |            :@#   @::    ::   ::   ::     @:   :::   ::   ::   :::   @:\r\n     |            :@#   @::  ::::  :::   ::     @:  @:::  :::  :::   :::  :@:\r\n     |          :@:@#  :@::  : ::  :::  :::     @:  @::: ::::  :::   :::  :@:\r\n     |         ::@:@#  :@::  : ::  :::  :::     @:  @::: ::::  :::   ::: ::@:\r\n     |        @::@:@#  :@::  : :: @:::  :::    :@:  @::: ::::  :::  @::: ::@:\r\n     |        @::@:@# ::@:: :: :: @:::  :::    :@:  @::: :::: :::: :@::: ::@::\r\n     |       @@::@:@# ::@:: :: :: @:::  :::    :@: :@::::::::@:::: :@::: ::@::\r\n     |     ::@@::@:@# ::@:: :: :::@::: :::: @  :@: :@::::::::@:::: :@::::::@::\r\n     |    :: @@::@:@#:::@::::: :::@::: :::: @  :@: :@::::::::@:::: :@::::::@::\r\n     |    :: @@::@:@#:::@::::: :::@:::::::: @:::@:::@::::::::@::::::@::::::@::\r\n     |   ::: @@::@:@#:::@::::: :::@:::::::: @: :@:::@::::::::@::::::@::::::@::\r\n     | ::::: @@::@:@#:::@::::: :::@:::::::: @: :@:::@::::::::@::::::@::::::@::\r\n     | ::::: @@::@:@#:::@::::: :::@:::::::: @: :@:::@::::::::@::::::@::::::@::\r\n     | ::::: @@::@:@#:::@::::: :::@:::::::: @: :@:::@::::::::@::::::@::::::@::\r\n   0 +----------------------------------------------------------------------->h\r\n     0                                                                   4.449\r\n```\r\nvs\r\n\r\n> 8fe73a102f - size_t size = 1 << 16\r\n\r\n```bash\r\n    GB\r\n1.336^                 #\r\n     |           @     #                   :   :           :     :\r\n     |           @     #    :     :        :   :     :     :     :    :    :\r\n     |          @@     #    :     :     :  :   :     :    ::    @:    :    :\r\n     |          @@    :#    :    ::     :  :  ::     :   :::   :@:   ::   ::\r\n     |          @@    :#    :    ::     :  :  ::    @:   :::   :@:   ::   ::\r\n     |          @@    :#   @:    ::     :  :  ::    @:   :::  ::@:  :::   ::\r\n     |        @@@@   ::#   @:   :::   :::  : :::  ::@:  @:::  ::@:  :::   ::\r\n     |        @ @@   ::#  :@:   :::   : :  : :::  ::@:  @:::  ::@:  :::  :::\r\n     |      @@@ @@   ::#  :@:  ::::   : : :: :::  ::@:  @::: :::@: ::::  :::\r\n     |      @@@ @@ ::::#  :@:  ::::   : : :: :::  ::@: :@::: :::@: :::: :::: :\r\n     |      @@@ @@ : ::# ::@:  ::::  @: : ::@:::  ::@: :@:::::::@:::::: :::: :\r\n     |    ::@@@ @@ : ::# ::@:  ::::  @: : ::@::: :::@:::@:::::::@::::::@:::: :\r\n     |   :: @@@ @@:: ::#:::@:  ::::  @: ::::@::: :::@:::@:::::::@::::::@:::: :\r\n     |   :: @@@ @@:: ::#:::@:  ::::  @: ::::@:::@:::@:::@:::::::@::::::@::::::\r\n     |  ::: @@@ @@:: ::#:::@:@@::::::@: ::::@:::@:::@:::@:::::::@::::::@::::::\r\n     | :::: @@@ @@:: ::#:::@:@ ::::: @: ::::@:::@:::@:::@:::::::@::::::@::::::\r\n     | :::: @@@ @@:: ::#:::@:@ ::::: @: ::::@:::@:::@:::@:::::::@::::::@::::::\r\n     | :::: @@@ @@:: ::#:::@:@ ::::: @: ::::@:::@:::@:::@:::::::@::::::@::::::\r\n     | :::: @@@ @@:: ::#:::@:@ ::::: @: ::::@:::@:::@:::@:::::::@::::::@::::::\r\n   0 +----------------------------------------------------------------------->h\r\n     0                                                                   4.111\r\n```\r\n\r\n> Does CI pass locally before and after? \r\n\r\nIt's passing here as well now with `1 << 16` instead of `1 << 20`.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2764716714",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "reviewed",
      "id": 2734273927,
      "node_id": "PRR_kwDOABII586i-bWH",
      "url": null,
      "actor": null,
      "commit_id": "8fe73a102f5b8406f166d7ac4b1a36bba84de7c4",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 8fe73a102f5b8406f166d7ac4b1a36bba84de7c4, since the code seems right and I didn't see any issues, but IIUC something unexpected happens if (1<<20) buffer sizes are used as described https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2764716714 so that sounds like something that needs to be figured out.\r\n\r\nWould be curious to know if other reviewers like the current approach, since a number of approaches have been tried, and this moves closer to some earlier approaches that maybe other reviewers didn't like. I like the current approach because I was pushing for it, but I only suggested it because I didn't know something like it had been tried before, so maybe there are drawbacks I don't see here or this is just not appealing. I'd be happy with whatever approach can get accepted if not this one.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2754721275\r\n\r\n> * read_buffer/write_buffer introduces non-trivial Duck Typing (i.e. now users have to know if the want to call `void write(std::span<const std::byte> src);` or `void write_buffer(std::span<std::byte> src);`), I don't particularly like it, but we can live with it.\r\n\r\nWould be curious what this means. The two write methods have different behavior because one of them mutates the buffer and the other one doesn't. It would seem both write methods have different use-cases, and same for the read methods.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2734273927",
      "submitted_at": "2025-04-02T02:35:33Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17091824831,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP6wIy_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17091824831",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fbebc02f0d685785381d8b34a1e6fb4ec3e684dd",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/fbebc02f0d685785381d8b34a1e6fb4ec3e684dd",
      "created_at": "2025-04-02T11:01:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17092079941,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP6xHFF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17092079941",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "71610707a8b69eeef0c5345f78aac40c38fc3b88",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/71610707a8b69eeef0c5345f78aac40c38fc3b88",
      "created_at": "2025-04-02T11:20:08Z"
    },
    {
      "event": "commented",
      "id": 2772248459,
      "node_id": "IC_kwDOABII586lPSeL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2772248459",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T11:21:16Z",
      "updated_at": "2025-04-02T14:12:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "> but IIUC something unexpected happens if (1<<20) buffer sizes are used\r\n\r\nSeems like a simple OOM caused by instrumentation overhead - @maflcko, can you help us out here, does this need more investigation? \r\n\r\n> read_buffer/write_buffer introduces non-trivial Duck Typing\r\n\r\n> would be curious what this means. The two write methods have different behavior because one of them mutates the buffer and the other one doesn't. It would seem both write methods have different use-cases, and same for the read methods.\r\n\r\nYes, I mean we don't have segregated interfaces which predestine the usages that are allowed (e.g. how a bufferedfile could have a buffered-reader and a buffered-writer interface to only allow a subset of the functionality).\r\nHere `AutoFile` doesn't implement a `Bufferable` interface, and the `BufferedReader` doesn't accept a `explicit BufferedReader(Bufferable& stream`, so there's an implicit contract (incidental interface), that you can only use `BufferedReader` for a stream if they happen to implement `read_buffer`, because it's used inside (i.e. compile-time duck typing). So if somebody wants to make any other stream `BufferedReader` compatible, they will have to look at the actual implementation details since there isn't an interface guiding them. It's fine, I don't mind, just mentioned that it's a slight complication in my opinion.\r\n\r\nRebased the PR in a separate push to hopefully resolve the unrelated Windows CI failure.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2772248459",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "mentioned",
      "id": 17092096032,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAP6xLAg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17092096032",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T11:21:17Z"
    },
    {
      "event": "subscribed",
      "id": 17092096044,
      "node_id": "SE_lADOABII586kKCBYzwAAAAP6xLAs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17092096044",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T11:21:17Z"
    },
    {
      "event": "review_requested",
      "id": 17092124888,
      "node_id": "RRE_lADOABII586kKCBYzwAAAAP6xSDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17092124888",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T11:23:18Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 17092125306,
      "node_id": "RRE_lADOABII586kKCBYzwAAAAP6xSJ6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17092125306",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T11:23:20Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2772666758,
      "node_id": "IC_kwDOABII586lQ4mG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2772666758",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T14:02:20Z",
      "updated_at": "2025-04-02T14:02:20Z",
      "author_association": "MEMBER",
      "body": "> > but IIUC something unexpected happens if (1<<20) buffer sizes are used\r\n> \r\n> Seems like a simple OOM caused by instrumentation overhead - @maflcko, can you help us out here, does this need more investigation?\r\n\r\nIt is not a blocker, it just makes me curious that static buffer sizes cause it and dynamic ones don't. If you want to look more into this, you could try IBD (or AU-IBD) again with asan enabled?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2772666758",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "mentioned",
      "id": 17094667272,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAP66-wI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17094667272",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T14:02:22Z"
    },
    {
      "event": "subscribed",
      "id": 17094667298,
      "node_id": "SE_lADOABII586kKCBYzwAAAAP66-wi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17094667298",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T14:02:22Z"
    },
    {
      "event": "reviewed",
      "id": 2736399065,
      "node_id": "PRR_kwDOABII586jGiLZ",
      "url": null,
      "actor": null,
      "commit_id": "71610707a8b69eeef0c5345f78aac40c38fc3b88",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 71610707a8b69eeef0c5345f78aac40c38fc3b88. Mostly small changes since last review, biggest one was changing the read method to be simpler and avoid looping.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2772248459\r\n\r\n> Yes, I mean we don't have segregated interfaces which predestine the usages that are allowed\r\n\r\nUnderstood now thanks. IMO, using duck typing and not defining formal interfaces here is a more of a benefit than a drawback, since it can let this code evolve easily without requiring wider refactoring, and let it be generic without implementing functionality that's not actually used. But this is a tradeoff.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2736399065",
      "submitted_at": "2025-04-02T17:03:05Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17100444752,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP7RBRQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17100444752",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "85b0c6d309cea981fda75e8cf268a144ae472d8d",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/85b0c6d309cea981fda75e8cf268a144ae472d8d",
      "created_at": "2025-04-02T20:16:29Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17100479191,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP7RJrX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17100479191",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "aef99ea38d85d7e56e64bbd0809a7298f21e7b8a",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/aef99ea38d85d7e56e64bbd0809a7298f21e7b8a",
      "created_at": "2025-04-02T20:19:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17101340645,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP7Ub_l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17101340645",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "created_at": "2025-04-02T21:32:15Z"
    },
    {
      "event": "commented",
      "id": 2773792101,
      "node_id": "IC_kwDOABII586lVLVl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2773792101",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T21:34:19Z",
      "updated_at": "2025-04-03T18:42:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "* BufferedReader takes ownership of the underlying stream now;\r\n* `read_buffer` was removed;\r\n* In the tests made sure file_size and max_read_length are never empty and that test state doesn't propagate between comparisons;\r\n* Fixed `writeer` typo;\r\n* ~Added back `BufferedWriter` `size = 1 << 20` - I have a hunch of why it failed, let's see if it passes now;~ I have to figure this out before it's merged\r\n\r\nhttps://github.com/bitcoin/bitcoin/compare/71610707a8b69eeef0c5345f78aac40c38fc3b88..85b0c6d309cea981fda75e8cf268a144ae472d8d\r\n\r\nhttps://github.com/bitcoin/bitcoin/compare/aef99ea38d85d7e56e64bbd0809a7298f21e7b8a..652b4e3de5c5e09fb812abe265f4a8946fa96b54\r\n\r\nRebased again in separate commit since QT5 wasn't found after the QT6 merge.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2773792101",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "labeled",
      "id": 17102695238,
      "node_id": "LE_lADOABII586kKCBYzwAAAAP7ZmtG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17102695238",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T00:15:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17111750249,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP78JZp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17111750249",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "aaceecad2ba85ac7513d1e2973960bdae65ab0fc",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/aaceecad2ba85ac7513d1e2973960bdae65ab0fc",
      "created_at": "2025-04-03T11:21:58Z"
    },
    {
      "event": "unlabeled",
      "id": 17114098700,
      "node_id": "UNLE_lADOABII586kKCBYzwAAAAP8FGwM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17114098700",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T13:43:45Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17116065047,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP8Mm0X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17116065047",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "57623c922dcdb725b049f95f1dc740f3a75911c9",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/57623c922dcdb725b049f95f1dc740f3a75911c9",
      "created_at": "2025-04-03T15:14:59Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17116743498,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP8PMdK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17116743498",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "38b7e8e5ced36cddd7e87fa852ac38daf906501a",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/38b7e8e5ced36cddd7e87fa852ac38daf906501a",
      "created_at": "2025-04-03T15:57:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17118185245,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP8Uscd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17118185245",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "created_at": "2025-04-03T17:47:43Z"
    },
    {
      "event": "labeled",
      "id": 17118186090,
      "node_id": "LE_lADOABII586kKCBYzwAAAAP8Uspq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17118186090",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T17:47:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2776788149,
      "node_id": "IC_kwDOABII586lgmy1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2776788149",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T19:57:20Z",
      "updated_at": "2025-04-03T19:57:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "Sorry for the extra pushes, it seems there is some inconsistency on Windows regarding file flushing and deletion behavior - so I've forced flushing in tests via braces and added read-underflow checks for each to make sure that scenario is covered.\r\nPR is ready for review again!",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2776788149",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "unlabeled",
      "id": 17124480622,
      "node_id": "UNLE_lADOABII586kKCBYzwAAAAP8stZu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17124480622",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-04T06:07:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2779577181,
      "node_id": "IC_kwDOABII586lrPtd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2779577181",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-04T19:28:51Z",
      "updated_at": "2025-04-04T19:30:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "Redid the IBDs (on an HDD this time) - also showing a ~7% average speedup\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nCOMMITS=\"d2b72b13699cf460ffbcb1028bcf5f3b07d3b73a 652b4e3de5c5e09fb812abe265f4a8946fa96b54\"; \\\r\nSTOP_HEIGHT=888888; DBCACHE=1000; \\\r\nC_COMPILER=gcc; CXX_COMPILER=g++; \\\r\nBASE_DIR=\"/mnt/my_storage\"; DATA_DIR=\"$BASE_DIR/BitcoinData\"; LOG_DIR=\"$BASE_DIR/logs\"; \\\r\n(for c in $COMMITS; do git fetch origin $c -q && git log -1 --pretty=format:'%h %s' $c || exit 1; done) && \\\r\nhyperfine \\\r\n  --sort 'command' \\\r\n  --runs 2 \\\r\n  --export-json \"$BASE_DIR/ibd-${COMMITS// /-}-$STOP_HEIGHT-$DBCACHE-$C_COMPILER.json\" \\\r\n  --parameter-list COMMIT ${COMMITS// /,} \\\r\n  --prepare \"killall bitcoind; rm -rf $DATA_DIR/*; git checkout {COMMIT}; git clean -fxd; git reset --hard; \\\r\n    cmake -B build -DCMAKE_BUILD_TYPE=Release -DENABLE_WALLET=OFF -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER && \\\r\n    cmake --build build -j$(nproc) --target bitcoind && \\\r\n    ./build/bin/bitcoind -datadir=$DATA_DIR -stopatheight=1 -printtoconsole=0; sleep 100\" \\\r\n  --cleanup \"cp $DATA_DIR/debug.log $LOG_DIR/debug-{COMMIT}-$(date +%s).log\" \\\r\n  \"COMPILER=$C_COMPILER COMMIT=${COMMIT:0:10} ./build/bin/bitcoind -datadir=$DATA_DIR -stopatheight=$STOP_HEIGHT -dbcache=$DBCACHE -blocksonly -printtoconsole=0\"\r\n\r\nd2b72b1369 refactor: rename leftover WriteBlockBench\r\n652b4e3de5 optimization: Bulk serialization writes in `WriteBlockUndo` and `WriteBlock`\r\n\r\nBenchmark 1: COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=1000 -blocksonly -printtoconsole=0 (COMMIT = d2b72b13699cf460ffbcb1028bcf5f3b07d3b73a)\r\n  Time (mean ± σ):     41528.104 s ± 354.003 s    [User: 44324.407 s, System: 3074.829 s]\r\n  Range (min … max):   41277.786 s … 41778.421 s    2 runs\r\n \r\nBenchmark 2: COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=1000 -blocksonly -printtoconsole=0 (COMMIT = 652b4e3de5c5e09fb812abe265f4a8946fa96b54)\r\n  Time (mean ± σ):     38771.457 s ± 441.941 s    [User: 41930.651 s, System: 3222.664 s]\r\n  Range (min … max):   38458.957 s … 39083.957 s    2 runs\r\n \r\nRelative speed comparison\r\n        1.07 ±  0.02  COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=1000 -blocksonly -printtoconsole=0 (COMMIT = d2b72b13699cf460ffbcb1028bcf5f3b07d3b73a)\r\n        1.00          COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=888888 -dbcache=1000 -blocksonly -printtoconsole=0 (COMMIT = 652b4e3de5c5e09fb812abe265f4a8946fa96b54)\r\n```\r\n\r\n</details>",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2779577181",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "reviewed",
      "id": 2738857957,
      "node_id": "PRR_kwDOABII586jP6fl",
      "url": null,
      "actor": null,
      "commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2738857957",
      "submitted_at": "2025-04-04T21:58:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
    },
    {
      "event": "unsubscribed",
      "id": 17140007209,
      "node_id": "UE_lADOABII586kKCBYzwAAAAP9n8Ep",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17140007209",
      "actor": {
        "login": "martinus",
        "id": 14386,
        "node_id": "MDQ6VXNlcjE0Mzg2",
        "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/martinus",
        "html_url": "https://github.com/martinus",
        "followers_url": "https://api.github.com/users/martinus/followers",
        "following_url": "https://api.github.com/users/martinus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/martinus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/martinus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
        "organizations_url": "https://api.github.com/users/martinus/orgs",
        "repos_url": "https://api.github.com/users/martinus/repos",
        "events_url": "https://api.github.com/users/martinus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/martinus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-05T14:11:55Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM3N2UzMTA3YjgxM2NjYjYzODQ4MGYxMDBjNWFiMmExZDkwNDNhNmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c77e3107b813ccb638480f100c5ab2a1d9043a6b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c77e3107b813ccb638480f100c5ab2a1d9043a6b",
      "tree": {
        "sha": "0436087c53ce790f0a03e5e2b561a25c623d3de5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0436087c53ce790f0a03e5e2b561a25c623d3de5"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d42e82d65069a8b5f58de354beab5249c7203542",
          "sha": "d42e82d65069a8b5f58de354beab5249c7203542",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d42e82d65069a8b5f58de354beab5249c7203542"
        }
      ],
      "message": "refactor: rename leftover WriteBlockBench\n\nThe benchmark was referencing the old name of the method",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-06T10:42:00Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-03-14T21:08:25Z"
      },
      "sha": "c77e3107b813ccb638480f100c5ab2a1d9043a6b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17143047182,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP9ziQO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17143047182",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c28221545bf23492ee3d32b9c64eca5fc38804eb",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/c28221545bf23492ee3d32b9c64eca5fc38804eb",
      "created_at": "2025-04-06T12:12:45Z"
    },
    {
      "event": "commented",
      "id": 2781395741,
      "node_id": "IC_kwDOABII586lyLsd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2781395741",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-06T12:21:08Z",
      "updated_at": "2025-04-06T12:21:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "Pushed a new version (with rebase because of recent CI failures):\r\n* `AutoFile`/`BufferedWriter` scope reduction in `WriteBlockUndo` to make sure the file is closed before it's reopened - as observed by @hodlinator. Based on previous similar test failures this would especially be problematic on Windows;\r\n* Guard `m_position` dereference in new `AutoFile::write_buffer` (current usages have always had it, but it's more consistent this way);\r\n* `BufferData` to `DataBuffer` renamed I have;\r\n* Primitive parameters in new tests now have comments.\r\n\r\nThanks for the comments, ready for further reviews.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2781395741",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "mentioned",
      "id": 17143067617,
      "node_id": "MEE_lADOABII586kKCBYzwAAAAP9znPh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17143067617",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-06T12:21:10Z"
    },
    {
      "event": "subscribed",
      "id": 17143067621,
      "node_id": "SE_lADOABII586kKCBYzwAAAAP9znPl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17143067621",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-06T12:21:10Z"
    },
    {
      "event": "reviewed",
      "id": 2746826014,
      "node_id": "PRR_kwDOABII586juT0e",
      "url": null,
      "actor": null,
      "commit_id": "c28221545bf23492ee3d32b9c64eca5fc38804eb",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK c28221545bf23492ee3d32b9c64eca5fc38804eb. Lots of nice changes like code simplifications, documentation & naming improvements since the previous review but most significant change is new commit c28221545bf23492ee3d32b9c64eca5fc38804eb fixing a potential bug found by @hodlinator. Left some suggestions, but none are critical.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2776788149\r\n\r\n> Sorry for the extra pushes, it seems there is some inconsistency on Windows regarding file flushing and deletion behavior - so I've forced flushing in tests via braces and added read-underflow checks for each to make sure that scenario is covered. PR is ready for review again!\r\n\r\nCould you explain in a little more detail what these failures were and how they were fixed? Could you also explain what exactly the (1<<20) failures are, where they happen, and what's the best theory about why they happen when previous approach using bigger buffer sizes did not seem to have a problem?\r\n\r\nI don't think any of these failures are very concerning, but I also don't really understand them and previous PR discussion is hard to decipher so it it would be nice to have a clear description of the problems that have happened in one place.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2746826014",
      "submitted_at": "2025-04-07T14:17:16Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17156993837,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAP-ovMt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17156993837",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1f28d22940805492fbec5a9eb37a5ab767f8add1",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/1f28d22940805492fbec5a9eb37a5ab767f8add1",
      "created_at": "2025-04-07T16:31:29Z"
    },
    {
      "event": "commented",
      "id": 2783960395,
      "node_id": "IC_kwDOABII586l791L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2783960395",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-07T16:38:11Z",
      "updated_at": "2025-04-07T16:38:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Could you explain in a little more detail what these failures were and how they were fixed? \r\n\r\nIt was a test-only failure, I had an unnamed `AutoFile{}.write()` call to directly write the test content to a file in the buffered reader test.\r\nSince `AutoFile` was anonymous, it was closed immediately on POSIX systems but in Windows it lingered around without the last flush, but the readers have opened it up for testing already.\r\nSee https://github.com/bitcoin/bitcoin/compare/38b7e8e5ced36cddd7e87fa852ac38daf906501a..fe6b0e425c88c42fc501acef86a642bc19feca9f#diff-73552341d85aec344497b47f1c2aa53a7e01a415030e40f56b1c454aef5f209dR567-R571\r\n\r\n> Could you also explain what exactly the (1<<20) failures are, where they happen, and what's the best theory about why they happen when previous approach using bigger buffer sizes did not seem to have a problem?\r\n\r\nI have pushed it to a separate PR in my own repo and noticed that `1<<20` passes on a single thread (i.e. `--jobs 1`), it only fails when ci-only jobs are enabled and when we're running on multiple threads, in which case it OOMs - but passes for lower values.\r\n\r\n> why they happen when previous approach using bigger buffer sizes did not seem to have a problem?\r\n\r\nIt likely didn't fail for the previous approach since `block413567.raw` is less than `1<<20` and the build is passing for smaller values as well, we likely hit the limit with `1<<20` on multiple threads (in the same way as `1<<30` fails on a single thread).\r\n\r\n---\r\n\r\nThe latest push contains:\r\n* Migrated `failure(\"AutoFile::write: position unknown\")` from `AutoFile::write` to `AutoFile::write_buffer`, guarded similarly behind a `!m_xor.empty()` (changed message slightly);\r\n* Added explicit `fileout.flush()` to `BlockManager::WriteBlockUndo` next to the scope reduction to be more explicit and moved the scope introduction commit (which only does `fileout.fclose()`) next to the refactoring commits.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2783960395",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "reviewed",
      "id": 2749056885,
      "node_id": "PRR_kwDOABII586j20d1",
      "url": null,
      "actor": null,
      "commit_id": "1f28d22940805492fbec5a9eb37a5ab767f8add1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 1f28d22940805492fbec5a9eb37a5ab767f8add1\r\n\r\n#### Concept\r\n\r\nGood to add read-buffering and switch to a bigger write buffer to help fine-tune IBD.\r\n\r\n(Also fixes potential issue in `BlockManager::WriteBlockUndo` with flushing a file which is still open for write using another handle).\r\n\r\n#### Microbenchmark results for Clang 19.1.7\r\n\r\n```\r\n₿ build/bin/bench_bitcoin -min-time=30000 -filter=<bench_name>\r\n\r\n|    op/s |  err% |         ins/op |        bra/op | benchmark\r\n|--------:|------:|---------------:|--------------:|:----------\r\n|  348.16 |  0.7% |  17,892,592.79 |  2,786,616.55 | `WriteBlockBench` (with only rename-commit)\r\n|  527.23 |  0.8% |   9,938,390.94 |  1,059,982.61 | `WriteBlockBench` (with PR)\r\n|  153.67 |  0.0% |  70,042,685.48 |  4,703,506.75 | `ReadBlockBench` (with only rename-commit)\r\n|  179.84 |  0.0% |  63,495,559.95 |  3,329,391.01 | `ReadBlockBench` (with PR)\r\n```\r\n\r\n51% op/s improvement for WriteBlockBench. 17% for ReadBlockBench.\r\n",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2749056885",
      "submitted_at": "2025-04-08T13:20:18Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
    },
    {
      "event": "review_requested",
      "id": 17171005161,
      "node_id": "RRE_lADOABII586kKCBYzwAAAAP_eL7p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17171005161",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-08T13:20:23Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2750506595,
      "node_id": "PRR_kwDOABII586j8WZj",
      "url": null,
      "actor": null,
      "commit_id": "1f28d22940805492fbec5a9eb37a5ab767f8add1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 1f28d22940805492fbec5a9eb37a5ab767f8add1. Only change since last review is moving the undo close-before-flush fix to an earlier commit and making it more explicit. \r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2783960395\r\n\r\nThanks for describing the previous failures. I still don't really understand them and I guess I am not too concerned but would appreciate more of an explanation.\r\n\r\nFor the windows failure it seems like https://github.com/bitcoin/bitcoin/compare/38b7e8e5ced36cddd7e87fa852ac38daf906501a..fe6b0e425c88c42fc501acef86a642bc19feca9f#diff-73552341d85aec344497b47f1c2aa53a7e01a415030e40f56b1c454aef5f209dR567-R571 is not changing any test code but just dropping `for (int rep{0}; rep < 10; ++rep)` loop around the test. I don't know how that changes things since there are no variables outside the loop and it looks like all files are closed before they are used again, both before and after that diff.\r\n\r\nFor the (1<<20) OOM failure I just don't even know the basics of when it happens and why it is expected to happen. From your reference to `block413567.raw` it sounds like it is happening in a benchmark? Normally I would not expect a benchmark to leak memory so is this happening in some special build with instrumentation that does leak memory, or just uses a lot of memory?",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2750506595",
      "submitted_at": "2025-04-08T15:48:26Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
    },
    {
      "event": "commented",
      "id": 2786970258,
      "node_id": "IC_kwDOABII586mHcqS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2786970258",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-08T16:11:06Z",
      "updated_at": "2025-04-08T16:11:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "> is not changing any test code\r\n\r\nGithub merged a few consecutive pushes, this is the smallest diff which showed the test fix: https://github.com/bitcoin/bitcoin/compare/aaceecad2ba85ac7513d1e2973960bdae65ab0fc..38b7e8e5ced36cddd7e87fa852ac38daf906501a?w=1#diff-73552341d85aec344497b47f1c2aa53a7e01a415030e40f56b1c454aef5f209dR568-R571\r\ni.e. narrowing the scope of the `Autofile{...}.write(...)` test call.\r\n```C++\r\n// Write out the file with random content\r\n{\r\n    AutoFile{test_file.Open(pos, false), obfuscation}.write(m_rng.randbytes<std::byte>(file_size));\r\n}\r\nBOOST_CHECK_EQUAL(fs::file_size(test_file.FileName(pos)), file_size);\r\n```\r\n\r\nWhich assures that the same test file can be opened for reading now.\r\n\r\n> For the (1<<20) OOM failure I just don't even know the basics of when it happens and why it is expected to happen\r\n\r\nThat's what bothers me as well, the build just fails silently. And if I make it single threaded to deduce which test causes it, it passes.\r\n\r\n> Normally I would not expect a benchmark to leak memory\r\n\r\nWe're running the benchmarks as tests as well in https://github.com/bitcoin/bitcoin/blob/master/src/bench/CMakeLists.txt#L83. I don't expect it to leak, just use extra instrumented memory on multiple threads which happens to add up, apparently.\r\nI'm trying to narrow down the culprit, but whenever I remove a few tests to see if the problem is with the other half, the build passes. And sometimes it takes 4 hours to run a build...",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2786970258",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "commented",
      "id": 2786978562,
      "node_id": "IC_kwDOABII586mHesC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2786978562",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-08T16:14:15Z",
      "updated_at": "2025-04-08T16:14:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "> extra instrumented memory\r\n\r\nThanks but this is the part I don't understand. Instrumented how? Which CI build is failing? Is there a link to the failure?",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2786978562",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "commented",
      "id": 2787004770,
      "node_id": "IC_kwDOABII586mHlFi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2787004770",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-08T16:23:04Z",
      "updated_at": "2025-04-08T16:23:38Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Instrumented how?\r\n\r\nIt's the `ASan + LSan + UBSan + integer, no depends, USDT` build, so the sanitizers need to instrument the code to detect violations, which bloats the resource requirements - I read that `AddressSanitizer` typically doubles the memory overhead. The build doesn't fail for uninstumented code or for smaller values.\r\n\r\n> Which CI build is failing?\r\n\r\nMy mistake, I though this was easy to find in https://github.com/l0rinc/bitcoin/pull/2 - see https://github.com/l0rinc/bitcoin/actions/runs/14329738280/job/40162805114?pr=2 terminating with a container sigterm:\r\n> .....................................................................................\r\n>13/318 - p2p_node_network_limited.py --v1transport passed, duration: 247 s\r\n>                                                                                     \r\n>14/318 - p2p_node_network_limited.py --v2transport passed, duration: 250 s\r\n>.....\r\n>     \r\n>.........................................................................\r\n>Error: Process completed with exit code 143.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2787004770",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "commented",
      "id": 2788560758,
      "node_id": "IC_kwDOABII586mNg92",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2788560758",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-09T07:07:58Z",
      "updated_at": "2025-04-09T07:07:58Z",
      "author_association": "MEMBER",
      "body": "> For the (1<<20) OOM failure I just don't even know the basics of when it happens and why it is expected to happen. From your reference to `block413567.raw` it sounds like it is happening in a benchmark? Normally I would not expect a benchmark to leak memory so is this happening in some special build with instrumentation that does leak memory, or just uses a lot of memory?\r\n\r\nYeah, I don't think the issue is in the benchmarks. The output from above (`14/318 - p2p_node_network_limited.py --v2transport passed, duration: 250 s`) is a functional test, which are run after the benchmarks (and unit tests) passed, so it seems more likely that the issue is while running the functional tests under asan.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2788560758",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "reviewed",
      "id": 2755530568,
      "node_id": "PRR_kwDOABII586kPg9I",
      "url": null,
      "actor": null,
      "commit_id": "1f28d22940805492fbec5a9eb37a5ab767f8add1",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Will take a look at the last commit later.\r\n\r\nlgtm ACK 1f28d22940805492fbec5a9eb37a5ab767f8add1 🦈\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: lgtm ACK 1f28d22940805492fbec5a9eb37a5ab767f8add1 🦈\r\njkwshUoCwdvu65CyGBzPw+32BRLBXNdyIarM/LG971L2uHq1nzFe+o7rE27IfcR9DibMN1VOul36+Ah1yIfAAg==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2755530568",
      "submitted_at": "2025-04-10T09:51:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17208310883,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAQBsfxj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17208310883",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f81fd7a7a9bab9414617991f8d417cb21d788606",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/f81fd7a7a9bab9414617991f8d417cb21d788606",
      "created_at": "2025-04-10T15:00:30Z"
    },
    {
      "event": "commented",
      "id": 2794116713,
      "node_id": "IC_kwDOABII586mitZp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2794116713",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-10T15:02:50Z",
      "updated_at": "2025-04-10T15:02:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "> it seems more likely that the issue is while running the functional tests under asan\r\n\r\nI have narrowed it down to these tests: https://github.com/l0rinc/bitcoin/pull/2 (removed as many tests as possible, while the build still fails https://github.com/l0rinc/bitcoin/pull/2/files) - not sure how to continue.\r\n\r\nInterestingly the ASAN build sometimes fails for `1 << 16` as well (see tracking issue: https://github.com/bitcoin/bitcoin/actions/runs/14355144302/job/40242755698?pr=32043#logs)",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2794116713",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17210527321,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAQB085Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17210527321",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "afc72bbe27f3b682fc45f949bfeb538233dbffa5",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/afc72bbe27f3b682fc45f949bfeb538233dbffa5",
      "created_at": "2025-04-10T17:13:59Z"
    },
    {
      "event": "reviewed",
      "id": 2759287083,
      "node_id": "PRR_kwDOABII586kd2Er",
      "url": null,
      "actor": null,
      "commit_id": "afc72bbe27f3b682fc45f949bfeb538233dbffa5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "re-ACK afc72bbe27f3b682fc45f949bfeb538233dbffa5 🤽\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: re-ACK afc72bbe27f3b682fc45f949bfeb538233dbffa5 🤽\r\nOhqG1qS5V2TCDZFXMUBMBYBW1EH9niVMUiegitPGCMYyLov9Cpv2oB8N2+9yFP+HFr1pGh9w7qTC6HajnxznDw==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2759287083",
      "submitted_at": "2025-04-11T09:26:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
    },
    {
      "event": "review_requested",
      "id": 17220599894,
      "node_id": "RRE_lADOABII586kKCBYzwAAAAQCbYBW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17220599894",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-11T09:26:42Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 17220600128,
      "node_id": "RRE_lADOABII586kKCBYzwAAAAQCbYFA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17220600128",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-11T09:26:43Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17239102045,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAQDh9Jd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17239102045",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "395062f31ec64063d3dd2f9e6f2a241565362d06",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/395062f31ec64063d3dd2f9e6f2a241565362d06",
      "created_at": "2025-04-13T16:57:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17239104387,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAQDh9uD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17239104387",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4735c678f28912c20bee5f5c5feaa100ecd506d8",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/4735c678f28912c20bee5f5c5feaa100ecd506d8",
      "created_at": "2025-04-13T16:58:51Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDMxOTcxNTVmOTFhNDhiZGY3NjBhZDQyNDJmZjdjNzVmNjZlNDdjMzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3197155f91a48bdf760ad4242ff7c75f66e47c32",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3197155f91a48bdf760ad4242ff7c75f66e47c32",
      "tree": {
        "sha": "fe87c10b66bf14530206d845b31592e895ab0cfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fe87c10b66bf14530206d845b31592e895ab0cfb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c77e3107b813ccb638480f100c5ab2a1d9043a6b",
          "sha": "c77e3107b813ccb638480f100c5ab2a1d9043a6b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c77e3107b813ccb638480f100c5ab2a1d9043a6b"
        }
      ],
      "message": "refactor: collect block read operations into try block\n\nReorganized error handling in block-related operations by grouping related operations together within the same scope.\n\nIn `ReadBlockUndo()` and `ReadBlock()`, moved all deserialization operations, comments and checksum verification inside a single try/catch block for cleaner error handling.\nIn `WriteBlockUndo()`, consolidated hash calculation and data writing operations within a common block to better express their logical relationship.",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-13T21:44:44Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-03-14T19:11:52Z"
      },
      "sha": "3197155f91a48bdf760ad4242ff7c75f66e47c32"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY2NDBkZDUyYzlmY2I4NWQ3N2YwODE3ODBjMDJlZTM3YjgwODkwOTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6640dd52c9fcb85d77f081780c02ee37b8089091",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6640dd52c9fcb85d77f081780c02ee37b8089091",
      "tree": {
        "sha": "7f498c1be82e4ae8225be09101ce9c167e1b7198",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f498c1be82e4ae8225be09101ce9c167e1b7198"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3197155f91a48bdf760ad4242ff7c75f66e47c32",
          "sha": "3197155f91a48bdf760ad4242ff7c75f66e47c32",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3197155f91a48bdf760ad4242ff7c75f66e47c32"
        }
      ],
      "message": "Narrow scope of undofile write to avoid possible resource management issue\n\n`AutoFile{OpenUndoFile(pos)}` was still in scope when `FlushUndoFile(pos.nFile)` was called, which could lead to file handle conflicts or other unexpected behavior.\n\nCo-authored-by: Hodlinator <172445034+hodlinator@users.noreply.github.com>\nCo-authored-by: maflcko <6399679+maflcko@users.noreply.github.com>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-13T21:44:46Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-07T15:47:57Z"
      },
      "sha": "6640dd52c9fcb85d77f081780c02ee37b8089091"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGE0ZGUxNjA0OTIyMmQwYTBmNTUzMGY0ZTM2NjI1NDQ3OGEyMWFiNDQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4de16049222d0a0f5530f4e366254478a21ab44",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a4de16049222d0a0f5530f4e366254478a21ab44",
      "tree": {
        "sha": "02213f1f640351cf36a82f13ac3686345a43d31e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02213f1f640351cf36a82f13ac3686345a43d31e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6640dd52c9fcb85d77f081780c02ee37b8089091",
          "sha": "6640dd52c9fcb85d77f081780c02ee37b8089091",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6640dd52c9fcb85d77f081780c02ee37b8089091"
        }
      ],
      "message": "scripted-diff: shorten BLOCK_SERIALIZATION_HEADER_SIZE constant\n\nRenames the constant to be less verbose and better reflect its purpose:\nit represents the size of the storage header that precedes serialized block data on disk,\nnot to be confused with a block's own header.\n\n-BEGIN VERIFY SCRIPT-\ngit grep -q \"STORAGE_HEADER_BYTES\" $(git ls-files) && echo \"Error: Target name STORAGE_HEADER_BYTES already exists in the codebase\" && exit 1\nsed -i 's/BLOCK_SERIALIZATION_HEADER_SIZE/STORAGE_HEADER_BYTES/g' $(git grep -l 'BLOCK_SERIALIZATION_HEADER_SIZE')\n-END VERIFY SCRIPT-",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-13T21:44:46Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-03-14T21:09:38Z"
      },
      "sha": "a4de16049222d0a0f5530f4e366254478a21ab44"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY3ZmNjNjQ4MDIzODVhNjIyNGJiM2U5YjIwNjkyNzJiOTk5NGJmOWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/67fcc64802385a6224bb3e9b2069272b9994bf9d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/67fcc64802385a6224bb3e9b2069272b9994bf9d",
      "tree": {
        "sha": "a1cd0dcebb5395c02653bd6dc1ebc4c91cfbf01c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1cd0dcebb5395c02653bd6dc1ebc4c91cfbf01c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4de16049222d0a0f5530f4e366254478a21ab44",
          "sha": "a4de16049222d0a0f5530f4e366254478a21ab44",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a4de16049222d0a0f5530f4e366254478a21ab44"
        }
      ],
      "message": "log: unify error messages for (read/write)[undo]block\n\nCo-authored-by: maflcko <6399679+maflcko@users.noreply.github.com>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-13T21:44:46Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-01-24T14:12:28Z"
      },
      "sha": "67fcc64802385a6224bb3e9b2069272b9994bf9d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17239702666,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAQDkPyK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17239702666",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d6e1b3849d98a6def4d8fc70c2c4ea71d0705211",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/d6e1b3849d98a6def4d8fc70c2c4ea71d0705211",
      "created_at": "2025-04-13T21:45:08Z"
    },
    {
      "event": "commented",
      "id": 2800974237,
      "node_id": "IC_kwDOABII586m83md",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2800974237",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-14T09:07:57Z",
      "updated_at": "2025-04-14T09:07:57Z",
      "author_association": "MEMBER",
      "body": "\r\nre-ACK d6e1b3849d98a6def4d8fc70c2c4ea71d0705211 💻\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: re-ACK d6e1b3849d98a6def4d8fc70c2c4ea71d0705211 💻\r\nNUJD8/Jp9vcO7VClfi+Zi8t3QYLlphjBP06VDeb9fKEClmCIr8yUefztOy/XqjGoBZByn9spNVKP6xZPXeuHDw==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#issuecomment-2800974237",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31551"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA1NmNiM2MwZDJlZmI4NjQ0N2I3ZmY3Nzg4YzIwNmUyZTdkNzJjMTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/056cb3c0d2efb86447b7ff7788c206e2e7d72c12",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/056cb3c0d2efb86447b7ff7788c206e2e7d72c12",
      "tree": {
        "sha": "0e13c2e9d69537451ca49e06aad63b22e92e10bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e13c2e9d69537451ca49e06aad63b22e92e10bb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/67fcc64802385a6224bb3e9b2069272b9994bf9d",
          "sha": "67fcc64802385a6224bb3e9b2069272b9994bf9d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/67fcc64802385a6224bb3e9b2069272b9994bf9d"
        }
      ],
      "message": "refactor: clear up blockstorage/streams in preparation for optimization\n\nMade every OpenBlockFile#fReadOnly value explicit.\n\nReplaced hard-coded values in ReadRawBlock with STORAGE_HEADER_BYTES.\nChanged `STORAGE_HEADER_BYTES` and `UNDO_DATA_DISK_OVERHEAD` to `uint32_t` to avoid casts.\n\nAlso added `LIFETIMEBOUND` to the `AutoFile` parameter of `BufferedFile`, which stores a reference to the underlying `AutoFile`, allowing Clang to emit warnings if the referenced `AutoFile` might be destroyed while `BufferedFile` still exists.\nWithout this attribute, code with lifetime violations wouldn't trigger compiler warnings.\n\nCo-authored-by: maflcko <6399679+maflcko@users.noreply.github.com>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-14T09:57:14Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-03-26T11:40:20Z"
      },
      "sha": "056cb3c0d2efb86447b7ff7788c206e2e7d72c12"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUyMDk2NWUyOTM5NTY3ZTBlNWI3YmNmNTk4ZjM4OTFiZjRhODA2Yzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/520965e2939567e0e5b7bcf598f3891bf4a806c9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/520965e2939567e0e5b7bcf598f3891bf4a806c9",
      "tree": {
        "sha": "319820ced257818f9ea523e3a3ef54b295b7f89c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/319820ced257818f9ea523e3a3ef54b295b7f89c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/056cb3c0d2efb86447b7ff7788c206e2e7d72c12",
          "sha": "056cb3c0d2efb86447b7ff7788c206e2e7d72c12",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/056cb3c0d2efb86447b7ff7788c206e2e7d72c12"
        }
      ],
      "message": "optimization: bulk serialization reads in `UndoRead`, `ReadBlock`\n\nThe obfuscation (XOR) operations are currently done byte-by-byte during serialization. Buffering the reads will enable batching the obfuscation operations later.\n\nDifferent operating systems handle file caching differently, so reading larger batches (and processing them from memory) is measurably faster, likely because of fewer native fread calls and reduced lock contention.\n\nNote that `ReadRawBlock` doesn't need buffering since it already reads the whole block directly.\nUnlike `ReadBlockUndo`, the new `ReadBlock` implementation delegates to `ReadRawBlock`, which uses more memory than a buffered alternative but results in slightly simpler code and a small performance increase (~0.4%). This approach also clearly documents that `ReadRawBlock` is a logical subset of `ReadBlock` functionality.\n\nThe current implementation, which iterates over a fixed-size buffer, provides a more general alternative to Cory Fields' solution of reading the entire block size in advance.\n\nBuffer sizes were selected based on benchmarking to ensure the buffered reader produces performance similar to reading the whole block into memory. Smaller buffers were slower, while larger ones showed diminishing returns.\n\n------\n\n> macOS Sequoia 15.3.1\n> C++ compiler .......................... Clang 19.1.7\n> cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ && cmake --build build -j$(nproc) && build/bin/bench_bitcoin -filter='ReadBlockBench' -min-time=10000\n\nBefore:\n\n|               ns/op |                op/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|        2,271,441.67 |              440.25 |    0.1% |     11.00 | `ReadBlockBench`\n\nAfter:\n\n|               ns/op |                op/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|        1,738,971.29 |              575.05 |    0.2% |     10.97 | `ReadBlockBench`\n\n------\n\n> Ubuntu 24.04.2 LTS\n> C++ compiler .......................... GNU 13.3.0\n> cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ && cmake --build build -j$(nproc) && build/bin/bench_bitcoin -filter='ReadBlockBench' -min-time=20000\n\nBefore:\n\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\n|        6,895,987.11 |              145.01 |    0.0% |   71,055,269.86 |   23,977,374.37 |  2.963 |   5,074,828.78 |    0.4% |     22.00 | `ReadBlockBench`\n\nAfter:\n\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\n|        5,771,882.71 |              173.25 |    0.0% |   65,741,889.82 |   20,453,232.33 |  3.214 |   3,971,321.75 |    0.3% |     22.01 | `ReadBlockBench`\n\nCo-authored-by: maflcko <6399679+maflcko@users.noreply.github.com>\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>\nCo-authored-by: Martin Leitner-Ankerl <martin.ankerl@gmail.com>\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-14T10:04:06Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-03-26T11:52:29Z"
      },
      "sha": "520965e2939567e0e5b7bcf598f3891bf4a806c9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDhkODAxZTNlZmJmMWUzYjFmOWEwMDYwYjc3Nzc4OGYyNzFjYjIxYzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "tree": {
        "sha": "b72f11b5b645b79893667c8882b8d02239da4529",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b72f11b5b645b79893667c8882b8d02239da4529"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/520965e2939567e0e5b7bcf598f3891bf4a806c9",
          "sha": "520965e2939567e0e5b7bcf598f3891bf4a806c9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/520965e2939567e0e5b7bcf598f3891bf4a806c9"
        }
      ],
      "message": "optimization: bulk serialization writes in `WriteBlockUndo` and `WriteBlock`\n\nSimilarly to the serialization reads optimization, buffered writes will enable batched XOR calculations.\nThis is especially beneficial since the current implementation requires copying the write input's `std::span` to perform obfuscation.\nBatching allows us to apply XOR operations on the internal buffer instead, reducing unnecessary data copying and improving performance.\n\n------\n\n> macOS Sequoia 15.3.1\n> C++ compiler .......................... Clang 19.1.7\n> cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ && cmake --build build -j$(nproc) && build/bin/bench_bitcoin -filter='WriteBlockBench' -min-time=10000\n\nBefore:\n\n|               ns/op |                op/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|        5,149,564.31 |              194.19 |    0.8% |     10.95 | `WriteBlockBench`\n\nAfter:\n\n|               ns/op |                op/s |    err% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------:|:----------\n|        2,990,564.63 |              334.39 |    1.5% |     11.27 | `WriteBlockBench`\n\n------\n\n> Ubuntu 24.04.2 LTS\n> C++ compiler .......................... GNU 13.3.0\n> cmake -B build -DBUILD_BENCH=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ && cmake --build build -j$(nproc) && build/bin/bench_bitcoin -filter='WriteBlockBench' -min-time=20000\n\nBefore:\n\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\n|        5,152,973.58 |              194.06 |    2.2% |   19,350,886.41 |    8,784,539.75 |  2.203 |   3,079,335.21 |    0.4% |     23.18 | `WriteBlockBench`\n\nAfter:\n\n|               ns/op |                op/s |    err% |          ins/op |          cyc/op |    IPC |         bra/op |   miss% |     total | benchmark\n|--------------------:|--------------------:|--------:|----------------:|----------------:|-------:|---------------:|--------:|----------:|:----------\n|        4,145,681.13 |              241.21 |    4.0% |   15,337,596.85 |    5,732,186.47 |  2.676 |   2,239,662.64 |    0.1% |     23.94 | `WriteBlockBench`\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>\nCo-authored-by: Cory Fields <cory-nospam-@coryfields.com>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-04-14T10:04:06Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2025-03-26T11:54:07Z"
      },
      "sha": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17246164530,
      "node_id": "HRFPE_lADOABII586kKCBYzwAAAAQD85Yy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17246164530",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "created_at": "2025-04-14T10:13:37Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928718017",
      "pull_request_review_id": 2572715478,
      "id": 1928718017,
      "node_id": "PRRC_kwDOABII585y9ebB",
      "diff_hunk": "@@ -995,34 +1015,43 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n     return true;\n }\n \n-bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\n+bool BlockManager::ReadBlock(CBlock& block, FlatFilePos pos) const\n {\n     block.SetNull();\n \n+    if (pos.nPos < BLOCK_SERIALIZATION_HEADER_SIZE) return false;\n+    uint32_t blk_size;\n+    pos.nPos -= sizeof blk_size;\n+\n     // Open history file to read\n     AutoFile filein{OpenBlockFile(pos, true)};\n     if (filein.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed for %s\\n\", __func__, pos.ToString());\n+        LogError(\"OpenBlockFile failed for %s\", pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 113,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "0e9fb2ed330960c0e4cd36b077c64ac7d0f84240",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I am not a fan of mixing logging changes into a commit that does something completely different (claimed optimization).\r\n\r\nAlso, not everyone has srclocation logging enabled, so the log strings should still be unique.\r\n\r\nLooks like the prior pull did something similar and now there are two `LogError(\"OpenUndoFile failed\");` in two different contexts. So when removing the `__func__`, it would be good to add back any context that was removed (i.e. whether it was opened for reading or writing).",
      "created_at": "2025-01-24T13:58:44Z",
      "updated_at": "2025-01-24T13:58:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r1928718017",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928718017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1029,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928768996",
      "pull_request_review_id": 2572798868,
      "id": 1928768996,
      "node_id": "PRRC_kwDOABII585y9q3k",
      "diff_hunk": "@@ -995,34 +1015,43 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n     return true;\n }\n \n-bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\n+bool BlockManager::ReadBlock(CBlock& block, FlatFilePos pos) const\n {\n     block.SetNull();\n \n+    if (pos.nPos < BLOCK_SERIALIZATION_HEADER_SIZE) return false;\n+    uint32_t blk_size;\n+    pos.nPos -= sizeof blk_size;\n+\n     // Open history file to read\n     AutoFile filein{OpenBlockFile(pos, true)};\n     if (filein.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed for %s\\n\", __func__, pos.ToString());\n+        LogError(\"OpenBlockFile failed for %s\", pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 113,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "0e9fb2ed330960c0e4cd36b077c64ac7d0f84240",
      "in_reply_to_id": 1928718017,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thank you, excellent observation.\r\nI have separated the comment updates to a final commit and fixed the previous PR's comments as well.\r\n[Done](https://github.com/bitcoin/bitcoin/compare/0e9fb2ed330960c0e4cd36b077c64ac7d0f84240..2a5c52ac4e0c098dc6dcf354d9e00fc5c78b6dfe)",
      "created_at": "2025-01-24T14:30:11Z",
      "updated_at": "2025-01-24T15:24:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r1928768996",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928768996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1029,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928886925",
      "pull_request_review_id": 2572995240,
      "id": 1928886925,
      "node_id": "PRRC_kwDOABII585y-HqN",
      "diff_hunk": "@@ -680,24 +683,33 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n         return false;\n     }\n \n-    // Read block\n-    uint256 hashChecksum;\n-    HashVerifier verifier{filein}; // Use HashVerifier as reserializing may lose data, c.f. commit d342424301013ec47dc146a4beb49d5c9319d80a\n     try {\n+        // Read block\n+        filein >> undo_size;\n+        if (undo_size > MAX_SIZE) {\n+            LogError(\"%s: Refusing to read undo data of size: %d\", __func__, undo_size);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "f8b1b218b4f8533128b337168b6769e2e4c30c02",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in f8b1b218b4f8533128b337168b6769e2e4c30c02: I think for new logs, `__func__` is not needed. `Refusing to read undo data of size` looks unique as well.",
      "created_at": "2025-01-24T15:42:44Z",
      "updated_at": "2025-01-24T15:57:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r1928886925",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928886925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 690,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928892086",
      "pull_request_review_id": 2572995240,
      "id": 1928892086,
      "node_id": "PRRC_kwDOABII585y-I62",
      "diff_hunk": "@@ -680,24 +683,33 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n         return false;\n     }\n \n-    // Read block\n-    uint256 hashChecksum;\n-    HashVerifier verifier{filein}; // Use HashVerifier as reserializing may lose data, c.f. commit d342424301013ec47dc146a4beb49d5c9319d80a\n     try {\n+        // Read block\n+        filein >> undo_size;\n+        if (undo_size > MAX_SIZE) {\n+            LogError(\"%s: Refusing to read undo data of size: %d\", __func__, undo_size);\n+            return false;\n+        }\n+\n+        std::vector<uint8_t> mem(undo_size);\n+        filein >> Span{mem};\n+\n+        SpanReader reader{mem};\n+        HashVerifier verifier{reader}; // Use HashVerifier as reserializing may lose data, c.f. commit d342424301013ec47dc146a4beb49d5c9319d80a\n         verifier << index.pprev->GetBlockHash();\n         verifier >> blockundo;\n+\n+        uint256 hashChecksum;\n         filein >> hashChecksum;\n+        if (hashChecksum != verifier.GetHash()) {\n+            LogError(\"%s: Checksum mismatch at %s\\n\", __func__, pos.ToString());\n+            return false;\n+        }\n     } catch (const std::exception& e) {\n         LogError(\"%s: Deserialize or I/O error - %s at %s\\n\", __func__, e.what(), pos.ToString());\n         return false;\n     }\n \n-    // Verify checksum\n-    if (hashChecksum != verifier.GetHash()) {",
      "path": "src/node/blockstorage.cpp",
      "position": 41,
      "original_position": 47,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "f8b1b218b4f8533128b337168b6769e2e4c30c02",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in https://github.com/bitcoin/bitcoin/commit/f8b1b218b4f8533128b337168b6769e2e4c30c02: Any reason to re-order this? Should be fine to keep the scopes as-is, since they are so small.",
      "created_at": "2025-01-24T15:46:35Z",
      "updated_at": "2025-01-24T15:57:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r1928892086",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928892086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 682,
      "original_line": 682,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928903169",
      "pull_request_review_id": 2572995240,
      "id": 1928903169,
      "node_id": "PRRC_kwDOABII585y-LoB",
      "diff_hunk": "@@ -963,23 +963,34 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n             return false;\n         }\n         // Open history file to append\n-        AutoFile fileout{OpenUndoFile(pos)};\n+        AutoFile fileout{m_undo_file_seq.Open(pos, false), {}}; // We'll obfuscate ourselves",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "f72c2dd3a0c5005bb527587dc5576a19dc6a790d",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in f72c2dd3a0c5005bb527587dc5576a19dc6a790d: I wonder if it would be more encapsulated to add a new `AutoFile::write_large(std::vector<std::byte>&&)` method which consumes a large byte blob. This would allow to keep the xor internal to `AutoFile`, reducing the complexity here and allowing other places to use it as well?",
      "created_at": "2025-01-24T15:54:57Z",
      "updated_at": "2025-01-24T15:57:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r1928903169",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928903169"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928906424",
      "pull_request_review_id": 2572995240,
      "id": 1928906424,
      "node_id": "PRRC_kwDOABII585y-Ma4",
      "diff_hunk": "@@ -679,7 +679,7 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n     // Open history file to read\n     AutoFile filein{OpenUndoFile(pos, true)};\n     if (filein.IsNull()) {\n-        LogError(\"OpenUndoFile failed for %s\", pos.ToString());\n+        LogError(\"%s: OpenUndoFile failed for %s\", __func__, pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "2a5c52ac4e0c098dc6dcf354d9e00fc5c78b6dfe",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 2a5c52ac4e0c098dc6dcf354d9e00fc5c78b6dfe: An alternative would be to say `LogError(\"OpenUndoFile failed for %s while reading\", _);`",
      "created_at": "2025-01-24T15:57:16Z",
      "updated_at": "2025-01-24T15:57:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r1928906424",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928906424"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 682,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928921670",
      "pull_request_review_id": 2573054126,
      "id": 1928921670,
      "node_id": "PRRC_kwDOABII585y-QJG",
      "diff_hunk": "@@ -680,24 +683,33 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n         return false;\n     }\n \n-    // Read block\n-    uint256 hashChecksum;\n-    HashVerifier verifier{filein}; // Use HashVerifier as reserializing may lose data, c.f. commit d342424301013ec47dc146a4beb49d5c9319d80a\n     try {\n+        // Read block\n+        filein >> undo_size;\n+        if (undo_size > MAX_SIZE) {\n+            LogError(\"%s: Refusing to read undo data of size: %d\", __func__, undo_size);\n+            return false;\n+        }\n+\n+        std::vector<uint8_t> mem(undo_size);\n+        filein >> Span{mem};\n+\n+        SpanReader reader{mem};\n+        HashVerifier verifier{reader}; // Use HashVerifier as reserializing may lose data, c.f. commit d342424301013ec47dc146a4beb49d5c9319d80a\n         verifier << index.pprev->GetBlockHash();\n         verifier >> blockundo;\n+\n+        uint256 hashChecksum;\n         filein >> hashChecksum;\n+        if (hashChecksum != verifier.GetHash()) {\n+            LogError(\"%s: Checksum mismatch at %s\\n\", __func__, pos.ToString());\n+            return false;\n+        }\n     } catch (const std::exception& e) {\n         LogError(\"%s: Deserialize or I/O error - %s at %s\\n\", __func__, e.what(), pos.ToString());\n         return false;\n     }\n \n-    // Verify checksum\n-    if (hashChecksum != verifier.GetHash()) {",
      "path": "src/node/blockstorage.cpp",
      "position": 41,
      "original_position": 47,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "f8b1b218b4f8533128b337168b6769e2e4c30c02",
      "in_reply_to_id": 1928892086,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You mean by leaving a `hashChecksum` reference outside the try, initialize it inside and validate it outside as well?\r\nI can do that (or bring them inside in a separate commit), but I didn't like that.\r\nCan you show me with a diff with the version that you like?",
      "created_at": "2025-01-24T16:09:06Z",
      "updated_at": "2025-01-24T16:09:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r1928921670",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928921670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 682,
      "original_line": 682,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928923254",
      "pull_request_review_id": 2573056697,
      "id": 1928923254,
      "node_id": "PRRC_kwDOABII585y-Qh2",
      "diff_hunk": "@@ -963,23 +963,34 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n             return false;\n         }\n         // Open history file to append\n-        AutoFile fileout{OpenUndoFile(pos)};\n+        AutoFile fileout{m_undo_file_seq.Open(pos, false), {}}; // We'll obfuscate ourselves",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "f72c2dd3a0c5005bb527587dc5576a19dc6a790d",
      "in_reply_to_id": 1928903169,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Interesting idea - what do others think?",
      "created_at": "2025-01-24T16:10:18Z",
      "updated_at": "2025-01-24T16:10:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r1928923254",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928923254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928932581",
      "pull_request_review_id": 2573071820,
      "id": 1928932581,
      "node_id": "PRRC_kwDOABII585y-Szl",
      "diff_hunk": "@@ -680,24 +683,33 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n         return false;\n     }\n \n-    // Read block\n-    uint256 hashChecksum;\n-    HashVerifier verifier{filein}; // Use HashVerifier as reserializing may lose data, c.f. commit d342424301013ec47dc146a4beb49d5c9319d80a\n     try {\n+        // Read block\n+        filein >> undo_size;\n+        if (undo_size > MAX_SIZE) {\n+            LogError(\"%s: Refusing to read undo data of size: %d\", __func__, undo_size);\n+            return false;\n+        }\n+\n+        std::vector<uint8_t> mem(undo_size);\n+        filein >> Span{mem};\n+\n+        SpanReader reader{mem};\n+        HashVerifier verifier{reader}; // Use HashVerifier as reserializing may lose data, c.f. commit d342424301013ec47dc146a4beb49d5c9319d80a\n         verifier << index.pprev->GetBlockHash();\n         verifier >> blockundo;\n+\n+        uint256 hashChecksum;\n         filein >> hashChecksum;\n+        if (hashChecksum != verifier.GetHash()) {\n+            LogError(\"%s: Checksum mismatch at %s\\n\", __func__, pos.ToString());\n+            return false;\n+        }\n     } catch (const std::exception& e) {\n         LogError(\"%s: Deserialize or I/O error - %s at %s\\n\", __func__, e.what(), pos.ToString());\n         return false;\n     }\n \n-    // Verify checksum\n-    if (hashChecksum != verifier.GetHash()) {",
      "path": "src/node/blockstorage.cpp",
      "position": 41,
      "original_position": 47,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "f8b1b218b4f8533128b337168b6769e2e4c30c02",
      "in_reply_to_id": 1928892086,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "All good, I see it wouldn't make the diff smaller. Feel free to resolve.",
      "created_at": "2025-01-24T16:17:22Z",
      "updated_at": "2025-01-24T16:17:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r1928932581",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928932581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 682,
      "original_line": 682,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928943858",
      "pull_request_review_id": 2573090177,
      "id": 1928943858,
      "node_id": "PRRC_kwDOABII585y-Vjy",
      "diff_hunk": "@@ -680,24 +683,33 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n         return false;\n     }\n \n-    // Read block\n-    uint256 hashChecksum;\n-    HashVerifier verifier{filein}; // Use HashVerifier as reserializing may lose data, c.f. commit d342424301013ec47dc146a4beb49d5c9319d80a\n     try {\n+        // Read block\n+        filein >> undo_size;\n+        if (undo_size > MAX_SIZE) {\n+            LogError(\"%s: Refusing to read undo data of size: %d\", __func__, undo_size);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "f8b1b218b4f8533128b337168b6769e2e4c30c02",
      "in_reply_to_id": 1928886925,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-01-24T16:26:04Z",
      "updated_at": "2025-01-24T16:26:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r1928943858",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928943858"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 690,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928943965",
      "pull_request_review_id": 2573090354,
      "id": 1928943965,
      "node_id": "PRRC_kwDOABII585y-Vld",
      "diff_hunk": "@@ -679,7 +679,7 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n     // Open history file to read\n     AutoFile filein{OpenUndoFile(pos, true)};\n     if (filein.IsNull()) {\n-        LogError(\"OpenUndoFile failed for %s\", pos.ToString());\n+        LogError(\"%s: OpenUndoFile failed for %s\", __func__, pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "2a5c52ac4e0c098dc6dcf354d9e00fc5c78b6dfe",
      "in_reply_to_id": 1928906424,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-01-24T16:26:10Z",
      "updated_at": "2025-01-24T16:26:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r1928943965",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1928943965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 682,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1929846396",
      "pull_request_review_id": 2574364388,
      "id": 1929846396,
      "node_id": "PRRC_kwDOABII585zBx58",
      "diff_hunk": "@@ -963,23 +963,34 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n             return false;\n         }\n         // Open history file to append\n-        AutoFile fileout{OpenUndoFile(pos)};\n+        AutoFile fileout{m_undo_file_seq.Open(pos, false), {}}; // We'll obfuscate ourselves",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "f72c2dd3a0c5005bb527587dc5576a19dc6a790d",
      "in_reply_to_id": 1928903169,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done in a separate commit, the result is a lot cleaner, thanks for the suggestion",
      "created_at": "2025-01-26T19:16:06Z",
      "updated_at": "2025-01-26T19:16:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r1929846396",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1929846396"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 966,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2005770365",
      "pull_request_review_id": 2702960726,
      "id": 2005770365,
      "node_id": "PRRC_kwDOABII5853jaB9",
      "diff_hunk": "@@ -467,6 +470,54 @@ class AutoFile\n     }\n };\n \n+class BufferedFileW\n+{\n+    AutoFile& m_file;\n+    uint32_t m_buffer_size;\n+    DataStream m_buf;\n+\n+public:\n+    explicit BufferedFileW(AutoFile& file, const uint32_t buffer_size)\n+        : m_file(file), m_buffer_size{buffer_size}, m_buf{buffer_size} {}\n+\n+    ~BufferedFileW()\n+    {\n+        Assert(m_buf.size() <= m_buffer_size);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "cf019b73a7487df6bf15d2950a013723bf007405",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This could be an assume, given that the program can continue normally, albeit it is a pessimization or possible OOM on low memory machines?",
      "created_at": "2025-03-20T14:25:40Z",
      "updated_at": "2025-03-20T14:25:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2005770365",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2005770365"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 485,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2006064197",
      "pull_request_review_id": 2703462464,
      "id": 2006064197,
      "node_id": "PRRC_kwDOABII5853khxF",
      "diff_hunk": "@@ -467,6 +470,54 @@ class AutoFile\n     }\n };\n \n+class BufferedFileW\n+{\n+    AutoFile& m_file;\n+    uint32_t m_buffer_size;\n+    DataStream m_buf;\n+\n+public:\n+    explicit BufferedFileW(AutoFile& file, const uint32_t buffer_size)\n+        : m_file(file), m_buffer_size{buffer_size}, m_buf{buffer_size} {}\n+\n+    ~BufferedFileW()\n+    {\n+        Assert(m_buf.size() <= m_buffer_size);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "cf019b73a7487df6bf15d2950a013723bf007405",
      "in_reply_to_id": 2005770365,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> This could be an assume\r\n\r\nI'm fine with both, thanks, changed reader & writer.\r\n\r\n> This could be an assume, given that the program can continue normally, albeit it is a pessimization or possible OOM on low memory machines?\r\n\r\nYou mean reading the whole block into memory could be the last straw? \r\nCan you please detail the pessimization scenario?\r\n\r\n",
      "created_at": "2025-03-20T16:48:29Z",
      "updated_at": "2025-03-20T16:48:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2006064197",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2006064197"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 485,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2006146926",
      "pull_request_review_id": 2703595311,
      "id": 2006146926,
      "node_id": "PRRC_kwDOABII5853k19u",
      "diff_hunk": "@@ -467,6 +470,54 @@ class AutoFile\n     }\n };\n \n+class BufferedFileW\n+{\n+    AutoFile& m_file;\n+    uint32_t m_buffer_size;\n+    DataStream m_buf;\n+\n+public:\n+    explicit BufferedFileW(AutoFile& file, const uint32_t buffer_size)\n+        : m_file(file), m_buffer_size{buffer_size}, m_buf{buffer_size} {}\n+\n+    ~BufferedFileW()\n+    {\n+        Assert(m_buf.size() <= m_buffer_size);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "cf019b73a7487df6bf15d2950a013723bf007405",
      "in_reply_to_id": 2005770365,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I just mean that the assert gives a hard upper bound, but the assume is a bit weaker on release builds, so if the code is used in a place where the upper bound is too small, the assume-version would continue to work on machines with enough memory and only crash \"when needed\" (aka when running oom). ",
      "created_at": "2025-03-20T17:37:43Z",
      "updated_at": "2025-03-20T17:37:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2006146926",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2006146926"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 485,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023827585",
      "pull_request_review_id": 2734273927,
      "id": 2023827585,
      "node_id": "PRRC_kwDOABII5854oSiB",
      "diff_hunk": "@@ -666,24 +666,26 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n         return false;\n     }\n \n-    // Read block\n-    uint256 hashChecksum;\n-    HashVerifier verifier{filein}; // Use HashVerifier as reserializing may lose data, c.f. commit d342424301013ec47dc146a4beb49d5c9319d80a\n     try {\n+        // Read block\n+        HashVerifier verifier{filein}; // Use HashVerifier, as reserializing may lose data, c.f. commit d3424243",
      "path": "src/node/blockstorage.cpp",
      "position": 28,
      "original_position": 9,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fbe701bf32a33766d06bec58e4c0fb70e94f60b1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: collect block read operations into try block\" (fbe701bf32a33766d06bec58e4c0fb70e94f60b1)\r\n\r\nIt doesn't seem great to move HashVerifier constructor and GetHash call inside the try block to catch std::exceptions when we never expect these methods to throw them. Can commit description be a little clearer about why this is necessary? Or is it not necessary but just being done as a kind of defensive programming? I guess it seems ok either way but would be good to be clear about the specfic reason in the commit description.",
      "created_at": "2025-04-02T00:11:18Z",
      "updated_at": "2025-04-02T02:35:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2023827585",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023827585"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 672,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023836900",
      "pull_request_review_id": 2734273927,
      "id": 2023836900,
      "node_id": "PRRC_kwDOABII5854oUzk",
      "diff_hunk": "@@ -75,10 +75,10 @@ static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n \n /** Size of header written by WriteBlock before a serialized CBlock (8 bytes) */\n-static constexpr size_t BLOCK_SERIALIZATION_HEADER_SIZE{std::tuple_size_v<MessageStartChars> + sizeof(unsigned int)};\n+static constexpr size_t HEADER_BYTE_SIZE{std::tuple_size_v<MessageStartChars> + sizeof(unsigned int)};",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "4d90db8b960bf1ea969bedfebfdceccfabf6f9a5",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: shorten BLOCK_SERIALIZATION_HEADER_SIZE\" (4d90db8b960bf1ea969bedfebfdceccfabf6f9a5)\r\n\r\nMaybe consider a more descriptive name like `node::STORAGE_HEADER_BYTES` or `node::BLOCKFILE_HEADER_BYTES` because the name `node::HEADER_BYTE_SIZE` is very generic, there's no indication it is linked to blocks or storage, and code using it is less clear.",
      "created_at": "2025-04-02T00:22:16Z",
      "updated_at": "2025-04-02T02:36:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2023836900",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023836900"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023839131",
      "pull_request_review_id": 2734273927,
      "id": 2023839131,
      "node_id": "PRRC_kwDOABII5854oVWb",
      "diff_hunk": "@@ -1035,11 +1035,11 @@ bool BlockManager::ReadRawBlock(std::vector<uint8_t>& block, const FlatFilePos&\n     FlatFilePos hpos = pos;\n     // If nPos is less than 8 the pos is null and we don't have the block data\n     // Return early to prevent undefined behavior of unsigned int underflow\n-    if (hpos.nPos < 8) {\n+    if (hpos.nPos < HEADER_BYTE_SIZE) {",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fc97b819969bb6c31245a8e2e0b5987881329967",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: replace raw values in ReadRawBlock with HEADER_BYTE_SIZE\" (fc97b819969bb6c31245a8e2e0b5987881329967)\r\n\r\nRight now we have comments in the code saying that HEADER_BYTE_SIZE is 8, but maybe it would be good to replace comment with a static_assert enforcing that. Could give more confidence in this code and prevent breakage in case size calculation is updated in the future.",
      "created_at": "2025-04-02T00:25:38Z",
      "updated_at": "2025-04-02T02:35:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2023839131",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023839131"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1038,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023879247",
      "pull_request_review_id": 2734273927,
      "id": 2023879247,
      "node_id": "PRRC_kwDOABII5854ofJP",
      "diff_hunk": "@@ -614,4 +618,41 @@ class BufferedFile\n     }\n };\n \n+template <typename S>\n+class BufferedReader",
      "path": "src/streams.h",
      "position": 47,
      "original_position": 23,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "29678d79e7e127bf2694f83194f47e0bfd9849b9",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Bulk serialization reads in `UndoRead`, `ReadBlock`\" (29678d79e7e127bf2694f83194f47e0bfd9849b9)\r\n\r\nImplementation of this class seems reasonable, though I think some improvements would be possible, if interested:\r\n\r\n- I think it would be a little better to replace while loop here with direct read approach in \r\n[BufferedReadOnlyFile::read](https://github.com/l0rinc/bitcoin/blob/b1b55a2c2363f94e7266d31b7e2d818372bd5ce4/src/streams.h#L633-L648) from [#31539](https://github.com/bitcoin/bitcoin/pull/31539) that skips reading into the buffer for the initial read and for large reads after that. I don't think changing this should matter for this PR since the reads here should be small, but the other approach seems strictly better in general since it avoids pointless double copying and looping in the case of large reads (larger than the buffer size).\r\n\r\n- The `DataStream m_buffer` and  `size_t m_size` fields here contain redundant size and position information that is not needed by this class, introducing unnecessary complexity and overhead and potential for bugs. It would be better if this class just had vector+position members as in https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2711550079, or if it just had a `DataStream` member since a `DataStream` object itself consists of a vector+position value.",
      "created_at": "2025-04-02T01:31:53Z",
      "updated_at": "2025-04-02T02:35:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2023879247",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023879247"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 628,
      "original_line": 628,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023885148",
      "pull_request_review_id": 2734273927,
      "id": 2023885148,
      "node_id": "PRRC_kwDOABII5854oglc",
      "diff_hunk": "@@ -655,4 +657,48 @@ class BufferedReader\n     }\n };\n \n+template <typename S>\n+class BufferedWriter\n+{\n+    S& m_stream;\n+    DataStream m_buffer;\n+    size_t m_pos;\n+    size_t m_size;\n+\n+    void flush()\n+    {\n+        Assume(m_pos != 0);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 23,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "8fe73a102f5b8406f166d7ac4b1a36bba84de7c4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Bulk serialization writes in `WriteBlockUndo` and `WriteBlock`\" (8fe73a102f5b8406f166d7ac4b1a36bba84de7c4)\r\n\r\nThis assume doesn't seem good. Should just opening a stream and not writing data abort the program?",
      "created_at": "2025-04-02T01:41:35Z",
      "updated_at": "2025-04-02T02:35:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2023885148",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023885148"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 670,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023887267",
      "pull_request_review_id": 2734273927,
      "id": 2023887267,
      "node_id": "PRRC_kwDOABII5854ohGj",
      "diff_hunk": "@@ -655,4 +657,48 @@ class BufferedReader\n     }\n };\n \n+template <typename S>\n+class BufferedWriter\n+{\n+    S& m_stream;\n+    DataStream m_buffer;\n+    size_t m_pos;\n+    size_t m_size;\n+\n+    void flush()",
      "path": "src/streams.h",
      "position": null,
      "original_position": 21,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "8fe73a102f5b8406f166d7ac4b1a36bba84de7c4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Bulk serialization writes in `WriteBlockUndo` and `WriteBlock`\" (8fe73a102f5b8406f166d7ac4b1a36bba84de7c4)\r\n\r\nI think this should be a public method and callers should be able control when data is flushed without needing to destroy the object. Implementing buffering without ability to flush would seem like an unusual choice.",
      "created_at": "2025-04-02T01:45:01Z",
      "updated_at": "2025-04-02T02:38:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2023887267",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023887267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 668,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023893888",
      "pull_request_review_id": 2734273927,
      "id": 2023893888,
      "node_id": "PRRC_kwDOABII5854oiuA",
      "diff_hunk": "@@ -655,4 +657,48 @@ class BufferedReader\n     }\n };\n \n+template <typename S>\n+class BufferedWriter\n+{\n+    S& m_stream;\n+    DataStream m_buffer;\n+    size_t m_pos;\n+    size_t m_size;",
      "path": "src/streams.h",
      "position": null,
      "original_position": 19,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "8fe73a102f5b8406f166d7ac4b1a36bba84de7c4",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Bulk serialization writes in `WriteBlockUndo` and `WriteBlock`\" (8fe73a102f5b8406f166d7ac4b1a36bba84de7c4)\r\n\r\nAgain m_size and m_pos are redundant because DataStream already contains a size and position. I didn't look into whether it's possible to use DataStream directly here, but it would be nice to actually use the state it carries or just replace it with a plain std::vector and position like https://github.com/bitcoin/bitcoin/pull/31551#pullrequestreview-2711550079 so the class is not tracking unused state that adds complexity and could cause bugs.",
      "created_at": "2025-04-02T01:55:05Z",
      "updated_at": "2025-04-02T02:35:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2023893888",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2023893888"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 666,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024363508",
      "pull_request_review_id": 2735316699,
      "id": 2024363508,
      "node_id": "PRRC_kwDOABII5854qVX0",
      "diff_hunk": "@@ -666,24 +666,26 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n         return false;\n     }\n \n-    // Read block\n-    uint256 hashChecksum;\n-    HashVerifier verifier{filein}; // Use HashVerifier as reserializing may lose data, c.f. commit d342424301013ec47dc146a4beb49d5c9319d80a\n     try {\n+        // Read block\n+        HashVerifier verifier{filein}; // Use HashVerifier, as reserializing may lose data, c.f. commit d3424243",
      "path": "src/node/blockstorage.cpp",
      "position": 28,
      "original_position": 9,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fbe701bf32a33766d06bec58e4c0fb70e94f60b1",
      "in_reply_to_id": 2023827585,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I know that try/catch is often used as narrowly as possible, as if it were an additional return value, but catching an error type means that we shouldn't really care where it's coming from. That enables us to separate the happy path (uninterrupted flow in the try) from the error cases (the catches).\r\n\r\nWe can wrap only the method that can currently throw, but that would break the logical flow, it would mix the main algorithm with the error handling. I know we often do that, but I wanted to untangle it here (especially since it was needed for the previous implementation, now it's just a cleanup).\r\n\r\nEdit: added a short line mentioning separation of concerns to the commit message.",
      "created_at": "2025-04-02T08:43:32Z",
      "updated_at": "2025-04-02T11:33:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024363508",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024363508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 672,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024597846",
      "pull_request_review_id": 2735874876,
      "id": 2024597846,
      "node_id": "PRRC_kwDOABII5854rOlW",
      "diff_hunk": "@@ -75,10 +75,10 @@ static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n \n /** Size of header written by WriteBlock before a serialized CBlock (8 bytes) */\n-static constexpr size_t BLOCK_SERIALIZATION_HEADER_SIZE{std::tuple_size_v<MessageStartChars> + sizeof(unsigned int)};\n+static constexpr size_t HEADER_BYTE_SIZE{std::tuple_size_v<MessageStartChars> + sizeof(unsigned int)};",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "4d90db8b960bf1ea969bedfebfdceccfabf6f9a5",
      "in_reply_to_id": 2023836900,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Changed to `::BLOCK_HEADER_BYTES` in code and commit messages (it's not a `BLOCKFILE` header, right?)",
      "created_at": "2025-04-02T11:02:54Z",
      "updated_at": "2025-04-02T11:02:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024597846",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024597846"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024598314",
      "pull_request_review_id": 2735875692,
      "id": 2024598314,
      "node_id": "PRRC_kwDOABII5854rOsq",
      "diff_hunk": "@@ -1035,11 +1035,11 @@ bool BlockManager::ReadRawBlock(std::vector<uint8_t>& block, const FlatFilePos&\n     FlatFilePos hpos = pos;\n     // If nPos is less than 8 the pos is null and we don't have the block data\n     // Return early to prevent undefined behavior of unsigned int underflow\n-    if (hpos.nPos < 8) {\n+    if (hpos.nPos < HEADER_BYTE_SIZE) {",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fc97b819969bb6c31245a8e2e0b5987881329967",
      "in_reply_to_id": 2023839131,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The comment just referred to the hard-coded value, I left it like that for extra info - but I'll just remove the duplication - no need to assert.",
      "created_at": "2025-04-02T11:03:14Z",
      "updated_at": "2025-04-02T11:03:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024598314",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024598314"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1038,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024599159",
      "pull_request_review_id": 2735877079,
      "id": 2024599159,
      "node_id": "PRRC_kwDOABII5854rO53",
      "diff_hunk": "@@ -614,4 +618,41 @@ class BufferedFile\n     }\n };\n \n+template <typename S>\n+class BufferedReader",
      "path": "src/streams.h",
      "position": 47,
      "original_position": 23,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "29678d79e7e127bf2694f83194f47e0bfd9849b9",
      "in_reply_to_id": 2023879247,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Meh, `DataStream` is indeed forced here, simplified it, what you think of this?\r\nReverted the implementation mostly to the version in #31539, as requested.",
      "created_at": "2025-04-02T11:03:48Z",
      "updated_at": "2025-04-02T11:03:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024599159",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024599159"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 628,
      "original_line": 628,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024599556",
      "pull_request_review_id": 2735877962,
      "id": 2024599556,
      "node_id": "PRRC_kwDOABII5854rPAE",
      "diff_hunk": "@@ -655,4 +657,48 @@ class BufferedReader\n     }\n };\n \n+template <typename S>\n+class BufferedWriter\n+{\n+    S& m_stream;\n+    DataStream m_buffer;\n+    size_t m_pos;\n+    size_t m_size;\n+\n+    void flush()\n+    {\n+        Assume(m_pos != 0);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 23,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "8fe73a102f5b8406f166d7ac4b1a36bba84de7c4",
      "in_reply_to_id": 2023885148,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It would seem fishy to me if we'd do that currently, but made `flush` public and changed the assume to a guard",
      "created_at": "2025-04-02T11:04:03Z",
      "updated_at": "2025-04-02T11:04:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024599556",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024599556"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 670,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024599948",
      "pull_request_review_id": 2735878644,
      "id": 2024599948,
      "node_id": "PRRC_kwDOABII5854rPGM",
      "diff_hunk": "@@ -655,4 +657,48 @@ class BufferedReader\n     }\n };\n \n+template <typename S>\n+class BufferedWriter\n+{\n+    S& m_stream;\n+    DataStream m_buffer;\n+    size_t m_pos;\n+    size_t m_size;\n+\n+    void flush()",
      "path": "src/streams.h",
      "position": null,
      "original_position": 21,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "8fe73a102f5b8406f166d7ac4b1a36bba84de7c4",
      "in_reply_to_id": 2023887267,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-04-02T11:04:17Z",
      "updated_at": "2025-04-02T11:04:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024599948",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024599948"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 668,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024600280",
      "pull_request_review_id": 2735879159,
      "id": 2024600280,
      "node_id": "PRRC_kwDOABII5854rPLY",
      "diff_hunk": "@@ -655,4 +657,48 @@ class BufferedReader\n     }\n };\n \n+template <typename S>\n+class BufferedWriter\n+{\n+    S& m_stream;\n+    DataStream m_buffer;\n+    size_t m_pos;\n+    size_t m_size;",
      "path": "src/streams.h",
      "position": null,
      "original_position": 19,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "8fe73a102f5b8406f166d7ac4b1a36bba84de7c4",
      "in_reply_to_id": 2023893888,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Replaced with vector and pos, thanks",
      "created_at": "2025-04-02T11:04:31Z",
      "updated_at": "2025-04-02T11:04:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024600280",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024600280"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 666,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024900993",
      "pull_request_review_id": 2736399065,
      "id": 2024900993,
      "node_id": "PRRC_kwDOABII5854sYmB",
      "diff_hunk": "@@ -666,24 +666,26 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n         return false;\n     }\n \n-    // Read block\n-    uint256 hashChecksum;\n-    HashVerifier verifier{filein}; // Use HashVerifier as reserializing may lose data, c.f. commit d342424301013ec47dc146a4beb49d5c9319d80a\n     try {\n+        // Read block\n+        HashVerifier verifier{filein}; // Use HashVerifier, as reserializing may lose data, c.f. commit d3424243",
      "path": "src/node/blockstorage.cpp",
      "position": 28,
      "original_position": 9,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fbe701bf32a33766d06bec58e4c0fb70e94f60b1",
      "in_reply_to_id": 2023827585,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024363508\r\n\r\n> Edit: added a short line mentioning separation of concerns to the commit message.\r\n\r\nThanks! Should \"In preparation for upcoming changes\" be dropped from the commit description then? That was the part that confused me. I was trying to figure out what was motivating this change and I couldn't see any connection between catching HashVerifier errors and buffering (either implementation)\r\n",
      "created_at": "2025-04-02T14:03:33Z",
      "updated_at": "2025-04-02T17:03:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024900993",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024900993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 672,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024957398",
      "pull_request_review_id": 2736399065,
      "id": 2024957398,
      "node_id": "PRRC_kwDOABII5854smXW",
      "diff_hunk": "@@ -995,7 +996,7 @@ bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\n \n     try {\n         // Read block\n-        filein >> TX_WITH_WITNESS(block);\n+        BufferedReader{filein} >> TX_WITH_WITNESS(block);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Bulk serialization reads in `UndoRead`, `ReadBlock`\" (5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1)\r\n\r\nThere's no bug here but it seems potentially unsafe to construct a buffered reader as a temporary wrapper around a stream, because the reader can read extra data and leave the underlying stream at an unpredictable position.\r\n\r\nBuffered writers don't have this problem because they flush when they are destroyed, and readers could perhaps avoid the problem in a similar way by rewinding when destroyed. But it seems like a more straightforward way to avoid this problem and make buffered readers safer would to be give them ownership of the underlying stream and require it to moved so there are errors or warnings if it is used incorrectly.\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -665,7 +665,7 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\r\n         LogError(\"OpenUndoFile failed for %s while reading\", pos.ToString());\r\n         return false;\r\n     }\r\n-    BufferedReader filein{file};\r\n+    BufferedReader filein{std::move(file)};\r\n \r\n     try {\r\n         // Read block\r\n@@ -989,15 +989,16 @@ bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\r\n     block.SetNull();\r\n \r\n     // Open history file to read\r\n-    AutoFile filein{OpenBlockFile(pos, true)};\r\n-    if (filein.IsNull()) {\r\n+    AutoFile file{OpenBlockFile(pos, true)};\r\n+    if (file.IsNull()) {\r\n         LogError(\"%s: OpenBlockFile failed for %s\", __func__, pos.ToString());\r\n         return false;\r\n     }\r\n+    BufferedReader filein{std::move(file)};\r\n \r\n     try {\r\n         // Read block\r\n-        BufferedReader{filein} >> TX_WITH_WITNESS(block);\r\n+        filein >> TX_WITH_WITNESS(block);\r\n     } catch (const std::exception& e) {\r\n         LogError(\"%s: Deserialize or I/O error - %s at %s\", __func__, e.what(), pos.ToString());\r\n         return false;\r\n--- a/src/streams.h\r\n+++ b/src/streams.h\r\n@@ -630,7 +630,8 @@ class BufferedReader\r\n     size_t m_buf_pos;\r\n \r\n public:\r\n-    explicit BufferedReader(S& stream, size_t size = 1 << 16) : m_src{stream}, m_buf(size), m_buf_pos{size} {}\r\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)\r\n+    requires std::is_rvalue_reference_v<S&&> : m_src{stream}, m_buf(size), m_buf_pos{size} {}\r\n \r\n     void read(std::span<std::byte> dst)\r\n     {\r\n```\r\n</p>\r\n</details>\r\n\r\nWould seem good to make this change, but not important",
      "created_at": "2025-04-02T14:31:29Z",
      "updated_at": "2025-04-02T17:03:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024957398",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024957398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 999,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024977782",
      "pull_request_review_id": 2736399065,
      "id": 2024977782,
      "node_id": "PRRC_kwDOABII5854srV2",
      "diff_hunk": "@@ -64,6 +64,16 @@ void AutoFile::read(std::span<std::byte> dst)\n     }\n }\n \n+size_t AutoFile::read_buffer(std::span<std::byte> dst)",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Bulk serialization reads in `UndoRead`, `ReadBlock`\" (5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1)\r\n\r\nLooks like read_buffer method is unused so would be great to drop and simplify this commit.",
      "created_at": "2025-04-02T14:41:48Z",
      "updated_at": "2025-04-02T17:03:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024977782",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024977782"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024996744",
      "pull_request_review_id": 2736399065,
      "id": 2024996744,
      "node_id": "PRRC_kwDOABII5854sv-I",
      "diff_hunk": "@@ -614,4 +618,41 @@ class BufferedFile\n     }\n };\n \n+template <typename S>\n+class BufferedReader",
      "path": "src/streams.h",
      "position": 47,
      "original_position": 23,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "29678d79e7e127bf2694f83194f47e0bfd9849b9",
      "in_reply_to_id": 2023879247,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024599159\r\n\r\n> Reverted the implementation mostly to the version in #31539, as requested.\r\n\r\nThanks, new implementation seems to take care of both issues and also be a broader simpilfication.\r\n\r\n",
      "created_at": "2025-04-02T14:50:47Z",
      "updated_at": "2025-04-02T17:03:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024996744",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2024996744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 628,
      "original_line": 628,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025054471",
      "pull_request_review_id": 2736399065,
      "id": 2025054471,
      "node_id": "PRRC_kwDOABII5854s-EH",
      "diff_hunk": "@@ -614,4 +620,39 @@ class BufferedFile\n     }\n };\n \n+template <typename S>\n+class BufferedReader",
      "path": "src/streams.h",
      "position": 47,
      "original_position": 36,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Bulk serialization reads in `UndoRead`, `ReadBlock`\" (5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1)\r\n\r\nCould consider adding a comment like:\r\n\r\n```c++\r\n/**\r\n * Stream wrapper that buffers reads from an underlying stream to improve\r\n * deserialization performance. Requires underlying stream to support read() and\r\n * detail_fread() calls to support fixed-size and variable-sized reads,\r\n * respectively (this interface could be improved and formalized in the future.)\r\n */\r\n```",
      "created_at": "2025-04-02T15:13:20Z",
      "updated_at": "2025-04-02T17:03:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2025054471",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025054471"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": 627,
      "original_start_line": 623,
      "start_side": "RIGHT",
      "line": 628,
      "original_line": 628,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025077307",
      "pull_request_review_id": 2736399065,
      "id": 2025077307,
      "node_id": "PRRC_kwDOABII5854tDo7",
      "diff_hunk": "@@ -614,4 +620,39 @@ class BufferedFile\n     }\n };\n \n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S& stream, size_t size = 1 << 16) : m_src{stream}, m_buf(size), m_buf_pos{size} {}\n+\n+    void read(std::span<std::byte> dst)\n+    {\n+        if (m_buf_pos < m_buf.size()) {\n+            const auto available{Assume(std::min(dst.size(), m_buf.size() - m_buf_pos))};",
      "path": "src/streams.h",
      "position": null,
      "original_position": 48,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Bulk serialization reads in `UndoRead`, `ReadBlock`\" (5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1)\r\n\r\nThe `Assume` here will abort the program if dst is empty, which doesn't seem great when this case could logically be handled by just not reading anything. Treating this as an error is also inconsistent with other stream read methods, and not enforced consistently in this method because if pos == size, the Assume will be skipped. Would suggest just dropping the Assume and not making a special case out of this.",
      "created_at": "2025-04-02T15:24:27Z",
      "updated_at": "2025-04-02T17:05:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2025077307",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025077307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025090269",
      "pull_request_review_id": 2736399065,
      "id": 2025090269,
      "node_id": "PRRC_kwDOABII5854tGzd",
      "diff_hunk": "@@ -614,4 +620,39 @@ class BufferedFile\n     }\n };\n \n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S& stream, size_t size = 1 << 16) : m_src{stream}, m_buf(size), m_buf_pos{size} {}\n+\n+    void read(std::span<std::byte> dst)\n+    {\n+        if (m_buf_pos < m_buf.size()) {\n+            const auto available{Assume(std::min(dst.size(), m_buf.size() - m_buf_pos))};\n+            std::copy_n(m_buf.begin() + m_buf_pos, available, dst.begin());\n+            m_buf_pos += available;\n+            dst = dst.subspan(available);\n+        }\n+        if (!dst.empty()) {\n+            Assume(m_buf_pos == m_buf.size());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 54,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Bulk serialization reads in `UndoRead`, `ReadBlock`\" (5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1)\r\n\r\nIs there a reason assume not assert is used here? If this condition is false it would seem like a serious internal error that would be good not ignore, and I don't think there is reason to think assert would be actually worse for performance, assuming the speedup in this PR just comes from making fewer read calls, not from this code being on a hot path. Would also suggest using assert since it's already used in stream code and this would allow dropping the check.h dependency.",
      "created_at": "2025-04-02T15:30:46Z",
      "updated_at": "2025-04-02T17:03:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2025090269",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025090269"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 642,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025524315",
      "pull_request_review_id": 2737465443,
      "id": 2025524315,
      "node_id": "PRRC_kwDOABII5854uwxb",
      "diff_hunk": "@@ -614,4 +620,39 @@ class BufferedFile\n     }\n };\n \n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S& stream, size_t size = 1 << 16) : m_src{stream}, m_buf(size), m_buf_pos{size} {}\n+\n+    void read(std::span<std::byte> dst)\n+    {\n+        if (m_buf_pos < m_buf.size()) {\n+            const auto available{Assume(std::min(dst.size(), m_buf.size() - m_buf_pos))};\n+            std::copy_n(m_buf.begin() + m_buf_pos, available, dst.begin());\n+            m_buf_pos += available;\n+            dst = dst.subspan(available);\n+        }\n+        if (!dst.empty()) {\n+            Assume(m_buf_pos == m_buf.size());",
      "path": "src/streams.h",
      "position": null,
      "original_position": 54,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1",
      "in_reply_to_id": 2025090269,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ok, changed to assert",
      "created_at": "2025-04-02T20:16:35Z",
      "updated_at": "2025-04-02T20:16:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2025524315",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025524315"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 642,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025524429",
      "pull_request_review_id": 2737465637,
      "id": 2025524429,
      "node_id": "PRRC_kwDOABII5854uwzN",
      "diff_hunk": "@@ -614,4 +620,39 @@ class BufferedFile\n     }\n };\n \n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S& stream, size_t size = 1 << 16) : m_src{stream}, m_buf(size), m_buf_pos{size} {}\n+\n+    void read(std::span<std::byte> dst)\n+    {\n+        if (m_buf_pos < m_buf.size()) {\n+            const auto available{Assume(std::min(dst.size(), m_buf.size() - m_buf_pos))};",
      "path": "src/streams.h",
      "position": null,
      "original_position": 48,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1",
      "in_reply_to_id": 2025077307,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have an even better idea:\r\n```C++\r\n        if (const auto available{std::min(dst.size(), m_buf.size() - m_buf_pos)}) {\r\n```",
      "created_at": "2025-04-02T20:16:41Z",
      "updated_at": "2025-04-02T20:16:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2025524429",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025524429"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025524485",
      "pull_request_review_id": 2737465733,
      "id": 2025524485,
      "node_id": "PRRC_kwDOABII5854uw0F",
      "diff_hunk": "@@ -614,4 +620,39 @@ class BufferedFile\n     }\n };\n \n+template <typename S>\n+class BufferedReader",
      "path": "src/streams.h",
      "position": 47,
      "original_position": 36,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1",
      "in_reply_to_id": 2025054471,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added something similar to both methods, thank you",
      "created_at": "2025-04-02T20:16:45Z",
      "updated_at": "2025-04-02T20:16:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2025524485",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025524485"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": 627,
      "original_start_line": 623,
      "start_side": "RIGHT",
      "line": 628,
      "original_line": 628,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025524650",
      "pull_request_review_id": 2737465940,
      "id": 2025524650,
      "node_id": "PRRC_kwDOABII5854uw2q",
      "diff_hunk": "@@ -64,6 +64,16 @@ void AutoFile::read(std::span<std::byte> dst)\n     }\n }\n \n+size_t AutoFile::read_buffer(std::span<std::byte> dst)",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1",
      "in_reply_to_id": 2024977782,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ooops, letftover after all this refactoring back and forth :)",
      "created_at": "2025-04-02T20:16:51Z",
      "updated_at": "2025-04-02T20:16:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2025524650",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025524650"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 67,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025524894",
      "pull_request_review_id": 2737466303,
      "id": 2025524894,
      "node_id": "PRRC_kwDOABII5854uw6e",
      "diff_hunk": "@@ -995,7 +996,7 @@ bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\n \n     try {\n         // Read block\n-        filein >> TX_WITH_WITNESS(block);\n+        BufferedReader{filein} >> TX_WITH_WITNESS(block);",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "5d3cd74ac8f6acd381a11fe469d37d3c8b1630e1",
      "in_reply_to_id": 2024957398,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Excellent observation, I haven't thought of that since - as you've mentioned - I wasn't thinking of a general purpose buffered reader originally.",
      "created_at": "2025-04-02T20:17:02Z",
      "updated_at": "2025-04-02T20:17:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2025524894",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2025524894"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 999,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2026453700",
      "pull_request_review_id": 2738857957,
      "id": 2026453700,
      "node_id": "PRRC_kwDOABII5854yTrE",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: `1 << 16` ~= 65KiB. Have a feeling this is a common size of buffers operated on by syscalls, might be nice with a brief comment/reference.",
      "created_at": "2025-04-03T08:15:54Z",
      "updated_at": "2025-04-04T21:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2026453700",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2026453700"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2026467265",
      "pull_request_review_id": 2738857957,
      "id": 2026467265,
      "node_id": "PRRC_kwDOABII5854yW_B",
      "diff_hunk": "@@ -553,6 +555,135 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n     fs::remove(streams_test_filename);\n }\n \n+BOOST_AUTO_TEST_CASE(buffered_reader_matches_autofile_random_content)\n+{\n+    for (int rep{0}; rep < 10; ++rep) {\n+        const size_t file_size{1 + m_rng.randrange<size_t>(1 << 17)};\n+        const size_t buf_size{1 + m_rng.randrange(file_size)};",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What's your reasoning for making this a unit test over a fuzz-test? Randomness + loop makes it feel fuzz-adjacent.",
      "created_at": "2025-04-03T08:24:09Z",
      "updated_at": "2025-04-04T21:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2026467265",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2026467265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": 561,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2026489716",
      "pull_request_review_id": 2738857957,
      "id": 2026489716,
      "node_id": "PRRC_kwDOABII5854ycd0",
      "diff_hunk": "@@ -553,6 +555,135 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n     fs::remove(streams_test_filename);\n }\n \n+BOOST_AUTO_TEST_CASE(buffered_reader_matches_autofile_random_content)\n+{\n+    for (int rep{0}; rep < 10; ++rep) {\n+        const size_t file_size{1 + m_rng.randrange<size_t>(1 << 17)};\n+        const size_t buf_size{1 + m_rng.randrange(file_size)};\n+        const FlatFilePos pos{0, 0};\n+\n+        const FlatFileSeq test_file{m_args.GetDataDirBase(), \"buffered_file_test_random\", node::BLOCKFILE_CHUNK_SIZE};\n+        const std::vector obfuscation{m_rng.randbytes<std::byte>(8)};\n+        AutoFile{test_file.Open(pos, false), obfuscation}.write(m_rng.randbytes<std::byte>(file_size));",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could name `bool` parameter at least on first call:\r\n```suggestion\r\n        AutoFile{test_file.Open(pos, /*read_only=*/false), obfuscation}.write(m_rng.randbytes<std::byte>(file_size));\r\n```",
      "created_at": "2025-04-03T08:37:20Z",
      "updated_at": "2025-04-04T21:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2026489716",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2026489716"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 567,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2026498220",
      "pull_request_review_id": 2738857957,
      "id": 2026498220,
      "node_id": "PRRC_kwDOABII5854yeis",
      "diff_hunk": "@@ -465,8 +465,13 @@ class AutoFile\n         ::Unserialize(*this, obj);\n         return *this;\n     }\n+\n+    //! Write a mutable buffer more efficiently than write(), obfuscating the buffer in-place.\n+    void write_buffer(std::span<std::byte> src);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 6,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Slight preference for making the **in/out** aspect more prominent through Doxygen syntax:\r\n```suggestion\r\n    //! @param[in,out] src  Obfuscated in-place for efficiency, before being written to the file.\r\n    void write_buffer(std::span<std::byte> src);\r\n```",
      "created_at": "2025-04-03T08:42:17Z",
      "updated_at": "2025-04-04T21:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2026498220",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2026498220"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": 469,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 470,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2026523200",
      "pull_request_review_id": 2738857957,
      "id": 2026523200,
      "node_id": "PRRC_kwDOABII5854ykpA",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader",
      "path": "src/streams.h",
      "position": 47,
      "original_position": 33,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\ntemplate <typename S, size_t N = 1 << 16>\r\nclass BufferedReader\r\n```\r\nI think it makes more sense to have the buffer size decided at compile time for now, to make heap/stack allocation of `m_buf` optional for the user (though `std::array`). See suggestion commit 4de03f51ab7943f9102b4572d1818ac081af7da4.\r\n\r\n(Personally I would even be fine with not having the size configurable at all; `constexpr size_t N = 1 << 16` inside the class).\r\n\r\nThe main drawback I can see from making it statically defined is that it disrupts the tests as they are written now. Let me know if you want me to assist with figuring something reasonable out there.",
      "created_at": "2025-04-03T08:56:49Z",
      "updated_at": "2025-04-04T21:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2026523200",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2026523200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": 627,
      "original_start_line": 627,
      "start_side": "RIGHT",
      "line": 628,
      "original_line": 628,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027003048",
      "pull_request_review_id": 2738857957,
      "id": 2027003048,
      "node_id": "PRRC_kwDOABII58540Zyo",
      "diff_hunk": "@@ -465,8 +465,13 @@ class AutoFile\n         ::Unserialize(*this, obj);\n         return *this;\n     }\n+\n+    //! Write a mutable buffer more efficiently than write(), obfuscating the buffer in-place.\n+    void write_buffer(std::span<std::byte> src);\n };\n \n+using BufferData = std::vector<std::byte>;",
      "path": "src/streams.h",
      "position": null,
      "original_position": 9,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "aaceecad2ba85ac7513d1e2973960bdae65ab0fc",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: This is prime naming real-estate being put into use, if we do it, maybe it could use less yoda-speak?\r\n\r\n#### Option A)\r\n\r\nHarmonize with `DataStream`:\r\n```suggestion\r\nusing DataBuffer = std::vector<std::byte>;\r\n```\r\n\r\n#### Option B)\r\n\r\nThere is the concept of `ByteVector` as part of other concepts (see `ToByteVector()` and `ByteVectorHash`). They use `unsigned char` but could be overloaded to support `std::byte` as well. Calling this `ByteVector` would be more consistent with pre-existing code.\r\n```suggestion\r\nusing ByteVector = std::vector<std::byte>;\r\n```\r\n(I have a feeling there might already be some typedef/using declaration for the `unsigned char` variant, but couldn't find it).\r\n\r\n#### Option C)\r\n\r\nAvoid introducing this type, this layer of indirection obfuscates the code slightly until internalized.",
      "created_at": "2025-04-03T13:30:14Z",
      "updated_at": "2025-04-04T21:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2027003048",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027003048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 473,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027068989",
      "pull_request_review_id": 2738857957,
      "id": 2027068989,
      "node_id": "PRRC_kwDOABII58540p49",
      "diff_hunk": "@@ -75,10 +75,10 @@ static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n ",
      "path": "src/node/blockstorage.h",
      "position": 2,
      "original_position": 2,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "aaceecad2ba85ac7513d1e2973960bdae65ab0fc",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(Inline comment in random spot to avoid spamming main thread).\r\n\r\nPR description\r\n```diff\r\n- @martinus\r\n+ martinus\r\n```\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/aaceecad2ba85ac7513d1e2973960bdae65ab0fc/CONTRIBUTING.md?plain=1#L170-L174",
      "created_at": "2025-04-03T14:01:02Z",
      "updated_at": "2025-04-04T21:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2027068989",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027068989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027076872",
      "pull_request_review_id": 2738857957,
      "id": 2027076872,
      "node_id": "PRRC_kwDOABII58540r0I",
      "diff_hunk": "@@ -995,34 +1015,43 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n     return true;\n }\n \n-bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\n+bool BlockManager::ReadBlock(CBlock& block, FlatFilePos pos) const\n {\n     block.SetNull();\n \n+    if (pos.nPos < BLOCK_SERIALIZATION_HEADER_SIZE) return false;\n+    uint32_t blk_size;\n+    pos.nPos -= sizeof blk_size;\n+\n     // Open history file to read\n     AutoFile filein{OpenBlockFile(pos, true)};\n     if (filein.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed for %s\\n\", __func__, pos.ToString());\n+        LogError(\"OpenBlockFile failed for %s\", pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 113,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "0e9fb2ed330960c0e4cd36b077c64ac7d0f84240",
      "in_reply_to_id": 1928718017,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(Was just about to advocate for the original version of this change, but agree it's good to be able to tell errors apart).",
      "created_at": "2025-04-03T14:04:57Z",
      "updated_at": "2025-04-04T21:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2027076872",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027076872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1029,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027816889",
      "pull_request_review_id": 2738857957,
      "id": 2027816889,
      "node_id": "PRRC_kwDOABII58543ge5",
      "diff_hunk": "@@ -933,27 +936,27 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n         FlatFilePos pos;\n         const unsigned int blockundo_size{static_cast<unsigned int>(GetSerializeSize(blockundo))};\n         if (!FindUndoPos(state, block.nFile, pos, blockundo_size + UNDO_DATA_DISK_OVERHEAD)) {\n-            LogError(\"FindUndoPos failed\");\n+            LogError(\"FindUndoPos failed for %s while writing\", pos.ToString());\n             return false;\n         }\n         // Open history file to append\n-        AutoFile fileout{OpenUndoFile(pos)};\n-        if (fileout.IsNull()) {\n-            LogError(\"OpenUndoFile failed\");\n+        AutoFile file{OpenUndoFile(pos)};\n+        if (file.IsNull()) {\n+            LogError(\"OpenUndoFile failed for %s while writing\", pos.ToString());\n             return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n         }\n+        BufferedWriter fileout{file};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Observed /home/hodlinator/.bitcoin/testnet4/blocks/rev00001.dat first being opened by `AutoFile` above for writing and then opened a second time inside the flush call below on testnet4. This seems potentially dangerous on master, and is made even more dangerous by `BufferedWriter` flushing later in the destructor. Would add scope in early commit.\r\n\r\n```C++\r\n        {\r\n            // Open history file to append\r\n            AutoFile file{OpenUndoFile(pos)};\r\n            if (file.IsNull()) {\r\n                LogError(\"OpenUndoFile failed for %s while writing\", pos.ToString());\r\n                return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\r\n            }\r\n\r\n            BufferedWriter fileout{file};\r\n\r\n            // Write index header\r\n            fileout << GetParams().MessageStart() << blockundo_size;\r\n            pos.nPos += BLOCK_HEADER_BYTES;\r\n            {\r\n                // Calculate checksum\r\n                HashWriter hasher{};\r\n                hasher << block.pprev->GetBlockHash() << blockundo;\r\n                // Write undo data & checksum\r\n                fileout << blockundo << hasher.GetHash();\r\n            }\r\n        } // Make sure file with buffering goes out of scope in case we call FlushUndoFile below.\r\n```",
      "created_at": "2025-04-03T22:13:52Z",
      "updated_at": "2025-04-04T21:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2027816889",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2027816889"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 948,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2028721395",
      "pull_request_review_id": 2738857957,
      "id": 2028721395,
      "node_id": "PRRC_kwDOABII585469Tz",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)\n+        requires std::is_rvalue_reference_v<S&&>\n+        : m_src{stream}, m_buf(size), m_buf_pos{size} {}\n+\n+    void read(std::span<std::byte> dst)\n+    {\n+        if (const auto available{std::min(dst.size(), m_buf.size() - m_buf_pos)}) {\n+            std::copy_n(m_buf.begin() + m_buf_pos, available, dst.begin());\n+            m_buf_pos += available;\n+            dst = dst.subspan(available);\n+        }\n+        if (dst.size()) {\n+            assert(m_buf_pos == m_buf.size());\n+            m_src.read(dst);\n+\n+            m_buf_pos = 0;\n+            m_buf.resize(m_src.detail_fread(m_buf));",
      "path": "src/streams.h",
      "position": 71,
      "original_position": 56,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would prefer if we wouldn't do 2 `[f]read`/syscalls here. The second one is speculative, we might never use it, so defeats part of the point of buffering. See suggestion commit 4de03f51ab7943f9102b4572d1818ac081af7da4. Not thrilled with how my version adds a dependency on `m_src.feof()` though.\r\n\r\nThe aforementioned commit changes `m_buf_pos` into a `span m_buf_used` which is a step backward going by https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2023879247. I tried implementing it with just `m_buf_pos` and ended up needing to use `std::copy_backward` and it made for a bigger solution than `span`, see a8a82d5c1d0589aa24c30d54e1f52f07689d7f8c.",
      "created_at": "2025-04-04T12:26:52Z",
      "updated_at": "2025-04-04T21:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2028721395",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2028721395"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": 649,
      "original_start_line": 648,
      "start_side": "RIGHT",
      "line": 652,
      "original_line": 652,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029374578",
      "pull_request_review_id": 2738857957,
      "id": 2029374578,
      "node_id": "PRRC_kwDOABII58549cxy",
      "diff_hunk": "@@ -91,17 +91,23 @@ void AutoFile::write(std::span<const std::byte> src)\n         std::array<std::byte, 4096> buf;\n         while (src.size() > 0) {\n             auto buf_now{std::span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n-            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n-            util::Xor(buf_now, m_xor, *m_position);\n-            if (std::fwrite(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n-                throw std::ios_base::failure{\"XorFile::write: failed\"};\n-            }\n+            std::copy_n(src.begin(), buf_now.size(), buf_now.begin());\n+            write_buffer(buf_now);\n             src = src.subspan(buf_now.size());\n-            *m_position += buf_now.size();\n         }\n     }\n }\n \n+void AutoFile::write_buffer(std::span<std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write_buffer: file handle is nullptr\");\n+    util::Xor(src, m_xor, *m_position); // obfuscate in-place",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Shouldn't be dereferencing here at the same time as we have an `if`-guard for it at the end of the function.",
      "created_at": "2025-04-04T20:08:00Z",
      "updated_at": "2025-04-04T21:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2029374578",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029374578"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029405887",
      "pull_request_review_id": 2738857957,
      "id": 2029405887,
      "node_id": "PRRC_kwDOABII58549ka_",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could add a comment explaining why we take ownership of `stream`, a shorter version of https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2024957398 like:\r\n```C++\r\n//! Takes ownership of stream since otherwise we might leave it at an unexpected position due to buffering when we go out of scope.\r\n```",
      "created_at": "2025-04-04T20:35:56Z",
      "updated_at": "2025-04-04T21:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2029405887",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029405887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029411015",
      "pull_request_review_id": 2738857957,
      "id": 2029411015,
      "node_id": "PRRC_kwDOABII58549lrH",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)\n+        requires std::is_rvalue_reference_v<S&&>\n+        : m_src{stream}, m_buf(size), m_buf_pos{size} {}\n+\n+    void read(std::span<std::byte> dst)\n+    {\n+        if (const auto available{std::min(dst.size(), m_buf.size() - m_buf_pos)}) {\n+            std::copy_n(m_buf.begin() + m_buf_pos, available, dst.begin());\n+            m_buf_pos += available;\n+            dst = dst.subspan(available);\n+        }\n+        if (dst.size()) {\n+            assert(m_buf_pos == m_buf.size());\n+            m_src.read(dst);\n+\n+            m_buf_pos = 0;\n+            m_buf.resize(m_src.detail_fread(m_buf));\n+        }\n+    }\n+\n+    template <typename T>\n+    BufferedReader& operator>>(T&& obj)\n+    {\n+        Unserialize(*this, obj);\n+        return *this;\n+    }\n+};\n+\n+/**\n+ * Wrapper that buffers writes to an underlying stream.\n+ * Requires underlying stream to support write_buffer() method\n+ * for efficient buffer flushing and obfuscation.\n+ */\n+template <typename S>\n+class BufferedWriter\n+{\n+    S& m_dst;\n+    BufferData m_buf;\n+    size_t m_buf_pos{0};\n+\n+public:\n+    explicit BufferedWriter(S& stream, size_t size = 1 << 16) : m_dst{stream}, m_buf(size) {}",
      "path": "src/streams.h",
      "position": null,
      "original_position": 81,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If we don't have a need for dynamically sized buffers, `BufferedWriter::m_buf` could be an `array` without any further changes except from smaller constructor.\r\n```suggestion\r\n    std::array<std::byte, N> m_buf;\r\n    size_t m_buf_pos{0};\r\n\r\npublic:\r\n    explicit BufferedWriter(S& stream) : m_dst{stream} {}\r\n```\r\nSuggestion commit 4de03f51ab7943f9102b4572d1818ac081af7da4 for full version.",
      "created_at": "2025-04-04T20:41:22Z",
      "updated_at": "2025-04-04T21:58:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2029411015",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029411015"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": 672,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 677,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134476",
      "pull_request_review_id": 2745126871,
      "id": 2030134476,
      "node_id": "PRRC_kwDOABII5855AWTM",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": 2026453700,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Valid question - it wasn't calculated but rather measured - see https://github.com/bitcoin/bitcoin/pull/31539:\r\n> Testing with various buffer sizes showed that 16 KiB provides the best performance.\r\n\r\nThis was the value which produces the same performance as reading the whole block into memory (lower values are slower, bigger ones have the same speed).\r\n\r\nFor writes however this value was measure to be`1<<20` (the current `1<<16` there is slower than writing the whole buffer in one go), but for some reason that I'm still investigating, that OOMs the CI, so I'm using the same value for both now.\r\n\r\nFor reference, the existing `BufferedFile` uses a buffer of 8MB.",
      "created_at": "2025-04-06T12:14:18Z",
      "updated_at": "2025-04-06T14:06:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2030134476",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134476"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134514",
      "pull_request_review_id": 2745126894,
      "id": 2030134514,
      "node_id": "PRRC_kwDOABII5855AWTy",
      "diff_hunk": "@@ -553,6 +555,135 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n     fs::remove(streams_test_filename);\n }\n \n+BOOST_AUTO_TEST_CASE(buffered_reader_matches_autofile_random_content)\n+{\n+    for (int rep{0}; rep < 10; ++rep) {\n+        const size_t file_size{1 + m_rng.randrange<size_t>(1 << 17)};\n+        const size_t buf_size{1 + m_rng.randrange(file_size)};",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": 2026467265,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The version you started reviewing still contained a loop, but the latest doesn't.\r\nThis is indeed a differential test (comparing against a simpler reference implementation), but it's not exploratory, I made sure it results in full coverage, so I don't see it as a fuzz, just a randomized unit test.\r\nAlso, since it's an important part of the suite, wanted to make sure it's always executed with the test suite.",
      "created_at": "2025-04-06T12:14:23Z",
      "updated_at": "2025-04-06T12:14:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2030134514",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134514"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": 561,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 562,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134520",
      "pull_request_review_id": 2745126905,
      "id": 2030134520,
      "node_id": "PRRC_kwDOABII5855AWT4",
      "diff_hunk": "@@ -553,6 +555,135 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n     fs::remove(streams_test_filename);\n }\n \n+BOOST_AUTO_TEST_CASE(buffered_reader_matches_autofile_random_content)\n+{\n+    for (int rep{0}; rep < 10; ++rep) {\n+        const size_t file_size{1 + m_rng.randrange<size_t>(1 << 17)};\n+        const size_t buf_size{1 + m_rng.randrange(file_size)};\n+        const FlatFilePos pos{0, 0};\n+\n+        const FlatFileSeq test_file{m_args.GetDataDirBase(), \"buffered_file_test_random\", node::BLOCKFILE_CHUNK_SIZE};\n+        const std::vector obfuscation{m_rng.randbytes<std::byte>(8)};\n+        AutoFile{test_file.Open(pos, false), obfuscation}.write(m_rng.randbytes<std::byte>(file_size));",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 29,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": 2026489716,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-04-06T12:14:26Z",
      "updated_at": "2025-04-06T12:14:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2030134520",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134520"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 567,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134554",
      "pull_request_review_id": 2745126916,
      "id": 2030134554,
      "node_id": "PRRC_kwDOABII5855AWUa",
      "diff_hunk": "@@ -465,8 +465,13 @@ class AutoFile\n         ::Unserialize(*this, obj);\n         return *this;\n     }\n+\n+    //! Write a mutable buffer more efficiently than write(), obfuscating the buffer in-place.\n+    void write_buffer(std::span<std::byte> src);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 6,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": 2026498220,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Do you consider it an *out* because the input is mutated? We're not using that anywhere, it's an implementation detail that I don't think we want to guarantee",
      "created_at": "2025-04-06T12:14:29Z",
      "updated_at": "2025-04-06T12:14:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2030134554",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": 469,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 470,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134589",
      "pull_request_review_id": 2745126935,
      "id": 2030134589,
      "node_id": "PRRC_kwDOABII5855AWU9",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader",
      "path": "src/streams.h",
      "position": 47,
      "original_position": 33,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": 2026523200,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's a good idea in general, but - as you've also mentioned at the end - it would limit its usability - and I couldn't measure any speed gain, seems to behave exactly the same way (probably skips the stack).\r\n\r\nSince we're not really changing the size of the underlying vector (only narrowing, which shouldn't result in a new allocation) I don't see any drawback of the current approach.\r\n\r\nIt could be argued that allocating on the stack could be faster and cause less fragmentation, but we're only doing this once per run and that's an insignificant portion of runtime.\r\n\r\nI like the suggestion, I'm just not used to allocating this much heap space (e.g. can it cause a stack overflow on any OS? Do we need `unique_ptr` here to force stack allocation? No idea...)\r\n\r\nWhat do other reviewers think, is it worth investigating more? (cc: @ryanofsky, @maflcko?)",
      "created_at": "2025-04-06T12:14:35Z",
      "updated_at": "2025-04-07T15:21:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2030134589",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": 627,
      "original_start_line": 627,
      "start_side": "RIGHT",
      "line": 628,
      "original_line": 628,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134612",
      "pull_request_review_id": 2745126957,
      "id": 2030134612,
      "node_id": "PRRC_kwDOABII5855AWVU",
      "diff_hunk": "@@ -465,8 +465,13 @@ class AutoFile\n         ::Unserialize(*this, obj);\n         return *this;\n     }\n+\n+    //! Write a mutable buffer more efficiently than write(), obfuscating the buffer in-place.\n+    void write_buffer(std::span<std::byte> src);\n };\n \n+using BufferData = std::vector<std::byte>;",
      "path": "src/streams.h",
      "position": null,
      "original_position": 9,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "aaceecad2ba85ac7513d1e2973960bdae65ab0fc",
      "in_reply_to_id": 2027003048,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> maybe it could use less yoda-speak\r\n\r\nThe `ByteVector` similarity, avoid I wanted, since `std::byte` it is not, as mentioned you have.\r\nHarmonizing `DataBuffer` with `DataStream`, like I do.",
      "created_at": "2025-04-06T12:14:40Z",
      "updated_at": "2025-04-06T12:14:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2030134612",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 473,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134638",
      "pull_request_review_id": 2745126986,
      "id": 2030134638,
      "node_id": "PRRC_kwDOABII5855AWVu",
      "diff_hunk": "@@ -75,10 +75,10 @@ static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n ",
      "path": "src/node/blockstorage.h",
      "position": 2,
      "original_position": 2,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "aaceecad2ba85ac7513d1e2973960bdae65ab0fc",
      "in_reply_to_id": 2027068989,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-04-06T12:14:45Z",
      "updated_at": "2025-04-06T12:14:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2030134638",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134638"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 76,
      "original_line": 76,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134681",
      "pull_request_review_id": 2745127021,
      "id": 2030134681,
      "node_id": "PRRC_kwDOABII5855AWWZ",
      "diff_hunk": "@@ -933,27 +936,27 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n         FlatFilePos pos;\n         const unsigned int blockundo_size{static_cast<unsigned int>(GetSerializeSize(blockundo))};\n         if (!FindUndoPos(state, block.nFile, pos, blockundo_size + UNDO_DATA_DISK_OVERHEAD)) {\n-            LogError(\"FindUndoPos failed\");\n+            LogError(\"FindUndoPos failed for %s while writing\", pos.ToString());\n             return false;\n         }\n         // Open history file to append\n-        AutoFile fileout{OpenUndoFile(pos)};\n-        if (fileout.IsNull()) {\n-            LogError(\"OpenUndoFile failed\");\n+        AutoFile file{OpenUndoFile(pos)};\n+        if (file.IsNull()) {\n+            LogError(\"OpenUndoFile failed for %s while writing\", pos.ToString());\n             return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n         }\n+        BufferedWriter fileout{file};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "in_reply_to_id": 2027816889,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Excellent find, added a separate commit with you as a co-author",
      "created_at": "2025-04-06T12:14:53Z",
      "updated_at": "2025-04-06T12:14:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2030134681",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 948,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134691",
      "pull_request_review_id": 2745127033,
      "id": 2030134691,
      "node_id": "PRRC_kwDOABII5855AWWj",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)\n+        requires std::is_rvalue_reference_v<S&&>\n+        : m_src{stream}, m_buf(size), m_buf_pos{size} {}\n+\n+    void read(std::span<std::byte> dst)\n+    {\n+        if (const auto available{std::min(dst.size(), m_buf.size() - m_buf_pos)}) {\n+            std::copy_n(m_buf.begin() + m_buf_pos, available, dst.begin());\n+            m_buf_pos += available;\n+            dst = dst.subspan(available);\n+        }\n+        if (dst.size()) {\n+            assert(m_buf_pos == m_buf.size());\n+            m_src.read(dst);\n+\n+            m_buf_pos = 0;\n+            m_buf.resize(m_src.detail_fread(m_buf));",
      "path": "src/streams.h",
      "position": 71,
      "original_position": 56,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "in_reply_to_id": 2028721395,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm, I need some more convincing here. I can't measure any speed gain and don't really see why basically repeating the logic from the first condition in the second one is a better overall solution.\r\nSo the current seems fast as simple, I need a good reason for making it more complicated.",
      "created_at": "2025-04-06T12:14:56Z",
      "updated_at": "2025-04-06T12:14:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2030134691",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134691"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": 649,
      "original_start_line": 648,
      "start_side": "RIGHT",
      "line": 652,
      "original_line": 652,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134705",
      "pull_request_review_id": 2745127058,
      "id": 2030134705,
      "node_id": "PRRC_kwDOABII5855AWWx",
      "diff_hunk": "@@ -91,17 +91,23 @@ void AutoFile::write(std::span<const std::byte> src)\n         std::array<std::byte, 4096> buf;\n         while (src.size() > 0) {\n             auto buf_now{std::span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n-            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n-            util::Xor(buf_now, m_xor, *m_position);\n-            if (std::fwrite(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n-                throw std::ios_base::failure{\"XorFile::write: failed\"};\n-            }\n+            std::copy_n(src.begin(), buf_now.size(), buf_now.begin());\n+            write_buffer(buf_now);\n             src = src.subspan(buf_now.size());\n-            *m_position += buf_now.size();\n         }\n     }\n }\n \n+void AutoFile::write_buffer(std::span<std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write_buffer: file handle is nullptr\");\n+    util::Xor(src, m_xor, *m_position); // obfuscate in-place",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "in_reply_to_id": 2029374578,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good find, changed it to:\r\n```\r\n    if (m_xor.size() && m_position) util::Xor(src, m_xor, *m_position); // obfuscate in-place\r\n```\r\nAdded you as co-author.",
      "created_at": "2025-04-06T12:15:02Z",
      "updated_at": "2025-04-06T12:15:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2030134705",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134711",
      "pull_request_review_id": 2745127071,
      "id": 2030134711,
      "node_id": "PRRC_kwDOABII5855AWW3",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "in_reply_to_id": 2029405887,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added something similar",
      "created_at": "2025-04-06T12:15:05Z",
      "updated_at": "2025-04-06T12:15:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2030134711",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134711"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134723",
      "pull_request_review_id": 2745127093,
      "id": 2030134723,
      "node_id": "PRRC_kwDOABII5855AWXD",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)\n+        requires std::is_rvalue_reference_v<S&&>\n+        : m_src{stream}, m_buf(size), m_buf_pos{size} {}\n+\n+    void read(std::span<std::byte> dst)\n+    {\n+        if (const auto available{std::min(dst.size(), m_buf.size() - m_buf_pos)}) {\n+            std::copy_n(m_buf.begin() + m_buf_pos, available, dst.begin());\n+            m_buf_pos += available;\n+            dst = dst.subspan(available);\n+        }\n+        if (dst.size()) {\n+            assert(m_buf_pos == m_buf.size());\n+            m_src.read(dst);\n+\n+            m_buf_pos = 0;\n+            m_buf.resize(m_src.detail_fread(m_buf));\n+        }\n+    }\n+\n+    template <typename T>\n+    BufferedReader& operator>>(T&& obj)\n+    {\n+        Unserialize(*this, obj);\n+        return *this;\n+    }\n+};\n+\n+/**\n+ * Wrapper that buffers writes to an underlying stream.\n+ * Requires underlying stream to support write_buffer() method\n+ * for efficient buffer flushing and obfuscation.\n+ */\n+template <typename S>\n+class BufferedWriter\n+{\n+    S& m_dst;\n+    BufferData m_buf;\n+    size_t m_buf_pos{0};\n+\n+public:\n+    explicit BufferedWriter(S& stream, size_t size = 1 << 16) : m_dst{stream}, m_buf(size) {}",
      "path": "src/streams.h",
      "position": null,
      "original_position": 81,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "in_reply_to_id": 2029411015,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Please see my concerns above",
      "created_at": "2025-04-06T12:15:10Z",
      "updated_at": "2025-04-06T12:15:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2030134723",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2030134723"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": 672,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 677,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031244506",
      "pull_request_review_id": 2746826014,
      "id": 2031244506,
      "node_id": "PRRC_kwDOABII5855ElTa",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader",
      "path": "src/streams.h",
      "position": 47,
      "original_position": 33,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": 2026523200,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2030134589\r\n\r\nI don't think this is a great use-case for std::array because when you are doing I/O It is usually fair to assume the cost of allocating the buffer is a lot smaller than the cost of actually doing the I/O. Buffers can also take up a relatively large amount of stack space and increase risk of stack overflow. Since larger buffer sizes often increase performance, this introduces a tradeoff between making I/O faster and risking crashes, which is not very appealing.\r\n\r\nI also don't think in general parameters that are tuned for performance should be compile time parameters as opposed to runtime parameters. Requiring them to be specified at compile time makes code more rigid because it can't easily adapt to runtime conditions, also it can blow up the size of compiled program because templates will be expanded multiple times if different buffer sizes are ever used. And the normal benefits that you would get from choosing compile-time over runtime execution do not apply in these cases: there is no performance advantage and no extra correctness checking that can be done.\r\n",
      "created_at": "2025-04-07T13:27:23Z",
      "updated_at": "2025-04-07T14:17:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2031244506",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031244506"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": 627,
      "original_start_line": 627,
      "start_side": "RIGHT",
      "line": 628,
      "original_line": 628,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031265119",
      "pull_request_review_id": 2746826014,
      "id": 2031265119,
      "node_id": "PRRC_kwDOABII5855EqVf",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)\n+        requires std::is_rvalue_reference_v<S&&>\n+        : m_src{stream}, m_buf(size), m_buf_pos{size} {}\n+\n+    void read(std::span<std::byte> dst)\n+    {\n+        if (const auto available{std::min(dst.size(), m_buf.size() - m_buf_pos)}) {\n+            std::copy_n(m_buf.begin() + m_buf_pos, available, dst.begin());\n+            m_buf_pos += available;\n+            dst = dst.subspan(available);\n+        }\n+        if (dst.size()) {\n+            assert(m_buf_pos == m_buf.size());\n+            m_src.read(dst);\n+\n+            m_buf_pos = 0;\n+            m_buf.resize(m_src.detail_fread(m_buf));",
      "path": "src/streams.h",
      "position": 71,
      "original_position": 56,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "in_reply_to_id": 2028721395,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2028721395\r\n\r\nI can see benefits of both approaches. l0rinc's approach seems a little simpler and more suited to current use-case where data size and buffer size are unlikely to line up. hodlinator's suggested change might work better in other cases where there is a good chance data and buffer sizes will line up, and there might actually be a benefit to avoiding a final read.\r\n\r\nI think I'd just go with current simpler solution, though I suspect there maybe some refactored version of hodlinators change that is simpler and has the best of both worlds.\r\n\r\n",
      "created_at": "2025-04-07T13:37:47Z",
      "updated_at": "2025-04-07T14:17:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2031265119",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031265119"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": 649,
      "original_start_line": 648,
      "start_side": "RIGHT",
      "line": 652,
      "original_line": 652,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031294886",
      "pull_request_review_id": 2746826014,
      "id": 2031294886,
      "node_id": "PRRC_kwDOABII5855Exmm",
      "diff_hunk": "@@ -91,17 +91,23 @@ void AutoFile::write(std::span<const std::byte> src)\n         std::array<std::byte, 4096> buf;\n         while (src.size() > 0) {\n             auto buf_now{std::span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n-            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n-            util::Xor(buf_now, m_xor, *m_position);\n-            if (std::fwrite(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n-                throw std::ios_base::failure{\"AutoFile::write: failed\"};\n-            }\n+            std::copy_n(src.begin(), buf_now.size(), buf_now.begin());\n+            write_buffer(buf_now);\n             src = src.subspan(buf_now.size());\n-            *m_position += buf_now.size();\n         }\n     }\n }\n \n+void AutoFile::write_buffer(std::span<std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write_buffer: file handle is nullptr\");\n+    if (m_xor.size() && m_position) util::Xor(src, m_xor, *m_position); // obfuscate in-place",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "8a24dfaa344f0cb99e54f7cb1c6694b372ab930e",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"optimization: Bulk serialization writes in `WriteBlockUndo` and `WriteBlock`\" (8a24dfaa344f0cb99e54f7cb1c6694b372ab930e)\r\n\r\nThe new version of this seems a bit fragile and unsafe because if `m_xor` is set and `m_position` is unset, this will just skip the `Xor` step and proceed as if nothing is wrong, instead of throwing an error.\r\n\r\nWould suggest deleting line 90 above `if (!m_position.has_value()) throw std::ios_base::failure(\"AutoFile::write: position unknown\");` and throwing that error here if `(m_xor.size() && !m_position)`",
      "created_at": "2025-04-07T13:51:28Z",
      "updated_at": "2025-04-07T14:17:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2031294886",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031294886"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031325418",
      "pull_request_review_id": 2746826014,
      "id": 2031325418,
      "node_id": "PRRC_kwDOABII5855E5Dq",
      "diff_hunk": "@@ -939,23 +939,27 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n             LogError(\"FindUndoPos failed for %s while writing\", pos.ToString());\n             return false;\n         }\n-        // Open history file to append\n-        AutoFile file{OpenUndoFile(pos)};\n-        if (file.IsNull()) {\n-            LogError(\"OpenUndoFile failed for %s while writing\", pos.ToString());\n-            return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n-        }\n-        BufferedWriter fileout{file};\n \n-        // Write index header\n-        fileout << GetParams().MessageStart() << blockundo_size;\n-        pos.nPos += BLOCK_HEADER_BYTES;\n         {\n-            // Calculate checksum\n-            HashWriter hasher{};\n-            hasher << block.pprev->GetBlockHash() << blockundo;\n-            // Write undo data & checksum\n-            fileout << blockundo << hasher.GetHash();\n+            // Open history file to append\n+            AutoFile file{OpenUndoFile(pos)};\n+            if (file.IsNull()) {\n+                LogError(\"OpenUndoFile failed for %s while writing\", pos.ToString());\n+                return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n+            }\n+            BufferedWriter fileout{file};\n+\n+            // Write index header\n+            fileout << GetParams().MessageStart() << blockundo_size;\n+            pos.nPos += BLOCK_HEADER_BYTES;\n+            {\n+                // Calculate checksum\n+                HashWriter hasher{};\n+                hasher << block.pprev->GetBlockHash() << blockundo;\n+                // Write undo data & checksum\n+                fileout << blockundo << hasher.GetHash();\n+            }\n+            // Make sure buffer goes out of scope before we call FlushUndoFile",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "c28221545bf23492ee3d32b9c64eca5fc38804eb",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"Narrow scope of undofile write to avoid possible race condition\" (c28221545bf23492ee3d32b9c64eca5fc38804eb)\r\n\r\nI don't like the idea of introducing a separate bugfix commit for a bug introduced in the immediately preceding commit. I think it would be better to avoid adding the bug by making this change in the immediately preceding commit. It also might be clearer to avoid the bug by introducing an explicit `fileout.flush()` call instead of introducing a new scope and relying on the destructor to flush. This is just a thought so feel free to ignore.\r\n\r\nAnother option might be to move introduction of the new `fileout` scope into an earlier commit like commit \"refactor: collect block read operations into try block\" (467d2b380f4a780b9e17fe64d08b22e61f4a2554). This could make sense because even in the previous version of the code it makes sense logicallly to want to close the undo file before calling FlushUndoFile.",
      "created_at": "2025-04-07T14:04:30Z",
      "updated_at": "2025-04-07T14:17:16Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2031325418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031325418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 962,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031619812",
      "pull_request_review_id": 2747455252,
      "id": 2031619812,
      "node_id": "PRRC_kwDOABII5855GA7k",
      "diff_hunk": "@@ -939,23 +939,27 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n             LogError(\"FindUndoPos failed for %s while writing\", pos.ToString());\n             return false;\n         }\n-        // Open history file to append\n-        AutoFile file{OpenUndoFile(pos)};\n-        if (file.IsNull()) {\n-            LogError(\"OpenUndoFile failed for %s while writing\", pos.ToString());\n-            return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n-        }\n-        BufferedWriter fileout{file};\n \n-        // Write index header\n-        fileout << GetParams().MessageStart() << blockundo_size;\n-        pos.nPos += BLOCK_HEADER_BYTES;\n         {\n-            // Calculate checksum\n-            HashWriter hasher{};\n-            hasher << block.pprev->GetBlockHash() << blockundo;\n-            // Write undo data & checksum\n-            fileout << blockundo << hasher.GetHash();\n+            // Open history file to append\n+            AutoFile file{OpenUndoFile(pos)};\n+            if (file.IsNull()) {\n+                LogError(\"OpenUndoFile failed for %s while writing\", pos.ToString());\n+                return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n+            }\n+            BufferedWriter fileout{file};\n+\n+            // Write index header\n+            fileout << GetParams().MessageStart() << blockundo_size;\n+            pos.nPos += BLOCK_HEADER_BYTES;\n+            {\n+                // Calculate checksum\n+                HashWriter hasher{};\n+                hasher << block.pprev->GetBlockHash() << blockundo;\n+                // Write undo data & checksum\n+                fileout << blockundo << hasher.GetHash();\n+            }\n+            // Make sure buffer goes out of scope before we call FlushUndoFile",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 39,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "c28221545bf23492ee3d32b9c64eca5fc38804eb",
      "in_reply_to_id": 2031325418,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> introducing a separate bugfix commit for a bug introduced in the immediately preceding commit\r\n\r\nTechnically the bug was there before as well, `AutoFile{OpenUndoFile(pos)}` was still in scope when `FlushUndoFile(pos.nFile)` was called, which could theoretically lead to file handle conflicts (had something similar in tests, but only after Buffering) or other unexpected behavior - may not be as dangerous after Buffering, as @hodlinator also mentioned.\r\nMoved the commit before the buffering change, kept the braces with comment and added explicit `fclose`/`flush` calls as well for clarity.",
      "created_at": "2025-04-07T16:37:54Z",
      "updated_at": "2025-04-07T16:37:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2031619812",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031619812"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 962,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031620027",
      "pull_request_review_id": 2747455539,
      "id": 2031620027,
      "node_id": "PRRC_kwDOABII5855GA-7",
      "diff_hunk": "@@ -91,17 +91,23 @@ void AutoFile::write(std::span<const std::byte> src)\n         std::array<std::byte, 4096> buf;\n         while (src.size() > 0) {\n             auto buf_now{std::span{buf}.first(std::min<size_t>(src.size(), buf.size()))};\n-            std::copy(src.begin(), src.begin() + buf_now.size(), buf_now.begin());\n-            util::Xor(buf_now, m_xor, *m_position);\n-            if (std::fwrite(buf_now.data(), 1, buf_now.size(), m_file) != buf_now.size()) {\n-                throw std::ios_base::failure{\"AutoFile::write: failed\"};\n-            }\n+            std::copy_n(src.begin(), buf_now.size(), buf_now.begin());\n+            write_buffer(buf_now);\n             src = src.subspan(buf_now.size());\n-            *m_position += buf_now.size();\n         }\n     }\n }\n \n+void AutoFile::write_buffer(std::span<std::byte> src)\n+{\n+    if (!m_file) throw std::ios_base::failure(\"AutoFile::write_buffer: file handle is nullptr\");\n+    if (m_xor.size() && m_position) util::Xor(src, m_xor, *m_position); // obfuscate in-place",
      "path": "src/streams.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "8a24dfaa344f0cb99e54f7cb1c6694b372ab930e",
      "in_reply_to_id": 2031294886,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You're right again, it's safer this way, thank you! https://github.com/bitcoin/bitcoin/compare/c28221545bf23492ee3d32b9c64eca5fc38804eb..1f28d22940805492fbec5a9eb37a5ab767f8add1#diff-6d04aca71dd4079e13471cd3c1699c3e55314fb04c5c6de062ffbdcc8db42024",
      "created_at": "2025-04-07T16:38:01Z",
      "updated_at": "2025-04-07T16:38:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2031620027",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031620027"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2032631406",
      "pull_request_review_id": 2749056885,
      "id": 2032631406,
      "node_id": "PRRC_kwDOABII5855J35u",
      "diff_hunk": "@@ -465,8 +465,13 @@ class AutoFile\n         ::Unserialize(*this, obj);\n         return *this;\n     }\n+\n+    //! Write a mutable buffer more efficiently than write(), obfuscating the buffer in-place.\n+    void write_buffer(std::span<std::byte> src);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 6,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": 2026498220,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I consider it a loaded foot-gun for future users of the API. Not something we want to guarantee, but rather warn about. Current comment is okay, just a bit less eye-catching in my view.",
      "created_at": "2025-04-08T08:03:21Z",
      "updated_at": "2025-04-08T13:20:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2032631406",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2032631406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": 469,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 470,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2032696426",
      "pull_request_review_id": 2749056885,
      "id": 2032696426,
      "node_id": "PRRC_kwDOABII5855KHxq",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader",
      "path": "src/streams.h",
      "position": 47,
      "original_position": 33,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": 2026523200,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This article: https://www.embeddedrelated.com/showarticle/1330.php (referenced previously https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1692176710) indicates that the stack size at least can end up being 132KiB on Raspberry Pi 3 (seems to have [sold with 1GB of RAM](https://www.raspberrypi.com/products/raspberry-pi-3-model-b/)). My Raspberry 4 is using 8MiB stack sizes (8 GB RAM). Seems Windows [often ends up with 1MB stacks](https://learn.microsoft.com/en-us/windows/win32/procthread/thread-stack-size) though. This makes me agree it's better to use the heap in this specific case instead of guzzling up `1 << 16` = 64KiB.\r\n\r\n* As a general rule for smaller amounts, using stack memory should be considered as bumping the stack pointer is always faster than allocation+deallocation. It should tend toward better cache-locality due to stack being used for adjacent things rather than heap-objects in random places. Agree that the difference can be completely crowded out by I/O though.\r\n* The amount of template expansions from this and the amount of code it contains compared to STL usage is minimal.\r\n* In theory it would be cool to have dynamic sizes at runtime, but in practice we tend towards settling on values at compile time, as is currently done in this PR.\r\n\r\n(`AutoFile::write()` uses `std::array<std::byte, 4096>` which I guess is fine as it's <10KiB and guaranteed to be in a leaf of the call-tree).",
      "created_at": "2025-04-08T08:39:51Z",
      "updated_at": "2025-04-08T13:20:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2032696426",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2032696426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": 627,
      "original_start_line": 627,
      "start_side": "RIGHT",
      "line": 628,
      "original_line": 628,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2033125291",
      "pull_request_review_id": 2749056885,
      "id": 2033125291,
      "node_id": "PRRC_kwDOABII5855Lwer",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)\n+        requires std::is_rvalue_reference_v<S&&>\n+        : m_src{stream}, m_buf(size), m_buf_pos{size} {}\n+\n+    void read(std::span<std::byte> dst)\n+    {\n+        if (const auto available{std::min(dst.size(), m_buf.size() - m_buf_pos)}) {\n+            std::copy_n(m_buf.begin() + m_buf_pos, available, dst.begin());\n+            m_buf_pos += available;\n+            dst = dst.subspan(available);\n+        }\n+        if (dst.size()) {\n+            assert(m_buf_pos == m_buf.size());\n+            m_src.read(dst);\n+\n+            m_buf_pos = 0;\n+            m_buf.resize(m_src.detail_fread(m_buf));",
      "path": "src/streams.h",
      "position": 71,
      "original_position": 56,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fe6b0e425c88c42fc501acef86a642bc19feca9f",
      "in_reply_to_id": 2028721395,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can't think of a simpler version of my variant unfortunately. It results in fewer syscalls at the cost of a longer function. I can stomach the current PR version.",
      "created_at": "2025-04-08T12:51:22Z",
      "updated_at": "2025-04-08T13:20:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2033125291",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2033125291"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": 649,
      "original_start_line": 648,
      "start_side": "RIGHT",
      "line": 652,
      "original_line": 652,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2033151521",
      "pull_request_review_id": 2749056885,
      "id": 2033151521,
      "node_id": "PRRC_kwDOABII5855L24h",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": 2026453700,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could comment on chosen defaults in commit messages?",
      "created_at": "2025-04-08T13:05:13Z",
      "updated_at": "2025-04-08T13:20:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2033151521",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2033151521"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2033272097",
      "pull_request_review_id": 2750110978,
      "id": 2033272097,
      "node_id": "PRRC_kwDOABII5855MUUh",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": 2026453700,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Will do if I retouch, thanks",
      "created_at": "2025-04-08T14:00:56Z",
      "updated_at": "2025-04-08T14:00:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2033272097",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2033272097"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036630072",
      "pull_request_review_id": 2755530568,
      "id": 2036630072,
      "node_id": "PRRC_kwDOABII5855ZII4",
      "diff_hunk": "@@ -666,24 +666,26 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n         return false;\n     }\n \n-    // Read block\n-    uint256 hashChecksum;\n-    HashVerifier verifier{filein}; // Use HashVerifier as reserializing may lose data, c.f. commit d342424301013ec47dc146a4beb49d5c9319d80a\n     try {\n+        // Read block\n+        HashVerifier verifier{filein}; // Use HashVerifier, as reserializing may lose data, c.f. commit d3424243",
      "path": "src/node/blockstorage.cpp",
      "position": 28,
      "original_position": 9,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fbe701bf32a33766d06bec58e4c0fb70e94f60b1",
      "in_reply_to_id": 2023827585,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in 467d2b380f4a780b9e17fe64d08b22e61f4a2554:\r\n\r\nI don't understand the commit message. It says \"`HashVerifier` was included in the try/catch to include the `undo_size` serialization there as well\". However, I don't see any `undo_size` symbol and `git grep '\\<undo_size\\>'` seems to agree.",
      "created_at": "2025-04-10T06:51:00Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036630072",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036630072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 672,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036694308",
      "pull_request_review_id": 2755530568,
      "id": 2036694308,
      "node_id": "PRRC_kwDOABII5855ZX0k",
      "diff_hunk": "@@ -938,22 +938,26 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n             LogError(\"FindUndoPos failed\");\n             return false;\n         }\n-        // Open history file to append\n-        AutoFile fileout{OpenUndoFile(pos)};\n-        if (fileout.IsNull()) {\n-            LogError(\"OpenUndoFile failed\");\n-            return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n-        }\n \n-        // Write index header\n-        fileout << GetParams().MessageStart() << blockundo_size;\n-        pos.nPos += BLOCK_SERIALIZATION_HEADER_SIZE;\n         {\n-            // Calculate checksum\n-            HashWriter hasher{};\n-            hasher << block.pprev->GetBlockHash() << blockundo;\n-            // Write undo data & checksum\n-            fileout << blockundo << hasher.GetHash();\n+            // Open history file to append\n+            AutoFile fileout{OpenUndoFile(pos)};\n+            if (fileout.IsNull()) {\n+                LogError(\"OpenUndoFile failed\");\n+                return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n+            }\n+\n+            // Write index header\n+            fileout << GetParams().MessageStart() << blockundo_size;\n+            pos.nPos += BLOCK_SERIALIZATION_HEADER_SIZE;\n+            {\n+                // Calculate checksum\n+                HashWriter hasher{};\n+                hasher << block.pprev->GetBlockHash() << blockundo;\n+                // Write undo data & checksum\n+                fileout << blockundo << hasher.GetHash();\n+            }\n+            fileout.fclose(); // Make sure `AutoFile` goes out of scope before we call `FlushUndoFile`",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "da7574f140fafc0eb3ea80fd5f40e8442afffef1",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in da7574f140fafc0eb3ea80fd5f40e8442afffef1:\r\n\r\nInteresting commit. I wonder why this worked at all previously, because the scope of the autofile was always beyond `FlushUndoFile`.\r\n\r\nHowever, `FlushUndoFile` logs a warning when the flush does not work. Now, a flush error in this line is silently ignored.",
      "created_at": "2025-04-10T07:30:54Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036694308",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036694308"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 960,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036734899",
      "pull_request_review_id": 2755530568,
      "id": 2036734899,
      "node_id": "PRRC_kwDOABII5855Zhuz",
      "diff_hunk": "@@ -75,10 +75,10 @@ static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n \n /** Size of header written by WriteBlock before a serialized CBlock (8 bytes) */\n-static constexpr size_t BLOCK_SERIALIZATION_HEADER_SIZE{std::tuple_size_v<MessageStartChars> + sizeof(unsigned int)};\n+static constexpr size_t BLOCK_HEADER_BYTES{std::tuple_size_v<MessageStartChars> + sizeof(unsigned int)};",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "3c4c6e8edc0fb4918838cb66811b423096db635b",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in 3c4c6e8edc0fb4918838cb66811b423096db635b:\r\n\r\nNot sure about this commit:\r\n\r\n* It would be easier to review if this was a scripted diff, because it spans several translation units and the scripted diff is smaller than the code changes.\r\n* Also, I am not sure the new name is correct. \"Block serialization\" here refers to writing block and undo data and this is the size of the header that proceeds those. Whereas \"block header\" usually refers to the first few bytes of a serialized block itself. So it may be better to drop this commit, or use a different wording, like \"STORAGE_HEADER_SIZE\" or \"SER_HEADER_SIZE\" (if you want to clarify that this is about serialization/storage) or \"INDEX(_HEADER)_SIZE\" or \"SEPARATOR_SIZE\" (if you want to go after the existing code comments) or \"LEN_PREFIX_SIZE\" (if you want to stress that the prefix includes the length)",
      "created_at": "2025-04-10T07:52:05Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036734899",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036734899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036750345",
      "pull_request_review_id": 2755530568,
      "id": 2036750345,
      "node_id": "PRRC_kwDOABII5855ZlgJ",
      "diff_hunk": "@@ -678,11 +678,11 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n \n         // Verify checksum\n         if (hashChecksum != verifier.GetHash()) {\n-            LogError(\"%s: Checksum mismatch at %s\\n\", __func__, pos.ToString());\n+            LogError(\"%s: Checksum mismatch at %s\", __func__, pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "c92ed996f1b81d5c05f80bd857565be73a4b0174",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in c92ed996f1b81d5c05f80bd857565be73a4b0174:\r\n\r\nGiven that the function names were recently changed anyway, and given that there exist a log setting to enable source function name logging, it could make sense to remove `__func__` and use a unique and descriptive error message here.\r\n\r\nMaybe `Checksum mismatch at %s while reading block undo`?",
      "created_at": "2025-04-10T08:00:29Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036750345",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036750345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 681,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036750860",
      "pull_request_review_id": 2755530568,
      "id": 2036750860,
      "node_id": "PRRC_kwDOABII5855ZloM",
      "diff_hunk": "@@ -678,11 +678,11 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n \n         // Verify checksum\n         if (hashChecksum != verifier.GetHash()) {\n-            LogError(\"%s: Checksum mismatch at %s\\n\", __func__, pos.ToString());\n+            LogError(\"%s: Checksum mismatch at %s\", __func__, pos.ToString());\n             return false;\n         }\n     } catch (const std::exception& e) {\n-        LogError(\"%s: Deserialize or I/O error - %s at %s\\n\", __func__, e.what(), pos.ToString());\n+        LogError(\"%s: Deserialize or I/O error - %s at %s\", __func__, e.what(), pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "c92ed996f1b81d5c05f80bd857565be73a4b0174",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "same",
      "created_at": "2025-04-10T08:00:41Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036750860",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036750860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 685,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036754119",
      "pull_request_review_id": 2755530568,
      "id": 2036754119,
      "node_id": "PRRC_kwDOABII5855ZmbH",
      "diff_hunk": "@@ -993,27 +993,27 @@ bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\n     // Open history file to read\n     AutoFile filein{OpenBlockFile(pos, true)};\n     if (filein.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed for %s\\n\", __func__, pos.ToString());\n+        LogError(\"%s: OpenBlockFile failed for %s\", __func__, pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "c92ed996f1b81d5c05f80bd857565be73a4b0174",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "remove func and add \"while reading\", like above, for consistency?",
      "created_at": "2025-04-10T08:01:48Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036754119",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036754119"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 996,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036756715",
      "pull_request_review_id": 2755530568,
      "id": 2036756715,
      "node_id": "PRRC_kwDOABII5855ZnDr",
      "diff_hunk": "@@ -993,27 +993,27 @@ bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\n     // Open history file to read\n     AutoFile filein{OpenBlockFile(pos, true)};\n     if (filein.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed for %s\\n\", __func__, pos.ToString());\n+        LogError(\"%s: OpenBlockFile failed for %s\", __func__, pos.ToString());\n         return false;\n     }\n \n     try {\n         // Read block\n         filein >> TX_WITH_WITNESS(block);\n     } catch (const std::exception& e) {\n-        LogError(\"%s: Deserialize or I/O error - %s at %s\\n\", __func__, e.what(), pos.ToString());\n+        LogError(\"%s: Deserialize or I/O error - %s at %s\", __func__, e.what(), pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "c92ed996f1b81d5c05f80bd857565be73a4b0174",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "etc ...",
      "created_at": "2025-04-10T08:02:33Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036756715",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036756715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1004,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036772943",
      "pull_request_review_id": 2755530568,
      "id": 2036772943,
      "node_id": "PRRC_kwDOABII5855ZrBP",
      "diff_hunk": "@@ -1036,15 +1036,12 @@ bool BlockManager::ReadBlock(CBlock& block, const CBlockIndex& index) const\n \n bool BlockManager::ReadRawBlock(std::vector<uint8_t>& block, const FlatFilePos& pos) const\n {\n-    FlatFilePos hpos = pos;\n-    // If nPos is less than 8 the pos is null and we don't have the block data",
      "path": "src/node/blockstorage.cpp",
      "position": 157,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "2a798b5f478d54f3f2333fd282e5e238148842e4",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "2a798b5f478d54f3f2333fd282e5e238148842e4: Any reason to silently remove the comment? It would be good to explain it in the commit message. I guess this error should only happen when there is a race? An alternative would be to expand the error message itself?",
      "created_at": "2025-04-10T08:10:28Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036772943",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036772943"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1035,
      "original_line": 1035,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036785539",
      "pull_request_review_id": 2755530568,
      "id": 2036785539,
      "node_id": "PRRC_kwDOABII5855ZuGD",
      "diff_hunk": "@@ -1036,15 +1036,12 @@ bool BlockManager::ReadBlock(CBlock& block, const CBlockIndex& index) const\n \n bool BlockManager::ReadRawBlock(std::vector<uint8_t>& block, const FlatFilePos& pos) const\n {\n-    FlatFilePos hpos = pos;\n-    // If nPos is less than 8 the pos is null and we don't have the block data\n-    // Return early to prevent undefined behavior of unsigned int underflow\n-    if (hpos.nPos < 8) {\n+    if (pos.nPos < BLOCK_HEADER_BYTES) {\n+        // Return early to prevent undefined behavior of unsigned int underflow\n         LogError(\"%s failed for %s\", __func__, pos.ToString());\n         return false;\n     }\n-    hpos.nPos -= 8; // Seek back 8 bytes for meta header\n-    AutoFile filein{OpenBlockFile(hpos, true)};\n+    AutoFile filein{OpenBlockFile({pos.nFile, static_cast<unsigned int>(pos.nPos - BLOCK_HEADER_BYTES)}, true)};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "2a798b5f478d54f3f2333fd282e5e238148842e4",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "2a798b5f478d54f3f2333fd282e5e238148842e4: Would be nice to avoid the cast here? It may be possible by changing the type of the constexpr symbol to `uint32_t` (instead of using size_t, which may be a larger unsigned type, but if it required uint64_t, it would be broken anyway)?",
      "created_at": "2025-04-10T08:14:35Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036785539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036785539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1044,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036787017",
      "pull_request_review_id": 2755530568,
      "id": 2036787017,
      "node_id": "PRRC_kwDOABII5855ZudJ",
      "diff_hunk": "@@ -1036,15 +1036,12 @@ bool BlockManager::ReadBlock(CBlock& block, const CBlockIndex& index) const\n \n bool BlockManager::ReadRawBlock(std::vector<uint8_t>& block, const FlatFilePos& pos) const\n {\n-    FlatFilePos hpos = pos;\n-    // If nPos is less than 8 the pos is null and we don't have the block data\n-    // Return early to prevent undefined behavior of unsigned int underflow\n-    if (hpos.nPos < 8) {\n+    if (pos.nPos < BLOCK_HEADER_BYTES) {\n+        // Return early to prevent undefined behavior of unsigned int underflow\n         LogError(\"%s failed for %s\", __func__, pos.ToString());\n         return false;\n     }\n-    hpos.nPos -= 8; // Seek back 8 bytes for meta header\n-    AutoFile filein{OpenBlockFile(hpos, true)};\n+    AutoFile filein{OpenBlockFile({pos.nFile, static_cast<unsigned int>(pos.nPos - BLOCK_HEADER_BYTES)}, true)};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "2a798b5f478d54f3f2333fd282e5e238148842e4",
      "in_reply_to_id": 2036785539,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Also, while touching, it would be nice to use named args for all integral or bool literals",
      "created_at": "2025-04-10T08:15:31Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036787017",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036787017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1044,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036921847",
      "pull_request_review_id": 2755530568,
      "id": 2036921847,
      "node_id": "PRRC_kwDOABII5855aPX3",
      "diff_hunk": "@@ -2,13 +2,15 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <flatfile.h>\n #include <streams.h>\n #include <test/util/random.h>\n #include <test/util/setup_common.h>\n #include <util/fs.h>\n #include <util/strencodings.h>\n \n #include <boost/test/unit_test.hpp>\n+#include <node/blockstorage.h>",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "082e2b9828494153317fbc540a9e595498766f00",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 082e2b9828494153317fbc540a9e595498766f00: This is not a boost header, so should go in the other section",
      "created_at": "2025-04-10T09:28:32Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036921847",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036921847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036929113",
      "pull_request_review_id": 2755530568,
      "id": 2036929113,
      "node_id": "PRRC_kwDOABII5855aRJZ",
      "diff_hunk": "@@ -614,4 +616,46 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    DataBuffer m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    //! Requires stream ownership to prevent leaving the stream at an unexpected position after buffered reads.\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)\n+        requires std::is_rvalue_reference_v<S&&>\n+        : m_src{stream}, m_buf(size), m_buf_pos{size} {}\n+\n+    void read(std::span<std::byte> dst)\n+    {\n+        if (const auto available{std::min(dst.size(), m_buf.size() - m_buf_pos)}) {\n+            std::copy_n(m_buf.begin() + m_buf_pos, available, dst.begin());",
      "path": "src/streams.h",
      "position": 62,
      "original_position": 43,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "082e2b9828494153317fbc540a9e595498766f00",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "style nit: Not that it matters, but the call to `begin()` and addition can be avoided by just using iterators directly:\r\n\r\n```diff\r\ndiff --git a/src/streams.h b/src/streams.h\r\nindex 2f82c389c0..62afb40dbb 100644\r\n--- a/src/streams.h\r\n+++ b/src/streams.h\r\n@@ -626,26 +626,26 @@ class BufferedReader\r\n {\r\n     S& m_src;\r\n     DataBuffer m_buf;\r\n-    size_t m_buf_pos;\r\n+    DataBuffer::iterator m_buf_pos;\r\n \r\n public:\r\n     //! Requires stream ownership to prevent leaving the stream at an unexpected position after buffered reads.\r\n     explicit BufferedReader(S&& stream, size_t size = 1 << 16)\r\n         requires std::is_rvalue_reference_v<S&&>\r\n-        : m_src{stream}, m_buf(size), m_buf_pos{size} {}\r\n+        : m_src{stream}, m_buf(size), m_buf_pos{m_buf.end()} {}\r\n \r\n     void read(std::span<std::byte> dst)\r\n     {\r\n-        if (const auto available{std::min(dst.size(), m_buf.size() - m_buf_pos)}) {\r\n-            std::copy_n(m_buf.begin() + m_buf_pos, available, dst.begin());\r\n+        if (const auto available{std::min<size_t>(dst.size(), m_buf.end() - m_buf_pos)}) {\r\n+            std::copy_n(m_buf_pos, available, dst.begin());\r\n             m_buf_pos += available;\r\n             dst = dst.subspan(available);\r\n         }\r\n         if (dst.size()) {\r\n-            assert(m_buf_pos == m_buf.size());\r\n+            assert(m_buf_pos == m_buf.end());\r\n             m_src.read(dst);\r\n \r\n-            m_buf_pos = 0;\r\n+            m_buf_pos = m_buf.begin();\r\n             m_buf.resize(m_src.detail_fread(m_buf));\r\n         }\r\n     }\r\n",
      "created_at": "2025-04-10T09:32:38Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036929113",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036929113"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 643,
      "original_line": 643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036955654",
      "pull_request_review_id": 2755530568,
      "id": 2036955654,
      "node_id": "PRRC_kwDOABII5855aXoG",
      "diff_hunk": "@@ -553,6 +555,56 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n     fs::remove(streams_test_filename);\n }\n \n+BOOST_AUTO_TEST_CASE(buffered_reader_matches_autofile_random_content)\n+{\n+    const size_t file_size{1 + m_rng.randrange<size_t>(1 << 17)};\n+    const size_t buf_size{1 + m_rng.randrange(file_size)};\n+    const FlatFilePos pos{0, 0};\n+\n+    const FlatFileSeq test_file{m_args.GetDataDirBase(), \"buffered_file_test_random\", node::BLOCKFILE_CHUNK_SIZE};\n+    const std::vector obfuscation{m_rng.randbytes<std::byte>(8)};\n+\n+    // Write out the file with random content\n+    {\n+        AutoFile{test_file.Open(pos, /*read_only=*/false), obfuscation}.write(m_rng.randbytes<std::byte>(file_size));\n+    }\n+    BOOST_CHECK_EQUAL(fs::file_size(test_file.FileName(pos)), file_size);\n+\n+    AutoFile direct_file{test_file.Open(pos, /*read_only=*/true), obfuscation};\n+\n+    AutoFile buffered_file{test_file.Open(pos, /*read_only=*/true), obfuscation};\n+    BufferedReader buffered_reader{std::move(buffered_file), buf_size};\n+\n+    for (size_t total_read{0}; total_read < file_size;) {\n+        const size_t read{Assert(std::min(1 + m_rng.randrange(m_rng.randbool() ? buf_size : 2 * buf_size), file_size - total_read))};\n+\n+        DataBuffer direct_file_buffer{read};\n+        direct_file.read(direct_file_buffer);\n+\n+        DataBuffer buffered_buffer{read};\n+        buffered_reader.read(buffered_buffer);\n+\n+        BOOST_CHECK_EQUAL_COLLECTIONS(\n+            direct_file_buffer.begin(), direct_file_buffer.end(),\n+            buffered_buffer.begin(), buffered_buffer.end()\n+        );\n+\n+        total_read += read;\n+    }\n+\n+    {\n+        DataBuffer excess_byte{1};\n+        BOOST_CHECK_EXCEPTION(direct_file.read(excess_byte), std::ios_base::failure, HasReason{\"end of file\"});\n+    }\n+\n+    {\n+        DataBuffer excess_byte{1};\n+        BOOST_CHECK_EXCEPTION(buffered_reader.read(excess_byte), std::ios_base::failure, HasReason{\"end of file\"});\n+    }\n+\n+    try { fs::remove(test_file.FileName(pos)); } catch (...) {}",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "082e2b9828494153317fbc540a9e595498766f00",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is there a reason for the try-catch, when the other tests don't do it? seems odd to silence an exception, when it could indicate an error?",
      "created_at": "2025-04-10T09:42:39Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036955654",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036955654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 605,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036967048",
      "pull_request_review_id": 2755530568,
      "id": 2036967048,
      "node_id": "PRRC_kwDOABII5855aaaI",
      "diff_hunk": "@@ -614,4 +616,46 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    DataBuffer m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    //! Requires stream ownership to prevent leaving the stream at an unexpected position after buffered reads.\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 36,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "082e2b9828494153317fbc540a9e595498766f00",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "missing LIFETIMEBOUND for `stream`? Otherwise, there won't be any Wdandling warnings at all for wrong code",
      "created_at": "2025-04-10T09:49:00Z",
      "updated_at": "2025-04-10T09:51:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036967048",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036967048"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 633,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036980245",
      "pull_request_review_id": 2756093408,
      "id": 2036980245,
      "node_id": "PRRC_kwDOABII5855adoV",
      "diff_hunk": "@@ -614,4 +616,46 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    DataBuffer m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    //! Requires stream ownership to prevent leaving the stream at an unexpected position after buffered reads.\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 36,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "082e2b9828494153317fbc540a9e595498766f00",
      "in_reply_to_id": 2036967048,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "(I can't edit my comment due to a GitHub error, but `Wdandling` should be `Wdangling`)",
      "created_at": "2025-04-10T09:56:17Z",
      "updated_at": "2025-04-10T09:56:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2036980245",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2036980245"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 633,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037634458",
      "pull_request_review_id": 2757198089,
      "id": 2037634458,
      "node_id": "PRRC_kwDOABII5855c9Wa",
      "diff_hunk": "@@ -666,24 +666,26 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n         return false;\n     }\n \n-    // Read block\n-    uint256 hashChecksum;\n-    HashVerifier verifier{filein}; // Use HashVerifier as reserializing may lose data, c.f. commit d342424301013ec47dc146a4beb49d5c9319d80a\n     try {\n+        // Read block\n+        HashVerifier verifier{filein}; // Use HashVerifier, as reserializing may lose data, c.f. commit d3424243",
      "path": "src/node/blockstorage.cpp",
      "position": 28,
      "original_position": 9,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "fbe701bf32a33766d06bec58e4c0fb70e94f60b1",
      "in_reply_to_id": 2023827585,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good catch, it's a leftover from https://github.com/bitcoin/bitcoin/commit/f72c2dd3a0c5005bb527587dc5576a19dc6a790d#diff-114c2880ec1ff2c5293ac65ceda0637bf92c05745b74b58410585a549464a33fR977-R989",
      "created_at": "2025-04-10T15:00:34Z",
      "updated_at": "2025-04-10T15:00:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037634458",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037634458"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 672,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037634950",
      "pull_request_review_id": 2757198848,
      "id": 2037634950,
      "node_id": "PRRC_kwDOABII5855c9eG",
      "diff_hunk": "@@ -614,4 +616,46 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    DataBuffer m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    //! Requires stream ownership to prevent leaving the stream at an unexpected position after buffered reads.\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 36,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "082e2b9828494153317fbc540a9e595498766f00",
      "in_reply_to_id": 2036967048,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Wasn't sure about this - the semantics of `LIFETIMEBOUND` with rvalue references wasn't clear to me -, but if https://godbolt.org/z/ffGjK9Y6P is correct, you're right, thanks for the suggestion!\r\n\r\nAdded it as separate commit to apply it to `BufferedFile` (and `BufferedWriter`) as well: \r\n* `BufferedWriter(S& stream LIFETIMEBOUND, size_t size = 1 << 16)`\r\n* `BufferedReader(S&& stream LIFETIMEBOUND, size_t size = 1 << 16)`\r\n* `BufferedFile(AutoFile& file LIFETIMEBOUND, uint64_t nBufSize, uint64_t nRewindIn)`",
      "created_at": "2025-04-10T15:00:48Z",
      "updated_at": "2025-04-10T15:00:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037634950",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037634950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 633,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037635254",
      "pull_request_review_id": 2757199343,
      "id": 2037635254,
      "node_id": "PRRC_kwDOABII5855c9i2",
      "diff_hunk": "@@ -553,6 +555,56 @@ BOOST_AUTO_TEST_CASE(streams_buffered_file_rand)\n     fs::remove(streams_test_filename);\n }\n \n+BOOST_AUTO_TEST_CASE(buffered_reader_matches_autofile_random_content)\n+{\n+    const size_t file_size{1 + m_rng.randrange<size_t>(1 << 17)};\n+    const size_t buf_size{1 + m_rng.randrange(file_size)};\n+    const FlatFilePos pos{0, 0};\n+\n+    const FlatFileSeq test_file{m_args.GetDataDirBase(), \"buffered_file_test_random\", node::BLOCKFILE_CHUNK_SIZE};\n+    const std::vector obfuscation{m_rng.randbytes<std::byte>(8)};\n+\n+    // Write out the file with random content\n+    {\n+        AutoFile{test_file.Open(pos, /*read_only=*/false), obfuscation}.write(m_rng.randbytes<std::byte>(file_size));\n+    }\n+    BOOST_CHECK_EQUAL(fs::file_size(test_file.FileName(pos)), file_size);\n+\n+    AutoFile direct_file{test_file.Open(pos, /*read_only=*/true), obfuscation};\n+\n+    AutoFile buffered_file{test_file.Open(pos, /*read_only=*/true), obfuscation};\n+    BufferedReader buffered_reader{std::move(buffered_file), buf_size};\n+\n+    for (size_t total_read{0}; total_read < file_size;) {\n+        const size_t read{Assert(std::min(1 + m_rng.randrange(m_rng.randbool() ? buf_size : 2 * buf_size), file_size - total_read))};\n+\n+        DataBuffer direct_file_buffer{read};\n+        direct_file.read(direct_file_buffer);\n+\n+        DataBuffer buffered_buffer{read};\n+        buffered_reader.read(buffered_buffer);\n+\n+        BOOST_CHECK_EQUAL_COLLECTIONS(\n+            direct_file_buffer.begin(), direct_file_buffer.end(),\n+            buffered_buffer.begin(), buffered_buffer.end()\n+        );\n+\n+        total_read += read;\n+    }\n+\n+    {\n+        DataBuffer excess_byte{1};\n+        BOOST_CHECK_EXCEPTION(direct_file.read(excess_byte), std::ios_base::failure, HasReason{\"end of file\"});\n+    }\n+\n+    {\n+        DataBuffer excess_byte{1};\n+        BOOST_CHECK_EXCEPTION(buffered_reader.read(excess_byte), std::ios_base::failure, HasReason{\"end of file\"});\n+    }\n+\n+    try { fs::remove(test_file.FileName(pos)); } catch (...) {}",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "082e2b9828494153317fbc540a9e595498766f00",
      "in_reply_to_id": 2036955654,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, thanks",
      "created_at": "2025-04-10T15:00:58Z",
      "updated_at": "2025-04-10T15:00:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037635254",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037635254"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 605,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037635345",
      "pull_request_review_id": 2757199506,
      "id": 2037635345,
      "node_id": "PRRC_kwDOABII5855c9kR",
      "diff_hunk": "@@ -614,4 +616,46 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    DataBuffer m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    //! Requires stream ownership to prevent leaving the stream at an unexpected position after buffered reads.\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)\n+        requires std::is_rvalue_reference_v<S&&>\n+        : m_src{stream}, m_buf(size), m_buf_pos{size} {}\n+\n+    void read(std::span<std::byte> dst)\n+    {\n+        if (const auto available{std::min(dst.size(), m_buf.size() - m_buf_pos)}) {\n+            std::copy_n(m_buf.begin() + m_buf_pos, available, dst.begin());",
      "path": "src/streams.h",
      "position": 62,
      "original_position": 43,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "082e2b9828494153317fbc540a9e595498766f00",
      "in_reply_to_id": 2036929113,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's a good idea, but for consistency, I would have to change the writer as well and would likely need `std::distance` there, which I'd like to avoid - so for consistency will leave it as is. Let me know if you disagree.",
      "created_at": "2025-04-10T15:01:01Z",
      "updated_at": "2025-04-10T15:01:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037635345",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037635345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 643,
      "original_line": 643,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037635510",
      "pull_request_review_id": 2757199803,
      "id": 2037635510,
      "node_id": "PRRC_kwDOABII5855c9m2",
      "diff_hunk": "@@ -2,13 +2,15 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <flatfile.h>\n #include <streams.h>\n #include <test/util/random.h>\n #include <test/util/setup_common.h>\n #include <util/fs.h>\n #include <util/strencodings.h>\n \n #include <boost/test/unit_test.hpp>\n+#include <node/blockstorage.h>",
      "path": "src/test/streams_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "082e2b9828494153317fbc540a9e595498766f00",
      "in_reply_to_id": 2036921847,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-04-10T15:01:06Z",
      "updated_at": "2025-04-10T15:01:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037635510",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037635510"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 13,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037635573",
      "pull_request_review_id": 2757199903,
      "id": 2037635573,
      "node_id": "PRRC_kwDOABII5855c9n1",
      "diff_hunk": "@@ -1036,15 +1036,12 @@ bool BlockManager::ReadBlock(CBlock& block, const CBlockIndex& index) const\n \n bool BlockManager::ReadRawBlock(std::vector<uint8_t>& block, const FlatFilePos& pos) const\n {\n-    FlatFilePos hpos = pos;\n-    // If nPos is less than 8 the pos is null and we don't have the block data\n-    // Return early to prevent undefined behavior of unsigned int underflow\n-    if (hpos.nPos < 8) {\n+    if (pos.nPos < BLOCK_HEADER_BYTES) {\n+        // Return early to prevent undefined behavior of unsigned int underflow\n         LogError(\"%s failed for %s\", __func__, pos.ToString());\n         return false;\n     }\n-    hpos.nPos -= 8; // Seek back 8 bytes for meta header\n-    AutoFile filein{OpenBlockFile(hpos, true)};\n+    AutoFile filein{OpenBlockFile({pos.nFile, static_cast<unsigned int>(pos.nPos - BLOCK_HEADER_BYTES)}, true)};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "2a798b5f478d54f3f2333fd282e5e238148842e4",
      "in_reply_to_id": 2036785539,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "* Changed to `uint32_t BLOCK_HEADER_BYTES` and `uint32_t UNDO_DATA_DISK_OVERHEAD` in the refactoring commit\r\n* Added default args - and made `/*fReadOnly=*/false` args explicit while here.",
      "created_at": "2025-04-10T15:01:09Z",
      "updated_at": "2025-04-10T15:01:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037635573",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037635573"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1044,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037636223",
      "pull_request_review_id": 2757200956,
      "id": 2037636223,
      "node_id": "PRRC_kwDOABII5855c9x_",
      "diff_hunk": "@@ -1036,15 +1036,12 @@ bool BlockManager::ReadBlock(CBlock& block, const CBlockIndex& index) const\n \n bool BlockManager::ReadRawBlock(std::vector<uint8_t>& block, const FlatFilePos& pos) const\n {\n-    FlatFilePos hpos = pos;\n-    // If nPos is less than 8 the pos is null and we don't have the block data",
      "path": "src/node/blockstorage.cpp",
      "position": 157,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "2a798b5f478d54f3f2333fd282e5e238148842e4",
      "in_reply_to_id": 2036772943,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Based on https://github.com/bitcoin/bitcoin/commit/da338aada7943c392013c36c542af621fbc6edd1 (and the comment and following code) it seems to me this is a simple parameter validation to make sure we can safely step back to be able to read the header - i.e. `pos.nPos - BLOCK_HEADER_BYTES`.\r\nAnd also, since it repeated the constant `8` and mentioned `pos is null` (which didn't make sense to me in this context), and it seemed we can better explain it with code, it's why I've deleted.\r\nAdded this explanation to commit message as well.\r\n@andrewtoth, do you think we should document it better?",
      "created_at": "2025-04-10T15:01:28Z",
      "updated_at": "2025-04-10T15:01:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037636223",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037636223"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1035,
      "original_line": 1035,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037637174",
      "pull_request_review_id": 2757202597,
      "id": 2037637174,
      "node_id": "PRRC_kwDOABII5855c-A2",
      "diff_hunk": "@@ -993,27 +993,27 @@ bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\n     // Open history file to read\n     AutoFile filein{OpenBlockFile(pos, true)};\n     if (filein.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed for %s\\n\", __func__, pos.ToString());\n+        LogError(\"%s: OpenBlockFile failed for %s\", __func__, pos.ToString());\n         return false;\n     }\n \n     try {\n         // Read block\n         filein >> TX_WITH_WITNESS(block);\n     } catch (const std::exception& e) {\n-        LogError(\"%s: Deserialize or I/O error - %s at %s\\n\", __func__, e.what(), pos.ToString());\n+        LogError(\"%s: Deserialize or I/O error - %s at %s\", __func__, e.what(), pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 55,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "c92ed996f1b81d5c05f80bd857565be73a4b0174",
      "in_reply_to_id": 2036756715,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-04-10T15:01:58Z",
      "updated_at": "2025-04-10T15:01:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037637174",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037637174"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1004,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037637235",
      "pull_request_review_id": 2757202720,
      "id": 2037637235,
      "node_id": "PRRC_kwDOABII5855c-Bz",
      "diff_hunk": "@@ -993,27 +993,27 @@ bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\n     // Open history file to read\n     AutoFile filein{OpenBlockFile(pos, true)};\n     if (filein.IsNull()) {\n-        LogError(\"%s: OpenBlockFile failed for %s\\n\", __func__, pos.ToString());\n+        LogError(\"%s: OpenBlockFile failed for %s\", __func__, pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 46,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "c92ed996f1b81d5c05f80bd857565be73a4b0174",
      "in_reply_to_id": 2036754119,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-04-10T15:02:01Z",
      "updated_at": "2025-04-10T15:02:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037637235",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037637235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 996,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037637270",
      "pull_request_review_id": 2757202791,
      "id": 2037637270,
      "node_id": "PRRC_kwDOABII5855c-CW",
      "diff_hunk": "@@ -678,11 +678,11 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n \n         // Verify checksum\n         if (hashChecksum != verifier.GetHash()) {\n-            LogError(\"%s: Checksum mismatch at %s\\n\", __func__, pos.ToString());\n+            LogError(\"%s: Checksum mismatch at %s\", __func__, pos.ToString());\n             return false;\n         }\n     } catch (const std::exception& e) {\n-        LogError(\"%s: Deserialize or I/O error - %s at %s\\n\", __func__, e.what(), pos.ToString());\n+        LogError(\"%s: Deserialize or I/O error - %s at %s\", __func__, e.what(), pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "c92ed996f1b81d5c05f80bd857565be73a4b0174",
      "in_reply_to_id": 2036750860,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-04-10T15:02:02Z",
      "updated_at": "2025-04-10T15:02:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037637270",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037637270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 685,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037637355",
      "pull_request_review_id": 2757202906,
      "id": 2037637355,
      "node_id": "PRRC_kwDOABII5855c-Dr",
      "diff_hunk": "@@ -678,11 +678,11 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n \n         // Verify checksum\n         if (hashChecksum != verifier.GetHash()) {\n-            LogError(\"%s: Checksum mismatch at %s\\n\", __func__, pos.ToString());\n+            LogError(\"%s: Checksum mismatch at %s\", __func__, pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "c92ed996f1b81d5c05f80bd857565be73a4b0174",
      "in_reply_to_id": 2036750345,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done\r\n\r\ncc: @hodlinator ",
      "created_at": "2025-04-10T15:02:04Z",
      "updated_at": "2025-04-10T15:02:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037637355",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037637355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 681,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037637503",
      "pull_request_review_id": 2757203170,
      "id": 2037637503,
      "node_id": "PRRC_kwDOABII5855c-F_",
      "diff_hunk": "@@ -75,10 +75,10 @@ static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n \n /** Size of header written by WriteBlock before a serialized CBlock (8 bytes) */\n-static constexpr size_t BLOCK_SERIALIZATION_HEADER_SIZE{std::tuple_size_v<MessageStartChars> + sizeof(unsigned int)};\n+static constexpr size_t BLOCK_HEADER_BYTES{std::tuple_size_v<MessageStartChars> + sizeof(unsigned int)};",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "3c4c6e8edc0fb4918838cb66811b423096db635b",
      "in_reply_to_id": 2036734899,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added scripted diff to `STORAGE_HEADER_SIZE` (with guard to make sure it doesn't exist before)",
      "created_at": "2025-04-10T15:02:09Z",
      "updated_at": "2025-04-10T15:02:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037637503",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037637503"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037637670",
      "pull_request_review_id": 2757203452,
      "id": 2037637670,
      "node_id": "PRRC_kwDOABII5855c-Im",
      "diff_hunk": "@@ -938,22 +938,26 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n             LogError(\"FindUndoPos failed\");\n             return false;\n         }\n-        // Open history file to append\n-        AutoFile fileout{OpenUndoFile(pos)};\n-        if (fileout.IsNull()) {\n-            LogError(\"OpenUndoFile failed\");\n-            return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n-        }\n \n-        // Write index header\n-        fileout << GetParams().MessageStart() << blockundo_size;\n-        pos.nPos += BLOCK_SERIALIZATION_HEADER_SIZE;\n         {\n-            // Calculate checksum\n-            HashWriter hasher{};\n-            hasher << block.pprev->GetBlockHash() << blockundo;\n-            // Write undo data & checksum\n-            fileout << blockundo << hasher.GetHash();\n+            // Open history file to append\n+            AutoFile fileout{OpenUndoFile(pos)};\n+            if (fileout.IsNull()) {\n+                LogError(\"OpenUndoFile failed\");\n+                return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n+            }\n+\n+            // Write index header\n+            fileout << GetParams().MessageStart() << blockundo_size;\n+            pos.nPos += BLOCK_SERIALIZATION_HEADER_SIZE;\n+            {\n+                // Calculate checksum\n+                HashWriter hasher{};\n+                hasher << block.pprev->GetBlockHash() << blockundo;\n+                // Write undo data & checksum\n+                fileout << blockundo << hasher.GetHash();\n+            }\n+            fileout.fclose(); // Make sure `AutoFile` goes out of scope before we call `FlushUndoFile`",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "da7574f140fafc0eb3ea80fd5f40e8442afffef1",
      "in_reply_to_id": 2036694308,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This only applies to the intermediary commit (the final buffered call flushes only), and the last `fclose(file)` call in `FlatFileSeq::Flush` doesn't check for errors either, so there was already a \"silent ignore\" of potential file closing errors in the original code.\r\n\r\nI'll handle the close here temporarily (the last commit reverts it, but at least this commit is more complete) and will let https://github.com/bitcoin/bitcoin/pull/29307/files#diff-114c2880ec1ff2c5293ac65ceda0637bf92c05745b74b58410585a549464a33f handle the existing ones.",
      "created_at": "2025-04-10T15:02:15Z",
      "updated_at": "2025-04-10T15:02:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037637670",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037637670"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 960,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037638286",
      "pull_request_review_id": 2757204421,
      "id": 2037638286,
      "node_id": "PRRC_kwDOABII5855c-SO",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": 2026453700,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-04-10T15:02:33Z",
      "updated_at": "2025-04-10T15:02:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2037638286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2037638286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038396545",
      "pull_request_review_id": 2758501529,
      "id": 2038396545,
      "node_id": "PRRC_kwDOABII5855f3aB",
      "diff_hunk": "@@ -75,10 +75,10 @@ static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n \n /** Size of header written by WriteBlock before a serialized CBlock (8 bytes) */\n-static constexpr size_t BLOCK_SERIALIZATION_HEADER_SIZE{std::tuple_size_v<MessageStartChars> + sizeof(unsigned int)};\n+static constexpr size_t BLOCK_HEADER_BYTES{std::tuple_size_v<MessageStartChars> + sizeof(unsigned int)};",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "3c4c6e8edc0fb4918838cb66811b423096db635b",
      "in_reply_to_id": 2036734899,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point about `BLOCK_HEADER_BYTES` being a misnomer, quite different from `CBlockHeader`.\r\n\r\n`node::STORAGE_HEADER_SIZE` feels awfully generic to me, would prefer the original name in that case, or slightly shortened: `node::BLOCK_SER_HEADER_SIZE`. Not a blocker though.\r\n\r\n(I liked the `_BYTES` suffix to make the unit crystal clear, planning to incorporate it in a WIP change).",
      "created_at": "2025-04-10T21:57:48Z",
      "updated_at": "2025-04-10T22:18:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2038396545",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038396545"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038397580",
      "pull_request_review_id": 2758501529,
      "id": 2038397580,
      "node_id": "PRRC_kwDOABII5855f3qM",
      "diff_hunk": "@@ -678,11 +678,11 @@ bool BlockManager::ReadBlockUndo(CBlockUndo& blockundo, const CBlockIndex& index\n \n         // Verify checksum\n         if (hashChecksum != verifier.GetHash()) {\n-            LogError(\"%s: Checksum mismatch at %s\\n\", __func__, pos.ToString());\n+            LogError(\"%s: Checksum mismatch at %s\", __func__, pos.ToString());",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "c92ed996f1b81d5c05f80bd857565be73a4b0174",
      "in_reply_to_id": 2036750345,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice approach for making the log messages unique. :+1: ",
      "created_at": "2025-04-10T21:58:51Z",
      "updated_at": "2025-04-10T22:18:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2038397580",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038397580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 681,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038427615",
      "pull_request_review_id": 2758501529,
      "id": 2038427615,
      "node_id": "PRRC_kwDOABII5855f-_f",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": 2026453700,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Typo + make it a tad bit less absolute?\r\n\r\n```diff\r\n- The buffer sizes were selected by so that the buffered reader produces the same performance as reading the whole block into memory (lower values are slower, bigger ones have the same speed).\r\n+ The buffer sizes were selected so that the buffered reader produces the same performance as reading the whole block into memory on measured setups (lower values are slower, bigger ones have the same speed).\r\n```\r\n\r\nI guess it would be good for us reviewers to at least play around with the buffer sizes too to see if at least the microbenchmarks show anything surprising.",
      "created_at": "2025-04-10T22:17:23Z",
      "updated_at": "2025-04-10T22:18:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2038427615",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038427615"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038880975",
      "pull_request_review_id": 2759271932,
      "id": 2038880975,
      "node_id": "PRRC_kwDOABII5855htrP",
      "diff_hunk": "@@ -938,22 +938,26 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n             LogError(\"FindUndoPos failed\");\n             return false;\n         }\n-        // Open history file to append\n-        AutoFile fileout{OpenUndoFile(pos)};\n-        if (fileout.IsNull()) {\n-            LogError(\"OpenUndoFile failed\");\n-            return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n-        }\n \n-        // Write index header\n-        fileout << GetParams().MessageStart() << blockundo_size;\n-        pos.nPos += BLOCK_SERIALIZATION_HEADER_SIZE;\n         {\n-            // Calculate checksum\n-            HashWriter hasher{};\n-            hasher << block.pprev->GetBlockHash() << blockundo;\n-            // Write undo data & checksum\n-            fileout << blockundo << hasher.GetHash();\n+            // Open history file to append\n+            AutoFile fileout{OpenUndoFile(pos)};\n+            if (fileout.IsNull()) {\n+                LogError(\"OpenUndoFile failed\");\n+                return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n+            }\n+\n+            // Write index header\n+            fileout << GetParams().MessageStart() << blockundo_size;\n+            pos.nPos += BLOCK_SERIALIZATION_HEADER_SIZE;\n+            {\n+                // Calculate checksum\n+                HashWriter hasher{};\n+                hasher << block.pprev->GetBlockHash() << blockundo;\n+                // Write undo data & checksum\n+                fileout << blockundo << hasher.GetHash();\n+            }\n+            fileout.fclose(); // Make sure `AutoFile` goes out of scope before we call `FlushUndoFile`",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "da7574f140fafc0eb3ea80fd5f40e8442afffef1",
      "in_reply_to_id": 2036694308,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> This only applies to the intermediary commit (the final buffered call flushes only), and the last `fclose(file)` call in `FlatFileSeq::Flush` doesn't check for errors either, so there was already a \"silent ignore\" of potential file closing errors in the original code.\r\n\r\nI am not sure. Here, you are adding an explicit fclose, which is responsible for the flushing, so any flush error will be silently ignored (in this commit). The fclose in `Flush` seems acceptable to ignore, because the flush was already done (and checked). (If it wasn't acceptable to ignore, it would be good to fix it along with an explanation why the fix is needed)\r\n\r\nTo answer my other questions: I guess this really is a bugfix commit. Lack of the commit probably doesn't mean data corruption in the happy path, but if there was a power loss or crash of the process *after* `FlushUndoFile`, but before the autofile went out of scope, there could be data loss/corruption.\r\n\r\n",
      "created_at": "2025-04-11T06:31:05Z",
      "updated_at": "2025-04-11T06:31:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2038880975",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038880975"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 960,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038891025",
      "pull_request_review_id": 2759287083,
      "id": 2038891025,
      "node_id": "PRRC_kwDOABII5855hwIR",
      "diff_hunk": "@@ -938,22 +938,31 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n             LogError(\"FindUndoPos failed\");\n             return false;\n         }\n-        // Open history file to append\n-        AutoFile fileout{OpenUndoFile(pos)};\n-        if (fileout.IsNull()) {\n-            LogError(\"OpenUndoFile failed\");\n-            return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n-        }\n \n-        // Write index header\n-        fileout << GetParams().MessageStart() << blockundo_size;\n-        pos.nPos += BLOCK_SERIALIZATION_HEADER_SIZE;\n         {\n-            // Calculate checksum\n-            HashWriter hasher{};\n-            hasher << block.pprev->GetBlockHash() << blockundo;\n-            // Write undo data & checksum\n-            fileout << blockundo << hasher.GetHash();\n+            // Open history file to append\n+            AutoFile fileout{OpenUndoFile(pos)};\n+            if (fileout.IsNull()) {\n+                LogError(\"OpenUndoFile failed\");\n+                return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n+            }\n+\n+            // Write index header\n+            fileout << GetParams().MessageStart() << blockundo_size;\n+            pos.nPos += BLOCK_SERIALIZATION_HEADER_SIZE;\n+            {\n+                // Calculate checksum\n+                HashWriter hasher{};\n+                hasher << block.pprev->GetBlockHash() << blockundo;\n+                // Write undo data & checksum\n+                fileout << blockundo << hasher.GetHash();\n+            }\n+\n+            // Make sure `AutoFile` goes out of scope before we call `FlushUndoFile`\n+            if (fileout.fclose()) {\n+                LogError(\"WriteBlockUndo: fclose failed\\n\");",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "bae92bb717693d0bb2602645832b243a0d17b35a",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "review note in bae92bb717693d0bb2602645832b243a0d17b35a: The trailing `\\n` isn't needed, but this doesn't matter, because the `LogError` is removed in the last commit again.",
      "created_at": "2025-04-11T06:38:00Z",
      "updated_at": "2025-04-11T09:26:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2038891025",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038891025"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 963,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038942887",
      "pull_request_review_id": 2759287083,
      "id": 2038942887,
      "node_id": "PRRC_kwDOABII5855h8yn",
      "diff_hunk": "@@ -523,7 +528,7 @@ class BufferedFile\n     }\n \n public:\n-    BufferedFile(AutoFile& file, uint64_t nBufSize, uint64_t nRewindIn)\n+    BufferedFile(AutoFile& file LIFETIMEBOUND, uint64_t nBufSize, uint64_t nRewindIn)",
      "path": "src/streams.h",
      "position": 33,
      "original_position": 28,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "afc72bbe27f3b682fc45f949bfeb538233dbffa5",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in 1b4d187ded: Not sure why this is added, albeit it should be harmless. My understanding is that in C++, a mutable reference argument can not bind to a temporary. So the rules that would be enforced by `LIFETIMEBOUND` here are already enforced by the language. ",
      "created_at": "2025-04-11T07:13:42Z",
      "updated_at": "2025-04-11T09:26:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2038942887",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038942887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 531,
      "original_line": 531,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038973374",
      "pull_request_review_id": 2759287083,
      "id": 2038973374,
      "node_id": "PRRC_kwDOABII5855iEO-",
      "diff_hunk": "@@ -1036,15 +1036,12 @@ bool BlockManager::ReadBlock(CBlock& block, const CBlockIndex& index) const\n \n bool BlockManager::ReadRawBlock(std::vector<uint8_t>& block, const FlatFilePos& pos) const\n {\n-    FlatFilePos hpos = pos;\n-    // If nPos is less than 8 the pos is null and we don't have the block data",
      "path": "src/node/blockstorage.cpp",
      "position": 157,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "2a798b5f478d54f3f2333fd282e5e238148842e4",
      "in_reply_to_id": 2036772943,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> `pos is null` (which didn't make sense to me in this context)\r\n\r\nMy guess is that \"pos is null\" refers to the fact that `pos.IsNull()` (equal to a default constructed) or that `nFile` and `nPos` were set to `0` (after pruning).\r\n\r\nHowever, for those cases, the caller is encouraged to check it first. This should work almost always, except for some rare races, see https://github.com/bitcoin/bitcoin/pull/30410.\r\n\r\nSo it just seems a bit odd to remove the comment, but keep the one about unsigned overflow.\r\n\r\nunsigned overflow is the symptom to avoid, but not the real reason for the check.\r\n\r\nAlso, as an unrelated side note, unsigned overflow is not undefined behavior in the language, just undesired behavior in this context. ",
      "created_at": "2025-04-11T07:34:46Z",
      "updated_at": "2025-04-11T09:26:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2038973374",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2038973374"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1035,
      "original_line": 1035,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2039070318",
      "pull_request_review_id": 2759287083,
      "id": 2039070318,
      "node_id": "PRRC_kwDOABII5855ib5u",
      "diff_hunk": "@@ -996,11 +997,12 @@ bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\n     block.SetNull();\n \n     // Open history file to read\n-    AutoFile filein{OpenBlockFile(pos, /*fReadOnly=*/true)};\n-    if (filein.IsNull()) {\n+    AutoFile file{OpenBlockFile(pos, /*fReadOnly=*/true)};\n+    if (file.IsNull()) {\n         LogError(\"OpenBlockFile failed for %s while reading block\", pos.ToString());\n         return false;\n     }\n+    BufferedReader filein{std::move(file)};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "824d03c592b78cbc2abf2f03116467651f9388f6",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in 824d03c592b78cbc2abf2f03116467651f9388f6:\r\n\r\nIt is possible to achieve the same speed-up here, by using the existing `SpanReader` and `ReadRawBlock` with less code:\r\n\r\n\r\n```diff\r\ndiff --git a/src/node/blockstorage.cpp b/src/node/blockstorage.cpp\r\nindex 9680415182..ff6b96af1f 100644\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -995,18 +995,12 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\r\n bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\r\n {\r\n     block.SetNull();\r\n-\r\n-    // Open history file to read\r\n-    AutoFile file{OpenBlockFile(pos, /*fReadOnly=*/true)};\r\n-    if (file.IsNull()) {\r\n-        LogError(\"OpenBlockFile failed for %s while reading block\", pos.ToString());\r\n+    std::vector<uint8_t> dat;\r\n+    if (!ReadRawBlock(dat, pos)) {\r\n         return false;\r\n     }\r\n-    BufferedReader filein{std::move(file)};\r\n-\r\n     try {\r\n-        // Read block\r\n-        filein >> TX_WITH_WITNESS(block);\r\n+        SpanReader{dat} >> TX_WITH_WITNESS(block);\r\n     } catch (const std::exception& e) {\r\n         LogError(\"Deserialize or I/O error - %s at %s while reading block\", e.what(), pos.ToString());\r\n         return false;\r\n```\r\n\r\nIt is even half a percent faster on my machine, but that is probably just noise.\r\n\r\nStyle-wise, what I like about re-using `ReadRawBlock`, is that it also clearly documents that `ReadRawBlock` is a logically subset of `ReadBlock` and does less checks and less work.",
      "created_at": "2025-04-11T08:31:35Z",
      "updated_at": "2025-04-11T09:26:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2039070318",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2039070318"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": 999,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1005,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2039156638",
      "pull_request_review_id": 2759287083,
      "id": 2039156638,
      "node_id": "PRRC_kwDOABII5855iw-e",
      "diff_hunk": "@@ -465,6 +465,9 @@ class AutoFile\n         ::Unserialize(*this, obj);\n         return *this;\n     }\n+\n+    //! Write a mutable buffer more efficiently than write(), obfuscating the buffer in-place.\n+    void write_buffer(std::span<std::byte> src);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 6,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "afc72bbe27f3b682fc45f949bfeb538233dbffa5",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in afc72bbe27f3b682fc45f949bfeb538233dbffa5: I don't think this is part of the normal \"stream subset\", so should be moved to a different section",
      "created_at": "2025-04-11T09:18:44Z",
      "updated_at": "2025-04-11T09:26:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2039156638",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2039156638"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 470,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041165221",
      "pull_request_review_id": 2762799258,
      "id": 2041165221,
      "node_id": "PRRC_kwDOABII5855qbWl",
      "diff_hunk": "@@ -1036,15 +1036,12 @@ bool BlockManager::ReadBlock(CBlock& block, const CBlockIndex& index) const\n \n bool BlockManager::ReadRawBlock(std::vector<uint8_t>& block, const FlatFilePos& pos) const\n {\n-    FlatFilePos hpos = pos;\n-    // If nPos is less than 8 the pos is null and we don't have the block data",
      "path": "src/node/blockstorage.cpp",
      "position": 157,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "2a798b5f478d54f3f2333fd282e5e238148842e4",
      "in_reply_to_id": 2036772943,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Reworded, added it back",
      "created_at": "2025-04-13T16:57:09Z",
      "updated_at": "2025-04-13T16:57:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2041165221",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041165221"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1035,
      "original_line": 1035,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041165229",
      "pull_request_review_id": 2762799273,
      "id": 2041165229,
      "node_id": "PRRC_kwDOABII5855qbWt",
      "diff_hunk": "@@ -938,22 +938,31 @@ bool BlockManager::WriteBlockUndo(const CBlockUndo& blockundo, BlockValidationSt\n             LogError(\"FindUndoPos failed\");\n             return false;\n         }\n-        // Open history file to append\n-        AutoFile fileout{OpenUndoFile(pos)};\n-        if (fileout.IsNull()) {\n-            LogError(\"OpenUndoFile failed\");\n-            return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n-        }\n \n-        // Write index header\n-        fileout << GetParams().MessageStart() << blockundo_size;\n-        pos.nPos += BLOCK_SERIALIZATION_HEADER_SIZE;\n         {\n-            // Calculate checksum\n-            HashWriter hasher{};\n-            hasher << block.pprev->GetBlockHash() << blockundo;\n-            // Write undo data & checksum\n-            fileout << blockundo << hasher.GetHash();\n+            // Open history file to append\n+            AutoFile fileout{OpenUndoFile(pos)};\n+            if (fileout.IsNull()) {\n+                LogError(\"OpenUndoFile failed\");\n+                return FatalError(m_opts.notifications, state, _(\"Failed to write undo data.\"));\n+            }\n+\n+            // Write index header\n+            fileout << GetParams().MessageStart() << blockundo_size;\n+            pos.nPos += BLOCK_SERIALIZATION_HEADER_SIZE;\n+            {\n+                // Calculate checksum\n+                HashWriter hasher{};\n+                hasher << block.pprev->GetBlockHash() << blockundo;\n+                // Write undo data & checksum\n+                fileout << blockundo << hasher.GetHash();\n+            }\n+\n+            // Make sure `AutoFile` goes out of scope before we call `FlushUndoFile`\n+            if (fileout.fclose()) {\n+                LogError(\"WriteBlockUndo: fclose failed\\n\");",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "bae92bb717693d0bb2602645832b243a0d17b35a",
      "in_reply_to_id": 2038891025,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, since I was pushing anyway",
      "created_at": "2025-04-13T16:57:13Z",
      "updated_at": "2025-04-13T16:57:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2041165229",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041165229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 963,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041165241",
      "pull_request_review_id": 2762799287,
      "id": 2041165241,
      "node_id": "PRRC_kwDOABII5855qbW5",
      "diff_hunk": "@@ -523,7 +528,7 @@ class BufferedFile\n     }\n \n public:\n-    BufferedFile(AutoFile& file, uint64_t nBufSize, uint64_t nRewindIn)\n+    BufferedFile(AutoFile& file LIFETIMEBOUND, uint64_t nBufSize, uint64_t nRewindIn)",
      "path": "src/streams.h",
      "position": 33,
      "original_position": 28,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "afc72bbe27f3b682fc45f949bfeb538233dbffa5",
      "in_reply_to_id": 2038942887,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could very well be, but it would still provide documentation against usages as:\r\n```C++\r\nBufferedFile* createBufferedFile(fs::path streams_test_filename) {\r\n    AutoFile file{fsbridge::fopen(streams_test_filename, \"w+b\")};\r\n    return new BufferedFile(file, 10, 10);\r\n}\r\n```",
      "created_at": "2025-04-13T16:57:18Z",
      "updated_at": "2025-04-13T16:57:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2041165241",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041165241"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 531,
      "original_line": 531,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041165264",
      "pull_request_review_id": 2762799330,
      "id": 2041165264,
      "node_id": "PRRC_kwDOABII5855qbXQ",
      "diff_hunk": "@@ -996,11 +997,12 @@ bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\n     block.SetNull();\n \n     // Open history file to read\n-    AutoFile filein{OpenBlockFile(pos, /*fReadOnly=*/true)};\n-    if (filein.IsNull()) {\n+    AutoFile file{OpenBlockFile(pos, /*fReadOnly=*/true)};\n+    if (file.IsNull()) {\n         LogError(\"OpenBlockFile failed for %s while reading block\", pos.ToString());\n         return false;\n     }\n+    BufferedReader filein{std::move(file)};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "824d03c592b78cbc2abf2f03116467651f9388f6",
      "in_reply_to_id": 2039070318,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This will use slightly more memory this way, but I love the idea (I can also measure a 0.4% speedup - not that it matters), let's see what @ryanofsky thinks (he recommended smaller buffers)",
      "created_at": "2025-04-13T16:57:30Z",
      "updated_at": "2025-04-13T16:57:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2041165264",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041165264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": 999,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1005,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041165280",
      "pull_request_review_id": 2762799352,
      "id": 2041165280,
      "node_id": "PRRC_kwDOABII5855qbXg",
      "diff_hunk": "@@ -465,6 +465,9 @@ class AutoFile\n         ::Unserialize(*this, obj);\n         return *this;\n     }\n+\n+    //! Write a mutable buffer more efficiently than write(), obfuscating the buffer in-place.\n+    void write_buffer(std::span<std::byte> src);",
      "path": "src/streams.h",
      "position": null,
      "original_position": 6,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "afc72bbe27f3b682fc45f949bfeb538233dbffa5",
      "in_reply_to_id": 2039156638,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Moved it before `read`, let me know if this is better.",
      "created_at": "2025-04-13T16:57:34Z",
      "updated_at": "2025-04-13T16:57:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2041165280",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041165280"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 470,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041219086",
      "pull_request_review_id": 2762850471,
      "id": 2041219086,
      "node_id": "PRRC_kwDOABII5855qogO",
      "diff_hunk": "@@ -75,10 +75,10 @@ static const unsigned int UNDOFILE_CHUNK_SIZE = 0x100000; // 1 MiB\n static const unsigned int MAX_BLOCKFILE_SIZE = 0x8000000; // 128 MiB\n \n /** Size of header written by WriteBlock before a serialized CBlock (8 bytes) */\n-static constexpr size_t BLOCK_SERIALIZATION_HEADER_SIZE{std::tuple_size_v<MessageStartChars> + sizeof(unsigned int)};\n+static constexpr size_t BLOCK_HEADER_BYTES{std::tuple_size_v<MessageStartChars> + sizeof(unsigned int)};",
      "path": "src/node/blockstorage.h",
      "position": null,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "3c4c6e8edc0fb4918838cb66811b423096db635b",
      "in_reply_to_id": 2036734899,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Renamed to `_BYTES` suffix",
      "created_at": "2025-04-13T21:45:11Z",
      "updated_at": "2025-04-13T21:45:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2041219086",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041219086"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041219444",
      "pull_request_review_id": 2762850801,
      "id": 2041219444,
      "node_id": "PRRC_kwDOABII5855qol0",
      "diff_hunk": "@@ -614,4 +619,86 @@ class BufferedFile\n     }\n };\n \n+/**\n+ * Wrapper that buffers reads from an underlying stream.\n+ * Requires underlying stream to support read() and detail_fread() calls\n+ * to support fixed-size and variable-sized reads, respectively.\n+ */\n+template <typename S>\n+class BufferedReader\n+{\n+    S& m_src;\n+    BufferData m_buf;\n+    size_t m_buf_pos;\n+\n+public:\n+    explicit BufferedReader(S&& stream, size_t size = 1 << 16)",
      "path": "src/streams.h",
      "position": null,
      "original_position": 40,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "652b4e3de5c5e09fb812abe265f4a8946fa96b54",
      "in_reply_to_id": 2026453700,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Reworded, thanks. Let me know what values you're getting if you try out different buffer sizes.",
      "created_at": "2025-04-13T21:47:21Z",
      "updated_at": "2025-04-13T21:47:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2041219444",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041219444"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 636,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041710554",
      "pull_request_review_id": 2763623922,
      "id": 2041710554,
      "node_id": "PRRC_kwDOABII5855sgfa",
      "diff_hunk": "@@ -1036,15 +1036,12 @@ bool BlockManager::ReadBlock(CBlock& block, const CBlockIndex& index) const\n \n bool BlockManager::ReadRawBlock(std::vector<uint8_t>& block, const FlatFilePos& pos) const\n {\n-    FlatFilePos hpos = pos;\n-    // If nPos is less than 8 the pos is null and we don't have the block data",
      "path": "src/node/blockstorage.cpp",
      "position": 157,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "2a798b5f478d54f3f2333fd282e5e238148842e4",
      "in_reply_to_id": 2036772943,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think the new wording is right. `pos.IsNull()` does not hit when nPos=0.\r\n\r\nTo quote myself:\r\n\r\n> My guess is that \"pos is null\" refers to the fact that `pos.IsNull()` (equal to a default constructed) -> *or* <- that `nFile` and `nPos` were set to `0` (after pruning).\r\n\r\n",
      "created_at": "2025-04-14T08:56:55Z",
      "updated_at": "2025-04-14T08:56:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2041710554",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041710554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1035,
      "original_line": 1035,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041723831",
      "pull_request_review_id": 2763646417,
      "id": 2041723831,
      "node_id": "PRRC_kwDOABII5855sju3",
      "diff_hunk": "@@ -523,7 +528,7 @@ class BufferedFile\n     }\n \n public:\n-    BufferedFile(AutoFile& file, uint64_t nBufSize, uint64_t nRewindIn)\n+    BufferedFile(AutoFile& file LIFETIMEBOUND, uint64_t nBufSize, uint64_t nRewindIn)",
      "path": "src/streams.h",
      "position": 33,
      "original_position": 28,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "afc72bbe27f3b682fc45f949bfeb538233dbffa5",
      "in_reply_to_id": 2038942887,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems fine, but the commit history now looks odd. You are adding, removing, and then re-adding it.\r\n\r\n(Personally, I run `git range-diff` on every push I do, or at least once I am done with pushes to a pull request. This ensures that all pushes ended up being correct)",
      "created_at": "2025-04-14T09:04:58Z",
      "updated_at": "2025-04-14T09:04:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2041723831",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041723831"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 531,
      "original_line": 531,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041730416",
      "pull_request_review_id": 2763657436,
      "id": 2041730416,
      "node_id": "PRRC_kwDOABII5855slVw",
      "diff_hunk": "@@ -996,11 +997,12 @@ bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\n     block.SetNull();\n \n     // Open history file to read\n-    AutoFile filein{OpenBlockFile(pos, /*fReadOnly=*/true)};\n-    if (filein.IsNull()) {\n+    AutoFile file{OpenBlockFile(pos, /*fReadOnly=*/true)};\n+    if (file.IsNull()) {\n         LogError(\"OpenBlockFile failed for %s while reading block\", pos.ToString());\n         return false;\n     }\n+    BufferedReader filein{std::move(file)};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "824d03c592b78cbc2abf2f03116467651f9388f6",
      "in_reply_to_id": 2039070318,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> This will use slightly more memory this way\r\n\r\nYes. Though, the commit message seems to indicate the opposite?\r\n\r\n> Delegating `ReadBlock` to `ReadRawBlock` avoids the buffer overhead ...",
      "created_at": "2025-04-14T09:09:03Z",
      "updated_at": "2025-04-14T09:09:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2041730416",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041730416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": 999,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1005,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041823348",
      "pull_request_review_id": 2763811522,
      "id": 2041823348,
      "node_id": "PRRC_kwDOABII5855s8B0",
      "diff_hunk": "@@ -1036,15 +1036,12 @@ bool BlockManager::ReadBlock(CBlock& block, const CBlockIndex& index) const\n \n bool BlockManager::ReadRawBlock(std::vector<uint8_t>& block, const FlatFilePos& pos) const\n {\n-    FlatFilePos hpos = pos;\n-    // If nPos is less than 8 the pos is null and we don't have the block data",
      "path": "src/node/blockstorage.cpp",
      "position": 157,
      "original_position": 5,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "2a798b5f478d54f3f2333fd282e5e238148842e4",
      "in_reply_to_id": 2036772943,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Updated it again, let me know if this clarifies it now:\r\n```C++\r\n// If `nPos` is less than `STORAGE_HEADER_BYTES`, we can't read the header that precedes the block data\r\n// This would cause an unsigned integer underflow when trying to position the file cursor\r\n// This can happen after pruning or default constructed positions\r\nLogError(\"Failed for %s while reading raw block storage header\", pos.ToString());\r\n```",
      "created_at": "2025-04-14T09:58:48Z",
      "updated_at": "2025-04-14T09:58:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2041823348",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041823348"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1035,
      "original_line": 1035,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041845898",
      "pull_request_review_id": 2763850803,
      "id": 2041845898,
      "node_id": "PRRC_kwDOABII5855tBiK",
      "diff_hunk": "@@ -523,7 +528,7 @@ class BufferedFile\n     }\n \n public:\n-    BufferedFile(AutoFile& file, uint64_t nBufSize, uint64_t nRewindIn)\n+    BufferedFile(AutoFile& file LIFETIMEBOUND, uint64_t nBufSize, uint64_t nRewindIn)",
      "path": "src/streams.h",
      "position": 33,
      "original_position": 28,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "afc72bbe27f3b682fc45f949bfeb538233dbffa5",
      "in_reply_to_id": 2038942887,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "yeah, hasty rebase mistake, fixed, thanks for your patience",
      "created_at": "2025-04-14T10:13:53Z",
      "updated_at": "2025-04-14T10:13:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2041845898",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041845898"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 531,
      "original_line": 531,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041848060",
      "pull_request_review_id": 2763854306,
      "id": 2041848060,
      "node_id": "PRRC_kwDOABII5855tCD8",
      "diff_hunk": "@@ -996,11 +997,12 @@ bool BlockManager::ReadBlock(CBlock& block, const FlatFilePos& pos) const\n     block.SetNull();\n \n     // Open history file to read\n-    AutoFile filein{OpenBlockFile(pos, /*fReadOnly=*/true)};\n-    if (filein.IsNull()) {\n+    AutoFile file{OpenBlockFile(pos, /*fReadOnly=*/true)};\n+    if (file.IsNull()) {\n         LogError(\"OpenBlockFile failed for %s while reading block\", pos.ToString());\n         return false;\n     }\n+    BufferedReader filein{std::move(file)};",
      "path": "src/node/blockstorage.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "8d801e3efbf1e3b1f9a0060b777788f271cb21c9",
      "original_commit_id": "824d03c592b78cbc2abf2f03116467651f9388f6",
      "in_reply_to_id": 2039070318,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I meant the speed and complexity overhead - rephrased for clarity, thanks for the feedback.",
      "created_at": "2025-04-14T10:15:23Z",
      "updated_at": "2025-04-14T10:15:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31551#discussion_r2041848060",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2041848060"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31551"
        }
      },
      "start_line": null,
      "original_start_line": 999,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1005,
      "side": "RIGHT"
    }
  ]
}