{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159",
    "id": 2425426988,
    "node_id": "PR_kwDOABII586QkRQs",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32159",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32159.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32159.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/4c531782569b42fc47478a468f4a79e0e2d93946",
    "number": 32159,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "net, pcp: handle multi-part responses and filter for default route while querying default gateway",
    "user": {
      "login": "willcl-ark",
      "id": 6606587,
      "node_id": "MDQ6VXNlcjY2MDY1ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willcl-ark",
      "html_url": "https://github.com/willcl-ark",
      "followers_url": "https://api.github.com/users/willcl-ark/followers",
      "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
      "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
      "repos_url": "https://api.github.com/users/willcl-ark/repos",
      "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "...for default route in pcp pinholing.\r\n\r\nCurrently we only make a single recv call, which trucates results from large routing tables, or in the case the kernel may split the message into multiple responses (which may happen with `NLM_F_DUMP`).\r\n\r\nWe also do not filter on the default route. For IPv6, this led to selecting the first route with an `RTA_GATEWAY` attribute, often a non-default route instead of the actual default. This caused PCP port mapping failures because the wrong gateway was used.\r\n\r\nFix both issues by adding multi-part handling of responses and filter for the default route.\r\n\r\nLimit responses to ~ 1MB to prevent any router-based DoS.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/72",
      "html_url": "https://github.com/bitcoin/bitcoin/milestone/72",
      "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones/72/labels",
      "id": 12172984,
      "node_id": "MI_kwDOABII584Aub64",
      "number": 72,
      "state": "open",
      "title": "30.0",
      "description": "",
      "creator": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "open_issues": 9,
      "closed_issues": 71,
      "created_at": "2025-01-15T19:21:36Z",
      "updated_at": "2025-09-01T15:10:47Z"
    },
    "created_at": "2025-03-28T14:11:46Z",
    "updated_at": "2025-09-01T21:41:55Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "20c95cf471eb9fefeb26fcff92f26923e2b17821",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "willcl-ark:pcp-default-multipart",
      "ref": "pcp-default-multipart",
      "sha": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 164122552,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNjQxMjI1NTI=",
        "name": "bitcoin",
        "full_name": "willcl-ark/bitcoin",
        "owner": {
          "login": "willcl-ark",
          "id": 6606587,
          "node_id": "MDQ6VXNlcjY2MDY1ODc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/willcl-ark",
          "html_url": "https://github.com/willcl-ark",
          "followers_url": "https://api.github.com/users/willcl-ark/followers",
          "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
          "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
          "repos_url": "https://api.github.com/users/willcl-ark/repos",
          "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/willcl-ark/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/willcl-ark/bitcoin",
        "archive_url": "https://api.github.com/repos/willcl-ark/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/willcl-ark/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/willcl-ark/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/willcl-ark/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/willcl-ark/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/willcl-ark/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/willcl-ark/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/willcl-ark/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/willcl-ark/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/willcl-ark/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/willcl-ark/bitcoin/events",
        "forks_url": "https://api.github.com/repos/willcl-ark/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/willcl-ark/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/willcl-ark/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/willcl-ark/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/willcl-ark/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/willcl-ark/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/willcl-ark/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/willcl-ark/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/willcl-ark/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/willcl-ark/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/willcl-ark/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/willcl-ark/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/willcl-ark/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:willcl-ark/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/willcl-ark/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/willcl-ark/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/willcl-ark/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/willcl-ark/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/willcl-ark/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/willcl-ark/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/willcl-ark/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/willcl-ark/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/willcl-ark/bitcoin/hooks",
        "svn_url": "https://github.com/willcl-ark/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 288259,
        "default_branch": "master",
        "open_issues_count": 12,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-01T15:22:43Z",
        "created_at": "2019-01-04T15:17:29Z",
        "updated_at": "2025-08-15T15:40:56Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "cfa7f70f6c99680851ab0c0df27baf9f7508747b",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37694,
        "stargazers_count": 85306,
        "watchers_count": 85306,
        "size": 291764,
        "default_branch": "master",
        "open_issues_count": 758,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-28T23:10:55Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-09-01T20:19:58Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 71,
    "deletions": 31,
    "changed_files": 1,
    "commits": 3,
    "review_comments": 21,
    "comments": 13
  },
  "events": [
    {
      "event": "commented",
      "id": 2761485159,
      "node_id": "IC_kwDOABII586kmOtn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2761485159",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T14:11:49Z",
      "updated_at": "2025-09-01T12:35:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32159.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [achow101](https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-3198425748), [davidgumberg](https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-3235124766), [Sjors](https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-3242198039) |\n| Concept ACK | [laanwj](https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-2761607177) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-2761485159",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159"
    },
    {
      "event": "commented",
      "id": 2761490048,
      "node_id": "IC_kwDOABII586kmP6A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2761490048",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T14:13:47Z",
      "updated_at": "2025-03-28T14:13:47Z",
      "author_association": "MEMBER",
      "body": "cc @laanwj\r\n\r\nThis patch maintains the FreeBSD-style querying/filtering we have currently, but but increases the size of the response processed to a maximum of 1MB.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-2761490048",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159"
    },
    {
      "event": "mentioned",
      "id": 17033361094,
      "node_id": "MEE_lADOABII586wNXaAzwAAAAP3RHbG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17033361094",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T14:13:48Z"
    },
    {
      "event": "subscribed",
      "id": 17033361115,
      "node_id": "SE_lADOABII586wNXaAzwAAAAP3RHbb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17033361115",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T14:13:48Z"
    },
    {
      "event": "labeled",
      "id": 17033990107,
      "node_id": "LE_lADOABII586wNXaAzwAAAAP3Tg_b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17033990107",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T14:53:26Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "renamed",
      "id": 17034021122,
      "node_id": "RTE_lADOABII586wNXaAzwAAAAP3TokC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17034021122",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T14:55:34Z",
      "rename": {
        "from": "net, pcp: handle multi-part responses and filter...",
        "to": "net, pcp: handle multi-part responses and filter for default route while querying default gateway"
      }
    },
    {
      "event": "commented",
      "id": 2761607177,
      "node_id": "IC_kwDOABII586kmsgJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2761607177",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T14:55:46Z",
      "updated_at": "2025-04-01T05:15:25Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\n~~Adding 29.0 milestone,~~ doesn't need to block the release but it would be nice to backport it.\r\n\r\nEdit: removed, the milestone, i still think it'd be nice to have in next 29.x release, but it turns out more complicated and riskier than expected, better to have no immediate time pressure",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-2761607177",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159"
    },
    {
      "event": "milestoned",
      "id": 17034195989,
      "node_id": "MIE_lADOABII586wNXaAzwAAAAP3UTQV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17034195989",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T15:07:01Z",
      "milestone": {
        "title": "29.0"
      }
    },
    {
      "event": "review_requested",
      "id": 17034254171,
      "node_id": "RRE_lADOABII586wNXaAzwAAAAP3Uhdb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17034254171",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T15:10:50Z",
      "requested_reviewer": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 17034264888,
      "node_id": "RRE_lADOABII586wNXaAzwAAAAP3UkE4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17034264888",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T15:11:35Z",
      "requested_reviewer": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2725911811,
      "node_id": "PRR_kwDOABII586ieh0D",
      "url": null,
      "actor": null,
      "commit_id": "c5211f3423477b5799fe6c717d533c232ce1f7e6",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-03-28T15:23:30Z",
      "author_association": "MEMBER",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#pullrequestreview-2725911811",
      "submitted_at": "2025-03-28T15:23:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17052773549,
      "node_id": "HRFPE_lADOABII586wNXaAzwAAAAP4bKyt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17052773549",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6c694c212f8d898dac9cc1c5637381452c91e79b",
      "commit_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits/6c694c212f8d898dac9cc1c5637381452c91e79b",
      "created_at": "2025-03-31T08:04:49Z"
    },
    {
      "event": "reviewed",
      "id": 2729086589,
      "node_id": "PRR_kwDOABII586iqo59",
      "url": null,
      "actor": null,
      "commit_id": "6c694c212f8d898dac9cc1c5637381452c91e79b",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-03-31T12:38:48Z",
      "author_association": "MEMBER",
      "body": "Although the code this PR touches isn't compiled on macOS, I did briefly check that things still work there. I also briefly tested on Ubuntu 24.10.\r\n\r\nLeft some inline question to wrap my head around the changes and refresh my memory of the original...",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#pullrequestreview-2729086589",
      "submitted_at": "2025-03-31T12:38:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
    },
    {
      "event": "labeled",
      "id": 17067846491,
      "node_id": "LE_lADOABII586wNXaAzwAAAAP5Uqtb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17067846491",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T04:56:50Z",
      "label": {
        "name": "Needs backport (29.x)",
        "color": "dd7200"
      }
    },
    {
      "event": "demilestoned",
      "id": 17067847118,
      "node_id": "DEME_lADOABII586wNXaAzwAAAAP5Uq3O",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17067847118",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T04:56:55Z",
      "milestone": {
        "title": "29.0"
      }
    },
    {
      "event": "commented",
      "id": 2768744549,
      "node_id": "IC_kwDOABII586lB7Bl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2768744549",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T09:26:24Z",
      "updated_at": "2025-04-01T09:26:24Z",
      "author_association": "MEMBER",
      "body": "Thanks for the review @Sjors & @laanwj.\r\n\r\nGoing to move to draft while I re-work it a little.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-2768744549",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159"
    },
    {
      "event": "mentioned",
      "id": 17071894219,
      "node_id": "MEE_lADOABII586wNXaAzwAAAAP5kG7L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17071894219",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T09:26:26Z"
    },
    {
      "event": "subscribed",
      "id": 17071894243,
      "node_id": "SE_lADOABII586wNXaAzwAAAAP5kG7j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17071894243",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T09:26:26Z"
    },
    {
      "event": "mentioned",
      "id": 17071894269,
      "node_id": "MEE_lADOABII586wNXaAzwAAAAP5kG79",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17071894269",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T09:26:26Z"
    },
    {
      "event": "subscribed",
      "id": 17071894299,
      "node_id": "SE_lADOABII586wNXaAzwAAAAP5kG8b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17071894299",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T09:26:26Z"
    },
    {
      "event": "convert_to_draft",
      "id": 17071894514,
      "node_id": "CTDE_lADOABII586wNXaAzwAAAAP5kG_y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17071894514",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T09:26:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17076627149,
      "node_id": "HRFPE_lADOABII586wNXaAzwAAAAP52KbN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17076627149",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "92343a6691bf554bdb35e758005e125dcacf0ba2",
      "commit_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits/92343a6691bf554bdb35e758005e125dcacf0ba2",
      "created_at": "2025-04-01T14:27:01Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU3Y2U2NDVmMDVkMThkOGFkMTA3MTFjMzQ3YTU5ODkwNzZmMWY3ODg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57ce645f05d18d8ad10711c347a5989076f1f788",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/57ce645f05d18d8ad10711c347a5989076f1f788",
      "tree": {
        "sha": "6b956b720cbc988154169db4e0dc9f53c5436d3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b956b720cbc988154169db4e0dc9f53c5436d3e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 6b956b720cbc988154169db4e0dc9f53c5436d3e\nparent 74d9598bfbc24c3b7bfe1dad5bf9d988381bf893\nauthor willcl-ark <will@256k1.dev> 1743583616 +0100\ncommitter willcl-ark <will@256k1.dev> 1743583616 +0100\n\nnet: filter for default routes in netlink responses\n\nFilter netlink responses to only consider default routes by checking the\ndestination prefix length (rtm_dst_len == 0).\n\nPreviously, we selected the first route with an RTA_GATEWAY attribute,\nwhich for IPv6 often resulted in choosing a non-default route instead of\nthe actual default.\n\nThis caused occasional PCP port mapping failures because a gateway for a\nnon-default route was selected.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmfs+Y0ACgkQzm7EmUXB\nfqYL0RAAiaRMyotgpJM5dA29sehFB7ahDEgj8WTSei9ZHLHY/QDZqamifRxw5Sfr\neIhX+LSCa+xtsme/GBRgnenpgOJ90DhcN+Yx9rPBl+8t3j8gC3BfQW/aD65Zc+87\nxZLySlLQUdv7lss5iKgV4riVqniB/6DDvyO89qxYyYIcqJ60+XmCad3xI+1pRH7Y\nAFmUsRj/3ZSVim0ylb0tm8H7iQRwwoQ+rVy6/Y0ayuSovd0nebVCLsWkHeGIiRgC\nFYWhYkwk0B/mEC5UWCm7z0UXaKO6Qff8QZaK0vNsLSgpa9pzqVHHlFyucpFLsX6G\nyPoI9vDUevSJR8vPUstXmOvCNMW80gleRxI7a11agfKxy+TUq5gpByDSGqfhsDt1\nV0LzWrqa1U1w8qsydxXD7cBKumZhszT6mN1GL0r3P4xcbYQ+Lyr+dbtF/bAbK0Fn\np3znEoIuYrFfG7fnwd0IiBLqOAqBkMuGgHcT9/4jP4QNclI8wW1FSyFMe4rf60dn\nXtJZEmkrW5b6/IWcMnviBUwVges/ItLzxx2H9/SYAlw4vVSqFMOkWmyOcoXh+Iac\nS+iKRILfqIto82z0ruzkJDie5vlmkacSXRMintw2mjH7KP0bi4jR09H+gbrjTZrd\n0+kY6jaARX70lblQOxHtG27RcuofnIjqA4tTaFcDE0m9x2GBoF8=\n=TjP3\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74d9598bfbc24c3b7bfe1dad5bf9d988381bf893",
          "sha": "74d9598bfbc24c3b7bfe1dad5bf9d988381bf893",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/74d9598bfbc24c3b7bfe1dad5bf9d988381bf893"
        }
      ],
      "message": "net: filter for default routes in netlink responses\n\nFilter netlink responses to only consider default routes by checking the\ndestination prefix length (rtm_dst_len == 0).\n\nPreviously, we selected the first route with an RTA_GATEWAY attribute,\nwhich for IPv6 often resulted in choosing a non-default route instead of\nthe actual default.\n\nThis caused occasional PCP port mapping failures because a gateway for a\nnon-default route was selected.",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2025-04-02T08:46:56Z"
      },
      "author": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2025-04-02T08:46:56Z"
      },
      "sha": "57ce645f05d18d8ad10711c347a5989076f1f788"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQyZTk5YWQ3NzM5NmU0ZTliMDJkNjdkYWY0NjM0OWUyMTVlOTlhMGY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42e99ad77396e4e9b02d67daf46349e215e99a0f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/42e99ad77396e4e9b02d67daf46349e215e99a0f",
      "tree": {
        "sha": "fa89515f31b29cd06e7c46cac78627309b5957f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa89515f31b29cd06e7c46cac78627309b5957f7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree fa89515f31b29cd06e7c46cac78627309b5957f7\nparent 57ce645f05d18d8ad10711c347a5989076f1f788\nauthor willcl-ark <will@256k1.dev> 1743583647 +0100\ncommitter willcl-ark <will@256k1.dev> 1743583647 +0100\n\nnet: skip non-route netlink responses\n\nThis shouldn't usually be hit, but is a good belt-and-braces.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmfs+dUACgkQzm7EmUXB\nfqZVdhAAgvhCZKsM7XEIzhjHjkM9rZeAZ7yfSRaMk0XHKUvh+mknF43gB0rmoN4y\nW3wwDdNOoHUWVf4MMqoa+KbY20oW0l849qiVEm06Ko0X3pyy1G6sXufrN0hrYuNM\nhknPWXWY7VCcsFzQXuH40JfMbnX3i7VLz9GW6Ja0R/BHVuqP9RGX0YYdeOrJ1OmR\nSd/xcDTBRwPKCPMGyPQeDyrwarg7l6gvRSIKRSxVkZZCwqvFQ3LPbAjs/ORVTifN\n9fl10GsgUYViypMvLYaUEa7CUc0Gw3fNaiKYQq9AYu2twes0wzTiHusWHEiYdrP3\nIG29goXg+e90q2gHTcJgrnPqO6KgrhC7CopNtZ+3Jd4txC21WPUbnXl/DWahh0kW\n3yLLsvGL+xWFzOS8ZyFdFyt41LgFM2RZskQya1lwoaa77UXVaGhPvFNJ3MKgk+vq\nmaIZ5+qyPjSQ6rTJc5KABBel+wbBLqBNmm26+oZeFDD8RUPN3osEyQtKAZ+X6yXR\nVlx7ByfmwA416FBvgDK9snZ2oBlZZpKOgDJv1Yxg18NQpzcdQpD+Bqok5SDuifBm\nDYZtN3w2j9xsw7bOeWSTQ7prBS3uQPvr30KyRelcHh7zqFzX8Nen1rgQQ1tVEdhc\n94pjPT447eL/6tJTdSJQJb492xLnUrFRScO2LMC0KbQNbUCw0Cg=\n=Eokv\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57ce645f05d18d8ad10711c347a5989076f1f788",
          "sha": "57ce645f05d18d8ad10711c347a5989076f1f788",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/57ce645f05d18d8ad10711c347a5989076f1f788"
        }
      ],
      "message": "net: skip non-route netlink responses\n\nThis shouldn't usually be hit, but is a good belt-and-braces.",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2025-04-02T08:47:27Z"
      },
      "author": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2025-04-02T08:47:27Z"
      },
      "sha": "42e99ad77396e4e9b02d67daf46349e215e99a0f"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17091612872,
      "node_id": "HRFPE_lADOABII586wNXaAzwAAAAP6vVDI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17091612872",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d8788533710a64646e19b2dfca68070d2b93aecf",
      "commit_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits/d8788533710a64646e19b2dfca68070d2b93aecf",
      "created_at": "2025-04-02T10:47:05Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRjNTMxNzgyNTY5YjQyZmM0NzQ3OGE0NjhmNGE3OWUwZTJkOTM5NDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c531782569b42fc47478a468f4a79e0e2d93946",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4c531782569b42fc47478a468f4a79e0e2d93946",
      "tree": {
        "sha": "f701cb9872bf836eca06db2d9c17bc53e5917dc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f701cb9872bf836eca06db2d9c17bc53e5917dc2"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f701cb9872bf836eca06db2d9c17bc53e5917dc2\nparent 42e99ad77396e4e9b02d67daf46349e215e99a0f\nauthor willcl-ark <will@256k1.dev> 1743513350 +0100\ncommitter willcl-ark <will@256k1.dev> 1743591661 +0100\n\nnet: handle multi-part netlink responses\n\nHandle multi-part netlink responses to prevent truncated results from\nlarge routing tables.\n\nPreviously, we only made a single recv call, which led to incomplete\nresults when the kernel split the message into multiple responses (which\nhappens frequently with NLM_F_DUMP).\n\nAlso guard against a potential hanging issue where the code would\nindefinitely wait for NLMSG_DONE for non-multi-part responses by\ndetecting the NLM_F_MULTI flag and only continue waiting when necessary.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEoAg2YPI1onAAzTyBzm7EmUXBfqYFAmftGO0ACgkQzm7EmUXB\nfqZDoQ//W1HpMMl3xMZvl/FiYTuG+Fhf4d2HDgosvUncZVN9DgLBcb+uoKyDiZx/\n9mOWjv5FeVLpwnyIkW/lrdISbYe0wo6uwsX3nDL4nb6PiwJgdSK8ytoDFrrO8r4N\nuY4g5l7VmdcVOy2KjIdWCtpkddfq9AxoSygJadKWu1IQMZfeyZ/oO4fBu//+x9Gz\nUA5Yw1bsQARwN14OxkyzMEHnXvCVdN6WQWsWkTe6D6kY9GngHbRiMKgPswWGrwD2\npCcj5+EyI3siNSlpTvgGqElpP46vlGFxfsJ2KI7Lzvxy8dbZoqg/otaKZFI4yIjJ\nyWQLCzmwsunK2VR/RxpxubBcga3RbK5LFrLlqipny4ENi0vRDDaU31vUgImiwQI9\nTgwJjaAx8i0uN0DZgdsItPiochhnFvIj/888cRiCJUGrp8iX9Oyukef0W4G88ro3\nu9aQGBV2N74+TQGVLGGB491QenIluzlt+tTDqsar46/uvbG4D08aJfdEqAkxe7cp\nZ8dpFi3W8gqNfXtwJgzy5aQp4iFCN0aDd3AHw/IomOwteqRGk7gbmCc7WCQUUUf4\nQ72JK3JMWyK9JxW6lDYgspxlGwJxvdMGpRUWE0ersa91sd0u+ycr7/JbFKU6tn6W\nIUDRV+A1pAW08Rk0iCGsdHaVOQEkCWyRrMdHzTjiqV0fUA1jQvY=\n=LhMC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42e99ad77396e4e9b02d67daf46349e215e99a0f",
          "sha": "42e99ad77396e4e9b02d67daf46349e215e99a0f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/42e99ad77396e4e9b02d67daf46349e215e99a0f"
        }
      ],
      "message": "net: handle multi-part netlink responses\n\nHandle multi-part netlink responses to prevent truncated results from\nlarge routing tables.\n\nPreviously, we only made a single recv call, which led to incomplete\nresults when the kernel split the message into multiple responses (which\nhappens frequently with NLM_F_DUMP).\n\nAlso guard against a potential hanging issue where the code would\nindefinitely wait for NLMSG_DONE for non-multi-part responses by\ndetecting the NLM_F_MULTI flag and only continue waiting when necessary.",
      "committer": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2025-04-02T11:01:01Z"
      },
      "author": {
        "name": "willcl-ark",
        "email": "will@256k1.dev",
        "date": "2025-04-01T13:15:50Z"
      },
      "sha": "4c531782569b42fc47478a468f4a79e0e2d93946"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17091886553,
      "node_id": "HRFPE_lADOABII586wNXaAzwAAAAP6wX3Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17091886553",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "commit_url": "https://api.github.com/repos/willcl-ark/bitcoin/commits/4c531782569b42fc47478a468f4a79e0e2d93946",
      "created_at": "2025-04-02T11:05:28Z"
    },
    {
      "event": "labeled",
      "id": 17091893532,
      "node_id": "LE_lADOABII586wNXaAzwAAAAP6wZkc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17091893532",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T11:05:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2772215136,
      "node_id": "IC_kwDOABII586lPKVg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2772215136",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T11:05:56Z",
      "updated_at": "2025-04-02T11:05:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/39838257320</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-2772215136",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159"
    },
    {
      "event": "unlabeled",
      "id": 17093445280,
      "node_id": "UNLE_lADOABII586wNXaAzwAAAAP62Uag",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17093445280",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T12:52:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2772648271,
      "node_id": "IC_kwDOABII586lQ0FP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2772648271",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T13:56:15Z",
      "updated_at": "2025-04-02T13:56:15Z",
      "author_association": "MEMBER",
      "body": "After (additional) further investigation I gained some new insights:\r\n\r\n- This is _not_ a regression from migration from `libnatpmp` as I first thought.\r\n- The extent to which `tailscale` interferes with the routing is more significant than I realised:\r\n  Even if we find the correct  gateway (by handling multi-part messages and filtering properly), the _route_ to the gateway still doesn't return the data we want, specifically the correct interface.\r\n  This causes us to make an invalid request, which gets rejected.\r\n\r\n  This is also observed using the `ip` command:\r\n  ```bash\r\n  $ ip route show\r\n  default via 10.0.0.1 dev wlo1 proto dhcp src 10.0.12.100 metric 600\r\n  10.0.0.0/20 dev wlo1 proto kernel scope link src 10.0.12.100 metric 600\r\n  172.17.0.0/16 dev docker0 proto kernel scope link src 172.17.0.1\r\n  192.168.122.0/24 dev virbr0 proto kernel scope link src 192.168.122.1 linkdown\r\n\r\n  will@ubuntu in …/src/core/bitcoin on  pcp-default-multipart [$?⇕] : C v19.1.7-clang via △ v3.31.6 : 🐍 (core)\r\n  $ ip route get 10.0.0.1\r\n  10.0.0.1 dev tailscale0 table 52 src 100.89.20.73 uid 1000\r\n      cache\r\n  ```\r\n\r\n  Handling this would be quite invasive, require tracking the interface, and I don't think it's in scope for us.\r\n\r\nTherefore I have re-worked and split the remaining changes and into 3 commits:\r\n\r\n1. Filter for the default route in the response. With this change ipv6 pinholing works even with `tailscale up`, which is quite nice.\r\n2. Skip non `NEWROUTE` messages. Although `NLMSG_DONE` is already handled, this is a slight optimisation in protecting against unexpected responses being parsed.\r\n3. Handle single and multi-part messages. Track if `NLM_F_MULTI` was set and if so wait for `NLMSG_DONE`, otherwise break after the first response, assuming a single-part response.\r\n\r\nI think these are all worthwhile, but I could seean argument that what we currently have works \"well enough\" for the most basic use-case; a simple (single) routing table. And we could just consider anything else out-of-scope in this project.\r\n\r\n@Sjors: Ref your comments, the socket is set as `nonblocking` already via the implementation in `CreateSockOS` in https://github.com/bitcoin/bitcoin/blob/74d9598bfbc24c3b7bfe1dad5bf9d988381bf893/src/netbase.cpp#L536-L540 I did [try a commit](https://github.com/bitcoin/bitcoin/commit/2f0b8d61b63edcaa1a9ac06b7e02cd3ea6e1e554) to add a backoff timer and retry mechanism to this for extra safety, but pretty sure it's not worth the added complexity.\r\n",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-2772648271",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159"
    },
    {
      "event": "mentioned",
      "id": 17094549842,
      "node_id": "MEE_lADOABII586wNXaAzwAAAAP66iFS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17094549842",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T13:56:16Z"
    },
    {
      "event": "subscribed",
      "id": 17094549860,
      "node_id": "SE_lADOABII586wNXaAzwAAAAP66iFk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17094549860",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T13:56:16Z"
    },
    {
      "event": "ready_for_review",
      "id": 17094550331,
      "node_id": "RFRE_lADOABII586wNXaAzwAAAAP66iM7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17094550331",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T13:56:18Z"
    },
    {
      "event": "labeled",
      "id": 17448216590,
      "node_id": "LE_lADOABII586wNXaAzwAAAAQP_qgO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17448216590",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-29T05:47:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 17499405965,
      "node_id": "UNLE_lADOABII586wNXaAzwAAAAQTC76N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17499405965",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-02T12:33:28Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2863507309,
      "node_id": "IC_kwDOABII586qradt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2863507309",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-08T15:39:56Z",
      "updated_at": "2025-05-08T15:39:56Z",
      "author_association": "MEMBER",
      "body": "@laanwj you might be interested in circling back here to review?",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-2863507309",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159"
    },
    {
      "event": "mentioned",
      "id": 17576339430,
      "node_id": "MEE_lADOABII586wNXaAzwAAAAQXoafm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17576339430",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-08T15:39:57Z"
    },
    {
      "event": "subscribed",
      "id": 17576339447,
      "node_id": "SE_lADOABII586wNXaAzwAAAAQXoaf3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17576339447",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-08T15:39:57Z"
    },
    {
      "event": "review_requested",
      "id": 17589382769,
      "node_id": "RRE_lADOABII586wNXaAzwAAAAQYaK5x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17589382769",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-09T11:21:33Z",
      "requested_reviewer": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "unlabeled",
      "id": 17636610132,
      "node_id": "UNLE_lADOABII586wNXaAzwAAAAQbOVBU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17636610132",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T14:15:36Z",
      "label": {
        "name": "Needs backport (29.x)",
        "color": "dd7200"
      }
    },
    {
      "event": "commented",
      "id": 2876721714,
      "node_id": "IC_kwDOABII586rd0oy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2876721714",
      "actor": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-13T14:19:39Z",
      "updated_at": "2025-05-13T14:19:39Z",
      "author_association": "MEMBER",
      "body": "> you might be interested in circling back here to review?\r\n\r\nYes, will look into it.\r\n\r\n> This is not a regression from migration from libnatpmp as I first thought.\r\n\r\nRemoved the backport label as this was confirmed not to be a regression (thanks!).",
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-2876721714",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159"
    },
    {
      "event": "milestoned",
      "id": 18682096528,
      "node_id": "MIE_lADOABII586wNXaAzwAAAARZiiuQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18682096528",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-17T14:51:05Z",
      "milestone": {
        "title": "30.0"
      }
    },
    {
      "event": "commented",
      "id": 3084380035,
      "node_id": "IC_kwDOABII58631-eD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3084380035",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-17T14:51:52Z",
      "updated_at": "2025-07-17T14:51:52Z",
      "author_association": "MEMBER",
      "body": "Put this on the `v30.0` milestone.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-3084380035",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159"
    },
    {
      "event": "commented",
      "id": 3198425748,
      "node_id": "IC_kwDOABII586-pBqU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3198425748",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-18T21:08:30Z",
      "updated_at": "2025-08-18T21:08:30Z",
      "author_association": "MEMBER",
      "body": "ACK 4c531782569b42fc47478a468f4a79e0e2d93946\r\n\r\nVerified against iproute2 and strace",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-3198425748",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159"
    },
    {
      "event": "reviewed",
      "id": 3157419482,
      "node_id": "PRR_kwDOABII5868MmXa",
      "url": null,
      "actor": null,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-26T21:52:31Z",
      "author_association": "MEMBER",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#pullrequestreview-3157419482",
      "submitted_at": "2025-08-26T21:52:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
    },
    {
      "event": "reviewed",
      "id": 3165897312,
      "node_id": "PRR_kwDOABII5868s8Jg",
      "url": null,
      "actor": null,
      "commit_id": "57ce645f05d18d8ad10711c347a5989076f1f788",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-28T17:40:23Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#pullrequestreview-3165897312",
      "submitted_at": "2025-08-28T17:40:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
    },
    {
      "event": "reviewed",
      "id": 3166036589,
      "node_id": "PRR_kwDOABII5868teJt",
      "url": null,
      "actor": null,
      "commit_id": "42e99ad77396e4e9b02d67daf46349e215e99a0f",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-28T18:20:56Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#pullrequestreview-3166036589",
      "submitted_at": "2025-08-28T18:20:56Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
    },
    {
      "event": "reviewed",
      "id": 3166673919,
      "node_id": "PRR_kwDOABII5868v5v_",
      "url": null,
      "actor": null,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-28T21:58:23Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#pullrequestreview-3166673919",
      "submitted_at": "2025-08-28T21:58:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
    },
    {
      "event": "reviewed",
      "id": 3166703690,
      "node_id": "PRR_kwDOABII5868wBBK",
      "url": null,
      "actor": null,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-28T22:09:48Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#pullrequestreview-3166703690",
      "submitted_at": "2025-08-28T22:09:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
    },
    {
      "event": "reviewed",
      "id": 3166716648,
      "node_id": "PRR_kwDOABII5868wELo",
      "url": null,
      "actor": null,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-28T22:17:49Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#pullrequestreview-3166716648",
      "submitted_at": "2025-08-28T22:17:49Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
    },
    {
      "event": "commented",
      "id": 3235124766,
      "node_id": "IC_kwDOABII587A1BYe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3235124766",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-28T22:23:17Z",
      "updated_at": "2025-08-28T22:23:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "untested crACK 4c531782569b42fc474\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/32159/commits/57ce645f05d18d8ad10711c347a5989076f1f788 corrects a bug where `QueryDefaultGatewayImpl` would return *not* default gateways.\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/32159/commits/42e99ad77396e4e9b02d67daf46349e215e99a0f adds a belt and suspenders check that we have received a sensible reply to our `GETROUTE` message.\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/32159/commits/4c531782569b42fc47478a468f4a79e0e2d93946 correctly handles multi-part messages, I believe the current implementation would fail e.g. any time the reply to our `GETROUTE` was in excess of [4096 bytes](https://github.com/bitcoin/bitcoin/blob/4c531782569b42fc47478a468f4a79e0e2d93946/src/common/netif.cpp#L89)\r\n\r\nI left a few non-blocking nits, and comments that provide some context that I had to look for when reviewing the changes here.",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-3235124766",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159"
    },
    {
      "event": "commented",
      "id": 3242198039,
      "node_id": "IC_kwDOABII587BQAQX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3242198039",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-01T12:35:51Z",
      "updated_at": "2025-09-01T12:36:48Z",
      "author_association": "MEMBER",
      "body": "utACK 4c531782569b42fc47478a468f4a79e0e2d93946\r\n\r\nI didn't specifically test multipart messages.\r\n\r\nI did test this (rebased) PR with a router running OPNsense 25.7.2 with miniupnpd 2.3.9 using pf backend. \r\n\r\nFrom a macOS 15.6.1 machine and macOS 13.7.8 machine I can see it opens a port and I'm (still) getting inbound connections. This is unsurprising, because the changes here don't impact macOS.\r\n\r\nI also tested on Ubuntu 25.04\r\n\r\n\r\n\r\n",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-3242198039",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159"
    },
    {
      "event": "commented",
      "id": 3243290826,
      "node_id": "IC_kwDOABII587BULDK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3243290826",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-01T21:41:55Z",
      "updated_at": "2025-09-01T21:41:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "Tested but did not dig deep into the code for now. Spent more than a day adding debug code in Bitcoin Core and fighting with my OpenWrt router (https://github.com/openwrt/packages/issues/17871#issuecomment-3243222244). Now that the router has been fully reset without any lingering configs from prior major versions, PCP & NATPMP is actually working.\r\n\r\nOn master (in 7/7 attempts roughly):\r\n```\r\n₿ cmake --build build -j16 --target=bitcoind && ./build/bin/bitcoind -regtest -debug=net\r\n...\r\nBitcoin Core version v29.99.0-74d9598bfbc2 (release build)\r\n[warning] Option '-upnp=true' is given but UPnP support was dropped in version 29.0. Substituting '-natpmp=true'.\r\n...\r\n[net] portmap: gateway [IPv4]: 192.168.1.1\r\n[net] pcp: Requesting port mapping for addr 0.0.0.0 port 18444 from gateway 192.168.1.1\r\n[net] pcp: Internal address after connect: 192.168.1.201\r\nAddLocal([1111:1111::1]:18444,1)\r\nDiscover: 1111:1111::1\r\nBound to 127.0.0.1:18445\r\nBound to [::]:18444\r\nBound to 0.0.0.0:18444\r\nLoaded 0 addresses from \"anchors.dat\"\r\n0 block-relay-only anchors will be tried for connections.\r\ninit message: Starting network threads…\r\nnet thread start\r\ninit message: Done loading\r\nopencon thread start\r\naddcon thread start\r\nmsghand thread start\r\ndnsseed thread start\r\nLoading addresses from DNS seed dummySeed.invalid.\r\n0 addresses found from DNS seeds\r\ndnsseed thread exit\r\n[net] pcp: Received response of 60 bytes: REDACTED...\r\n[net:info] portmap: Added mapping pcp:< REDACTED  >:18450 -> 192.168.1.201:18444 (for 2400s)\r\nAddLocal(< REDACTED  >:18450,3)\r\n[net] portmap: gateway [IPv6]: fe80::REDACTED...\r\n[net] pcp: Requesting port mapping for addr 1111:1111::1 port 18444 from gateway fe80::REDACTED...\r\n[net] pcp: Internal address after connect: 1111:1111::1\r\n[net] pcp: Received response of 60 bytes: REDACTED...\r\n[net:warning] pcp: Mapping failed with result ADDRESS_MISMATCH (code 12)\r\n```\r\nOn the router side:\r\n```\r\n... daemon.err miniupnpd[14402]: PCP: Invalid PCP v2 MAP message.\r\n```\r\nTaking the first commit (57ce645f05d18d8ad10711c347a5989076f1f788) from this PR makes the output towards the end better (my ISP doesn't support IPv6):\r\n```\r\n[net] pcp: Received response of 60 bytes: REDACTED...\r\n[net:info] portmap: Added mapping pcp:< REDACTED  >:18464 -> 192.168.1.201:18444 (for 2400s)\r\nAddLocal(< REDACTED  >:18464,3)\r\n[net] portmap: Could not determine IPv6 default gateway\r\n```\r\nAnd there is no longer any error in the router log.\r\n\r\nSo PCP+IPv4 mostly works regardless of the PR, but at least the failure path for IPv6 is improved by it.\r\n\r\nHaven't really noticed any changes in behavior with my setup from the latter 2 commits.\r\n\r\nMight focus on other things for now as this already has 3 ACKs.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#issuecomment-3243290826",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32159"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018881733",
      "pull_request_review_id": 2725911811,
      "id": 2018881733,
      "node_id": "PRRC_kwDOABII5854VbDF",
      "diff_hunk": "@@ -82,42 +86,64 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         return std::nullopt;\n     }\n \n-    // Receive response.\n+    // Receive response(s)\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    size_t total_bytes_read = 0;\n+    bool done = false;\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            return std::nullopt;\n+        }\n \n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n-            }\n+        total_bytes_read += static_cast<size_t>(recv_result);\n+        if (total_bytes_read > MAX_NETLINK_RESPONSE_SIZE) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Netlink response exceeded size limit (%zu bytes, family=%d)\\n\", MAX_NETLINK_RESPONSE_SIZE, family);\n+            return std::nullopt;\n         }\n \n-        // Found gateway?\n-        if (rta_gateway != nullptr) {\n-            if (family == AF_INET && sizeof(in_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw);\n-            } else if (family == AF_INET6 && sizeof(in6_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in6_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw, scope_id);\n+        for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n+            if (hdr->nlmsg_type == NLMSG_DONE) {",
      "path": "src/common/netif.cpp",
      "position": 74,
      "original_position": 67,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "c5211f3423477b5799fe6c717d533c232ce1f7e6",
      "in_reply_to_id": null,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is it guaranteed that the reponse to `NLM_F_DUMP` is always multipart? Or do we need to check `nlmsg_flags` for `NLM_F_MULTI`, and if not, break after the first packet?\r\n\r\nThis is not clear to me from the documentation:\r\n- https://man7.org/linux/man-pages/man7/netlink.7.html\r\n- https://man7.org/linux/man-pages/man7/rtnetlink.7.html\r\n\r\n",
      "created_at": "2025-03-28T15:23:30Z",
      "updated_at": "2025-03-28T15:23:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2018881733",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018881733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019761455",
      "pull_request_review_id": 2727326176,
      "id": 2019761455,
      "node_id": "PRRC_kwDOABII5854Yx0v",
      "diff_hunk": "@@ -82,42 +86,64 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         return std::nullopt;\n     }\n \n-    // Receive response.\n+    // Receive response(s)\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    size_t total_bytes_read = 0;\n+    bool done = false;\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            return std::nullopt;\n+        }\n \n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n-            }\n+        total_bytes_read += static_cast<size_t>(recv_result);\n+        if (total_bytes_read > MAX_NETLINK_RESPONSE_SIZE) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Netlink response exceeded size limit (%zu bytes, family=%d)\\n\", MAX_NETLINK_RESPONSE_SIZE, family);\n+            return std::nullopt;\n         }\n \n-        // Found gateway?\n-        if (rta_gateway != nullptr) {\n-            if (family == AF_INET && sizeof(in_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw);\n-            } else if (family == AF_INET6 && sizeof(in6_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in6_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw, scope_id);\n+        for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n+            if (hdr->nlmsg_type == NLMSG_DONE) {",
      "path": "src/common/netif.cpp",
      "position": 74,
      "original_position": 67,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "c5211f3423477b5799fe6c717d533c232ce1f7e6",
      "in_reply_to_id": 2018881733,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think it is, but like you am unsure about what the guarantees of the protocol are here.\r\n\r\nI kind of reverse engineered this looking at miniupnpc and netlink sources, along with an `strace` of `ip route show`, which is where the repeated `recv` calls jumped out to me as a difference between our code and other tools.\r\n\r\nThis approach simply relies on receiving an `NLMSG_DONE` to signal the end of the response and break. This should handle both single and multi-part messages. Here's a snipped sample of `strace -e filter=recvmsg ip route show` on my system:\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=NULL, iov_len=0}], msg_iovlen=1, msg_controllen=0, msg_flags=MSG_TRUNC}, MSG_PEEK|MSG_TRUNC) = 2932\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=[[{nlmsg_len=1444, nlmsg_type=RTM_NEWLINK, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1743240135, nlmsg_pid=3248093}, <snip> 0) = 2932\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=NULL, iov_len=0}], msg_iovlen=1, msg_controllen=0, msg_flags=MSG_TRUNC}, MSG_PEEK|MSG_TRUNC) = 3384\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=[[{nlmsg_len=1504, nlmsg_type=RTM_NEWLINK, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1743240135, nlmsg_pid=3248093}, <snip> 0) = 3384\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=NULL, iov_len=0}], msg_iovlen=1, msg_controllen=0, msg_flags=MSG_TRUNC}, MSG_PEEK|MSG_TRUNC) = 5196\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=[[{nlmsg_len=1488, nlmsg_type=RTM_NEWLINK, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1743240135, nlmsg_pid=3248093}, <snip> 0) = 5196\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=NULL, iov_len=0}], msg_iovlen=1, msg_controllen=0, msg_flags=MSG_TRUNC}, MSG_PEEK|MSG_TRUNC) = 20\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=[{nlmsg_len=20, nlmsg_type=NLMSG_DONE, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1743240135, nlmsg_pid=3248093}, 0], iov_len=32768}], msg_iovlen=1, msg_controllen=0, msg_flags=0}, 0) = 20\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=NULL, iov_len=0}], msg_iovlen=1, msg_controllen=0, msg_flags=MSG_TRUNC}, MSG_PEEK|MSG_TRUNC) = 424\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=[[{nlmsg_len=76, nlmsg_type=RTM_NEWADDR, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1743240136, nlmsg_pid=3248093}, <snip> 0) = 424\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=NULL, iov_len=0}], msg_iovlen=1, msg_controllen=0, msg_flags=MSG_TRUNC}, MSG_PEEK|MSG_TRUNC) = 600\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=[[{nlmsg_len=72, nlmsg_type=RTM_NEWADDR, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1743240136, nlmsg_pid=3248093}, <snip> 0) = 600\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=NULL, iov_len=0}], msg_iovlen=1, msg_controllen=0, msg_flags=MSG_TRUNC}, MSG_PEEK|MSG_TRUNC) = 20\r\nrecvmsg(3, {msg_name={sa_family=AF_NETLINK, nl_pid=0, nl_groups=00000000}, msg_namelen=12, msg_iov=[{iov_base=[{nlmsg_len=20, nlmsg_type=NLMSG_DONE, nlmsg_flags=NLM_F_MULTI, nlmsg_seq=1743240136, nlmsg_pid=3248093}, 0], iov_len=32768}], msg_iovlen=1, msg_controllen=0, msg_flags=0}, 0) = 20\r\n```\r\n\r\n</details>\r\n\r\n`NLM_F_MULTI` is indeed set, even in the `NLMSG_DONE` packet.\r\n\r\nOne other thing I did read about, but not implement, is checking of the sequence number on each message to ensure it was meant for our request. But as we only make a single request i thought this should be OK to omit.",
      "created_at": "2025-03-29T09:31:25Z",
      "updated_at": "2025-03-29T09:31:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2019761455",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019761455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019820641",
      "pull_request_review_id": 2727393206,
      "id": 2019820641,
      "node_id": "PRRC_kwDOABII5854ZARh",
      "diff_hunk": "@@ -82,42 +86,64 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         return std::nullopt;\n     }\n \n-    // Receive response.\n+    // Receive response(s)\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    size_t total_bytes_read = 0;\n+    bool done = false;\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            return std::nullopt;\n+        }\n \n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n-            }\n+        total_bytes_read += static_cast<size_t>(recv_result);\n+        if (total_bytes_read > MAX_NETLINK_RESPONSE_SIZE) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Netlink response exceeded size limit (%zu bytes, family=%d)\\n\", MAX_NETLINK_RESPONSE_SIZE, family);\n+            return std::nullopt;\n         }\n \n-        // Found gateway?\n-        if (rta_gateway != nullptr) {\n-            if (family == AF_INET && sizeof(in_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw);\n-            } else if (family == AF_INET6 && sizeof(in6_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in6_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw, scope_id);\n+        for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n+            if (hdr->nlmsg_type == NLMSG_DONE) {",
      "path": "src/common/netif.cpp",
      "position": 74,
      "original_position": 67,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "c5211f3423477b5799fe6c717d533c232ce1f7e6",
      "in_reply_to_id": 2018881733,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks!\r\n\r\nThe receive flow [here](https://www.infradead.org/~tgr/libnl/doc/core.html#core_recv) seems to indicate:\r\n- Receive packet\r\n- Process packet\r\n- If `NLM_F_MULTI` is set and the packet is not `NLMSG_DONE`, repeat\r\n\r\nWhat i'm mostly worried about is that the current code will hang if `NLMSG_DONE` never comes, which seems to be the case for non-multi responses, which have one data packet.\r\n\r\nBut it may be that the `NETLINK_ROUTE` response to `RTM_GETROUTE`/`NLM_F_DUMP` is always multi-packet. That empirically seems to be the case even for tiny routing tables.\r\n\r\nLooking at the `ip` source is a good idea. Also we need to verify this with FreeBSD.\r\n\r\n>  But as we only make a single request i thought this should be OK to omit.\r\n\r\nAgree, going that far in checking seems unnecessary. i don't think we need super defensive coding as netlink is a local protocol with the kernel.",
      "created_at": "2025-03-29T14:46:07Z",
      "updated_at": "2025-03-29T14:56:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2019820641",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019820641"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020591415",
      "pull_request_review_id": 2728531754,
      "id": 2020591415,
      "node_id": "PRRC_kwDOABII5854b8c3",
      "diff_hunk": "@@ -82,42 +86,64 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         return std::nullopt;\n     }\n \n-    // Receive response.\n+    // Receive response(s)\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    size_t total_bytes_read = 0;\n+    bool done = false;\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            return std::nullopt;\n+        }\n \n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n-            }\n+        total_bytes_read += static_cast<size_t>(recv_result);\n+        if (total_bytes_read > MAX_NETLINK_RESPONSE_SIZE) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Netlink response exceeded size limit (%zu bytes, family=%d)\\n\", MAX_NETLINK_RESPONSE_SIZE, family);\n+            return std::nullopt;\n         }\n \n-        // Found gateway?\n-        if (rta_gateway != nullptr) {\n-            if (family == AF_INET && sizeof(in_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw);\n-            } else if (family == AF_INET6 && sizeof(in6_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in6_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw, scope_id);\n+        for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n+            if (hdr->nlmsg_type == NLMSG_DONE) {",
      "path": "src/common/netif.cpp",
      "position": 74,
      "original_position": 67,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "c5211f3423477b5799fe6c717d533c232ce1f7e6",
      "in_reply_to_id": 2018881733,
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, that infradead page is very handy!\r\n\r\nI made a few changes in 6c694c212f8d898dac9cc1c5637381452c91e79b based on your thoughts (and the protocol page):\r\n\r\n- set socket to non-blocking mode to avoid hanging if the kernel doesn't send a response\r\n- use a vector to collect all data from multi-part responses\r\n- exit when `recv()` returns 0 (this should handle single-part messages, AFAICT)\r\n\r\nI think relying on receiving no more data from `recv()` to break the receive loop should be as (or perhaps more) robust than checking for the `NLM_F_MULTI` flag and exiting after first receive if it's _not_ set, but curious what you think here?\r\n\r\nIf it would help, I'd be happy to break this into a few smaller commits, as I'm kinda feeling this change contains a few different changes in one in some ways now...",
      "created_at": "2025-03-31T08:18:54Z",
      "updated_at": "2025-03-31T08:18:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2020591415",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020591415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020671105",
      "pull_request_review_id": 2728657986,
      "id": 2020671105,
      "node_id": "PRRC_kwDOABII5854cP6B",
      "diff_hunk": "@@ -82,42 +86,64 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         return std::nullopt;\n     }\n \n-    // Receive response.\n+    // Receive response(s)\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    size_t total_bytes_read = 0;\n+    bool done = false;\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            return std::nullopt;\n+        }\n \n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n-            }\n+        total_bytes_read += static_cast<size_t>(recv_result);\n+        if (total_bytes_read > MAX_NETLINK_RESPONSE_SIZE) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Netlink response exceeded size limit (%zu bytes, family=%d)\\n\", MAX_NETLINK_RESPONSE_SIZE, family);\n+            return std::nullopt;\n         }\n \n-        // Found gateway?\n-        if (rta_gateway != nullptr) {\n-            if (family == AF_INET && sizeof(in_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw);\n-            } else if (family == AF_INET6 && sizeof(in6_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in6_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw, scope_id);\n+        for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n+            if (hdr->nlmsg_type == NLMSG_DONE) {",
      "path": "src/common/netif.cpp",
      "position": 74,
      "original_position": 67,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "c5211f3423477b5799fe6c717d533c232ce1f7e6",
      "in_reply_to_id": 2018881733,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I think relying on receiving no more data from recv() to break the receive loop should be as (or perhaps more) robust than checking for the NLM_F_MULTI flag and exiting after first receive if it's not set, but curious what you think here?\r\n\r\nMaybe-is it safe to assume that netlink will never block?\r\n\r\nWe don't want to end up in the same situation as before where we miss data. But due to say, a threading race condition.\r\n\r\ni think the safest thing here is to mimic as closely as possible `ip`'s behavior, as it is the only tool these kind of interfaces tend to be written towards.",
      "created_at": "2025-03-31T09:13:50Z",
      "updated_at": "2025-03-31T09:13:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2020671105",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020671105"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020674715",
      "pull_request_review_id": 2728664013,
      "id": 2020674715,
      "node_id": "PRRC_kwDOABII5854cQyb",
      "diff_hunk": "@@ -82,42 +86,64 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         return std::nullopt;\n     }\n \n-    // Receive response.\n+    // Receive response(s)\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    size_t total_bytes_read = 0;\n+    bool done = false;\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            return std::nullopt;\n+        }\n \n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n-            }\n+        total_bytes_read += static_cast<size_t>(recv_result);\n+        if (total_bytes_read > MAX_NETLINK_RESPONSE_SIZE) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Netlink response exceeded size limit (%zu bytes, family=%d)\\n\", MAX_NETLINK_RESPONSE_SIZE, family);\n+            return std::nullopt;\n         }\n \n-        // Found gateway?\n-        if (rta_gateway != nullptr) {\n-            if (family == AF_INET && sizeof(in_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw);\n-            } else if (family == AF_INET6 && sizeof(in6_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in6_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw, scope_id);\n+        for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n+            if (hdr->nlmsg_type == NLMSG_DONE) {",
      "path": "src/common/netif.cpp",
      "position": 74,
      "original_position": 67,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "c5211f3423477b5799fe6c717d533c232ce1f7e6",
      "in_reply_to_id": 2018881733,
      "user": {
        "login": "laanwj",
        "id": 126646,
        "node_id": "MDQ6VXNlcjEyNjY0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/laanwj",
        "html_url": "https://github.com/laanwj",
        "followers_url": "https://api.github.com/users/laanwj/followers",
        "following_url": "https://api.github.com/users/laanwj/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/laanwj/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/laanwj/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
        "organizations_url": "https://api.github.com/users/laanwj/orgs",
        "repos_url": "https://api.github.com/users/laanwj/repos",
        "events_url": "https://api.github.com/users/laanwj/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/laanwj/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> use a vector to collect all data from multi-part responses\r\n\r\ni'm not sure i see the motivation here. Parsing the packets as seperate units is just as valid (\"Multipart messages unlike fragmented ip packets must not be reassmbled\"), avoids dynamic allocation, and is simpler.",
      "created_at": "2025-03-31T09:16:13Z",
      "updated_at": "2025-03-31T09:18:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2020674715",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020674715"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020926628",
      "pull_request_review_id": 2729086589,
      "id": 2020926628,
      "node_id": "PRRC_kwDOABII5854dOSk",
      "diff_hunk": "@@ -82,42 +94,77 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         return std::nullopt;\n     }\n \n-    // Receive response.\n-    char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    // Receive response(s)\n+    std::vector<char> buffer;\n+    buffer.reserve(4096); // Usually large-enough for a single-part message\n+    size_t total_bytes_read = 0;\n+    bool done = false;\n+\n+    while (!done) {\n+        char temp[4096];\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(temp, sizeof(temp), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));",
      "path": "src/common/netif.cpp",
      "position": 29,
      "original_position": 58,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "6c694c212f8d898dac9cc1c5637381452c91e79b",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since you're touching this line... According to the internet, we should also check `EWOULDBLOCK` even though it's usually the same as `EAGAIN`, and it's likely not relevant for any system we support.\r\nhttps://stackoverflow.com/a/49421517",
      "created_at": "2025-03-31T12:14:35Z",
      "updated_at": "2025-03-31T12:38:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2020926628",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020926628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020940099",
      "pull_request_review_id": 2729086589,
      "id": 2020940099,
      "node_id": "PRRC_kwDOABII5854dRlD",
      "diff_hunk": "@@ -82,42 +94,77 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         return std::nullopt;\n     }\n \n-    // Receive response.\n-    char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    // Receive response(s)\n+    std::vector<char> buffer;\n+    buffer.reserve(4096); // Usually large-enough for a single-part message\n+    size_t total_bytes_read = 0;\n+    bool done = false;\n+\n+    while (!done) {\n+        char temp[4096];\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(temp, sizeof(temp), 0);",
      "path": "src/common/netif.cpp",
      "position": 1,
      "original_position": 57,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "6c694c212f8d898dac9cc1c5637381452c91e79b",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I know this is existing code, but I don't recall why there's no timeout here. And also, should there be a quick wait between `Recv` calls? ",
      "created_at": "2025-03-31T12:25:16Z",
      "updated_at": "2025-03-31T12:38:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2020940099",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020940099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020953743",
      "pull_request_review_id": 2729086589,
      "id": 2020953743,
      "node_id": "PRRC_kwDOABII5854dU6P",
      "diff_hunk": "@@ -82,42 +86,64 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         return std::nullopt;\n     }\n \n-    // Receive response.\n+    // Receive response(s)\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    size_t total_bytes_read = 0;\n+    bool done = false;\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            return std::nullopt;\n+        }\n \n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n-            }\n+        total_bytes_read += static_cast<size_t>(recv_result);\n+        if (total_bytes_read > MAX_NETLINK_RESPONSE_SIZE) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Netlink response exceeded size limit (%zu bytes, family=%d)\\n\", MAX_NETLINK_RESPONSE_SIZE, family);\n+            return std::nullopt;\n         }\n \n-        // Found gateway?\n-        if (rta_gateway != nullptr) {\n-            if (family == AF_INET && sizeof(in_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw);\n-            } else if (family == AF_INET6 && sizeof(in6_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in6_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw, scope_id);\n+        for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n+            if (hdr->nlmsg_type == NLMSG_DONE) {",
      "path": "src/common/netif.cpp",
      "position": 74,
      "original_position": 67,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "c5211f3423477b5799fe6c717d533c232ce1f7e6",
      "in_reply_to_id": 2018881733,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> checking of the sequence number on each message to ensure it was meant for our request\r\n\r\nThis seems like a good idea to at least do in debug builds.\r\n\r\nIt seems like a good precaution to check for the presence of `NLM_F_MULTI` and don't wait for `NLMSG_DONE` if it isn't. At least from my naive reading of https://man7.org/linux/man-pages/man7/netlink.7.html it seems `NLMSG_DONE` is only used for multipart messages.\r\n\r\nSplitting into multiple commits would be useful, e.g. one commit that switches to non-blocking mode.",
      "created_at": "2025-03-31T12:34:27Z",
      "updated_at": "2025-03-31T12:38:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2020953743",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020953743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2047199767",
      "pull_request_review_id": 2772973866,
      "id": 2047199767,
      "node_id": "PRRC_kwDOABII5856BcoX",
      "diff_hunk": "@@ -82,42 +94,77 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         return std::nullopt;\n     }\n \n-    // Receive response.\n-    char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    // Receive response(s)\n+    std::vector<char> buffer;\n+    buffer.reserve(4096); // Usually large-enough for a single-part message\n+    size_t total_bytes_read = 0;\n+    bool done = false;\n+\n+    while (!done) {\n+        char temp[4096];\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(temp, sizeof(temp), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));",
      "path": "src/common/netif.cpp",
      "position": 29,
      "original_position": 58,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "6c694c212f8d898dac9cc1c5637381452c91e79b",
      "in_reply_to_id": 2020926628,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Might be helpful:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/cdc32994feadf3f15df3cfac5baae36b4b011462/src/util/sock.cpp#L22-L25",
      "created_at": "2025-04-16T15:33:09Z",
      "updated_at": "2025-04-16T15:33:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2047199767",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2047199767"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 97,
      "original_line": 97,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2302222710",
      "pull_request_review_id": 3157419482,
      "id": 2302222710,
      "node_id": "PRRC_kwDOABII586JOSF2",
      "diff_hunk": "@@ -84,41 +87,78 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n \n     // Receive response.\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    ssize_t total_bytes_read{0};\n+    bool done{false};\n+    bool multi_part{false};\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n+            return std::nullopt;\n+        }\n \n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n-            }\n+        total_bytes_read += recv_result;\n+        if (total_bytes_read > NETLINK_MAX_RESPONSE_SIZE) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Netlink response exceeded size limit (%zu bytes, family=%d)\\n\", NETLINK_MAX_RESPONSE_SIZE, family);\n+            return std::nullopt;\n         }\n \n-        // Found gateway?\n-        if (rta_gateway != nullptr) {\n-            if (family == AF_INET && sizeof(in_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw);\n-            } else if (family == AF_INET6 && sizeof(in6_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in6_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw, scope_id);\n+        bool processed_one{false};\n+        for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n+            rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n+            int remaining_len = RTM_PAYLOAD(hdr);",
      "path": "src/common/netif.cpp",
      "position": 67,
      "original_position": 67,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "in_reply_to_id": null,
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "These could be moved after `if (hdr->nlmsg_type == NLMSG_DONE) {` to avoid the integer sanitizer warning in #33245",
      "created_at": "2025-08-26T21:52:31Z",
      "updated_at": "2025-08-26T21:52:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2302222710",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2302222710"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": 111,
      "original_start_line": 111,
      "start_side": "RIGHT",
      "line": 112,
      "original_line": 112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308112657",
      "pull_request_review_id": 3165897312,
      "id": 2308112657,
      "node_id": "PRRC_kwDOABII586JkwER",
      "diff_hunk": "@@ -97,6 +97,11 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n         int remaining_len = RTM_PAYLOAD(hdr);\n \n+        // Only consider default routes (destination prefix length of 0).\n+        if (r->rtm_dst_len != 0) {\n+            continue;\n+        }",
      "path": "src/common/netif.cpp",
      "position": 52,
      "original_position": 7,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "57ce645f05d18d8ad10711c347a5989076f1f788",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/pull/32159/commits/57ce645f05d18d8ad10711c347a5989076f1f788 (_net: filter for default routes in netlink responses_)\r\n\r\nJust info for other reviewers, I found this useful since I'm generally unfamiliar with how routing and gateways work:\r\n\r\nAs I understand, the destination prefix is a mask indicating what routes the gateway can be used for, a destination prefix of `0` (alternatively `0.0.0.0` or `::0`) indicates that the gateway can be used for all destinations, and RFC 1812 offers this right above the beginning of section [5.2.4.4](https://datatracker.ietf.org/doc/html/rfc1812#section-5.2.4.4):\r\n\r\n> (5) Default Route: This is a route to all networks for which there are no explicit routes.  It is by definition the route whose prefix length is zero.",
      "created_at": "2025-08-28T17:40:23Z",
      "updated_at": "2025-08-28T17:40:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2308112657",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308112657"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 107,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308207185",
      "pull_request_review_id": 3166036589,
      "id": 2308207185,
      "node_id": "PRRC_kwDOABII586JlHJR",
      "diff_hunk": "@@ -97,6 +97,10 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n         int remaining_len = RTM_PAYLOAD(hdr);\n \n+        if (hdr->nlmsg_type != RTM_NEWROUTE) {\n+            continue; // Skip non-route messages\n+        }",
      "path": "src/common/netif.cpp",
      "position": 33,
      "original_position": 6,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "42e99ad77396e4e9b02d67daf46349e215e99a0f",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/pull/32159/commits/42e99ad77396e4e9b02d67daf46349e215e99a0f (_net: skip non-route netlink responses_)\r\n\r\nThe `man 7 rtnetlink` page (https://man7.org/linux/man-pages/man7/rtnetlink.7.html) does not really offer much insight here, but as far as I can tell, the convention comes from the fact that the rtnetlink interface is also used for monitoring changes to the kernel's routing table, and because the userspace application is trying to maintain an idea of the kernel routing table's state, the interfaces are symmetrical, a userspace application sends an `RTM_NEWROUTE` when it wants to insert a new route, and likewise whenever the kernel inserts a new route, it sends out an `RTM_NEWROUTE` message over open `NETLINK_ROUTE` sockets, so the reply to an `RTM_GETROUTE` follows this convention and replies with `RTM_NEWROUTE`, and I imagine the same is true for `GETADDR` and `GETLINK`\r\n\r\nLooking through the linux kernel's implementation for evidence of this:\r\n\r\ne.g. [`inet_rtm_getroute`](https://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/net/ipv4/route.c#L3281) is the kernel's [callback](https://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/net/ipv4/route.c#L3708-L3711) that handles `RTM_GETROUTE` messages for IPv4 routes, and here is a simplified + annotated view of the [relevant section](https://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/net/ipv4/route.c#L3392-L3441) of that function:\r\n\r\n```c\r\nstatic int inet_rtm_getroute(struct sk_buff *in_skb, struct nlmsghdr *nlh,\r\n\t\t\t     struct netlink_ext_ack *extack)\r\n{\r\n\t// [....]\r\n\r\n\t// [ This is never true for us. ]\r\n\tif (rtm->rtm_flags & RTM_F_FIB_MATCH) {\r\n\t\t// [ fib_dump_info populates sk_buff* skb, which holds packet data,\r\n\t\t//   and places the `event` arg in the nlmsg hdr->nlmsg_type\r\n\t\t//   https://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/net/ipv4/fib_semantics.c#L1732\r\n\t\t// ]\r\n\t\tfib_dump_info(skb, NETLINK_CB(in_skb).portid,\r\n\t\t\t\t    nlh->nlmsg_seq,/*event=*/RTM_NEWROUTE, &fri, 0);\r\n\t} else {\r\n\t\t// [ This case is relevant for us, rt_fill_info always creates an RTM_NEWROUTE message.]\r\n\t\t//   https://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/net/ipv4/route.c#L2951\r\n\t\trt_fill_info(net, dst, src, rt, table_id, res.dscp, &fl4,\r\n\t\t\t\t   skb, NETLINK_CB(in_skb).portid,\r\n\t\t\t\t   nlh->nlmsg_seq, 0);\r\n\t}\r\n\r\n\t// [ Broadcast the `skb` on the socket. ]\r\n\trtnl_unicast(skb, net, NETLINK_CB(in_skb).portid);\r\n}\r\n\r\n// [ https://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/net/ipv4/route.c#L2939-L2951 ]\r\nstatic int rt_fill_info(\r\n    // [...]\r\n)\r\n{\r\n\tnlh = nlmsg_put(skb, portid, seq, RTM_NEWROUTE, sizeof(*r), flags);\r\n}\r\n```",
      "created_at": "2025-08-28T18:20:55Z",
      "updated_at": "2025-08-28T18:20:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2308207185",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308207185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308434775",
      "pull_request_review_id": 3166353657,
      "id": 2308434775,
      "node_id": "PRRC_kwDOABII586Jl-tX",
      "diff_hunk": "@@ -82,42 +86,64 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         return std::nullopt;\n     }\n \n-    // Receive response.\n+    // Receive response(s)\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    size_t total_bytes_read = 0;\n+    bool done = false;\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            return std::nullopt;\n+        }\n \n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n-            }\n+        total_bytes_read += static_cast<size_t>(recv_result);\n+        if (total_bytes_read > MAX_NETLINK_RESPONSE_SIZE) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Netlink response exceeded size limit (%zu bytes, family=%d)\\n\", MAX_NETLINK_RESPONSE_SIZE, family);\n+            return std::nullopt;\n         }\n \n-        // Found gateway?\n-        if (rta_gateway != nullptr) {\n-            if (family == AF_INET && sizeof(in_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw);\n-            } else if (family == AF_INET6 && sizeof(in6_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in6_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw, scope_id);\n+        for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n+            if (hdr->nlmsg_type == NLMSG_DONE) {",
      "path": "src/common/netif.cpp",
      "position": 74,
      "original_position": 67,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "c5211f3423477b5799fe6c717d533c232ce1f7e6",
      "in_reply_to_id": 2018881733,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Is it guaranteed that the reponse to `NLM_F_DUMP` is always multipart? Or do we need to check `nlmsg_flags` for `NLM_F_MULTI`, and if not, break after the first packet?\r\n\r\nIt seems that in the linux kernel, that is the case. A message type's (e.g. GETROUTE) message handling [callback struct](https://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/net/ipv4/route.c#L3708-L3711) has a few callback functions, the [`.dumpit`](https://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/include/net/rtnetlink.h#L50) callback is [called](https://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/net/netlink/af_netlink.c#L2327) when you send a request with `NLM_F_DUMP`. Checking the `.dumpit` callbacks, the ones I find set `NLM_F_MULTI` in their responses, e.g. [`inet_dump_ifaddr`](https://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/net/ipv4/devinet.c#L1990) which is a wrapper for `inet_dump_addr` is the [is the `.dumpit`](https://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/net/ipv4/devinet.c#L2891) for `RTM_GETADDR` for IPv4 addresses,, and `inet_dump_addr` [sets `NLM_F_MULTI`](https://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/net/ipv4/devinet.c#L1933-L1939), and the same is true for the `NLMSG_DONE` that comes when the dump is complete: \r\n\r\n```c\r\nstatic int netlink_dump_done(struct netlink_sock *nlk, struct sk_buff *skb,\r\n\t\t\t     struct netlink_callback *cb,\r\n\t\t\t     struct netlink_ext_ack *extack)\r\n{\r\n\tnlh = nlmsg_put_answer(skb, cb, NLMSG_DONE, sizeof(nlk->dump_done_errno),\r\n\t\t\t       NLM_F_MULTI | cb->answer_flags);\r\n```\r\n\r\nhttps://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/net/netlink/af_netlink.c#L2234\r\n\r\n[Grepping](https://github.com/search?q=repo%3Atorvalds%2Flinux+NLMSG_DONE+path%3A%2F%5Enet%5C%2F%2F&type=code) for `NLMSG_DONE` I think that `netlink_dump_done` is the only place `NLMSG_DONE` is used that's relevant to us, all of the other instances are in other netlink subsystems, so we only get `NLMSG_DONE` in reply to `NLM_F_DUMP`, but I think this is the case even when we don't get a multipart message, since `netlink_dump_done` is always invoked when sending a request with `NLM_F_DUMP` I believe.",
      "created_at": "2025-08-28T20:11:42Z",
      "updated_at": "2025-08-28T20:54:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2308434775",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308434775"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 119,
      "original_line": 119,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308480089",
      "pull_request_review_id": 3166420424,
      "id": 2308480089,
      "node_id": "PRRC_kwDOABII586JmJxZ",
      "diff_hunk": "@@ -97,6 +97,10 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n         int remaining_len = RTM_PAYLOAD(hdr);\n \n+        if (hdr->nlmsg_type != RTM_NEWROUTE) {\n+            continue; // Skip non-route messages\n+        }",
      "path": "src/common/netif.cpp",
      "position": 33,
      "original_position": 6,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "42e99ad77396e4e9b02d67daf46349e215e99a0f",
      "in_reply_to_id": 2308207185,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Relevant section of iproute2, if a response to getroute is not of type `RTM_NEWROUTE`, it's an error:\r\n\r\n```c\r\nstatic int iproute_get(int argc, char **argv)\r\n        // [... `Populate answer` ]\r\n\t\tstruct rtmsg *r = NLMSG_DATA(answer);\r\n\t\tif (answer->nlmsg_type != RTM_NEWROUTE) {\r\n\t\t\tfprintf(stderr, \"Not a route?\\n\");\r\n\t\t\tdelete_json_obj();\r\n\t\t\tfree(answer);\r\n\t\t\treturn -1;\r\n\t\t}\r\n}\r\n```\r\nhttps://github.com/iproute2/iproute2/blob/3337e5013e168bcf4fab5f6518d1e4293a0a830b/ip/iproute.c#L2242-L2247",
      "created_at": "2025-08-28T20:34:02Z",
      "updated_at": "2025-08-28T20:34:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2308480089",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308480089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 101,
      "original_line": 102,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308514117",
      "pull_request_review_id": 3166469126,
      "id": 2308514117,
      "node_id": "PRRC_kwDOABII586JmSFF",
      "diff_hunk": "@@ -97,6 +97,11 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n         rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n         int remaining_len = RTM_PAYLOAD(hdr);\n \n+        // Only consider default routes (destination prefix length of 0).\n+        if (r->rtm_dst_len != 0) {\n+            continue;\n+        }",
      "path": "src/common/netif.cpp",
      "position": 52,
      "original_position": 7,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "57ce645f05d18d8ad10711c347a5989076f1f788",
      "in_reply_to_id": 2308112657,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Relevant (editorialized) code from iproute2:\r\n\r\n```c\r\n\tif (tb[RTA_DST]) {\r\n        // [...if the route has a specific destination, e.g.] ip route add 192.168.0.5 via  192.168.0.4\r\n\t} else if (r->rtm_dst_len) {\r\n        // [if the route has prefix has a length]\r\n\t\tsnprintf(b1, sizeof(b1), \"0/%d \", r->rtm_dst_len);\r\n\t} else {\r\n        // [if rtm_dst_len == 0]\r\n\t\tstrncpy(b1, \"default\", sizeof(b1));\r\n\t}\r\n```\r\nhttps://github.com/iproute2/iproute2/blob/3337e5013e168bcf4fab5f6518d1e4293a0a830b/ip/iproute.c#L833-L851",
      "created_at": "2025-08-28T20:49:36Z",
      "updated_at": "2025-08-28T20:49:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2308514117",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308514117"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 107,
      "original_line": 103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308638969",
      "pull_request_review_id": 3166673919,
      "id": 2308638969,
      "node_id": "PRRC_kwDOABII586Jmwj5",
      "diff_hunk": "@@ -84,50 +87,78 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n \n     // Receive response.\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n-\n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        if (hdr->nlmsg_type != RTM_NEWROUTE) {\n-            continue; // Skip non-route messages\n+    ssize_t total_bytes_read{0};\n+    bool done{false};\n+    bool multi_part{false};\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n+            return std::nullopt;\n         }\n \n-        // Only consider default routes (destination prefix length of 0).\n-        if (r->rtm_dst_len != 0) {\n-            continue;\n+        total_bytes_read += recv_result;\n+        if (total_bytes_read > NETLINK_MAX_RESPONSE_SIZE) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Netlink response exceeded size limit (%zu bytes, family=%d)\\n\", NETLINK_MAX_RESPONSE_SIZE, family);\n+            return std::nullopt;\n         }\n \n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n+        bool processed_one{false};\n+        for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n+            rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n+            int remaining_len = RTM_PAYLOAD(hdr);\n+\n+            processed_one = true;\n+            if (hdr->nlmsg_flags & NLM_F_MULTI) {\n+                multi_part = true;\n             }\n-        }\n \n-        // Found gateway?\n-        if (rta_gateway != nullptr) {\n-            if (family == AF_INET && sizeof(in_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw);\n-            } else if (family == AF_INET6 && sizeof(in6_addr) == RTA_PAYLOAD(rta_gateway)) {\n-                in6_addr gw;\n-                std::memcpy(&gw, RTA_DATA(rta_gateway), sizeof(gw));\n-                return CNetAddr(gw, scope_id);\n+            if (hdr->nlmsg_type == NLMSG_DONE) {\n+                done = true;\n+                break;\n             }\n+\n+            if (hdr->nlmsg_type != RTM_NEWROUTE) {\n+                continue; // Skip non-route messages\n+            }\n+\n+            // Only consider default routes (destination prefix length of 0).\n+            if (r->rtm_dst_len != 0) {\n+                continue;\n+            }\n+\n+            // Iterate over the attributes.\n+            rtattr* rta_gateway = nullptr;\n+            int scope_id = 0;\n+            for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n+                if (attr->rta_type == RTA_GATEWAY) {\n+                    rta_gateway = attr;\n+                } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {",
      "path": "src/common/netif.cpp",
      "position": 100,
      "original_position": 100,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "For context on this, IPv6 allows \"scoped addresses\", e.g. I can send a packet to a non-globally unique address, like a link-local address that has two destinations on two different links, so in order to disambiguate scoped addresses  [RFC4007#section-6](https://datatracker.ietf.org/doc/html/rfc4007#section-6) recommends the use of unique zone indexes:\r\n\r\n>  Because the same non-global address may be in use in more than one zone of the same scope (e.g., the use of link-local address fe80::1 in two separate physical links) and a node may have interfaces attached to different zones of the same scope (e.g., a router normally has multiple interfaces attached to different links), a node requires an internal means to identify to which zone a non-global address belongs.  This is accomplished by assigning, within the node, a distinct \"zone index\" to each zone of the same scope to which that node is attached, and by allowing all internal uses of an address to be qualified by a zone index.\r\n\r\nAnd  [RFC4007#section-7](https://datatracker.ietf.org/doc/html/rfc4007#section-7) suggests that specifying an output interface index as the zone index is sufficient, but more specific than necessary to disambiguate: \r\n>  When an upper-layer protocol sends a packet to a non-global destination address, it must have a means of identifying the intended zone to the IPv6 layer for cases in which the node is attached to more than one zone of the destination address's scope.\r\n> Although identification of an outgoing interface is sufficient to identify an intended zone (because each interface is attached to no more than one zone of each scope), in many cases that is more specific than desired.\r\n\r\nThe name used in the rtnetlink interface (`RTA_OIF`) suggest that the unique scope ID / zone ID used  is the output interface index (OIF), but I guess that's an implementation detail, the point is, it's a unique index that makes an IPv6 address globally unique from the POV of a given device.",
      "created_at": "2025-08-28T21:58:22Z",
      "updated_at": "2025-08-28T21:58:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2308638969",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308638969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 139,
      "original_line": 139,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308655496",
      "pull_request_review_id": 3166703690,
      "id": 2308655496,
      "node_id": "PRRC_kwDOABII586Jm0mI",
      "diff_hunk": "@@ -84,50 +87,78 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n \n     // Receive response.\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n-\n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        if (hdr->nlmsg_type != RTM_NEWROUTE) {\n-            continue; // Skip non-route messages\n+    ssize_t total_bytes_read{0};\n+    bool done{false};\n+    bool multi_part{false};\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n+            return std::nullopt;\n         }\n \n-        // Only consider default routes (destination prefix length of 0).\n-        if (r->rtm_dst_len != 0) {\n-            continue;\n+        total_bytes_read += recv_result;\n+        if (total_bytes_read > NETLINK_MAX_RESPONSE_SIZE) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Netlink response exceeded size limit (%zu bytes, family=%d)\\n\", NETLINK_MAX_RESPONSE_SIZE, family);\n+            return std::nullopt;\n         }\n \n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n+        bool processed_one{false};\n+        for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n+            rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n+            int remaining_len = RTM_PAYLOAD(hdr);\n+\n+            processed_one = true;\n+            if (hdr->nlmsg_flags & NLM_F_MULTI) {\n+                multi_part = true;\n             }",
      "path": "src/common/netif.cpp",
      "position": 67,
      "original_position": 67,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In https://github.com/bitcoin/bitcoin/pull/32159/commits/4c531782569b42fc47478a468f4a79e0e2d93946 (_net: handle multi-part netlink responses_)\r\n\r\nnit:\r\n\r\n`processed_one`, `multi_part` and the check at the bottom of the outer for loop could be dropped, with the following check:\r\n\r\n```suggestion\r\n            if (!(hdr->nlmsg_flags & NLM_F_MULTI)) {\r\n                done = true;\r\n            }\r\n```",
      "created_at": "2025-08-28T22:09:47Z",
      "updated_at": "2025-08-28T22:14:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2308655496",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308655496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": 114,
      "start_side": "RIGHT",
      "line": 117,
      "original_line": 117,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308665037",
      "pull_request_review_id": 3166716648,
      "id": 2308665037,
      "node_id": "PRRC_kwDOABII586Jm27N",
      "diff_hunk": "@@ -84,41 +87,78 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n \n     // Receive response.\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    ssize_t total_bytes_read{0};\n+    bool done{false};\n+    bool multi_part{false};\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n+            return std::nullopt;\n+        }\n \n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n-            }\n+        total_bytes_read += recv_result;\n+        if (total_bytes_read > NETLINK_MAX_RESPONSE_SIZE) {",
      "path": "src/common/netif.cpp",
      "position": 49,
      "original_position": 49,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "in_reply_to_id": null,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\n\r\nI think we should return early on `total_bytes_read == 0` as well.",
      "created_at": "2025-08-28T22:17:49Z",
      "updated_at": "2025-08-28T22:17:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2308665037",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308665037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 104,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308685773",
      "pull_request_review_id": 3166739455,
      "id": 2308685773,
      "node_id": "PRRC_kwDOABII586Jm7_N",
      "diff_hunk": "@@ -84,41 +87,78 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n \n     // Receive response.\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n+    ssize_t total_bytes_read{0};\n+    bool done{false};\n+    bool multi_part{false};\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n+            return std::nullopt;\n+        }\n \n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n-            }\n+        total_bytes_read += recv_result;\n+        if (total_bytes_read > NETLINK_MAX_RESPONSE_SIZE) {",
      "path": "src/common/netif.cpp",
      "position": 49,
      "original_position": 49,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "in_reply_to_id": 2308665037,
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Feel free to mark resolved, this suggestion is actually incorrect, since when `recv_result == 0` the `NLMSG_OK` check [below](https://github.com/bitcoin/bitcoin/blob/4c531782569b42fc47478a468f4a79e0e2d93946/src/common/netif.cpp#L110) would fail:\r\n\r\n\r\n```c\r\n#define NLMSG_OK(nlh,len) ((len) >= (int)sizeof(struct nlmsghdr) && \\\r\n\t\t\t   (nlh)->nlmsg_len >= sizeof(struct nlmsghdr) && \\\r\n\t\t\t   (nlh)->nlmsg_len <= (len))\r\n```\r\nhttps://github.com/torvalds/linux/blob/39f90c1967215375f7d87b81d14b0f3ed6b40c29/include/uapi/linux/netlink.h#L107-L109",
      "created_at": "2025-08-28T22:29:09Z",
      "updated_at": "2025-08-28T22:29:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2308685773",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2308685773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 104,
      "original_line": 104,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2313830013",
      "pull_request_review_id": 3173466193,
      "id": 2313830013,
      "node_id": "PRRC_kwDOABII586J6j59",
      "diff_hunk": "@@ -84,50 +87,78 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\n \n     // Receive response.\n     char response[4096];\n-    int64_t recv_result;\n-    do {\n-        recv_result = sock->Recv(response, sizeof(response), 0);\n-    } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n-    if (recv_result < 0) {\n-        LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n-        return std::nullopt;\n-    }\n-\n-    for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n-        rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n-        int remaining_len = RTM_PAYLOAD(hdr);\n-\n-        if (hdr->nlmsg_type != RTM_NEWROUTE) {\n-            continue; // Skip non-route messages\n+    ssize_t total_bytes_read{0};\n+    bool done{false};\n+    bool multi_part{false};\n+    while (!done) {\n+        int64_t recv_result;\n+        do {\n+            recv_result = sock->Recv(response, sizeof(response), 0);\n+        } while (recv_result < 0 && (errno == EINTR || errno == EAGAIN));\n+        if (recv_result < 0) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Error, \"recv() from netlink socket: %s\\n\", NetworkErrorString(errno));\n+            return std::nullopt;\n         }\n \n-        // Only consider default routes (destination prefix length of 0).\n-        if (r->rtm_dst_len != 0) {\n-            continue;\n+        total_bytes_read += recv_result;\n+        if (total_bytes_read > NETLINK_MAX_RESPONSE_SIZE) {\n+            LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"Netlink response exceeded size limit (%zu bytes, family=%d)\\n\", NETLINK_MAX_RESPONSE_SIZE, family);\n+            return std::nullopt;\n         }\n \n-        // Iterate over the attributes.\n-        rtattr *rta_gateway = nullptr;\n-        int scope_id = 0;\n-        for (rtattr* attr = RTM_RTA(r); RTA_OK(attr, remaining_len); attr = RTA_NEXT(attr, remaining_len)) {\n-            if (attr->rta_type == RTA_GATEWAY) {\n-                rta_gateway = attr;\n-            } else if (attr->rta_type == RTA_OIF && sizeof(int) == RTA_PAYLOAD(attr)) {\n-                std::memcpy(&scope_id, RTA_DATA(attr), sizeof(scope_id));\n+        bool processed_one{false};\n+        for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\n+            rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\n+            int remaining_len = RTM_PAYLOAD(hdr);\n+\n+            processed_one = true;\n+            if (hdr->nlmsg_flags & NLM_F_MULTI) {\n+                multi_part = true;\n             }",
      "path": "src/common/netif.cpp",
      "position": 67,
      "original_position": 67,
      "commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "original_commit_id": "4c531782569b42fc47478a468f4a79e0e2d93946",
      "in_reply_to_id": 2308655496,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "A slightly different approach, which avoids confusing `NLMSG_DONE` with `done`:\r\n\r\n```diff\r\ndiff --git a/src/common/netif.cpp b/src/common/netif.cpp\r\nindex 77246980c3..3f3b8fdcea 100644\r\n--- a/src/common/netif.cpp\r\n+++ b/src/common/netif.cpp\r\n@@ -117,9 +117,10 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\r\n     // Receive response.\r\n     char response[4096];\r\n     ssize_t total_bytes_read{0};\r\n-    bool done{false};\r\n-    bool multi_part{false};\r\n-    while (!done) {\r\n+    // If we processed at least one message and multi flag not set, or if\r\n+    // we received no valid messages, then we're done.\r\n+    bool maybe_more{true};\r\n+    while (maybe_more) {\r\n         int64_t recv_result;\r\n         do {\r\n             recv_result = sock->Recv(response, sizeof(response), 0);\r\n@@ -135,18 +136,16 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\r\n             return std::nullopt;\r\n         }\r\n \r\n-        bool processed_one{false};\r\n         for (nlmsghdr* hdr = (nlmsghdr*)response; NLMSG_OK(hdr, recv_result); hdr = NLMSG_NEXT(hdr, recv_result)) {\r\n             rtmsg* r = (rtmsg*)NLMSG_DATA(hdr);\r\n             int remaining_len = RTM_PAYLOAD(hdr);\r\n \r\n-            processed_one = true;\r\n-            if (hdr->nlmsg_flags & NLM_F_MULTI) {\r\n-                multi_part = true;\r\n-            }\r\n+            if (!(hdr->nlmsg_flags & NLM_F_MULTI)) {\r\n+                maybe_more = false;\r\n+            };\r\n \r\n             if (hdr->nlmsg_type == NLMSG_DONE) {\r\n-                done = true;\r\n+                maybe_more = false;\r\n                 break;\r\n             }\r\n \r\n@@ -183,12 +182,6 @@ std::optional<CNetAddr> QueryDefaultGatewayImpl(sa_family_t family)\r\n                 }\r\n             }\r\n         }\r\n-\r\n-        // If we processed at least one message and multi flag is not set,\r\n-        // or if we received no valid messages, then we're done.\r\n-        if ((processed_one && !multi_part) || !processed_one) {\r\n-            done = true;\r\n-        }\r\n     }\r\n \r\n     return std::nullopt;\r\n```",
      "created_at": "2025-09-01T12:32:23Z",
      "updated_at": "2025-09-01T12:39:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32159#discussion_r2313830013",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2313830013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32159"
        }
      },
      "start_line": null,
      "original_start_line": 114,
      "start_side": "RIGHT",
      "line": 117,
      "original_line": 117,
      "side": "RIGHT"
    }
  ]
}