{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397",
    "id": 2208562627,
    "node_id": "PR_kwDOABII586Do_3D",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31397",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31397.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31397.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31397",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31397/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/86d7135e36efd39781cf4c969011df99f0cbb69d",
    "number": 31397,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "p2p: track and use all potential peers for orphan resolution",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Part of #27463.\r\n\r\n(Transaction) **orphan resolution** is a process that kicks off when we are missing UTXOs to validate an unconfirmed transaction. We currently request missing parents by txid; BIP 331 also defines a way to [explicitly request ancestors](https://github.com/bitcoin/bips/blob/master/bip-0331.mediawiki#handle-orphans-better).\r\n\r\nCurrently, when we find that a transaction is an orphan, we only try to resolve it with the peer who provided the `tx`. If this doesn't work out (e.g. they send a `notfound` or don't respond), we do not try again. We actually can't, because we've already forgotten who else could resolve this orphan (i.e. all the other peers who announced the transaction).\r\n\r\nWhat is wrong with this? It makes transaction download less reliable, particularly for 1p1c packages which must go through orphan resolution in order to be downloaded.\r\n\r\nCan we fix this with BIP 331 / is this \"duct tape\" before the real solution?\r\nBIP 331 (receiver-initiated ancestor package relay) is also based on the idea that there is an orphan that needs resolution, but it's just a new way of communicating information. It's not inherently more honest; you can request ancestor package information and get a `notfound`. So ancestor package relay still requires some kind of procedure for retrying when an orphan resolution attempt fails. See the #27742 implementation which builds on this orphan resolution tracker to keep track of what packages to download (it just isn't rebased on this exact branch). The difference when using BIP 331 is that we request `ancpkginfo` and then `pkgtxns` instead of the parent txids.\r\n\r\nZooming out, we'd like orphan handling to be:\r\n- Bandwidth-efficient: don't have too many requests out at once. As already implemented today, transaction requests for orphan parents and regular download both go through the `TxRequestTracker` so that we don't have duplicate requests out.\r\n- Not vulnerable to censorship: don't give up too easily, use all candidate peers. See e.g. https://bitcoincore.org/en/2024/07/03/disclose_already_asked_for/\r\n- Load-balance between peers: don't overload peers; use all peers available. This is also useful for when we introduce per-peer orphan protection, since each peer will have limited slots.\r\n\r\nThe approach taken in this PR is to think of each peer who announces an orphan as a potential \"orphan resolution candidate.\" These candidates include:\r\n- the peer who sent us the orphan tx\r\n- any peers who announced the orphan prior to us downloading it\r\n- any peers who subsequently announce the orphan after we have started trying to resolve it\r\nFor each orphan resolution candidate, we treat them as having \"announced\" all of the missing parents to us at the time of receipt of this orphan transaction (or at the time they announced the tx if they do so after we've already started tracking it as an orphan). We add the missing parents as entries to `m_txrequest`, incorporating the logic of typical txrequest processing, which means we prefer outbounds, try not to have duplicate requests in flight, don't overload peers, etc.",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2024-11-30T21:06:45Z",
    "updated_at": "2025-01-09T13:47:14Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "57917695ba12198e0f4904372b20fe17c5d07cd5",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "glozow:2024-11-multi-orphan",
      "ref": "2024-11-multi-orphan",
      "sha": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 244262754,
        "node_id": "MDEwOlJlcG9zaXRvcnkyNDQyNjI3NTQ=",
        "name": "bitcoin",
        "full_name": "glozow/bitcoin",
        "owner": {
          "login": "glozow",
          "id": 25183001,
          "node_id": "MDQ6VXNlcjI1MTgzMDAx",
          "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/glozow",
          "html_url": "https://github.com/glozow",
          "followers_url": "https://api.github.com/users/glozow/followers",
          "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
          "organizations_url": "https://api.github.com/users/glozow/orgs",
          "repos_url": "https://api.github.com/users/glozow/repos",
          "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/glozow/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/glozow/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/glozow/bitcoin",
        "archive_url": "https://api.github.com/repos/glozow/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/glozow/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/glozow/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/glozow/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/glozow/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/glozow/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/glozow/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/glozow/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/glozow/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/glozow/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/glozow/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/glozow/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/glozow/bitcoin/events",
        "forks_url": "https://api.github.com/repos/glozow/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/glozow/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/glozow/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/glozow/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/glozow/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/glozow/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/glozow/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/glozow/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/glozow/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/glozow/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/glozow/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/glozow/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/glozow/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/glozow/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/glozow/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/glozow/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:glozow/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/glozow/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/glozow/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/glozow/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/glozow/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/glozow/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/glozow/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/glozow/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/glozow/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/glozow/bitcoin/hooks",
        "svn_url": "https://github.com/glozow/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 4,
        "stargazers_count": 12,
        "watchers_count": 12,
        "size": 264938,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-08T17:45:28Z",
        "created_at": "2020-03-02T02:31:56Z",
        "updated_at": "2025-01-08T17:46:01Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "6475849c4020f3aba82357631cfb06978662689e",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36508,
        "stargazers_count": 81268,
        "watchers_count": 81268,
        "size": 273986,
        "default_branch": "master",
        "open_issues_count": 692,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-08T18:01:37Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-01-09T13:59:20Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 638,
    "deletions": 174,
    "changed_files": 18,
    "commits": 14,
    "review_comments": 111,
    "comments": 7
  },
  "events": [
    {
      "event": "labeled",
      "id": 15482319323,
      "node_id": "LE_lADOABII586haVlzzwAAAAOa0XHb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15482319323",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-30T21:06:45Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 2509386087,
      "node_id": "IC_kwDOABII586VkjFn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2509386087",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-30T21:06:50Z",
      "updated_at": "2025-01-07T20:36:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31397.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [marcofleon](https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2535162556), [instagibbs](https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2535269451) |\n| Concept ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2472515530), [mzumsande](https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2493836266), [sipa](https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2529697189) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28031](https://github.com/bitcoin/bitcoin/pull/28031) (Package Relay 1/3: Introduce TxDownloadManager and improve orphan-handling by glozow)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#issuecomment-2509386087",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31397"
    },
    {
      "event": "reviewed",
      "id": 2478886117,
      "node_id": "PRR_kwDOABII586TwMzl",
      "url": null,
      "actor": null,
      "commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2478886117",
      "submitted_at": "2024-12-04T14:34:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
    },
    {
      "event": "reviewed",
      "id": 2472515530,
      "node_id": "PRR_kwDOABII586TX5fK",
      "url": null,
      "actor": null,
      "commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nI implemented what I was talking about in the [review club yesterday](https://bitcoincore.reviews/31397) here: https://github.com/dergoegge/bitcoin/commits/2024-12-rslv-orphns/ (the only difference is the main commit 3928b400d805f75e0ba5b9947d5d441a828aa5be) and it looks like it passes your functional test additions! So perhaps it's worth exploring if we actually need another tracker...\r\n\r\n\r\n<details>\r\n\r\n<summary>IRC logs</summary>\r\n\r\n```\r\n17:34 \t<dergoegge> I was wondering why we need another txrequest tracker instance for this? couldn’t we just keep track of announcers in the orphanage (same as in the PR) and then add requests for the parents to the existing tracker on future announcements?\r\n17:35 \t<glozow> dergoegge: that's an idea. How would you schedule the requests?\r\n17:35 \t<dergoegge> ideally at the same time\r\n17:35 \t<glozow> Is there a cost to having another txrequest tracker? It's not that different from adding another std::map\r\n17:35 \t<glozow> No, I mean, how would you load-balance between peers, bake in preferences, etc.\r\n17:36 \t<dergoegge> isn't that what the existing tracker does?\r\n17:36 \t<glozow> Oh, you mean adding a new type to the tracker? So we'd have txid type, wtxid type, and orphan?\r\n17:37 \t<glozow> also note that the parent requests are added to the txrequest tracker\r\n17:39 \t<dergoegge> I guess I'm wondering why we need the concept of tracking the resolution by orphan id, as opposed to just putting the requests for the parents in the existing tracker\r\n17:39 \t<glozow> we do put the requests for the parents in the existing tracker\r\n17:39 \t<glozow> Maybe we are crossing wires?\r\n17:39 \t<instagibbs> mmmm he's asking why the add to new tracker, then \"immediately\" add to old one, vs just add to old one, I think\r\n17:40 \t<dergoegge> yea\r\n17:40 \t<instagibbs> add to old one with \"proper delays\"\r\n17:40 \t<instagibbs> I didn't get far enough in my review to figure this out either 😅\r\n17:40 \t<glozow> We might have multiple candidates for orphan resolution\r\n17:41 \t<glozow> Oh I see what you're saying\r\n17:42 \t<dergoegge> \"multiple candidates\" as in same parents different orphan?\r\n17:42 \t<glozow> Perhaps that could work, where you're treating it as if all of them just announced the missing parents? I don't know how you'd add `ancpkginfo` orphan resolution easily this way though.\r\n17:43 \t<glozow> different peers same orphan\r\n17:43 \t<instagibbs> You'd also have to somehow track that you're no longer asking for any parents of an orphan in order to EraseOrphanOfPeer?\r\n17:43 \t<marcofleon> yeah i was thinking it made sense with GetCandidatePeers. Having another tracker to separate out the orphan reso process\r\n17:46 \t<glozow> will think about this idea some more\r\n17:47 \t<dergoegge> me too 👍\r\n17:47 \t<glozow> I think it's possible it works? My main questions would be (1) what is the cost of having a second tracker? Because it's the perfect data structure for this. (2) how do we make it extensible to package relay still.\r\n17:48 \t<instagibbs> imo the cost is mostly an additional structure lying around that needs to stay in sync with other things\r\n17:48 \t<dergoegge> 1) if we don't need it then it's just extra complexity 2) fair!\r\n17:48 \t<marcofleon> The fact that there are candidates that be added or not added to that new tracker is why it made sense to me in the first place I guess is what i was saying\r\n17:48 \t<marcofleon> can be*\r\n17:49 \t<glozow> (1) shoving it into the existing tracker but needing to have extra logic could also be complexity!\r\n17:49 \t<dergoegge> well in my mind it wouldn't need extra logic but I might be wrong, need to think more\r\n17:49 \t<instagibbs> proof of code for this I think..\r\n17:49 \t<glozow> but yeah, I don't like that we need to ensure m_orphanage and m_orphan_resolution_tracker are in sync. that's super fair\r\n17:49 \t<dergoegge> frfr\r\n17:50 \t<glozow> yeah let's see what the code would look like\r\n17:50 \t<marcofleon> fr\r\n17:50 \t<glozow> fr r r\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2472515530",
      "submitted_at": "2024-12-05T11:25:20Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
    },
    {
      "event": "commented",
      "id": 2520264267,
      "node_id": "IC_kwDOABII586WOC5L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2520264267",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T13:00:57Z",
      "updated_at": "2024-12-05T13:00:57Z",
      "author_association": "MEMBER",
      "body": "Thanks @dergoegge, will spend some time thinking about whether there are any problems with it. Perhaps we can do this easier version now and cross the orphan reso tracker bridge when we need to build the 2-step orphan resolution protocol (info and then transactions).",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#issuecomment-2520264267",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31397"
    },
    {
      "event": "mentioned",
      "id": 15543806472,
      "node_id": "MEE_lADOABII586haVlzzwAAAAOee6oI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15543806472",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T13:01:00Z"
    },
    {
      "event": "subscribed",
      "id": 15543806492,
      "node_id": "SE_lADOABII586haVlzzwAAAAOee6oc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15543806492",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-05T13:01:00Z"
    },
    {
      "event": "reviewed",
      "id": 2473080499,
      "node_id": "PRR_kwDOABII586TaDaz",
      "url": null,
      "actor": null,
      "commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2473080499",
      "submitted_at": "2024-12-05T13:34:25Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15559661377,
      "node_id": "HRFPE_lADOABII586haVlzzwAAAAOfbZdB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15559661377",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f96df3d60a943b87eecd3a6915fcace0eee2838f",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/f96df3d60a943b87eecd3a6915fcace0eee2838f",
      "created_at": "2024-12-06T12:27:26Z"
    },
    {
      "event": "reviewed",
      "id": 2484617926,
      "node_id": "PRR_kwDOABII586UGELG",
      "url": null,
      "actor": null,
      "commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Changed to the new approach, cleaned up a bunch of things, addressed most comments. I think I have 1 or 2 more to get to, and need to write an RPC test.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2484617926",
      "submitted_at": "2024-12-06T12:27:28Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
    },
    {
      "event": "commented",
      "id": 2523122642,
      "node_id": "IC_kwDOABII586WY8vS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2523122642",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T12:33:58Z",
      "updated_at": "2024-12-06T12:33:58Z",
      "author_association": "MEMBER",
      "body": "The 2 main functional differences I noticed with this approach are\r\n(1) If there are multiple missing parents, we may be using different peers to request them.\r\n(2) We don't `EraseOrphanOfPeer` if orphan resolution expires. This also means we don't delete the orphan after we've exhausted all potential orphan resolution candidates. This is similar to what we have today - it'll stay for 20min before orphanage expires the entry.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#issuecomment-2523122642",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31397"
    },
    {
      "event": "reviewed",
      "id": 2485060458,
      "node_id": "PRR_kwDOABII586UHwNq",
      "url": null,
      "actor": null,
      "commit_id": "f96df3d60a943b87eecd3a6915fcace0eee2838f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "took another pass with the major new commit f96df3d60a943b87eecd3a6915fcace0eee2838f",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2485060458",
      "submitted_at": "2024-12-06T18:43:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
    },
    {
      "event": "labeled",
      "id": 15581095926,
      "node_id": "LE_lADOABII586haVlzzwAAAAOgtKf2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15581095926",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-09T10:41:56Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15618030953,
      "node_id": "HRFPE_lADOABII586haVlzzwAAAAOi6D1p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15618030953",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "40abc3f4f1a2b7c6da657f2cdffd2b61f5b1b91a",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/40abc3f4f1a2b7c6da657f2cdffd2b61f5b1b91a",
      "created_at": "2024-12-11T12:43:25Z"
    },
    {
      "event": "unlabeled",
      "id": 15618830079,
      "node_id": "UNLE_lADOABII586haVlzzwAAAAOi9G7_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15618830079",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T13:34:44Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2496042819,
      "node_id": "PRR_kwDOABII586UxpdD",
      "url": null,
      "actor": null,
      "commit_id": "40abc3f4f1a2b7c6da657f2cdffd2b61f5b1b91a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK 40abc3f4f1a2b7c6da657f2cdffd2b61f5b1b91a\r\n\r\nnon-blocking suggestions only",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2496042819",
      "submitted_at": "2024-12-11T16:58:31Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
    },
    {
      "event": "review_requested",
      "id": 15621827215,
      "node_id": "RRE_lADOABII586haVlzzwAAAAOjIiqP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15621827215",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-11T16:58:34Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2493836266,
      "node_id": "PRR_kwDOABII586UpOvq",
      "url": null,
      "actor": null,
      "commit_id": "40abc3f4f1a2b7c6da657f2cdffd2b61f5b1b91a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\nDid a first round of review, mostly comment nits (it's been a while since I last looked at the orphanage).",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2493836266",
      "submitted_at": "2024-12-11T20:06:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
    },
    {
      "event": "reviewed",
      "id": 2500066443,
      "node_id": "PRR_kwDOABII586VA_yL",
      "url": null,
      "actor": null,
      "commit_id": "9a77d84a56906c80412d60d3eb7065b1f436fc94",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2500066443",
      "submitted_at": "2024-12-12T15:48:31Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15808809155,
      "node_id": "HRFPE_lADOABII586haVlzzwAAAAOuR0jD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15808809155",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a2ab8d2a690d0f0e7e074636589bba003a51cc96",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/a2ab8d2a690d0f0e7e074636589bba003a51cc96",
      "created_at": "2025-01-03T15:56:13Z"
    },
    {
      "event": "commented",
      "id": 2569511364,
      "node_id": "IC_kwDOABII586ZJ6HE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2569511364",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-03T16:35:51Z",
      "updated_at": "2025-01-03T16:35:51Z",
      "author_association": "MEMBER",
      "body": "Thanks for the reviews @mzumsande @instagibbs! Just got back from holiday, addressed all the comments. Biggest change was recalculating missing parents each time we add a new orphan reso candidate. I also wrote a test for https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1881018172",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#issuecomment-2569511364",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31397"
    },
    {
      "event": "mentioned",
      "id": 15809141999,
      "node_id": "MEE_lADOABII586haVlzzwAAAAOuTFzv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15809141999",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-03T16:35:52Z"
    },
    {
      "event": "subscribed",
      "id": 15809142010,
      "node_id": "SE_lADOABII586haVlzzwAAAAOuTFz6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15809142010",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-03T16:35:52Z"
    },
    {
      "event": "mentioned",
      "id": 15809142020,
      "node_id": "MEE_lADOABII586haVlzzwAAAAOuTF0E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15809142020",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-03T16:35:52Z"
    },
    {
      "event": "subscribed",
      "id": 15809142029,
      "node_id": "SE_lADOABII586haVlzzwAAAAOuTF0N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15809142029",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-03T16:35:52Z"
    },
    {
      "event": "labeled",
      "id": 15809544037,
      "node_id": "LE_lADOABII586haVlzzwAAAAOuUn9l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15809544037",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-03T17:28:04Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2497104576,
      "node_id": "PRR_kwDOABII586U1srA",
      "url": null,
      "actor": null,
      "commit_id": "a2ab8d2a690d0f0e7e074636589bba003a51cc96",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "I wonder if it's possible to avoid keeping track of the announcers in `m_orphans`, as I think it should match `m_txrequest.GetCandidatePeers(orphan_tx)`?",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2497104576",
      "submitted_at": "2025-01-03T19:23:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
    },
    {
      "event": "commented",
      "id": 2569724440,
      "node_id": "IC_kwDOABII586ZKuIY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2569724440",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-03T19:38:26Z",
      "updated_at": "2025-01-03T19:38:26Z",
      "author_association": "MEMBER",
      "body": "> I wonder if it's possible to avoid keeping track of the announcers in `m_orphans`, as I think it should match `m_txrequest.GetCandidatePeers(orphan_tx)`?\r\n\r\nThat's true immediately after receiving the orphan, but we delete the entries from `m_txrequest` once we've added this tx to the orphanage - `m_txrequest` only stores what we haven't successfully downloaded yet. So I think we need to store the announcers somewhere else to remember that information, remove candidates that fail to resolve the orphan, and add new candidates if they announce the tx. `TxOrphanage` seems like the best place for it.",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#issuecomment-2569724440",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31397"
    },
    {
      "event": "commented",
      "id": 2569749036,
      "node_id": "IC_kwDOABII586ZK0Is",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2569749036",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-03T20:01:30Z",
      "updated_at": "2025-01-03T20:01:30Z",
      "author_association": "MEMBER",
      "body": "> > \r\n> \r\n> That's true immediately after receiving the orphan, but we delete the entries from `m_txrequest` once we've added this tx to the orphanage - `m_txrequest` only stores what we haven't successfully downloaded yet.\r\n\r\nRight, of course!",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#issuecomment-2569749036",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31397"
    },
    {
      "event": "reviewed",
      "id": 2529697189,
      "node_id": "PRR_kwDOABII586WyB2l",
      "url": null,
      "actor": null,
      "commit_id": "a2ab8d2a690d0f0e7e074636589bba003a51cc96",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Concept ACK, some nits/questions:",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2529697189",
      "submitted_at": "2025-01-03T22:10:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY5NTFkZGNlZmQ5ZTA1ZjMxZWU3NjM0YmJmYmYxZDE5ZTA0ZWMwMGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6951ddcefd9e05f31ee7634bbfbf1d19e04ec00e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6951ddcefd9e05f31ee7634bbfbf1d19e04ec00e",
      "tree": {
        "sha": "9dc5f11403706977771cff5d2c5fc56ad086086e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9dc5f11403706977771cff5d2c5fc56ad086086e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1f0f3c288af3464209a48a608d3d7122c06c21f",
          "sha": "b1f0f3c288af3464209a48a608d3d7122c06c21f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b1f0f3c288af3464209a48a608d3d7122c06c21f"
        }
      ],
      "message": "[txrequest] GetCandidatePeers\n\nNeeded for a later commit adding logic to ask the TxRequestTracker for a\nlist of announcers.  These announcers should know the parents of the\ntransaction they announced.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-03-20T10:37:23Z"
      },
      "sha": "6951ddcefd9e05f31ee7634bbfbf1d19e04ec00e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDYyYTlmZjE4NzA3NjY4NmIzOWRjYTY0YWQ0ZjJmNDM5ZGEwODc1ZDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62a9ff187076686b39dca64ad4f2f439da0875d1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/62a9ff187076686b39dca64ad4f2f439da0875d1",
      "tree": {
        "sha": "83bd577bc5f927c37d1612ebbf87b5c06abfcb0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83bd577bc5f927c37d1612ebbf87b5c06abfcb0d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6951ddcefd9e05f31ee7634bbfbf1d19e04ec00e",
          "sha": "6951ddcefd9e05f31ee7634bbfbf1d19e04ec00e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6951ddcefd9e05f31ee7634bbfbf1d19e04ec00e"
        }
      ],
      "message": "[refactor] change type of unique_parents to Txid",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-07-26T13:10:21Z"
      },
      "sha": "62a9ff187076686b39dca64ad4f2f439da0875d1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU4MTA4NDJhY2RhNmZlNTZlMDUzNmViZWNmYmI5ZDE3ZDI2ZTE1MTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e810842acda6fe56e0536ebecfbb9d17d26e1513",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e810842acda6fe56e0536ebecfbb9d17d26e1513",
      "tree": {
        "sha": "2b391d4114c840865eff7a721990dffa9b1b471e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b391d4114c840865eff7a721990dffa9b1b471e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62a9ff187076686b39dca64ad4f2f439da0875d1",
          "sha": "62a9ff187076686b39dca64ad4f2f439da0875d1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/62a9ff187076686b39dca64ad4f2f439da0875d1"
        }
      ],
      "message": "[txorphanage] support multiple announcers\n\nAdd ability to add and track multiple announcers per orphan transaction,\nerasing announcers but not the entire orphan.\n\nThe tx creation code in orphanage_tests needs to be updated so that each\ntx is unique, because the CountOrphans() check assumes that calling\nEraseForPeer necessarily means its orphans are deleted.\n\nUnused for now.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2023-04-18T15:02:58Z"
      },
      "sha": "e810842acda6fe56e0536ebecfbb9d17d26e1513"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA0NDQ4Y2UzMmEzYmM0YjZkMTIyOTNmNzFlNDAzMzNhYmUzNWMyMjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04448ce32a3bc4b6d12293f71e40333abe35c224",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/04448ce32a3bc4b6d12293f71e40333abe35c224",
      "tree": {
        "sha": "19213cf7c27ff98622f2b2a752ee6bee60347ffa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/19213cf7c27ff98622f2b2a752ee6bee60347ffa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e810842acda6fe56e0536ebecfbb9d17d26e1513",
          "sha": "e810842acda6fe56e0536ebecfbb9d17d26e1513",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e810842acda6fe56e0536ebecfbb9d17d26e1513"
        }
      ],
      "message": "[txorphanage] add GetTx so that orphan vin can be read",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-03T14:04:10Z"
      },
      "sha": "04448ce32a3bc4b6d12293f71e40333abe35c224"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk2YzFhODIyYTI3NDY4OTYxMWY0MDkyNDZlZjE1NzM5MDZiMDA4M2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96c1a822a274689611f409246ef1573906b0083e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/96c1a822a274689611f409246ef1573906b0083e",
      "tree": {
        "sha": "1f330ebe2d92585769ede8a8714f3bb34772a9e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f330ebe2d92585769ede8a8714f3bb34772a9e2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04448ce32a3bc4b6d12293f71e40333abe35c224",
          "sha": "04448ce32a3bc4b6d12293f71e40333abe35c224",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/04448ce32a3bc4b6d12293f71e40333abe35c224"
        }
      ],
      "message": "[unit test] TxOrphanage EraseForBlock",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-07-31T09:24:39Z"
      },
      "sha": "96c1a822a274689611f409246ef1573906b0083e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIyYjAyM2IwOWRhM2UyZmUwMDQ2N2M3N2IxMDVhNjFjMTk2MTA4MWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22b023b09da3e2fe00467c77b105a61c1961081f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/22b023b09da3e2fe00467c77b105a61c1961081f",
      "tree": {
        "sha": "e45e877ed52b9c03d57a370a3b665521f63a377e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e45e877ed52b9c03d57a370a3b665521f63a377e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/96c1a822a274689611f409246ef1573906b0083e",
          "sha": "96c1a822a274689611f409246ef1573906b0083e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/96c1a822a274689611f409246ef1573906b0083e"
        }
      ],
      "message": "[unit test] multiple orphan announcers",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-03T15:44:36Z"
      },
      "sha": "22b023b09da3e2fe00467c77b105a61c1961081f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE2M2FhZjI4NWFmOTFiNDljMmQ3ODg0NjNkYzFlMTY1NGM4OGFkZTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/163aaf285af91b49c2d788463dc1e1654c88ade6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/163aaf285af91b49c2d788463dc1e1654c88ade6",
      "tree": {
        "sha": "7911f5f891b7e781929b22147adaa90099bab3c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7911f5f891b7e781929b22147adaa90099bab3c2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/22b023b09da3e2fe00467c77b105a61c1961081f",
          "sha": "22b023b09da3e2fe00467c77b105a61c1961081f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/22b023b09da3e2fe00467c77b105a61c1961081f"
        }
      ],
      "message": "[fuzz] orphanage multiple announcer functions",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-07-31T09:52:01Z"
      },
      "sha": "163aaf285af91b49c2d788463dc1e1654c88ade6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM2ODkzYjBmMGI3YjIwNWM4ZGE0YjlkMjgxYTU1YzllYjg0M2I1ODI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6893b0f0b7b205c8da4b9d281a55c9eb843b582",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c6893b0f0b7b205c8da4b9d281a55c9eb843b582",
      "tree": {
        "sha": "455006ac6cb3c2567f357deb443af9b84721ab1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/455006ac6cb3c2567f357deb443af9b84721ab1d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/163aaf285af91b49c2d788463dc1e1654c88ade6",
          "sha": "163aaf285af91b49c2d788463dc1e1654c88ade6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/163aaf285af91b49c2d788463dc1e1654c88ade6"
        }
      ],
      "message": "[txdownload] remove unique_parents that we already have\n\nThis means we no longer return parents we already have in the\nm_unique_parents result from MempoolRejectedTx.\n\nWe need to separate the loop that checks AlreadyHave parents from the\nloop that adds parents as announcements, because we may do the latter\nloop multiple times for different peers.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-11-28T11:43:08Z"
      },
      "sha": "c6893b0f0b7b205c8da4b9d281a55c9eb843b582"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDFkMmUxZDcwOWNlM2Q5NWQ0MDkyNTRjODYwMzQ3YmMzZmVkZjMwZTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d2e1d709ce3d95d409254c860347bc3fedf30e1",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1d2e1d709ce3d95d409254c860347bc3fedf30e1",
      "tree": {
        "sha": "d9bd90c501b1dcff1fa97e4ef8f3a4123a21f1c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9bd90c501b1dcff1fa97e4ef8f3a4123a21f1c1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6893b0f0b7b205c8da4b9d281a55c9eb843b582",
          "sha": "c6893b0f0b7b205c8da4b9d281a55c9eb843b582",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c6893b0f0b7b205c8da4b9d281a55c9eb843b582"
        }
      ],
      "message": "[refactor] move creation of unique_parents to helper function\n\nThis function will be reused in a later commit.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-03T14:05:04Z"
      },
      "sha": "1d2e1d709ce3d95d409254c860347bc3fedf30e1"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI2ZWE0YTlhZmUyZDhiYmY0OWI2YjZjNDJmMGEzY2U0MzkwYzQ1MzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6ea4a9afe2d8bbf49b6b6c42f0a3ce4390c4535",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b6ea4a9afe2d8bbf49b6b6c42f0a3ce4390c4535",
      "tree": {
        "sha": "bf222da3544b21cd9a26bffcc2b0a2df805603a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf222da3544b21cd9a26bffcc2b0a2df805603a7"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d2e1d709ce3d95d409254c860347bc3fedf30e1",
          "sha": "1d2e1d709ce3d95d409254c860347bc3fedf30e1",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1d2e1d709ce3d95d409254c860347bc3fedf30e1"
        }
      ],
      "message": "[p2p] try multiple peers for orphan resolution\n\nCo-authored-by: dergoegge <n.goeggi@gmail.com>",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-07-26T14:02:02Z"
      },
      "sha": "b6ea4a9afe2d8bbf49b6b6c42f0a3ce4390c4535"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBkYTY5M2Y3ZTEyOWZjY2FlY2Y5YTJjMTc3MDgzZDJlODBkMzc3ODE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0da693f7e129fccaecf9a2c177083d2e80d37781",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0da693f7e129fccaecf9a2c177083d2e80d37781",
      "tree": {
        "sha": "2b15c764b5e850939822b0455e984ebbe36c8c50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b15c764b5e850939822b0455e984ebbe36c8c50"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6ea4a9afe2d8bbf49b6b6c42f0a3ce4390c4535",
          "sha": "b6ea4a9afe2d8bbf49b6b6c42f0a3ce4390c4535",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b6ea4a9afe2d8bbf49b6b6c42f0a3ce4390c4535"
        }
      ],
      "message": "[functional test] orphan handling with multiple announcers",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-07-26T15:34:55Z"
      },
      "sha": "0da693f7e129fccaecf9a2c177083d2e80d37781"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDA2M2MxMzI0YzE0M2Q5OGU2ZDUxMDhiYjUxYjNjYTU5YjQ1ZjliODU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/063c1324c143d98e6d5108bb51b3ca59b45f9b85",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/063c1324c143d98e6d5108bb51b3ca59b45f9b85",
      "tree": {
        "sha": "3a18cc80865f57ffc7aa17d1f84647a6dd8b6111",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a18cc80865f57ffc7aa17d1f84647a6dd8b6111"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0da693f7e129fccaecf9a2c177083d2e80d37781",
          "sha": "0da693f7e129fccaecf9a2c177083d2e80d37781",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0da693f7e129fccaecf9a2c177083d2e80d37781"
        }
      ],
      "message": "[functional test] getorphantxs reflects multiple announcers",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-12-11T12:18:10Z"
      },
      "sha": "063c1324c143d98e6d5108bb51b3ca59b45f9b85"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY3NjU4ZDliMTQ3NWVjYWE1Y2I4ZTU0M2U1YzY2YTNhM2EyZGMxZmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7658d9b1475ecaa5cb8e543e5c66a3a3a2dc1fb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f7658d9b1475ecaa5cb8e543e5c66a3a3a2dc1fb",
      "tree": {
        "sha": "f5f8b7d9c62417bf02f2fd4b82190cc755ce4b17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5f8b7d9c62417bf02f2fd4b82190cc755ce4b17"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/063c1324c143d98e6d5108bb51b3ca59b45f9b85",
          "sha": "063c1324c143d98e6d5108bb51b3ca59b45f9b85",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/063c1324c143d98e6d5108bb51b3ca59b45f9b85"
        }
      ],
      "message": "[cleanup] remove p2p_inv from AddTxAnnouncement\n\nThis param is no longer needed since orphan parent requests are added to\nthe TxRequestTracker directly.",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-12-06T12:02:14Z"
      },
      "sha": "f7658d9b1475ecaa5cb8e543e5c66a3a3a2dc1fb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDg2ZDcxMzVlMzZlZmQzOTc4MWNmNGM5NjkwMTFkZjk5ZjBjYmI2OWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/86d7135e36efd39781cf4c969011df99f0cbb69d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/86d7135e36efd39781cf4c969011df99f0cbb69d",
      "tree": {
        "sha": "903f965d22babdeb141cdd909136dcdbaee2d8b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/903f965d22babdeb141cdd909136dcdbaee2d8b3"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f7658d9b1475ecaa5cb8e543e5c66a3a3a2dc1fb",
          "sha": "f7658d9b1475ecaa5cb8e543e5c66a3a3a2dc1fb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f7658d9b1475ecaa5cb8e543e5c66a3a3a2dc1fb"
        }
      ],
      "message": "[p2p] only attempt 1p1c when both txns provided by the same peer\n\nNow that we track all announcers of an orphan, it's not helpful to\nconsider an orphan provided by a peer that didn't send us this parent.\nIt can only hurt our chances of finding the right orphan when there are\nmultiple candidates.\n\nAdapt the 2 tests in p2p_opportunistic_1p1c.py that looked at 1p1c\npackages from different peers. Instead of checking that the right peer\nis punished, we now check that the package is not submitted. We can't\nuse the functional test to see that the package was not considered\nbecause the behavior is indistinguishable (except for the logs).",
      "committer": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2025-01-06T14:02:05Z"
      },
      "author": {
        "name": "glozow",
        "email": "gloriajzhao@gmail.com",
        "date": "2024-08-20T10:39:18Z"
      },
      "sha": "86d7135e36efd39781cf4c969011df99f0cbb69d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15826722786,
      "node_id": "HRFPE_lADOABII586haVlzzwAAAAOvWJ_i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15826722786",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "commit_url": "https://api.github.com/repos/glozow/bitcoin/commits/86d7135e36efd39781cf4c969011df99f0cbb69d",
      "created_at": "2025-01-06T14:17:44Z"
    },
    {
      "event": "unlabeled",
      "id": 15829521314,
      "node_id": "UNLE_lADOABII586haVlzzwAAAAOvg1Oi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15829521314",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-06T18:29:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2535162556,
      "node_id": "PRR_kwDOABII586XG4K8",
      "url": null,
      "actor": null,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 86d7135e36efd39781cf4c969011df99f0cbb69d\r\n\r\nRan all the relevant tests, including the fuzz tests for about 50 cpu hours each. The implementation here of keeping track of multiple peers that announce an orphan looks good to me. It makes sense to not be locked in to only one peer for orphan resolution, as that peer could disconnect (in which case we lose the orphan) or be malicious.\r\n\r\nJust left some non-blocking nits below.\r\n\r\nAlso quick question for my own understanding. Is it true that in the honest case, orphan resolution will probably happen with the first peer that announced it to us? The peer should have the ancestors, so those txs should be sent shortly after the orphan tx was received by us, right?",
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2535162556",
      "submitted_at": "2025-01-07T20:33:43Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
    },
    {
      "event": "review_requested",
      "id": 15843999145,
      "node_id": "RRE_lADOABII586haVlzzwAAAAOwYD2p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15843999145",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T20:33:47Z",
      "requested_reviewer": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 15843999248,
      "node_id": "RRE_lADOABII586haVlzzwAAAAOwYD4Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15843999248",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T20:33:48Z",
      "requested_reviewer": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 15843999383,
      "node_id": "RRE_lADOABII586haVlzzwAAAAOwYD6X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15843999383",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T20:33:49Z",
      "requested_reviewer": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2535269451,
      "node_id": "PRR_kwDOABII586XHSRL",
      "url": null,
      "actor": null,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "reACK 86d7135e36efd39781cf4c969011df99f0cbb69d\r\n\r\nfeel completely ok to ignore all my comments\r\n\r\nMajor change is recomputing the missing parents per announcement of orphan, rather than a static list for the lifetime of the orphan when first received, and also correctly accounting for those missing parents when deciding when to rate-limit the announcements for a specific peer..",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#pullrequestreview-2535269451",
      "submitted_at": "2025-01-07T20:36:20Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
    },
    {
      "event": "commented",
      "id": 2576185775,
      "node_id": "IC_kwDOABII586ZjXmv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2576185775",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T20:43:34Z",
      "updated_at": "2025-01-07T20:43:34Z",
      "author_association": "MEMBER",
      "body": "@marcofleon \r\n\r\n>Also quick question for my own understanding. Is it true that in the honest case, orphan resolution will probably happen with the first peer that announced it to us?\r\n\r\nIt Depends(TM). If the first announcer was an inbound connection and second was an outbound connection less than 2(?) seconds later, the outbound will be chosen first. see  the functional test case `test_orphan_handling_prefer_outbound`",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#issuecomment-2576185775",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31397"
    },
    {
      "event": "mentioned",
      "id": 15844090289,
      "node_id": "MEE_lADOABII586haVlzzwAAAAOwYaGx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15844090289",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T20:43:35Z"
    },
    {
      "event": "subscribed",
      "id": 15844090302,
      "node_id": "SE_lADOABII586haVlzzwAAAAOwYaG-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15844090302",
      "actor": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T20:43:35Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1865732564",
      "pull_request_review_id": 2472515530,
      "id": 1865732564,
      "node_id": "PRRC_kwDOABII585vNNHU",
      "diff_hunk": "@@ -12,12 +12,20 @@\n \n #include <cassert>\n \n-bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n+bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer, const std::vector<Txid>& parent_txids)\n {\n     const Txid& hash = tx->GetHash();\n     const Wtxid& wtxid = tx->GetWitnessHash();\n-    if (m_orphans.count(wtxid))\n+    auto it = m_orphans.find(wtxid);\n+    if (it != m_orphans.end()) {\n+        Assume(!it->second.announcers.empty());\n+        const auto ret = it->second.announcers.insert(peer);\n+        if (ret.second) {\n+            LogDebug(BCLog::TXPACKAGES, \"added peer=%d as announcer of orphan tx %s\\n\", peer, wtxid.ToString());\n+        }",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n    if (auto it{m_orphans.find(wtxid)}; it != m_orphans.end()) {\r\n        AddAnnouncer(wtxid, peer);\r\n```\r\n\r\nDuplicating the map lookup is better than duplicating the code imo.",
      "created_at": "2024-12-02T12:04:08Z",
      "updated_at": "2024-12-05T11:25:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1865732564",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1865732564"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866088979",
      "pull_request_review_id": 2473080499,
      "id": 1866088979,
      "node_id": "PRRC_kwDOABII585vOkIT",
      "diff_hunk": "@@ -239,20 +239,15 @@ def test_orphan_consensus_failure(self):\n         parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n         bad_orphan_sender.wait_for_getdata([parent_txid_int])\n \n-        # 3. A different peer relays the parent. Parent+Child are evaluated as a package and rejected.\n-        parent_sender.send_message(msg_tx(low_fee_parent[\"tx\"]))\n+        # 3. A different peer relays the parent. Packages is not evaluated because the transactions\n+        # were not sent from the same peer.\n+        parent_sender.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n \n         # 4. Transactions should not be in mempool.\n         node_mempool = node.getrawmempool()\n         assert low_fee_parent[\"txid\"] not in node_mempool\n         assert tx_orphan_bad_wit.rehash() not in node_mempool\n \n-        # 5. Peer that sent a consensus-invalid transaction should be disconnected.\n-        bad_orphan_sender.wait_for_disconnect()",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": 27,
      "original_position": 25,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "we should cause the disconnect still to make sure we're disconnecting on consensus failure",
      "created_at": "2024-12-02T15:45:56Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1866088979",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866088979"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866111901",
      "pull_request_review_id": 2473080499,
      "id": 1866111901,
      "node_id": "PRRC_kwDOABII585vOpud",
      "diff_hunk": "@@ -279,20 +274,17 @@ def test_parent_consensus_failure(self):\n         package_sender.wait_for_getdata([parent_txid_int])\n \n         # 3. A different node relays the parent. The parent is first evaluated by itself and\n-        # rejected for being too low feerate. Then it is evaluated as a package and, after passing\n-        # feerate checks, rejected for having a bad signature (consensus error).\n-        fake_parent_sender.send_message(msg_tx(tx_parent_bad_wit))\n+        # rejected for being too low feerate. It is not evaluated as a package because the child was\n+        # sent from a different peer, so we don't find out that the child is consensus-invalid.\n+        fake_parent_sender.send_and_ping(msg_tx(tx_parent_bad_wit))\n \n         # 4. Transactions should not be in mempool.\n         node_mempool = node.getrawmempool()\n         assert tx_parent_bad_wit.rehash() not in node_mempool\n         assert high_fee_child[\"txid\"] not in node_mempool\n \n-        # 5. Peer sent a consensus-invalid transaction.\n-        fake_parent_sender.wait_for_disconnect()\n-\n         self.log.info(\"Check that fake parent does not cause orphan to be deleted and real package can still be submitted\")\n-        # 6. Child-sending should not have been punished and the orphan should remain in orphanage.\n+        # 5. Child-sending should not have been punished and the orphan should remain in orphanage.",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": 51,
      "original_position": 54,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "while we're touching this, we can directly assert via getorphantxs now",
      "created_at": "2024-12-02T15:58:56Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1866111901",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866111901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 294,
      "original_line": 294,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866113157",
      "pull_request_review_id": 2473080499,
      "id": 1866113157,
      "node_id": "PRRC_kwDOABII585vOqCF",
      "diff_hunk": "@@ -356,34 +358,6 @@ std::optional<PackageToValidate> TxDownloadManagerImpl::Find1P1CPackage(const CT\n             return PackageToValidate{ptx, child, nodeid, nodeid};\n         }\n     }\n-\n-    // If no suitable candidate from the same peer is found, also try children that were provided by",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 112,
      "original_position": 19,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "3e16a36959f70da59846621f099c1f1df4a210ed love this cleanup of logic :)",
      "created_at": "2024-12-02T15:59:40Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1866113157",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1866113157"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 262,
      "original_line": 262,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868058869",
      "pull_request_review_id": 2473080499,
      "id": 1868058869,
      "node_id": "PRRC_kwDOABII585vWFD1",
      "diff_hunk": "@@ -308,7 +308,7 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n     // Whether we should call AddToCompactExtraTransactions at the end\n     bool add_extra_compact_tx{first_time_failure};\n     // Hashes to pass to AddKnownTx later\n-    std::vector<uint256> unique_parents;\n+    std::vector<Txid> unique_parents;",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 169,
      "original_position": 5,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "938659fbd8304ccc948e04d797a4a9d8cf669d3e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: could also adapt the for loop over `unique_parents` in `ProcessInvalidTx`",
      "created_at": "2024-12-03T16:40:09Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1868058869",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868058869"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 357,
      "original_line": 357,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868116284",
      "pull_request_review_id": 2473080499,
      "id": 1868116284,
      "node_id": "PRRC_kwDOABII585vWTE8",
      "diff_hunk": "@@ -84,6 +89,8 @@ class TxOrphanage {\n protected:\n     struct OrphanTx : public OrphanTxBase {\n         size_t list_pos;\n+        /** Txids of the missing parents to request. Determined by peerman. */",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 27,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "7badc7e004e288aef645404b1b09699be8b87d1e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "as of introduction commit 7badc7e004e288aef645404b1b09699be8b87d1e this is storing all parent txids, missing or not. ",
      "created_at": "2024-12-03T17:17:28Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1868116284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868116284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868119567",
      "pull_request_review_id": 2473080499,
      "id": 1868119567,
      "node_id": "PRRC_kwDOABII585vWT4P",
      "diff_hunk": "@@ -135,7 +135,7 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n         tx.vout[0].nValue = 1*CENT;\n         tx.vout[0].scriptPubKey = GetScriptForDestination(PKHash(key.GetPubKey()));\n \n-        orphanage.AddTx(MakeTransactionRef(tx), i);\n+        orphanage.AddTx(MakeTransactionRef(tx), i, {});",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "7badc7e004e288aef645404b1b09699be8b87d1e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "7badc7e004e288aef645404b1b09699be8b87d1e In this test and the fuzz harness, I'm not sure I'm happy with this new field sometimes being populated and sometimes not.\r\n\r\nCould you make a test util that automatically fills in this argument properly via just looking at the tx inputs?",
      "created_at": "2024-12-03T17:19:52Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1868119567",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868119567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868130046",
      "pull_request_review_id": 2473080499,
      "id": 1868130046,
      "node_id": "PRRC_kwDOABII585vWWb-",
      "diff_hunk": "@@ -152,6 +183,12 @@ bool TxOrphanage::HaveTx(const Wtxid& wtxid) const\n     return m_orphans.count(wtxid);\n }\n \n+bool TxOrphanage::HaveTxAndPeer(const Wtxid& wtxid, NodeId peer) const",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 95,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "acaa7c13fac3e35a55daf2c62c27ab85172b4964",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`s/HaveTxAndPeer/HaveTxFromPeer/` or similar?",
      "created_at": "2024-12-03T17:26:36Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1868130046",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868130046"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868133288",
      "pull_request_review_id": 2473080499,
      "id": 1868133288,
      "node_id": "PRRC_kwDOABII585vWXOo",
      "diff_hunk": "@@ -80,7 +90,8 @@ class TxOrphanage {\n     /** Allows providing orphan information externally */\n     struct OrphanTxBase {\n         CTransactionRef tx;\n-        NodeId fromPeer;\n+        /** Peers added with AddTx or AddAnnouncer. */",
      "path": "src/txorphanage.h",
      "position": 44,
      "original_position": 41,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "acaa7c13fac3e35a55daf2c62c27ab85172b4964",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "noting as of acaa7c13fac3e35a55daf2c62c27ab85172b4964 `AddAnnouncer` isnt called\r\n\r\n~3~ 2 cases?\r\n\r\n1. announced as INV (AddAnnouncer @ c04d1a876cdbcd159c53dde55d57a55675c41f38)\r\n~2. parent of another orphan given (?)~ because txid, not wtxid\r\n3. given directly (AddTx on all tracked advertisements of it too)",
      "created_at": "2024-12-03T17:28:18Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1868133288",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868133288"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 83,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868152050",
      "pull_request_review_id": 2473080499,
      "id": 1868152050,
      "node_id": "PRRC_kwDOABII585vWbzy",
      "diff_hunk": "@@ -16,8 +16,16 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer, const std::vecto\n {\n     const Txid& hash = tx->GetHash();\n     const Wtxid& wtxid = tx->GetWitnessHash();\n-    if (m_orphans.count(wtxid))\n+    auto it = m_orphans.find(wtxid);\n+    if (it != m_orphans.end()) {\n+        Assume(!it->second.announcers.empty());\n+        const auto ret = it->second.announcers.insert(peer);\n+        if (ret.second) {\n+            LogDebug(BCLog::TXPACKAGES, \"added peer=%d as announcer of orphan tx %s\\n\", peer, wtxid.ToString());\n+        }\n+        // Even if an announcer was added, no new orphan entry was created.",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "acaa7c13fac3e35a55daf2c62c27ab85172b4964",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```Suggestion\r\n        // Since an additional announcer was added, no new orphan entry was created.\r\n```",
      "created_at": "2024-12-03T17:40:34Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1868152050",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868152050"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868163720",
      "pull_request_review_id": 2473080499,
      "id": 1868163720,
      "node_id": "PRRC_kwDOABII585vWeqI",
      "diff_hunk": "@@ -124,36 +124,41 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     if (nErased > 0) LogDebug(BCLog::TXPACKAGES, \"Erased %d orphan transaction(s) from peer=%d\\n\", nErased, peer);\n }\n \n-void TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)\n+std::vector<Wtxid> TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    std::vector<Wtxid> erased_and_evicted;\n     unsigned int nEvicted = 0;\n     auto nNow{Now<NodeSeconds>()};\n     if (m_next_sweep <= nNow) {\n         // Sweep out expired orphan pool entries:\n-        int nErased = 0;\n         auto nMinExpTime{nNow + ORPHAN_TX_EXPIRE_TIME - ORPHAN_TX_EXPIRE_INTERVAL};\n         std::map<Wtxid, OrphanTx>::iterator iter = m_orphans.begin();\n         while (iter != m_orphans.end())\n         {\n             std::map<Wtxid, OrphanTx>::iterator maybeErase = iter++;\n             if (maybeErase->second.nTimeExpire <= nNow) {\n-                nErased += EraseTx(maybeErase->second.tx->GetWitnessHash());\n+                const auto& wtxid = maybeErase->second.tx->GetWitnessHash();",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "83d276c7dd789ab7cf332a4ebbc7ed215340de8c",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "isn't MaybeErase.first the wtxid?",
      "created_at": "2024-12-03T17:48:43Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1868163720",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868163720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868164820",
      "pull_request_review_id": 2473080499,
      "id": 1868164820,
      "node_id": "PRRC_kwDOABII585vWe7U",
      "diff_hunk": "@@ -124,36 +124,41 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     if (nErased > 0) LogDebug(BCLog::TXPACKAGES, \"Erased %d orphan transaction(s) from peer=%d\\n\", nErased, peer);\n }\n \n-void TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)\n+std::vector<Wtxid> TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    std::vector<Wtxid> erased_and_evicted;\n     unsigned int nEvicted = 0;\n     auto nNow{Now<NodeSeconds>()};\n     if (m_next_sweep <= nNow) {\n         // Sweep out expired orphan pool entries:\n-        int nErased = 0;\n         auto nMinExpTime{nNow + ORPHAN_TX_EXPIRE_TIME - ORPHAN_TX_EXPIRE_INTERVAL};\n         std::map<Wtxid, OrphanTx>::iterator iter = m_orphans.begin();\n         while (iter != m_orphans.end())\n         {\n             std::map<Wtxid, OrphanTx>::iterator maybeErase = iter++;\n             if (maybeErase->second.nTimeExpire <= nNow) {\n-                nErased += EraseTx(maybeErase->second.tx->GetWitnessHash());\n+                const auto& wtxid = maybeErase->second.tx->GetWitnessHash();\n+                erased_and_evicted.emplace_back(wtxid);\n+                EraseTx(wtxid);\n             } else {\n                 nMinExpTime = std::min(maybeErase->second.nTimeExpire, nMinExpTime);\n             }\n         }\n         // Sweep again 5 minutes after the next entry that expires in order to batch the linear scan.\n         m_next_sweep = nMinExpTime + ORPHAN_TX_EXPIRE_INTERVAL;\n-        if (nErased > 0) LogDebug(BCLog::TXPACKAGES, \"Erased %d orphan tx due to expiration\\n\", nErased);\n+        if (!erased_and_evicted.empty()) LogDebug(BCLog::TXPACKAGES, \"Erased %d orphan tx due to expiration\\n\", erased_and_evicted.size());\n     }\n     while (m_orphans.size() > max_orphans)\n     {\n         // Evict a random orphan:\n         size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->second.tx->GetWitnessHash());\n+        const auto& wtxid = m_orphan_list[randompos]->second.tx->GetWitnessHash();",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "83d276c7dd789ab7cf332a4ebbc7ed215340de8c",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "not much shorter but `m_orphan_list[randompos]->first` is wtxid?",
      "created_at": "2024-12-03T17:49:37Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1868164820",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868164820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868195381",
      "pull_request_review_id": 2473080499,
      "id": 1868195381,
      "node_id": "PRRC_kwDOABII585vWmY1",
      "diff_hunk": "@@ -348,6 +348,12 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n                 }\n             }\n             if (!fRejectedParents) {",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 191,
      "original_position": 3,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "b64be9ed2ce9b68aef178684dac3be998f18bbdd",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "commit message b64be9ed2ce9b68aef178684dac3be998f18bbdd\r\n\r\n\"announcments,\"",
      "created_at": "2024-12-03T18:14:37Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1868195381",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868195381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 390,
      "original_line": 390,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868211986",
      "pull_request_review_id": 2473080499,
      "id": 1868211986,
      "node_id": "PRRC_kwDOABII585vWqcS",
      "diff_hunk": "@@ -174,10 +180,27 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "c04d1a876cdbcd159c53dde55d57a55675c41f38",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "as of c04d1a876cdbcd159c53dde55d57a55675c41f38 `p2p_inv=false` has no usage aside from fuzz harness",
      "created_at": "2024-12-03T18:29:06Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1868211986",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868211986"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 181,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868238484",
      "pull_request_review_id": 2473080499,
      "id": 1868238484,
      "node_id": "PRRC_kwDOABII585vWw6U",
      "diff_hunk": "@@ -174,10 +180,27 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\n {\n+    // If this is an inv received from a peer but it's an orphan we are trying to resolve, instead\n+    // of adding it to m_txrequest, remember this peer as a potential orphan resolution candidate.\n+    if (p2p_inv && m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) {\n+        // m_orphan_resolution_tracker only tracks wtxids\n+        if (gtxid.IsWtxid()) {\n+            if (auto delay{OrphanResolutionCandidate(peer, Wtxid::FromUint256(gtxid.GetHash()))}) {\n+                const auto& info = m_peer_info.at(peer).m_connection_info;\n+                m_orphanage.AddAnnouncer(Wtxid::FromUint256(gtxid.GetHash()), peer);\n+                m_orphan_resolution_tracker.ReceivedInv(peer, GenTxid::Wtxid(gtxid.GetHash()), info.m_preferred, now + *delay);\n+                LogDebug(BCLog::TXPACKAGES, \"added peer=%d as a candidate for resolving orphan %s\\n\", peer, gtxid.GetHash().ToString());\n+            }\n+        }\n+        return true;\n+    }\n+\n+    const bool already_had{AlreadyHaveTx(gtxid, /*include_reconsiderable=*/true)};\n+\n     // If this is an inv received from a peer and we already have it, we can drop it.\n     // If this is a request for the parent of an orphan, we don't drop transactions that we already have. In particular,\n     // we *do* want to request parents that are in m_lazy_recent_rejects_reconsiderable, since they can be CPFP'd.",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "c04d1a876cdbcd159c53dde55d57a55675c41f38",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "these comments seem outdated since AddTxAnnouncement is only being called for explicit INV related reasons now",
      "created_at": "2024-12-03T18:52:14Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1868238484",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868238484"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868239989",
      "pull_request_review_id": 2473080499,
      "id": 1868239989,
      "node_id": "PRRC_kwDOABII585vWxR1",
      "diff_hunk": "@@ -174,10 +180,27 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\n {\n+    // If this is an inv received from a peer but it's an orphan we are trying to resolve, instead\n+    // of adding it to m_txrequest, remember this peer as a potential orphan resolution candidate.\n+    if (p2p_inv && m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) {\n+        // m_orphan_resolution_tracker only tracks wtxids\n+        if (gtxid.IsWtxid()) {\n+            if (auto delay{OrphanResolutionCandidate(peer, Wtxid::FromUint256(gtxid.GetHash()))}) {\n+                const auto& info = m_peer_info.at(peer).m_connection_info;\n+                m_orphanage.AddAnnouncer(Wtxid::FromUint256(gtxid.GetHash()), peer);\n+                m_orphan_resolution_tracker.ReceivedInv(peer, GenTxid::Wtxid(gtxid.GetHash()), info.m_preferred, now + *delay);\n+                LogDebug(BCLog::TXPACKAGES, \"added peer=%d as a candidate for resolving orphan %s\\n\", peer, gtxid.GetHash().ToString());\n+            }\n+        }\n+        return true;\n+    }\n+\n+    const bool already_had{AlreadyHaveTx(gtxid, /*include_reconsiderable=*/true)};",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "c04d1a876cdbcd159c53dde55d57a55675c41f38",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`already_had` used exactly once, seems like we don't need it",
      "created_at": "2024-12-03T18:53:38Z",
      "updated_at": "2024-12-05T13:34:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1868239989",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1868239989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869654727",
      "pull_request_review_id": 2478886117,
      "id": 1869654727,
      "node_id": "PRRC_kwDOABII585vcKrH",
      "diff_hunk": "@@ -204,8 +227,83 @@ bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid,\n     return false;\n }\n \n+std::optional<std::chrono::seconds> TxDownloadManagerImpl::OrphanResolutionCandidate(NodeId nodeid, const Wtxid& orphan_wtxid)\n+{\n+    if (m_peer_info.count(nodeid) == 0) return std::nullopt;\n+\n+    const auto& peer_entry = m_peer_info.at(nodeid);\n+    const auto& info = peer_entry.m_connection_info;\n+    // TODO: add delays and limits based on the amount of orphan resolution we are already doing\n+    // with this peer, how much they are using the orphanage, etc.\n+    if (!info.m_relay_permissions) {\n+        // This mirrors the delaying and dropping behavior in AddTxAnnouncement in order to preserve\n+        // existing behavior: drop if we are tracking too many invs for this peer already. Each\n+        // orphan resolution involves at least 1 transaction request which may or may not be\n+        // currently tracked in m_txrequest, so we include that in the count.\n+        if (m_txrequest.Count(nodeid) + m_orphan_resolution_tracker.Count(nodeid) >= MAX_PEER_TX_ANNOUNCEMENTS) return std::nullopt;",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "in_reply_to_id": null,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, need to add the size of `unique_parents` to this. Surprised fuzzer has not tripped on it...",
      "created_at": "2024-12-04T14:34:41Z",
      "updated_at": "2024-12-04T14:34:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1869654727",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1869654727"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 243,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871051453",
      "pull_request_review_id": 2472515530,
      "id": 1871051453,
      "node_id": "PRRC_kwDOABII585vhfq9",
      "diff_hunk": "@@ -624,6 +625,74 @@ def test_max_orphan_amount(self):\n             peer_1.send_and_ping(msg_tx(parent_orphan))\n         assert_equal(len(node.getorphantxs()),0)\n \n+    @cleanup\n+    def test_orphan_handling_prefer_outbound(self):\n+        self.log.info(\"Test that the node prefers requesting from outbound peers\")\n+        node = self.nodes[0]\n+        orphan_wtxid, orphan_tx, parent_tx = self.create_parent_and_child()\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        peer_inbound = node.add_p2p_connection(PeerTxRelayer())\n+        peer_outbound = node.add_outbound_p2p_connection(PeerTxRelayer(), p2p_idx=1)\n+\n+        # Inbound peer relays the transaction.\n+        peer_inbound.send_and_ping(msg_inv([orphan_inv]))\n+        self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n+        peer_inbound.wait_for_getdata([int(orphan_wtxid, 16)])\n+\n+        # Both peers send invs for the orphan, so the node can expect both to know its ancestors.\n+        peer_outbound.send_and_ping(msg_inv([orphan_inv]))\n+\n+        # The outbound peer should be preferred for getting orphan parents\n+        peer_inbound.send_and_ping(msg_tx(orphan_tx))\n+        self.nodes[0].bumpmocktime(TXID_RELAY_DELAY)\n+        peer_outbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+        # There should be no request to the inbound peer\n+        peer_inbound.assert_never_requested(int(parent_tx.rehash(), 16))\n+\n+        self.log.info(\"Test that, if the preferred peer doesn't respond, the node sends another request\")\n+        self.nodes[0].bumpmocktime(ORPHAN_ANCESTOR_GETDATA_INTERVAL)\n+        peer_inbound.sync_with_ping()\n+        peer_inbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+    @cleanup\n+    def test_announcers_before_and_after(self):\n+        self.log.info(\"Test that the node uses all peers who announced the tx prior to realizing it's an orphan\")\n+        node = self.nodes[0]\n+        orphan_wtxid, orphan_tx, parent_tx = self.create_parent_and_child()\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Announces before tx is sent, disconnects while node is requesting parents\n+        peer_early_disconnected = node.add_outbound_p2p_connection(PeerTxRelayer(), p2p_idx=3)\n+        # Announces before tx is sent, doesn't respond to parent request\n+        peer_early_unresponsive = node.add_p2p_connection(PeerTxRelayer())\n+\n+        # Announces after tx is sent\n+        peer_late_announcer = node.add_p2p_connection(PeerTxRelayer())\n+\n+        # Both peers send invs for the orphan, so the node an expect both to know its ancestors.",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": null,
      "original_position": 58,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n        # Both peers send invs for the orphan, so the node can expect both to know its ancestors.\r\n```",
      "created_at": "2024-12-05T10:06:40Z",
      "updated_at": "2024-12-05T11:25:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1871051453",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871051453"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 674,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873201629",
      "pull_request_review_id": 2484617926,
      "id": 1873201629,
      "node_id": "PRRC_kwDOABII585vpsnd",
      "diff_hunk": "@@ -356,34 +358,6 @@ std::optional<PackageToValidate> TxDownloadManagerImpl::Find1P1CPackage(const CT\n             return PackageToValidate{ptx, child, nodeid, nodeid};\n         }\n     }\n-\n-    // If no suitable candidate from the same peer is found, also try children that were provided by",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 112,
      "original_position": 19,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "in_reply_to_id": 1866113157,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's why I made them separate functions! Easy deletion.",
      "created_at": "2024-12-06T11:55:10Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873201629",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873201629"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 262,
      "original_line": 262,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873212631",
      "pull_request_review_id": 2484617926,
      "id": 1873212631,
      "node_id": "PRRC_kwDOABII585vpvTX",
      "diff_hunk": "@@ -348,6 +348,12 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n                 }\n             }\n             if (!fRejectedParents) {",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 191,
      "original_position": 3,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "b64be9ed2ce9b68aef178684dac3be998f18bbdd",
      "in_reply_to_id": 1868195381,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fixed",
      "created_at": "2024-12-06T11:57:23Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873212631",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873212631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 390,
      "original_line": 390,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873213296",
      "pull_request_review_id": 2484617926,
      "id": 1873213296,
      "node_id": "PRRC_kwDOABII585vpvdw",
      "diff_hunk": "@@ -204,8 +227,83 @@ bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid,\n     return false;\n }\n \n+std::optional<std::chrono::seconds> TxDownloadManagerImpl::OrphanResolutionCandidate(NodeId nodeid, const Wtxid& orphan_wtxid)\n+{\n+    if (m_peer_info.count(nodeid) == 0) return std::nullopt;\n+\n+    const auto& peer_entry = m_peer_info.at(nodeid);\n+    const auto& info = peer_entry.m_connection_info;\n+    // TODO: add delays and limits based on the amount of orphan resolution we are already doing\n+    // with this peer, how much they are using the orphanage, etc.\n+    if (!info.m_relay_permissions) {\n+        // This mirrors the delaying and dropping behavior in AddTxAnnouncement in order to preserve\n+        // existing behavior: drop if we are tracking too many invs for this peer already. Each\n+        // orphan resolution involves at least 1 transaction request which may or may not be\n+        // currently tracked in m_txrequest, so we include that in the count.\n+        if (m_txrequest.Count(nodeid) + m_orphan_resolution_tracker.Count(nodeid) >= MAX_PEER_TX_ANNOUNCEMENTS) return std::nullopt;",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "in_reply_to_id": 1869654727,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "deleted, no longer applicable",
      "created_at": "2024-12-06T11:57:34Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873213296",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873213296"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 243,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873231864",
      "pull_request_review_id": 2484617926,
      "id": 1873231864,
      "node_id": "PRRC_kwDOABII585vpz_4",
      "diff_hunk": "@@ -174,10 +180,27 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 24,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "c04d1a876cdbcd159c53dde55d57a55675c41f38",
      "in_reply_to_id": 1868211986,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "added a commit to clean this up",
      "created_at": "2024-12-06T12:01:14Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873231864",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873231864"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 181,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873231985",
      "pull_request_review_id": 2484617926,
      "id": 1873231985,
      "node_id": "PRRC_kwDOABII585vp0Bx",
      "diff_hunk": "@@ -174,10 +180,27 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\n {\n+    // If this is an inv received from a peer but it's an orphan we are trying to resolve, instead\n+    // of adding it to m_txrequest, remember this peer as a potential orphan resolution candidate.\n+    if (p2p_inv && m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) {\n+        // m_orphan_resolution_tracker only tracks wtxids\n+        if (gtxid.IsWtxid()) {\n+            if (auto delay{OrphanResolutionCandidate(peer, Wtxid::FromUint256(gtxid.GetHash()))}) {\n+                const auto& info = m_peer_info.at(peer).m_connection_info;\n+                m_orphanage.AddAnnouncer(Wtxid::FromUint256(gtxid.GetHash()), peer);\n+                m_orphan_resolution_tracker.ReceivedInv(peer, GenTxid::Wtxid(gtxid.GetHash()), info.m_preferred, now + *delay);\n+                LogDebug(BCLog::TXPACKAGES, \"added peer=%d as a candidate for resolving orphan %s\\n\", peer, gtxid.GetHash().ToString());\n+            }\n+        }\n+        return true;\n+    }\n+\n+    const bool already_had{AlreadyHaveTx(gtxid, /*include_reconsiderable=*/true)};",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 41,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "c04d1a876cdbcd159c53dde55d57a55675c41f38",
      "in_reply_to_id": 1868239989,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "cleaned up",
      "created_at": "2024-12-06T12:01:19Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873231985",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873231985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 198,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873232108",
      "pull_request_review_id": 2484617926,
      "id": 1873232108,
      "node_id": "PRRC_kwDOABII585vp0Ds",
      "diff_hunk": "@@ -174,10 +180,27 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\n {\n+    // If this is an inv received from a peer but it's an orphan we are trying to resolve, instead\n+    // of adding it to m_txrequest, remember this peer as a potential orphan resolution candidate.\n+    if (p2p_inv && m_orphanage.HaveTx(Wtxid::FromUint256(gtxid.GetHash()))) {\n+        // m_orphan_resolution_tracker only tracks wtxids\n+        if (gtxid.IsWtxid()) {\n+            if (auto delay{OrphanResolutionCandidate(peer, Wtxid::FromUint256(gtxid.GetHash()))}) {\n+                const auto& info = m_peer_info.at(peer).m_connection_info;\n+                m_orphanage.AddAnnouncer(Wtxid::FromUint256(gtxid.GetHash()), peer);\n+                m_orphan_resolution_tracker.ReceivedInv(peer, GenTxid::Wtxid(gtxid.GetHash()), info.m_preferred, now + *delay);\n+                LogDebug(BCLog::TXPACKAGES, \"added peer=%d as a candidate for resolving orphan %s\\n\", peer, gtxid.GetHash().ToString());\n+            }\n+        }\n+        return true;\n+    }\n+\n+    const bool already_had{AlreadyHaveTx(gtxid, /*include_reconsiderable=*/true)};\n+\n     // If this is an inv received from a peer and we already have it, we can drop it.\n     // If this is a request for the parent of an orphan, we don't drop transactions that we already have. In particular,\n     // we *do* want to request parents that are in m_lazy_recent_rejects_reconsiderable, since they can be CPFP'd.",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "c04d1a876cdbcd159c53dde55d57a55675c41f38",
      "in_reply_to_id": 1868238484,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "cleaned up",
      "created_at": "2024-12-06T12:01:25Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873232108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873232108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873232567",
      "pull_request_review_id": 2484617926,
      "id": 1873232567,
      "node_id": "PRRC_kwDOABII585vp0K3",
      "diff_hunk": "@@ -12,12 +12,20 @@\n \n #include <cassert>\n \n-bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer)\n+bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer, const std::vector<Txid>& parent_txids)\n {\n     const Txid& hash = tx->GetHash();\n     const Wtxid& wtxid = tx->GetWitnessHash();\n-    if (m_orphans.count(wtxid))\n+    auto it = m_orphans.find(wtxid);\n+    if (it != m_orphans.end()) {\n+        Assume(!it->second.announcers.empty());\n+        const auto ret = it->second.announcers.insert(peer);\n+        if (ret.second) {\n+            LogDebug(BCLog::TXPACKAGES, \"added peer=%d as announcer of orphan tx %s\\n\", peer, wtxid.ToString());\n+        }",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 16,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "in_reply_to_id": 1865732564,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "largely agree, done",
      "created_at": "2024-12-06T12:01:43Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873232567",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873232567"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": 19,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 25,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873236208",
      "pull_request_review_id": 2484617926,
      "id": 1873236208,
      "node_id": "PRRC_kwDOABII585vp1Dw",
      "diff_hunk": "@@ -16,8 +16,16 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer, const std::vecto\n {\n     const Txid& hash = tx->GetHash();\n     const Wtxid& wtxid = tx->GetWitnessHash();\n-    if (m_orphans.count(wtxid))\n+    auto it = m_orphans.find(wtxid);\n+    if (it != m_orphans.end()) {\n+        Assume(!it->second.announcers.empty());\n+        const auto ret = it->second.announcers.insert(peer);\n+        if (ret.second) {\n+            LogDebug(BCLog::TXPACKAGES, \"added peer=%d as announcer of orphan tx %s\\n\", peer, wtxid.ToString());\n+        }\n+        // Even if an announcer was added, no new orphan entry was created.",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "acaa7c13fac3e35a55daf2c62c27ab85172b4964",
      "in_reply_to_id": 1868152050,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We haven't necessarily added an announcer. But I updated this comment.",
      "created_at": "2024-12-06T12:05:04Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873236208",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873236208"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 26,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873237320",
      "pull_request_review_id": 2484617926,
      "id": 1873237320,
      "node_id": "PRRC_kwDOABII585vp1VI",
      "diff_hunk": "@@ -124,36 +124,41 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     if (nErased > 0) LogDebug(BCLog::TXPACKAGES, \"Erased %d orphan transaction(s) from peer=%d\\n\", nErased, peer);\n }\n \n-void TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)\n+std::vector<Wtxid> TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    std::vector<Wtxid> erased_and_evicted;\n     unsigned int nEvicted = 0;\n     auto nNow{Now<NodeSeconds>()};\n     if (m_next_sweep <= nNow) {\n         // Sweep out expired orphan pool entries:\n-        int nErased = 0;\n         auto nMinExpTime{nNow + ORPHAN_TX_EXPIRE_TIME - ORPHAN_TX_EXPIRE_INTERVAL};\n         std::map<Wtxid, OrphanTx>::iterator iter = m_orphans.begin();\n         while (iter != m_orphans.end())\n         {\n             std::map<Wtxid, OrphanTx>::iterator maybeErase = iter++;\n             if (maybeErase->second.nTimeExpire <= nNow) {\n-                nErased += EraseTx(maybeErase->second.tx->GetWitnessHash());\n+                const auto& wtxid = maybeErase->second.tx->GetWitnessHash();",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "83d276c7dd789ab7cf332a4ebbc7ed215340de8c",
      "in_reply_to_id": 1868163720,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "switched",
      "created_at": "2024-12-06T12:06:18Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873237320",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873237320"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 140,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873237986",
      "pull_request_review_id": 2484617926,
      "id": 1873237986,
      "node_id": "PRRC_kwDOABII585vp1fi",
      "diff_hunk": "@@ -124,36 +124,41 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     if (nErased > 0) LogDebug(BCLog::TXPACKAGES, \"Erased %d orphan transaction(s) from peer=%d\\n\", nErased, peer);\n }\n \n-void TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)\n+std::vector<Wtxid> TxOrphanage::LimitOrphans(unsigned int max_orphans, FastRandomContext& rng)\n {\n+    std::vector<Wtxid> erased_and_evicted;\n     unsigned int nEvicted = 0;\n     auto nNow{Now<NodeSeconds>()};\n     if (m_next_sweep <= nNow) {\n         // Sweep out expired orphan pool entries:\n-        int nErased = 0;\n         auto nMinExpTime{nNow + ORPHAN_TX_EXPIRE_TIME - ORPHAN_TX_EXPIRE_INTERVAL};\n         std::map<Wtxid, OrphanTx>::iterator iter = m_orphans.begin();\n         while (iter != m_orphans.end())\n         {\n             std::map<Wtxid, OrphanTx>::iterator maybeErase = iter++;\n             if (maybeErase->second.nTimeExpire <= nNow) {\n-                nErased += EraseTx(maybeErase->second.tx->GetWitnessHash());\n+                const auto& wtxid = maybeErase->second.tx->GetWitnessHash();\n+                erased_and_evicted.emplace_back(wtxid);\n+                EraseTx(wtxid);\n             } else {\n                 nMinExpTime = std::min(maybeErase->second.nTimeExpire, nMinExpTime);\n             }\n         }\n         // Sweep again 5 minutes after the next entry that expires in order to batch the linear scan.\n         m_next_sweep = nMinExpTime + ORPHAN_TX_EXPIRE_INTERVAL;\n-        if (nErased > 0) LogDebug(BCLog::TXPACKAGES, \"Erased %d orphan tx due to expiration\\n\", nErased);\n+        if (!erased_and_evicted.empty()) LogDebug(BCLog::TXPACKAGES, \"Erased %d orphan tx due to expiration\\n\", erased_and_evicted.size());\n     }\n     while (m_orphans.size() > max_orphans)\n     {\n         // Evict a random orphan:\n         size_t randompos = rng.randrange(m_orphan_list.size());\n-        EraseTx(m_orphan_list[randompos]->second.tx->GetWitnessHash());\n+        const auto& wtxid = m_orphan_list[randompos]->second.tx->GetWitnessHash();",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "83d276c7dd789ab7cf332a4ebbc7ed215340de8c",
      "in_reply_to_id": 1868164820,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2024-12-06T12:07:02Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873237986",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873237986"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 155,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873241172",
      "pull_request_review_id": 2484617926,
      "id": 1873241172,
      "node_id": "PRRC_kwDOABII585vp2RU",
      "diff_hunk": "@@ -152,6 +183,12 @@ bool TxOrphanage::HaveTx(const Wtxid& wtxid) const\n     return m_orphans.count(wtxid);\n }\n \n+bool TxOrphanage::HaveTxAndPeer(const Wtxid& wtxid, NodeId peer) const",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 95,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "acaa7c13fac3e35a55daf2c62c27ab85172b4964",
      "in_reply_to_id": 1868130046,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "changed",
      "created_at": "2024-12-06T12:09:44Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873241172",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873241172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873241932",
      "pull_request_review_id": 2484617926,
      "id": 1873241932,
      "node_id": "PRRC_kwDOABII585vp2dM",
      "diff_hunk": "@@ -239,20 +239,15 @@ def test_orphan_consensus_failure(self):\n         parent_txid_int = int(low_fee_parent[\"txid\"], 16)\n         bad_orphan_sender.wait_for_getdata([parent_txid_int])\n \n-        # 3. A different peer relays the parent. Parent+Child are evaluated as a package and rejected.\n-        parent_sender.send_message(msg_tx(low_fee_parent[\"tx\"]))\n+        # 3. A different peer relays the parent. Packages is not evaluated because the transactions\n+        # were not sent from the same peer.\n+        parent_sender.send_and_ping(msg_tx(low_fee_parent[\"tx\"]))\n \n         # 4. Transactions should not be in mempool.\n         node_mempool = node.getrawmempool()\n         assert low_fee_parent[\"txid\"] not in node_mempool\n         assert tx_orphan_bad_wit.rehash() not in node_mempool\n \n-        # 5. Peer that sent a consensus-invalid transaction should be disconnected.\n-        bad_orphan_sender.wait_for_disconnect()",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": 27,
      "original_position": 25,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "in_reply_to_id": 1866088979,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, added a line where this sender sends the parent too",
      "created_at": "2024-12-06T12:10:27Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873241932",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873241932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873252743",
      "pull_request_review_id": 2484617926,
      "id": 1873252743,
      "node_id": "PRRC_kwDOABII585vp5GH",
      "diff_hunk": "@@ -80,7 +90,8 @@ class TxOrphanage {\n     /** Allows providing orphan information externally */\n     struct OrphanTxBase {\n         CTransactionRef tx;\n-        NodeId fromPeer;\n+        /** Peers added with AddTx or AddAnnouncer. */",
      "path": "src/txorphanage.h",
      "position": 44,
      "original_position": 41,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "acaa7c13fac3e35a55daf2c62c27ab85172b4964",
      "in_reply_to_id": 1868133288,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Correct. I think this is not too misleading? Added \"unused for now\" in the commit messages.",
      "created_at": "2024-12-06T12:20:06Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873252743",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873252743"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 83,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873258530",
      "pull_request_review_id": 2484617926,
      "id": 1873258530,
      "node_id": "PRRC_kwDOABII585vp6gi",
      "diff_hunk": "@@ -624,6 +625,74 @@ def test_max_orphan_amount(self):\n             peer_1.send_and_ping(msg_tx(parent_orphan))\n         assert_equal(len(node.getorphantxs()),0)\n \n+    @cleanup\n+    def test_orphan_handling_prefer_outbound(self):\n+        self.log.info(\"Test that the node prefers requesting from outbound peers\")\n+        node = self.nodes[0]\n+        orphan_wtxid, orphan_tx, parent_tx = self.create_parent_and_child()\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        peer_inbound = node.add_p2p_connection(PeerTxRelayer())\n+        peer_outbound = node.add_outbound_p2p_connection(PeerTxRelayer(), p2p_idx=1)\n+\n+        # Inbound peer relays the transaction.\n+        peer_inbound.send_and_ping(msg_inv([orphan_inv]))\n+        self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n+        peer_inbound.wait_for_getdata([int(orphan_wtxid, 16)])\n+\n+        # Both peers send invs for the orphan, so the node can expect both to know its ancestors.\n+        peer_outbound.send_and_ping(msg_inv([orphan_inv]))\n+\n+        # The outbound peer should be preferred for getting orphan parents\n+        peer_inbound.send_and_ping(msg_tx(orphan_tx))\n+        self.nodes[0].bumpmocktime(TXID_RELAY_DELAY)\n+        peer_outbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+        # There should be no request to the inbound peer\n+        peer_inbound.assert_never_requested(int(parent_tx.rehash(), 16))\n+\n+        self.log.info(\"Test that, if the preferred peer doesn't respond, the node sends another request\")\n+        self.nodes[0].bumpmocktime(ORPHAN_ANCESTOR_GETDATA_INTERVAL)\n+        peer_inbound.sync_with_ping()\n+        peer_inbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+    @cleanup\n+    def test_announcers_before_and_after(self):\n+        self.log.info(\"Test that the node uses all peers who announced the tx prior to realizing it's an orphan\")\n+        node = self.nodes[0]\n+        orphan_wtxid, orphan_tx, parent_tx = self.create_parent_and_child()\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Announces before tx is sent, disconnects while node is requesting parents\n+        peer_early_disconnected = node.add_outbound_p2p_connection(PeerTxRelayer(), p2p_idx=3)\n+        # Announces before tx is sent, doesn't respond to parent request\n+        peer_early_unresponsive = node.add_p2p_connection(PeerTxRelayer())\n+\n+        # Announces after tx is sent\n+        peer_late_announcer = node.add_p2p_connection(PeerTxRelayer())\n+\n+        # Both peers send invs for the orphan, so the node an expect both to know its ancestors.",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": null,
      "original_position": 58,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "in_reply_to_id": 1871051453,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2024-12-06T12:25:47Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873258530",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873258530"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 674,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873259316",
      "pull_request_review_id": 2484617926,
      "id": 1873259316,
      "node_id": "PRRC_kwDOABII585vp6s0",
      "diff_hunk": "@@ -308,7 +308,7 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n     // Whether we should call AddToCompactExtraTransactions at the end\n     bool add_extra_compact_tx{first_time_failure};\n     // Hashes to pass to AddKnownTx later\n-    std::vector<uint256> unique_parents;\n+    std::vector<Txid> unique_parents;",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 169,
      "original_position": 5,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "938659fbd8304ccc948e04d797a4a9d8cf669d3e",
      "in_reply_to_id": 1868058869,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2024-12-06T12:26:29Z",
      "updated_at": "2024-12-06T12:27:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873259316",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873259316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 357,
      "original_line": 357,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873448610",
      "pull_request_review_id": 2485021835,
      "id": 1873448610,
      "node_id": "PRRC_kwDOABII585vqo6i",
      "diff_hunk": "@@ -80,7 +90,8 @@ class TxOrphanage {\n     /** Allows providing orphan information externally */\n     struct OrphanTxBase {\n         CTransactionRef tx;\n-        NodeId fromPeer;\n+        /** Peers added with AddTx or AddAnnouncer. */",
      "path": "src/txorphanage.h",
      "position": 44,
      "original_position": 41,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "acaa7c13fac3e35a55daf2c62c27ab85172b4964",
      "in_reply_to_id": 1868133288,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "kind of just exposing my thoughts as I review!",
      "created_at": "2024-12-06T14:42:06Z",
      "updated_at": "2024-12-06T14:42:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873448610",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873448610"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 83,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873471968",
      "pull_request_review_id": 2485060458,
      "id": 1873471968,
      "node_id": "PRRC_kwDOABII585vqung",
      "diff_hunk": "@@ -135,7 +135,7 @@ BOOST_AUTO_TEST_CASE(DoS_mapOrphans)\n         tx.vout[0].nValue = 1*CENT;\n         tx.vout[0].scriptPubKey = GetScriptForDestination(PKHash(key.GetPubKey()));\n \n-        orphanage.AddTx(MakeTransactionRef(tx), i);\n+        orphanage.AddTx(MakeTransactionRef(tx), i, {});",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "7badc7e004e288aef645404b1b09699be8b87d1e",
      "in_reply_to_id": 1868119567,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "alternatively, just don't set them ever unless they're intended to be used in the test, deleting most of these(?) won't invalidate tests",
      "created_at": "2024-12-06T14:58:03Z",
      "updated_at": "2024-12-06T18:43:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873471968",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873471968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873525225",
      "pull_request_review_id": 2485060458,
      "id": 1873525225,
      "node_id": "PRRC_kwDOABII585vq7np",
      "diff_hunk": "@@ -36,6 +36,8 @@ static constexpr auto NONPREF_PEER_TX_DELAY{2s};\n static constexpr auto OVERLOADED_PEER_TX_DELAY{2s};\n /** How long to wait before downloading a transaction from an additional peer */\n static constexpr auto GETDATA_TX_INTERVAL{60s};\n+/** How long to wait before requesting orphan parents from an additional peer. */\n+static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};",
      "path": "src/node/txdownloadman.h",
      "position": null,
      "original_position": 5,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "1cc9e0fda9d8136bc36a247009676f07d5d84fb6",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "unused now since we're Just using the regular txtracker flow (python tests still using is erroneously too)",
      "created_at": "2024-12-06T15:36:35Z",
      "updated_at": "2024-12-06T18:43:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873525225",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873525225"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873545836",
      "pull_request_review_id": 2485060458,
      "id": 1873545836,
      "node_id": "PRRC_kwDOABII585vrAps",
      "diff_hunk": "@@ -174,9 +175,30 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\n {\n+    // If this is an orphan we are trying to resolve, consider this peer as a orphan resolution candidate instead.\n+    // - received as an p2p inv\n+    // - is wtxid matching something in orphanage\n+    // - exists in orphanage\n+    // - peer can be an orphan resolution candidate\n+    if (p2p_inv && gtxid.IsWtxid()) {\n+        if (auto parent_txids{m_orphanage.GetParentTxids(Wtxid::FromUint256(gtxid.GetHash()))}) {",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "1cc9e0fda9d8136bc36a247009676f07d5d84fb6",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "1cc9e0fda9d8136bc36a247009676f07d5d84fb6\r\n\r\n```Suggestion\r\n        const auto wtxid = Wtxid::FromUint256(gtxid.GetHash());\r\n        if (auto parent_txids{m_orphanage.GetParentTxids(wtxid)) {\r\n```\r\nas well as re-using next 2 lines, and the LogDebug?",
      "created_at": "2024-12-06T15:52:16Z",
      "updated_at": "2024-12-06T18:43:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873545836",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873545836"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873550109",
      "pull_request_review_id": 2485060458,
      "id": 1873550109,
      "node_id": "PRRC_kwDOABII585vrBsd",
      "diff_hunk": "@@ -174,9 +175,30 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\n {\n+    // If this is an orphan we are trying to resolve, consider this peer as a orphan resolution candidate instead.\n+    // - received as an p2p inv\n+    // - is wtxid matching something in orphanage\n+    // - exists in orphanage\n+    // - peer can be an orphan resolution candidate\n+    if (p2p_inv && gtxid.IsWtxid()) {\n+        if (auto parent_txids{m_orphanage.GetParentTxids(Wtxid::FromUint256(gtxid.GetHash()))}) {",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "1cc9e0fda9d8136bc36a247009676f07d5d84fb6",
      "in_reply_to_id": 1873545836,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "also, should we ever have something in our orphanage that doesn't have a parent txid?",
      "created_at": "2024-12-06T15:54:27Z",
      "updated_at": "2024-12-06T18:43:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873550109",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873550109"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873821306",
      "pull_request_review_id": 2485060458,
      "id": 1873821306,
      "node_id": "PRRC_kwDOABII585vsD56",
      "diff_hunk": "@@ -143,20 +143,14 @@ def run_test(self):\n         for (i, peer) in enumerate(self.peers):\n             for tx in transactions_to_presend[i]:\n                 peer.send_and_ping(msg_tx(tx))\n-            # This disconnect removes any sent orphans from the orphanage (EraseForPeer) and times\n-            # out the in-flight requests.  It is currently required for the test to pass right now,\n-            # because the node will not reconsider an orphan tx and will not (re)try requesting\n-            # orphan parents from multiple peers if the first one didn't respond.\n-            # TODO: remove this in the future if the node tries orphan resolution with multiple peers.\n-            peer.peer_disconnect()\n \n         self.log.info(\"Submit full packages to node0\")\n         for package_hex in packages_to_submit:\n             submitpackage_result = self.nodes[0].submitpackage(package_hex)\n             assert_equal(submitpackage_result[\"package_msg\"], \"success\")\n \n         self.log.info(\"Wait for mempools to sync\")\n-        self.sync_mempools(timeout=20)\n+        self.sync_mempools(timeout=62)",
      "path": "test/functional/p2p_1p1c_network.py",
      "position": null,
      "original_position": 18,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "b86dcb01cf42c1414359f4a0fee8b97db8ec7bcd",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "62 is very magical looking, can we do better?",
      "created_at": "2024-12-06T18:28:43Z",
      "updated_at": "2024-12-06T18:43:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1873821306",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1873821306"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878035806",
      "pull_request_review_id": 2492226611,
      "id": 1878035806,
      "node_id": "PRRC_kwDOABII585v8I1e",
      "diff_hunk": "@@ -174,9 +175,30 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\n {\n+    // If this is an orphan we are trying to resolve, consider this peer as a orphan resolution candidate instead.\n+    // - received as an p2p inv\n+    // - is wtxid matching something in orphanage\n+    // - exists in orphanage\n+    // - peer can be an orphan resolution candidate\n+    if (p2p_inv && gtxid.IsWtxid()) {\n+        if (auto parent_txids{m_orphanage.GetParentTxids(Wtxid::FromUint256(gtxid.GetHash()))}) {",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 18,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "1cc9e0fda9d8136bc36a247009676f07d5d84fb6",
      "in_reply_to_id": 1873545836,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> also, should we ever have something in our orphanage that doesn't have a parent txid?\r\n\r\nYeah we shouldn't ever have that situation. However I like the `std:optional<X> GetX()` interface convention.",
      "created_at": "2024-12-10T12:47:29Z",
      "updated_at": "2024-12-10T12:47:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1878035806",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1878035806"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879016883",
      "pull_request_review_id": 2493836266,
      "id": 1879016883,
      "node_id": "PRRC_kwDOABII585v_4Wz",
      "diff_hunk": "@@ -84,6 +89,8 @@ class TxOrphanage {\n protected:\n     struct OrphanTx : public OrphanTxBase {\n         size_t list_pos;\n+        /** Txids of the missing parents to request. Determined by peerman. */",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 27,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "80a0fd011902de0b4d05a2b98ee0ee4d28adcfd0",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "now determined by txdownloadman",
      "created_at": "2024-12-10T22:41:44Z",
      "updated_at": "2024-12-11T20:06:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1879016883",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879016883"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879073089",
      "pull_request_review_id": 2493836266,
      "id": 1879073089,
      "node_id": "PRRC_kwDOABII585wAGFB",
      "diff_hunk": "@@ -390,4 +390,177 @@ BOOST_AUTO_TEST_CASE(too_large_orphan_tx)\n     BOOST_CHECK(orphanage.AddTx(MakeTransactionRef(tx), 0, {}));\n }\n \n+BOOST_AUTO_TEST_CASE(process_block)",
      "path": "src/test/orphanage_tests.cpp",
      "position": 99,
      "original_position": 4,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a0e427b46e18bc46da0dd7e96d5eacc3d37a6f93",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Does `process_block` relate to the changes wrt multiple announcers? Could adjust the commit message to explain why it's added.",
      "created_at": "2024-12-10T23:32:02Z",
      "updated_at": "2024-12-11T20:06:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1879073089",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1879073089"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 377,
      "original_line": 377,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880072531",
      "pull_request_review_id": 2495463688,
      "id": 1880072531,
      "node_id": "PRRC_kwDOABII585wD6FT",
      "diff_hunk": "@@ -36,6 +36,8 @@ static constexpr auto NONPREF_PEER_TX_DELAY{2s};\n static constexpr auto OVERLOADED_PEER_TX_DELAY{2s};\n /** How long to wait before downloading a transaction from an additional peer */\n static constexpr auto GETDATA_TX_INTERVAL{60s};\n+/** How long to wait before requesting orphan parents from an additional peer. */\n+static constexpr auto ORPHAN_ANCESTOR_GETDATA_INTERVAL{60s};",
      "path": "src/node/txdownloadman.h",
      "position": null,
      "original_position": 5,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "1cc9e0fda9d8136bc36a247009676f07d5d84fb6",
      "in_reply_to_id": 1873525225,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes - deleted now",
      "created_at": "2024-12-11T11:59:37Z",
      "updated_at": "2024-12-11T12:43:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880072531",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880072531"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880082978",
      "pull_request_review_id": 2495463688,
      "id": 1880082978,
      "node_id": "PRRC_kwDOABII585wD8oi",
      "diff_hunk": "@@ -143,20 +143,14 @@ def run_test(self):\n         for (i, peer) in enumerate(self.peers):\n             for tx in transactions_to_presend[i]:\n                 peer.send_and_ping(msg_tx(tx))\n-            # This disconnect removes any sent orphans from the orphanage (EraseForPeer) and times\n-            # out the in-flight requests.  It is currently required for the test to pass right now,\n-            # because the node will not reconsider an orphan tx and will not (re)try requesting\n-            # orphan parents from multiple peers if the first one didn't respond.\n-            # TODO: remove this in the future if the node tries orphan resolution with multiple peers.\n-            peer.peer_disconnect()\n \n         self.log.info(\"Submit full packages to node0\")\n         for package_hex in packages_to_submit:\n             submitpackage_result = self.nodes[0].submitpackage(package_hex)\n             assert_equal(submitpackage_result[\"package_msg\"], \"success\")\n \n         self.log.info(\"Wait for mempools to sync\")\n-        self.sync_mempools(timeout=20)\n+        self.sync_mempools(timeout=62)",
      "path": "test/functional/p2p_1p1c_network.py",
      "position": null,
      "original_position": 18,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "b86dcb01cf42c1414359f4a0fee8b97db8ec7bcd",
      "in_reply_to_id": 1873821306,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "deleted now, I think it was a hack for some intermittent thing that I should have removed a while ago",
      "created_at": "2024-12-11T12:07:26Z",
      "updated_at": "2024-12-11T12:43:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880082978",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880082978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880118866",
      "pull_request_review_id": 2495463688,
      "id": 1880118866,
      "node_id": "PRRC_kwDOABII585wEFZS",
      "diff_hunk": "@@ -279,20 +274,17 @@ def test_parent_consensus_failure(self):\n         package_sender.wait_for_getdata([parent_txid_int])\n \n         # 3. A different node relays the parent. The parent is first evaluated by itself and\n-        # rejected for being too low feerate. Then it is evaluated as a package and, after passing\n-        # feerate checks, rejected for having a bad signature (consensus error).\n-        fake_parent_sender.send_message(msg_tx(tx_parent_bad_wit))\n+        # rejected for being too low feerate. It is not evaluated as a package because the child was\n+        # sent from a different peer, so we don't find out that the child is consensus-invalid.\n+        fake_parent_sender.send_and_ping(msg_tx(tx_parent_bad_wit))\n \n         # 4. Transactions should not be in mempool.\n         node_mempool = node.getrawmempool()\n         assert tx_parent_bad_wit.rehash() not in node_mempool\n         assert high_fee_child[\"txid\"] not in node_mempool\n \n-        # 5. Peer sent a consensus-invalid transaction.\n-        fake_parent_sender.wait_for_disconnect()\n-\n         self.log.info(\"Check that fake parent does not cause orphan to be deleted and real package can still be submitted\")\n-        # 6. Child-sending should not have been punished and the orphan should remain in orphanage.\n+        # 5. Child-sending should not have been punished and the orphan should remain in orphanage.",
      "path": "test/functional/p2p_opportunistic_1p1c.py",
      "position": 51,
      "original_position": 54,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "3e16a36959f70da59846621f099c1f1df4a210ed",
      "in_reply_to_id": 1866111901,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, and added a multi-announcer test to rpc_orphans.py",
      "created_at": "2024-12-11T12:33:59Z",
      "updated_at": "2024-12-11T12:43:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880118866",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880118866"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 294,
      "original_line": 294,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880419880",
      "pull_request_review_id": 2496042819,
      "id": 1880419880,
      "node_id": "PRRC_kwDOABII585wFO4o",
      "diff_hunk": "@@ -89,9 +106,14 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     while (iter != m_orphans.end())\n     {\n         // increment to avoid iterator becoming invalid after erasure\n-        const auto& [wtxid, orphan] = *iter++;\n-        if (orphan.fromPeer == peer) {\n-            nErased += EraseTx(wtxid);\n+        auto& [wtxid, orphan] = *iter++;",
      "path": "src/txorphanage.cpp",
      "position": 50,
      "original_position": 50,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "9a77d84a56906c80412d60d3eb7065b1f436fc94",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nitty suggestion\r\n```\r\ndiff --git a/src/txorphanage.cpp b/src/txorphanage.cpp\r\nindex 62c55c2975..cea0c05b9d 100644\r\n--- a/src/txorphanage.cpp\r\n+++ b/src/txorphanage.cpp\r\n@@ -105,17 +105,15 @@ void TxOrphanage::EraseForPeer(NodeId peer)\r\n     std::map<Wtxid, OrphanTx>::iterator iter = m_orphans.begin();\r\n     while (iter != m_orphans.end())\r\n     {\r\n         // increment to avoid iterator becoming invalid after erasure\r\n         auto& [wtxid, orphan] = *iter++;\r\n-        if (orphan.announcers.contains(peer)) {\r\n-            if (orphan.announcers.size() == 1) {\r\n-                nErased += EraseTx(orphan.tx->GetWitnessHash());\r\n-            } else {\r\n-                // Don't erase this orphan. Another peer has also announced it, so it may still be useful.\r\n-                orphan.announcers.erase(peer);\r\n-            }\r\n+        orphan.announcers.erase(peer);\r\n+\r\n+        // No remaining annoncers; cleanup orphanage entry\r\n+        if (orphan.announcers.empty()) {\r\n+            nErased += EraseTx(orphan.tx->GetWitnessHash());\r\n         }\r\n     }\r\n     if (nErased > 0) LogDebug(BCLog::TXPACKAGES, \"Erased %d orphan transaction(s) from peer=%d\\n\", nErased, peer);\r\n }\r\n```",
      "created_at": "2024-12-11T15:31:38Z",
      "updated_at": "2024-12-11T16:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880419880",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880419880"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880429356",
      "pull_request_review_id": 2496042819,
      "id": 1880429356,
      "node_id": "PRRC_kwDOABII585wFRMs",
      "diff_hunk": "@@ -16,8 +16,11 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer, const std::vecto\n {\n     const Txid& hash = tx->GetHash();\n     const Wtxid& wtxid = tx->GetWitnessHash();\n-    if (m_orphans.count(wtxid))\n+    if (auto it{m_orphans.find(wtxid)}; it != m_orphans.end()) {",
      "path": "src/txorphanage.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "9a77d84a56906c80412d60d3eb7065b1f436fc94",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just `AddAnnouncer` and short-circuit if it returns true instead of doing the lookup here?",
      "created_at": "2024-12-11T15:35:57Z",
      "updated_at": "2024-12-11T16:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880429356",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880429356"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880438844",
      "pull_request_review_id": 2496042819,
      "id": 1880438844,
      "node_id": "PRRC_kwDOABII585wFTg8",
      "diff_hunk": "@@ -391,4 +391,178 @@ BOOST_AUTO_TEST_CASE(too_large_orphan_tx)\n     BOOST_CHECK(AddToOrphanage(orphanage, MakeTransactionRef(tx), 0));\n }\n \n+BOOST_AUTO_TEST_CASE(process_block)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Create outpoints that will be spent by transactions in the block\n+    std::vector<COutPoint> outpoints;\n+    const uint32_t num_outpoints{6};\n+    outpoints.reserve(num_outpoints);\n+    for (uint32_t i{0}; i < num_outpoints; ++i) {\n+        // All the hashes should be different, but change the n just in case.\n+        outpoints.emplace_back(Txid::FromUint256(det_rand.rand256()), i);\n+    }\n+\n+    CBlock block;\n+    const NodeId node{0};\n+\n+    auto bo_tx_same_txid = MakeTransactionSpending({outpoints.at(0)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, bo_tx_same_txid, node));\n+    block.vtx.emplace_back(bo_tx_same_txid);\n+\n+    // 2 transactions with the same txid but different witness\n+    auto b_tx_same_txid_diff_witness = MakeTransactionSpending({outpoints.at(1)}, det_rand);\n+    block.vtx.emplace_back(b_tx_same_txid_diff_witness);\n+\n+    auto o_tx_same_txid_diff_witness = MakeMutation(b_tx_same_txid_diff_witness);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_same_txid_diff_witness, node));\n+\n+    // 2 different transactions that spend the same input.\n+    auto b_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict);\n+\n+    auto o_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict, node));\n+\n+    // 2 different transactions that have 1 overlapping input.\n+    auto b_tx_conflict_partial = MakeTransactionSpending({outpoints.at(3), outpoints.at(4)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict_partial);\n+\n+    auto o_tx_conflict_partial_2 = MakeTransactionSpending({outpoints.at(4), outpoints.at(5)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict_partial_2, node));\n+\n+    orphanage.EraseForBlock(block);\n+    for (const auto& expected_removed : {bo_tx_same_txid, o_tx_same_txid_diff_witness, o_tx_conflict, o_tx_conflict_partial_2}) {\n+        const auto& expected_removed_wtxid = expected_removed->GetWitnessHash();\n+        BOOST_CHECK(!orphanage.HaveTx(expected_removed_wtxid));\n+    }\n+    BOOST_CHECK_EQUAL(orphanage.Size(), 0);",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "5e5fbed1c917bd30aed0e9f3b9f190ecb41d841e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "probably should add one innocent bystander that isn't evicted to ensure we're not doing the stupidest thing of wiping all orphans on each block or something",
      "created_at": "2024-12-11T15:41:45Z",
      "updated_at": "2024-12-11T16:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880438844",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880438844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880445164",
      "pull_request_review_id": 2496042819,
      "id": 1880445164,
      "node_id": "PRRC_kwDOABII585wFVDs",
      "diff_hunk": "@@ -391,4 +391,178 @@ BOOST_AUTO_TEST_CASE(too_large_orphan_tx)\n     BOOST_CHECK(AddToOrphanage(orphanage, MakeTransactionRef(tx), 0));\n }\n \n+BOOST_AUTO_TEST_CASE(process_block)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Create outpoints that will be spent by transactions in the block\n+    std::vector<COutPoint> outpoints;\n+    const uint32_t num_outpoints{6};\n+    outpoints.reserve(num_outpoints);\n+    for (uint32_t i{0}; i < num_outpoints; ++i) {\n+        // All the hashes should be different, but change the n just in case.\n+        outpoints.emplace_back(Txid::FromUint256(det_rand.rand256()), i);\n+    }\n+\n+    CBlock block;\n+    const NodeId node{0};\n+\n+    auto bo_tx_same_txid = MakeTransactionSpending({outpoints.at(0)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, bo_tx_same_txid, node));\n+    block.vtx.emplace_back(bo_tx_same_txid);\n+\n+    // 2 transactions with the same txid but different witness\n+    auto b_tx_same_txid_diff_witness = MakeTransactionSpending({outpoints.at(1)}, det_rand);\n+    block.vtx.emplace_back(b_tx_same_txid_diff_witness);\n+\n+    auto o_tx_same_txid_diff_witness = MakeMutation(b_tx_same_txid_diff_witness);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_same_txid_diff_witness, node));\n+\n+    // 2 different transactions that spend the same input.\n+    auto b_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict);\n+\n+    auto o_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict, node));\n+\n+    // 2 different transactions that have 1 overlapping input.\n+    auto b_tx_conflict_partial = MakeTransactionSpending({outpoints.at(3), outpoints.at(4)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict_partial);\n+\n+    auto o_tx_conflict_partial_2 = MakeTransactionSpending({outpoints.at(4), outpoints.at(5)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict_partial_2, node));\n+\n+    orphanage.EraseForBlock(block);\n+    for (const auto& expected_removed : {bo_tx_same_txid, o_tx_same_txid_diff_witness, o_tx_conflict, o_tx_conflict_partial_2}) {\n+        const auto& expected_removed_wtxid = expected_removed->GetWitnessHash();\n+        BOOST_CHECK(!orphanage.HaveTx(expected_removed_wtxid));\n+    }\n+    BOOST_CHECK_EQUAL(orphanage.Size(), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(multiple_announcers)\n+{\n+    const NodeId node0{0};\n+    const NodeId node1{1};\n+    const NodeId node2{2};\n+    size_t expected_total_count{0};\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Check accounting per peer.\n+    // Check that EraseForPeer works with multiple announcers.\n+    {\n+        auto ptx = MakeTransactionSpending({}, det_rand);\n+        const auto& wtxid = ptx->GetWitnessHash();\n+        // Not using AddToOrphanage because we want to test the AddTx interface\n+        BOOST_CHECK(orphanage.AddTx(ptx, node0, {}));\n+        BOOST_CHECK(orphanage.HaveTx(wtxid));\n+        expected_total_count += 1;\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // Adding again should do nothing.\n+        BOOST_CHECK(!orphanage.AddTx(ptx, node0, {}));\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // We can add another tx with the same txid but different witness.\n+        auto ptx_mutated{MakeMutation(ptx)};\n+        BOOST_CHECK(orphanage.AddTx(ptx_mutated, node0, {}));\n+        BOOST_CHECK(orphanage.HaveTx(ptx_mutated->GetWitnessHash()));\n+        expected_total_count += 1;\n+\n+        // It's too late to add parent_txids through AddTx.",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "5e5fbed1c917bd30aed0e9f3b9f190ecb41d841e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```Suggestion\r\n        // parent_txids is ignored on subsequent AddTx for the same wtxid\r\n```",
      "created_at": "2024-12-11T15:45:46Z",
      "updated_at": "2024-12-11T16:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880445164",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880445164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 474,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880453462",
      "pull_request_review_id": 2496042819,
      "id": 1880453462,
      "node_id": "PRRC_kwDOABII585wFXFW",
      "diff_hunk": "@@ -391,4 +391,178 @@ BOOST_AUTO_TEST_CASE(too_large_orphan_tx)\n     BOOST_CHECK(AddToOrphanage(orphanage, MakeTransactionRef(tx), 0));\n }\n \n+BOOST_AUTO_TEST_CASE(process_block)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Create outpoints that will be spent by transactions in the block\n+    std::vector<COutPoint> outpoints;\n+    const uint32_t num_outpoints{6};\n+    outpoints.reserve(num_outpoints);\n+    for (uint32_t i{0}; i < num_outpoints; ++i) {\n+        // All the hashes should be different, but change the n just in case.\n+        outpoints.emplace_back(Txid::FromUint256(det_rand.rand256()), i);\n+    }\n+\n+    CBlock block;\n+    const NodeId node{0};\n+\n+    auto bo_tx_same_txid = MakeTransactionSpending({outpoints.at(0)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, bo_tx_same_txid, node));\n+    block.vtx.emplace_back(bo_tx_same_txid);\n+\n+    // 2 transactions with the same txid but different witness\n+    auto b_tx_same_txid_diff_witness = MakeTransactionSpending({outpoints.at(1)}, det_rand);\n+    block.vtx.emplace_back(b_tx_same_txid_diff_witness);\n+\n+    auto o_tx_same_txid_diff_witness = MakeMutation(b_tx_same_txid_diff_witness);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_same_txid_diff_witness, node));\n+\n+    // 2 different transactions that spend the same input.\n+    auto b_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict);\n+\n+    auto o_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict, node));\n+\n+    // 2 different transactions that have 1 overlapping input.\n+    auto b_tx_conflict_partial = MakeTransactionSpending({outpoints.at(3), outpoints.at(4)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict_partial);\n+\n+    auto o_tx_conflict_partial_2 = MakeTransactionSpending({outpoints.at(4), outpoints.at(5)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict_partial_2, node));\n+\n+    orphanage.EraseForBlock(block);\n+    for (const auto& expected_removed : {bo_tx_same_txid, o_tx_same_txid_diff_witness, o_tx_conflict, o_tx_conflict_partial_2}) {\n+        const auto& expected_removed_wtxid = expected_removed->GetWitnessHash();\n+        BOOST_CHECK(!orphanage.HaveTx(expected_removed_wtxid));\n+    }\n+    BOOST_CHECK_EQUAL(orphanage.Size(), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(multiple_announcers)\n+{\n+    const NodeId node0{0};\n+    const NodeId node1{1};\n+    const NodeId node2{2};\n+    size_t expected_total_count{0};\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Check accounting per peer.\n+    // Check that EraseForPeer works with multiple announcers.\n+    {\n+        auto ptx = MakeTransactionSpending({}, det_rand);\n+        const auto& wtxid = ptx->GetWitnessHash();\n+        // Not using AddToOrphanage because we want to test the AddTx interface\n+        BOOST_CHECK(orphanage.AddTx(ptx, node0, {}));\n+        BOOST_CHECK(orphanage.HaveTx(wtxid));\n+        expected_total_count += 1;\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // Adding again should do nothing.\n+        BOOST_CHECK(!orphanage.AddTx(ptx, node0, {}));\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // We can add another tx with the same txid but different witness.\n+        auto ptx_mutated{MakeMutation(ptx)};\n+        BOOST_CHECK(orphanage.AddTx(ptx_mutated, node0, {}));\n+        BOOST_CHECK(orphanage.HaveTx(ptx_mutated->GetWitnessHash()));\n+        expected_total_count += 1;\n+\n+        // It's too late to add parent_txids through AddTx.\n+        BOOST_CHECK(!orphanage.AddTx(ptx, node0, {Txid::FromUint256(ptx->vin.at(0).prevout.hash)}));\n+        // Parent txids is empty because the tx exists but no parent_txids were provided.\n+        BOOST_CHECK(orphanage.GetParentTxids(wtxid)->empty());\n+        BOOST_CHECK(orphanage.GetParentTxids(ptx_mutated->GetWitnessHash())->empty());\n+\n+        // Adding a new announcer should not change overall accounting.\n+        orphanage.AddAnnouncer(ptx->GetWitnessHash(), node2);\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // Same with using AddTx for an existing tx, which is equivalent to using AddAnnouncer\n+        BOOST_CHECK(!orphanage.AddTx(ptx, node1, {}));\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // if EraseForPeer is called for an orphan with multiple announcers, the orphanage should only\n+        // erase that peer from the announcers set.\n+        orphanage.EraseForPeer(node0);\n+        BOOST_CHECK(orphanage.HaveTx(ptx->GetWitnessHash()));\n+        // node0 is the only one that announced ptx_mutated",
      "path": "src/test/orphanage_tests.cpp",
      "position": 202,
      "original_position": 102,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "5e5fbed1c917bd30aed0e9f3b9f190ecb41d841e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```Suggestion\r\n        // node0 is the only one that announced ptx_mutated\r\n        BOOST_CHECK(!orphanage.HaveTx(ptx_mutated->GetWitnessHash()))\r\n```",
      "created_at": "2024-12-11T15:50:46Z",
      "updated_at": "2024-12-11T16:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880453462",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880453462"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 480,
      "original_line": 480,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880468799",
      "pull_request_review_id": 2496042819,
      "id": 1880468799,
      "node_id": "PRRC_kwDOABII585wFa0_",
      "diff_hunk": "@@ -391,4 +391,178 @@ BOOST_AUTO_TEST_CASE(too_large_orphan_tx)\n     BOOST_CHECK(AddToOrphanage(orphanage, MakeTransactionRef(tx), 0));\n }\n \n+BOOST_AUTO_TEST_CASE(process_block)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Create outpoints that will be spent by transactions in the block\n+    std::vector<COutPoint> outpoints;\n+    const uint32_t num_outpoints{6};\n+    outpoints.reserve(num_outpoints);\n+    for (uint32_t i{0}; i < num_outpoints; ++i) {\n+        // All the hashes should be different, but change the n just in case.\n+        outpoints.emplace_back(Txid::FromUint256(det_rand.rand256()), i);\n+    }\n+\n+    CBlock block;\n+    const NodeId node{0};\n+\n+    auto bo_tx_same_txid = MakeTransactionSpending({outpoints.at(0)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, bo_tx_same_txid, node));\n+    block.vtx.emplace_back(bo_tx_same_txid);\n+\n+    // 2 transactions with the same txid but different witness\n+    auto b_tx_same_txid_diff_witness = MakeTransactionSpending({outpoints.at(1)}, det_rand);\n+    block.vtx.emplace_back(b_tx_same_txid_diff_witness);\n+\n+    auto o_tx_same_txid_diff_witness = MakeMutation(b_tx_same_txid_diff_witness);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_same_txid_diff_witness, node));\n+\n+    // 2 different transactions that spend the same input.\n+    auto b_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict);\n+\n+    auto o_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict, node));\n+\n+    // 2 different transactions that have 1 overlapping input.\n+    auto b_tx_conflict_partial = MakeTransactionSpending({outpoints.at(3), outpoints.at(4)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict_partial);\n+\n+    auto o_tx_conflict_partial_2 = MakeTransactionSpending({outpoints.at(4), outpoints.at(5)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict_partial_2, node));\n+\n+    orphanage.EraseForBlock(block);\n+    for (const auto& expected_removed : {bo_tx_same_txid, o_tx_same_txid_diff_witness, o_tx_conflict, o_tx_conflict_partial_2}) {\n+        const auto& expected_removed_wtxid = expected_removed->GetWitnessHash();\n+        BOOST_CHECK(!orphanage.HaveTx(expected_removed_wtxid));\n+    }\n+    BOOST_CHECK_EQUAL(orphanage.Size(), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(multiple_announcers)\n+{\n+    const NodeId node0{0};\n+    const NodeId node1{1};\n+    const NodeId node2{2};\n+    size_t expected_total_count{0};\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Check accounting per peer.\n+    // Check that EraseForPeer works with multiple announcers.\n+    {\n+        auto ptx = MakeTransactionSpending({}, det_rand);\n+        const auto& wtxid = ptx->GetWitnessHash();\n+        // Not using AddToOrphanage because we want to test the AddTx interface\n+        BOOST_CHECK(orphanage.AddTx(ptx, node0, {}));\n+        BOOST_CHECK(orphanage.HaveTx(wtxid));\n+        expected_total_count += 1;\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // Adding again should do nothing.\n+        BOOST_CHECK(!orphanage.AddTx(ptx, node0, {}));\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // We can add another tx with the same txid but different witness.\n+        auto ptx_mutated{MakeMutation(ptx)};\n+        BOOST_CHECK(orphanage.AddTx(ptx_mutated, node0, {}));\n+        BOOST_CHECK(orphanage.HaveTx(ptx_mutated->GetWitnessHash()));\n+        expected_total_count += 1;\n+\n+        // It's too late to add parent_txids through AddTx.\n+        BOOST_CHECK(!orphanage.AddTx(ptx, node0, {Txid::FromUint256(ptx->vin.at(0).prevout.hash)}));\n+        // Parent txids is empty because the tx exists but no parent_txids were provided.\n+        BOOST_CHECK(orphanage.GetParentTxids(wtxid)->empty());\n+        BOOST_CHECK(orphanage.GetParentTxids(ptx_mutated->GetWitnessHash())->empty());\n+\n+        // Adding a new announcer should not change overall accounting.\n+        orphanage.AddAnnouncer(ptx->GetWitnessHash(), node2);",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "5e5fbed1c917bd30aed0e9f3b9f190ecb41d841e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can we check value of AddAnnouncer everywhere and include the already-HaveTxFromPeer case?",
      "created_at": "2024-12-11T15:59:19Z",
      "updated_at": "2024-12-11T16:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880468799",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880468799"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 481,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880482849",
      "pull_request_review_id": 2496042819,
      "id": 1880482849,
      "node_id": "PRRC_kwDOABII585wFeQh",
      "diff_hunk": "@@ -97,6 +97,7 @@ void TxDownloadManagerImpl::ActiveTipChange()\n \n void TxDownloadManagerImpl::BlockConnected(const std::shared_ptr<const CBlock>& pblock)\n {\n+    // Orphanage may include transactions conflicted by this block.",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a32d396ef27d626e0c60e7ee8a74cbe3d918acb1",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "micro-nit: this being added in a32d396ef27d626e0c60e7ee8a74cbe3d918acb1 is weird",
      "created_at": "2024-12-11T16:08:02Z",
      "updated_at": "2024-12-11T16:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880482849",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880482849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880498755",
      "pull_request_review_id": 2493836266,
      "id": 1880498755,
      "node_id": "PRRC_kwDOABII585wFiJD",
      "diff_hunk": "@@ -287,3 +287,10 @@ std::vector<TxOrphanage::OrphanTxBase> TxOrphanage::GetOrphanTransactions() cons\n     }\n     return ret;\n }\n+\n+std::optional<std::vector<Txid>> TxOrphanage::GetParentTxids(const Wtxid& wtxid)\n+{\n+    const auto it = m_orphans.find(wtxid);\n+    if (it != m_orphans.end()) return it->second.parent_txids;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "6e57412d51039833c826ed9f4fa1f1d6d157251b",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could we assume here that the returned vector isn't empty? As far as I can see, orphans with no missing parents shouldn't be possible. (this only seems to break some unit test that don't set the parent)",
      "created_at": "2024-12-11T16:17:45Z",
      "updated_at": "2024-12-11T20:06:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880498755",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880498755"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 294,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880508916",
      "pull_request_review_id": 2493836266,
      "id": 1880508916,
      "node_id": "PRRC_kwDOABII585wFkn0",
      "diff_hunk": "@@ -66,6 +68,9 @@ class TxOrphanage {\n      * which peer provided each tx. */\n     std::vector<std::pair<CTransactionRef, NodeId>> GetChildrenFromDifferentPeer(const CTransactionRef& parent, NodeId nodeid) const;\n \n+    /** Get an orphan's parent_txids, or std::nullopt if the orphan is not present. */",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 17,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "6e57412d51039833c826ed9f4fa1f1d6d157251b",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`parent_txids` could be updated to `txids of missing parents` with 1ff1a90baa395d231e7a3d66da74851302090b40",
      "created_at": "2024-12-11T16:23:33Z",
      "updated_at": "2024-12-11T20:06:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880508916",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880508916"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880542740",
      "pull_request_review_id": 2496042819,
      "id": 1880542740,
      "node_id": "PRRC_kwDOABII585wFs4U",
      "diff_hunk": "@@ -204,6 +226,35 @@ bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid,\n     return false;\n }\n \n+std::optional<std::chrono::seconds> TxDownloadManagerImpl::OrphanResolutionCandidate(NodeId nodeid, const Wtxid& orphan_wtxid)\n+{\n+    if (m_peer_info.count(nodeid) == 0) return std::nullopt;\n+\n+    const auto& peer_entry = m_peer_info.at(nodeid);\n+    const auto& info = peer_entry.m_connection_info;\n+    // TODO: add delays and limits based on the amount of orphan resolution we are already doing\n+    // with this peer, how much they are using the orphanage, etc.\n+    if (!info.m_relay_permissions) {\n+        // This mirrors the delaying and dropping behavior in AddTxAnnouncement in order to preserve\n+        // existing behavior: drop if we are tracking too many invs for this peer already. Each\n+        // orphan resolution involves at least 1 transaction request which may or may not be\n+        // currently tracked in m_txrequest, so we include that in the count.\n+        if (m_txrequest.Count(nodeid) >= MAX_PEER_TX_ANNOUNCEMENTS) return std::nullopt;\n+    }\n+\n+    std::chrono::seconds delay{0s};",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 77,
      "original_position": 61,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a32d396ef27d626e0c60e7ee8a74cbe3d918acb1",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "take or leave suggestion: instead of copying and pasting, make the delay computation re-usable?\r\n```\r\ndiff --git a/src/node/txdownloadman_impl.cpp b/src/node/txdownloadman_impl.cpp\r\nindex 41d1badadf..d6e44c321b 100644\r\n--- a/src/node/txdownloadman_impl.cpp\r\n+++ b/src/node/txdownloadman_impl.cpp\r\n@@ -171,10 +171,28 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\r\n         m_peer_info.erase(it);\r\n     }\r\n \r\n }\r\n \r\n+std::chrono::seconds TxDownloadManagerImpl::GetTxRequestDelay(NodeId peer, const TxDownloadConnectionInfo& info, const GenTxid& gtxid)\r\n+{\r\n+    // Decide the TxRequestTracker parameters for this announcement:\r\n+    // - \"preferred\": if fPreferredDownload is set (= outbound, or NetPermissionFlags::NoBan permission)\r\n+    // - \"reqtime\": current time plus delays for:\r\n+    //   - NONPREF_PEER_TX_DELAY for announcements from non-preferred connections\r\n+    //   - TXID_RELAY_DELAY for txid announcements while wtxid peers are available\r\n+    //   - OVERLOADED_PEER_TX_DELAY for announcements from peers which have at least\r\n+    //     MAX_PEER_TX_REQUEST_IN_FLIGHT requests in flight (and don't have NetPermissionFlags::Relay).\r\n+    auto delay{0s};\r\n+    if (!info.m_preferred) delay += NONPREF_PEER_TX_DELAY;\r\n+    if (!gtxid.IsWtxid() && m_num_wtxid_peers > 0) delay += TXID_RELAY_DELAY;\r\n+    const bool overloaded = !info.m_relay_permissions && m_txrequest.CountInFlight(peer) >= MAX_PEER_TX_REQUEST_IN_FLIGHT;\r\n+    if (overloaded) delay += OVERLOADED_PEER_TX_DELAY;\r\n+\r\n+    return delay;\r\n+}\r\n+\r\n bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\r\n {\r\n     // If this is an orphan we are trying to resolve, consider this peer as a orphan resolution candidate instead.\r\n     // - received as an p2p inv\r\n     // - is wtxid matching something in orphanage\r\n@@ -206,24 +224,12 @@ bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid,\r\n     const auto& info = it->second.m_connection_info;\r\n     if (!info.m_relay_permissions && m_txrequest.Count(peer) >= MAX_PEER_TX_ANNOUNCEMENTS) {\r\n         // Too many queued announcements for this peer\r\n         return false;\r\n     }\r\n-    // Decide the TxRequestTracker parameters for this announcement:\r\n-    // - \"preferred\": if fPreferredDownload is set (= outbound, or NetPermissionFlags::NoBan permission)\r\n-    // - \"reqtime\": current time plus delays for:\r\n-    //   - NONPREF_PEER_TX_DELAY for announcements from non-preferred connections\r\n-    //   - TXID_RELAY_DELAY for txid announcements while wtxid peers are available\r\n-    //   - OVERLOADED_PEER_TX_DELAY for announcements from peers which have at least\r\n-    //     MAX_PEER_TX_REQUEST_IN_FLIGHT requests in flight (and don't have NetPermissionFlags::Relay).\r\n-    auto delay{0us};\r\n-    if (!info.m_preferred) delay += NONPREF_PEER_TX_DELAY;\r\n-    if (!gtxid.IsWtxid() && m_num_wtxid_peers > 0) delay += TXID_RELAY_DELAY;\r\n-    const bool overloaded = !info.m_relay_permissions && m_txrequest.CountInFlight(peer) >= MAX_PEER_TX_REQUEST_IN_FLIGHT;\r\n-    if (overloaded) delay += OVERLOADED_PEER_TX_DELAY;\r\n \r\n-    m_txrequest.ReceivedInv(peer, gtxid, info.m_preferred, now + delay);\r\n+    m_txrequest.ReceivedInv(peer, gtxid, info.m_preferred, now + GetTxRequestDelay(peer, info, gtxid));\r\n \r\n     return false;\r\n }\r\n \r\n std::optional<std::chrono::seconds> TxDownloadManagerImpl::OrphanResolutionCandidate(NodeId nodeid, const Wtxid& orphan_wtxid)\r\n@@ -240,21 +246,12 @@ std::optional<std::chrono::seconds> TxDownloadManagerImpl::OrphanResolutionCandi\r\n         // orphan resolution involves at least 1 transaction request which may or may not be\r\n         // currently tracked in m_txrequest, so we include that in the count.\r\n         if (m_txrequest.Count(nodeid) >= MAX_PEER_TX_ANNOUNCEMENTS) return std::nullopt;\r\n     }\r\n \r\n-    std::chrono::seconds delay{0s};\r\n-    if (!info.m_preferred) delay += NONPREF_PEER_TX_DELAY;\r\n-    // The orphan wtxid is used, but resolution entails requesting the parents by txid. Sometimes\r\n-    // parent and child are announced and thus requested around the same time, and we happen to\r\n-    // receive child sooner. Waiting a few seconds may allow us to cancel the orphan resolution\r\n-    // request if the parent arrives in that time.\r\n-    if (m_num_wtxid_peers > 0) delay += TXID_RELAY_DELAY;\r\n-    const bool overloaded = !info.m_relay_permissions && m_txrequest.CountInFlight(nodeid) >= MAX_PEER_TX_REQUEST_IN_FLIGHT;\r\n-    if (overloaded) delay += OVERLOADED_PEER_TX_DELAY;\r\n-\r\n-    return delay;\r\n+    // We're fetching parents via txid; so pass in as a txid\r\n+    return GetTxRequestDelay(nodeid, info, GenTxid::Txid(orphan_wtxid));\r\n }\r\n \r\n std::vector<GenTxid> TxDownloadManagerImpl::GetRequestsToSend(NodeId nodeid, std::chrono::microseconds current_time)\r\n {\r\n     std::vector<GenTxid> requests;\r\ndiff --git a/src/node/txdownloadman_impl.h b/src/node/txdownloadman_impl.h\r\nindex 560802ab5d..0bd673e956 100644\r\n--- a/src/node/txdownloadman_impl.h\r\n+++ b/src/node/txdownloadman_impl.h\r\n@@ -158,10 +158,12 @@ public:\r\n     bool AlreadyHaveTx(const GenTxid& gtxid, bool include_reconsiderable);\r\n \r\n     void ConnectedPeer(NodeId nodeid, const TxDownloadConnectionInfo& info);\r\n     void DisconnectedPeer(NodeId nodeid);\r\n \r\n+    std::chrono::seconds GetTxRequestDelay(NodeId peer, const TxDownloadConnectionInfo& info, const GenTxid& gtxid);\r\n+\r\n     /** Consider adding this tx hash to txrequest. Should be called whenever a new inv has been received.\r\n      * Also called internally when a transaction is missing parents so that we can request them.\r\n      */\r\n     bool AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv);\r\n ```",
      "created_at": "2024-12-11T16:43:48Z",
      "updated_at": "2024-12-11T16:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880542740",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880542740"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880557062",
      "pull_request_review_id": 2496042819,
      "id": 1880557062,
      "node_id": "PRRC_kwDOABII585wFwYG",
      "diff_hunk": "@@ -354,26 +405,45 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n                 std::erase_if(unique_parents, [&](const auto& txid){\n                     return AlreadyHaveTx(GenTxid::Txid(txid), /*include_reconsiderable=*/false);\n                 });\n-                const auto current_time{GetTime<std::chrono::microseconds>()};\n-\n-                for (const uint256& parent_txid : unique_parents) {\n-                    // Here, we only have the txid (and not wtxid) of the\n-                    // inputs, so we only request in txid mode, even for\n-                    // wtxidrelay peers.\n-                    // Eventually we should replace this with an improved\n-                    // protocol for getting all unconfirmed parents.\n-                    const auto gtxid{GenTxid::Txid(parent_txid)};\n-                    AddTxAnnouncement(nodeid, gtxid, current_time, /*p2p_inv=*/false);\n+                const auto now{GetTime<std::chrono::microseconds>()};\n+                const auto& wtxid = ptx->GetWitnessHash();\n+                // Potentially flip add_extra_compact_tx to false if tx is already in orphanage, which\n+                // means it was already added to vExtraTxnForCompact.\n+                add_extra_compact_tx &= !m_orphanage.HaveTx(wtxid);\n+\n+                auto add_orphan_reso_candidate = [&](const CTransactionRef& orphan_tx, std::vector<Txid> unique_parents, NodeId nodeid, std::chrono::microseconds now) {\n+                    const auto& wtxid = orphan_tx->GetWitnessHash();\n+                    if (auto delay{OrphanResolutionCandidate(nodeid, wtxid)}) {\n+                        const auto& info = m_peer_info.at(nodeid).m_connection_info;\n+                        m_orphanage.AddTx(orphan_tx, nodeid, unique_parents);\n+\n+                        // Treat finding orphan resolution candidate as equivalent to the peer announcing all missing parents\n+                        // In the future, orphan resolution may include more explicit steps\n+                        for (const auto& parent_txid : unique_parents) {\n+                            m_txrequest.ReceivedInv(nodeid, GenTxid::Txid(parent_txid), info.m_preferred, now + *delay);\n+                        }\n+                        LogDebug(BCLog::TXPACKAGES, \"added peer=%d as a candidate for resolving orphan %s\\n\", nodeid, wtxid.ToString());\n+                    }\n+                };\n+\n+                // If there is no candidate for orphan resolution, AddTx will not be called. This means\n+                // that if a peer is overloading us with invs and orphans, they will eventually not be\n+                // able to add any more transactions to the orphanage.\n+                add_orphan_reso_candidate(ptx, unique_parents, nodeid, now);\n+                for (const auto& candidate : m_txrequest.GetCandidatePeers(wtxid)) {",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 116,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a32d396ef27d626e0c60e7ee8a74cbe3d918acb1",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "question: since `GetCandidatePeers` is only used in this context, can we just have it take a transaction ref and fetch both txid and wtxid under the hood?",
      "created_at": "2024-12-11T16:52:24Z",
      "updated_at": "2024-12-11T16:58:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880557062",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880557062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 433,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880795478",
      "pull_request_review_id": 2493836266,
      "id": 1880795478,
      "node_id": "PRRC_kwDOABII585wGqlW",
      "diff_hunk": "@@ -173,14 +173,14 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n }\n \n-bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\n+bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now)\n {\n     // If this is an orphan we are trying to resolve, consider this peer as a orphan resolution candidate instead.\n     // - received as an p2p inv",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "5768fc2b6f82fe43e712947e6f663ef14be23c6f",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this is now trivially true with 5768fc2b6f82fe43e712947e6f663ef14be23c6f, so maybe remove the line",
      "created_at": "2024-12-11T19:30:10Z",
      "updated_at": "2024-12-11T20:06:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880795478",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880795478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 179,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880802306",
      "pull_request_review_id": 2493836266,
      "id": 1880802306,
      "node_id": "PRRC_kwDOABII585wGsQC",
      "diff_hunk": "@@ -204,6 +226,35 @@ bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid,\n     return false;\n }\n \n+std::optional<std::chrono::seconds> TxDownloadManagerImpl::OrphanResolutionCandidate(NodeId nodeid, const Wtxid& orphan_wtxid)\n+{\n+    if (m_peer_info.count(nodeid) == 0) return std::nullopt;\n+\n+    const auto& peer_entry = m_peer_info.at(nodeid);\n+    const auto& info = peer_entry.m_connection_info;\n+    // TODO: add delays and limits based on the amount of orphan resolution we are already doing\n+    // with this peer, how much they are using the orphanage, etc.\n+    if (!info.m_relay_permissions) {\n+        // This mirrors the delaying and dropping behavior in AddTxAnnouncement in order to preserve\n+        // existing behavior: drop if we are tracking too many invs for this peer already. Each\n+        // orphan resolution involves at least 1 transaction request which may or may not be\n+        // currently tracked in m_txrequest, so we include that in the count.\n+        if (m_txrequest.Count(nodeid) >= MAX_PEER_TX_ANNOUNCEMENTS) return std::nullopt;",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a32d396ef27d626e0c60e7ee8a74cbe3d918acb1",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think we can exceed `MAX_PEER_TX_ANNOUNCEMENTS` now, because after doing the check, we may add more than 1 parent tx. Is that a problem?",
      "created_at": "2024-12-11T19:35:03Z",
      "updated_at": "2024-12-11T20:06:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880802306",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880802306"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880816026",
      "pull_request_review_id": 2493836266,
      "id": 1880816026,
      "node_id": "PRRC_kwDOABII585wGvma",
      "diff_hunk": "@@ -84,6 +89,8 @@ class TxOrphanage {\n protected:\n     struct OrphanTx : public OrphanTxBase {\n         size_t list_pos;\n+        /** Txids of the missing parents to request. Determined by peerman. */\n+        std::vector<Txid> parent_txids;",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 28,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "6e57412d51039833c826ed9f4fa1f1d6d157251b",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "FWIW originally I thought I'd prefer calculating the parents when needed instead of storing them - while there might be a few more `AlreadyHaveTx` calls (is this function particularly expensive?), we'd be operating on more up-to-date data and wouldn't create tx requests for parents that have already arrived and therefore will never be sent out. Plus, the code will be simpler. (I later saw that there was a short discussion in the review club about this.)\r\n\r\nBut if we store the missing parents anyway - would it be possible in future work to actually keep them up-to-date, by removing entries from `parent_txids` in `AddChildrenToWorkSet()` / Block processing, and only attempting to re-validate the tx once we have all mssing parents / `parent_txids` is empty - to save us from doing unnecessary work if only one of multiple missing parents has arrived?",
      "created_at": "2024-12-11T19:41:45Z",
      "updated_at": "2024-12-11T20:06:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880816026",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880816026"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880982232",
      "pull_request_review_id": 2496960695,
      "id": 1880982232,
      "node_id": "PRRC_kwDOABII585wHYLY",
      "diff_hunk": "@@ -204,6 +226,35 @@ bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid,\n     return false;\n }\n \n+std::optional<std::chrono::seconds> TxDownloadManagerImpl::OrphanResolutionCandidate(NodeId nodeid, const Wtxid& orphan_wtxid)\n+{\n+    if (m_peer_info.count(nodeid) == 0) return std::nullopt;\n+\n+    const auto& peer_entry = m_peer_info.at(nodeid);\n+    const auto& info = peer_entry.m_connection_info;\n+    // TODO: add delays and limits based on the amount of orphan resolution we are already doing\n+    // with this peer, how much they are using the orphanage, etc.\n+    if (!info.m_relay_permissions) {\n+        // This mirrors the delaying and dropping behavior in AddTxAnnouncement in order to preserve\n+        // existing behavior: drop if we are tracking too many invs for this peer already. Each\n+        // orphan resolution involves at least 1 transaction request which may or may not be\n+        // currently tracked in m_txrequest, so we include that in the count.\n+        if (m_txrequest.Count(nodeid) >= MAX_PEER_TX_ANNOUNCEMENTS) return std::nullopt;",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a32d396ef27d626e0c60e7ee8a74cbe3d918acb1",
      "in_reply_to_id": 1880802306,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The fuzzer should theoretically hit this if so, though the limit is probably high enough to make this hard to hit.\r\n\r\n",
      "created_at": "2024-12-11T20:57:57Z",
      "updated_at": "2024-12-11T20:57:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880982232",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880982232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880993751",
      "pull_request_review_id": 2496985587,
      "id": 1880993751,
      "node_id": "PRRC_kwDOABII585wHa_X",
      "diff_hunk": "@@ -84,6 +89,8 @@ class TxOrphanage {\n protected:\n     struct OrphanTx : public OrphanTxBase {\n         size_t list_pos;\n+        /** Txids of the missing parents to request. Determined by peerman. */\n+        std::vector<Txid> parent_txids;",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 28,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "6e57412d51039833c826ed9f4fa1f1d6d157251b",
      "in_reply_to_id": 1880816026,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> only attempting to re-validate the tx once we have all mssing parents / parent_txids is empty\r\n\r\nThat's a good idea! Especially for 1p1cs 🤔 . We could update `parent_txids` at the same time as `AddChildrenToWorkSet` and only add them to workset when empty.",
      "created_at": "2024-12-11T21:03:56Z",
      "updated_at": "2024-12-11T21:05:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1880993751",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1880993751"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1881018172",
      "pull_request_review_id": 2497032687,
      "id": 1881018172,
      "node_id": "PRRC_kwDOABII585wHg88",
      "diff_hunk": "@@ -84,6 +89,8 @@ class TxOrphanage {\n protected:\n     struct OrphanTx : public OrphanTxBase {\n         size_t list_pos;\n+        /** Txids of the missing parents to request. Determined by peerman. */\n+        std::vector<Txid> parent_txids;",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 28,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "6e57412d51039833c826ed9f4fa1f1d6d157251b",
      "in_reply_to_id": 1880816026,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh, I just had a thought that maybe it's kind of bad that we're locked in to the `parent_txids` we started with... even if we're able to remove some, what happens if a new parent goes missing?\r\n\r\n1. Get tx that spends [A, B, C]. We are missing inputs A and B. Store in tx orphanage. Request A and B from peers...\r\n2. C gets replaced* or falls out of mempool somehow\r\n3. We keep only requesting A and B. We receive and accept them.\r\n4. AddChildrenToWorkSet... C is still an orphan. We can't figure out how to resolve it properly though.\r\n\r\nSo maybe we do this, but also need to update `parent_txids` on every `MempoolRejectedTx` `TX_MISSING_INPUTS` as well.",
      "created_at": "2024-12-11T21:19:43Z",
      "updated_at": "2024-12-11T21:19:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1881018172",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1881018172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1881060842",
      "pull_request_review_id": 2497104576,
      "id": 1881060842,
      "node_id": "PRRC_kwDOABII585wHrXq",
      "diff_hunk": "@@ -574,6 +574,17 @@ class TxRequestTracker::Impl {\n         }\n     }\n \n+    std::vector<NodeId> GetCandidatePeers(const uint256& txhash) const",
      "path": "src/txrequest.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "503e52a7fe4b30a446408d36d309af54a8f56572",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"[txrequest] GetCandidatePeers\"\r\n\r\nWould it be possible to add an invocation/comparison with this function in the `src/test/fuzz/txrequest.cpp` fuzz test?",
      "created_at": "2024-12-11T22:00:31Z",
      "updated_at": "2025-01-03T19:23:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1881060842",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1881060842"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 577,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1882406034",
      "pull_request_review_id": 2500057505,
      "id": 1882406034,
      "node_id": "PRRC_kwDOABII585wMzyS",
      "diff_hunk": "@@ -84,6 +89,8 @@ class TxOrphanage {\n protected:\n     struct OrphanTx : public OrphanTxBase {\n         size_t list_pos;\n+        /** Txids of the missing parents to request. Determined by peerman. */\n+        std::vector<Txid> parent_txids;",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 28,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "6e57412d51039833c826ed9f4fa1f1d6d157251b",
      "in_reply_to_id": 1880816026,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Note that also `A` could immediately be replaced after fetching it, before `B` is received. There are probably a bunch of ways this and other ancestor fetching can fail.\r\n\r\nEven if we manage to recover the entire ancestry tree (like in this example ABC+tx), if C was replaced, we'd likely be relying on general package RBF to have the tx successfully submitted.\r\n\r\n> That's a good idea! Especially for 1p1cs 🤔 . We could update parent_txids at the same time as AddChildrenToWorkSet and only add them to workset when empty.\r\n\r\nThis seems reasonable on its own.",
      "created_at": "2024-12-12T15:44:59Z",
      "updated_at": "2024-12-12T15:44:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1882406034",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1882406034"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1882411971",
      "pull_request_review_id": 2500066443,
      "id": 1882411971,
      "node_id": "PRRC_kwDOABII585wM1PD",
      "diff_hunk": "@@ -135,13 +157,17 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx)\n         const auto it_by_prev = m_outpoint_to_orphan_it.find(COutPoint(tx.GetHash(), i));\n         if (it_by_prev != m_outpoint_to_orphan_it.end()) {\n             for (const auto& elem : it_by_prev->second) {\n-                // Get this source peer's work set, emplacing an empty set if it didn't exist\n-                // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n-                std::set<Wtxid>& orphan_work_set = m_peer_work_set.try_emplace(elem->second.fromPeer).first->second;\n-                // Add this tx to the work set\n-                orphan_work_set.insert(elem->first);\n-                LogDebug(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",\n-                         tx.GetHash().ToString(), tx.GetWitnessHash().ToString(), elem->second.fromPeer);\n+                // Belt and suspenders, each orphan should always have at least 1 announcer.\n+                if (!Assume(!elem->second.announcers.empty())) break;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "9a77d84a56906c80412d60d3eb7065b1f436fc94",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why break? Do we not want to try another orphan? We keep trying the other tx's outpoints regardless.",
      "created_at": "2024-12-12T15:48:31Z",
      "updated_at": "2024-12-12T15:48:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1882411971",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1882411971"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1889177139",
      "pull_request_review_id": 2510040089,
      "id": 1889177139,
      "node_id": "PRRC_kwDOABII585wmo4z",
      "diff_hunk": "@@ -84,6 +89,8 @@ class TxOrphanage {\n protected:\n     struct OrphanTx : public OrphanTxBase {\n         size_t list_pos;\n+        /** Txids of the missing parents to request. Determined by peerman. */\n+        std::vector<Txid> parent_txids;",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 28,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "6e57412d51039833c826ed9f4fa1f1d6d157251b",
      "in_reply_to_id": 1880816026,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Perhaps we start with recalculating every time and consider doing this later? I agree it doesn't seem too expensive.",
      "created_at": "2024-12-17T20:29:37Z",
      "updated_at": "2024-12-17T20:29:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1889177139",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1889177139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901867183",
      "pull_request_review_id": 2529228734,
      "id": 1901867183,
      "node_id": "PRRC_kwDOABII585xXDCv",
      "diff_hunk": "@@ -97,6 +97,7 @@ void TxDownloadManagerImpl::ActiveTipChange()\n \n void TxDownloadManagerImpl::BlockConnected(const std::shared_ptr<const CBlock>& pblock)\n {\n+    // Orphanage may include transactions conflicted by this block.",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a32d396ef27d626e0c60e7ee8a74cbe3d918acb1",
      "in_reply_to_id": 1880482849,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "removed",
      "created_at": "2025-01-03T15:02:00Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901867183",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901867183"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 100,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901867668",
      "pull_request_review_id": 2529228734,
      "id": 1901867668,
      "node_id": "PRRC_kwDOABII585xXDKU",
      "diff_hunk": "@@ -173,14 +173,14 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n }\n \n-bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\n+bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now)\n {\n     // If this is an orphan we are trying to resolve, consider this peer as a orphan resolution candidate instead.\n     // - received as an p2p inv",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 20,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "5768fc2b6f82fe43e712947e6f663ef14be23c6f",
      "in_reply_to_id": 1880795478,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-01-03T15:02:34Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901867668",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901867668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 179,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901867859",
      "pull_request_review_id": 2529228734,
      "id": 1901867859,
      "node_id": "PRRC_kwDOABII585xXDNT",
      "diff_hunk": "@@ -204,6 +226,35 @@ bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid,\n     return false;\n }\n \n+std::optional<std::chrono::seconds> TxDownloadManagerImpl::OrphanResolutionCandidate(NodeId nodeid, const Wtxid& orphan_wtxid)\n+{\n+    if (m_peer_info.count(nodeid) == 0) return std::nullopt;\n+\n+    const auto& peer_entry = m_peer_info.at(nodeid);\n+    const auto& info = peer_entry.m_connection_info;\n+    // TODO: add delays and limits based on the amount of orphan resolution we are already doing\n+    // with this peer, how much they are using the orphanage, etc.\n+    if (!info.m_relay_permissions) {\n+        // This mirrors the delaying and dropping behavior in AddTxAnnouncement in order to preserve\n+        // existing behavior: drop if we are tracking too many invs for this peer already. Each\n+        // orphan resolution involves at least 1 transaction request which may or may not be\n+        // currently tracked in m_txrequest, so we include that in the count.\n+        if (m_txrequest.Count(nodeid) >= MAX_PEER_TX_ANNOUNCEMENTS) return std::nullopt;",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a32d396ef27d626e0c60e7ee8a74cbe3d918acb1",
      "in_reply_to_id": 1880802306,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, added a `num_parents` param",
      "created_at": "2025-01-03T15:02:45Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901867859",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901867859"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 242,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901875482",
      "pull_request_review_id": 2529228734,
      "id": 1901875482,
      "node_id": "PRRC_kwDOABII585xXFEa",
      "diff_hunk": "@@ -204,6 +226,35 @@ bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid,\n     return false;\n }\n \n+std::optional<std::chrono::seconds> TxDownloadManagerImpl::OrphanResolutionCandidate(NodeId nodeid, const Wtxid& orphan_wtxid)\n+{\n+    if (m_peer_info.count(nodeid) == 0) return std::nullopt;\n+\n+    const auto& peer_entry = m_peer_info.at(nodeid);\n+    const auto& info = peer_entry.m_connection_info;\n+    // TODO: add delays and limits based on the amount of orphan resolution we are already doing\n+    // with this peer, how much they are using the orphanage, etc.\n+    if (!info.m_relay_permissions) {\n+        // This mirrors the delaying and dropping behavior in AddTxAnnouncement in order to preserve\n+        // existing behavior: drop if we are tracking too many invs for this peer already. Each\n+        // orphan resolution involves at least 1 transaction request which may or may not be\n+        // currently tracked in m_txrequest, so we include that in the count.\n+        if (m_txrequest.Count(nodeid) >= MAX_PEER_TX_ANNOUNCEMENTS) return std::nullopt;\n+    }\n+\n+    std::chrono::seconds delay{0s};",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 77,
      "original_position": 61,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a32d396ef27d626e0c60e7ee8a74cbe3d918acb1",
      "in_reply_to_id": 1880542740,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hm, I don't really like the part where we cast `orphan_wtxid` to a `Txid` to bypass the `gtxid.IsWtixd()` check, feels a bit hacky. It's only a few lines. In the future we'd have them deviate if/when we add an alternative method for orphan reso, so gonna leave as is for now.",
      "created_at": "2025-01-03T15:11:09Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901875482",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901875482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 251,
      "original_line": 251,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901882259",
      "pull_request_review_id": 2529228734,
      "id": 1901882259,
      "node_id": "PRRC_kwDOABII585xXGuT",
      "diff_hunk": "@@ -354,26 +405,45 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n                 std::erase_if(unique_parents, [&](const auto& txid){\n                     return AlreadyHaveTx(GenTxid::Txid(txid), /*include_reconsiderable=*/false);\n                 });\n-                const auto current_time{GetTime<std::chrono::microseconds>()};\n-\n-                for (const uint256& parent_txid : unique_parents) {\n-                    // Here, we only have the txid (and not wtxid) of the\n-                    // inputs, so we only request in txid mode, even for\n-                    // wtxidrelay peers.\n-                    // Eventually we should replace this with an improved\n-                    // protocol for getting all unconfirmed parents.\n-                    const auto gtxid{GenTxid::Txid(parent_txid)};\n-                    AddTxAnnouncement(nodeid, gtxid, current_time, /*p2p_inv=*/false);\n+                const auto now{GetTime<std::chrono::microseconds>()};\n+                const auto& wtxid = ptx->GetWitnessHash();\n+                // Potentially flip add_extra_compact_tx to false if tx is already in orphanage, which\n+                // means it was already added to vExtraTxnForCompact.\n+                add_extra_compact_tx &= !m_orphanage.HaveTx(wtxid);\n+\n+                auto add_orphan_reso_candidate = [&](const CTransactionRef& orphan_tx, std::vector<Txid> unique_parents, NodeId nodeid, std::chrono::microseconds now) {\n+                    const auto& wtxid = orphan_tx->GetWitnessHash();\n+                    if (auto delay{OrphanResolutionCandidate(nodeid, wtxid)}) {\n+                        const auto& info = m_peer_info.at(nodeid).m_connection_info;\n+                        m_orphanage.AddTx(orphan_tx, nodeid, unique_parents);\n+\n+                        // Treat finding orphan resolution candidate as equivalent to the peer announcing all missing parents\n+                        // In the future, orphan resolution may include more explicit steps\n+                        for (const auto& parent_txid : unique_parents) {\n+                            m_txrequest.ReceivedInv(nodeid, GenTxid::Txid(parent_txid), info.m_preferred, now + *delay);\n+                        }\n+                        LogDebug(BCLog::TXPACKAGES, \"added peer=%d as a candidate for resolving orphan %s\\n\", nodeid, wtxid.ToString());\n+                    }\n+                };\n+\n+                // If there is no candidate for orphan resolution, AddTx will not be called. This means\n+                // that if a peer is overloading us with invs and orphans, they will eventually not be\n+                // able to add any more transactions to the orphanage.\n+                add_orphan_reso_candidate(ptx, unique_parents, nodeid, now);\n+                for (const auto& candidate : m_txrequest.GetCandidatePeers(wtxid)) {",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 116,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a32d396ef27d626e0c60e7ee8a74cbe3d918acb1",
      "in_reply_to_id": 1880557062,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-01-03T15:18:22Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901882259",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901882259"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 433,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901883025",
      "pull_request_review_id": 2529228734,
      "id": 1901883025,
      "node_id": "PRRC_kwDOABII585xXG6R",
      "diff_hunk": "@@ -390,4 +390,177 @@ BOOST_AUTO_TEST_CASE(too_large_orphan_tx)\n     BOOST_CHECK(orphanage.AddTx(MakeTransactionRef(tx), 0, {}));\n }\n \n+BOOST_AUTO_TEST_CASE(process_block)",
      "path": "src/test/orphanage_tests.cpp",
      "position": 99,
      "original_position": 4,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a0e427b46e18bc46da0dd7e96d5eacc3d37a6f93",
      "in_reply_to_id": 1879073089,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've moved that test to its own commit",
      "created_at": "2025-01-03T15:19:09Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901883025",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901883025"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 377,
      "original_line": 377,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901887146",
      "pull_request_review_id": 2529228734,
      "id": 1901887146,
      "node_id": "PRRC_kwDOABII585xXH6q",
      "diff_hunk": "@@ -391,4 +391,178 @@ BOOST_AUTO_TEST_CASE(too_large_orphan_tx)\n     BOOST_CHECK(AddToOrphanage(orphanage, MakeTransactionRef(tx), 0));\n }\n \n+BOOST_AUTO_TEST_CASE(process_block)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Create outpoints that will be spent by transactions in the block\n+    std::vector<COutPoint> outpoints;\n+    const uint32_t num_outpoints{6};\n+    outpoints.reserve(num_outpoints);\n+    for (uint32_t i{0}; i < num_outpoints; ++i) {\n+        // All the hashes should be different, but change the n just in case.\n+        outpoints.emplace_back(Txid::FromUint256(det_rand.rand256()), i);\n+    }\n+\n+    CBlock block;\n+    const NodeId node{0};\n+\n+    auto bo_tx_same_txid = MakeTransactionSpending({outpoints.at(0)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, bo_tx_same_txid, node));\n+    block.vtx.emplace_back(bo_tx_same_txid);\n+\n+    // 2 transactions with the same txid but different witness\n+    auto b_tx_same_txid_diff_witness = MakeTransactionSpending({outpoints.at(1)}, det_rand);\n+    block.vtx.emplace_back(b_tx_same_txid_diff_witness);\n+\n+    auto o_tx_same_txid_diff_witness = MakeMutation(b_tx_same_txid_diff_witness);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_same_txid_diff_witness, node));\n+\n+    // 2 different transactions that spend the same input.\n+    auto b_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict);\n+\n+    auto o_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict, node));\n+\n+    // 2 different transactions that have 1 overlapping input.\n+    auto b_tx_conflict_partial = MakeTransactionSpending({outpoints.at(3), outpoints.at(4)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict_partial);\n+\n+    auto o_tx_conflict_partial_2 = MakeTransactionSpending({outpoints.at(4), outpoints.at(5)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict_partial_2, node));\n+\n+    orphanage.EraseForBlock(block);\n+    for (const auto& expected_removed : {bo_tx_same_txid, o_tx_same_txid_diff_witness, o_tx_conflict, o_tx_conflict_partial_2}) {\n+        const auto& expected_removed_wtxid = expected_removed->GetWitnessHash();\n+        BOOST_CHECK(!orphanage.HaveTx(expected_removed_wtxid));\n+    }\n+    BOOST_CHECK_EQUAL(orphanage.Size(), 0);",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "5e5fbed1c917bd30aed0e9f3b9f190ecb41d841e",
      "in_reply_to_id": 1880438844,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "good point, added",
      "created_at": "2025-01-03T15:23:36Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901887146",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901887146"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 441,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901887320",
      "pull_request_review_id": 2529228734,
      "id": 1901887320,
      "node_id": "PRRC_kwDOABII585xXH9Y",
      "diff_hunk": "@@ -391,4 +391,178 @@ BOOST_AUTO_TEST_CASE(too_large_orphan_tx)\n     BOOST_CHECK(AddToOrphanage(orphanage, MakeTransactionRef(tx), 0));\n }\n \n+BOOST_AUTO_TEST_CASE(process_block)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Create outpoints that will be spent by transactions in the block\n+    std::vector<COutPoint> outpoints;\n+    const uint32_t num_outpoints{6};\n+    outpoints.reserve(num_outpoints);\n+    for (uint32_t i{0}; i < num_outpoints; ++i) {\n+        // All the hashes should be different, but change the n just in case.\n+        outpoints.emplace_back(Txid::FromUint256(det_rand.rand256()), i);\n+    }\n+\n+    CBlock block;\n+    const NodeId node{0};\n+\n+    auto bo_tx_same_txid = MakeTransactionSpending({outpoints.at(0)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, bo_tx_same_txid, node));\n+    block.vtx.emplace_back(bo_tx_same_txid);\n+\n+    // 2 transactions with the same txid but different witness\n+    auto b_tx_same_txid_diff_witness = MakeTransactionSpending({outpoints.at(1)}, det_rand);\n+    block.vtx.emplace_back(b_tx_same_txid_diff_witness);\n+\n+    auto o_tx_same_txid_diff_witness = MakeMutation(b_tx_same_txid_diff_witness);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_same_txid_diff_witness, node));\n+\n+    // 2 different transactions that spend the same input.\n+    auto b_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict);\n+\n+    auto o_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict, node));\n+\n+    // 2 different transactions that have 1 overlapping input.\n+    auto b_tx_conflict_partial = MakeTransactionSpending({outpoints.at(3), outpoints.at(4)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict_partial);\n+\n+    auto o_tx_conflict_partial_2 = MakeTransactionSpending({outpoints.at(4), outpoints.at(5)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict_partial_2, node));\n+\n+    orphanage.EraseForBlock(block);\n+    for (const auto& expected_removed : {bo_tx_same_txid, o_tx_same_txid_diff_witness, o_tx_conflict, o_tx_conflict_partial_2}) {\n+        const auto& expected_removed_wtxid = expected_removed->GetWitnessHash();\n+        BOOST_CHECK(!orphanage.HaveTx(expected_removed_wtxid));\n+    }\n+    BOOST_CHECK_EQUAL(orphanage.Size(), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(multiple_announcers)\n+{\n+    const NodeId node0{0};\n+    const NodeId node1{1};\n+    const NodeId node2{2};\n+    size_t expected_total_count{0};\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Check accounting per peer.\n+    // Check that EraseForPeer works with multiple announcers.\n+    {\n+        auto ptx = MakeTransactionSpending({}, det_rand);\n+        const auto& wtxid = ptx->GetWitnessHash();\n+        // Not using AddToOrphanage because we want to test the AddTx interface\n+        BOOST_CHECK(orphanage.AddTx(ptx, node0, {}));\n+        BOOST_CHECK(orphanage.HaveTx(wtxid));\n+        expected_total_count += 1;\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // Adding again should do nothing.\n+        BOOST_CHECK(!orphanage.AddTx(ptx, node0, {}));\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // We can add another tx with the same txid but different witness.\n+        auto ptx_mutated{MakeMutation(ptx)};\n+        BOOST_CHECK(orphanage.AddTx(ptx_mutated, node0, {}));\n+        BOOST_CHECK(orphanage.HaveTx(ptx_mutated->GetWitnessHash()));\n+        expected_total_count += 1;\n+\n+        // It's too late to add parent_txids through AddTx.",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 84,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "5e5fbed1c917bd30aed0e9f3b9f190ecb41d841e",
      "in_reply_to_id": 1880445164,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "deleted now that parent_txids is gone",
      "created_at": "2025-01-03T15:23:48Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901887320",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901887320"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 474,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901890380",
      "pull_request_review_id": 2529228734,
      "id": 1901890380,
      "node_id": "PRRC_kwDOABII585xXItM",
      "diff_hunk": "@@ -391,4 +391,178 @@ BOOST_AUTO_TEST_CASE(too_large_orphan_tx)\n     BOOST_CHECK(AddToOrphanage(orphanage, MakeTransactionRef(tx), 0));\n }\n \n+BOOST_AUTO_TEST_CASE(process_block)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Create outpoints that will be spent by transactions in the block\n+    std::vector<COutPoint> outpoints;\n+    const uint32_t num_outpoints{6};\n+    outpoints.reserve(num_outpoints);\n+    for (uint32_t i{0}; i < num_outpoints; ++i) {\n+        // All the hashes should be different, but change the n just in case.\n+        outpoints.emplace_back(Txid::FromUint256(det_rand.rand256()), i);\n+    }\n+\n+    CBlock block;\n+    const NodeId node{0};\n+\n+    auto bo_tx_same_txid = MakeTransactionSpending({outpoints.at(0)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, bo_tx_same_txid, node));\n+    block.vtx.emplace_back(bo_tx_same_txid);\n+\n+    // 2 transactions with the same txid but different witness\n+    auto b_tx_same_txid_diff_witness = MakeTransactionSpending({outpoints.at(1)}, det_rand);\n+    block.vtx.emplace_back(b_tx_same_txid_diff_witness);\n+\n+    auto o_tx_same_txid_diff_witness = MakeMutation(b_tx_same_txid_diff_witness);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_same_txid_diff_witness, node));\n+\n+    // 2 different transactions that spend the same input.\n+    auto b_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict);\n+\n+    auto o_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict, node));\n+\n+    // 2 different transactions that have 1 overlapping input.\n+    auto b_tx_conflict_partial = MakeTransactionSpending({outpoints.at(3), outpoints.at(4)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict_partial);\n+\n+    auto o_tx_conflict_partial_2 = MakeTransactionSpending({outpoints.at(4), outpoints.at(5)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict_partial_2, node));\n+\n+    orphanage.EraseForBlock(block);\n+    for (const auto& expected_removed : {bo_tx_same_txid, o_tx_same_txid_diff_witness, o_tx_conflict, o_tx_conflict_partial_2}) {\n+        const auto& expected_removed_wtxid = expected_removed->GetWitnessHash();\n+        BOOST_CHECK(!orphanage.HaveTx(expected_removed_wtxid));\n+    }\n+    BOOST_CHECK_EQUAL(orphanage.Size(), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(multiple_announcers)\n+{\n+    const NodeId node0{0};\n+    const NodeId node1{1};\n+    const NodeId node2{2};\n+    size_t expected_total_count{0};\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Check accounting per peer.\n+    // Check that EraseForPeer works with multiple announcers.\n+    {\n+        auto ptx = MakeTransactionSpending({}, det_rand);\n+        const auto& wtxid = ptx->GetWitnessHash();\n+        // Not using AddToOrphanage because we want to test the AddTx interface\n+        BOOST_CHECK(orphanage.AddTx(ptx, node0, {}));\n+        BOOST_CHECK(orphanage.HaveTx(wtxid));\n+        expected_total_count += 1;\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // Adding again should do nothing.\n+        BOOST_CHECK(!orphanage.AddTx(ptx, node0, {}));\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // We can add another tx with the same txid but different witness.\n+        auto ptx_mutated{MakeMutation(ptx)};\n+        BOOST_CHECK(orphanage.AddTx(ptx_mutated, node0, {}));\n+        BOOST_CHECK(orphanage.HaveTx(ptx_mutated->GetWitnessHash()));\n+        expected_total_count += 1;\n+\n+        // It's too late to add parent_txids through AddTx.\n+        BOOST_CHECK(!orphanage.AddTx(ptx, node0, {Txid::FromUint256(ptx->vin.at(0).prevout.hash)}));\n+        // Parent txids is empty because the tx exists but no parent_txids were provided.\n+        BOOST_CHECK(orphanage.GetParentTxids(wtxid)->empty());\n+        BOOST_CHECK(orphanage.GetParentTxids(ptx_mutated->GetWitnessHash())->empty());\n+\n+        // Adding a new announcer should not change overall accounting.\n+        orphanage.AddAnnouncer(ptx->GetWitnessHash(), node2);",
      "path": "src/test/orphanage_tests.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "5e5fbed1c917bd30aed0e9f3b9f190ecb41d841e",
      "in_reply_to_id": 1880468799,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "added",
      "created_at": "2025-01-03T15:26:53Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901890380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901890380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 481,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901891303",
      "pull_request_review_id": 2529228734,
      "id": 1901891303,
      "node_id": "PRRC_kwDOABII585xXI7n",
      "diff_hunk": "@@ -391,4 +391,178 @@ BOOST_AUTO_TEST_CASE(too_large_orphan_tx)\n     BOOST_CHECK(AddToOrphanage(orphanage, MakeTransactionRef(tx), 0));\n }\n \n+BOOST_AUTO_TEST_CASE(process_block)\n+{\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Create outpoints that will be spent by transactions in the block\n+    std::vector<COutPoint> outpoints;\n+    const uint32_t num_outpoints{6};\n+    outpoints.reserve(num_outpoints);\n+    for (uint32_t i{0}; i < num_outpoints; ++i) {\n+        // All the hashes should be different, but change the n just in case.\n+        outpoints.emplace_back(Txid::FromUint256(det_rand.rand256()), i);\n+    }\n+\n+    CBlock block;\n+    const NodeId node{0};\n+\n+    auto bo_tx_same_txid = MakeTransactionSpending({outpoints.at(0)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, bo_tx_same_txid, node));\n+    block.vtx.emplace_back(bo_tx_same_txid);\n+\n+    // 2 transactions with the same txid but different witness\n+    auto b_tx_same_txid_diff_witness = MakeTransactionSpending({outpoints.at(1)}, det_rand);\n+    block.vtx.emplace_back(b_tx_same_txid_diff_witness);\n+\n+    auto o_tx_same_txid_diff_witness = MakeMutation(b_tx_same_txid_diff_witness);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_same_txid_diff_witness, node));\n+\n+    // 2 different transactions that spend the same input.\n+    auto b_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict);\n+\n+    auto o_tx_conflict = MakeTransactionSpending({outpoints.at(2)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict, node));\n+\n+    // 2 different transactions that have 1 overlapping input.\n+    auto b_tx_conflict_partial = MakeTransactionSpending({outpoints.at(3), outpoints.at(4)}, det_rand);\n+    block.vtx.emplace_back(b_tx_conflict_partial);\n+\n+    auto o_tx_conflict_partial_2 = MakeTransactionSpending({outpoints.at(4), outpoints.at(5)}, det_rand);\n+    BOOST_CHECK(AddToOrphanage(orphanage, o_tx_conflict_partial_2, node));\n+\n+    orphanage.EraseForBlock(block);\n+    for (const auto& expected_removed : {bo_tx_same_txid, o_tx_same_txid_diff_witness, o_tx_conflict, o_tx_conflict_partial_2}) {\n+        const auto& expected_removed_wtxid = expected_removed->GetWitnessHash();\n+        BOOST_CHECK(!orphanage.HaveTx(expected_removed_wtxid));\n+    }\n+    BOOST_CHECK_EQUAL(orphanage.Size(), 0);\n+}\n+\n+BOOST_AUTO_TEST_CASE(multiple_announcers)\n+{\n+    const NodeId node0{0};\n+    const NodeId node1{1};\n+    const NodeId node2{2};\n+    size_t expected_total_count{0};\n+    FastRandomContext det_rand{true};\n+    TxOrphanageTest orphanage{det_rand};\n+\n+    // Check accounting per peer.\n+    // Check that EraseForPeer works with multiple announcers.\n+    {\n+        auto ptx = MakeTransactionSpending({}, det_rand);\n+        const auto& wtxid = ptx->GetWitnessHash();\n+        // Not using AddToOrphanage because we want to test the AddTx interface\n+        BOOST_CHECK(orphanage.AddTx(ptx, node0, {}));\n+        BOOST_CHECK(orphanage.HaveTx(wtxid));\n+        expected_total_count += 1;\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // Adding again should do nothing.\n+        BOOST_CHECK(!orphanage.AddTx(ptx, node0, {}));\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // We can add another tx with the same txid but different witness.\n+        auto ptx_mutated{MakeMutation(ptx)};\n+        BOOST_CHECK(orphanage.AddTx(ptx_mutated, node0, {}));\n+        BOOST_CHECK(orphanage.HaveTx(ptx_mutated->GetWitnessHash()));\n+        expected_total_count += 1;\n+\n+        // It's too late to add parent_txids through AddTx.\n+        BOOST_CHECK(!orphanage.AddTx(ptx, node0, {Txid::FromUint256(ptx->vin.at(0).prevout.hash)}));\n+        // Parent txids is empty because the tx exists but no parent_txids were provided.\n+        BOOST_CHECK(orphanage.GetParentTxids(wtxid)->empty());\n+        BOOST_CHECK(orphanage.GetParentTxids(ptx_mutated->GetWitnessHash())->empty());\n+\n+        // Adding a new announcer should not change overall accounting.\n+        orphanage.AddAnnouncer(ptx->GetWitnessHash(), node2);\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // Same with using AddTx for an existing tx, which is equivalent to using AddAnnouncer\n+        BOOST_CHECK(!orphanage.AddTx(ptx, node1, {}));\n+        BOOST_CHECK_EQUAL(orphanage.Size(), expected_total_count);\n+\n+        // if EraseForPeer is called for an orphan with multiple announcers, the orphanage should only\n+        // erase that peer from the announcers set.\n+        orphanage.EraseForPeer(node0);\n+        BOOST_CHECK(orphanage.HaveTx(ptx->GetWitnessHash()));\n+        // node0 is the only one that announced ptx_mutated",
      "path": "src/test/orphanage_tests.cpp",
      "position": 202,
      "original_position": 102,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "5e5fbed1c917bd30aed0e9f3b9f190ecb41d841e",
      "in_reply_to_id": 1880453462,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "added",
      "created_at": "2025-01-03T15:27:57Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901891303",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901891303"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 480,
      "original_line": 480,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901895281",
      "pull_request_review_id": 2529228734,
      "id": 1901895281,
      "node_id": "PRRC_kwDOABII585xXJ5x",
      "diff_hunk": "@@ -16,8 +16,11 @@ bool TxOrphanage::AddTx(const CTransactionRef& tx, NodeId peer, const std::vecto\n {\n     const Txid& hash = tx->GetHash();\n     const Wtxid& wtxid = tx->GetWitnessHash();\n-    if (m_orphans.count(wtxid))\n+    if (auto it{m_orphans.find(wtxid)}; it != m_orphans.end()) {",
      "path": "src/txorphanage.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "9a77d84a56906c80412d60d3eb7065b1f436fc94",
      "in_reply_to_id": 1880429356,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The conditions aren't exactly the same since `AddAnnouncer` also returns false if we already HaveTxFromPeer. We'd need to make the return result tri-state.",
      "created_at": "2025-01-03T15:32:16Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901895281",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901895281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 19,
      "original_line": 19,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901902305",
      "pull_request_review_id": 2529228734,
      "id": 1901902305,
      "node_id": "PRRC_kwDOABII585xXLnh",
      "diff_hunk": "@@ -89,9 +106,14 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     while (iter != m_orphans.end())\n     {\n         // increment to avoid iterator becoming invalid after erasure\n-        const auto& [wtxid, orphan] = *iter++;\n-        if (orphan.fromPeer == peer) {\n-            nErased += EraseTx(wtxid);\n+        auto& [wtxid, orphan] = *iter++;",
      "path": "src/txorphanage.cpp",
      "position": 50,
      "original_position": 50,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "9a77d84a56906c80412d60d3eb7065b1f436fc94",
      "in_reply_to_id": 1880419880,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-01-03T15:35:20Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901902305",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901902305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 109,
      "original_line": 109,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901903928",
      "pull_request_review_id": 2529228734,
      "id": 1901903928,
      "node_id": "PRRC_kwDOABII585xXMA4",
      "diff_hunk": "@@ -135,13 +157,17 @@ void TxOrphanage::AddChildrenToWorkSet(const CTransaction& tx)\n         const auto it_by_prev = m_outpoint_to_orphan_it.find(COutPoint(tx.GetHash(), i));\n         if (it_by_prev != m_outpoint_to_orphan_it.end()) {\n             for (const auto& elem : it_by_prev->second) {\n-                // Get this source peer's work set, emplacing an empty set if it didn't exist\n-                // (note: if this peer wasn't still connected, we would have removed the orphan tx already)\n-                std::set<Wtxid>& orphan_work_set = m_peer_work_set.try_emplace(elem->second.fromPeer).first->second;\n-                // Add this tx to the work set\n-                orphan_work_set.insert(elem->first);\n-                LogDebug(BCLog::TXPACKAGES, \"added %s (wtxid=%s) to peer %d workset\\n\",\n-                         tx.GetHash().ToString(), tx.GetWitnessHash().ToString(), elem->second.fromPeer);\n+                // Belt and suspenders, each orphan should always have at least 1 announcer.\n+                if (!Assume(!elem->second.announcers.empty())) break;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 91,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "9a77d84a56906c80412d60d3eb7065b1f436fc94",
      "in_reply_to_id": 1882411971,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Changed to continue",
      "created_at": "2025-01-03T15:36:15Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901903928",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901903928"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 161,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901905478",
      "pull_request_review_id": 2529228734,
      "id": 1901905478,
      "node_id": "PRRC_kwDOABII585xXMZG",
      "diff_hunk": "@@ -287,3 +287,10 @@ std::vector<TxOrphanage::OrphanTxBase> TxOrphanage::GetOrphanTransactions() cons\n     }\n     return ret;\n }\n+\n+std::optional<std::vector<Txid>> TxOrphanage::GetParentTxids(const Wtxid& wtxid)\n+{\n+    const auto it = m_orphans.find(wtxid);\n+    if (it != m_orphans.end()) return it->second.parent_txids;",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 26,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "6e57412d51039833c826ed9f4fa1f1d6d157251b",
      "in_reply_to_id": 1880498755,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fwiw makes sense, but this function doesn't exist anymore, so marking resolved",
      "created_at": "2025-01-03T15:36:59Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901905478",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901905478"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 294,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901905808",
      "pull_request_review_id": 2529228734,
      "id": 1901905808,
      "node_id": "PRRC_kwDOABII585xXMeQ",
      "diff_hunk": "@@ -66,6 +68,9 @@ class TxOrphanage {\n      * which peer provided each tx. */\n     std::vector<std::pair<CTransactionRef, NodeId>> GetChildrenFromDifferentPeer(const CTransactionRef& parent, NodeId nodeid) const;\n \n+    /** Get an orphan's parent_txids, or std::nullopt if the orphan is not present. */",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 17,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "6e57412d51039833c826ed9f4fa1f1d6d157251b",
      "in_reply_to_id": 1880508916,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Deleted",
      "created_at": "2025-01-03T15:37:06Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901905808",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901905808"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901906865",
      "pull_request_review_id": 2529228734,
      "id": 1901906865,
      "node_id": "PRRC_kwDOABII585xXMux",
      "diff_hunk": "@@ -84,6 +89,8 @@ class TxOrphanage {\n protected:\n     struct OrphanTx : public OrphanTxBase {\n         size_t list_pos;\n+        /** Txids of the missing parents to request. Determined by peerman. */",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 27,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "80a0fd011902de0b4d05a2b98ee0ee4d28adcfd0",
      "in_reply_to_id": 1879016883,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "deleted",
      "created_at": "2025-01-03T15:37:36Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901906865",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901906865"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901907439",
      "pull_request_review_id": 2529228734,
      "id": 1901907439,
      "node_id": "PRRC_kwDOABII585xXM3v",
      "diff_hunk": "@@ -84,6 +89,8 @@ class TxOrphanage {\n protected:\n     struct OrphanTx : public OrphanTxBase {\n         size_t list_pos;\n+        /** Txids of the missing parents to request. Determined by peerman. */\n+        std::vector<Txid> parent_txids;",
      "path": "src/txorphanage.h",
      "position": null,
      "original_position": 28,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "6e57412d51039833c826ed9f4fa1f1d6d157251b",
      "in_reply_to_id": 1880816026,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Changed approach to recalculate every time, and added a test case",
      "created_at": "2025-01-03T15:37:51Z",
      "updated_at": "2025-01-03T16:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901907439",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1901907439"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 93,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902153685",
      "pull_request_review_id": 2529697189,
      "id": 1902153685,
      "node_id": "PRRC_kwDOABII585xYI_V",
      "diff_hunk": "@@ -301,14 +329,29 @@ void TxDownloadManagerImpl::MempoolAcceptedTx(const CTransactionRef& tx)\n     m_orphanage.EraseTx(tx->GetWitnessHash());\n }\n \n+std::vector<Txid> TxDownloadManagerImpl::GetUniqueParents(const CTransaction& tx)",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 146,
      "original_position": 143,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a2ab8d2a690d0f0e7e074636589bba003a51cc96",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should this attempt to recurse, and give all ancestors? Not relevant for 1p1c, but in general, in both call sites that seems desirable (an announcement for an orphan should be seen as an announcement for all its ancestors, resolving an orphan means all ancestors can be considered received).",
      "created_at": "2025-01-03T20:52:52Z",
      "updated_at": "2025-01-03T22:10:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1902153685",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902153685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902155109",
      "pull_request_review_id": 2529697189,
      "id": 1902155109,
      "node_id": "PRRC_kwDOABII585xYJVl",
      "diff_hunk": "@@ -574,6 +574,23 @@ class TxRequestTracker::Impl {\n         }\n     }\n \n+    std::vector<NodeId> GetCandidatePeers(const CTransactionRef& tx) const\n+    {\n+        // Search by txid and, if the tx has a witness, wtxid\n+        std::vector<uint256> hashes{tx->GetHash().ToUint256()};\n+        if (tx->HasWitness()) hashes.emplace_back(tx->GetWitnessHash().ToUint256());\n+\n+        std::vector<NodeId> result_peers;\n+        for (const uint256& txhash : hashes) {\n+            auto it = m_index.get<ByTxHash>().lower_bound(ByTxHashView{txhash, State::CANDIDATE_DELAYED, 0});\n+            while (it != m_index.get<ByTxHash>().end() && it->m_txhash == txhash) {\n+                if (it->GetState() != State::COMPLETED) result_peers.push_back(it->m_peer);\n+                ++it;\n+            }\n+        }\n+        return result_peers;",
      "path": "src/txrequest.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a2ab8d2a690d0f0e7e074636589bba003a51cc96",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should this attempt to deduplicate? Is it possible that we have both an txid and wtxid announcement from the same peer for the same transaction?",
      "created_at": "2025-01-03T20:54:26Z",
      "updated_at": "2025-01-03T22:10:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1902155109",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902155109"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 591,
      "original_line": 591,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902163221",
      "pull_request_review_id": 2529697189,
      "id": 1902163221,
      "node_id": "PRRC_kwDOABII585xYLUV",
      "diff_hunk": "@@ -574,6 +574,23 @@ class TxRequestTracker::Impl {\n         }\n     }\n \n+    std::vector<NodeId> GetCandidatePeers(const CTransactionRef& tx) const\n+    {\n+        // Search by txid and, if the tx has a witness, wtxid\n+        std::vector<uint256> hashes{tx->GetHash().ToUint256()};\n+        if (tx->HasWitness()) hashes.emplace_back(tx->GetWitnessHash().ToUint256());\n+\n+        std::vector<NodeId> result_peers;\n+        for (const uint256& txhash : hashes) {\n+            auto it = m_index.get<ByTxHash>().lower_bound(ByTxHashView{txhash, State::CANDIDATE_DELAYED, 0});\n+            while (it != m_index.get<ByTxHash>().end() && it->m_txhash == txhash) {\n+                if (it->GetState() != State::COMPLETED) result_peers.push_back(it->m_peer);",
      "path": "src/txrequest.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a2ab8d2a690d0f0e7e074636589bba003a51cc96",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since `State::COMPLETED` is the final state, it's possible to move this condition into the loop (`it->m_txhash == txhash && it->GetState() != State::COMPLETED`); hitting COMPLETED means we're done with that hash.",
      "created_at": "2025-01-03T20:58:22Z",
      "updated_at": "2025-01-03T22:10:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1902163221",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902163221"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 587,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902179413",
      "pull_request_review_id": 2529697189,
      "id": 1902179413,
      "node_id": "PRRC_kwDOABII585xYPRV",
      "diff_hunk": "@@ -89,9 +106,14 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     while (iter != m_orphans.end())\n     {\n         // increment to avoid iterator becoming invalid after erasure\n-        const auto& [wtxid, orphan] = *iter++;\n-        if (orphan.fromPeer == peer) {\n-            nErased += EraseTx(wtxid);\n+        auto& [wtxid, orphan] = *iter++;\n+        if (orphan.announcers.contains(peer)) {",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "25308d05b99e24eba8e2aceaba44fc3784e5ed94",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this can be written to avoid a repeated lookup:\r\n\r\n```c++\r\nauto orphan_it = orphan.announcers.find(peer);\r\nif (orphan_it != orphan.announcers.end()) {\r\n    orphan.announcers.erase(orphan_it);\r\n    if (orphan.announcers.empty()) {\r\n        nErased += EraseTx(orphan.tx->GetWitnessHash());\r\n    }\r\n}\r\n```",
      "created_at": "2025-01-03T21:25:34Z",
      "updated_at": "2025-01-03T22:10:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1902179413",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902179413"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902181326",
      "pull_request_review_id": 2529697189,
      "id": 1902181326,
      "node_id": "PRRC_kwDOABII585xYPvO",
      "diff_hunk": "@@ -152,6 +178,12 @@ bool TxOrphanage::HaveTx(const Wtxid& wtxid) const\n     return m_orphans.count(wtxid);\n }\n \n+bool TxOrphanage::HaveTxFromPeer(const Wtxid& wtxid, NodeId peer) const\n+{\n+    auto it = m_orphans.find(wtxid);\n+    return (it != m_orphans.end() && it->second.announcers.count(peer) > 0);",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "25308d05b99e24eba8e2aceaba44fc3784e5ed94",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit: can use `contains(peer)` instead of `count(peer) > 0`.",
      "created_at": "2025-01-03T21:29:06Z",
      "updated_at": "2025-01-03T22:10:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1902181326",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902181326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902188752",
      "pull_request_review_id": 2529697189,
      "id": 1902188752,
      "node_id": "PRRC_kwDOABII585xYRjQ",
      "diff_hunk": "@@ -273,7 +305,9 @@ std::vector<std::pair<CTransactionRef, NodeId>> TxOrphanage::GetChildrenFromDiff\n     std::vector<std::pair<CTransactionRef, NodeId>> children_found;\n     children_found.reserve(iters.size());\n     for (const auto& child_iter : iters) {\n-        children_found.emplace_back(child_iter->second.tx, child_iter->second.fromPeer);\n+        // Use first peer in announcers list",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 140,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "25308d05b99e24eba8e2aceaba44fc3784e5ed94",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What if the first peer in the announcer list equals `nodeid`?\r\n\r\nEDIT: I see this function is removed in a later commit anyway, so it probably doesn't matter much.",
      "created_at": "2025-01-03T21:42:07Z",
      "updated_at": "2025-01-03T22:10:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1902188752",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902188752"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 308,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902194407",
      "pull_request_review_id": 2529697189,
      "id": 1902194407,
      "node_id": "PRRC_kwDOABII585xYS7n",
      "diff_hunk": "@@ -174,9 +174,35 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\n {\n+    // If this is an orphan we are trying to resolve, consider this peer as a orphan resolution candidate instead.\n+    // - received as an p2p inv\n+    // - is wtxid matching something in orphanage\n+    // - exists in orphanage\n+    // - peer can be an orphan resolution candidate\n+    if (p2p_inv && gtxid.IsWtxid()) {\n+        if (auto orphan_tx{m_orphanage.GetTx(Wtxid::FromUint256(gtxid.GetHash()))}) {\n+            auto unique_parents{GetUniqueParents(*orphan_tx)};\n+            std::erase_if(unique_parents, [&](const auto& txid){\n+                return AlreadyHaveTx(GenTxid::Txid(txid), /*include_reconsiderable=*/false);\n+            });\n+\n+            if (auto delay{OrphanResolutionCandidate(peer, Wtxid::FromUint256(gtxid.GetHash()), unique_parents.size())}) {\n+                m_orphanage.AddAnnouncer(Wtxid::FromUint256(gtxid.GetHash()), peer);",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 33,
      "original_position": 17,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "d7bc6e841c3ea2bbf4c9b63018f99172bdfa23af",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is it possible that `unique_parents` is empty here? I guess that would mean the orphan can be / should have been processed already? If so, should we call `AddAnnouncer` even?",
      "created_at": "2025-01-03T21:51:18Z",
      "updated_at": "2025-01-03T22:10:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1902194407",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902194407"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 191,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902201969",
      "pull_request_review_id": 2529697189,
      "id": 1902201969,
      "node_id": "PRRC_kwDOABII585xYUxx",
      "diff_hunk": "@@ -363,26 +418,42 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n                 std::erase_if(unique_parents, [&](const auto& txid){\n                     return AlreadyHaveTx(GenTxid::Txid(txid), /*include_reconsiderable=*/false);\n                 });\n-                const auto current_time{GetTime<std::chrono::microseconds>()};\n-\n-                for (const uint256& parent_txid : unique_parents) {\n-                    // Here, we only have the txid (and not wtxid) of the\n-                    // inputs, so we only request in txid mode, even for\n-                    // wtxidrelay peers.\n-                    // Eventually we should replace this with an improved\n-                    // protocol for getting all unconfirmed parents.\n-                    const auto gtxid{GenTxid::Txid(parent_txid)};\n-                    AddTxAnnouncement(nodeid, gtxid, current_time, /*p2p_inv=*/false);\n+                const auto now{GetTime<std::chrono::microseconds>()};\n+                const auto& wtxid = ptx->GetWitnessHash();\n+                // Potentially flip add_extra_compact_tx to false if tx is already in orphanage, which\n+                // means it was already added to vExtraTxnForCompact.\n+                add_extra_compact_tx &= !m_orphanage.HaveTx(wtxid);\n+\n+                auto add_orphan_reso_candidate = [&](const CTransactionRef& orphan_tx, std::vector<Txid> unique_parents, NodeId nodeid, std::chrono::microseconds now) {",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "d7bc6e841c3ea2bbf4c9b63018f99172bdfa23af",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Pass `unique_parents` by reference to avoid a copy for each invocation of `add_orphan_reso_candidate`.",
      "created_at": "2025-01-03T22:06:23Z",
      "updated_at": "2025-01-03T22:10:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1902201969",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902201969"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902202580",
      "pull_request_review_id": 2529697189,
      "id": 1902202580,
      "node_id": "PRRC_kwDOABII585xYU7U",
      "diff_hunk": "@@ -363,26 +418,42 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n                 std::erase_if(unique_parents, [&](const auto& txid){\n                     return AlreadyHaveTx(GenTxid::Txid(txid), /*include_reconsiderable=*/false);\n                 });\n-                const auto current_time{GetTime<std::chrono::microseconds>()};\n-\n-                for (const uint256& parent_txid : unique_parents) {\n-                    // Here, we only have the txid (and not wtxid) of the\n-                    // inputs, so we only request in txid mode, even for\n-                    // wtxidrelay peers.\n-                    // Eventually we should replace this with an improved\n-                    // protocol for getting all unconfirmed parents.\n-                    const auto gtxid{GenTxid::Txid(parent_txid)};\n-                    AddTxAnnouncement(nodeid, gtxid, current_time, /*p2p_inv=*/false);\n+                const auto now{GetTime<std::chrono::microseconds>()};\n+                const auto& wtxid = ptx->GetWitnessHash();\n+                // Potentially flip add_extra_compact_tx to false if tx is already in orphanage, which\n+                // means it was already added to vExtraTxnForCompact.\n+                add_extra_compact_tx &= !m_orphanage.HaveTx(wtxid);\n+\n+                auto add_orphan_reso_candidate = [&](const CTransactionRef& orphan_tx, std::vector<Txid> unique_parents, NodeId nodeid, std::chrono::microseconds now) {\n+                    const auto& wtxid = orphan_tx->GetWitnessHash();\n+                    if (auto delay{OrphanResolutionCandidate(nodeid, wtxid, unique_parents.size())}) {",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 219,
      "original_position": 96,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "d7bc6e841c3ea2bbf4c9b63018f99172bdfa23af",
      "in_reply_to_id": null,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This logic looks very similar to that in `TxDownloadManagerImpl::AddTxAnnouncement`. Is it possible to abstract it out?",
      "created_at": "2025-01-03T22:07:45Z",
      "updated_at": "2025-01-03T22:10:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1902202580",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1902202580"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 405,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904121487",
      "pull_request_review_id": 2532089219,
      "id": 1904121487,
      "node_id": "PRRC_kwDOABII585xfpaP",
      "diff_hunk": "@@ -574,6 +574,23 @@ class TxRequestTracker::Impl {\n         }\n     }\n \n+    std::vector<NodeId> GetCandidatePeers(const CTransactionRef& tx) const\n+    {\n+        // Search by txid and, if the tx has a witness, wtxid\n+        std::vector<uint256> hashes{tx->GetHash().ToUint256()};\n+        if (tx->HasWitness()) hashes.emplace_back(tx->GetWitnessHash().ToUint256());\n+\n+        std::vector<NodeId> result_peers;\n+        for (const uint256& txhash : hashes) {\n+            auto it = m_index.get<ByTxHash>().lower_bound(ByTxHashView{txhash, State::CANDIDATE_DELAYED, 0});\n+            while (it != m_index.get<ByTxHash>().end() && it->m_txhash == txhash) {\n+                if (it->GetState() != State::COMPLETED) result_peers.push_back(it->m_peer);\n+                ++it;\n+            }\n+        }\n+        return result_peers;",
      "path": "src/txrequest.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a2ab8d2a690d0f0e7e074636589bba003a51cc96",
      "in_reply_to_id": 1902155109,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes it's possible (have a comment \"The resulting vector may contain duplicate NodeIds\"). The cases I can think of, from least likely to most likely:\r\n\r\n- the peer announced both txid and wtxid to us (Bitcoin Core wouldn't do this)\r\n- there is a transaction circulating with and without a witness (very rare?)\r\n- the tx is announced by wtxid and we are also trying to fetch it by txid because its child is in our orphanage\r\n\r\nSo I expect duplicates will be very rare. Also, the worst case is that a NodeId appears twice. When there is a deduplicate, we exit at the top of `OrphanResolutionCandidate()`. This makes me think that attempting to deduplicate may not be worth it?",
      "created_at": "2025-01-06T12:57:39Z",
      "updated_at": "2025-01-06T14:17:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1904121487",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904121487"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 591,
      "original_line": 591,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904124892",
      "pull_request_review_id": 2532089219,
      "id": 1904124892,
      "node_id": "PRRC_kwDOABII585xfqPc",
      "diff_hunk": "@@ -301,14 +329,29 @@ void TxDownloadManagerImpl::MempoolAcceptedTx(const CTransactionRef& tx)\n     m_orphanage.EraseTx(tx->GetWitnessHash());\n }\n \n+std::vector<Txid> TxDownloadManagerImpl::GetUniqueParents(const CTransaction& tx)",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 146,
      "original_position": 143,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a2ab8d2a690d0f0e7e074636589bba003a51cc96",
      "in_reply_to_id": 1902153685,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could you elaborate on how we would get missing ancestors beyond parents? We could iterate through the vin of parents we already have, but I don't see how any of those could be missing. And we can't look through the vin of a missing parent.",
      "created_at": "2025-01-06T13:01:15Z",
      "updated_at": "2025-01-06T14:17:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1904124892",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904124892"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904137841",
      "pull_request_review_id": 2532089219,
      "id": 1904137841,
      "node_id": "PRRC_kwDOABII585xftZx",
      "diff_hunk": "@@ -89,9 +106,14 @@ void TxOrphanage::EraseForPeer(NodeId peer)\n     while (iter != m_orphans.end())\n     {\n         // increment to avoid iterator becoming invalid after erasure\n-        const auto& [wtxid, orphan] = *iter++;\n-        if (orphan.fromPeer == peer) {\n-            nErased += EraseTx(wtxid);\n+        auto& [wtxid, orphan] = *iter++;\n+        if (orphan.announcers.contains(peer)) {",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 51,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "25308d05b99e24eba8e2aceaba44fc3784e5ed94",
      "in_reply_to_id": 1902179413,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-01-06T13:15:07Z",
      "updated_at": "2025-01-06T14:17:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1904137841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904137841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904179956",
      "pull_request_review_id": 2532089219,
      "id": 1904179956,
      "node_id": "PRRC_kwDOABII585xf3r0",
      "diff_hunk": "@@ -152,6 +178,12 @@ bool TxOrphanage::HaveTx(const Wtxid& wtxid) const\n     return m_orphans.count(wtxid);\n }\n \n+bool TxOrphanage::HaveTxFromPeer(const Wtxid& wtxid, NodeId peer) const\n+{\n+    auto it = m_orphans.find(wtxid);\n+    return (it != m_orphans.end() && it->second.announcers.count(peer) > 0);",
      "path": "src/txorphanage.cpp",
      "position": null,
      "original_position": 111,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "25308d05b99e24eba8e2aceaba44fc3784e5ed94",
      "in_reply_to_id": 1902181326,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thanks, done",
      "created_at": "2025-01-06T13:54:24Z",
      "updated_at": "2025-01-06T14:17:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1904179956",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904179956"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904183854",
      "pull_request_review_id": 2532089219,
      "id": 1904183854,
      "node_id": "PRRC_kwDOABII585xf4ou",
      "diff_hunk": "@@ -574,6 +574,23 @@ class TxRequestTracker::Impl {\n         }\n     }\n \n+    std::vector<NodeId> GetCandidatePeers(const CTransactionRef& tx) const\n+    {\n+        // Search by txid and, if the tx has a witness, wtxid\n+        std::vector<uint256> hashes{tx->GetHash().ToUint256()};\n+        if (tx->HasWitness()) hashes.emplace_back(tx->GetWitnessHash().ToUint256());\n+\n+        std::vector<NodeId> result_peers;\n+        for (const uint256& txhash : hashes) {\n+            auto it = m_index.get<ByTxHash>().lower_bound(ByTxHashView{txhash, State::CANDIDATE_DELAYED, 0});\n+            while (it != m_index.get<ByTxHash>().end() && it->m_txhash == txhash) {\n+                if (it->GetState() != State::COMPLETED) result_peers.push_back(it->m_peer);",
      "path": "src/txrequest.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a2ab8d2a690d0f0e7e074636589bba003a51cc96",
      "in_reply_to_id": 1902163221,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice, thanks!",
      "created_at": "2025-01-06T13:57:46Z",
      "updated_at": "2025-01-06T14:17:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1904183854",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904183854"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 587,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904184387",
      "pull_request_review_id": 2532089219,
      "id": 1904184387,
      "node_id": "PRRC_kwDOABII585xf4xD",
      "diff_hunk": "@@ -363,26 +418,42 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n                 std::erase_if(unique_parents, [&](const auto& txid){\n                     return AlreadyHaveTx(GenTxid::Txid(txid), /*include_reconsiderable=*/false);\n                 });\n-                const auto current_time{GetTime<std::chrono::microseconds>()};\n-\n-                for (const uint256& parent_txid : unique_parents) {\n-                    // Here, we only have the txid (and not wtxid) of the\n-                    // inputs, so we only request in txid mode, even for\n-                    // wtxidrelay peers.\n-                    // Eventually we should replace this with an improved\n-                    // protocol for getting all unconfirmed parents.\n-                    const auto gtxid{GenTxid::Txid(parent_txid)};\n-                    AddTxAnnouncement(nodeid, gtxid, current_time, /*p2p_inv=*/false);\n+                const auto now{GetTime<std::chrono::microseconds>()};\n+                const auto& wtxid = ptx->GetWitnessHash();\n+                // Potentially flip add_extra_compact_tx to false if tx is already in orphanage, which\n+                // means it was already added to vExtraTxnForCompact.\n+                add_extra_compact_tx &= !m_orphanage.HaveTx(wtxid);\n+\n+                auto add_orphan_reso_candidate = [&](const CTransactionRef& orphan_tx, std::vector<Txid> unique_parents, NodeId nodeid, std::chrono::microseconds now) {",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "d7bc6e841c3ea2bbf4c9b63018f99172bdfa23af",
      "in_reply_to_id": 1902201969,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Of course, done",
      "created_at": "2025-01-06T13:58:13Z",
      "updated_at": "2025-01-06T14:17:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1904184387",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904184387"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 427,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904206083",
      "pull_request_review_id": 2532089219,
      "id": 1904206083,
      "node_id": "PRRC_kwDOABII585xf-ED",
      "diff_hunk": "@@ -174,9 +174,35 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\n {\n+    // If this is an orphan we are trying to resolve, consider this peer as a orphan resolution candidate instead.\n+    // - received as an p2p inv\n+    // - is wtxid matching something in orphanage\n+    // - exists in orphanage\n+    // - peer can be an orphan resolution candidate\n+    if (p2p_inv && gtxid.IsWtxid()) {\n+        if (auto orphan_tx{m_orphanage.GetTx(Wtxid::FromUint256(gtxid.GetHash()))}) {\n+            auto unique_parents{GetUniqueParents(*orphan_tx)};\n+            std::erase_if(unique_parents, [&](const auto& txid){\n+                return AlreadyHaveTx(GenTxid::Txid(txid), /*include_reconsiderable=*/false);\n+            });\n+\n+            if (auto delay{OrphanResolutionCandidate(peer, Wtxid::FromUint256(gtxid.GetHash()), unique_parents.size())}) {\n+                m_orphanage.AddAnnouncer(Wtxid::FromUint256(gtxid.GetHash()), peer);",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 33,
      "original_position": 17,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "d7bc6e841c3ea2bbf4c9b63018f99172bdfa23af",
      "in_reply_to_id": 1902194407,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hm right, I don't think we can assume that it's never empty - I've added an exit case",
      "created_at": "2025-01-06T14:17:36Z",
      "updated_at": "2025-01-06T14:17:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1904206083",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904206083"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 191,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904211617",
      "pull_request_review_id": 2532245916,
      "id": 1904211617,
      "node_id": "PRRC_kwDOABII585xf_ah",
      "diff_hunk": "@@ -363,26 +418,42 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n                 std::erase_if(unique_parents, [&](const auto& txid){\n                     return AlreadyHaveTx(GenTxid::Txid(txid), /*include_reconsiderable=*/false);\n                 });\n-                const auto current_time{GetTime<std::chrono::microseconds>()};\n-\n-                for (const uint256& parent_txid : unique_parents) {\n-                    // Here, we only have the txid (and not wtxid) of the\n-                    // inputs, so we only request in txid mode, even for\n-                    // wtxidrelay peers.\n-                    // Eventually we should replace this with an improved\n-                    // protocol for getting all unconfirmed parents.\n-                    const auto gtxid{GenTxid::Txid(parent_txid)};\n-                    AddTxAnnouncement(nodeid, gtxid, current_time, /*p2p_inv=*/false);\n+                const auto now{GetTime<std::chrono::microseconds>()};\n+                const auto& wtxid = ptx->GetWitnessHash();\n+                // Potentially flip add_extra_compact_tx to false if tx is already in orphanage, which\n+                // means it was already added to vExtraTxnForCompact.\n+                add_extra_compact_tx &= !m_orphanage.HaveTx(wtxid);\n+\n+                auto add_orphan_reso_candidate = [&](const CTransactionRef& orphan_tx, std::vector<Txid> unique_parents, NodeId nodeid, std::chrono::microseconds now) {\n+                    const auto& wtxid = orphan_tx->GetWitnessHash();\n+                    if (auto delay{OrphanResolutionCandidate(nodeid, wtxid, unique_parents.size())}) {",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 219,
      "original_position": 96,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "d7bc6e841c3ea2bbf4c9b63018f99172bdfa23af",
      "in_reply_to_id": 1902202580,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, it is similar. I'm open to code diff suggestions.\r\n\r\nI tried a few times to refactor but found some things a bit ugly to work around: we force the `IsWtxid` check to be false since we're requesting parents by txid, and the number of requests is not always 1 (also see https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1901875482). In the future, the function may deviate when we add more per-peer orphan resolution limits and/or another way to do orphan resolution.",
      "created_at": "2025-01-06T14:22:28Z",
      "updated_at": "2025-01-06T14:22:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1904211617",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904211617"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 405,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904274621",
      "pull_request_review_id": 2532356458,
      "id": 1904274621,
      "node_id": "PRRC_kwDOABII585xgOy9",
      "diff_hunk": "@@ -301,14 +329,29 @@ void TxDownloadManagerImpl::MempoolAcceptedTx(const CTransactionRef& tx)\n     m_orphanage.EraseTx(tx->GetWitnessHash());\n }\n \n+std::vector<Txid> TxDownloadManagerImpl::GetUniqueParents(const CTransaction& tx)",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 146,
      "original_position": 143,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a2ab8d2a690d0f0e7e074636589bba003a51cc96",
      "in_reply_to_id": 1902153685,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, by recursing through transactions in the orphanage I meant.\r\n\r\nImagine a sequence A->B->C (A spends on output of B, B spends an output of C). We have received A and B already (in orphanage), but C is still missing. An announcement from a new peer for transaction A can reasonably be treated as an announcement for C from that peer.",
      "created_at": "2025-01-06T15:13:04Z",
      "updated_at": "2025-01-06T15:13:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1904274621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904274621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904615930",
      "pull_request_review_id": 2532936243,
      "id": 1904615930,
      "node_id": "PRRC_kwDOABII585xhiH6",
      "diff_hunk": "@@ -574,6 +574,23 @@ class TxRequestTracker::Impl {\n         }\n     }\n \n+    std::vector<NodeId> GetCandidatePeers(const CTransactionRef& tx) const\n+    {\n+        // Search by txid and, if the tx has a witness, wtxid\n+        std::vector<uint256> hashes{tx->GetHash().ToUint256()};\n+        if (tx->HasWitness()) hashes.emplace_back(tx->GetWitnessHash().ToUint256());\n+\n+        std::vector<NodeId> result_peers;\n+        for (const uint256& txhash : hashes) {\n+            auto it = m_index.get<ByTxHash>().lower_bound(ByTxHashView{txhash, State::CANDIDATE_DELAYED, 0});\n+            while (it != m_index.get<ByTxHash>().end() && it->m_txhash == txhash) {\n+                if (it->GetState() != State::COMPLETED) result_peers.push_back(it->m_peer);\n+                ++it;\n+            }\n+        }\n+        return result_peers;",
      "path": "src/txrequest.cpp",
      "position": 18,
      "original_position": 18,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a2ab8d2a690d0f0e7e074636589bba003a51cc96",
      "in_reply_to_id": 1902155109,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The second isn't possible today, as no standard transaction output supports spending with both empty and non-empty witnesses (P2A is invalid with non-empty witness; P2WPKH/P2WSH/P2TR are invalid with empty witness).\r\n\r\nIndeed, doesn't seem a big concern. Marking resolved.",
      "created_at": "2025-01-06T20:40:14Z",
      "updated_at": "2025-01-06T20:40:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1904615930",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1904615930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 591,
      "original_line": 591,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905920861",
      "pull_request_review_id": 2535162556,
      "id": 1905920861,
      "node_id": "PRRC_kwDOABII585xmgtd",
      "diff_hunk": "@@ -172,12 +172,39 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n }\n \n-bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\n+bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now)\n {\n+    // If this is an orphan we are trying to resolve, consider this peer as a orphan resolution candidate instead.\n+    // - is wtxid matching something in orphanage\n+    // - exists in orphanage\n+    // - peer can be an orphan resolution candidate\n+    if (gtxid.IsWtxid()) {\n+        if (auto orphan_tx{m_orphanage.GetTx(Wtxid::FromUint256(gtxid.GetHash()))}) {\n+            auto unique_parents{GetUniqueParents(*orphan_tx)};\n+            std::erase_if(unique_parents, [&](const auto& txid){\n+                return AlreadyHaveTx(GenTxid::Txid(txid), /*include_reconsiderable=*/false);\n+            });\n+\n+            if (unique_parents.empty()) return true;",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 30,
      "original_position": 30,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "in_reply_to_id": null,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Took me a bit to figure out how this could happen, so a comment might be helpful here.",
      "created_at": "2025-01-07T19:04:03Z",
      "updated_at": "2025-01-07T20:33:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1905920861",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905920861"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 188,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905930558",
      "pull_request_review_id": 2535162556,
      "id": 1905930558,
      "node_id": "PRRC_kwDOABII585xmjE-",
      "diff_hunk": "@@ -320,13 +366,7 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n \n             // Deduplicate parent txids, so that we don't have to loop over\n             // the same parent txid more than once down below.\n-            unique_parents.reserve(tx.vin.size());\n-            for (const CTxIn& txin : tx.vin) {\n-                // We start with all parents, and then remove duplicates below.\n-                unique_parents.push_back(txin.prevout.hash);\n-            }\n-            std::sort(unique_parents.begin(), unique_parents.end());\n-            unique_parents.erase(std::unique(unique_parents.begin(), unique_parents.end()), unique_parents.end());\n+            unique_parents = GetUniqueParents(tx);",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 184,
      "original_position": 184,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "in_reply_to_id": null,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In the loop below this, should it be `const Txid& parent_txid`? However, if this is more rework of this function than you're looking to do (adding multiple `ToUint256`), then seems fine to leave as is for now.",
      "created_at": "2025-01-07T19:14:45Z",
      "updated_at": "2025-01-07T20:33:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1905930558",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905930558"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 369,
      "original_line": 369,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905960235",
      "pull_request_review_id": 2535162556,
      "id": 1905960235,
      "node_id": "PRRC_kwDOABII585xmqUr",
      "diff_hunk": "@@ -189,6 +189,16 @@ class TxDownloadManagerImpl {\n     void CheckIsEmpty(NodeId nodeid);\n \n     std::vector<TxOrphanage::OrphanTxBase> GetOrphanTransactions() const;\n+\n+protected:\n+    /** Helper for getting deduplicated vector of Txids in vin. */\n+    std::vector<Txid> GetUniqueParents(const CTransaction& tx);",
      "path": "src/node/txdownloadman_impl.h",
      "position": 16,
      "original_position": 16,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "in_reply_to_id": null,
      "user": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: This doesn't use any member variables of `TxDownloadManagerImpl` so it could be just a standalone helper function in `txdownloadman_impl.cpp`.",
      "created_at": "2025-01-07T19:44:29Z",
      "updated_at": "2025-01-07T20:33:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1905960235",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905960235"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 195,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905989913",
      "pull_request_review_id": 2535269451,
      "id": 1905989913,
      "node_id": "PRRC_kwDOABII585xmxkZ",
      "diff_hunk": "@@ -174,9 +174,37 @@ void TxDownloadManagerImpl::DisconnectedPeer(NodeId nodeid)\n \n bool TxDownloadManagerImpl::AddTxAnnouncement(NodeId peer, const GenTxid& gtxid, std::chrono::microseconds now, bool p2p_inv)\n {\n+    // If this is an orphan we are trying to resolve, consider this peer as a orphan resolution candidate instead.\n+    // - received as an p2p inv\n+    // - is wtxid matching something in orphanage\n+    // - exists in orphanage\n+    // - peer can be an orphan resolution candidate\n+    if (p2p_inv && gtxid.IsWtxid()) {\n+        if (auto orphan_tx{m_orphanage.GetTx(Wtxid::FromUint256(gtxid.GetHash()))}) {",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 24,
      "original_position": 10,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "b6ea4a9afe2d8bbf49b6b6c42f0a3ce4390c4535",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```Suggestion\r\n        const auto wtxid{Wtxid::FromUint256(gtxid.GetHash()))};\r\n        if (auto orphan_tx{m_orphanage.GetTx(wtxid)}) {\r\n```\r\nand use `wtxid` below in the other two locations",
      "created_at": "2025-01-07T20:15:31Z",
      "updated_at": "2025-01-07T20:36:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1905989913",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905989913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 182,
      "original_line": 183,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905994963",
      "pull_request_review_id": 2535269451,
      "id": 1905994963,
      "node_id": "PRRC_kwDOABII585xmyzT",
      "diff_hunk": "@@ -626,15 +630,181 @@ def test_max_orphan_amount(self):\n         self.log.info(\"Clearing the orphanage\")\n         for index, parent_orphan in enumerate(parent_orphans):\n             peer_1.send_and_ping(msg_tx(parent_orphan))\n-        assert_equal(len(node.getorphantxs()),0)\n+        self.wait_until(lambda: len(node.getorphantxs()) == 0)\n+\n+    @cleanup\n+    def test_orphan_handling_prefer_outbound(self):\n+        self.log.info(\"Test that the node prefers requesting from outbound peers\")\n+        node = self.nodes[0]\n+        orphan_wtxid, orphan_tx, parent_tx = self.create_parent_and_child()\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        peer_inbound = node.add_p2p_connection(PeerTxRelayer())\n+        peer_outbound = node.add_outbound_p2p_connection(PeerTxRelayer(), p2p_idx=1)\n+\n+        # Inbound peer relays the transaction.\n+        peer_inbound.send_and_ping(msg_inv([orphan_inv]))\n+        self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n+        peer_inbound.wait_for_getdata([int(orphan_wtxid, 16)])\n+\n+        # Both peers send invs for the orphan, so the node can expect both to know its ancestors.\n+        peer_outbound.send_and_ping(msg_inv([orphan_inv]))\n+\n+        peer_inbound.send_and_ping(msg_tx(orphan_tx))\n+\n+        # There should be 1 orphan with 2 announcers (we don't know what their peer IDs are)\n+        orphanage = node.getorphantxs(verbosity=2)\n+        assert_equal(orphanage[0][\"wtxid\"], orphan_wtxid)\n+        assert_equal(len(orphanage[0][\"from\"]), 2)\n+\n+        # The outbound peer should be preferred for getting orphan parents\n+        self.nodes[0].bumpmocktime(TXID_RELAY_DELAY)\n+        peer_outbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+        # There should be no request to the inbound peer\n+        peer_inbound.assert_never_requested(int(parent_tx.rehash(), 16))\n+\n+        self.log.info(\"Test that, if the preferred peer doesn't respond, the node sends another request\")\n+        self.nodes[0].bumpmocktime(GETDATA_TX_INTERVAL)\n+        peer_inbound.sync_with_ping()\n+        peer_inbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+    @cleanup\n+    def test_announcers_before_and_after(self):\n+        self.log.info(\"Test that the node uses all peers who announced the tx prior to realizing it's an orphan\")\n+        node = self.nodes[0]\n+        orphan_wtxid, orphan_tx, parent_tx = self.create_parent_and_child()\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Announces before tx is sent, disconnects while node is requesting parents\n+        peer_early_disconnected = node.add_outbound_p2p_connection(PeerTxRelayer(), p2p_idx=3)\n+        # Announces before tx is sent, doesn't respond to parent request\n+        peer_early_unresponsive = node.add_p2p_connection(PeerTxRelayer())\n+\n+        # Announces after tx is sent\n+        peer_late_announcer = node.add_p2p_connection(PeerTxRelayer())\n+\n+        # Both peers send invs for the orphan, so the node can expect both to know its ancestors.\n+        peer_early_disconnected.send_and_ping(msg_inv([orphan_inv]))\n+        self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n+        peer_early_disconnected.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_early_unresponsive.send_and_ping(msg_inv([orphan_inv]))\n+        peer_early_disconnected.send_and_ping(msg_tx(orphan_tx))\n+\n+        # There should be 1 orphan with 2 announcers (we don't know what their peer IDs are)\n+        orphanage = node.getorphantxs(verbosity=2)\n+        assert_equal(len(orphanage), 1)\n+        assert_equal(orphanage[0][\"wtxid\"], orphan_wtxid)\n+        assert_equal(len(orphanage[0][\"from\"]), 2)\n+\n+        # Peer disconnects before responding to request\n+        self.nodes[0].bumpmocktime(TXID_RELAY_DELAY)\n+        peer_early_disconnected.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+        peer_early_disconnected.peer_disconnect()\n \n+        # The orphan should have 1 announcer left after the node finishes disconnecting peer_early_disconnected.\n+        self.wait_until(lambda: len(node.getorphantxs(verbosity=2)[0][\"from\"]) == 1)\n+\n+        # The node should retry with the other peer that announced the orphan earlier.\n+        # This node's request was additionally delayed because it's an inbound peer.\n+        self.nodes[0].bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_early_unresponsive.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+        self.log.info(\"Test that the node uses peers who announce the tx after realizing it's an orphan\")\n+        peer_late_announcer.send_and_ping(msg_inv([orphan_inv]))\n+\n+        # The orphan should have 2 announcers now\n+        orphanage = node.getorphantxs(verbosity=2)\n+        assert_equal(orphanage[0][\"wtxid\"], orphan_wtxid)\n+        assert_equal(len(orphanage[0][\"from\"]), 2)\n+\n+        self.nodes[0].bumpmocktime(GETDATA_TX_INTERVAL)\n+        peer_late_announcer.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+    @cleanup\n+    def test_parents_change(self):\n+        self.log.info(\"Test that, if a parent goes missing during orphan reso, it is requested\")\n+        node = self.nodes[0]\n+        # Orphan will have 2 parents, 1 missing and 1 already in mempool when received.\n+        # Create missing parent.\n+        parent_missing = self.wallet.create_self_transfer()\n+\n+        # Create parent that will already be in mempool, but become missing during orphan resolution.\n+        # Get 3 UTXOs for replacement-cycled parent, UTXOS A, B, C\n+        coin_A = self.wallet.get_utxo(confirmed_only=True)\n+        coin_B = self.wallet.get_utxo(confirmed_only=True)\n+        coin_C = self.wallet.get_utxo(confirmed_only=True)\n+        # parent_peekaboo_AB spends A and B. It is replaced by tx_replacer_BC (conflicting UTXO B),\n+        # and then replaced by tx_replacer_C (conflicting UTXO C). This replacement cycle is used to\n+        # ensure that parent_peekaboo_AB can be reintroduced without requiring package RBF.\n+        FEE_INCREMENT = 2400\n+        parent_peekaboo_AB = self.wallet.create_self_transfer_multi(\n+            utxos_to_spend=[coin_A, coin_B],\n+            num_outputs=1,\n+            fee_per_output=FEE_INCREMENT\n+        )\n+        tx_replacer_BC = self.wallet.create_self_transfer_multi(\n+            utxos_to_spend=[coin_B, coin_C],\n+            num_outputs=1,\n+            fee_per_output=2*FEE_INCREMENT\n+        )\n+        tx_replacer_C = self.wallet.create_self_transfer(\n+            utxo_to_spend=coin_C,\n+            fee_per_output=3*FEE_INCREMENT\n+        )\n+\n+        # parent_peekaboo_AB starts out in the mempool\n+        node.sendrawtransaction(parent_peekaboo_AB[\"hex\"])\n+\n+        orphan = self.wallet.create_self_transfer_multi(utxos_to_spend=[parent_peekaboo_AB[\"new_utxos\"][0], parent_missing[\"new_utxo\"]])\n+        orphan_wtxid = orphan[\"wtxid\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # peer1 sends the orphan and gets a request for the missing parent\n+        peer1 = node.add_p2p_connection(PeerTxRelayer())\n+        peer1.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(TXREQUEST_TIME_SKIP)\n+        peer1.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer1.send_and_ping(msg_tx(orphan[\"tx\"]))\n+        self.wait_until(lambda: node.getorphantxs(verbosity=0) == [orphan[\"txid\"]])\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer1.wait_for_getdata([int(parent_missing[\"txid\"], 16)])\n+\n+        # Replace parent_peekaboo_AB so that is is a newly missing parent.\n+        # Then, replace the replacement so that it can be resubmitted.\n+        node.sendrawtransaction(tx_replacer_BC[\"hex\"])\n+        assert tx_replacer_BC[\"txid\"] in node.getrawmempool()\n+        node.sendrawtransaction(tx_replacer_C[\"hex\"])\n+        assert tx_replacer_BC[\"txid\"] not in node.getrawmempool()",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 188,
      "original_position": 188,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "0da693f7e129fccaecf9a2c177083d2e80d37781",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```Suggestion\r\n        assert parent_peekaboo_AB[\"txid\"] not in node.getrawmempool()\r\n        assert tx_replacer_BC[\"txid\"] not in node.getrawmempool()\r\n```",
      "created_at": "2025-01-07T20:21:26Z",
      "updated_at": "2025-01-07T20:36:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1905994963",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905994963"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 778,
      "original_line": 778,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905999581",
      "pull_request_review_id": 2535269451,
      "id": 1905999581,
      "node_id": "PRRC_kwDOABII585xmz7d",
      "diff_hunk": "@@ -626,15 +630,181 @@ def test_max_orphan_amount(self):\n         self.log.info(\"Clearing the orphanage\")\n         for index, parent_orphan in enumerate(parent_orphans):\n             peer_1.send_and_ping(msg_tx(parent_orphan))\n-        assert_equal(len(node.getorphantxs()),0)\n+        self.wait_until(lambda: len(node.getorphantxs()) == 0)\n+\n+    @cleanup\n+    def test_orphan_handling_prefer_outbound(self):\n+        self.log.info(\"Test that the node prefers requesting from outbound peers\")\n+        node = self.nodes[0]\n+        orphan_wtxid, orphan_tx, parent_tx = self.create_parent_and_child()\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        peer_inbound = node.add_p2p_connection(PeerTxRelayer())\n+        peer_outbound = node.add_outbound_p2p_connection(PeerTxRelayer(), p2p_idx=1)\n+\n+        # Inbound peer relays the transaction.\n+        peer_inbound.send_and_ping(msg_inv([orphan_inv]))\n+        self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n+        peer_inbound.wait_for_getdata([int(orphan_wtxid, 16)])\n+\n+        # Both peers send invs for the orphan, so the node can expect both to know its ancestors.\n+        peer_outbound.send_and_ping(msg_inv([orphan_inv]))\n+\n+        peer_inbound.send_and_ping(msg_tx(orphan_tx))\n+\n+        # There should be 1 orphan with 2 announcers (we don't know what their peer IDs are)\n+        orphanage = node.getorphantxs(verbosity=2)\n+        assert_equal(orphanage[0][\"wtxid\"], orphan_wtxid)\n+        assert_equal(len(orphanage[0][\"from\"]), 2)\n+\n+        # The outbound peer should be preferred for getting orphan parents\n+        self.nodes[0].bumpmocktime(TXID_RELAY_DELAY)\n+        peer_outbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+        # There should be no request to the inbound peer\n+        peer_inbound.assert_never_requested(int(parent_tx.rehash(), 16))\n+\n+        self.log.info(\"Test that, if the preferred peer doesn't respond, the node sends another request\")\n+        self.nodes[0].bumpmocktime(GETDATA_TX_INTERVAL)\n+        peer_inbound.sync_with_ping()\n+        peer_inbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+    @cleanup\n+    def test_announcers_before_and_after(self):\n+        self.log.info(\"Test that the node uses all peers who announced the tx prior to realizing it's an orphan\")\n+        node = self.nodes[0]\n+        orphan_wtxid, orphan_tx, parent_tx = self.create_parent_and_child()\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Announces before tx is sent, disconnects while node is requesting parents\n+        peer_early_disconnected = node.add_outbound_p2p_connection(PeerTxRelayer(), p2p_idx=3)\n+        # Announces before tx is sent, doesn't respond to parent request\n+        peer_early_unresponsive = node.add_p2p_connection(PeerTxRelayer())\n+\n+        # Announces after tx is sent\n+        peer_late_announcer = node.add_p2p_connection(PeerTxRelayer())\n+\n+        # Both peers send invs for the orphan, so the node can expect both to know its ancestors.\n+        peer_early_disconnected.send_and_ping(msg_inv([orphan_inv]))\n+        self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n+        peer_early_disconnected.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_early_unresponsive.send_and_ping(msg_inv([orphan_inv]))\n+        peer_early_disconnected.send_and_ping(msg_tx(orphan_tx))\n+\n+        # There should be 1 orphan with 2 announcers (we don't know what their peer IDs are)\n+        orphanage = node.getorphantxs(verbosity=2)\n+        assert_equal(len(orphanage), 1)\n+        assert_equal(orphanage[0][\"wtxid\"], orphan_wtxid)\n+        assert_equal(len(orphanage[0][\"from\"]), 2)\n+\n+        # Peer disconnects before responding to request\n+        self.nodes[0].bumpmocktime(TXID_RELAY_DELAY)\n+        peer_early_disconnected.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+        peer_early_disconnected.peer_disconnect()\n \n+        # The orphan should have 1 announcer left after the node finishes disconnecting peer_early_disconnected.\n+        self.wait_until(lambda: len(node.getorphantxs(verbosity=2)[0][\"from\"]) == 1)\n+\n+        # The node should retry with the other peer that announced the orphan earlier.\n+        # This node's request was additionally delayed because it's an inbound peer.\n+        self.nodes[0].bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_early_unresponsive.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+        self.log.info(\"Test that the node uses peers who announce the tx after realizing it's an orphan\")\n+        peer_late_announcer.send_and_ping(msg_inv([orphan_inv]))\n+\n+        # The orphan should have 2 announcers now\n+        orphanage = node.getorphantxs(verbosity=2)\n+        assert_equal(orphanage[0][\"wtxid\"], orphan_wtxid)\n+        assert_equal(len(orphanage[0][\"from\"]), 2)\n+\n+        self.nodes[0].bumpmocktime(GETDATA_TX_INTERVAL)\n+        peer_late_announcer.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+    @cleanup\n+    def test_parents_change(self):\n+        self.log.info(\"Test that, if a parent goes missing during orphan reso, it is requested\")\n+        node = self.nodes[0]\n+        # Orphan will have 2 parents, 1 missing and 1 already in mempool when received.\n+        # Create missing parent.\n+        parent_missing = self.wallet.create_self_transfer()\n+\n+        # Create parent that will already be in mempool, but become missing during orphan resolution.\n+        # Get 3 UTXOs for replacement-cycled parent, UTXOS A, B, C\n+        coin_A = self.wallet.get_utxo(confirmed_only=True)\n+        coin_B = self.wallet.get_utxo(confirmed_only=True)\n+        coin_C = self.wallet.get_utxo(confirmed_only=True)\n+        # parent_peekaboo_AB spends A and B. It is replaced by tx_replacer_BC (conflicting UTXO B),\n+        # and then replaced by tx_replacer_C (conflicting UTXO C). This replacement cycle is used to\n+        # ensure that parent_peekaboo_AB can be reintroduced without requiring package RBF.\n+        FEE_INCREMENT = 2400\n+        parent_peekaboo_AB = self.wallet.create_self_transfer_multi(\n+            utxos_to_spend=[coin_A, coin_B],\n+            num_outputs=1,\n+            fee_per_output=FEE_INCREMENT\n+        )\n+        tx_replacer_BC = self.wallet.create_self_transfer_multi(\n+            utxos_to_spend=[coin_B, coin_C],\n+            num_outputs=1,\n+            fee_per_output=2*FEE_INCREMENT\n+        )\n+        tx_replacer_C = self.wallet.create_self_transfer(\n+            utxo_to_spend=coin_C,\n+            fee_per_output=3*FEE_INCREMENT\n+        )\n+\n+        # parent_peekaboo_AB starts out in the mempool\n+        node.sendrawtransaction(parent_peekaboo_AB[\"hex\"])\n+\n+        orphan = self.wallet.create_self_transfer_multi(utxos_to_spend=[parent_peekaboo_AB[\"new_utxos\"][0], parent_missing[\"new_utxo\"]])\n+        orphan_wtxid = orphan[\"wtxid\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # peer1 sends the orphan and gets a request for the missing parent\n+        peer1 = node.add_p2p_connection(PeerTxRelayer())\n+        peer1.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(TXREQUEST_TIME_SKIP)\n+        peer1.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer1.send_and_ping(msg_tx(orphan[\"tx\"]))\n+        self.wait_until(lambda: node.getorphantxs(verbosity=0) == [orphan[\"txid\"]])\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer1.wait_for_getdata([int(parent_missing[\"txid\"], 16)])\n+\n+        # Replace parent_peekaboo_AB so that is is a newly missing parent.\n+        # Then, replace the replacement so that it can be resubmitted.\n+        node.sendrawtransaction(tx_replacer_BC[\"hex\"])\n+        assert tx_replacer_BC[\"txid\"] in node.getrawmempool()\n+        node.sendrawtransaction(tx_replacer_C[\"hex\"])\n+        assert tx_replacer_BC[\"txid\"] not in node.getrawmempool()\n+        assert tx_replacer_C[\"txid\"] in node.getrawmempool()\n+\n+        # Second peer is an additional announcer for this orphan",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 191,
      "original_position": 191,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "0da693f7e129fccaecf9a2c177083d2e80d37781",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```Suggestion\r\n        # Second peer is an additional announcer for this orphan with different missing parents than prior announcement\r\n```\r\nmicro-nit something like?",
      "created_at": "2025-01-07T20:26:17Z",
      "updated_at": "2025-01-07T20:36:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1905999581",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905999581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 781,
      "original_line": 781,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1906001592",
      "pull_request_review_id": 2535269451,
      "id": 1906001592,
      "node_id": "PRRC_kwDOABII585xm0a4",
      "diff_hunk": "@@ -626,15 +630,181 @@ def test_max_orphan_amount(self):\n         self.log.info(\"Clearing the orphanage\")\n         for index, parent_orphan in enumerate(parent_orphans):\n             peer_1.send_and_ping(msg_tx(parent_orphan))\n-        assert_equal(len(node.getorphantxs()),0)\n+        self.wait_until(lambda: len(node.getorphantxs()) == 0)\n+\n+    @cleanup\n+    def test_orphan_handling_prefer_outbound(self):\n+        self.log.info(\"Test that the node prefers requesting from outbound peers\")\n+        node = self.nodes[0]\n+        orphan_wtxid, orphan_tx, parent_tx = self.create_parent_and_child()\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        peer_inbound = node.add_p2p_connection(PeerTxRelayer())\n+        peer_outbound = node.add_outbound_p2p_connection(PeerTxRelayer(), p2p_idx=1)\n+\n+        # Inbound peer relays the transaction.\n+        peer_inbound.send_and_ping(msg_inv([orphan_inv]))\n+        self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n+        peer_inbound.wait_for_getdata([int(orphan_wtxid, 16)])\n+\n+        # Both peers send invs for the orphan, so the node can expect both to know its ancestors.\n+        peer_outbound.send_and_ping(msg_inv([orphan_inv]))\n+\n+        peer_inbound.send_and_ping(msg_tx(orphan_tx))\n+\n+        # There should be 1 orphan with 2 announcers (we don't know what their peer IDs are)\n+        orphanage = node.getorphantxs(verbosity=2)\n+        assert_equal(orphanage[0][\"wtxid\"], orphan_wtxid)\n+        assert_equal(len(orphanage[0][\"from\"]), 2)\n+\n+        # The outbound peer should be preferred for getting orphan parents\n+        self.nodes[0].bumpmocktime(TXID_RELAY_DELAY)\n+        peer_outbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+        # There should be no request to the inbound peer\n+        peer_inbound.assert_never_requested(int(parent_tx.rehash(), 16))\n+\n+        self.log.info(\"Test that, if the preferred peer doesn't respond, the node sends another request\")\n+        self.nodes[0].bumpmocktime(GETDATA_TX_INTERVAL)\n+        peer_inbound.sync_with_ping()\n+        peer_inbound.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+    @cleanup\n+    def test_announcers_before_and_after(self):\n+        self.log.info(\"Test that the node uses all peers who announced the tx prior to realizing it's an orphan\")\n+        node = self.nodes[0]\n+        orphan_wtxid, orphan_tx, parent_tx = self.create_parent_and_child()\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # Announces before tx is sent, disconnects while node is requesting parents\n+        peer_early_disconnected = node.add_outbound_p2p_connection(PeerTxRelayer(), p2p_idx=3)\n+        # Announces before tx is sent, doesn't respond to parent request\n+        peer_early_unresponsive = node.add_p2p_connection(PeerTxRelayer())\n+\n+        # Announces after tx is sent\n+        peer_late_announcer = node.add_p2p_connection(PeerTxRelayer())\n+\n+        # Both peers send invs for the orphan, so the node can expect both to know its ancestors.\n+        peer_early_disconnected.send_and_ping(msg_inv([orphan_inv]))\n+        self.nodes[0].bumpmocktime(TXREQUEST_TIME_SKIP)\n+        peer_early_disconnected.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer_early_unresponsive.send_and_ping(msg_inv([orphan_inv]))\n+        peer_early_disconnected.send_and_ping(msg_tx(orphan_tx))\n+\n+        # There should be 1 orphan with 2 announcers (we don't know what their peer IDs are)\n+        orphanage = node.getorphantxs(verbosity=2)\n+        assert_equal(len(orphanage), 1)\n+        assert_equal(orphanage[0][\"wtxid\"], orphan_wtxid)\n+        assert_equal(len(orphanage[0][\"from\"]), 2)\n+\n+        # Peer disconnects before responding to request\n+        self.nodes[0].bumpmocktime(TXID_RELAY_DELAY)\n+        peer_early_disconnected.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+        peer_early_disconnected.peer_disconnect()\n \n+        # The orphan should have 1 announcer left after the node finishes disconnecting peer_early_disconnected.\n+        self.wait_until(lambda: len(node.getorphantxs(verbosity=2)[0][\"from\"]) == 1)\n+\n+        # The node should retry with the other peer that announced the orphan earlier.\n+        # This node's request was additionally delayed because it's an inbound peer.\n+        self.nodes[0].bumpmocktime(NONPREF_PEER_TX_DELAY)\n+        peer_early_unresponsive.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+        self.log.info(\"Test that the node uses peers who announce the tx after realizing it's an orphan\")\n+        peer_late_announcer.send_and_ping(msg_inv([orphan_inv]))\n+\n+        # The orphan should have 2 announcers now\n+        orphanage = node.getorphantxs(verbosity=2)\n+        assert_equal(orphanage[0][\"wtxid\"], orphan_wtxid)\n+        assert_equal(len(orphanage[0][\"from\"]), 2)\n+\n+        self.nodes[0].bumpmocktime(GETDATA_TX_INTERVAL)\n+        peer_late_announcer.wait_for_parent_requests([int(parent_tx.rehash(), 16)])\n+\n+    @cleanup\n+    def test_parents_change(self):\n+        self.log.info(\"Test that, if a parent goes missing during orphan reso, it is requested\")\n+        node = self.nodes[0]\n+        # Orphan will have 2 parents, 1 missing and 1 already in mempool when received.\n+        # Create missing parent.\n+        parent_missing = self.wallet.create_self_transfer()\n+\n+        # Create parent that will already be in mempool, but become missing during orphan resolution.\n+        # Get 3 UTXOs for replacement-cycled parent, UTXOS A, B, C\n+        coin_A = self.wallet.get_utxo(confirmed_only=True)\n+        coin_B = self.wallet.get_utxo(confirmed_only=True)\n+        coin_C = self.wallet.get_utxo(confirmed_only=True)\n+        # parent_peekaboo_AB spends A and B. It is replaced by tx_replacer_BC (conflicting UTXO B),\n+        # and then replaced by tx_replacer_C (conflicting UTXO C). This replacement cycle is used to\n+        # ensure that parent_peekaboo_AB can be reintroduced without requiring package RBF.\n+        FEE_INCREMENT = 2400\n+        parent_peekaboo_AB = self.wallet.create_self_transfer_multi(\n+            utxos_to_spend=[coin_A, coin_B],\n+            num_outputs=1,\n+            fee_per_output=FEE_INCREMENT\n+        )\n+        tx_replacer_BC = self.wallet.create_self_transfer_multi(\n+            utxos_to_spend=[coin_B, coin_C],\n+            num_outputs=1,\n+            fee_per_output=2*FEE_INCREMENT\n+        )\n+        tx_replacer_C = self.wallet.create_self_transfer(\n+            utxo_to_spend=coin_C,\n+            fee_per_output=3*FEE_INCREMENT\n+        )\n+\n+        # parent_peekaboo_AB starts out in the mempool\n+        node.sendrawtransaction(parent_peekaboo_AB[\"hex\"])\n+\n+        orphan = self.wallet.create_self_transfer_multi(utxos_to_spend=[parent_peekaboo_AB[\"new_utxos\"][0], parent_missing[\"new_utxo\"]])\n+        orphan_wtxid = orphan[\"wtxid\"]\n+        orphan_inv = CInv(t=MSG_WTX, h=int(orphan_wtxid, 16))\n+\n+        # peer1 sends the orphan and gets a request for the missing parent\n+        peer1 = node.add_p2p_connection(PeerTxRelayer())\n+        peer1.send_and_ping(msg_inv([orphan_inv]))\n+        node.bumpmocktime(TXREQUEST_TIME_SKIP)\n+        peer1.wait_for_getdata([int(orphan_wtxid, 16)])\n+        peer1.send_and_ping(msg_tx(orphan[\"tx\"]))\n+        self.wait_until(lambda: node.getorphantxs(verbosity=0) == [orphan[\"txid\"]])\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)\n+        peer1.wait_for_getdata([int(parent_missing[\"txid\"], 16)])\n+\n+        # Replace parent_peekaboo_AB so that is is a newly missing parent.\n+        # Then, replace the replacement so that it can be resubmitted.\n+        node.sendrawtransaction(tx_replacer_BC[\"hex\"])\n+        assert tx_replacer_BC[\"txid\"] in node.getrawmempool()\n+        node.sendrawtransaction(tx_replacer_C[\"hex\"])\n+        assert tx_replacer_BC[\"txid\"] not in node.getrawmempool()\n+        assert tx_replacer_C[\"txid\"] in node.getrawmempool()\n+\n+        # Second peer is an additional announcer for this orphan\n+        peer2 = node.add_p2p_connection(PeerTxRelayer())\n+        peer2.send_and_ping(msg_inv([orphan_inv]))\n+        assert_equal(len(node.getorphantxs(verbosity=2)[0][\"from\"]), 2)\n+\n+        # Disconnect peer1. peer2 should become the new candidate for orphan resolution.\n+        peer1.peer_disconnect()\n+        node.bumpmocktime(NONPREF_PEER_TX_DELAY + TXID_RELAY_DELAY)",
      "path": "test/functional/p2p_orphan_handling.py",
      "position": 198,
      "original_position": 198,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "0da693f7e129fccaecf9a2c177083d2e80d37781",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "think this should work too?\r\n```Suggestion\r\n        node.bumpmocktime(TXREQUEST_TIME_SKIP)\r\n```",
      "created_at": "2025-01-07T20:28:05Z",
      "updated_at": "2025-01-07T20:36:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1906001592",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1906001592"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 788,
      "original_line": 788,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1906077380",
      "pull_request_review_id": 2535431508,
      "id": 1906077380,
      "node_id": "PRRC_kwDOABII585xnG7E",
      "diff_hunk": "@@ -363,26 +418,42 @@ node::RejectedTxTodo TxDownloadManagerImpl::MempoolRejectedTx(const CTransaction\n                 std::erase_if(unique_parents, [&](const auto& txid){\n                     return AlreadyHaveTx(GenTxid::Txid(txid), /*include_reconsiderable=*/false);\n                 });\n-                const auto current_time{GetTime<std::chrono::microseconds>()};\n-\n-                for (const uint256& parent_txid : unique_parents) {\n-                    // Here, we only have the txid (and not wtxid) of the\n-                    // inputs, so we only request in txid mode, even for\n-                    // wtxidrelay peers.\n-                    // Eventually we should replace this with an improved\n-                    // protocol for getting all unconfirmed parents.\n-                    const auto gtxid{GenTxid::Txid(parent_txid)};\n-                    AddTxAnnouncement(nodeid, gtxid, current_time, /*p2p_inv=*/false);\n+                const auto now{GetTime<std::chrono::microseconds>()};\n+                const auto& wtxid = ptx->GetWitnessHash();\n+                // Potentially flip add_extra_compact_tx to false if tx is already in orphanage, which\n+                // means it was already added to vExtraTxnForCompact.\n+                add_extra_compact_tx &= !m_orphanage.HaveTx(wtxid);\n+\n+                auto add_orphan_reso_candidate = [&](const CTransactionRef& orphan_tx, std::vector<Txid> unique_parents, NodeId nodeid, std::chrono::microseconds now) {\n+                    const auto& wtxid = orphan_tx->GetWitnessHash();\n+                    if (auto delay{OrphanResolutionCandidate(nodeid, wtxid, unique_parents.size())}) {",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 219,
      "original_position": 96,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "d7bc6e841c3ea2bbf4c9b63018f99172bdfa23af",
      "in_reply_to_id": 1902202580,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Something like this?\r\n\r\n```c++\r\nbool TxDownloadManagerImpl::DoOrphanThingRenameMe(const std::vector<Txid>& unique_parents, const Wtxid& wtxid, NodeId nodeid, std::chrono::microseconds now)\r\n{\r\n    if (auto delay{OrphanResolutionCandidate(nodeid, wtxid, unique_parents.size())}) {\r\n        const auto& info = m_peer_info.at(nodeid).m_connection_info;\r\n        for (const auto& parent_txid : unique_parents) {\r\n            m_txrequest.ReceivedInv(nodeid, GenTxid::Txid(parent_txid), info.m_preferred, now + *delay);\r\n        }\r\n        LogDebug(BCLog::TXPACKAGES, \"added peer=%d as a candidate for resolving orphan %s\\n\", nodeid, wtxid.ToString());\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n```\r\n\r\nin `add_orphan_reso_candidate`:\r\n```c++\r\nif (DoOrphanThingRenameMe(unique_parents, orphan_tx->GetWitnessHash(), nodeid, now)) {\r\n    m_orphanage.AddTx(orphan_tx, nodeid);\r\n}\r\n```\r\n\r\nin `TxDownloadManagerImpl::AddTxAnnouncement`:\r\n```c++\r\nDoOrphanThingRenameMe(unique_parents, Wtxid::FromUint256(gtxid.GetHash()), peer, now);\r\n```",
      "created_at": "2025-01-07T21:43:45Z",
      "updated_at": "2025-01-07T21:43:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1906077380",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1906077380"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 405,
      "original_line": 405,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908833307",
      "pull_request_review_id": 2539965345,
      "id": 1908833307,
      "node_id": "PRRC_kwDOABII585xxnwb",
      "diff_hunk": "@@ -301,14 +329,29 @@ void TxDownloadManagerImpl::MempoolAcceptedTx(const CTransactionRef& tx)\n     m_orphanage.EraseTx(tx->GetWitnessHash());\n }\n \n+std::vector<Txid> TxDownloadManagerImpl::GetUniqueParents(const CTransaction& tx)",
      "path": "src/node/txdownloadman_impl.cpp",
      "position": 146,
      "original_position": 143,
      "commit_id": "86d7135e36efd39781cf4c969011df99f0cbb69d",
      "original_commit_id": "a2ab8d2a690d0f0e7e074636589bba003a51cc96",
      "in_reply_to_id": 1902153685,
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah I see what you mean, yes!",
      "created_at": "2025-01-09T13:47:13Z",
      "updated_at": "2025-01-09T13:47:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31397#discussion_r1908833307",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1908833307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31397"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "RIGHT"
    }
  ]
}