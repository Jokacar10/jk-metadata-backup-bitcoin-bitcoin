{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604",
    "id": 2540887489,
    "node_id": "PR_kwDOABII586Xct3B",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32604",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32604.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32604.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/2ac8696b53e455dd27c8341828404a23b5cb68a9",
    "number": 32604,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "log: Mitigate disk filling attacks by rate limiting LogPrintf, LogInfo, LogWarning, LogError",
    "user": {
      "login": "Crypt-iQ",
      "id": 15145615,
      "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Crypt-iQ",
      "html_url": "https://github.com/Crypt-iQ",
      "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
      "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
      "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
      "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
      "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This revives the work done by dergoegge in https://github.com/bitcoin/bitcoin/pull/21603. The approach is largely the same except that `std::source_location` is used under-the-hood now that we can use c++20 features. The logging functions have also changed slightly since that PR was opened, so work has been done to preserve the intent of the original rate limiting change. I have tried to give commit attribution where possible (unfortunately I was not able to figure out how to type ö in vim).\r\n\r\n**Approach:**\r\nEach source code location is given an hourly logging quota of 1MiB of logging per hour. Logging is only dropped from source locations that exceed the quota.\r\n- Only logging to disk is rate limited. Logging to console is not rate limited.\r\n- Printing with the category argument is not rate limited.\r\n- `UpdateTip: new best=[…]` is logged without rate limiting. High log volume is expected for that source location during IBD.\r\n- When logging is restarted a tally of how many messages/bytes were dropped is printed.\r\n- All logs will be prefixed with [*] if there is at least one source location that is currently being suppressed.\r\n\r\nI've repurposed the old logging rpc mentioned in #21603 in another branch for testing [here](https://github.com/Crypt-iQ/bitcoin/tree/log_ratelimiting_05192025_rpc). This can be used to log from source locations and test out the new changes in logging behavior. Note that the `setmocktime` RPC needs to be used to set the mock time past the current clock time to reset the logging messages.\r\n\r\nExample usage:\r\n```\r\nbitcoin-cli -regtest excessivelog 1 1048500 # log just under 1MiB\r\nbitcoin-cli -regtest excessivelog 1 100 # this should get the total amount logged above 1MiB\r\n                                        # and the rate limiting logic should kick in\r\nbitcoin-cli -regtest excessivelog 2 1048500\r\nbitcoin-cli -regtest excessivelog 2 100 # trigger rate limiting from another location\r\nbitcoin-cli -regtest setmocktime <N> # set this past the current clock time because of how `LogRateLimiter` is initialized\r\nbitcoin-cli -regtest excessivelog 1 100 # this should trigger logging to resume and will log the source locations that were reset\r\n```\r\n\r\nExample output:\r\n```\r\n[*] Excessive logging detected from rpc/node.cpp:139 (RPCHelpMan excessivelog()): >1 MiB logged during the last hour.Suppressing logging to disk from this source location for up to one hour. Console logging unaffected. Last log entry.2025-06-11T16:32:41Z aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\n[*] Excessive logging detected from rpc/node.cpp:142 (RPCHelpMan excessivelog()): >1 MiB logged during the last hour.Suppressing logging to disk from this source location for up to one hour. Console logging unaffected. Last log entry.2025-06-11T16:33:04Z aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\nRestarting logging from rpc/node.cpp:139 (RPCHelpMan excessivelog()): (1 MiB) were dropped during the last hour.\r\nRestarting logging from rpc/node.cpp:142 (RPCHelpMan excessivelog()): (0 MiB) were dropped during the last hour.\r\n```",
    "labels": [
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2025-05-23T20:48:49Z",
    "updated_at": "2025-06-26T19:22:54Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "4fe3367bb0382abf71a0a0e4e5bbb28e4f5354b0",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Crypt-iQ:log_ratelimiting_05192025",
      "ref": "log_ratelimiting_05192025",
      "sha": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 79155174,
        "node_id": "MDEwOlJlcG9zaXRvcnk3OTE1NTE3NA==",
        "name": "bitcoin",
        "full_name": "Crypt-iQ/bitcoin",
        "owner": {
          "login": "Crypt-iQ",
          "id": 15145615,
          "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
          "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Crypt-iQ",
          "html_url": "https://github.com/Crypt-iQ",
          "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
          "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
          "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
          "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
          "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/Crypt-iQ/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Crypt-iQ/bitcoin",
        "archive_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Crypt-iQ/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Crypt-iQ/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Crypt-iQ/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/hooks",
        "svn_url": "https://github.com/Crypt-iQ/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 255219,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-23T20:28:36Z",
        "created_at": "2017-01-16T20:09:01Z",
        "updated_at": "2025-06-09T13:37:15Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "c5849663baa925a5291731e4e4013a08c811c646",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37419,
        "stargazers_count": 84318,
        "watchers_count": 84318,
        "size": 284456,
        "default_branch": "master",
        "open_issues_count": 747,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-26T16:33:26Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-06-26T19:58:42Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 376,
    "deletions": 54,
    "changed_files": 7,
    "commits": 6,
    "review_comments": 130,
    "comments": 17
  },
  "events": [
    {
      "event": "mentioned",
      "id": 17796220658,
      "node_id": "MEE_lADOABII5864B5OdzwAAAAQkvMby",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17796220658",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T20:48:50Z"
    },
    {
      "event": "subscribed",
      "id": 17796220669,
      "node_id": "SE_lADOABII5864B5OdzwAAAAQkvMb9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17796220669",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T20:48:50Z"
    },
    {
      "event": "commented",
      "id": 2905779417,
      "node_id": "IC_kwDOABII586tMqzZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2905779417",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T20:48:51Z",
      "updated_at": "2025-06-25T11:10:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32604.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2957730107) |\n| Concept ACK | [davidgumberg](https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2905800955), [brunoerg](https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2910538498), [l0rinc](https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2934495128) |\n| Stale ACK | [janb84](https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2868443828), [stickies-v](https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2942493812) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo over LogPrintf [WIP, NOMERGE, DRAFT] by maflcko)\n* [#29256](https://github.com/bitcoin/bitcoin/pull/29256) (log, refactor: Allow log macros to accept context arguments by ryanofsky)\n* [#26812](https://github.com/bitcoin/bitcoin/pull/26812) (test: add end-to-end tests for CConnman and PeerManager by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2905779417",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "labeled",
      "id": 17796225522,
      "node_id": "LE_lADOABII5864B5OdzwAAAAQkvNny",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17796225522",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T20:49:22Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 2905800955,
      "node_id": "IC_kwDOABII586tMwD7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2905800955",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T21:00:08Z",
      "updated_at": "2025-05-23T21:00:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2905800955",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "commented",
      "id": 2905866738,
      "node_id": "IC_kwDOABII586tNAHy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2905866738",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T21:34:45Z",
      "updated_at": "2025-05-23T21:34:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "Any thoughts about adding some kind of dying gasp so that if a node crashes or hits some fatal error the most recent unfiltered log can be saved?",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2905866738",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "labeled",
      "id": 17796736612,
      "node_id": "LE_lADOABII5864B5OdzwAAAAQkxKZk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17796736612",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T21:47:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2905884570,
      "node_id": "IC_kwDOABII586tNEea",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2905884570",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T21:47:18Z",
      "updated_at": "2025-05-23T21:47:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/42810774045</sub>\n<sub>LLM reason (✨ experimental): The CI failure is due to linting errors related to `std::filesystem` and locale dependence.\n</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2905884570",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "commented",
      "id": 2907015832,
      "node_id": "IC_kwDOABII586tRYqY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2907015832",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-24T20:49:35Z",
      "updated_at": "2025-05-24T20:49:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> if a node crashes or hits some fatal error the most recent unfiltered log can be saved?\r\n\r\nDoes unfiltered here mean a log line that was rate limited or does it mean something else in this context? I think that we would need to know ahead of time if we were going to crash to save the most recent unfiltered log unless we somehow always cache it?",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2907015832",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "commented",
      "id": 2909514124,
      "node_id": "IC_kwDOABII586ta6mM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2909514124",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-26T12:07:55Z",
      "updated_at": "2025-05-26T12:07:55Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\n\nThanks for picking this up!",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2909514124",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "reviewed",
      "id": 2868443828,
      "node_id": "PRR_kwDOABII586q-Pq0",
      "url": null,
      "actor": null,
      "commit_id": "0bc6ed61cfab6d97e74103efd41c46faf5941ff6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 0bc6ed61cfab6d97e74103efd41c46faf5941ff6\r\n\r\nRatelimits loging to disk if loggin exceeds 1 MiB  in  1 hour (WINDOW_MAX_BYTES const & WINDOW_SIZE const)\r\n \r\n- code review \r\n- build & tested ",
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2868443828",
      "submitted_at": "2025-05-26T13:41:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "review_requested",
      "id": 17815097347,
      "node_id": "RRE_lADOABII5864B5OdzwAAAAQl3NAD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17815097347",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-26T13:41:26Z",
      "requested_reviewer": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 17815097535,
      "node_id": "RRE_lADOABII5864B5OdzwAAAAQl3NC_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17815097535",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-26T13:41:27Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2910538498,
      "node_id": "IC_kwDOABII586te0sC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2910538498",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-26T19:47:41Z",
      "updated_at": "2025-05-26T19:47:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2910538498",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17852493897,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQoF3BJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17852493897",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "created_at": "2025-05-28T14:38:13Z"
    },
    {
      "event": "commented",
      "id": 2919920634,
      "node_id": "IC_kwDOABII586uCnP6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2919920634",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T16:22:13Z",
      "updated_at": "2025-05-29T16:24:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "The tidy job is failing because it doesn't like the logging macros being used in lambda functions. It seems like this is pre-existing so I'm not sure why it's failing now. The windows cross-built job is failing on the `rate_limiting` test at every file-size comparison. I don't have a windows machine to debug this, but I think maybe `fs::file_size` is failing or some other quirk is showing up?",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2919920634",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "reviewed",
      "id": 2880741415,
      "node_id": "PRR_kwDOABII586rtKAn",
      "url": null,
      "actor": null,
      "commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK on locking down this attack vector, and the code changes required seem acceptable. Also nice to start using `std::source_location` here.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2880741415",
      "submitted_at": "2025-05-30T10:21:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "commented",
      "id": 2922025698,
      "node_id": "IC_kwDOABII586uKpLi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2922025698",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T10:57:04Z",
      "updated_at": "2025-05-30T10:57:04Z",
      "author_association": "MEMBER",
      "body": "> The windows cross-built job is failing on the rate_limiting test at every file-size comparison. I don't have a windows machine to debug this, but I think maybe fs::file_size is failing or some other quirk is showing up?\r\n\r\n@hebasto can you take a look here? I ran `test_bitcoin.exe` from this branch (rebased) under wine and didn't see any failures.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2922025698",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "mentioned",
      "id": 17883600371,
      "node_id": "MEE_lADOABII5864B5OdzwAAAAQp8hXz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17883600371",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T10:57:05Z"
    },
    {
      "event": "subscribed",
      "id": 17883600405,
      "node_id": "SE_lADOABII5864B5OdzwAAAAQp8hYV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17883600405",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T10:57:05Z"
    },
    {
      "event": "commented",
      "id": 2922246861,
      "node_id": "IC_kwDOABII586uLfLN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2922246861",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T12:20:01Z",
      "updated_at": "2025-05-30T12:22:49Z",
      "author_association": "MEMBER",
      "body": "> > The windows cross-built job is failing on the rate_limiting test at every file-size comparison. I don't have a windows machine to debug this, but I think maybe fs::file_size is failing or some other quirk is showing up?\r\n> \r\n> @hebasto can you take a look here? I ran `test_bitcoin.exe` from this branch (rebased) under wine and didn't see any failures.\r\n\r\nIt seems to be related to MSVCRT behaviour, as binaries [linked to UCRT](https://github.com/hebasto/bitcoin-core-nightly/actions/runs/15345658695) pass all unit tests.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2922246861",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "mentioned",
      "id": 17884641427,
      "node_id": "MEE_lADOABII5864B5OdzwAAAAQqAfiT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17884641427",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T12:20:02Z"
    },
    {
      "event": "subscribed",
      "id": 17884641493,
      "node_id": "SE_lADOABII5864B5OdzwAAAAQqAfjV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17884641493",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T12:20:02Z"
    },
    {
      "event": "reviewed",
      "id": 2881185484,
      "node_id": "PRR_kwDOABII586ru2bM",
      "url": null,
      "actor": null,
      "commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2881185484",
      "submitted_at": "2025-05-30T12:52:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "commented",
      "id": 2934186705,
      "node_id": "IC_kwDOABII586u5CLR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2934186705",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T08:47:37Z",
      "updated_at": "2025-06-03T08:47:37Z",
      "author_association": "MEMBER",
      "body": "I vaguely remember having trouble with the unit tests on windows too. Iirc it had something to do with windows line endings being different (i.e. `\\r\\n` on windows vs `\\n` on linux), which throws off the size accounting.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2934186705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "commented",
      "id": 2934471353,
      "node_id": "IC_kwDOABII586u6Hq5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2934471353",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T10:03:15Z",
      "updated_at": "2025-06-03T10:03:15Z",
      "author_association": "MEMBER",
      "body": "> The tidy job is failing because it doesn't like the logging macros being used in lambda functions. It seems like this is pre-existing so I'm not sure why it's failing now.\r\n\r\nIt happens after commit dfbc3e46b8661b112a91c5f00a4dce439f4f5914 and looks unrelated. Maybe just use the workaround from ./src/util/check.h?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2934471353",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "commented",
      "id": 2934495128,
      "node_id": "IC_kwDOABII586u6NeY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2934495128",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T10:09:15Z",
      "updated_at": "2025-06-03T10:12:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, but I'm not yet sure about the approach. Let me know if I misunderstood something important here.\r\n\r\nEdit:\r\n> All logs will be prefixed with [*] if there is at least one source location that is currently being suppressed\r\n\r\nWill that appear on the console as well, which didn't have any messages dropped?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2934495128",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "reviewed",
      "id": 2891468741,
      "node_id": "PRR_kwDOABII586sWE_F",
      "url": null,
      "actor": null,
      "commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2891468741",
      "submitted_at": "2025-06-03T10:09:27Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17986304449,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQwETnB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17986304449",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b275b241a38d0ec0cb6f2899859813d2da5a89d0",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/b275b241a38d0ec0cb6f2899859813d2da5a89d0",
      "created_at": "2025-06-04T17:37:30Z"
    },
    {
      "event": "reviewed",
      "id": 2897579695,
      "node_id": "PRR_kwDOABII586stY6v",
      "url": null,
      "actor": null,
      "commit_id": "b275b241a38d0ec0cb6f2899859813d2da5a89d0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "The latest change uses a single `BCLog::LogRateLimiter` instance and uses a slimmer way of tracking the amount of logging bytes left per `std::source_location`. I like the approach better as `m_categories` is no longer being used. I would like to point out that the rate-limiting logic can be bypassed if `LogPrintLevel` is used. I think `LogPrintLevel` callers need to be cautious and I kind of think this macro shouldn't be used if `level >= BCLog::Level::Info`.\r\n\r\n> Will that appear on the console as well, which didn't have any messages dropped?\r\n\r\nYes this appears in the console as well. I actually was unsure if console-logging should be rate-limited or not. Hopefully users have sensible limits on their terminal history?\r\n\r\nI will work on fixing the CI, I think review can still happen in the meantime while I debug the windows failure and fix the tidy job.",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2897579695",
      "submitted_at": "2025-06-04T17:58:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17989201758,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQwPW9e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17989201758",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/5535df69a2a7f198e48656912522d531d3867346",
      "created_at": "2025-06-04T20:52:53Z"
    },
    {
      "event": "unlabeled",
      "id": 17989831096,
      "node_id": "UNLE_lADOABII5864B5OdzwAAAAQwRwm4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17989831096",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T21:41:43Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2899378420,
      "node_id": "PRR_kwDOABII586s0QD0",
      "url": null,
      "actor": null,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2899378420",
      "submitted_at": "2025-06-05T09:54:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "reviewed",
      "id": 2899720611,
      "node_id": "PRR_kwDOABII586s1jmj",
      "url": null,
      "actor": null,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2899720611",
      "submitted_at": "2025-06-05T10:15:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18007029928,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQxTXio",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18007029928",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "46432604a96b84cbb0c8781f9996b089c1ba4622",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/46432604a96b84cbb0c8781f9996b089c1ba4622",
      "created_at": "2025-06-05T18:09:17Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18007856182,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQxWhQ2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18007856182",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7304113c87efe430cd3a0572b96ec01c61aaf2f0",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/7304113c87efe430cd3a0572b96ec01c61aaf2f0",
      "created_at": "2025-06-05T18:57:15Z"
    },
    {
      "event": "labeled",
      "id": 18007859435,
      "node_id": "LE_lADOABII5864B5OdzwAAAAQxWiDr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18007859435",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-05T18:57:24Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2945718154,
      "node_id": "IC_kwDOABII586vlBeK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2945718154",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-05T18:57:26Z",
      "updated_at": "2025-06-05T18:57:26Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `previous releases, depends DEBUG`: https://github.com/bitcoin/bitcoin/runs/43565644662</sub>\n<sub>LLM reason (✨ experimental): The build failed due to a compilation error caused by incomplete type declaration of BCLog::SourceLocationCounter.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2945718154",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18008346739,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQxYZBz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18008346739",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3c6cb3723bc0a54544b6dc640ab08915a089c31d",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/3c6cb3723bc0a54544b6dc640ab08915a089c31d",
      "created_at": "2025-06-05T19:23:48Z"
    },
    {
      "event": "commented",
      "id": 2946022873,
      "node_id": "IC_kwDOABII586vmL3Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2946022873",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-05T20:12:21Z",
      "updated_at": "2025-06-05T20:25:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "The latest push encapsulates things a bit more. I think there's still room for improvement and am open to suggestions -- I don't like how `WINDOW_MAX_BYTES` is not a `LogRateLimiter` member and I also dislike the `friend class Logger` usage.\r\n\r\nI think the windows cross-built job is failing because a `static BCLog::Logger*` is shared across tests and is triggering the rate-limiting logic before the logging tests are run. The [CI logs](https://github.com/bitcoin/bitcoin/actions/runs/15475499996/job/43571253106?pr=32604: 2025-06-05T19:56:44.9566257Z) have an asterisk:\r\n`Mismatch at position 0: [*] foo5: bar5 != foo5: bar5`",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2946022873",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18009426930,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQxcgvy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18009426930",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "21a3a509ac9c317260e12a01df6252412649dd84",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/21a3a509ac9c317260e12a01df6252412649dd84",
      "created_at": "2025-06-05T20:24:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18011044948,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQxirxU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18011044948",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "created_at": "2025-06-05T21:59:16Z"
    },
    {
      "event": "unlabeled",
      "id": 18012243983,
      "node_id": "UNLE_lADOABII5864B5OdzwAAAAQxnQgP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18012243983",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-05T23:08:52Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2904095923,
      "node_id": "PRR_kwDOABII586tGPyz",
      "url": null,
      "actor": null,
      "commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Approach ACK. I think this PR needs release notes because of the behaviour change.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2904095923",
      "submitted_at": "2025-06-06T10:07:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18096945888,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQ2qXrg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18096945888",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "387ccd959e230d525c16579fdd6e91110d783a40",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/387ccd959e230d525c16579fdd6e91110d783a40",
      "created_at": "2025-06-11T15:26:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18097298592,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQ2rtyg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18097298592",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a7bd7c9a69de72739326026b7ab660181c8d02fb",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/a7bd7c9a69de72739326026b7ab660181c8d02fb",
      "created_at": "2025-06-11T15:46:29Z"
    },
    {
      "event": "labeled",
      "id": 18097301520,
      "node_id": "LE_lADOABII5864B5OdzwAAAAQ2rugQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18097301520",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-11T15:46:41Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2963337913,
      "node_id": "IC_kwDOABII586woPK5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2963337913",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-11T15:46:43Z",
      "updated_at": "2025-06-11T15:46:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `ARM, unit tests, no functional tests`: https://github.com/bitcoin/bitcoin/runs/43903011789</sub>\n<sub>LLM reason (✨ experimental): The CI failure is caused by a compilation error in logging_tests.cpp due to a narrowing type conversion resulting in the build stopping.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2963337913",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "commented",
      "id": 2963542895,
      "node_id": "IC_kwDOABII586wpBNv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2963542895",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-11T16:56:16Z",
      "updated_at": "2025-06-11T17:00:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "The latest push a7bd7c9a69de72739326026b7ab660181c8d02fb includes:\r\n- rate limiting for callers of `LogPrintLevel` with level >= `BCLog::Level::Info`.\r\n- fix for the windows cross-built CI by using `GetFileSize` instead of `fs::file_size` in `logging_tests/rate_limiting`\r\n\r\nI've repurposed the old logging rpc from #21603 in another branch for testing [here](https://github.com/Crypt-iQ/bitcoin/tree/log_ratelimiting_05192025_rpc). This can be used to log from source locations and test out the new changes in logging behavior. Note that the `setmocktime` RPC needs to be used to set the mock time past the current clock time to reset the logging messages.\r\n\r\nExample usage:\r\n```\r\nbitcoin-cli -regtest excessivelog 1 1048500 # log just under 1MiB\r\nbitcoin-cli -regtest excessivelog 1 100 # this should get the total amount logged above 1MiB\r\n                                        # and the rate limiting logic should kick in\r\nbitcoin-cli -regtest excessivelog 2 1048500\r\nbitcoin-cli -regtest excessivelog 2 100 # trigger rate limiting from another location\r\nbitcoin-cli -regtest setmocktime <N> # set this past the current clock time because of how `LogRateLimiter` is initialized\r\nbitcoin-cli -regtest excessivelog 1 100 # this should trigger logging to resume and will log the source locations that were reset\r\n```\r\n\r\nExample output:\r\n```\r\n[*] Excessive logging detected from rpc/node.cpp:139 (RPCHelpMan excessivelog()): >1 MiB logged during the last hour.Suppressing logging to disk from this source location for up to one hour. Console logging unaffected. Last log entry.2025-06-11T16:32:41Z aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\n[*] Excessive logging detected from rpc/node.cpp:142 (RPCHelpMan excessivelog()): >1 MiB logged during the last hour.Suppressing logging to disk from this source location for up to one hour. Console logging unaffected. Last log entry.2025-06-11T16:33:04Z aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\nRestarting logging from rpc/node.cpp:139 (RPCHelpMan excessivelog()): (1 MiB) were dropped during the last hour.\r\nRestarting logging from rpc/node.cpp:142 (RPCHelpMan excessivelog()): (0 MiB) were dropped during the last hour.\r\n```",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2963542895",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "unlabeled",
      "id": 18099349815,
      "node_id": "UNLE_lADOABII5864B5OdzwAAAAQ2zik3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18099349815",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-11T17:54:14Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18124020366,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQ4RpqO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18124020366",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "created_at": "2025-06-12T23:17:29Z"
    },
    {
      "event": "reviewed",
      "id": 2924083057,
      "node_id": "PRR_kwDOABII586uSfdx",
      "url": null,
      "actor": null,
      "commit_id": "b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2924083057",
      "submitted_at": "2025-06-13T09:40:08Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "reviewed",
      "id": 2942493812,
      "node_id": "PRR_kwDOABII586vYuR0",
      "url": null,
      "actor": null,
      "commit_id": "b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "utACK b7d9c669cadf666f595a3e20ee3726a9ede88acd modulo [missing release notes](https://github.com/bitcoin/bitcoin/pull/32604/files#r2131883418)\r\n\r\nThanks for quickly addressing my copious amounts of comments, it's been fun reviewing this. I've left a few (final?) nits, but none are blocking. Would prefer to squash the last 2 test commits into the 2 commits where the relevant functionality was introduced, but either is fine.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2942493812",
      "submitted_at": "2025-06-19T12:28:52Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "review_requested",
      "id": 18229614984,
      "node_id": "RRE_lADOABII5864B5OdzwAAAAQ-kdmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18229614984",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-19T12:28:56Z",
      "requested_reviewer": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 18229615452,
      "node_id": "RRE_lADOABII5864B5OdzwAAAAQ-kdtc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18229615452",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-19T12:28:58Z",
      "requested_reviewer": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 18229615606,
      "node_id": "RRE_lADOABII5864B5OdzwAAAAQ-kdv2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18229615606",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-19T12:28:59Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQwMjk4YTg2ZDIxYTRhNDdjYjI5N2E5NmQzY2JhYTI3MTRhY2M3ZmQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40298a86d21a4a47cb297a96d3cbaa2714acc7fd",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/40298a86d21a4a47cb297a96d3cbaa2714acc7fd",
      "tree": {
        "sha": "e4652242d3adf386e7a9b9fd2190a57016c1abed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4652242d3adf386e7a9b9fd2190a57016c1abed"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree e4652242d3adf386e7a9b9fd2190a57016c1abed\nparent c5849663baa925a5291731e4e4013a08c811c646\nauthor Eugene Siegel <elzeigel@gmail.com> 1749140368 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1750710506 -0400\n\nlog: introduce BCLog::LogRateLimiter and BCLog::SourceLocationCounter\n\nLogRateLimiter will be used to keep track of source locations and our\ncurrent time-based logging window. It contains an unordered_map and\nunordered_set to track source locations. This will be used in a later\ncommit by BCLog::Logger to manage all of the rate limiting logic.\n\nSourceLocationCounter counts the available bytes left for logging per\nsource location for the current logging window. It does not track actual\nsource locations; it is used as a value in m_source_locations.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhZuOoACgkQEYdZ6DQ5\nqbFhAwgArL9q7bILOjvIkbHCZCPGNB7X9hVQXhc0f8XtKE9XGYl3kWInt991H6dg\naMYHr4otCoDM5L7+JTxoN7Jvc1EbcmUFOvCQFlXHEIU0TD8iBiqy0TuE+HnNhAgX\nhkEEJD0ZWXQDcIgfTcvLbQfcgVv3aWZrsgsHfTsZdUp7p8CbGc6tx5mc4ocGKlvt\nUZkHY7Tt23Pgr9J7YniKHgW6d4lju9NlctNhCxmA5CczQt8SKlE68k5MxvZEZ0y+\nccctTZSZ+BO4JQnI2CrfhmRZwLrV1nWfP+TJAW9niBPs1ny3PB4M3i5kNZZwwa8N\nYzRyqrjYfd766l7cEJreupVlmFeZWQ==\n=y9Ju\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c5849663baa925a5291731e4e4013a08c811c646",
          "sha": "c5849663baa925a5291731e4e4013a08c811c646",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c5849663baa925a5291731e4e4013a08c811c646"
        }
      ],
      "message": "log: introduce BCLog::LogRateLimiter and BCLog::SourceLocationCounter\n\nLogRateLimiter will be used to keep track of source locations and our\ncurrent time-based logging window. It contains an unordered_map and\nunordered_set to track source locations. This will be used in a later\ncommit by BCLog::Logger to manage all of the rate limiting logic.\n\nSourceLocationCounter counts the available bytes left for logging per\nsource location for the current logging window. It does not track actual\nsource locations; it is used as a value in m_source_locations.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-23T20:28:26Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-05T16:19:28Z"
      },
      "sha": "40298a86d21a4a47cb297a96d3cbaa2714acc7fd"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ0MWEzOWU0M2MyMTllYjBiMDZiOGRmMmMyYzVkMjRiYWFmMDE1YzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d41a39e43c219eb0b06b8df2c2c5d24baaf015c4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d41a39e43c219eb0b06b8df2c2c5d24baaf015c4",
      "tree": {
        "sha": "01c72016da4579bc505ddbda2450cadcb15a1d75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01c72016da4579bc505ddbda2450cadcb15a1d75"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 01c72016da4579bc505ddbda2450cadcb15a1d75\nparent 40298a86d21a4a47cb297a96d3cbaa2714acc7fd\nauthor Eugene Siegel <elzeigel@gmail.com> 1749145047 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1750710506 -0400\n\nlog: use std::source_location in place of __func__, __FILE__, __LINE__\n\nThe std::source_location conveniently stores the file name, line number,\nand function name of a source code location. We switch to using it instead\nof the __func__ identifier and the __FILE__ and __LINE__ macros.\n\nSince BufferedLog has a std::source_location member and the function name\nis no longer stored in BufferedLog, we can fit more BufferedLog in our 1MB\nbuffering limit.\n\nThis also changes the behavior of -logsourcelocations as std::source_location\nincludes the entire function signature.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhZuOoACgkQEYdZ6DQ5\nqbFHjAf+JyR3azgst4qWwrpiIlzMGFkTgisuJNo757eqotnZ1jN3Dj9UfWxvGIAS\nXW5D01k14UV9oNqXKnb/4d4re5pJfwr79xn7IqS0438kRsTTog8MuVsJCTEvvKBf\nfNMZA/F7q5QSroM/aKVgNhKP7BkSQWKQaziFtMHQiHHGqnK6j3NNJ2/t+199Hjuf\noU846SvpglZnFzx2cw83FuGz6UMyJtZNdEW65mc+4hX+TJUBQ1TCxsW8xSLf5EtM\nLZWT3XKp6WdczCFwXx6AWLYarl3LUFD1XqHTzcitro0GQ4n8vNejkMTH6PqQpQ+T\n1+M9GlhPB5Ay7fPFyGyZyA0Xv0z7MQ==\n=ODUG\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40298a86d21a4a47cb297a96d3cbaa2714acc7fd",
          "sha": "40298a86d21a4a47cb297a96d3cbaa2714acc7fd",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/40298a86d21a4a47cb297a96d3cbaa2714acc7fd"
        }
      ],
      "message": "log: use std::source_location in place of __func__, __FILE__, __LINE__\n\nThe std::source_location conveniently stores the file name, line number,\nand function name of a source code location. We switch to using it instead\nof the __func__ identifier and the __FILE__ and __LINE__ macros.\n\nSince BufferedLog has a std::source_location member and the function name\nis no longer stored in BufferedLog, we can fit more BufferedLog in our 1MB\nbuffering limit.\n\nThis also changes the behavior of -logsourcelocations as std::source_location\nincludes the entire function signature.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-23T20:28:26Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-05T17:37:27Z"
      },
      "sha": "d41a39e43c219eb0b06b8df2c2c5d24baaf015c4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGI0NGQzMTQ1NWFkNDZjYTNlZDk1NjkwZGZjMGE5MTM0NDViOWMxYzk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b44d31455ad46ca3ed95690dfc0a913445b9c1c9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b44d31455ad46ca3ed95690dfc0a913445b9c1c9",
      "tree": {
        "sha": "5d6b064d61d860d4d42adc3bf955fa9d519fd93b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d6b064d61d860d4d42adc3bf955fa9d519fd93b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5d6b064d61d860d4d42adc3bf955fa9d519fd93b\nparent d41a39e43c219eb0b06b8df2c2c5d24baaf015c4\nauthor Eugene Siegel <elzeigel@gmail.com> 1749145323 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1750710506 -0400\n\nlog: Add rate limiting to LogPrintf, LogInfo, LogWarning, LogError, LogPrintLevel\n\nTo mitigate disk-filling attacks caused by unsafe usages of LogPrintf and\nfriends, we rate-limit them by passing a should_ratelimit bool that\neventually makes its way to LogPrintStr which may call\nLogRateLimiter::NeedsRateLimiting. The rate limiting is accomplished by\nadding a LogRateLimiter member to BCLog::Logger which tracks source\ncode locations for the given logging window.\n\nEvery hour, a source location can log up to 1MiB of data. Source\nlocations that exceed the limit will have their logs suppressed for the\nrest of the window determined by m_limiter.\n\nThis change also affects the public LogPrintLevel function if called with\na level >= BCLog::Level::Info.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhZuOoACgkQEYdZ6DQ5\nqbEqNgf/QGNaywzCPXzCOp8e93G27Qyls6YSQ0/6lHO5xi69Ka/LO3VrW7KN1GfV\nUS0J1bgSn7zutxcd8cVuk1y3NgysvtCuzbJYDnn0eCV315CuzDff9yCx7Wr8IhTT\nQUzejePLxQUVkdVsQw9lkwnHunjAgkabVYa5myY6C8gmiQmtpA1HOjcXEqWA89wC\njxh2YurTvgfb4Qyi9wc33m361EiMHwAKckqtewqVhz1UIeN+3dsNndG6/J7/oZB8\nOnsjxAbtl3E0Vob0AgWKNpOBGBvYXGLJEA/kdUrHdpTh11vmfKmgvXCmB+LA2XxR\nOtY7ASrFkfBOkOg9z2bFP0epCJqqBQ==\n=G+QE\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d41a39e43c219eb0b06b8df2c2c5d24baaf015c4",
          "sha": "d41a39e43c219eb0b06b8df2c2c5d24baaf015c4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d41a39e43c219eb0b06b8df2c2c5d24baaf015c4"
        }
      ],
      "message": "log: Add rate limiting to LogPrintf, LogInfo, LogWarning, LogError, LogPrintLevel\n\nTo mitigate disk-filling attacks caused by unsafe usages of LogPrintf and\nfriends, we rate-limit them by passing a should_ratelimit bool that\neventually makes its way to LogPrintStr which may call\nLogRateLimiter::NeedsRateLimiting. The rate limiting is accomplished by\nadding a LogRateLimiter member to BCLog::Logger which tracks source\ncode locations for the given logging window.\n\nEvery hour, a source location can log up to 1MiB of data. Source\nlocations that exceed the limit will have their logs suppressed for the\nrest of the window determined by m_limiter.\n\nThis change also affects the public LogPrintLevel function if called with\na level >= BCLog::Level::Info.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-23T20:28:26Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-05T17:42:03Z"
      },
      "sha": "b44d31455ad46ca3ed95690dfc0a913445b9c1c9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVmZTA4ZTAxMzg0YzRhNGM4NTI1MDYwZDM2NWZhMzhjMzEyNzU4ZjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fe08e01384c4a4c8525060d365fa38c312758f0",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5fe08e01384c4a4c8525060d365fa38c312758f0",
      "tree": {
        "sha": "0a34d67d492a4ad5277093baa70a845a95e3cf0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a34d67d492a4ad5277093baa70a845a95e3cf0d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0a34d67d492a4ad5277093baa70a845a95e3cf0d\nparent b44d31455ad46ca3ed95690dfc0a913445b9c1c9\nauthor Eugene Siegel <elzeigel@gmail.com> 1749145530 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1750710506 -0400\n\nvalidation: use private LogPrintLevel_ to exempt UpdateTipLog from rate limiting\n\nSince UpdateTipLog logs heavily during IBD, we need to exempt it from\nrate limiting. This is done by using the LogPrintLevel_ macro so that\nwe can explicitly set should_ratelimit to false.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhZuOoACgkQEYdZ6DQ5\nqbFTZwgAqCGP2l/kXE8sHBgeiKGrS+9SeX+7efP+BZrAGhvcGTObcaoM+LTnmIlL\nTUbnbVw2zwpaipYrHJlewuTJ/5Z73EG2OXdTgw/1+YTo6DWY+0ntWCsvcSMOiRLG\n9KpnnRNzsTh6nwV6UFBJv3SOemh+1HF2uxwy6ARPbOORly1z2nikGwETy+y4OHFo\nnjU9ECstabTY8X3dnQh4GL9CinU37KstM6ruoLfVnCgycJS+3hu6GHsJ2V7uUk3z\nAPnENADkQtHUqXuFIXxbtsIutW0ijMWM8Y6j5Bdkjt+h6XsP+kkAjtEI7wH+0qEw\nKEWcaJmzvvA8AcgsAcT92XgUg0fmSQ==\n=xgGe\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b44d31455ad46ca3ed95690dfc0a913445b9c1c9",
          "sha": "b44d31455ad46ca3ed95690dfc0a913445b9c1c9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b44d31455ad46ca3ed95690dfc0a913445b9c1c9"
        }
      ],
      "message": "validation: use private LogPrintLevel_ to exempt UpdateTipLog from rate limiting\n\nSince UpdateTipLog logs heavily during IBD, we need to exempt it from\nrate limiting. This is done by using the LogPrintLevel_ macro so that\nwe can explicitly set should_ratelimit to false.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-23T20:28:26Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-05T17:45:30Z"
      },
      "sha": "5fe08e01384c4a4c8525060d365fa38c312758f0"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNjMzBlZTkxMDdmZDBlOTE2Zjk3ODRiMDkxYTRkMDJmM2E3M2NlNDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c30ee9107fd0e916f9784b091a4d02f3a73ce46",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3c30ee9107fd0e916f9784b091a4d02f3a73ce46",
      "tree": {
        "sha": "cc27cc17628c37f158947c60bf2368c663802711",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc27cc17628c37f158947c60bf2368c663802711"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree cc27cc17628c37f158947c60bf2368c663802711\nparent 5fe08e01384c4a4c8525060d365fa38c312758f0\nauthor Eugene Siegel <elzeigel@gmail.com> 1749145669 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1750710506 -0400\n\ntest: Mark ~DebugLogHelper as noexcept(false)\n\nWe mark ~DebugLogHelper as noexcept(false) to be able to catch the\nexception it throws. This lets us use it in test in combination with\nBOOST_CHECK_THROW and BOOST_CHECK_NO_THROW to check that certain log\nmessages are (not) logged.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhZuOoACgkQEYdZ6DQ5\nqbEVtwf+NSFwxsUgre5WFT1Wk7k6zemdU6fXWJ3YyPElT0AbvIZl6yRQBhXCYTgW\n0ZEiOvth+Pkbq0ATG2UtPhTZv7FRsfntBxc4rqLSR83x+UTTfC4/CyHqW9OtnjVk\nqhrvbm0saAqBg9MOtk+JBI5tWI+zLxxqW2NbUas1qoGJWPEqNM6MEZww0ITrfveL\n8zNhOEfQSWU+FmNnZtp046UIm8SXUfa6ZAM2FNBHzvw2AUEITFvpO37OZZV52r+e\nLd9XL/XcvGP6mG1Njy11/w84YoYevMAKDmjTOoe5viKF/hoUM/Y9jFZedGFem4ec\nPKwfvGXXT4b4w3QjHvKoyFJWwlK43w==\n=HgOh\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fe08e01384c4a4c8525060d365fa38c312758f0",
          "sha": "5fe08e01384c4a4c8525060d365fa38c312758f0",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5fe08e01384c4a4c8525060d365fa38c312758f0"
        }
      ],
      "message": "test: Mark ~DebugLogHelper as noexcept(false)\n\nWe mark ~DebugLogHelper as noexcept(false) to be able to catch the\nexception it throws. This lets us use it in test in combination with\nBOOST_CHECK_THROW and BOOST_CHECK_NO_THROW to check that certain log\nmessages are (not) logged.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-23T20:28:26Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-05T17:47:49Z"
      },
      "sha": "3c30ee9107fd0e916f9784b091a4d02f3a73ce46"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJhYzg2OTZiNTNlNDU1ZGQyN2M4MzQxODI4NDA0YTIzYjVjYjY4YTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "tree": {
        "sha": "5dae419cf66410ed137da413e44fc5f095ae8db3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5dae419cf66410ed137da413e44fc5f095ae8db3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 5dae419cf66410ed137da413e44fc5f095ae8db3\nparent 3c30ee9107fd0e916f9784b091a4d02f3a73ce46\nauthor Eugene Siegel <elzeigel@gmail.com> 1750708664 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1750710507 -0400\n\ndoc: add release notes for new rate limiting logging behavior\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhZuOsACgkQEYdZ6DQ5\nqbE9PQf/ZsQa/e5Dg2rPHpbpmEVp8qgbiEmgxmdF/zCSkFN2aqzzP5/5yUA7DKx9\ncn1Kg9rPjOXQLkQsS0wtwPFTx9z/VBpG4oruQqvtu59VoCjHJCxoV/WLDWevjrFu\nv+oopaaQcfsqB8acLlJUP6+W04vMREtVB4ZjY9OCDG/Gx70u4MyeB4Zfu178Ygwg\n+DktynYVrrY+9iSKIocRVY2H8lrOXC4sZBj1YVdKYZBPveMEcjnA1yWdxhqgwKwZ\nfCjQudwE6VKfQuetz2vtbKw4keyNbW3V8/z4EFtssmDSl0WSbN5wuQYRvxD6UPT2\nTvDoOGz0Ty7vXJB6XoDLQMI3nRQv2A==\n=jp44\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c30ee9107fd0e916f9784b091a4d02f3a73ce46",
          "sha": "3c30ee9107fd0e916f9784b091a4d02f3a73ce46",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3c30ee9107fd0e916f9784b091a4d02f3a73ce46"
        }
      ],
      "message": "doc: add release notes for new rate limiting logging behavior",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-23T20:28:27Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-23T19:57:44Z"
      },
      "sha": "2ac8696b53e455dd27c8341828404a23b5cb68a9"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18280747381,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAARBnhF1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18280747381",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "created_at": "2025-06-23T20:28:39Z"
    },
    {
      "event": "reviewed",
      "id": 2952512677,
      "node_id": "PRR_kwDOABII586v-8Sl",
      "url": null,
      "actor": null,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Can you please update the PR descripton now that there's no `UNCONDITIONAL_ALWAYS category`?\r\n\r\nI'm mostly ok with the change, I'm testing if it introduces any slowdown and would prefer making the tests a bit more typesafe and compact (and the failure seems related to the change) and some of the new classes could use a more descriptive naming in my opinion.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2952512677",
      "submitted_at": "2025-06-24T09:49:29Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "reviewed",
      "id": 2957730107,
      "node_id": "PRR_kwDOABII586wS2E7",
      "url": null,
      "actor": null,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Code review ACK 2ac8696b53e455dd27c8341828404a23b5cb68a9\r\n\r\nI think the commit order needs to change, so that 3c30ee9107fd0e916f9784b091a4d02f3a73ce46 comes before the tests that make use of the change?\r\n\r\nnit: I'd also suggest to squash b44d31455ad46ca3ed95690dfc0a913445b9c1c9 and 5fe08e01384c4a4c8525060d365fa38c312758f0 into one commit, so there is no intermediate state between the commits where the validation logs are rate limited. ",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2957730107",
      "submitted_at": "2025-06-25T11:10:29Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "review_requested",
      "id": 18314483547,
      "node_id": "RRE_lADOABII5864B5OdzwAAAARDoNdb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18314483547",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-25T11:10:35Z",
      "requested_reviewer": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 18314484018,
      "node_id": "RRE_lADOABII5864B5OdzwAAAARDoNky",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18314484018",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-25T11:10:37Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2107350361",
      "pull_request_review_id": 2868443828,
      "id": 2107350361,
      "node_id": "PRRC_kwDOABII5859m51Z",
      "diff_hunk": "@@ -27,10 +31,29 @@ static const bool DEFAULT_LOGTIMESTAMPS = true;\n static const bool DEFAULT_LOGTHREADNAMES = false;\n static const bool DEFAULT_LOGSOURCELOCATIONS = false;\n static constexpr bool DEFAULT_LOGLEVELALWAYS = false;",
      "path": "src/logging.h",
      "position": null,
      "original_position": 26,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "0bc6ed61cfab6d97e74103efd41c46faf5941ff6",
      "in_reply_to_id": null,
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: would be nice to align the other initializations to the new C++ 11 {} style in a follow up PR, to keep the code base consistent. ",
      "created_at": "2025-05-26T13:22:15Z",
      "updated_at": "2025-05-26T13:41:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2107350361",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2107350361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2114308684",
      "pull_request_review_id": 2878876682,
      "id": 2114308684,
      "node_id": "PRRC_kwDOABII585-BcpM",
      "diff_hunk": "@@ -27,10 +31,29 @@ static const bool DEFAULT_LOGTIMESTAMPS = true;\n static const bool DEFAULT_LOGTHREADNAMES = false;\n static const bool DEFAULT_LOGSOURCELOCATIONS = false;\n static constexpr bool DEFAULT_LOGLEVELALWAYS = false;",
      "path": "src/logging.h",
      "position": null,
      "original_position": 26,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "0bc6ed61cfab6d97e74103efd41c46faf5941ff6",
      "in_reply_to_id": 2107350361,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I can do that in a follow-up",
      "created_at": "2025-05-29T16:23:26Z",
      "updated_at": "2025-05-29T16:23:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2114308684",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2114308684"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115514944",
      "pull_request_review_id": 2880741415,
      "id": 2115514944,
      "node_id": "PRRC_kwDOABII585-GDJA",
      "diff_hunk": "@@ -39,39 +62,41 @@ struct LogCategory {\n namespace BCLog {\n     using CategoryMask = uint64_t;\n     enum LogFlags : CategoryMask {\n-        NONE        = CategoryMask{0},\n-        NET         = (CategoryMask{1} <<  0),\n-        TOR         = (CategoryMask{1} <<  1),\n-        MEMPOOL     = (CategoryMask{1} <<  2),\n-        HTTP        = (CategoryMask{1} <<  3),\n-        BENCH       = (CategoryMask{1} <<  4),\n-        ZMQ         = (CategoryMask{1} <<  5),\n-        WALLETDB    = (CategoryMask{1} <<  6),\n-        RPC         = (CategoryMask{1} <<  7),\n-        ESTIMATEFEE = (CategoryMask{1} <<  8),\n-        ADDRMAN     = (CategoryMask{1} <<  9),\n-        SELECTCOINS = (CategoryMask{1} << 10),\n-        REINDEX     = (CategoryMask{1} << 11),\n-        CMPCTBLOCK  = (CategoryMask{1} << 12),\n-        RAND        = (CategoryMask{1} << 13),\n-        PRUNE       = (CategoryMask{1} << 14),\n-        PROXY       = (CategoryMask{1} << 15),\n-        MEMPOOLREJ  = (CategoryMask{1} << 16),\n-        LIBEVENT    = (CategoryMask{1} << 17),\n-        COINDB      = (CategoryMask{1} << 18),\n-        QT          = (CategoryMask{1} << 19),\n-        LEVELDB     = (CategoryMask{1} << 20),\n-        VALIDATION  = (CategoryMask{1} << 21),\n-        I2P         = (CategoryMask{1} << 22),\n-        IPC         = (CategoryMask{1} << 23),\n+        NONE                       = CategoryMask{0},\n+        NET                        = (CategoryMask{1} <<  0),\n+        TOR                        = (CategoryMask{1} <<  1),\n+        MEMPOOL                    = (CategoryMask{1} <<  2),\n+        HTTP                       = (CategoryMask{1} <<  3),\n+        BENCH                      = (CategoryMask{1} <<  4),\n+        ZMQ                        = (CategoryMask{1} <<  5),\n+        WALLETDB                   = (CategoryMask{1} <<  6),\n+        RPC                        = (CategoryMask{1} <<  7),\n+        ESTIMATEFEE                = (CategoryMask{1} <<  8),\n+        ADDRMAN                    = (CategoryMask{1} <<  9),\n+        SELECTCOINS                = (CategoryMask{1} << 10),\n+        REINDEX                    = (CategoryMask{1} << 11),\n+        CMPCTBLOCK                 = (CategoryMask{1} << 12),\n+        RAND                       = (CategoryMask{1} << 13),\n+        PRUNE                      = (CategoryMask{1} << 14),\n+        PROXY                      = (CategoryMask{1} << 15),\n+        MEMPOOLREJ                 = (CategoryMask{1} << 16),\n+        LIBEVENT                   = (CategoryMask{1} << 17),\n+        COINDB                     = (CategoryMask{1} << 18),\n+        QT                         = (CategoryMask{1} << 19),\n+        LEVELDB                    = (CategoryMask{1} << 20),\n+        VALIDATION                 = (CategoryMask{1} << 21),\n+        I2P                        = (CategoryMask{1} << 22),\n+        IPC                        = (CategoryMask{1} << 23),\n #ifdef DEBUG_LOCKCONTENTION\n-        LOCK        = (CategoryMask{1} << 24),\n+        LOCK                       = (CategoryMask{1} << 24),\n #endif\n-        BLOCKSTORAGE = (CategoryMask{1} << 25),\n-        TXRECONCILIATION = (CategoryMask{1} << 26),\n-        SCAN        = (CategoryMask{1} << 27),\n-        TXPACKAGES  = (CategoryMask{1} << 28),\n-        ALL         = ~NONE,\n+        BLOCKSTORAGE               = (CategoryMask{1} << 25),\n+        TXRECONCILIATION           = (CategoryMask{1} << 26),\n+        SCAN                       = (CategoryMask{1} << 27),\n+        TXPACKAGES                 = (CategoryMask{1} << 28),\n+        UNCONDITIONAL_RATE_LIMITED = (CategoryMask{1} << 29),\n+        UNCONDITIONAL_ALWAYS       = (CategoryMask{1} << 30),",
      "path": "src/logging.h",
      "position": null,
      "original_position": 121,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I think a brief docstring on their suggested usage here would be helpful here",
      "created_at": "2025-05-30T09:34:19Z",
      "updated_at": "2025-05-30T10:21:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115514944",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115514944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": 97,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115526293",
      "pull_request_review_id": 2880741415,
      "id": 2115526293,
      "node_id": "PRRC_kwDOABII585-GF6V",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is there a good use case for disabling rate limiting? I can't think of one. Letting the user define the amount of rate limiting is an alternative, but even then, I'm not sure. If an attacker or bug is able to reach the sane default maximum, then is the user really going to get any benefit from being to inspect the additional volume of un-ratelimited logs? I'm not sure. If so, I think it would make sense to not have this as a configurable option.\r\n\r\n",
      "created_at": "2025-05-30T09:40:06Z",
      "updated_at": "2025-05-30T10:21:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115526293",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115526293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115570067",
      "pull_request_review_id": 2880741415,
      "id": 2115570067,
      "node_id": "PRRC_kwDOABII585-GQmT",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm, I'm feeling uneasy about using `m_categories`, when rate limiting flags fundamentally don't represent a category. I can see how it reduces the diff, but I'm not sure that's worth it. I'll think about an alternative approach - have you considered any already?\r\n\r\nSince the user doesn't have to be able to configure any of this, and we only have a single `UNCONDITIONAL_ALWAYS` use case (and likely won't have (many) more in the future), I think adding an `is_conditional=True` arg to `LogPrintLevel` and a `LogInfoAlways` macro might be an alternative?",
      "created_at": "2025-05-30T10:03:02Z",
      "updated_at": "2025-05-30T10:21:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115570067",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115570067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115756875",
      "pull_request_review_id": 2881078755,
      "id": 2115756875,
      "node_id": "PRRC_kwDOABII585-G-NL",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's a good point, I can't think of any concrete use case to disable rate limiting here.",
      "created_at": "2025-05-30T11:33:52Z",
      "updated_at": "2025-05-30T11:33:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115756875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115756875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115778728",
      "pull_request_review_id": 2881107790,
      "id": 2115778728,
      "node_id": "PRRC_kwDOABII585-HDio",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115570067,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I haven't considered alternative approaches, but I think adding a boolean is better than adding special-cased categories.",
      "created_at": "2025-05-30T11:44:09Z",
      "updated_at": "2025-05-30T11:44:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115778728",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115778728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115826232",
      "pull_request_review_id": 2881185484,
      "id": 2115826232,
      "node_id": "PRRC_kwDOABII585-HPI4",
      "diff_hunk": "@@ -364,33 +368,71 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::FormatLogStrAndRateLimit(std::string& str, BCLog::LogFlags category, BCLog::Level level, const std::source_location& source_loc, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime)",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it's unintuitive that this function returns `true` when the operation failed. It seems like the rate limiting can be carved out pretty much as-is into a separate `bool NeedsRateLimiting()` function? There are only 2 callsites of `FormatLogStrAndRateLimit`, and the first one (`StartLogging`) doesn't look like it needs rate limiting because we already have a max buffer size?\r\n\r\nedit: this would pair fairly well with my suggestion [here](https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115841360)",
      "created_at": "2025-05-30T12:19:40Z",
      "updated_at": "2025-05-30T12:56:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115826232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115826232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115841360",
      "pull_request_review_id": 2881185484,
      "id": 2115841360,
      "node_id": "PRRC_kwDOABII585-HS1Q",
      "diff_hunk": "@@ -81,16 +106,54 @@ namespace BCLog {\n         Error,\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n+    static constexpr LogFlags DEFAULT_LOG_FLAGS{UNCONDITIONAL_RATE_LIMITED | UNCONDITIONAL_ALWAYS};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRateLimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::time_point<NodeClock> m_last_reset;",
      "path": "src/logging.h",
      "position": 89,
      "original_position": 138,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not a big issue, but since we have quite a few log source locations, this class will be instantiated a fair amount of (`N`) times. An alternative approach would be to have a single `LogRateLimiter` instance that encapsulates most of the logic in 6b54362c19ca9baf9dfa9be9281f6faeda169420, and has a single `m_last_reset` member, spawning a minimal `SourceLocationCounter` struct for each source location, containing just the `m_available_bytes` and `m_dropped_bytes` members.\r\n\r\nThis:\r\n- reduces `N` `std::chrono::time_point<NodeClock>` instances to just 1\r\n- allows `LogRateLimiter` to completely clean up memory for log locations that haven't been triggered in the last hour\r\n- improves code encapsulation\r\n\r\nOverall, this shouldn't be a big change from what you have now, mostly just moving code around into a new class?\r\n",
      "created_at": "2025-05-30T12:30:24Z",
      "updated_at": "2025-05-30T12:52:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115841360",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115841360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 144,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115859316",
      "pull_request_review_id": 2881185484,
      "id": 2115859316,
      "node_id": "PRRC_kwDOABII585-HXN0",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115570067,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Or perhaps even better than a boolean is a `uint64_t rate_limit=DEFAULT_RATE_LIMIT` so we can do away with the distinction between ratelimited and non-ratelimited logging entirely? We could use rate_limit=0 as a synonym for non-ratelimited logging, but I think even `UpdateTipLog()` doesn't have to be exempt from rate limiting, we could still set a sane value that allows doing entire IBD in one hour, for example.\r\n\r\nThen `UpdateTipLog()` could just use:\r\n```\r\n    LogInfo(/*rate_limit=*/100, \"%s%s: new best=%s height=%d version=0x%08x log2_work=%f tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)%s\\n\",\r\n```",
      "created_at": "2025-05-30T12:43:09Z",
      "updated_at": "2025-05-30T12:56:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115859316",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115859316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115869345",
      "pull_request_review_id": 2881185484,
      "id": 2115869345,
      "node_id": "PRRC_kwDOABII585-HZqh",
      "diff_hunk": "@@ -364,33 +368,71 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::FormatLogStrAndRateLimit(std::string& str, BCLog::LogFlags category, BCLog::Level level, const std::source_location& source_loc, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime)\n {\n     if (!str.ends_with('\\n')) str.push_back('\\n');\n \n     str.insert(0, GetLogPrefix(category, level));\n \n     if (m_log_sourcelocations) {\n-        str.insert(0, strprintf(\"[%s:%d] [%s] \", RemovePrefixView(source_file, \"./\"), source_line, logging_function));\n+        str.insert(0, strprintf(\"[%s:%d] [%s] \", RemovePrefixView(source_loc.file_name(), \"./\"), source_loc.line(), logging_function));\n     }\n \n     if (m_log_threadnames) {\n         str.insert(0, strprintf(\"[%s] \", (threadname.empty() ? \"unknown\" : threadname)));\n     }\n \n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    if (category == UNCONDITIONAL_RATE_LIMITED && m_ratelimit) {\n+        was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+        is_ratelimited = !m_ratelimiters[source_loc].Consume(str.size());\n+\n+        if (!is_ratelimited && was_ratelimited) {\n+            // Logging will restart for this source location.\n+            m_suppressed_locations.erase(source_loc);\n+\n+            uint64_t dropped_bytes = m_ratelimiters[source_loc].GetDroppedBytes();\n+\n+            str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\n+                                    \"(%d MiB) were dropped during the last hour.\\n\",\n+                                    source_loc.file_name(), source_loc.line(), logging_function,\n+                                    dropped_bytes / (1024 * 1024)));\n+        } else if (is_ratelimited && !was_ratelimited) {",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: It would be nice if we could catch this in debug builds (ideally even at a fraction, say 20% of the limit), to help inform if our default limit needs to change.  `Assume()` is an option, but that would probably break unit tests in debug builds.\r\n\r\nnit, because 1MB is small enough that it should prevent issues even on devices with little disk size (unless an attacker finds multiple log vulnerabilities), and large enough that no single unconditional logging statement should ever hit that in the foreseeable future, so I think \"driving blind\" is acceptable here.",
      "created_at": "2025-05-30T12:49:40Z",
      "updated_at": "2025-05-30T12:52:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115869345",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115869345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 404,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115877367",
      "pull_request_review_id": 2881278602,
      "id": 2115877367,
      "node_id": "PRRC_kwDOABII585-Hbn3",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@dergoegge might remember why this was added?",
      "created_at": "2025-05-30T12:54:46Z",
      "updated_at": "2025-05-30T12:54:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115877367",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115877367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115895206",
      "pull_request_review_id": 2881307488,
      "id": 2115895206,
      "node_id": "PRRC_kwDOABII585-Hf-m",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fwiw: I can't find any discussion about it in https://github.com/bitcoin/bitcoin/pull/21603, and the option was present from the first version of the PR (https://github.com/bitcoin/bitcoin/commit/4648b6d207139ec0ab2994f56c0a47f81cdf516a#diff-b1e19192258d83199d8adaa5ac31f067af98f63554bfdd679bd8e8073815e69d)",
      "created_at": "2025-05-30T13:05:58Z",
      "updated_at": "2025-05-30T13:05:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115895206",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115895206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2116212200",
      "pull_request_review_id": 2881821692,
      "id": 2116212200,
      "node_id": "PRRC_kwDOABII585-ItXo",
      "diff_hunk": "@@ -81,16 +106,54 @@ namespace BCLog {\n         Error,\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n+    static constexpr LogFlags DEFAULT_LOG_FLAGS{UNCONDITIONAL_RATE_LIMITED | UNCONDITIONAL_ALWAYS};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRateLimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::time_point<NodeClock> m_last_reset;",
      "path": "src/logging.h",
      "position": 89,
      "original_position": 138,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115841360,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yup I had thought about this and wasn't sure how to evaluate the overhead. I'll change it.",
      "created_at": "2025-05-30T16:18:02Z",
      "updated_at": "2025-05-30T16:18:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2116212200",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2116212200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 144,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2116215143",
      "pull_request_review_id": 2881825924,
      "id": 2116215143,
      "node_id": "PRRC_kwDOABII585-IuFn",
      "diff_hunk": "@@ -364,33 +368,71 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::FormatLogStrAndRateLimit(std::string& str, BCLog::LogFlags category, BCLog::Level level, const std::source_location& source_loc, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime)",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115826232,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yup, this makes sense as well. Can change.",
      "created_at": "2025-05-30T16:20:08Z",
      "updated_at": "2025-05-30T16:20:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2116215143",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2116215143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2116217752",
      "pull_request_review_id": 2881829603,
      "id": 2116217752,
      "node_id": "PRRC_kwDOABII585-IuuY",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115570067,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think callers just need to be aware that they cannot set the rate limit very high in certain cases. Maybe this change and a comment will suffice?",
      "created_at": "2025-05-30T16:21:56Z",
      "updated_at": "2025-05-30T16:21:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2116217752",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2116217752"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123243686",
      "pull_request_review_id": 2891468741,
      "id": 2123243686,
      "node_id": "PRRC_kwDOABII585-jiCm",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "When I’m benchmarking IBD, I don’t want any artificial size or rate limits.\r\nSince the attack only matters when peers can influence us, could we simply disable rate-limiting for all logs during IBD/reindexes/assumeutxo?\r\n\r\n------\r\n\r\nShould the docs explicitly state the 1 MiB-per-hour cap, or could we replace the boolean flag with a numeric \"MiB per hour\" parameter (retaining 0 and 1 as the current meanings)?",
      "created_at": "2025-06-03T09:22:24Z",
      "updated_at": "2025-06-03T10:09:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123243686",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123243686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123314635",
      "pull_request_review_id": 2891468741,
      "id": 2123314635,
      "node_id": "PRRC_kwDOABII585-jzXL",
      "diff_hunk": "@@ -39,39 +62,41 @@ struct LogCategory {\n namespace BCLog {\n     using CategoryMask = uint64_t;\n     enum LogFlags : CategoryMask {\n-        NONE        = CategoryMask{0},\n-        NET         = (CategoryMask{1} <<  0),\n-        TOR         = (CategoryMask{1} <<  1),\n-        MEMPOOL     = (CategoryMask{1} <<  2),\n-        HTTP        = (CategoryMask{1} <<  3),\n-        BENCH       = (CategoryMask{1} <<  4),\n-        ZMQ         = (CategoryMask{1} <<  5),\n-        WALLETDB    = (CategoryMask{1} <<  6),\n-        RPC         = (CategoryMask{1} <<  7),\n-        ESTIMATEFEE = (CategoryMask{1} <<  8),\n-        ADDRMAN     = (CategoryMask{1} <<  9),\n-        SELECTCOINS = (CategoryMask{1} << 10),\n-        REINDEX     = (CategoryMask{1} << 11),\n-        CMPCTBLOCK  = (CategoryMask{1} << 12),\n-        RAND        = (CategoryMask{1} << 13),\n-        PRUNE       = (CategoryMask{1} << 14),\n-        PROXY       = (CategoryMask{1} << 15),\n-        MEMPOOLREJ  = (CategoryMask{1} << 16),\n-        LIBEVENT    = (CategoryMask{1} << 17),\n-        COINDB      = (CategoryMask{1} << 18),\n-        QT          = (CategoryMask{1} << 19),\n-        LEVELDB     = (CategoryMask{1} << 20),\n-        VALIDATION  = (CategoryMask{1} << 21),\n-        I2P         = (CategoryMask{1} << 22),\n-        IPC         = (CategoryMask{1} << 23),\n+        NONE                       = CategoryMask{0},\n+        NET                        = (CategoryMask{1} <<  0),\n+        TOR                        = (CategoryMask{1} <<  1),\n+        MEMPOOL                    = (CategoryMask{1} <<  2),\n+        HTTP                       = (CategoryMask{1} <<  3),\n+        BENCH                      = (CategoryMask{1} <<  4),\n+        ZMQ                        = (CategoryMask{1} <<  5),\n+        WALLETDB                   = (CategoryMask{1} <<  6),\n+        RPC                        = (CategoryMask{1} <<  7),\n+        ESTIMATEFEE                = (CategoryMask{1} <<  8),\n+        ADDRMAN                    = (CategoryMask{1} <<  9),\n+        SELECTCOINS                = (CategoryMask{1} << 10),\n+        REINDEX                    = (CategoryMask{1} << 11),\n+        CMPCTBLOCK                 = (CategoryMask{1} << 12),\n+        RAND                       = (CategoryMask{1} << 13),\n+        PRUNE                      = (CategoryMask{1} << 14),\n+        PROXY                      = (CategoryMask{1} << 15),\n+        MEMPOOLREJ                 = (CategoryMask{1} << 16),\n+        LIBEVENT                   = (CategoryMask{1} << 17),\n+        COINDB                     = (CategoryMask{1} << 18),\n+        QT                         = (CategoryMask{1} << 19),\n+        LEVELDB                    = (CategoryMask{1} << 20),\n+        VALIDATION                 = (CategoryMask{1} << 21),\n+        I2P                        = (CategoryMask{1} << 22),\n+        IPC                        = (CategoryMask{1} << 23),\n #ifdef DEBUG_LOCKCONTENTION\n-        LOCK        = (CategoryMask{1} << 24),\n+        LOCK                       = (CategoryMask{1} << 24),\n #endif\n-        BLOCKSTORAGE = (CategoryMask{1} << 25),\n-        TXRECONCILIATION = (CategoryMask{1} << 26),\n-        SCAN        = (CategoryMask{1} << 27),\n-        TXPACKAGES  = (CategoryMask{1} << 28),\n-        ALL         = ~NONE,\n+        BLOCKSTORAGE               = (CategoryMask{1} << 25),\n+        TXRECONCILIATION           = (CategoryMask{1} << 26),\n+        SCAN                       = (CategoryMask{1} << 27),\n+        TXPACKAGES                 = (CategoryMask{1} << 28),\n+        UNCONDITIONAL_RATE_LIMITED = (CategoryMask{1} << 29),\n+        UNCONDITIONAL_ALWAYS       = (CategoryMask{1} << 30),",
      "path": "src/logging.h",
      "position": null,
      "original_position": 121,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure introducing two extra category flags is a good abstraction here - feels noisy.\r\nWouldn’t it be cleaner to decide based on exposure to the attack surface instead? For example, during IBD (or any state with zero peer connections) we could leave all logs unrestricted, and always enable rate-limiting when node is reachable by peers.",
      "created_at": "2025-06-03T09:49:44Z",
      "updated_at": "2025-06-03T10:09:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123314635",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123314635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123334010",
      "pull_request_review_id": 2891468741,
      "id": 2123334010,
      "node_id": "PRRC_kwDOABII585-j4F6",
      "diff_hunk": "@@ -105,6 +168,11 @@ namespace BCLog {\n         size_t m_cur_buffer_memusage GUARDED_BY(m_cs){0};\n         size_t m_buffer_lines_discarded GUARDED_BY(m_cs){0};\n \n+        //! Fixed window rate limiters for each source location that has attempted to log something.\n+        std::unordered_map<std::source_location, LogRateLimiter, SourceLocationHasher, SourceLocationEqual> m_ratelimiters GUARDED_BY(m_cs);",
      "path": "src/logging.h",
      "position": null,
      "original_position": 188,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Do we ever clear `m_ratelimiters`, or does that map only grow over the lifetime of the process?",
      "created_at": "2025-06-03T09:57:52Z",
      "updated_at": "2025-06-03T10:09:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123334010",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123334010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123366909",
      "pull_request_review_id": 2891662033,
      "id": 2123366909,
      "node_id": "PRRC_kwDOABII585-kAH9",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Since the attack only matters when peers can influence us, could we simply disable rate-limiting for all logs during IBD\r\n\r\n?",
      "created_at": "2025-06-03T10:14:05Z",
      "updated_at": "2025-06-03T10:14:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123366909",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123366909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123404055",
      "pull_request_review_id": 2891723668,
      "id": 2123404055,
      "node_id": "PRRC_kwDOABII585-kJMX",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can you be more specific :)?",
      "created_at": "2025-06-03T10:33:06Z",
      "updated_at": "2025-06-03T10:33:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123404055",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123404055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123418578",
      "pull_request_review_id": 2891749480,
      "id": 2123418578,
      "node_id": "PRRC_kwDOABII585-kMvS",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What do you mean by \"peers not being able to influence us during IBD\"?",
      "created_at": "2025-06-03T10:39:57Z",
      "updated_at": "2025-06-03T10:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123418578",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123418578"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123460031",
      "pull_request_review_id": 2891811142,
      "id": 2123460031,
      "node_id": "PRRC_kwDOABII585-kW2_",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I meant that during IBD we’re mostly replaying validated history, and my understanding is that rate-limiting is meant to protect logs caused by peer-supplied invalid data, not the deterministic IBD progress logs (e.g. `-debug=bench` or `-debug=leveldb`, which are *very* verbose (way over the 1MiB/h), but isn't related to a user-sent serialization error or similar cheap attack). \"Attacking\" a node that is still in the original IBD seems less severe to me than skipped logs. I also understand if you disagree with this and I would appreciate an explanation, I want to understand.\r\n\r\nWe can still get invalid data (thanks for triggering a clarification), but maybe the guard should added per `LogFlags` and we may want to blacklist instead of whitelisting.\r\nOr is this meant as a final catch-all for all the unknowns, e.g. maybe there's a trick to enable LevelDB logs externally and this should still guard against that?",
      "created_at": "2025-06-03T10:59:31Z",
      "updated_at": "2025-06-03T10:59:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123460031",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123460031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123834199",
      "pull_request_review_id": 2892400480,
      "id": 2123834199,
      "node_id": "PRRC_kwDOABII585-lyNX",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I believe that if somebody is using `-debug=bench` or `-debug=leveldb`, the fact that they are using a category should bypass the rate limit if `LogDebug` is used. I think the mitigation should be in place whether or not we're in IBD -- if we have any peers (inbound or outbound), we need to be cautious. This patch _is_ meant to be the \"final catch-all\" like you said to fully eliminate this class of attack.",
      "created_at": "2025-06-03T13:32:35Z",
      "updated_at": "2025-06-03T14:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123834199",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123834199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123954582",
      "pull_request_review_id": 2892579303,
      "id": 2123954582,
      "node_id": "PRRC_kwDOABII585-mPmW",
      "diff_hunk": "@@ -39,39 +62,41 @@ struct LogCategory {\n namespace BCLog {\n     using CategoryMask = uint64_t;\n     enum LogFlags : CategoryMask {\n-        NONE        = CategoryMask{0},\n-        NET         = (CategoryMask{1} <<  0),\n-        TOR         = (CategoryMask{1} <<  1),\n-        MEMPOOL     = (CategoryMask{1} <<  2),\n-        HTTP        = (CategoryMask{1} <<  3),\n-        BENCH       = (CategoryMask{1} <<  4),\n-        ZMQ         = (CategoryMask{1} <<  5),\n-        WALLETDB    = (CategoryMask{1} <<  6),\n-        RPC         = (CategoryMask{1} <<  7),\n-        ESTIMATEFEE = (CategoryMask{1} <<  8),\n-        ADDRMAN     = (CategoryMask{1} <<  9),\n-        SELECTCOINS = (CategoryMask{1} << 10),\n-        REINDEX     = (CategoryMask{1} << 11),\n-        CMPCTBLOCK  = (CategoryMask{1} << 12),\n-        RAND        = (CategoryMask{1} << 13),\n-        PRUNE       = (CategoryMask{1} << 14),\n-        PROXY       = (CategoryMask{1} << 15),\n-        MEMPOOLREJ  = (CategoryMask{1} << 16),\n-        LIBEVENT    = (CategoryMask{1} << 17),\n-        COINDB      = (CategoryMask{1} << 18),\n-        QT          = (CategoryMask{1} << 19),\n-        LEVELDB     = (CategoryMask{1} << 20),\n-        VALIDATION  = (CategoryMask{1} << 21),\n-        I2P         = (CategoryMask{1} << 22),\n-        IPC         = (CategoryMask{1} << 23),\n+        NONE                       = CategoryMask{0},\n+        NET                        = (CategoryMask{1} <<  0),\n+        TOR                        = (CategoryMask{1} <<  1),\n+        MEMPOOL                    = (CategoryMask{1} <<  2),\n+        HTTP                       = (CategoryMask{1} <<  3),\n+        BENCH                      = (CategoryMask{1} <<  4),\n+        ZMQ                        = (CategoryMask{1} <<  5),\n+        WALLETDB                   = (CategoryMask{1} <<  6),\n+        RPC                        = (CategoryMask{1} <<  7),\n+        ESTIMATEFEE                = (CategoryMask{1} <<  8),\n+        ADDRMAN                    = (CategoryMask{1} <<  9),\n+        SELECTCOINS                = (CategoryMask{1} << 10),\n+        REINDEX                    = (CategoryMask{1} << 11),\n+        CMPCTBLOCK                 = (CategoryMask{1} << 12),\n+        RAND                       = (CategoryMask{1} << 13),\n+        PRUNE                      = (CategoryMask{1} << 14),\n+        PROXY                      = (CategoryMask{1} << 15),\n+        MEMPOOLREJ                 = (CategoryMask{1} << 16),\n+        LIBEVENT                   = (CategoryMask{1} << 17),\n+        COINDB                     = (CategoryMask{1} << 18),\n+        QT                         = (CategoryMask{1} << 19),\n+        LEVELDB                    = (CategoryMask{1} << 20),\n+        VALIDATION                 = (CategoryMask{1} << 21),\n+        I2P                        = (CategoryMask{1} << 22),\n+        IPC                        = (CategoryMask{1} << 23),\n #ifdef DEBUG_LOCKCONTENTION\n-        LOCK        = (CategoryMask{1} << 24),\n+        LOCK                       = (CategoryMask{1} << 24),\n #endif\n-        BLOCKSTORAGE = (CategoryMask{1} << 25),\n-        TXRECONCILIATION = (CategoryMask{1} << 26),\n-        SCAN        = (CategoryMask{1} << 27),\n-        TXPACKAGES  = (CategoryMask{1} << 28),\n-        ALL         = ~NONE,\n+        BLOCKSTORAGE               = (CategoryMask{1} << 25),\n+        TXRECONCILIATION           = (CategoryMask{1} << 26),\n+        SCAN                       = (CategoryMask{1} << 27),\n+        TXPACKAGES                 = (CategoryMask{1} << 28),\n+        UNCONDITIONAL_RATE_LIMITED = (CategoryMask{1} << 29),\n+        UNCONDITIONAL_ALWAYS       = (CategoryMask{1} << 30),",
      "path": "src/logging.h",
      "position": null,
      "original_position": 121,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2123314635,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115570067, will change. Imo, having to determine whether we are in IBD or have zero peer connections is heading into too much complexity. This PR shouldn't cause IBD debug logs to be rate-limited, but if it does we should fix that.",
      "created_at": "2025-06-03T14:08:33Z",
      "updated_at": "2025-06-03T14:08:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123954582",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123954582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123959106",
      "pull_request_review_id": 2892587004,
      "id": 2123959106,
      "node_id": "PRRC_kwDOABII585-mQtC",
      "diff_hunk": "@@ -105,6 +168,11 @@ namespace BCLog {\n         size_t m_cur_buffer_memusage GUARDED_BY(m_cs){0};\n         size_t m_buffer_lines_discarded GUARDED_BY(m_cs){0};\n \n+        //! Fixed window rate limiters for each source location that has attempted to log something.\n+        std::unordered_map<std::source_location, LogRateLimiter, SourceLocationHasher, SourceLocationEqual> m_ratelimiters GUARDED_BY(m_cs);",
      "path": "src/logging.h",
      "position": null,
      "original_position": 188,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2123334010,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This never gets cleared. I haven't calculated the overhead of the map, but it could make sense to clear it periodically. Do you think it should just be on a timer or something? ",
      "created_at": "2025-06-03T14:09:40Z",
      "updated_at": "2025-06-03T14:11:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123959106",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123959106"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123974464",
      "pull_request_review_id": 2892612128,
      "id": 2123974464,
      "node_id": "PRRC_kwDOABII585-mUdA",
      "diff_hunk": "@@ -105,6 +168,11 @@ namespace BCLog {\n         size_t m_cur_buffer_memusage GUARDED_BY(m_cs){0};\n         size_t m_buffer_lines_discarded GUARDED_BY(m_cs){0};\n \n+        //! Fixed window rate limiters for each source location that has attempted to log something.\n+        std::unordered_map<std::source_location, LogRateLimiter, SourceLocationHasher, SourceLocationEqual> m_ratelimiters GUARDED_BY(m_cs);",
      "path": "src/logging.h",
      "position": null,
      "original_position": 188,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2123334010,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "note: this is part of my suggestion in https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115841360",
      "created_at": "2025-06-03T14:13:15Z",
      "updated_at": "2025-06-03T14:13:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123974464",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123974464"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124158984",
      "pull_request_review_id": 2892920996,
      "id": 2124158984,
      "node_id": "PRRC_kwDOABII585-nBgI",
      "diff_hunk": "@@ -105,6 +168,11 @@ namespace BCLog {\n         size_t m_cur_buffer_memusage GUARDED_BY(m_cs){0};\n         size_t m_buffer_lines_discarded GUARDED_BY(m_cs){0};\n \n+        //! Fixed window rate limiters for each source location that has attempted to log something.\n+        std::unordered_map<std::source_location, LogRateLimiter, SourceLocationHasher, SourceLocationEqual> m_ratelimiters GUARDED_BY(m_cs);",
      "path": "src/logging.h",
      "position": null,
      "original_position": 188,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2123334010,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@stickies-v, my mistake, I quickly wanted to make sure this doesn't affect my IBD benchmarks, didn't have time to review it in detail yet",
      "created_at": "2025-06-03T15:03:54Z",
      "updated_at": "2025-06-03T15:03:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2124158984",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124158984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124163227",
      "pull_request_review_id": 2892927941,
      "id": 2124163227,
      "node_id": "PRRC_kwDOABII585-nCib",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for clarifying",
      "created_at": "2025-06-03T15:04:59Z",
      "updated_at": "2025-06-03T15:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2124163227",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124163227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124802864",
      "pull_request_review_id": 2893917022,
      "id": 2124802864,
      "node_id": "PRRC_kwDOABII585-pesw",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115570067,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "While implementing this, I came to the conclusion that because macros don't have default arguments, skipping the rate limiting for `UpdateTipLog` means that we need to: 1) introduce a new macro for IBD specifically for `UpdateTipLog`, or 2) modify all call-sites of whichever macro `UpdateTipLog` uses to accept a `rate_limit` argument.\r\n\r\nI am partial to introducing a new macro for `UpdateTipLog` since it gets rid of the noise in the categories logic. I think that option 2) to modify all call-sites to pass in a rate-limiting argument is cumbersome when most callers don't need to be aware of rate limiting and it should instead be done under-the-hood (i.e. `UpdateTipLog` is the exception to the rule). I think using a boolean for rate-limiting vs no-rate-limiting is better than a uint64_t because then the proposed `SourceLocationCounter` needs to also keep track of this window-scaling value (i.e. multiple of `WINDOW_MAX_BYTES`).\r\n\r\nI might be wrong here, curious to hear thoughts.",
      "created_at": "2025-06-03T19:56:07Z",
      "updated_at": "2025-06-03T20:30:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2124802864",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124802864"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2126699985",
      "pull_request_review_id": 2896892503,
      "id": 2126699985,
      "node_id": "PRRC_kwDOABII585-wt3R",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115570067,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> 2) to modify all call-sites to pass in a rate-limiting argument is cumbersome\r\n\r\nAbsolutely agree that would not be an improvement.\r\n\r\n> I think using a boolean for rate-limiting vs no-rate-limiting is better than a uint64_t\r\n\r\nI think either will work fine, the uint64_t generalizes a bit nicer but we probably won't be needing the generalization in the future, so whichever ends up being the most elegant implementation now is what I think we should go for.\r\n\r\n> I am partial to introducing a new macro for `UpdateTipLog`\r\n\r\nThat seems sensible to me, yes.",
      "created_at": "2025-06-04T14:07:57Z",
      "updated_at": "2025-06-04T14:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2126699985",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2126699985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127117379",
      "pull_request_review_id": 2897579695,
      "id": 2127117379,
      "node_id": "PRRC_kwDOABII585-yTxD",
      "diff_hunk": "@@ -364,33 +368,71 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::FormatLogStrAndRateLimit(std::string& str, BCLog::LogFlags category, BCLog::Level level, const std::source_location& source_loc, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime)\n {\n     if (!str.ends_with('\\n')) str.push_back('\\n');\n \n     str.insert(0, GetLogPrefix(category, level));\n \n     if (m_log_sourcelocations) {\n-        str.insert(0, strprintf(\"[%s:%d] [%s] \", RemovePrefixView(source_file, \"./\"), source_line, logging_function));\n+        str.insert(0, strprintf(\"[%s:%d] [%s] \", RemovePrefixView(source_loc.file_name(), \"./\"), source_loc.line(), logging_function));\n     }\n \n     if (m_log_threadnames) {\n         str.insert(0, strprintf(\"[%s] \", (threadname.empty() ? \"unknown\" : threadname)));\n     }\n \n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    if (category == UNCONDITIONAL_RATE_LIMITED && m_ratelimit) {\n+        was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+        is_ratelimited = !m_ratelimiters[source_loc].Consume(str.size());\n+\n+        if (!is_ratelimited && was_ratelimited) {\n+            // Logging will restart for this source location.\n+            m_suppressed_locations.erase(source_loc);\n+\n+            uint64_t dropped_bytes = m_ratelimiters[source_loc].GetDroppedBytes();\n+\n+            str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\n+                                    \"(%d MiB) were dropped during the last hour.\\n\",\n+                                    source_loc.file_name(), source_loc.line(), logging_function,\n+                                    dropped_bytes / (1024 * 1024)));\n+        } else if (is_ratelimited && !was_ratelimited) {",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 97,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115869345,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I want to address this because I think it would be useful to catch in debug builds via `Assume` but also don't want to break tests. Do you think this should be addressed?",
      "created_at": "2025-06-04T17:39:39Z",
      "updated_at": "2025-06-04T17:58:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2127117379",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127117379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 404,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127118833",
      "pull_request_review_id": 2897579695,
      "id": 2127118833,
      "node_id": "PRRC_kwDOABII585-yUHx",
      "diff_hunk": "@@ -81,16 +106,54 @@ namespace BCLog {\n         Error,\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n+    static constexpr LogFlags DEFAULT_LOG_FLAGS{UNCONDITIONAL_RATE_LIMITED | UNCONDITIONAL_ALWAYS};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRateLimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::time_point<NodeClock> m_last_reset;",
      "path": "src/logging.h",
      "position": 89,
      "original_position": 138,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115841360,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Implemented this change, lmk what you think. I think this encapsulates code a bit better, but it probably could still be improved.",
      "created_at": "2025-06-04T17:40:40Z",
      "updated_at": "2025-06-04T17:58:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2127118833",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127118833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 144,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127126139",
      "pull_request_review_id": 2897579695,
      "id": 2127126139,
      "node_id": "PRRC_kwDOABII585-yV57",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115570067,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've changed this so that the logging macros eventually pass a `should_ratelimit` bool to `LogPrintStr`. Instead of introducing a new macro for `UpdateTipLog`, it now uses `LogPrintLevel` which can bypass the rate-limiting. I'm not sure how I feel about using `LogPrintLevel` as I don't want to encourage more usage of it in the codebase as it could be a potential footgun.",
      "created_at": "2025-06-04T17:45:17Z",
      "updated_at": "2025-06-04T17:58:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2127126139",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127126139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127131414",
      "pull_request_review_id": 2897579695,
      "id": 2127131414,
      "node_id": "PRRC_kwDOABII585-yXMW",
      "diff_hunk": "@@ -364,33 +368,71 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::FormatLogStrAndRateLimit(std::string& str, BCLog::LogFlags category, BCLog::Level level, const std::source_location& source_loc, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime)",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115826232,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've carved this out into a `NeedsRateLimiting` function and have kept the logic of `FormatLogStrInPlace` mostly unchanged. The reason I had the original change is because `FormatLogStrInPlace` inserts a timestamp at the beginning of `str` and I wanted the prepended rate-limiting logs to occur after the timestamp. With the new change, the rate-limiting logs are first in `str` followed by the time-stamp. I think now the logs look a little wonky, but I like the code change better. I could also extract the time-stamp prepend logic so it's called after `NeedsRateLimiting`.",
      "created_at": "2025-06-04T17:48:36Z",
      "updated_at": "2025-06-04T18:00:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2127131414",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127131414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127134262",
      "pull_request_review_id": 2897579695,
      "id": 2127134262,
      "node_id": "PRRC_kwDOABII585-yX42",
      "diff_hunk": "@@ -39,39 +62,41 @@ struct LogCategory {\n namespace BCLog {\n     using CategoryMask = uint64_t;\n     enum LogFlags : CategoryMask {\n-        NONE        = CategoryMask{0},\n-        NET         = (CategoryMask{1} <<  0),\n-        TOR         = (CategoryMask{1} <<  1),\n-        MEMPOOL     = (CategoryMask{1} <<  2),\n-        HTTP        = (CategoryMask{1} <<  3),\n-        BENCH       = (CategoryMask{1} <<  4),\n-        ZMQ         = (CategoryMask{1} <<  5),\n-        WALLETDB    = (CategoryMask{1} <<  6),\n-        RPC         = (CategoryMask{1} <<  7),\n-        ESTIMATEFEE = (CategoryMask{1} <<  8),\n-        ADDRMAN     = (CategoryMask{1} <<  9),\n-        SELECTCOINS = (CategoryMask{1} << 10),\n-        REINDEX     = (CategoryMask{1} << 11),\n-        CMPCTBLOCK  = (CategoryMask{1} << 12),\n-        RAND        = (CategoryMask{1} << 13),\n-        PRUNE       = (CategoryMask{1} << 14),\n-        PROXY       = (CategoryMask{1} << 15),\n-        MEMPOOLREJ  = (CategoryMask{1} << 16),\n-        LIBEVENT    = (CategoryMask{1} << 17),\n-        COINDB      = (CategoryMask{1} << 18),\n-        QT          = (CategoryMask{1} << 19),\n-        LEVELDB     = (CategoryMask{1} << 20),\n-        VALIDATION  = (CategoryMask{1} << 21),\n-        I2P         = (CategoryMask{1} << 22),\n-        IPC         = (CategoryMask{1} << 23),\n+        NONE                       = CategoryMask{0},\n+        NET                        = (CategoryMask{1} <<  0),\n+        TOR                        = (CategoryMask{1} <<  1),\n+        MEMPOOL                    = (CategoryMask{1} <<  2),\n+        HTTP                       = (CategoryMask{1} <<  3),\n+        BENCH                      = (CategoryMask{1} <<  4),\n+        ZMQ                        = (CategoryMask{1} <<  5),\n+        WALLETDB                   = (CategoryMask{1} <<  6),\n+        RPC                        = (CategoryMask{1} <<  7),\n+        ESTIMATEFEE                = (CategoryMask{1} <<  8),\n+        ADDRMAN                    = (CategoryMask{1} <<  9),\n+        SELECTCOINS                = (CategoryMask{1} << 10),\n+        REINDEX                    = (CategoryMask{1} << 11),\n+        CMPCTBLOCK                 = (CategoryMask{1} << 12),\n+        RAND                       = (CategoryMask{1} << 13),\n+        PRUNE                      = (CategoryMask{1} << 14),\n+        PROXY                      = (CategoryMask{1} << 15),\n+        MEMPOOLREJ                 = (CategoryMask{1} << 16),\n+        LIBEVENT                   = (CategoryMask{1} << 17),\n+        COINDB                     = (CategoryMask{1} << 18),\n+        QT                         = (CategoryMask{1} << 19),\n+        LEVELDB                    = (CategoryMask{1} << 20),\n+        VALIDATION                 = (CategoryMask{1} << 21),\n+        I2P                        = (CategoryMask{1} << 22),\n+        IPC                        = (CategoryMask{1} << 23),\n #ifdef DEBUG_LOCKCONTENTION\n-        LOCK        = (CategoryMask{1} << 24),\n+        LOCK                       = (CategoryMask{1} << 24),\n #endif\n-        BLOCKSTORAGE = (CategoryMask{1} << 25),\n-        TXRECONCILIATION = (CategoryMask{1} << 26),\n-        SCAN        = (CategoryMask{1} << 27),\n-        TXPACKAGES  = (CategoryMask{1} << 28),\n-        ALL         = ~NONE,\n+        BLOCKSTORAGE               = (CategoryMask{1} << 25),\n+        TXRECONCILIATION           = (CategoryMask{1} << 26),\n+        SCAN                       = (CategoryMask{1} << 27),\n+        TXPACKAGES                 = (CategoryMask{1} << 28),\n+        UNCONDITIONAL_RATE_LIMITED = (CategoryMask{1} << 29),\n+        UNCONDITIONAL_ALWAYS       = (CategoryMask{1} << 30),",
      "path": "src/logging.h",
      "position": null,
      "original_position": 121,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2123314635,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolving as I've removed categories.",
      "created_at": "2025-06-04T17:50:27Z",
      "updated_at": "2025-06-04T17:58:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2127134262",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127134262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127135142",
      "pull_request_review_id": 2897579695,
      "id": 2127135142,
      "node_id": "PRRC_kwDOABII585-yYGm",
      "diff_hunk": "@@ -105,6 +168,11 @@ namespace BCLog {\n         size_t m_cur_buffer_memusage GUARDED_BY(m_cs){0};\n         size_t m_buffer_lines_discarded GUARDED_BY(m_cs){0};\n \n+        //! Fixed window rate limiters for each source location that has attempted to log something.\n+        std::unordered_map<std::source_location, LogRateLimiter, SourceLocationHasher, SourceLocationEqual> m_ratelimiters GUARDED_BY(m_cs);",
      "path": "src/logging.h",
      "position": null,
      "original_position": 188,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2123334010,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Both the map and set are now cleared if `LogRateLimiter` determines that the logging window should be reset.",
      "created_at": "2025-06-04T17:51:01Z",
      "updated_at": "2025-06-04T17:58:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2127135142",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127135142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128279631",
      "pull_request_review_id": 2899378420,
      "id": 2128279631,
      "node_id": "PRRC_kwDOABII585-2vhP",
      "diff_hunk": "@@ -31,6 +34,24 @@ extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n+struct SourceLocationEqual {\n+    bool operator()(const std::source_location& lhs, const std::source_location& rhs) const noexcept\n+    {\n+        return strcmp(lhs.file_name(), rhs.file_name()) == 0 && lhs.line() == rhs.line();",
      "path": "src/logging.h",
      "position": null,
      "original_position": 27,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "bec74626867abefbfc55da5aaaf8a0c030663f3a",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in bec74626867abefbfc55da5aaaf8a0c030663f3a:\r\n\r\nnit: comparing ints is more performant than comparing strings, and is more differentiating than the filename, so would do the line comparison first\r\n\r\n```cpp\r\n        return lhs.line() == rhs.line() && strcmp(lhs.file_name(), rhs.file_name()) == 0 ;\r\n```",
      "created_at": "2025-06-05T08:38:02Z",
      "updated_at": "2025-06-05T09:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128279631",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128279631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128389554",
      "pull_request_review_id": 2899378420,
      "id": 2128389554,
      "node_id": "PRRC_kwDOABII585-3KWy",
      "diff_hunk": "@@ -364,17 +373,63 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::NeedsRateLimiting(bool should_ratelimit, const std::source_location& source_loc, std::string& str, std::string_view logging_function)",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`NeedsRateLimiting` as well as the underlying maps imo belong to `LogRateLimiter` rather than `Logger`. I also don't think `should_ratelimit` is a meaningful parameter, the function should just not be called if that's `false`. I also don't understand why `logging_function` is a separate parameter - can't we just get that from `source_loc`?\r\n\r\nSuggested diff that incorporates all of those suggestions:\r\n\r\n<details>\r\n<summary>git diff on 5535df69a2</summary>\r\n\r\n```diff\r\ndiff --git a/src/logging.cpp b/src/logging.cpp\r\nindex 1e20c10368..c4ae881ffd 100644\r\n--- a/src/logging.cpp\r\n+++ b/src/logging.cpp\r\n@@ -5,6 +5,7 @@\r\n \r\n #include <logging.h>\r\n #include <memusage.h>\r\n+#include <sync.h>\r\n #include <util/check.h>\r\n #include <util/fs.h>\r\n #include <util/string.h>\r\n@@ -376,41 +377,40 @@ static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\r\n     return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\r\n }\r\n \r\n-bool BCLog::Logger::NeedsRateLimiting(bool should_ratelimit, const std::source_location& source_loc, std::string& str, std::string_view logging_function)\r\n+bool BCLog::LogRateLimiter::NeedsRateLimiting(const std::source_location& source_loc, std::string& str)\r\n {\r\n+    StdLockGuard scoped_lock(m_cs);\r\n     // Whether or not logging to disk was/is ratelimited for this source location.\r\n     bool was_ratelimited{false};\r\n     bool is_ratelimited{false};\r\n \r\n-    if (m_ratelimit && should_ratelimit) {\r\n-        // Check to see if we were rate limited before calling ResetWindow.\r\n-        was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\r\n+    // Check to see if we were rate limited before calling ResetWindow.\r\n+    was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\r\n \r\n-        // If the m_limiter window has elapsed, then we need to clear the unordered map and set.\r\n-        if (m_limiter.ResetWindow()) {\r\n-            m_source_locations.clear();\r\n-            m_suppressed_locations.clear();\r\n-        }\r\n+    // If the m_limiter window has elapsed, then we need to clear the unordered map and set.\r\n+    if (ResetWindow()) {\r\n+        m_source_locations.clear();\r\n+        m_suppressed_locations.clear();\r\n+    }\r\n \r\n-        is_ratelimited = !m_source_locations[source_loc].Consume(str.size());\r\n+    is_ratelimited = !m_source_locations[source_loc].Consume(str.size());\r\n \r\n-        if (!is_ratelimited && was_ratelimited) {\r\n-            uint64_t dropped_bytes = m_source_locations[source_loc].GetDroppedBytes();\r\n+    if (!is_ratelimited && was_ratelimited) {\r\n+        uint64_t dropped_bytes{m_source_locations[source_loc].GetDroppedBytes()};\r\n \r\n-            str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\r\n-                                    \"(%d MiB) were dropped during the last hour.\\n\",\r\n-                                    source_loc.file_name(), source_loc.line(), logging_function,\r\n-                                    dropped_bytes / (1024 * 1024)));\r\n-        } else if (is_ratelimited && !was_ratelimited) {\r\n-            // Logging from this source location will be suppressed until the current window resets.\r\n-            m_suppressed_locations.insert(source_loc);\r\n+        str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\r\n+                                \"(%d MiB) were dropped during the last hour.\\n\",\r\n+                                source_loc.file_name(), source_loc.line(), source_loc.function_name(),\r\n+                                dropped_bytes / (1024 * 1024)));\r\n+    } else if (is_ratelimited && !was_ratelimited) {\r\n+        // Logging from this source location will be suppressed until the current window resets.\r\n+        m_suppressed_locations.insert(source_loc);\r\n \r\n-            str.insert(0, strprintf(\"Excessive logging detected from %s:%d (%s): >%d MiB logged during the last hour.\"\r\n-                                    \"Suppressing logging to disk from this source location for up to one hour. \"\r\n-                                    \"Console logging unaffected. Last log entry.\",\r\n-                                    source_loc.file_name(), source_loc.line(), logging_function,\r\n-                                    LogRateLimiter::WINDOW_MAX_BYTES / (1024 * 1024)));\r\n-        }\r\n+        str.insert(0, strprintf(\"Excessive logging detected from %s:%d (%s): >%d MiB logged during the last hour.\"\r\n+                                \"Suppressing logging to disk from this source location for up to one hour. \"\r\n+                                \"Console logging unaffected. Last log entry.\",\r\n+                                source_loc.file_name(), source_loc.line(), source_loc.function_name(),\r\n+                                LogRateLimiter::WINDOW_MAX_BYTES / (1024 * 1024)));\r\n     }\r\n \r\n     // To avoid confusion caused by dropped log messages when debugging an issue,\r\n@@ -479,7 +479,7 @@ void BCLog::Logger::LogPrintStr_(std::string_view str, std::string_view logging_\r\n     }\r\n \r\n     FormatLogStrInPlace(str_prefixed, category, level, source_loc, logging_function, util::ThreadGetInternalName(), SystemClock::now(), GetMockTime());\r\n-    bool ratelimit = NeedsRateLimiting(should_ratelimit, source_loc, str_prefixed, logging_function);\r\n+    bool ratelimit = m_ratelimit && should_ratelimit && m_limiter.NeedsRateLimiting(source_loc, str_prefixed);\r\n \r\n     if (m_print_to_console) {\r\n         // print to console\r\ndiff --git a/src/logging.h b/src/logging.h\r\nindex b94b9cb495..f9441f6913 100644\r\n--- a/src/logging.h\r\n+++ b/src/logging.h\r\n@@ -48,7 +48,7 @@ struct SourceLocationHasher {\r\n     {\r\n         // Use CSipHasher(0, 0) as a simple way to get uniform distribution.\r\n         return static_cast<size_t>(CSipHasher(0, 0)\r\n-                                       .Write(std::hash<std::string>{}(s.file_name()))\r\n+                                       .Write(std::hash<std::string_view>{}(s.file_name()))\r\n                                        .Write(std::hash<int>{}(s.line()))\r\n                                        .Finalize());\r\n     }\r\n@@ -106,13 +106,18 @@ namespace BCLog {\r\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\r\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\r\n \r\n+    class SourceLocationCounter;\r\n     //! Fixed window rate limiter for logging.\r\n     class LogRateLimiter\r\n     {\r\n     private:\r\n         //! Timestamp of the last window reset.\r\n         std::chrono::time_point<NodeClock> m_last_reset;\r\n-\r\n+        //! Counters for each source location that has attempted to log something.\r\n+        std::unordered_map<std::source_location, SourceLocationCounter, SourceLocationHasher, SourceLocationEqual> m_source_locations GUARDED_BY(m_cs);\r\n+        //! Set of source file locations that were dropped on the last log attempt.\r\n+        std::unordered_set<std::source_location, SourceLocationHasher, SourceLocationEqual> m_suppressed_locations GUARDED_BY(m_cs);\r\n+        mutable StdMutex m_cs; // TODO: does LogRateLimiter need to use Logger:m_cs instead? Didn't investigate.\r\n     public:\r\n         //! Interval after which the window is reset.\r\n         static constexpr std::chrono::hours WINDOW_SIZE{1};\r\n@@ -120,6 +125,8 @@ namespace BCLog {\r\n         static constexpr uint64_t WINDOW_MAX_BYTES{1024 * 1024};\r\n         //! Attempts to reset the window if the window interval has passed. Returns true if the window was reset.\r\n         bool ResetWindow();\r\n+        //! Check if we need to rate limit a source_location.\r\n+        bool NeedsRateLimiting(const std::source_location& source_loc, std::string& str) EXCLUSIVE_LOCKS_REQUIRED(!m_cs);\r\n \r\n         LogRateLimiter() : m_last_reset{NodeClock::now()} {}\r\n \r\n@@ -176,10 +183,6 @@ namespace BCLog {\r\n \r\n         //! Keeps track of the last time we've reset the logging window.\r\n         LogRateLimiter m_limiter GUARDED_BY(m_cs);\r\n-        //! Counters for each source location that has attempted to log something.\r\n-        std::unordered_map<std::source_location, SourceLocationCounter, SourceLocationHasher, SourceLocationEqual> m_source_locations GUARDED_BY(m_cs);\r\n-        //! Set of source file locations that were dropped on the last log attempt.\r\n-        std::unordered_set<std::source_location, SourceLocationHasher, SourceLocationEqual> m_suppressed_locations GUARDED_BY(m_cs);\r\n \r\n         //! Category-specific log level. Overrides `m_log_level`.\r\n         std::unordered_map<LogFlags, Level> m_category_log_levels GUARDED_BY(m_cs);\r\n@@ -193,9 +196,6 @@ namespace BCLog {\r\n \r\n         void FormatLogStrInPlace(std::string& str, LogFlags category, Level level, const std::source_location& source_loc, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const;\r\n \r\n-        /** Check if we need to rate limit a source_location. */\r\n-        bool NeedsRateLimiting(bool should_ratelimit, const std::source_location& source_loc, std::string& str, std::string_view logging_function) EXCLUSIVE_LOCKS_REQUIRED(m_cs);\r\n-\r\n         std::string LogTimestampStr(SystemClock::time_point now, std::chrono::seconds mocktime) const;\r\n \r\n         /** Slots that connect to the print signal */\r\n\r\n```\r\n</details>\r\n\r\nNote: I didn't think about thread safety much yet, so I just threw in another `m_cs` to make it compile and pass tests, might be wrong/unsafe as-is.",
      "created_at": "2025-06-05T09:27:02Z",
      "updated_at": "2025-06-05T09:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128389554",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128389554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 379,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128390673",
      "pull_request_review_id": 2899378420,
      "id": 2128390673,
      "node_id": "PRRC_kwDOABII585-3KoR",
      "diff_hunk": "@@ -27,10 +31,29 @@ static const bool DEFAULT_LOGTIMESTAMPS = true;\n static const bool DEFAULT_LOGTHREADNAMES = false;\n static const bool DEFAULT_LOGSOURCELOCATIONS = false;\n static constexpr bool DEFAULT_LOGLEVELALWAYS = false;\n+static constexpr bool DEFAULT_RATELIMITLOGGING{true};\n extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n+struct SourceLocationEqual {\n+    bool operator()(const std::source_location& lhs, const std::source_location& rhs) const noexcept\n+    {\n+        return strcmp(lhs.file_name(), rhs.file_name()) == 0 && lhs.line() == rhs.line();\n+    }\n+};\n+\n+struct SourceLocationHasher {\n+    size_t operator()(const std::source_location& s) const noexcept\n+    {\n+        // Use CSipHasher(0, 0) as a simple way to get uniform distribution.\n+        return static_cast<size_t>(CSipHasher(0, 0)\n+                                       .Write(std::hash<std::string>{}(s.file_name()))",
      "path": "src/logging.h",
      "position": null,
      "original_position": 44,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: string_view to avoid unnecessary string construction\r\n\r\n```suggestion\r\n                                       .Write(std::hash<std::string_view>{}(s.file_name()))\r\n```",
      "created_at": "2025-06-05T09:27:33Z",
      "updated_at": "2025-06-05T09:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128390673",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128390673"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128403151",
      "pull_request_review_id": 2899378420,
      "id": 2128403151,
      "node_id": "PRRC_kwDOABII585-3NrP",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It seems like this startup option is still in the latest force-push (5914a2ee6c915585b7213217047ad1644b873376), but from this discussion it doesn't seem like there are good arguments to keep it? I'm not sure if @l0rinc still needs it for IBD bench reasons, but imo that's way too much of a niche to keep it as a startup option?",
      "created_at": "2025-06-05T09:33:59Z",
      "updated_at": "2025-06-05T09:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128403151",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128403151"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128424406",
      "pull_request_review_id": 2899378420,
      "id": 2128424406,
      "node_id": "PRRC_kwDOABII585-3S3W",
      "diff_hunk": "@@ -269,11 +353,14 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n // evaluating arguments when logging for the category is not enabled.\n \n // Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+// Note that conditional logging is performed WITHOUT rate limiting. Users specifying\n+// -debug are assumed to be developers or power users who are aware that -debug may cause\n+// excessive disk usage due to logging.\n+#define LogPrintLevel(category, level, ...)                                           \\",
      "path": "src/logging.h",
      "position": null,
      "original_position": 224,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The previous docstring is misleading, `LogPrintLevel()` can also be used for unconditional logging when a `Level::Info` is passed as level, as is e.g. done in `mapport.cpp` and in a few other places. I don't think this is a robust way of deciding on rate limiting.\r\n\r\nI think I would prefer either:\r\n1. using `LogPrintLevel_` directly in `UpdateTipLog()`, with a comment on why we're using a private function and not enabling rate limiting here. A `LogInfoAlways` macro could be an alternative.\r\n2. refactoring `logging.h` replace a lot of the current macros to become regular functions using `std::source_location`, allowing easier overloads for ratelimiting. This probably makes more sense in a separate pull, so imo going with 1. in this PR and then improving with 2. separately would be nice?",
      "created_at": "2025-06-05T09:44:09Z",
      "updated_at": "2025-06-05T09:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128424406",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128424406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 358,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128425813",
      "pull_request_review_id": 2899378420,
      "id": 2128425813,
      "node_id": "PRRC_kwDOABII585-3TNV",
      "diff_hunk": "@@ -81,16 +106,54 @@ namespace BCLog {\n         Error,\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n+    static constexpr LogFlags DEFAULT_LOG_FLAGS{UNCONDITIONAL_RATE_LIMITED | UNCONDITIONAL_ALWAYS};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRateLimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::time_point<NodeClock> m_last_reset;",
      "path": "src/logging.h",
      "position": 89,
      "original_position": 138,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115841360,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've left some comments for further encapsulation, but yeah I think this a step in the right direction, thanks!",
      "created_at": "2025-06-05T09:44:43Z",
      "updated_at": "2025-06-05T09:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128425813",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128425813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 144,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128488386",
      "pull_request_review_id": 2899720611,
      "id": 2128488386,
      "node_id": "PRRC_kwDOABII585-3ifC",
      "diff_hunk": "@@ -364,17 +373,63 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::NeedsRateLimiting(bool should_ratelimit, const std::source_location& source_loc, std::string& str, std::string_view logging_function)\n+{\n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    if (m_ratelimit && should_ratelimit) {\n+        // Check to see if we were rate limited before calling ResetWindow.\n+        was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+\n+        // If the m_limiter window has elapsed, then we need to clear the unordered map and set.\n+        if (m_limiter.ResetWindow()) {\n+            m_source_locations.clear();\n+            m_suppressed_locations.clear();\n+        }",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 61,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This logic should be encapsulated in `ResetWindow` imo, so probably this statement could just be:\r\n\r\n```suggestion\r\n        m_limiter.MaybeResetWindow();\r\n```",
      "created_at": "2025-06-05T10:15:01Z",
      "updated_at": "2025-06-05T10:15:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128488386",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128488386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": 390,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 393,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130169669",
      "pull_request_review_id": 2902115854,
      "id": 2130169669,
      "node_id": "PRRC_kwDOABII585-989F",
      "diff_hunk": "@@ -269,11 +353,14 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n // evaluating arguments when logging for the category is not enabled.\n \n // Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+// Note that conditional logging is performed WITHOUT rate limiting. Users specifying\n+// -debug are assumed to be developers or power users who are aware that -debug may cause\n+// excessive disk usage due to logging.\n+#define LogPrintLevel(category, level, ...)                                           \\",
      "path": "src/logging.h",
      "position": null,
      "original_position": 224,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": 2128424406,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've changed the misleading docstring and I've implemented suggestion 1. and I will pick up suggestion 2. as well. I think this might conflict a bit with the work in https://github.com/bitcoin/bitcoin/pull/29256.",
      "created_at": "2025-06-05T20:10:42Z",
      "updated_at": "2025-06-05T20:10:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2130169669",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130169669"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 358,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130171764",
      "pull_request_review_id": 2902118687,
      "id": 2130171764,
      "node_id": "PRRC_kwDOABII585-99d0",
      "diff_hunk": "@@ -364,17 +373,63 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::NeedsRateLimiting(bool should_ratelimit, const std::source_location& source_loc, std::string& str, std::string_view logging_function)",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": 2128389554,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've removed `logging_function` and `__func__` usage. I think it makes the function names a little longer in the map, but I'm ok with it. I think `m_cs` is unnecessary if `m_ratelimiter` is guarded by `m_cs`?",
      "created_at": "2025-06-05T20:11:24Z",
      "updated_at": "2025-06-05T20:11:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2130171764",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2130171764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 379,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131702030",
      "pull_request_review_id": 2904095923,
      "id": 2131702030,
      "node_id": "PRRC_kwDOABII585_DzEO",
      "diff_hunk": "@@ -82,15 +104,68 @@ namespace BCLog {\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n+    constexpr uint64_t WINDOW_MAX_BYTES{1024 * 1024}; // maximum number of bytes that can be logged within one window",
      "path": "src/logging.h",
      "position": null,
      "original_position": 52,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: moving it into the `BCLog` namespace seems fine, but `BCLog::WINDOW_MAX_BYTES` is not a very helpful name. `RATELIMIT_MAX_BYTES` probably better?",
      "created_at": "2025-06-06T07:53:05Z",
      "updated_at": "2025-06-06T10:07:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2131702030",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131702030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131720267",
      "pull_request_review_id": 2904095923,
      "id": 2131720267,
      "node_id": "PRRC_kwDOABII585_D3hL",
      "diff_hunk": "@@ -82,15 +104,68 @@ namespace BCLog {\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n+    constexpr uint64_t WINDOW_MAX_BYTES{1024 * 1024}; // maximum number of bytes that can be logged within one window\n+\n+    //! Keeps track of an individual source location and how many available bytes are left for logging from it.\n+    class SourceLocationCounter\n+    {\n+    private:\n+        //! Remaining bytes in the current window interval.\n+        uint64_t m_available_bytes{WINDOW_MAX_BYTES};\n+        //! Number of bytes that were not consumed within the current window.\n+        uint64_t m_dropped_bytes{0};\n+\n+    public:\n+        //! Consume bytes from the window if enough bytes are available.\n+        //!\n+        //! Returns whether or not enough bytes were available.\n+        bool Consume(uint64_t bytes);\n+\n+        uint64_t GetAvailableBytes() const\n+        {\n+            return m_available_bytes;\n+        }\n+\n+        uint64_t GetDroppedBytes() const\n+        {\n+            return m_dropped_bytes;\n+        }\n+    };\n+\n+    //! Fixed window rate limiter for logging.\n+    class LogRateLimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::time_point<NodeClock> m_last_reset;\n+\n+        //! Counters for each source location that has attempted to log something.\n+        std::unordered_map<std::source_location, SourceLocationCounter, SourceLocationHasher, SourceLocationEqual> m_source_locations;\n+        //! Set of source file locations that were dropped on the last log attempt.\n+        std::unordered_set<std::source_location, SourceLocationHasher, SourceLocationEqual> m_suppressed_locations;\n+\n+        //! Attempts to reset the logging window if the window interval has passed. This will clear m_source_locations and m_suppressed_locations if a reset occurs.",
      "path": "src/logging.h",
      "position": null,
      "original_position": 92,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: line length\r\n\r\n```suggestion\r\n        //! Attempts to reset the logging window if the window interval has passed. This will clear\r\n        //! m_source_locations and m_suppressed_locations if a reset occurs.\r\n```",
      "created_at": "2025-06-06T08:04:58Z",
      "updated_at": "2025-06-06T10:07:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2131720267",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131720267"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 147,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131722722",
      "pull_request_review_id": 2904095923,
      "id": 2131722722,
      "node_id": "PRRC_kwDOABII585_D4Hi",
      "diff_hunk": "@@ -82,15 +104,68 @@ namespace BCLog {\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n+    constexpr uint64_t WINDOW_MAX_BYTES{1024 * 1024}; // maximum number of bytes that can be logged within one window\n+\n+    //! Keeps track of an individual source location and how many available bytes are left for logging from it.\n+    class SourceLocationCounter\n+    {\n+    private:\n+        //! Remaining bytes in the current window interval.\n+        uint64_t m_available_bytes{WINDOW_MAX_BYTES};\n+        //! Number of bytes that were not consumed within the current window.\n+        uint64_t m_dropped_bytes{0};\n+\n+    public:\n+        //! Consume bytes from the window if enough bytes are available.\n+        //!\n+        //! Returns whether or not enough bytes were available.\n+        bool Consume(uint64_t bytes);\n+\n+        uint64_t GetAvailableBytes() const\n+        {\n+            return m_available_bytes;\n+        }\n+\n+        uint64_t GetDroppedBytes() const\n+        {\n+            return m_dropped_bytes;\n+        }\n+    };\n+\n+    //! Fixed window rate limiter for logging.\n+    class LogRateLimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::time_point<NodeClock> m_last_reset;\n+\n+        //! Counters for each source location that has attempted to log something.\n+        std::unordered_map<std::source_location, SourceLocationCounter, SourceLocationHasher, SourceLocationEqual> m_source_locations;\n+        //! Set of source file locations that were dropped on the last log attempt.\n+        std::unordered_set<std::source_location, SourceLocationHasher, SourceLocationEqual> m_suppressed_locations;\n+\n+        //! Attempts to reset the logging window if the window interval has passed. This will clear m_source_locations and m_suppressed_locations if a reset occurs.\n+        void MaybeResetWindow();\n+\n+    public:\n+        //! Interval after which the window is reset.\n+        static constexpr std::chrono::hours WINDOW_SIZE{1};\n+        //! Check if we need to rate limit a source location.",
      "path": "src/logging.h",
      "position": null,
      "original_position": 98,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Docstring could be beefed up a bit to highlight that this is not a pure check but has side effects. E.g.:\r\n\r\n```\r\n        //! Consumes `source_loc`'s available bytes corresponding to the size of the (formatted)\r\n        //! `str` and returns true if it exceeds the allowance in the current time window.",
      "created_at": "2025-06-06T08:06:25Z",
      "updated_at": "2025-06-06T10:07:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2131722722",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131722722"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 153,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131856132",
      "pull_request_review_id": 2904095923,
      "id": 2131856132,
      "node_id": "PRRC_kwDOABII585_EYsE",
      "diff_hunk": "@@ -364,17 +373,63 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::NeedsRateLimiting(bool should_ratelimit, const std::source_location& source_loc, std::string& str, std::string_view logging_function)",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": 2128389554,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I think it makes the function names a little longer in the map, but I'm ok with it.\r\n\r\nOh interesting, I didn't realize that. On my machine, `__func__` contains just the function name, whereas `function_name()` returns the entire signature, e.g.:\r\n\r\n```\r\n__func__: AppInitParameterInteraction\r\nsource_location: bool AppInitParameterInteraction(const ArgsManager &)\r\n```\r\n\r\nI don't see how this affects any maps, though? I think it just affects the messages when we stop and restart logging?\r\n\r\n> I think m_cs is unnecessary if m_ratelimiter is guarded by m_cs?\r\n\r\nYeah nice, that seems correct. Probably good to add \"This class is not thread-safe.\" to the `LogRateLimiter` docstring, given that it is likely to be used in a multithreaded context. ",
      "created_at": "2025-06-06T09:24:57Z",
      "updated_at": "2025-06-06T10:07:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2131856132",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131856132"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 379,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131861828",
      "pull_request_review_id": 2904095923,
      "id": 2131861828,
      "node_id": "PRRC_kwDOABII585_EaFE",
      "diff_hunk": "@@ -364,17 +373,58 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+}\n+\n+bool BCLog::LogRateLimiter::NeedsRateLimiting(const std::source_location& source_loc, std::string& str)\n+{\n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    // Check to see if we were rate limited before calling MaybeResetWindow.\n+    was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+\n+    // If the window has elapsed, then we need to clear the unordered map and set.\n+    MaybeResetWindow();\n+\n+    is_ratelimited = !m_source_locations[source_loc].Consume(str.size());\n+\n+    if (!is_ratelimited && was_ratelimited) {\n+        uint64_t dropped_bytes = m_source_locations[source_loc].GetDroppedBytes();\n+\n+        str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\n+                                \"(%d MiB) were dropped during the last hour.\\n\",\n+                                source_loc.file_name(), source_loc.line(), source_loc.function_name(),\n+                                dropped_bytes / (1024 * 1024)));",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This will now only be shown for a single source location per time window. I think this should be moved to `MaybeResetWindow()`, where we iterate over `m_suppressed_locations` before clearing it?",
      "created_at": "2025-06-06T09:28:33Z",
      "updated_at": "2025-06-06T10:07:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2131861828",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131861828"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": 396,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131883418",
      "pull_request_review_id": 2904095923,
      "id": 2131883418,
      "node_id": "PRRC_kwDOABII585_EfWa",
      "diff_hunk": "@@ -364,17 +373,58 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+}\n+\n+bool BCLog::LogRateLimiter::NeedsRateLimiting(const std::source_location& source_loc, std::string& str)\n+{\n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    // Check to see if we were rate limited before calling MaybeResetWindow.\n+    was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+\n+    // If the window has elapsed, then we need to clear the unordered map and set.\n+    MaybeResetWindow();\n+\n+    is_ratelimited = !m_source_locations[source_loc].Consume(str.size());\n+\n+    if (!is_ratelimited && was_ratelimited) {\n+        uint64_t dropped_bytes = m_source_locations[source_loc].GetDroppedBytes();\n+\n+        str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\n+                                \"(%d MiB) were dropped during the last hour.\\n\",\n+                                source_loc.file_name(), source_loc.line(), source_loc.function_name(),\n+                                dropped_bytes / (1024 * 1024)));\n+    } else if (is_ratelimited && !was_ratelimited) {\n+        // Logging from this source location will be suppressed until the current window resets.\n+        m_suppressed_locations.insert(source_loc);\n+\n+        str.insert(0, strprintf(\"Excessive logging detected from %s:%d (%s): >%d MiB logged during the last hour.\"\n+                                \"Suppressing logging to disk from this source location for up to one hour. \"\n+                                \"Console logging unaffected. Last log entry.\",\n+                                source_loc.file_name(), source_loc.line(), source_loc.function_name(),\n+                                WINDOW_MAX_BYTES / (1024 * 1024)));\n+    }\n+\n+    // To avoid confusion caused by dropped log messages when debugging an issue,\n+    // we prefix log lines with \"[*]\" when there are any suppressed source locations.\n+    if (m_suppressed_locations.size() > 0) {\n+        str.insert(0, \"[*] \");\n+    }\n+\n+    return was_ratelimited && is_ratelimited;\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, const std::source_location& source_loc, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n {\n     if (!str.ends_with('\\n')) str.push_back('\\n');\n \n     str.insert(0, GetLogPrefix(category, level));\n \n     if (m_log_sourcelocations) {\n-        str.insert(0, strprintf(\"[%s:%d] [%s] \", RemovePrefixView(source_file, \"./\"), source_line, logging_function));\n+        str.insert(0, strprintf(\"[%s:%d] [%s] \", RemovePrefixView(source_loc.file_name(), \"./\"), source_loc.line(), source_loc.function_name()));",
      "path": "src/logging.cpp",
      "position": 91,
      "original_position": 96,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As you pointed out, this changes the logging output by now including the full function signature instead of just the function name. I think that's generally an improvement, but should probably be mentioned in the release notes (which would be good to have for the new rate limiting behaviour in general anyway) because it might break downstream log parsing. Would suggest adding commit at the top with release notes?",
      "created_at": "2025-06-06T09:43:26Z",
      "updated_at": "2025-06-06T10:07:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2131883418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131883418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 420,
      "original_line": 420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131888118",
      "pull_request_review_id": 2904095923,
      "id": 2131888118,
      "node_id": "PRRC_kwDOABII585_Egf2",
      "diff_hunk": "@@ -400,10 +450,8 @@ void BCLog::Logger::LogPrintStr_(std::string_view str, std::string_view logging_\n                 .now=SystemClock::now(),\n                 .mocktime=GetMockTime(),\n                 .str=str_prefixed,\n-                .logging_function=std::string(logging_function),\n-                .source_file=std::string(source_file),\n                 .threadname=util::ThreadGetInternalName(),\n-                .source_line=source_line,\n+                .source_loc=source_loc,",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 125,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since `source_loc` is fairly large and this function is frequently called, I think it might make sense to optimize this a bit further and have `LogPrintStr_` (and its callsites) take a `std::source_location&&` so we can move it here and avoid the copy?\r\n\r\n<details>\r\n<summary>git diff on 911ee520c8</summary>\r\n\r\n```diff\r\ndiff --git a/src/logging.cpp b/src/logging.cpp\r\nindex e31e346549..006bac6a98 100644\r\n--- a/src/logging.cpp\r\n+++ b/src/logging.cpp\r\n@@ -74,8 +74,7 @@ bool BCLog::Logger::StartLogging()\r\n     // dump buffered messages from before we opened the log\r\n     m_buffering = false;\r\n     if (m_buffer_lines_discarded > 0) {\r\n-        const auto source_loc{std::source_location::current()};\r\n-        LogPrintStr_(strprintf(\"Early logging buffer overflowed, %d log lines discarded.\\n\", m_buffer_lines_discarded), source_loc, BCLog::ALL, Level::Info, /*should_ratelimit=*/false);\r\n+        LogPrintStr_(strprintf(\"Early logging buffer overflowed, %d log lines discarded.\\n\", m_buffer_lines_discarded), std::source_location::current(), BCLog::ALL, Level::Info, /*should_ratelimit=*/false);\r\n     }\r\n     while (!m_msgs_before_open.empty()) {\r\n         const auto& buflog = m_msgs_before_open.front();\r\n@@ -434,13 +433,13 @@ void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags catego\r\n     str.insert(0, LogTimestampStr(now, mocktime));\r\n }\r\n \r\n-void BCLog::Logger::LogPrintStr(std::string_view str, const std::source_location& source_loc, BCLog::LogFlags category, BCLog::Level level, bool should_ratelimit)\r\n+void BCLog::Logger::LogPrintStr(std::string_view str, std::source_location&& source_loc, BCLog::LogFlags category, BCLog::Level level, bool should_ratelimit)\r\n {\r\n     StdLockGuard scoped_lock(m_cs);\r\n-    return LogPrintStr_(str, source_loc, category, level, should_ratelimit);\r\n+    return LogPrintStr_(str, std::move(source_loc), category, level, should_ratelimit);\r\n }\r\n \r\n-void BCLog::Logger::LogPrintStr_(std::string_view str, const std::source_location& source_loc, BCLog::LogFlags category, BCLog::Level level, bool should_ratelimit)\r\n+void BCLog::Logger::LogPrintStr_(std::string_view str, std::source_location&& source_loc, BCLog::LogFlags category, BCLog::Level level, bool should_ratelimit)\r\n {\r\n     std::string str_prefixed = LogEscapeMessage(str);\r\n \r\n@@ -451,7 +450,7 @@ void BCLog::Logger::LogPrintStr_(std::string_view str, const std::source_locatio\r\n                 .mocktime=GetMockTime(),\r\n                 .str=str_prefixed,\r\n                 .threadname=util::ThreadGetInternalName(),\r\n-                .source_loc=source_loc,\r\n+                .source_loc=std::move(source_loc),\r\n                 .category=category,\r\n                 .level=level,\r\n             };\r\ndiff --git a/src/logging.h b/src/logging.h\r\nindex d588ef86dc..edef5c074f 100644\r\n--- a/src/logging.h\r\n+++ b/src/logging.h\r\n@@ -201,7 +201,7 @@ namespace BCLog {\r\n         std::list<std::function<void(const std::string&)>> m_print_callbacks GUARDED_BY(m_cs) {};\r\n \r\n         /** Send a string to the log output (internal) */\r\n-        void LogPrintStr_(std::string_view str, const std::source_location& source_loc, BCLog::LogFlags category, BCLog::Level level, bool should_ratelimit)\r\n+        void LogPrintStr_(std::string_view str, std::source_location&& source_loc, BCLog::LogFlags category, BCLog::Level level, bool should_ratelimit)\r\n             EXCLUSIVE_LOCKS_REQUIRED(m_cs);\r\n \r\n         std::string GetLogPrefix(LogFlags category, Level level) const;\r\n@@ -220,7 +220,7 @@ namespace BCLog {\r\n         std::atomic<bool> m_reopen_file{false};\r\n \r\n         /** Send a string to the log output */\r\n-        void LogPrintStr(std::string_view str, const std::source_location& source_loc, BCLog::LogFlags category, BCLog::Level level, bool should_ratelimit)\r\n+        void LogPrintStr(std::string_view str, std::source_location&& source_loc, BCLog::LogFlags category, BCLog::Level level, bool should_ratelimit)\r\n             EXCLUSIVE_LOCKS_REQUIRED(!m_cs);\r\n \r\n         /** Returns whether logs will be written to any output */\r\n@@ -320,7 +320,7 @@ static inline bool LogAcceptCategory(BCLog::LogFlags category, BCLog::Level leve\r\n bool GetLogCategory(BCLog::LogFlags& flag, std::string_view str);\r\n \r\n template <typename... Args>\r\n-inline void LogPrintFormatInternal(const std::source_location& source_loc, const BCLog::LogFlags flag, const BCLog::Level level, const bool should_ratelimit, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\r\n+inline void LogPrintFormatInternal(std::source_location&& source_loc, const BCLog::LogFlags flag, const BCLog::Level level, const bool should_ratelimit, util::ConstevalFormatString<sizeof...(Args)> fmt, const Args&... args)\r\n {\r\n     if (LogInstance().Enabled()) {\r\n         std::string log_msg;\r\n@@ -329,7 +329,7 @@ inline void LogPrintFormatInternal(const std::source_location& source_loc, const\r\n         } catch (tinyformat::format_error& fmterr) {\r\n             log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\r\n         }\r\n-        LogInstance().LogPrintStr(log_msg, source_loc, flag, level, should_ratelimit);\r\n+        LogInstance().LogPrintStr(log_msg, std::move(source_loc), flag, level, should_ratelimit);\r\n     }\r\n }\r\n \r\ndiff --git a/src/test/logging_tests.cpp b/src/test/logging_tests.cpp\r\nindex 0043df182e..f5ce17aa23 100644\r\n--- a/src/test/logging_tests.cpp\r\n+++ b/src/test/logging_tests.cpp\r\n@@ -97,12 +97,12 @@ BOOST_FIXTURE_TEST_CASE(logging_LogPrintStr, LogSetup)\r\n         std::source_location::current(),\r\n         std::source_location::current(),\r\n     };\r\n-    LogInstance().LogPrintStr(\"foo1: bar1\", source_locs[0], BCLog::LogFlags::NET, BCLog::Level::Debug, /*should_ratelimit=*/false);\r\n-    LogInstance().LogPrintStr(\"foo2: bar2\", source_locs[1], BCLog::LogFlags::NET, BCLog::Level::Info, /*should_ratelimit=*/false);\r\n-    LogInstance().LogPrintStr(\"foo3: bar3\", source_locs[2], BCLog::LogFlags::ALL, BCLog::Level::Debug, /*should_ratelimit=*/false);\r\n-    LogInstance().LogPrintStr(\"foo4: bar4\", source_locs[3], BCLog::LogFlags::ALL, BCLog::Level::Info, /*should_ratelimit=*/false);\r\n-    LogInstance().LogPrintStr(\"foo5: bar5\", source_locs[4], BCLog::LogFlags::NONE, BCLog::Level::Debug, /*should_ratelimit=*/false);\r\n-    LogInstance().LogPrintStr(\"foo6: bar6\", source_locs[5], BCLog::LogFlags::NONE, BCLog::Level::Info, /*should_ratelimit=*/false);\r\n+    LogInstance().LogPrintStr(\"foo1: bar1\", std::move(source_locs[0]), BCLog::LogFlags::NET, BCLog::Level::Debug, /*should_ratelimit=*/false);\r\n+    LogInstance().LogPrintStr(\"foo2: bar2\", std::move(source_locs[1]), BCLog::LogFlags::NET, BCLog::Level::Info, /*should_ratelimit=*/false);\r\n+    LogInstance().LogPrintStr(\"foo3: bar3\", std::move(source_locs[2]), BCLog::LogFlags::ALL, BCLog::Level::Debug, /*should_ratelimit=*/false);\r\n+    LogInstance().LogPrintStr(\"foo4: bar4\", std::move(source_locs[3]), BCLog::LogFlags::ALL, BCLog::Level::Info, /*should_ratelimit=*/false);\r\n+    LogInstance().LogPrintStr(\"foo5: bar5\", std::move(source_locs[4]), BCLog::LogFlags::NONE, BCLog::Level::Debug, /*should_ratelimit=*/false);\r\n+    LogInstance().LogPrintStr(\"foo6: bar6\", std::move(source_locs[5]), BCLog::LogFlags::NONE, BCLog::Level::Info, /*should_ratelimit=*/false);\r\n     std::ifstream file{tmp_log_path};\r\n     std::vector<std::string> log_lines;\r\n     for (std::string log; std::getline(file, log);) {\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-06-06T09:46:36Z",
      "updated_at": "2025-06-06T10:07:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2131888118",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131888118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131914811",
      "pull_request_review_id": 2904095923,
      "id": 2131914811,
      "node_id": "PRRC_kwDOABII585_EnA7",
      "diff_hunk": "@@ -269,11 +353,14 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n // evaluating arguments when logging for the category is not enabled.\n \n // Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+// Note that conditional logging is performed WITHOUT rate limiting. Users specifying\n+// -debug are assumed to be developers or power users who are aware that -debug may cause\n+// excessive disk usage due to logging.\n+#define LogPrintLevel(category, level, ...)                                           \\",
      "path": "src/logging.h",
      "position": null,
      "original_position": 224,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": 2128424406,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice. Since af86b55f996cf06e8e9179d5c1fe7ce3d94fa3c6 now uses `LogPrintLevel_` directly, I think the changes to `LogPrintLevel` in ed3c0a592b60a565ec5dade7c3af62e7f4cf75a1 can now be reverted and rate limiting applied consistently to all \"public\" macros? (would also require an update to the `UpdateTipLog` docstring)",
      "created_at": "2025-06-06T10:04:33Z",
      "updated_at": "2025-06-06T10:07:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2131914811",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2131914811"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 358,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132459455",
      "pull_request_review_id": 2905363922,
      "id": 2132459455,
      "node_id": "PRRC_kwDOABII585_Gr-_",
      "diff_hunk": "@@ -364,17 +373,63 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::NeedsRateLimiting(bool should_ratelimit, const std::source_location& source_loc, std::string& str, std::string_view logging_function)",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 47,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": 2128389554,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I don't see how this affects any maps, though? I think it just affects the messages when we stop and restart logging?\r\n\r\nOh, I think I mistakenly thought that `function_name` was included in the map somehow or used when hashing `std::source_location`, but I see that's not actually the case.",
      "created_at": "2025-06-06T16:00:21Z",
      "updated_at": "2025-06-06T16:00:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2132459455",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132459455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 379,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132510030",
      "pull_request_review_id": 2905446634,
      "id": 2132510030,
      "node_id": "PRRC_kwDOABII585_G4VO",
      "diff_hunk": "@@ -269,11 +353,14 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n // evaluating arguments when logging for the category is not enabled.\n \n // Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+// Note that conditional logging is performed WITHOUT rate limiting. Users specifying\n+// -debug are assumed to be developers or power users who are aware that -debug may cause\n+// excessive disk usage due to logging.\n+#define LogPrintLevel(category, level, ...)                                           \\",
      "path": "src/logging.h",
      "position": null,
      "original_position": 224,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": 2128424406,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm a little unsure about adding rate-limiting to `LogPrintLevel` as then if a user runs with -debug, they could potentially hit the rate-limit via `LogDebug` or by some of the existing `LogPrintLevel` calls. I think it is in the user's best interest to have rate-limiting applied to all public macros like you suggested, but I also don't want to potentially confuse users as to why their debug.log is incomplete due to rate-limiting when they are just running with `-debug`.",
      "created_at": "2025-06-06T16:35:35Z",
      "updated_at": "2025-06-06T16:35:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2132510030",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2132510030"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 358,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135540635",
      "pull_request_review_id": 2909762814,
      "id": 2135540635,
      "node_id": "PRRC_kwDOABII585_ScOb",
      "diff_hunk": "@@ -269,11 +353,14 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n // evaluating arguments when logging for the category is not enabled.\n \n // Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+// Note that conditional logging is performed WITHOUT rate limiting. Users specifying\n+// -debug are assumed to be developers or power users who are aware that -debug may cause\n+// excessive disk usage due to logging.\n+#define LogPrintLevel(category, level, ...)                                           \\",
      "path": "src/logging.h",
      "position": null,
      "original_position": 224,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": 2128424406,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh no I agree, debug logs should be exempt from ratelimiting. My point is just that I think it's bad to have different logging behaviour depending on whether `LogInfo()` or `LogPrintLevel(..., BCLog::Info)` is used, so I think something like the below would work well?\r\n\r\n<details>\r\n<summary>git diff on 911ee520c8</summary>\r\n\r\n```diff\r\ndiff --git a/src/logging.h b/src/logging.h\r\nindex d588ef86dc..5f298405e7 100644\r\n--- a/src/logging.h\r\n+++ b/src/logging.h\r\n@@ -349,17 +349,13 @@ inline void LogPrintFormatInternal(const std::source_location& source_loc, const\r\n // Use a macro instead of a function for conditional logging to prevent\r\n // evaluating arguments when logging for the category is not enabled.\r\n \r\n-// Log by prefixing the output with the passed category name and severity level. This can either\r\n-// log conditionally if the category is allowed or unconditionally if level >= BCLog::Level::Info\r\n-// is passed. Note that this function bypasses rate limiting. Callers need to take care to ensure\r\n-// that an attacker cannot trigger a disk-fill vulnerability if level >= Info is used. Additionally,\r\n-// users specifying -debug are assumed to be developers or power users who are aware that -debug\r\n-// may cause excessive disk usage due to logging.\r\n-#define LogPrintLevel(category, level, ...)                                           \\\r\n-    do {                                                                              \\\r\n-        if (LogAcceptCategory((category), (level))) {                                 \\\r\n-            LogPrintLevel_(category, level, /*should_ratelimit=*/false, __VA_ARGS__); \\\r\n-        }                                                                             \\\r\n+// Log conditionally, prefixing the output with the passed category name and severity level.\r\n+#define LogPrintLevel(category, level, ...)                             \\\r\n+    do {                                                                \\\r\n+        if (LogAcceptCategory((category), (level))) {                   \\\r\n+            bool rate_limit{level >= BCLog::Info};                      \\\r\n+            LogPrintLevel_(category, level, rate_limit, __VA_ARGS__);   \\\r\n+        }                                                               \\\r\n     } while (0)\r\n \r\n // Log conditionally, prefixing the output with the passed category name.\r\n\r\n```\r\n</details>\r\n\r\n",
      "created_at": "2025-06-09T11:18:36Z",
      "updated_at": "2025-06-09T11:18:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2135540635",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135540635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 358,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135685134",
      "pull_request_review_id": 2910011000,
      "id": 2135685134,
      "node_id": "PRRC_kwDOABII585_S_gO",
      "diff_hunk": "@@ -269,11 +353,14 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n // evaluating arguments when logging for the category is not enabled.\n \n // Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+// Note that conditional logging is performed WITHOUT rate limiting. Users specifying\n+// -debug are assumed to be developers or power users who are aware that -debug may cause\n+// excessive disk usage due to logging.\n+#define LogPrintLevel(category, level, ...)                                           \\",
      "path": "src/logging.h",
      "position": null,
      "original_position": 224,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": 2128424406,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh I completely misunderstood! I like this suggestion a lot and I think it plugs the hole. I am not sure the future plans for `LogPrintLevel` but I wonder if eventually all instances of `LogPrintLevel` with level >= `BCLog::Info` could instead be converted to `LogInfo` or the equivalent?",
      "created_at": "2025-06-09T13:04:05Z",
      "updated_at": "2025-06-09T13:04:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2135685134",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135685134"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 358,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135787497",
      "pull_request_review_id": 2910178523,
      "id": 2135787497,
      "node_id": "PRRC_kwDOABII585_TYfp",
      "diff_hunk": "@@ -269,11 +353,14 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n // evaluating arguments when logging for the category is not enabled.\n \n // Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+// Note that conditional logging is performed WITHOUT rate limiting. Users specifying\n+// -debug are assumed to be developers or power users who are aware that -debug may cause\n+// excessive disk usage due to logging.\n+#define LogPrintLevel(category, level, ...)                                           \\",
      "path": "src/logging.h",
      "position": null,
      "original_position": 224,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": 2128424406,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In a general sense, having a generalized logging function is helpful when the loglevel isn't known in advance, as is e.g. the case here: https://github.com/bitcoin/bitcoin/blob/f3bbc746647d1fd23bf5cfe357e32f38c5f6319c/src/httpserver.cpp#L440\r\n\r\nIt seems like we currently don't really need it in our codebase, but I would keep that discussion for a separate PR because it would lead us astray a bit much here?",
      "created_at": "2025-06-09T14:03:45Z",
      "updated_at": "2025-06-09T14:03:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2135787497",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2135787497"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 358,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140490847",
      "pull_request_review_id": 2917722133,
      "id": 2140490847,
      "node_id": "PRRC_kwDOABII585_lUxf",
      "diff_hunk": "@@ -269,11 +353,14 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n // evaluating arguments when logging for the category is not enabled.\n \n // Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+// Note that conditional logging is performed WITHOUT rate limiting. Users specifying\n+// -debug are assumed to be developers or power users who are aware that -debug may cause\n+// excessive disk usage due to logging.\n+#define LogPrintLevel(category, level, ...)                                           \\",
      "path": "src/logging.h",
      "position": null,
      "original_position": 224,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": 2128424406,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolving as it's now addressed.",
      "created_at": "2025-06-11T15:27:52Z",
      "updated_at": "2025-06-11T15:27:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2140490847",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140490847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 358,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140498525",
      "pull_request_review_id": 2917735157,
      "id": 2140498525,
      "node_id": "PRRC_kwDOABII585_lWpd",
      "diff_hunk": "@@ -364,17 +373,58 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+}\n+\n+bool BCLog::LogRateLimiter::NeedsRateLimiting(const std::source_location& source_loc, std::string& str)\n+{\n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    // Check to see if we were rate limited before calling MaybeResetWindow.\n+    was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+\n+    // If the window has elapsed, then we need to clear the unordered map and set.\n+    MaybeResetWindow();\n+\n+    is_ratelimited = !m_source_locations[source_loc].Consume(str.size());\n+\n+    if (!is_ratelimited && was_ratelimited) {\n+        uint64_t dropped_bytes = m_source_locations[source_loc].GetDroppedBytes();\n+\n+        str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\n+                                \"(%d MiB) were dropped during the last hour.\\n\",\n+                                source_loc.file_name(), source_loc.line(), source_loc.function_name(),\n+                                dropped_bytes / (1024 * 1024)));",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "in_reply_to_id": 2131861828,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've made this change, lmk what you think. `MaybeResetWindow()` now uses `str.insert(0, ...)` per `m_suppressed_locations`.",
      "created_at": "2025-06-11T15:31:28Z",
      "updated_at": "2025-06-11T15:31:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2140498525",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140498525"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": 396,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140510216",
      "pull_request_review_id": 2917754300,
      "id": 2140510216,
      "node_id": "PRRC_kwDOABII585_lZgI",
      "diff_hunk": "@@ -400,10 +450,8 @@ void BCLog::Logger::LogPrintStr_(std::string_view str, std::string_view logging_\n                 .now=SystemClock::now(),\n                 .mocktime=GetMockTime(),\n                 .str=str_prefixed,\n-                .logging_function=std::string(logging_function),\n-                .source_file=std::string(source_file),\n                 .threadname=util::ThreadGetInternalName(),\n-                .source_line=source_line,\n+                .source_loc=source_loc,",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 125,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "in_reply_to_id": 2131888118,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've sort of implemented this. I wasn't able to use `std::source_location&&` in `LogPrintStr_` because it's passed to two functions (`FormatLogStrInPlace` and `NeedsRateLimiting`) and implicit invalidation might occur. Instead, I pass `std::source_location&` and call `std::move` only when needed to invoke the move constructor. ",
      "created_at": "2025-06-11T15:37:19Z",
      "updated_at": "2025-06-11T15:37:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2140510216",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2140510216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2143286465",
      "pull_request_review_id": 2922072029,
      "id": 2143286465,
      "node_id": "PRRC_kwDOABII585_v_TB",
      "diff_hunk": "@@ -400,10 +450,8 @@ void BCLog::Logger::LogPrintStr_(std::string_view str, std::string_view logging_\n                 .now=SystemClock::now(),\n                 .mocktime=GetMockTime(),\n                 .str=str_prefixed,\n-                .logging_function=std::string(logging_function),\n-                .source_file=std::string(source_file),\n                 .threadname=util::ThreadGetInternalName(),\n-                .source_line=source_line,\n+                .source_loc=source_loc,",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 125,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "in_reply_to_id": 2131888118,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I am not sure how I feel about my approach here because the caller of `LogPrintStr_` now needs to be aware that `std::source_location&` can be moved-from?",
      "created_at": "2025-06-12T17:33:35Z",
      "updated_at": "2025-06-12T17:33:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2143286465",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2143286465"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2143805528",
      "pull_request_review_id": 2922873091,
      "id": 2143805528,
      "node_id": "PRRC_kwDOABII585_x-BY",
      "diff_hunk": "@@ -400,10 +450,8 @@ void BCLog::Logger::LogPrintStr_(std::string_view str, std::string_view logging_\n                 .now=SystemClock::now(),\n                 .mocktime=GetMockTime(),\n                 .str=str_prefixed,\n-                .logging_function=std::string(logging_function),\n-                .source_file=std::string(source_file),\n                 .threadname=util::ThreadGetInternalName(),\n-                .source_line=source_line,\n+                .source_loc=source_loc,",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 125,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "in_reply_to_id": 2131888118,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I misunderstood the original suggestion and have now implemented it in ca0c1a7a9ce9198c950e123d36c9e4bb13db13da",
      "created_at": "2025-06-12T23:18:18Z",
      "updated_at": "2025-06-12T23:18:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2143805528",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2143805528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 454,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2144628244",
      "pull_request_review_id": 2924083057,
      "id": 2144628244,
      "node_id": "PRRC_kwDOABII585_1G4U",
      "diff_hunk": "@@ -364,17 +374,51 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::LogRateLimiter::NeedsRateLimiting(const std::source_location& source_loc, std::string& str)\n+{\n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    // Check to see if we were rate limited before calling MaybeResetWindow.\n+    was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+\n+    // If the window has elapsed, then we need to clear the unordered map and set.\n+    MaybeResetWindow(str);\n+\n+    is_ratelimited = !m_source_locations[source_loc].Consume(str.size());\n+\n+    if (is_ratelimited && !was_ratelimited) {\n+        // Logging from this source location will be suppressed until the current window resets.\n+        m_suppressed_locations.insert(source_loc);\n+\n+        str.insert(0, strprintf(\"Excessive logging detected from %s:%d (%s): >%d MiB logged during the last hour.\"\n+                                \"Suppressing logging to disk from this source location for up to one hour. \"",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 67,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "in_reply_to_id": null,
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In the two-part string literal in NeedsRateLimiting:\r\n“…during the last hour.”\"Suppressing logging…” -> “…during the last hour. Suppressing logging…”\r\n[missing space between sentences due to C++ literal concatenation]",
      "created_at": "2025-06-13T09:40:08Z",
      "updated_at": "2025-06-13T09:40:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2144628244",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2144628244"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": 398,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 398,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156708724",
      "pull_request_review_id": 2942493812,
      "id": 2156708724,
      "node_id": "PRRC_kwDOABII586AjMN0",
      "diff_hunk": "@@ -31,6 +35,24 @@ extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n+struct SourceLocationEqual {\n+    bool operator()(const std::source_location& lhs, const std::source_location& rhs) const noexcept\n+    {\n+        return lhs.line() == rhs.line() && strcmp(lhs.file_name(), rhs.file_name()) == 0;\n+    }\n+};\n+\n+struct SourceLocationHasher {\n+    size_t operator()(const std::source_location& s) const noexcept\n+    {\n+        // Use CSipHasher(0, 0) as a simple way to get uniform distribution.\n+        return static_cast<size_t>(CSipHasher(0, 0)\n+                                       .Write(std::hash<std::string_view>{}(s.file_name()))\n+                                       .Write(std::hash<int>{}(s.line()))",
      "path": "src/logging.h",
      "position": null,
      "original_position": 40,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I don't think hashing the line is necessary?\r\n```suggestion\r\n                                       .Write(s.line())\r\n```",
      "created_at": "2025-06-19T10:47:32Z",
      "updated_at": "2025-06-19T12:28:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2156708724",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156708724"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156739229",
      "pull_request_review_id": 2942493812,
      "id": 2156739229,
      "node_id": "PRRC_kwDOABII586AjTqd",
      "diff_hunk": "@@ -364,17 +374,51 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::LogRateLimiter::NeedsRateLimiting(const std::source_location& source_loc, std::string& str)\n+{\n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    // Check to see if we were rate limited before calling MaybeResetWindow.\n+    was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+\n+    // If the window has elapsed, then we need to clear the unordered map and set.\n+    MaybeResetWindow(str);\n+\n+    is_ratelimited = !m_source_locations[source_loc].Consume(str.size());",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I think this can be simplified a bit:\r\n\r\n<details>\r\n<summary>git diff on b7d9c669ca</summary>\r\n\r\n```diff\r\ndiff --git a/src/logging.cpp b/src/logging.cpp\r\nindex 827d1bad10..fec8e5ec58 100644\r\n--- a/src/logging.cpp\r\n+++ b/src/logging.cpp\r\n@@ -379,17 +379,13 @@ static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\r\n \r\n bool BCLog::LogRateLimiter::NeedsRateLimiting(const std::source_location& source_loc, std::string& str)\r\n {\r\n-    // Whether or not logging to disk was/is ratelimited for this source location.\r\n-    bool was_ratelimited{false};\r\n-    bool is_ratelimited{false};\r\n-\r\n     // Check to see if we were rate limited before calling MaybeResetWindow.\r\n-    was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\r\n+    bool was_ratelimited{m_suppressed_locations.contains(source_loc)};\r\n \r\n     // If the window has elapsed, then we need to clear the unordered map and set.\r\n     MaybeResetWindow(str);\r\n \r\n-    is_ratelimited = !m_source_locations[source_loc].Consume(str.size());\r\n+    bool is_ratelimited{!m_source_locations[source_loc].Consume(str.size())};\r\n \r\n     if (is_ratelimited && !was_ratelimited) {\r\n         // Logging from this source location will be suppressed until the current window resets.\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-06-19T11:07:23Z",
      "updated_at": "2025-06-19T12:28:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2156739229",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156739229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": 383,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 392,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156745293",
      "pull_request_review_id": 2942493812,
      "id": 2156745293,
      "node_id": "PRRC_kwDOABII586AjVJN",
      "diff_hunk": "@@ -196,15 +196,15 @@ namespace BCLog {\n         /** Log categories bitfield. */\n         std::atomic<CategoryMask> m_categories{BCLog::NONE};\n \n-        void FormatLogStrInPlace(std::string& str, LogFlags category, Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const;\n+        void FormatLogStrInPlace(std::string& str, LogFlags category, Level level, const std::source_location& source_loc, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const;",
      "path": "src/logging.h",
      "position": 140,
      "original_position": 16,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "ca0c1a7a9ce9198c950e123d36c9e4bb13db13da",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: updating the ca0c1a7a9ce9198c950e123d36c9e4bb13db13da commit message with a brief mention of the behaviour change for `-logsourcelocations` would be helpful for both review and historical documentation purposes.",
      "created_at": "2025-06-19T11:10:05Z",
      "updated_at": "2025-06-19T12:28:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2156745293",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156745293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 202,
      "original_line": 202,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156776849",
      "pull_request_review_id": 2942493812,
      "id": 2156776849,
      "node_id": "PRRC_kwDOABII586Ajc2R",
      "diff_hunk": "@@ -364,7 +365,7 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "ca0c1a7a9ce9198c950e123d36c9e4bb13db13da",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I don't think it's crucial to be super precise here, since it's only used briefly during startup, but I think this underestimating the `std::source_location` size a bit. It's not accounting the 2*4 bytes for `line` and `column`, nor the pointers (3 on [gcc](https://github.com/gcc-mirror/gcc/blob/4c80062d7b8c272e2e193b8074a8440dbb4fe588/libstdc%2B%2B-v3/include/std/source_location#L43-L88)) used to implement `std::source_location`. If people think it's crucial to get this (more) right, probably adding a separate `MemUsage(const std::source_location&)` could make sense.",
      "created_at": "2025-06-19T11:30:44Z",
      "updated_at": "2025-06-19T12:30:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2156776849",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156776849"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156780094",
      "pull_request_review_id": 2942493812,
      "id": 2156780094,
      "node_id": "PRRC_kwDOABII586Ajdo-",
      "diff_hunk": "@@ -418,13 +419,13 @@ void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags catego\n     str.insert(0, LogTimestampStr(now, mocktime));\n }\n \n-void BCLog::Logger::LogPrintStr(std::string_view str, std::string_view logging_function, std::string_view source_file, int source_line, BCLog::LogFlags category, BCLog::Level level)\n+void BCLog::Logger::LogPrintStr(std::string_view str, std::source_location&& source_loc, BCLog::LogFlags category, BCLog::Level level)\n {\n     StdLockGuard scoped_lock(m_cs);\n-    return LogPrintStr_(str, logging_function, source_file, source_line, category, level);\n+    return LogPrintStr_(str, std::move(source_loc), category, level);",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 58,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "ca0c1a7a9ce9198c950e123d36c9e4bb13db13da",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: requires `#include <utility>`",
      "created_at": "2025-06-19T11:32:42Z",
      "updated_at": "2025-06-19T12:28:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2156780094",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156780094"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 425,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156819515",
      "pull_request_review_id": 2942493812,
      "id": 2156819515,
      "node_id": "PRRC_kwDOABII586AjnQ7",
      "diff_hunk": "@@ -86,24 +95,34 @@ BOOST_AUTO_TEST_CASE(logging_timer)\n BOOST_FIXTURE_TEST_CASE(logging_LogPrintStr, LogSetup)\n {\n     LogInstance().m_log_sourcelocations = true;\n-    LogInstance().LogPrintStr(\"foo1: bar1\", \"fn1\", \"src1\", 1, BCLog::LogFlags::NET, BCLog::Level::Debug);\n-    LogInstance().LogPrintStr(\"foo2: bar2\", \"fn2\", \"src2\", 2, BCLog::LogFlags::NET, BCLog::Level::Info);\n-    LogInstance().LogPrintStr(\"foo3: bar3\", \"fn3\", \"src3\", 3, BCLog::LogFlags::ALL, BCLog::Level::Debug);\n-    LogInstance().LogPrintStr(\"foo4: bar4\", \"fn4\", \"src4\", 4, BCLog::LogFlags::ALL, BCLog::Level::Info);\n-    LogInstance().LogPrintStr(\"foo5: bar5\", \"fn5\", \"src5\", 5, BCLog::LogFlags::NONE, BCLog::Level::Debug);\n-    LogInstance().LogPrintStr(\"foo6: bar6\", \"fn6\", \"src6\", 6, BCLog::LogFlags::NONE, BCLog::Level::Info);\n+    std::vector<std::source_location> source_locs = {\n+        std::source_location::current(),\n+        std::source_location::current(),\n+        std::source_location::current(),\n+        std::source_location::current(),\n+        std::source_location::current(),\n+        std::source_location::current(),\n+    };\n+    LogInstance().LogPrintStr(\"foo1: bar1\", std::move(source_locs[0]), BCLog::LogFlags::NET, BCLog::Level::Debug, /*should_ratelimit=*/false);\n+    LogInstance().LogPrintStr(\"foo2: bar2\", std::move(source_locs[1]), BCLog::LogFlags::NET, BCLog::Level::Info, /*should_ratelimit=*/false);\n+    LogInstance().LogPrintStr(\"foo3: bar3\", std::move(source_locs[2]), BCLog::LogFlags::ALL, BCLog::Level::Debug, /*should_ratelimit=*/false);\n+    LogInstance().LogPrintStr(\"foo4: bar4\", std::move(source_locs[3]), BCLog::LogFlags::ALL, BCLog::Level::Info, /*should_ratelimit=*/false);\n+    LogInstance().LogPrintStr(\"foo5: bar5\", std::move(source_locs[4]), BCLog::LogFlags::NONE, BCLog::Level::Debug, /*should_ratelimit=*/false);\n+    LogInstance().LogPrintStr(\"foo6: bar6\", std::move(source_locs[5]), BCLog::LogFlags::NONE, BCLog::Level::Info, /*should_ratelimit=*/false);\n     std::ifstream file{tmp_log_path};\n     std::vector<std::string> log_lines;\n     for (std::string log; std::getline(file, log);) {\n         log_lines.push_back(log);\n     }\n+    std::string file_name = util::RemovePrefix(source_locs[0].file_name(), \"./\");\n+    std::string function_name{source_locs[0].function_name()};\n     std::vector<std::string> expected = {\n-        \"[src1:1] [fn1] [net] foo1: bar1\",\n-        \"[src2:2] [fn2] [net:info] foo2: bar2\",\n-        \"[src3:3] [fn3] [debug] foo3: bar3\",\n-        \"[src4:4] [fn4] foo4: bar4\",\n-        \"[src5:5] [fn5] [debug] foo5: bar5\",\n-        \"[src6:6] [fn6] foo6: bar6\",\n+        \"[\" + file_name + \":\" + util::ToString(source_locs[0].line()) + \"] [\" + function_name + \"] [net] foo1: bar1\",\n+        \"[\" + file_name + \":\" + util::ToString(source_locs[1].line()) + \"] [\" + function_name + \"] [net:info] foo2: bar2\",\n+        \"[\" + file_name + \":\" + util::ToString(source_locs[2].line()) + \"] [\" + function_name + \"] [debug] foo3: bar3\",\n+        \"[\" + file_name + \":\" + util::ToString(source_locs[3].line()) + \"] [\" + function_name + \"] foo4: bar4\",\n+        \"[\" + file_name + \":\" + util::ToString(source_locs[4].line()) + \"] [\" + function_name + \"] [debug] foo5: bar5\",\n+        \"[\" + file_name + \":\" + util::ToString(source_locs[5].line()) + \"] [\" + function_name + \"] foo6: bar6\",",
      "path": "src/test/logging_tests.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: can be cleaned up a bit:\r\n\r\n<details>\r\n<summary>git diff on b7d9c669ca</summary>\r\n\r\n```diff\r\ndiff --git a/src/test/logging_tests.cpp b/src/test/logging_tests.cpp\r\nindex c9b7913ee4..d673792ab6 100644\r\n--- a/src/test/logging_tests.cpp\r\n+++ b/src/test/logging_tests.cpp\r\n@@ -114,15 +114,16 @@ BOOST_FIXTURE_TEST_CASE(logging_LogPrintStr, LogSetup)\r\n     for (std::string log; std::getline(file, log);) {\r\n         log_lines.push_back(log);\r\n     }\r\n-    std::string file_name = util::RemovePrefix(source_locs[0].file_name(), \"./\");\r\n-    std::string function_name{source_locs[0].function_name()};\r\n+    auto format_source_location = [](const std::source_location& loc) {\r\n+        return tfm::format(\"[%s:%s] [%s]\", util::RemovePrefixView(loc.file_name(), \"./\"), loc.line(), loc.function_name());\r\n+    };\r\n     std::vector<std::string> expected = {\r\n-        \"[\" + file_name + \":\" + util::ToString(source_locs[0].line()) + \"] [\" + function_name + \"] [net] foo1: bar1\",\r\n-        \"[\" + file_name + \":\" + util::ToString(source_locs[1].line()) + \"] [\" + function_name + \"] [net:info] foo2: bar2\",\r\n-        \"[\" + file_name + \":\" + util::ToString(source_locs[2].line()) + \"] [\" + function_name + \"] [debug] foo3: bar3\",\r\n-        \"[\" + file_name + \":\" + util::ToString(source_locs[3].line()) + \"] [\" + function_name + \"] foo4: bar4\",\r\n-        \"[\" + file_name + \":\" + util::ToString(source_locs[4].line()) + \"] [\" + function_name + \"] [debug] foo5: bar5\",\r\n-        \"[\" + file_name + \":\" + util::ToString(source_locs[5].line()) + \"] [\" + function_name + \"] foo6: bar6\",\r\n+        format_source_location(source_locs[0]) + \" [net] foo1: bar1\",\r\n+        format_source_location(source_locs[1]) + \" [net:info] foo2: bar2\",\r\n+        format_source_location(source_locs[2]) + \" [debug] foo3: bar3\",\r\n+        format_source_location(source_locs[3]) + \" foo4: bar4\",\r\n+        format_source_location(source_locs[4]) + \" [debug] foo5: bar5\",\r\n+        format_source_location(source_locs[5]) + \" foo6: bar6\",\r\n     };\r\n     BOOST_CHECK_EQUAL_COLLECTIONS(log_lines.begin(), log_lines.end(), expected.begin(), expected.end());\r\n }\r\n\r\n```\r\n</details>\r\n",
      "created_at": "2025-06-19T11:50:24Z",
      "updated_at": "2025-06-19T12:28:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2156819515",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156819515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": 117,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156846978",
      "pull_request_review_id": 2942493812,
      "id": 2156846978,
      "node_id": "PRRC_kwDOABII586Ajt-C",
      "diff_hunk": "@@ -2976,15 +2976,19 @@ static void UpdateTipLog(\n {\n \n     AssertLockHeld(::cs_main);\n-    LogPrintf(\"%s%s: new best=%s height=%d version=0x%08x log2_work=%f tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)%s\\n\",\n-        prefix, func_name,\n-        tip->GetBlockHash().ToString(), tip->nHeight, tip->nVersion,\n-        log(tip->nChainWork.getdouble()) / log(2.0), tip->m_chain_tx_count,\n-        FormatISO8601DateTime(tip->GetBlockTime()),\n-        chainman.GuessVerificationProgress(tip),\n-        coins_tip.DynamicMemoryUsage() * (1.0 / (1 << 20)),\n-        coins_tip.GetCacheSize(),\n-        !warning_messages.empty() ? strprintf(\" warning='%s'\", warning_messages) : \"\");\n+\n+    // We use the private LogPrintLevel_ macro here because we want to disable rate limiting from this location. This code\n+    // could use LogPrintLevel with the Info level to bypass rate-limiting, but it is more opaque. Using LogPrintLevel_",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> This code could use LogPrintLevel with the Info level to bypass rate-limiting\r\n\r\nI don't think that's correct? I'm not sure a long docstring is required here anyway, we already have decent documentation for the macros and functions involved. A brief \"don't rate limit because this can be hit frequently during IBD\" seems sufficient to me without overloading the reader with information.",
      "created_at": "2025-06-19T12:02:35Z",
      "updated_at": "2025-06-19T12:28:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2156846978",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156846978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": 2980,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2981,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156851022",
      "pull_request_review_id": 2942493812,
      "id": 2156851022,
      "node_id": "PRRC_kwDOABII586Aju9O",
      "diff_hunk": "@@ -33,7 +33,7 @@ class DebugLogHelper\n \n public:\n     explicit DebugLogHelper(std::string message, MatchFn match = [](const std::string*){ return true; });\n-    ~DebugLogHelper() { check_found(); }\n+    ~DebugLogHelper() noexcept(false) { check_found(); }",
      "path": "src/test/util/logging.h",
      "position": 7,
      "original_position": 5,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: (a brief version of) the commit message in 32615bffa6424625078e5bd9f6d79c7e99c9a322 would probably be helpful here as a docstring too?",
      "created_at": "2025-06-19T12:05:04Z",
      "updated_at": "2025-06-19T12:28:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2156851022",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156851022"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 38,
      "original_line": 38,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156881867",
      "pull_request_review_id": 2942493812,
      "id": 2156881867,
      "node_id": "PRRC_kwDOABII586Aj2fL",
      "diff_hunk": "@@ -364,17 +374,51 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::LogRateLimiter::NeedsRateLimiting(const std::source_location& source_loc, std::string& str)\n+{\n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    // Check to see if we were rate limited before calling MaybeResetWindow.\n+    was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+\n+    // If the window has elapsed, then we need to clear the unordered map and set.\n+    MaybeResetWindow(str);\n+\n+    is_ratelimited = !m_source_locations[source_loc].Consume(str.size());\n+\n+    if (is_ratelimited && !was_ratelimited) {\n+        // Logging from this source location will be suppressed until the current window resets.\n+        m_suppressed_locations.insert(source_loc);\n+\n+        str.insert(0, strprintf(\"Excessive logging detected from %s:%d (%s): >%d MiB logged during the last hour.\"\n+                                \"Suppressing logging to disk from this source location for up to one hour. \"\n+                                \"Console logging unaffected. Last log entry.\",",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 68,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should probably terminate with `\\n`?",
      "created_at": "2025-06-19T12:18:34Z",
      "updated_at": "2025-06-19T12:28:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2156881867",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156881867"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 400,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156895366",
      "pull_request_review_id": 2942493812,
      "id": 2156895366,
      "node_id": "PRRC_kwDOABII586Aj5yG",
      "diff_hunk": "@@ -364,17 +373,58 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+}\n+\n+bool BCLog::LogRateLimiter::NeedsRateLimiting(const std::source_location& source_loc, std::string& str)\n+{\n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    // Check to see if we were rate limited before calling MaybeResetWindow.\n+    was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+\n+    // If the window has elapsed, then we need to clear the unordered map and set.\n+    MaybeResetWindow();\n+\n+    is_ratelimited = !m_source_locations[source_loc].Consume(str.size());\n+\n+    if (!is_ratelimited && was_ratelimited) {\n+        uint64_t dropped_bytes = m_source_locations[source_loc].GetDroppedBytes();\n+\n+        str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\n+                                \"(%d MiB) were dropped during the last hour.\\n\",\n+                                source_loc.file_name(), source_loc.line(), source_loc.function_name(),\n+                                dropped_bytes / (1024 * 1024)));",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "in_reply_to_id": 2131861828,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, that looks good, thanks. It's unfortunate that these message are counted in `is_ratelimited = !m_source_locations[source_loc].Consume(str.size());`, but suppressions should be extremely rare, so triggering enough of them to cause a meaningful difference here seems impractical. A solution with not too much change could be to change to `MaybeResetWindow(const std::string& str, std::string& resume_msg)`, so we can keep separate accounting, but yeah not sure that's worth it/important.",
      "created_at": "2025-06-19T12:24:39Z",
      "updated_at": "2025-06-19T12:28:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2156895366",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156895366"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": 396,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156949932",
      "pull_request_review_id": 2942900508,
      "id": 2156949932,
      "node_id": "PRRC_kwDOABII586AkHGs",
      "diff_hunk": "@@ -2976,15 +2976,19 @@ static void UpdateTipLog(\n {\n \n     AssertLockHeld(::cs_main);\n-    LogPrintf(\"%s%s: new best=%s height=%d version=0x%08x log2_work=%f tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)%s\\n\",\n-        prefix, func_name,\n-        tip->GetBlockHash().ToString(), tip->nHeight, tip->nVersion,\n-        log(tip->nChainWork.getdouble()) / log(2.0), tip->m_chain_tx_count,\n-        FormatISO8601DateTime(tip->GetBlockTime()),\n-        chainman.GuessVerificationProgress(tip),\n-        coins_tip.DynamicMemoryUsage() * (1.0 / (1 << 20)),\n-        coins_tip.GetCacheSize(),\n-        !warning_messages.empty() ? strprintf(\" warning='%s'\", warning_messages) : \"\");\n+\n+    // We use the private LogPrintLevel_ macro here because we want to disable rate limiting from this location. This code\n+    // could use LogPrintLevel with the Info level to bypass rate-limiting, but it is more opaque. Using LogPrintLevel_",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 15,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "in_reply_to_id": 2156846978,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this is an old comment, will change.",
      "created_at": "2025-06-19T12:48:29Z",
      "updated_at": "2025-06-19T12:48:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2156949932",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156949932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": 2980,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 2981,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156951199",
      "pull_request_review_id": 2942902702,
      "id": 2156951199,
      "node_id": "PRRC_kwDOABII586AkHaf",
      "diff_hunk": "@@ -364,7 +365,7 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "ca0c1a7a9ce9198c950e123d36c9e4bb13db13da",
      "in_reply_to_id": 2156776849,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I also noticed this and wasn't sure if it was worth bringing up.",
      "created_at": "2025-06-19T12:49:03Z",
      "updated_at": "2025-06-19T12:49:03Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2156951199",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2156951199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157303508",
      "pull_request_review_id": 2943499037,
      "id": 2157303508,
      "node_id": "PRRC_kwDOABII586AldbU",
      "diff_hunk": "@@ -364,7 +365,7 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "ca0c1a7a9ce9198c950e123d36c9e4bb13db13da",
      "in_reply_to_id": 2156776849,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I was long overdue for my biannual confusion about (dynamic) memory usage, but luckily here it is. It seems like I got it entirely backwards in my previous comment. The memory pointed to by `std::source_location` is static, so I don't think we need to account for any of it beyond what the `memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>))` statement is already doing.\r\n\r\nOrthogonal, but since we're touching the line anyway: dynamic memory usage of `std::string` should be measured with `.capacity()` instead of `.size()`.  Or even better, use the [`DynamicUsage(const std::string&)`](https://github.com/bitcoin/bitcoin/blob/154b98a7aaae248f5d40ca567d1ec51410d09bae/src/memusage.h#L94) function we already have to also account for small string optimization, which, of course, is totally a thing.\r\n\r\nSo the function could become:\r\n\r\n```cpp\r\nstatic size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\r\n{\r\n    return memusage::DynamicUsage(buflog.str) +\r\n           memusage::DynamicUsage(buflog.threadname) +\r\n           memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\r\n}\r\n```\r\n\r\nAll in all, this should mean that thanks to ca0c1a7a9ce9198c950e123d36c9e4bb13db13da we can now buffer quite a bit more messages within our 1MB limit. Obviously not going to change anything meaningful, but wouldn't hurt to add a line to commit msg to highlight that.",
      "created_at": "2025-06-19T15:46:37Z",
      "updated_at": "2025-06-19T15:46:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2157303508",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2157303508"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162510522",
      "pull_request_review_id": 2951505240,
      "id": 2162510522,
      "node_id": "PRRC_kwDOABII586A5Uq6",
      "diff_hunk": "@@ -364,17 +373,58 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+}\n+\n+bool BCLog::LogRateLimiter::NeedsRateLimiting(const std::source_location& source_loc, std::string& str)\n+{\n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    // Check to see if we were rate limited before calling MaybeResetWindow.\n+    was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+\n+    // If the window has elapsed, then we need to clear the unordered map and set.\n+    MaybeResetWindow();\n+\n+    is_ratelimited = !m_source_locations[source_loc].Consume(str.size());\n+\n+    if (!is_ratelimited && was_ratelimited) {\n+        uint64_t dropped_bytes = m_source_locations[source_loc].GetDroppedBytes();\n+\n+        str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\n+                                \"(%d MiB) were dropped during the last hour.\\n\",\n+                                source_loc.file_name(), source_loc.line(), source_loc.function_name(),\n+                                dropped_bytes / (1024 * 1024)));",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 66,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "in_reply_to_id": 2131861828,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Deciding to keep as-is",
      "created_at": "2025-06-23T20:50:35Z",
      "updated_at": "2025-06-23T20:50:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2162510522",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162510522"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": 396,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 399,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162510738",
      "pull_request_review_id": 2951505581,
      "id": 2162510738,
      "node_id": "PRRC_kwDOABII586A5UuS",
      "diff_hunk": "@@ -364,17 +373,58 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+}\n+\n+bool BCLog::LogRateLimiter::NeedsRateLimiting(const std::source_location& source_loc, std::string& str)\n+{\n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    // Check to see if we were rate limited before calling MaybeResetWindow.\n+    was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+\n+    // If the window has elapsed, then we need to clear the unordered map and set.\n+    MaybeResetWindow();\n+\n+    is_ratelimited = !m_source_locations[source_loc].Consume(str.size());\n+\n+    if (!is_ratelimited && was_ratelimited) {\n+        uint64_t dropped_bytes = m_source_locations[source_loc].GetDroppedBytes();\n+\n+        str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\n+                                \"(%d MiB) were dropped during the last hour.\\n\",\n+                                source_loc.file_name(), source_loc.line(), source_loc.function_name(),\n+                                dropped_bytes / (1024 * 1024)));\n+    } else if (is_ratelimited && !was_ratelimited) {\n+        // Logging from this source location will be suppressed until the current window resets.\n+        m_suppressed_locations.insert(source_loc);\n+\n+        str.insert(0, strprintf(\"Excessive logging detected from %s:%d (%s): >%d MiB logged during the last hour.\"\n+                                \"Suppressing logging to disk from this source location for up to one hour. \"\n+                                \"Console logging unaffected. Last log entry.\",\n+                                source_loc.file_name(), source_loc.line(), source_loc.function_name(),\n+                                WINDOW_MAX_BYTES / (1024 * 1024)));\n+    }\n+\n+    // To avoid confusion caused by dropped log messages when debugging an issue,\n+    // we prefix log lines with \"[*]\" when there are any suppressed source locations.\n+    if (m_suppressed_locations.size() > 0) {\n+        str.insert(0, \"[*] \");\n+    }\n+\n+    return was_ratelimited && is_ratelimited;\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, const std::source_location& source_loc, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n {\n     if (!str.ends_with('\\n')) str.push_back('\\n');\n \n     str.insert(0, GetLogPrefix(category, level));\n \n     if (m_log_sourcelocations) {\n-        str.insert(0, strprintf(\"[%s:%d] [%s] \", RemovePrefixView(source_file, \"./\"), source_line, logging_function));\n+        str.insert(0, strprintf(\"[%s:%d] [%s] \", RemovePrefixView(source_loc.file_name(), \"./\"), source_loc.line(), source_loc.function_name()));",
      "path": "src/logging.cpp",
      "position": 91,
      "original_position": 96,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "911ee520c843b885a2ac01c88b4da15d2136fbc1",
      "in_reply_to_id": 2131883418,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-06-23T20:50:45Z",
      "updated_at": "2025-06-23T20:50:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2162510738",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162510738"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 420,
      "original_line": 420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162511290",
      "pull_request_review_id": 2951506333,
      "id": 2162511290,
      "node_id": "PRRC_kwDOABII586A5U26",
      "diff_hunk": "@@ -31,6 +35,24 @@ extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n+struct SourceLocationEqual {\n+    bool operator()(const std::source_location& lhs, const std::source_location& rhs) const noexcept\n+    {\n+        return lhs.line() == rhs.line() && strcmp(lhs.file_name(), rhs.file_name()) == 0;\n+    }\n+};\n+\n+struct SourceLocationHasher {\n+    size_t operator()(const std::source_location& s) const noexcept\n+    {\n+        // Use CSipHasher(0, 0) as a simple way to get uniform distribution.\n+        return static_cast<size_t>(CSipHasher(0, 0)\n+                                       .Write(std::hash<std::string_view>{}(s.file_name()))\n+                                       .Write(std::hash<int>{}(s.line()))",
      "path": "src/logging.h",
      "position": null,
      "original_position": 40,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "in_reply_to_id": 2156708724,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yup good catch",
      "created_at": "2025-06-23T20:51:04Z",
      "updated_at": "2025-06-23T20:51:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2162511290",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162511290"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162512264",
      "pull_request_review_id": 2951508140,
      "id": 2162512264,
      "node_id": "PRRC_kwDOABII586A5VGI",
      "diff_hunk": "@@ -364,7 +365,7 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "ca0c1a7a9ce9198c950e123d36c9e4bb13db13da",
      "in_reply_to_id": 2156776849,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice catch, I missed that `std::source_location` was part of `BufferedLog` and therefore included in the `MallocUsage` call.",
      "created_at": "2025-06-23T20:51:49Z",
      "updated_at": "2025-06-23T20:51:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2162512264",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162512264"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162512398",
      "pull_request_review_id": 2951508366,
      "id": 2162512398,
      "node_id": "PRRC_kwDOABII586A5VIO",
      "diff_hunk": "@@ -86,24 +95,34 @@ BOOST_AUTO_TEST_CASE(logging_timer)\n BOOST_FIXTURE_TEST_CASE(logging_LogPrintStr, LogSetup)\n {\n     LogInstance().m_log_sourcelocations = true;\n-    LogInstance().LogPrintStr(\"foo1: bar1\", \"fn1\", \"src1\", 1, BCLog::LogFlags::NET, BCLog::Level::Debug);\n-    LogInstance().LogPrintStr(\"foo2: bar2\", \"fn2\", \"src2\", 2, BCLog::LogFlags::NET, BCLog::Level::Info);\n-    LogInstance().LogPrintStr(\"foo3: bar3\", \"fn3\", \"src3\", 3, BCLog::LogFlags::ALL, BCLog::Level::Debug);\n-    LogInstance().LogPrintStr(\"foo4: bar4\", \"fn4\", \"src4\", 4, BCLog::LogFlags::ALL, BCLog::Level::Info);\n-    LogInstance().LogPrintStr(\"foo5: bar5\", \"fn5\", \"src5\", 5, BCLog::LogFlags::NONE, BCLog::Level::Debug);\n-    LogInstance().LogPrintStr(\"foo6: bar6\", \"fn6\", \"src6\", 6, BCLog::LogFlags::NONE, BCLog::Level::Info);\n+    std::vector<std::source_location> source_locs = {\n+        std::source_location::current(),\n+        std::source_location::current(),\n+        std::source_location::current(),\n+        std::source_location::current(),\n+        std::source_location::current(),\n+        std::source_location::current(),\n+    };\n+    LogInstance().LogPrintStr(\"foo1: bar1\", std::move(source_locs[0]), BCLog::LogFlags::NET, BCLog::Level::Debug, /*should_ratelimit=*/false);\n+    LogInstance().LogPrintStr(\"foo2: bar2\", std::move(source_locs[1]), BCLog::LogFlags::NET, BCLog::Level::Info, /*should_ratelimit=*/false);\n+    LogInstance().LogPrintStr(\"foo3: bar3\", std::move(source_locs[2]), BCLog::LogFlags::ALL, BCLog::Level::Debug, /*should_ratelimit=*/false);\n+    LogInstance().LogPrintStr(\"foo4: bar4\", std::move(source_locs[3]), BCLog::LogFlags::ALL, BCLog::Level::Info, /*should_ratelimit=*/false);\n+    LogInstance().LogPrintStr(\"foo5: bar5\", std::move(source_locs[4]), BCLog::LogFlags::NONE, BCLog::Level::Debug, /*should_ratelimit=*/false);\n+    LogInstance().LogPrintStr(\"foo6: bar6\", std::move(source_locs[5]), BCLog::LogFlags::NONE, BCLog::Level::Info, /*should_ratelimit=*/false);\n     std::ifstream file{tmp_log_path};\n     std::vector<std::string> log_lines;\n     for (std::string log; std::getline(file, log);) {\n         log_lines.push_back(log);\n     }\n+    std::string file_name = util::RemovePrefix(source_locs[0].file_name(), \"./\");\n+    std::string function_name{source_locs[0].function_name()};\n     std::vector<std::string> expected = {\n-        \"[src1:1] [fn1] [net] foo1: bar1\",\n-        \"[src2:2] [fn2] [net:info] foo2: bar2\",\n-        \"[src3:3] [fn3] [debug] foo3: bar3\",\n-        \"[src4:4] [fn4] foo4: bar4\",\n-        \"[src5:5] [fn5] [debug] foo5: bar5\",\n-        \"[src6:6] [fn6] foo6: bar6\",\n+        \"[\" + file_name + \":\" + util::ToString(source_locs[0].line()) + \"] [\" + function_name + \"] [net] foo1: bar1\",\n+        \"[\" + file_name + \":\" + util::ToString(source_locs[1].line()) + \"] [\" + function_name + \"] [net:info] foo2: bar2\",\n+        \"[\" + file_name + \":\" + util::ToString(source_locs[2].line()) + \"] [\" + function_name + \"] [debug] foo3: bar3\",\n+        \"[\" + file_name + \":\" + util::ToString(source_locs[3].line()) + \"] [\" + function_name + \"] foo4: bar4\",\n+        \"[\" + file_name + \":\" + util::ToString(source_locs[4].line()) + \"] [\" + function_name + \"] [debug] foo5: bar5\",\n+        \"[\" + file_name + \":\" + util::ToString(source_locs[5].line()) + \"] [\" + function_name + \"] foo6: bar6\",",
      "path": "src/test/logging_tests.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b7d9c669cadf666f595a3e20ee3726a9ede88acd",
      "in_reply_to_id": 2156819515,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2025-06-23T20:51:55Z",
      "updated_at": "2025-06-23T20:51:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2162512398",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2162512398"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": 117,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163176717",
      "pull_request_review_id": 2952512677,
      "id": 2163176717,
      "node_id": "PRRC_kwDOABII586A73UN",
      "diff_hunk": "@@ -31,6 +35,24 @@ extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n+struct SourceLocationEqual {\n+    bool operator()(const std::source_location& lhs, const std::source_location& rhs) const noexcept\n+    {\n+        return lhs.line() == rhs.line() && strcmp(lhs.file_name(), rhs.file_name()) == 0;",
      "path": "src/logging.h",
      "position": 30,
      "original_position": 30,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I find mixing C++20 code with C API a bit clunky, if you touch again, consider either comparing their `std::string_view` wrappers or maybe even adding such a helper to `string.h` for `const char*` values.\r\n\r\nedit: also note that equality check may be easier to optimize internally than a comparison",
      "created_at": "2025-06-24T07:32:24Z",
      "updated_at": "2025-06-24T12:36:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163176717",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163176717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 41,
      "original_line": 41,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163179624",
      "pull_request_review_id": 2952512677,
      "id": 2163179624,
      "node_id": "PRRC_kwDOABII586A74Bo",
      "diff_hunk": "@@ -106,6 +108,15 @@ void BCLog::Logger::DisconnectTestLogger()\n     m_msgs_before_open.clear();\n }\n \n+void BCLog::Logger::ResetLimiter()\n+{\n+    StdLockGuard scoped_lock(m_cs);\n+    const auto now{NodeClock::now()};\n+    m_limiter.m_last_reset = now;",
      "path": "src/logging.cpp",
      "position": 34,
      "original_position": 34,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I understand when the time is split off from the measured code to make sure it's accurate - but I don't see how that's the case here, consider inlining it:\r\n```suggestion\r\n    m_limiter.m_last_reset = NodeClock::now();\r\n```",
      "created_at": "2025-06-24T07:34:01Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163179624",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163179624"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": 114,
      "original_start_line": 114,
      "start_side": "RIGHT",
      "line": 115,
      "original_line": 115,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163198581",
      "pull_request_review_id": 2952512677,
      "id": 2163198581,
      "node_id": "PRRC_kwDOABII586A78p1",
      "diff_hunk": "@@ -248,32 +335,38 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n         } catch (tinyformat::format_error& fmterr) {\n             log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\n         }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line, flag, level);\n+        LogInstance().LogPrintStr(log_msg, std::move(source_loc), flag, level, should_ratelimit);\n     }\n }\n \n-#define LogPrintLevel_(category, level, ...) LogPrintFormatInternal(__func__, __FILE__, __LINE__, category, level, __VA_ARGS__)\n+#define LogPrintLevel_(category, level, should_ratelimit, ...) LogPrintFormatInternal(std::source_location::current(), category, level, should_ratelimit, __VA_ARGS__)\n \n-// Log unconditionally.\n+// Log unconditionally. Uses basic rate limiting to mitigate disk filling attacks.",
      "path": "src/logging.h",
      "position": 194,
      "original_position": 194,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems to me the first two sentences contradict each other now: \"log unconditionally, unless it doesn't fulfill the rate limiting condition\"",
      "created_at": "2025-06-24T07:44:10Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163198581",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163198581"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 344,
      "original_line": 344,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163209427",
      "pull_request_review_id": 2952512677,
      "id": 2163209427,
      "node_id": "PRRC_kwDOABII586A7_TT",
      "diff_hunk": "@@ -248,32 +335,38 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n         } catch (tinyformat::format_error& fmterr) {\n             log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\n         }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line, flag, level);\n+        LogInstance().LogPrintStr(log_msg, std::move(source_loc), flag, level, should_ratelimit);\n     }\n }\n \n-#define LogPrintLevel_(category, level, ...) LogPrintFormatInternal(__func__, __FILE__, __LINE__, category, level, __VA_ARGS__)\n+#define LogPrintLevel_(category, level, should_ratelimit, ...) LogPrintFormatInternal(std::source_location::current(), category, level, should_ratelimit, __VA_ARGS__)\n \n-// Log unconditionally.\n+// Log unconditionally. Uses basic rate limiting to mitigate disk filling attacks.\n // Be conservative when using functions that unconditionally log to debug.log!\n // It should not be the case that an inbound peer can fill up a user's storage\n // with debug.log entries.\n-#define LogInfo(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Info, __VA_ARGS__)\n-#define LogWarning(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Warning, __VA_ARGS__)\n-#define LogError(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Error, __VA_ARGS__)\n+#define LogInfo(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Info, /*should_ratelimit=*/true, __VA_ARGS__)\n+#define LogWarning(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Warning, /*should_ratelimit=*/true, __VA_ARGS__)\n+#define LogError(...) LogPrintLevel_(BCLog::LogFlags::ALL, BCLog::Level::Error, /*should_ratelimit=*/true, __VA_ARGS__)\n \n // Deprecated unconditional logging.\n #define LogPrintf(...) LogInfo(__VA_ARGS__)\n \n // Use a macro instead of a function for conditional logging to prevent\n // evaluating arguments when logging for the category is not enabled.\n \n-// Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+// Log by prefixing the output with the passed category name and severity level. This can either\n+// log conditionally if the category is allowed or unconditionally if level >= BCLog::Level::Info\n+// is passed. If this function logs unconditionally, logging to disk is rate-limited. This is\n+// important so that callers don't need to worry about accidentally introducing a disk-fill\n+// vulnerability if level >= Info is used. Additionally, users specifying -debug are assumed to be\n+// developers or power users who are aware that -debug may cause excessive disk usage due to logging.",
      "path": "src/logging.h",
      "position": 222,
      "original_position": 222,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's a reasonable assumption - if a bug could trigger debug logging, we'd likely have bigger problems I guess",
      "created_at": "2025-06-24T07:49:01Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163209427",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163209427"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 363,
      "original_line": 363,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163211212",
      "pull_request_review_id": 2952512677,
      "id": 2163211212,
      "node_id": "PRRC_kwDOABII586A7_vM",
      "diff_hunk": "@@ -60,6 +67,9 @@ struct LogSetup : public BasicTestingSetup {\n \n         LogInstance().SetLogLevel(BCLog::Level::Debug);\n         LogInstance().SetCategoryLogLevel({});\n+\n+        // Prevent tests from getting rate-limited.",
      "path": "src/test/logging_tests.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Does this \"prevent\" rate limiting or just allows one more megabyte?",
      "created_at": "2025-06-24T07:50:00Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163211212",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163211212"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163230657",
      "pull_request_review_id": 2952512677,
      "id": 2163230657,
      "node_id": "PRRC_kwDOABII586A8EfB",
      "diff_hunk": "@@ -86,24 +96,35 @@ BOOST_AUTO_TEST_CASE(logging_timer)\n BOOST_FIXTURE_TEST_CASE(logging_LogPrintStr, LogSetup)\n {\n     LogInstance().m_log_sourcelocations = true;\n-    LogInstance().LogPrintStr(\"foo1: bar1\", \"fn1\", \"src1\", 1, BCLog::LogFlags::NET, BCLog::Level::Debug);\n-    LogInstance().LogPrintStr(\"foo2: bar2\", \"fn2\", \"src2\", 2, BCLog::LogFlags::NET, BCLog::Level::Info);\n-    LogInstance().LogPrintStr(\"foo3: bar3\", \"fn3\", \"src3\", 3, BCLog::LogFlags::ALL, BCLog::Level::Debug);\n-    LogInstance().LogPrintStr(\"foo4: bar4\", \"fn4\", \"src4\", 4, BCLog::LogFlags::ALL, BCLog::Level::Info);\n-    LogInstance().LogPrintStr(\"foo5: bar5\", \"fn5\", \"src5\", 5, BCLog::LogFlags::NONE, BCLog::Level::Debug);\n-    LogInstance().LogPrintStr(\"foo6: bar6\", \"fn6\", \"src6\", 6, BCLog::LogFlags::NONE, BCLog::Level::Info);\n+    std::vector<std::source_location> source_locs = {\n+        std::source_location::current(),\n+        std::source_location::current(),\n+        std::source_location::current(),\n+        std::source_location::current(),\n+        std::source_location::current(),\n+        std::source_location::current(),\n+    };",
      "path": "src/test/logging_tests.cpp",
      "position": 47,
      "original_position": 47,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this seems a bit hacky to me - this is basically a parameterized test where we implicitly verify the inputs produce the desired outputs, line-by-line. It could make sense to store it in a way that indicates more clearly which outputs we're expecting for which inputs.\r\n\r\nWe do need separate `::current()` calls to capture that the lines are assigned properly, we could add those to the parameterized test values as well.\r\n\r\nI also find it a bit awkward that we're concatenating the result of a `tfm::format` with strings instead of having a final formatter.\r\n\r\nLastly, do we really need the `RemovePrefix` here, given that we know the exact file structiure?\r\n\r\nPlease consider something like this for clarity:\r\n```C++\r\nBOOST_FIXTURE_TEST_CASE(logging_LogPrintStr, LogSetup)\r\n{\r\n    LogInstance().m_log_sourcelocations = true;\r\n\r\n    struct Case {\r\n        std::string msg;\r\n        BCLog::LogFlags cat;\r\n        BCLog::Level level;\r\n        std::string prefix;\r\n        std::source_location loc;\r\n    };\r\n\r\n    std::vector<Case> cases = {\r\n        {\"foo1: bar1\", BCLog::NET,  BCLog::Level::Debug, \"[net] \",      std::source_location::current()},\r\n        {\"foo2: bar2\", BCLog::NET,  BCLog::Level::Info,  \"[net:info] \", std::source_location::current()},\r\n        {\"foo3: bar3\", BCLog::ALL,  BCLog::Level::Debug, \"[debug] \",    std::source_location::current()},\r\n        {\"foo4: bar4\", BCLog::ALL,  BCLog::Level::Info,  \"\",            std::source_location::current()},\r\n        {\"foo5: bar5\", BCLog::NONE, BCLog::Level::Debug, \"[debug] \",    std::source_location::current()},\r\n        {\"foo6: bar6\", BCLog::NONE, BCLog::Level::Info,  \"\",            std::source_location::current()},\r\n    };\r\n\r\n    std::vector<std::string> expected;\r\n    for (auto& [msg, cat, level, prefix, loc] : cases) {\r\n        expected.push_back(tfm::format(\"[%s:%s] [%s] %s%s\", loc.file_name(), loc.line(), loc.function_name(), prefix, msg));\r\n        LogInstance().LogPrintStr(msg, std::move(loc), cat, level, /*should_ratelimit=*/false);\r\n    }\r\n    std::ifstream file{tmp_log_path};\r\n    std::string line;\r\n    for (const auto& exp : expected) {\r\n        BOOST_REQUIRE(std::getline(file, line));\r\n        BOOST_CHECK_EQUAL(line, exp);\r\n    }\r\n    BOOST_CHECK(!std::getline(file, line));\r\n}\r\n```",
      "created_at": "2025-06-24T07:59:22Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163230657",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163230657"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": 99,
      "original_start_line": 99,
      "start_side": "RIGHT",
      "line": 106,
      "original_line": 106,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163285496",
      "pull_request_review_id": 2952512677,
      "id": 2163285496,
      "node_id": "PRRC_kwDOABII586A8R34",
      "diff_hunk": "@@ -276,4 +297,126 @@ BOOST_FIXTURE_TEST_CASE(logging_Conf, LogSetup)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(logging_sourcelocation_counter)",
      "path": "src/test/logging_tests.cpp",
      "position": 82,
      "original_position": 82,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "👍 nice and clear test",
      "created_at": "2025-06-24T08:26:06Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163285496",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163285496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 300,
      "original_line": 300,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163309586",
      "pull_request_review_id": 2952512677,
      "id": 2163309586,
      "node_id": "PRRC_kwDOABII586A8XwS",
      "diff_hunk": "@@ -31,6 +35,24 @@ extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n+struct SourceLocationEqual {\n+    bool operator()(const std::source_location& lhs, const std::source_location& rhs) const noexcept\n+    {\n+        return lhs.line() == rhs.line() && strcmp(lhs.file_name(), rhs.file_name()) == 0;\n+    }\n+};\n+\n+struct SourceLocationHasher {\n+    size_t operator()(const std::source_location& s) const noexcept\n+    {\n+        // Use CSipHasher(0, 0) as a simple way to get uniform distribution.",
      "path": "src/logging.h",
      "position": 37,
      "original_position": 37,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not a fan of dead comments, could we rather extract it to a named variable, something like `CSipHasher uniform(0, 0)` instead of explaining code with text?\r\n\r\n----\r\n\r\n\r\nnit: Maybe my formatter is off, but do we really need to push the formatted lines so far out? ",
      "created_at": "2025-06-24T08:35:36Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163309586",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163309586"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 48,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163313166",
      "pull_request_review_id": 2952512677,
      "id": 2163313166,
      "node_id": "PRRC_kwDOABII586A8YoO",
      "diff_hunk": "@@ -82,15 +104,74 @@ namespace BCLog {\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};",
      "path": "src/logging.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I find this confusing (either the name or the value), by default debug logs aren't displayed...",
      "created_at": "2025-06-24T08:37:18Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163313166",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163313166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 105,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163325418",
      "pull_request_review_id": 2952512677,
      "id": 2163325418,
      "node_id": "PRRC_kwDOABII586A8bnq",
      "diff_hunk": "@@ -82,15 +104,74 @@ namespace BCLog {\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n+    constexpr uint64_t RATELIMIT_MAX_BYTES{1024 * 1024}; // maximum number of bytes that can be logged within one window\n+\n+    //! Keeps track of an individual source location and how many available bytes are left for logging from it.\n+    class SourceLocationCounter",
      "path": "src/logging.h",
      "position": 55,
      "original_position": 55,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "naming nit again: we're not counting the source locations, rather assigning the statistics we collect here to a `std::source_location` later - we're mixing abstraction levels this way, we're naming something based on how we're planning on using it later (instead of what it is or what it does), such as `LogLimitStats` or something similar.",
      "created_at": "2025-06-24T08:43:07Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163325418",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163325418"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 110,
      "original_line": 110,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163341392",
      "pull_request_review_id": 2952512677,
      "id": 2163341392,
      "node_id": "PRRC_kwDOABII586A8fhQ",
      "diff_hunk": "@@ -276,4 +297,126 @@ BOOST_FIXTURE_TEST_CASE(logging_Conf, LogSetup)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(logging_sourcelocation_counter)\n+{\n+    BCLog::SourceLocationCounter counter;\n+\n+    // Check that counter gets initialized correctly.\n+    BOOST_CHECK_EQUAL(counter.GetAvailableBytes(), BCLog::RATELIMIT_MAX_BYTES);\n+    BOOST_CHECK_EQUAL(counter.GetDroppedBytes(), 0ull);\n+\n+    const uint64_t MESSAGE_SIZE{512 * 1024};\n+    BOOST_CHECK(counter.Consume(MESSAGE_SIZE));\n+    BOOST_CHECK_EQUAL(counter.GetAvailableBytes(), BCLog::RATELIMIT_MAX_BYTES - MESSAGE_SIZE);\n+    BOOST_CHECK_EQUAL(counter.GetDroppedBytes(), 0ull);\n+\n+    BOOST_CHECK(counter.Consume(MESSAGE_SIZE));\n+    BOOST_CHECK_EQUAL(counter.GetAvailableBytes(), BCLog::RATELIMIT_MAX_BYTES - MESSAGE_SIZE * 2);\n+    BOOST_CHECK_EQUAL(counter.GetDroppedBytes(), 0ull);\n+\n+    // Consuming more bytes after already having consumed 1MB should fail.\n+    BOOST_CHECK(!counter.Consume(500));\n+    BOOST_CHECK_EQUAL(counter.GetAvailableBytes(), 0ull);\n+    BOOST_CHECK_EQUAL(counter.GetDroppedBytes(), 500ull);\n+}\n+\n+void LogFromLocation(int location, std::string message)\n+{\n+    switch (location) {\n+    case 0:\n+        LogInfo(\"%s\\n\", message);\n+        break;\n+    case 1:\n+        LogInfo(\"%s\\n\", message);\n+        break;",
      "path": "src/test/logging_tests.cpp",
      "position": 113,
      "original_position": 113,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "These two cases are basically the same and they depend on a magic int that I will have to tie to some other integers somewhere else to understand what it means. \r\nCould we make this a parameterized test as well, maybe with a `std::function` and more type safety instead of an `int` with only **4** allowed values ",
      "created_at": "2025-06-24T08:50:37Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163341392",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163341392"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": 326,
      "original_start_line": 326,
      "start_side": "RIGHT",
      "line": 331,
      "original_line": 331,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163349298",
      "pull_request_review_id": 2952512677,
      "id": 2163349298,
      "node_id": "PRRC_kwDOABII586A8hcy",
      "diff_hunk": "@@ -276,4 +297,126 @@ BOOST_FIXTURE_TEST_CASE(logging_Conf, LogSetup)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(logging_sourcelocation_counter)\n+{\n+    BCLog::SourceLocationCounter counter;\n+\n+    // Check that counter gets initialized correctly.\n+    BOOST_CHECK_EQUAL(counter.GetAvailableBytes(), BCLog::RATELIMIT_MAX_BYTES);\n+    BOOST_CHECK_EQUAL(counter.GetDroppedBytes(), 0ull);\n+\n+    const uint64_t MESSAGE_SIZE{512 * 1024};\n+    BOOST_CHECK(counter.Consume(MESSAGE_SIZE));\n+    BOOST_CHECK_EQUAL(counter.GetAvailableBytes(), BCLog::RATELIMIT_MAX_BYTES - MESSAGE_SIZE);\n+    BOOST_CHECK_EQUAL(counter.GetDroppedBytes(), 0ull);\n+\n+    BOOST_CHECK(counter.Consume(MESSAGE_SIZE));\n+    BOOST_CHECK_EQUAL(counter.GetAvailableBytes(), BCLog::RATELIMIT_MAX_BYTES - MESSAGE_SIZE * 2);\n+    BOOST_CHECK_EQUAL(counter.GetDroppedBytes(), 0ull);\n+\n+    // Consuming more bytes after already having consumed 1MB should fail.\n+    BOOST_CHECK(!counter.Consume(500));\n+    BOOST_CHECK_EQUAL(counter.GetAvailableBytes(), 0ull);\n+    BOOST_CHECK_EQUAL(counter.GetDroppedBytes(), 500ull);\n+}\n+\n+void LogFromLocation(int location, std::string message)\n+{\n+    switch (location) {\n+    case 0:\n+        LogInfo(\"%s\\n\", message);\n+        break;\n+    case 1:\n+        LogInfo(\"%s\\n\", message);\n+        break;\n+    case 2:\n+        LogPrintLevel(BCLog::LogFlags::NONE, BCLog::Level::Info, \"%s\\n\", message);\n+        break;\n+    case 3:\n+        LogPrintLevel(BCLog::LogFlags::ALL, BCLog::Level::Info, \"%s\\n\", message);\n+        break;\n+    }\n+}\n+\n+void LogFromLocationAndExpect(int location, std::string message, std::string expect)\n+{\n+    ASSERT_DEBUG_LOG(expect);\n+    LogFromLocation(location, message);\n+}\n+\n+BOOST_FIXTURE_TEST_CASE(rate_limiting, LogSetup)\n+{\n+    bool prev_log_timestamps = LogInstance().m_log_timestamps;\n+    LogInstance().m_log_timestamps = false;\n+    bool prev_log_sourcelocations = LogInstance().m_log_sourcelocations;\n+    LogInstance().m_log_sourcelocations = false;\n+    bool prev_log_threadnames = LogInstance().m_log_threadnames;\n+    LogInstance().m_log_threadnames = false;\n+\n+    // Log 1024-character lines (1023 plus newline) to make the math simple.\n+    std::string log_message(1023, 'a');\n+\n+    SetMockTime(std::chrono::hours{1});\n+\n+    // Reset m_limiter so that it uses the above mock time for m_last_reset.\n+    LogInstance().ResetLimiter();\n+\n+    std::string utf8_path{LogInstance().m_file_path.utf8string()};\n+    const char* log_path{utf8_path.c_str()};\n+\n+    // Use GetFileSize because fs::file_size may require a flush to be accurate.\n+    std::streamsize log_file_size{static_cast<std::streamsize>(GetFileSize(log_path))};\n+\n+    // Logging 1 MiB should be allowed.",
      "path": "src/test/logging_tests.cpp",
      "position": 152,
      "original_position": 152,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "can we make this value parameterizable instead of referencing a value in a comment?\r\nIt's not trivial that the `1024` (or 512 + 512 in other places) has to coincide with the `1_MiB` in another place.",
      "created_at": "2025-06-24T08:53:57Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163349298",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163349298"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 370,
      "original_line": 370,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163352258",
      "pull_request_review_id": 2952512677,
      "id": 2163352258,
      "node_id": "PRRC_kwDOABII586A8iLC",
      "diff_hunk": "@@ -2976,15 +2976,17 @@ static void UpdateTipLog(\n {\n \n     AssertLockHeld(::cs_main);\n-    LogPrintf(\"%s%s: new best=%s height=%d version=0x%08x log2_work=%f tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)%s\\n\",\n-        prefix, func_name,\n-        tip->GetBlockHash().ToString(), tip->nHeight, tip->nVersion,\n-        log(tip->nChainWork.getdouble()) / log(2.0), tip->m_chain_tx_count,\n-        FormatISO8601DateTime(tip->GetBlockTime()),\n-        chainman.GuessVerificationProgress(tip),\n-        coins_tip.DynamicMemoryUsage() * (1.0 / (1 << 20)),\n-        coins_tip.GetCacheSize(),\n-        !warning_messages.empty() ? strprintf(\" warning='%s'\", warning_messages) : \"\");\n+\n+    // Disable rate limiting in LogPrintLevel_ so that this location is not rate limited during IBD.",
      "path": "src/validation.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "the code already states `/*should_ratelimit=*/false`, there's no point in repeating that a few more times in a comment",
      "created_at": "2025-06-24T08:55:12Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163352258",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163352258"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2980,
      "original_line": 2980,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163363232",
      "pull_request_review_id": 2952512677,
      "id": 2163363232,
      "node_id": "PRRC_kwDOABII586A8k2g",
      "diff_hunk": "@@ -82,6 +104,65 @@ namespace BCLog {\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n+    constexpr uint64_t RATELIMIT_MAX_BYTES{1024 * 1024}; // maximum number of bytes that can be logged within one window\n+\n+    //! Keeps track of an individual source location and how many available bytes are left for logging from it.\n+    class SourceLocationCounter\n+    {\n+    private:\n+        //! Remaining bytes in the current window interval.\n+        uint64_t m_available_bytes{RATELIMIT_MAX_BYTES};\n+        //! Number of bytes that were not consumed within the current window.\n+        uint64_t m_dropped_bytes{0};\n+\n+    public:\n+        //! Consume bytes from the window if enough bytes are available.\n+        //!\n+        //! Returns whether or not enough bytes were available.",
      "path": "src/logging.h",
      "position": 66,
      "original_position": 66,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "40298a86d21a4a47cb297a96d3cbaa2714acc7fd",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n        //! Returns whether enough bytes were available.\r\n```",
      "created_at": "2025-06-24T08:59:41Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163363232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163363232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 121,
      "original_line": 121,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163370546",
      "pull_request_review_id": 2952512677,
      "id": 2163370546,
      "node_id": "PRRC_kwDOABII586A8moy",
      "diff_hunk": "@@ -492,6 +522,40 @@ void BCLog::Logger::ShrinkDebugFile()\n         fclose(file);\n }\n \n+void BCLog::LogRateLimiter::MaybeResetWindow(std::string& str)\n+{\n+    const auto now{NodeClock::now()};\n+    if ((now - m_last_reset) >= WINDOW_SIZE) {\n+        m_last_reset = now;\n+\n+        // Iterate through m_suppressed_locations and log that we're resetting the window for each\n+        // suppressed location.",
      "path": "src/logging.cpp",
      "position": 154,
      "original_position": 48,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "40298a86d21a4a47cb297a96d3cbaa2714acc7fd",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The comment duplicates the code, this is already clear from the method name and from what follows.",
      "created_at": "2025-06-24T09:03:09Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163370546",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163370546"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": 543,
      "original_start_line": 531,
      "start_side": "RIGHT",
      "line": 544,
      "original_line": 532,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163389932",
      "pull_request_review_id": 2952512677,
      "id": 2163389932,
      "node_id": "PRRC_kwDOABII586A8rXs",
      "diff_hunk": "@@ -82,6 +104,65 @@ namespace BCLog {\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n+    constexpr uint64_t RATELIMIT_MAX_BYTES{1024 * 1024}; // maximum number of bytes that can be logged within one window",
      "path": "src/logging.h",
      "position": 52,
      "original_position": 52,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "40298a86d21a4a47cb297a96d3cbaa2714acc7fd",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "do we need to mix the two system here, base 1000 with base 1024?",
      "created_at": "2025-06-24T09:10:15Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163389932",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163389932"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": 106,
      "original_start_line": 106,
      "start_side": "RIGHT",
      "line": 107,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163415514",
      "pull_request_review_id": 2952512677,
      "id": 2163415514,
      "node_id": "PRRC_kwDOABII586A8xna",
      "diff_hunk": "@@ -364,7 +366,9 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return memusage::DynamicUsage(buflog.str) +",
      "path": "src/logging.cpp",
      "position": 47,
      "original_position": 31,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "d41a39e43c219eb0b06b8df2c2c5d24baaf015c4",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this memory usage change needs a commit message explanation in d41a39e43c219eb0b06b8df2c2c5d24baaf015c4 (it explains why `logging_function` counting was removed, but not why `source_file` was as far as I can tell)\r\n\r\n----\r\n\r\nDid you validate in any way that this is indeed representative of the memory consumption? Or it's just a guess anyway, so it's not important?",
      "created_at": "2025-06-24T09:16:05Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163415514",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163415514"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 378,
      "original_line": 369,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163433402",
      "pull_request_review_id": 2952512677,
      "id": 2163433402,
      "node_id": "PRRC_kwDOABII586A81-6",
      "diff_hunk": "@@ -414,13 +418,13 @@ void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags catego\n     str.insert(0, LogTimestampStr(now, mocktime));",
      "path": "src/logging.cpp",
      "position": 96,
      "original_position": 55,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "d41a39e43c219eb0b06b8df2c2c5d24baaf015c4",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "isn't it expensive to insert so often in front of the string?",
      "created_at": "2025-06-24T09:22:48Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163433402",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163433402"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 427,
      "original_line": 418,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163441070",
      "pull_request_review_id": 2952512677,
      "id": 2163441070,
      "node_id": "PRRC_kwDOABII586A832u",
      "diff_hunk": "@@ -82,7 +82,7 @@ def test_negated_config(self):\n \n         self.log.debug('Verifying that disabling of the config file means garbage inside of it does ' \\\n             'not prevent the node from starting, and message about existing config file is logged')\n-        ignored_file_message = [f'[InitConfig] Data directory \"{self.nodes[0].datadir_path}\" contains a \"bitcoin.conf\" file which is explicitly ignored using -noconf.']\n+        ignored_file_message = [f'Data directory \"{self.nodes[0].datadir_path}\" contains a \"bitcoin.conf\" file which is explicitly ignored using -noconf.']",
      "path": "test/functional/feature_config_args.py",
      "position": 5,
      "original_position": 5,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "d41a39e43c219eb0b06b8df2c2c5d24baaf015c4",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can you please explain in the commit message which change caused the removal of `[InitConfig]` here?",
      "created_at": "2025-06-24T09:26:26Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163441070",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163441070"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 85,
      "original_line": 85,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163453570",
      "pull_request_review_id": 2952512677,
      "id": 2163453570,
      "node_id": "PRRC_kwDOABII586A866C",
      "diff_hunk": "",
      "path": "src/logging.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b44d31455ad46ca3ed95690dfc0a913445b9c1c9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Commit message claims `a source location can log up to 1MiB of data`, but code states `constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging` - I'm confused why we have this discrepancy ",
      "created_at": "2025-06-24T09:32:41Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163453570",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163453570"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163455426",
      "pull_request_review_id": 2952512677,
      "id": 2163455426,
      "node_id": "PRRC_kwDOABII586A87XC",
      "diff_hunk": "@@ -457,6 +466,7 @@ void BCLog::Logger::LogPrintStr_(std::string_view str, std::source_location&& so\n     }\n \n     FormatLogStrInPlace(str_prefixed, category, level, source_loc, util::ThreadGetInternalName(), SystemClock::now(), GetMockTime());\n+    bool ratelimit = should_ratelimit && m_limiter.NeedsRateLimiting(source_loc, str_prefixed);",
      "path": "src/logging.cpp",
      "position": 130,
      "original_position": 46,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b44d31455ad46ca3ed95690dfc0a913445b9c1c9",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "can we move this closer to its usage?",
      "created_at": "2025-06-24T09:33:35Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163455426",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163455426"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 469,
      "original_line": 469,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163470452",
      "pull_request_review_id": 2952512677,
      "id": 2163470452,
      "node_id": "PRRC_kwDOABII586A8_B0",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm doing a reindex benchmark to check if the current implementation has any performance burden\r\n\r\nEdit: reindexing until 900k indicates there's no slowdown caused by this change\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\nCOMMITS=\"e95bfc1d537e06d223dfcaec510181aa3d3f8386 f29b081b9277332523b7025394cad15b02cc53d2\"; \\\r\nSTOP=900000; DBCACHE=2500; \\\r\nCC=gcc; CXX=g++; \\\r\nBASE_DIR=\"/mnt/my_storage\"; DATA_DIR=\"$BASE_DIR/BitcoinData\"; LOG_DIR=\"$BASE_DIR/logs\"; \\\r\n(echo \"\"; for c in $COMMITS; do git fetch -q origin $c && git log -1 --pretty='%h %s' $c || exit 1; done; echo \"\") && \\\r\nhyperfine \\\r\n  --sort command \\\r\n  --runs 1 \\\r\n  --export-json \"$BASE_DIR/rdx-$(sed -E 's/(\\w{8})\\w+ ?/\\1-/g;s/-$//'<<<\"$COMMITS\")-$STOP-$DBCACHE-$CC.json\" \\\r\n  --parameter-list COMMIT ${COMMITS// /,} \\\r\n  --prepare \"killall bitcoind; rm -f $DATA_DIR/debug.log; git checkout {COMMIT}; git clean -fxd; git reset --hard && \\\r\n    cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release && ninja -C build bitcoind && \\\r\n    ./build/bin/bitcoind -datadir=$DATA_DIR -stopatheight=$STOP -dbcache=1000 -printtoconsole=0; sleep 10\" \\\r\n  --cleanup \"cp $DATA_DIR/debug.log $LOG_DIR/debug-{COMMIT}-$(date +%s).log\" \\\r\n  \"COMPILER=$CC ./build/bin/bitcoind -datadir=$DATA_DIR -stopatheight=$STOP -dbcache=$DBCACHE -reindex -blocksonly -connect=0 -printtoconsole=0\"\r\n```\r\n\r\n> e95bfc1d53 Merge bitcoin/bitcoin#32797: doc: archive 28.2 release notes\r\n> f29b081b92 doc: add release notes for new rate limiting logging behavior\r\n\r\n```python\r\nBenchmark 1: COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=900000 -dbcache=2500 -reindex -blocksonly -connect=0 -printtoconsole=0 (COMMIT = e95bfc1d537e06d223dfcaec510181aa3d3f8386)\r\n  Time (abs ≡):        29033.291 s               [User: 43597.672 s, System: 1644.619 s]\r\n \r\nBenchmark 2: COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=900000 -dbcache=2500 -reindex -blocksonly -connect=0 -printtoconsole=0 (COMMIT = f29b081b9277332523b7025394cad15b02cc53d2)\r\n  Time (abs ≡):        28875.472 s               [User: 43552.019 s, System: 1541.380 s]\r\n```\r\n \r\n```python\r\nRelative speed comparison\r\n        1.01          COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=900000 -dbcache=2500 -reindex -blocksonly -connect=0 -printtoconsole=0 (COMMIT = e95bfc1d537e06d223dfcaec510181aa3d3f8386)\r\n        1.00          COMPILER=gcc ./build/bin/bitcoind -datadir=/mnt/my_storage/BitcoinData -stopatheight=900000 -dbcache=2500 -reindex -blocksonly -connect=0 -printtoconsole=0 (COMMIT = f29b081b9277332523b7025394cad15b02cc53d2)\r\n```\r\n\r\n</details>",
      "created_at": "2025-06-24T09:41:15Z",
      "updated_at": "2025-06-25T08:07:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163470452",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163470452"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163481929",
      "pull_request_review_id": 2952512677,
      "id": 2163481929,
      "node_id": "PRRC_kwDOABII586A9B1J",
      "diff_hunk": "@@ -364,7 +365,7 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + strlen(buflog.source_loc.function_name()) + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 28,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "ca0c1a7a9ce9198c950e123d36c9e4bb13db13da",
      "in_reply_to_id": 2156776849,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "👍 ",
      "created_at": "2025-06-24T09:47:03Z",
      "updated_at": "2025-06-24T09:49:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163481929",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163481929"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163614334",
      "pull_request_review_id": 2953239598,
      "id": 2163614334,
      "node_id": "PRRC_kwDOABII586A9iJ-",
      "diff_hunk": "@@ -31,6 +35,24 @@ extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n+struct SourceLocationEqual {\n+    bool operator()(const std::source_location& lhs, const std::source_location& rhs) const noexcept\n+    {\n+        return lhs.line() == rhs.line() && strcmp(lhs.file_name(), rhs.file_name()) == 0;\n+    }\n+};\n+\n+struct SourceLocationHasher {\n+    size_t operator()(const std::source_location& s) const noexcept\n+    {\n+        // Use CSipHasher(0, 0) as a simple way to get uniform distribution.",
      "path": "src/logging.h",
      "position": 37,
      "original_position": 37,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163309586,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think this is a dead comment, the choice for using siphash over e.g. std::hash is not obvious (to me), and just naming the variable `uniform` would not have been clear to me. Would prefer keeping this as is.",
      "created_at": "2025-06-24T10:49:39Z",
      "updated_at": "2025-06-24T10:49:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163614334",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163614334"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 48,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163620350",
      "pull_request_review_id": 2953249883,
      "id": 2163620350,
      "node_id": "PRRC_kwDOABII586A9jn-",
      "diff_hunk": "@@ -31,6 +35,24 @@ extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n+struct SourceLocationEqual {\n+    bool operator()(const std::source_location& lhs, const std::source_location& rhs) const noexcept\n+    {\n+        return lhs.line() == rhs.line() && strcmp(lhs.file_name(), rhs.file_name()) == 0;\n+    }\n+};\n+\n+struct SourceLocationHasher {\n+    size_t operator()(const std::source_location& s) const noexcept\n+    {\n+        // Use CSipHasher(0, 0) as a simple way to get uniform distribution.",
      "path": "src/logging.h",
      "position": 37,
      "original_position": 37,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163309586,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can we name the variable such that the choice is obvious instead of adding extra comments?",
      "created_at": "2025-06-24T10:51:19Z",
      "updated_at": "2025-06-24T10:51:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163620350",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163620350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 48,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163626313",
      "pull_request_review_id": 2953259153,
      "id": 2163626313,
      "node_id": "PRRC_kwDOABII586A9lFJ",
      "diff_hunk": "",
      "path": "src/logging.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b44d31455ad46ca3ed95690dfc0a913445b9c1c9",
      "in_reply_to_id": 2163453570,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "They could be the same value, but they're unrelated things, and I don't think it's relevant in this PR. `DEFAULT_MAX_LOG_BUFFER` represents the max size of the buffer that holds log messages (across all locations) that are produced before we start writing them to file. ",
      "created_at": "2025-06-24T10:53:00Z",
      "updated_at": "2025-06-24T10:53:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163626313",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163626313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163635733",
      "pull_request_review_id": 2953273176,
      "id": 2163635733,
      "node_id": "PRRC_kwDOABII586A9nYV",
      "diff_hunk": "",
      "path": "src/logging.cpp",
      "position": 1,
      "original_position": 1,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b44d31455ad46ca3ed95690dfc0a913445b9c1c9",
      "in_reply_to_id": 2163453570,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Misunderstood that part, thanks. The different base part still applies (though I know this isn't uncommon in the code base)",
      "created_at": "2025-06-24T10:55:59Z",
      "updated_at": "2025-06-24T10:56:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163635733",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163635733"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1,
      "original_line": 1,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163644659",
      "pull_request_review_id": 2953285110,
      "id": 2163644659,
      "node_id": "PRRC_kwDOABII586A9pjz",
      "diff_hunk": "@@ -31,6 +35,24 @@ extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n+struct SourceLocationEqual {\n+    bool operator()(const std::source_location& lhs, const std::source_location& rhs) const noexcept\n+    {\n+        return lhs.line() == rhs.line() && strcmp(lhs.file_name(), rhs.file_name()) == 0;\n+    }\n+};\n+\n+struct SourceLocationHasher {\n+    size_t operator()(const std::source_location& s) const noexcept\n+    {\n+        // Use CSipHasher(0, 0) as a simple way to get uniform distribution.",
      "path": "src/logging.h",
      "position": 37,
      "original_position": 37,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163309586,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "By \"dead\" I meant that it doesn't bite back (like code does), it can state absolutely anything and the compiler won't help us. Comments usually seem to me like we've given up on trying to express our design within the boundaries of the language. In a few cases here I think the code can be slightly improved to eliminate the need for extra comments.",
      "created_at": "2025-06-24T10:58:33Z",
      "updated_at": "2025-06-24T10:58:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163644659",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163644659"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 48,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163778896",
      "pull_request_review_id": 2953502925,
      "id": 2163778896,
      "node_id": "PRRC_kwDOABII586A-KVQ",
      "diff_hunk": "@@ -31,6 +35,24 @@ extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n+struct SourceLocationEqual {\n+    bool operator()(const std::source_location& lhs, const std::source_location& rhs) const noexcept\n+    {\n+        return lhs.line() == rhs.line() && strcmp(lhs.file_name(), rhs.file_name()) == 0;\n+    }\n+};\n+\n+struct SourceLocationHasher {\n+    size_t operator()(const std::source_location& s) const noexcept\n+    {\n+        // Use CSipHasher(0, 0) as a simple way to get uniform distribution.",
      "path": "src/logging.h",
      "position": 37,
      "original_position": 37,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163309586,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The choice of a hashing algorithm has many dimensions (distribution, performance, collision resistance, ...). Capturing that rationale in a variable name seems an unrealistic expectation. I'm all for removing dead comments but this seems not the place to me.",
      "created_at": "2025-06-24T12:03:20Z",
      "updated_at": "2025-06-24T12:03:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163778896",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163778896"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 48,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163787286",
      "pull_request_review_id": 2953515067,
      "id": 2163787286,
      "node_id": "PRRC_kwDOABII586A-MYW",
      "diff_hunk": "@@ -31,6 +35,24 @@ extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n+struct SourceLocationEqual {\n+    bool operator()(const std::source_location& lhs, const std::source_location& rhs) const noexcept\n+    {\n+        return lhs.line() == rhs.line() && strcmp(lhs.file_name(), rhs.file_name()) == 0;\n+    }\n+};\n+\n+struct SourceLocationHasher {\n+    size_t operator()(const std::source_location& s) const noexcept\n+    {\n+        // Use CSipHasher(0, 0) as a simple way to get uniform distribution.",
      "path": "src/logging.h",
      "position": 37,
      "original_position": 37,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163309586,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's possible that this isn't the place, but it doesn't currently explain performance or collision resistance either - but if those are importance, maybe we could explain them in the commit message instead.",
      "created_at": "2025-06-24T12:06:10Z",
      "updated_at": "2025-06-24T12:06:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163787286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163787286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 48,
      "original_line": 48,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163788183",
      "pull_request_review_id": 2953516226,
      "id": 2163788183,
      "node_id": "PRRC_kwDOABII586A-MmX",
      "diff_hunk": "@@ -82,6 +104,65 @@ namespace BCLog {\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n+    constexpr uint64_t RATELIMIT_MAX_BYTES{1024 * 1024}; // maximum number of bytes that can be logged within one window",
      "path": "src/logging.h",
      "position": 52,
      "original_position": 52,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "40298a86d21a4a47cb297a96d3cbaa2714acc7fd",
      "in_reply_to_id": 2163389932,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Both are frequently used throughout the codebase. `RATELIMIT_MAX_BYTES` and `DEFAULT_MAX_LOG_BUFFER` are not related to eachother beyond both being used in logging. I don't see any footgun potential between using one or the other, so this seems like an either-is-fine option that can be left to the author to decide, and very quickly becomes bikeshedding otherwise.",
      "created_at": "2025-06-24T12:06:25Z",
      "updated_at": "2025-06-24T12:06:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163788183",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163788183"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": 106,
      "original_start_line": 106,
      "start_side": "RIGHT",
      "line": 107,
      "original_line": 107,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163792560",
      "pull_request_review_id": 2953522901,
      "id": 2163792560,
      "node_id": "PRRC_kwDOABII586A-Nqw",
      "diff_hunk": "@@ -82,15 +104,74 @@ namespace BCLog {\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};",
      "path": "src/logging.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163313166,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This variable is not used or changed in this PR.",
      "created_at": "2025-06-24T12:08:23Z",
      "updated_at": "2025-06-24T12:08:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163792560",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163792560"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 105,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163798705",
      "pull_request_review_id": 2953531267,
      "id": 2163798705,
      "node_id": "PRRC_kwDOABII586A-PKx",
      "diff_hunk": "@@ -60,6 +67,9 @@ struct LogSetup : public BasicTestingSetup {\n \n         LogInstance().SetLogLevel(BCLog::Level::Debug);\n         LogInstance().SetCategoryLogLevel({});\n+\n+        // Prevent tests from getting rate-limited.",
      "path": "src/test/logging_tests.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163211212,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The latter. \"Ensure tests don't use each other's rate limiting budget\" could be an alternative?",
      "created_at": "2025-06-24T12:10:20Z",
      "updated_at": "2025-06-24T12:10:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163798705",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163798705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 71,
      "original_line": 71,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163814997",
      "pull_request_review_id": 2953552405,
      "id": 2163814997,
      "node_id": "PRRC_kwDOABII586A-TJV",
      "diff_hunk": "@@ -82,15 +104,74 @@ namespace BCLog {\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};",
      "path": "src/logging.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163313166,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "~This argument may not be, but the test is validating the changed code, dead parameter names don't increase my confidence in the correctness of the PR. It may have an obvious explanation, but it seemed related to me, given that we're touching surrounding code~ ",
      "created_at": "2025-06-24T12:14:23Z",
      "updated_at": "2025-06-24T12:29:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163814997",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163814997"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 105,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163818101",
      "pull_request_review_id": 2953556475,
      "id": 2163818101,
      "node_id": "PRRC_kwDOABII586A-T51",
      "diff_hunk": "@@ -248,32 +335,38 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n         } catch (tinyformat::format_error& fmterr) {\n             log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\n         }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line, flag, level);\n+        LogInstance().LogPrintStr(log_msg, std::move(source_loc), flag, level, should_ratelimit);\n     }\n }\n \n-#define LogPrintLevel_(category, level, ...) LogPrintFormatInternal(__func__, __FILE__, __LINE__, category, level, __VA_ARGS__)\n+#define LogPrintLevel_(category, level, should_ratelimit, ...) LogPrintFormatInternal(std::source_location::current(), category, level, should_ratelimit, __VA_ARGS__)\n \n-// Log unconditionally.\n+// Log unconditionally. Uses basic rate limiting to mitigate disk filling attacks.",
      "path": "src/logging.h",
      "position": 194,
      "original_position": 194,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163198581,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Semantically, I agree. But practically, I think it's fine as is. Conditional vs unconditional are at this point fairly established concepts in our logging code in that they indicate whether or not logging categories need to be enabled or not. Rate limiting should in practice never occur, so for all intents and purposes, it is indeed unconditional.\r\n\r\nHow would you suggest to improve this? I can't think of an improvement.",
      "created_at": "2025-06-24T12:15:07Z",
      "updated_at": "2025-06-24T12:15:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163818101",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163818101"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 344,
      "original_line": 344,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163825735",
      "pull_request_review_id": 2953565935,
      "id": 2163825735,
      "node_id": "PRRC_kwDOABII586A-VxH",
      "diff_hunk": "@@ -457,6 +466,7 @@ void BCLog::Logger::LogPrintStr_(std::string_view str, std::source_location&& so\n     }\n \n     FormatLogStrInPlace(str_prefixed, category, level, source_loc, util::ThreadGetInternalName(), SystemClock::now(), GetMockTime());\n+    bool ratelimit = should_ratelimit && m_limiter.NeedsRateLimiting(source_loc, str_prefixed);",
      "path": "src/logging.cpp",
      "position": 130,
      "original_position": 46,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b44d31455ad46ca3ed95690dfc0a913445b9c1c9",
      "in_reply_to_id": 2163455426,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That would mean the rate limiting warnings are no longer logged to console and callbacks (`NeedsRateLimiting` has side effects), so I think keeping this as-is is better.",
      "created_at": "2025-06-24T12:17:18Z",
      "updated_at": "2025-06-24T12:17:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163825735",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163825735"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 469,
      "original_line": 469,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163837664",
      "pull_request_review_id": 2953582405,
      "id": 2163837664,
      "node_id": "PRRC_kwDOABII586A-Yrg",
      "diff_hunk": "@@ -248,32 +335,38 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n         } catch (tinyformat::format_error& fmterr) {\n             log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\n         }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line, flag, level);\n+        LogInstance().LogPrintStr(log_msg, std::move(source_loc), flag, level, should_ratelimit);\n     }\n }\n \n-#define LogPrintLevel_(category, level, ...) LogPrintFormatInternal(__func__, __FILE__, __LINE__, category, level, __VA_ARGS__)\n+#define LogPrintLevel_(category, level, should_ratelimit, ...) LogPrintFormatInternal(std::source_location::current(), category, level, should_ratelimit, __VA_ARGS__)\n \n-// Log unconditionally.\n+// Log unconditionally. Uses basic rate limiting to mitigate disk filling attacks.",
      "path": "src/logging.h",
      "position": 194,
      "original_position": 194,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163198581,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't consider \"established\" a relevant argument in this case - it just prevents new contributors from understanding the codebase. But if you think this isn't confusing, I don't mind resolving the comment, I did eventually understand it, just got sidetracked by the contradiction and wanted to simplify it to the next person. If we do correct it, we could be more specific instead of overly generalizing it (ie specify the restrictions instead of claiming there are none).",
      "created_at": "2025-06-24T12:20:55Z",
      "updated_at": "2025-06-24T12:20:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163837664",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163837664"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 344,
      "original_line": 344,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163843028",
      "pull_request_review_id": 2953589062,
      "id": 2163843028,
      "node_id": "PRRC_kwDOABII586A-Z_U",
      "diff_hunk": "@@ -82,15 +104,74 @@ namespace BCLog {\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};",
      "path": "src/logging.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163313166,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What do you mean with \"dead parameter names\"? This variable defines the default log level, which indeed is debug level. If you run `bitcoind -debug=net`, you'll start seeing net debug logs, you don't have to set `-loglevel=debug`.",
      "created_at": "2025-06-24T12:22:18Z",
      "updated_at": "2025-06-24T12:22:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163843028",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163843028"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 105,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163843866",
      "pull_request_review_id": 2953590108,
      "id": 2163843866,
      "node_id": "PRRC_kwDOABII586A-aMa",
      "diff_hunk": "@@ -457,6 +466,7 @@ void BCLog::Logger::LogPrintStr_(std::string_view str, std::source_location&& so\n     }\n \n     FormatLogStrInPlace(str_prefixed, category, level, source_loc, util::ThreadGetInternalName(), SystemClock::now(), GetMockTime());\n+    bool ratelimit = should_ratelimit && m_limiter.NeedsRateLimiting(source_loc, str_prefixed);",
      "path": "src/logging.cpp",
      "position": 130,
      "original_position": 46,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b44d31455ad46ca3ed95690dfc0a913445b9c1c9",
      "in_reply_to_id": 2163455426,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah, so there's a side-effect here that wasn't obvious to me, thanks for clarifying.\r\n\r\nEdit: this seems like a code smell, doesn't this indicate that `NeedsRateLimiting` does too many things and should be split out to smaller, more focused methods? If we can't give it a proper name that reflects what it does, that's usually a good sign that it's not as simple as it could be",
      "created_at": "2025-06-24T12:22:38Z",
      "updated_at": "2025-06-24T12:35:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163843866",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163843866"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 469,
      "original_line": 469,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163853656",
      "pull_request_review_id": 2953603690,
      "id": 2163853656,
      "node_id": "PRRC_kwDOABII586A-clY",
      "diff_hunk": "@@ -2976,15 +2976,17 @@ static void UpdateTipLog(\n {\n \n     AssertLockHeld(::cs_main);\n-    LogPrintf(\"%s%s: new best=%s height=%d version=0x%08x log2_work=%f tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)%s\\n\",\n-        prefix, func_name,\n-        tip->GetBlockHash().ToString(), tip->nHeight, tip->nVersion,\n-        log(tip->nChainWork.getdouble()) / log(2.0), tip->m_chain_tx_count,\n-        FormatISO8601DateTime(tip->GetBlockTime()),\n-        chainman.GuessVerificationProgress(tip),\n-        coins_tip.DynamicMemoryUsage() * (1.0 / (1 << 20)),\n-        coins_tip.GetCacheSize(),\n-        !warning_messages.empty() ? strprintf(\" warning='%s'\", warning_messages) : \"\");\n+\n+    // Disable rate limiting in LogPrintLevel_ so that this location is not rate limited during IBD.",
      "path": "src/validation.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163352258,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The point of the docstring is to explain _why_ we don't ratelimit, which is because we don't want IBD tip logs to be suppressed. Documenting that absolutely seems helpful to me.",
      "created_at": "2025-06-24T12:26:19Z",
      "updated_at": "2025-06-24T12:26:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163853656",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163853656"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2980,
      "original_line": 2980,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163859080",
      "pull_request_review_id": 2953611784,
      "id": 2163859080,
      "node_id": "PRRC_kwDOABII586A-d6I",
      "diff_hunk": "@@ -2976,15 +2976,17 @@ static void UpdateTipLog(\n {\n \n     AssertLockHeld(::cs_main);\n-    LogPrintf(\"%s%s: new best=%s height=%d version=0x%08x log2_work=%f tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)%s\\n\",\n-        prefix, func_name,\n-        tip->GetBlockHash().ToString(), tip->nHeight, tip->nVersion,\n-        log(tip->nChainWork.getdouble()) / log(2.0), tip->m_chain_tx_count,\n-        FormatISO8601DateTime(tip->GetBlockTime()),\n-        chainman.GuessVerificationProgress(tip),\n-        coins_tip.DynamicMemoryUsage() * (1.0 / (1 << 20)),\n-        coins_tip.GetCacheSize(),\n-        !warning_messages.empty() ? strprintf(\" warning='%s'\", warning_messages) : \"\");\n+\n+    // Disable rate limiting in LogPrintLevel_ so that this location is not rate limited during IBD.",
      "path": "src/validation.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163352258,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, that part does seem helpful and we can't express it with code, we should keep that part!",
      "created_at": "2025-06-24T12:28:47Z",
      "updated_at": "2025-06-24T12:28:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163859080",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163859080"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2980,
      "original_line": 2980,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163862219",
      "pull_request_review_id": 2953616408,
      "id": 2163862219,
      "node_id": "PRRC_kwDOABII586A-erL",
      "diff_hunk": "@@ -82,15 +104,74 @@ namespace BCLog {\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};",
      "path": "src/logging.h",
      "position": 50,
      "original_position": 50,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163313166,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I replied to the wrong thread here, thanks for the explanation, please resolve it.",
      "created_at": "2025-06-24T12:30:13Z",
      "updated_at": "2025-06-24T12:30:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2163862219",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2163862219"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 105,
      "original_line": 105,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2164992810",
      "pull_request_review_id": 2955485971,
      "id": 2164992810,
      "node_id": "PRRC_kwDOABII586BCysq",
      "diff_hunk": "@@ -457,6 +466,7 @@ void BCLog::Logger::LogPrintStr_(std::string_view str, std::source_location&& so\n     }\n \n     FormatLogStrInPlace(str_prefixed, category, level, source_loc, util::ThreadGetInternalName(), SystemClock::now(), GetMockTime());\n+    bool ratelimit = should_ratelimit && m_limiter.NeedsRateLimiting(source_loc, str_prefixed);",
      "path": "src/logging.cpp",
      "position": 130,
      "original_position": 46,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "b44d31455ad46ca3ed95690dfc0a913445b9c1c9",
      "in_reply_to_id": 2163455426,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I agree `NeedsRateLimiting` has too many responsibilities. I think it's okay as-is, but your comment nerdsniped me into revisiting this. I'm working on a branch that removes the side effects from `NeedsRateLimiting` and a couple of other improvements. I'm not sure yet if it'll be too much of a detour for this PR, but at least it'll be interesting to be able to compare. Should have it ready tomorrow.",
      "created_at": "2025-06-24T21:58:57Z",
      "updated_at": "2025-06-24T21:58:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2164992810",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2164992810"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 469,
      "original_line": 469,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2168960313",
      "pull_request_review_id": 2961939879,
      "id": 2168960313,
      "node_id": "PRRC_kwDOABII586BR7U5",
      "diff_hunk": "@@ -364,7 +366,9 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return memusage::DynamicUsage(buflog.str) +",
      "path": "src/logging.cpp",
      "position": 47,
      "original_position": 31,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "d41a39e43c219eb0b06b8df2c2c5d24baaf015c4",
      "in_reply_to_id": 2163415514,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I didn't validate it, but I can. I think it is important that the new and old versions of `MemUsage` are roughly the same.",
      "created_at": "2025-06-26T12:33:41Z",
      "updated_at": "2025-06-26T12:33:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2168960313",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2168960313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 378,
      "original_line": 369,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2168974305",
      "pull_request_review_id": 2961962202,
      "id": 2168974305,
      "node_id": "PRRC_kwDOABII586BR-vh",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sweet, thanks for doing this! I was curious about any performance hits.",
      "created_at": "2025-06-26T12:40:18Z",
      "updated_at": "2025-06-26T12:40:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2168974305",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2168974305"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2169804538",
      "pull_request_review_id": 2963302664,
      "id": 2169804538,
      "node_id": "PRRC_kwDOABII586BVJb6",
      "diff_hunk": "@@ -248,32 +335,38 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n         } catch (tinyformat::format_error& fmterr) {\n             log_msg = \"Error \\\"\" + std::string{fmterr.what()} + \"\\\" while formatting log message: \" + fmt.fmt;\n         }\n-        LogInstance().LogPrintStr(log_msg, logging_function, source_file, source_line, flag, level);\n+        LogInstance().LogPrintStr(log_msg, std::move(source_loc), flag, level, should_ratelimit);\n     }\n }\n \n-#define LogPrintLevel_(category, level, ...) LogPrintFormatInternal(__func__, __FILE__, __LINE__, category, level, __VA_ARGS__)\n+#define LogPrintLevel_(category, level, should_ratelimit, ...) LogPrintFormatInternal(std::source_location::current(), category, level, should_ratelimit, __VA_ARGS__)\n \n-// Log unconditionally.\n+// Log unconditionally. Uses basic rate limiting to mitigate disk filling attacks.",
      "path": "src/logging.h",
      "position": 194,
      "original_position": 194,
      "commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "original_commit_id": "2ac8696b53e455dd27c8341828404a23b5cb68a9",
      "in_reply_to_id": 2163198581,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think this is confusing because of prior context. I can understand the point about newer contributors. I've come across other places in the codebase where I've had to learn the context by combing through IRC, PRs, commit messages, blogs, etc. I think it's similar to adding the information in the commit message rather than including a comment since a user must search for the commit message info.\r\n\r\nEDIT: That said, I'm open to suggestions, but I thought the context was pretty clear for me because I went through the code and the original PR.",
      "created_at": "2025-06-26T19:22:54Z",
      "updated_at": "2025-06-26T19:27:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2169804538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2169804538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 344,
      "original_line": 344,
      "side": "RIGHT"
    }
  ]
}