{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604",
    "id": 2540887489,
    "node_id": "PR_kwDOABII586Xct3B",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32604",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32604.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32604.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/5535df69a2a7f198e48656912522d531d3867346",
    "number": 32604,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "log: Mitigate disk filling attacks by rate limiting LogPrintf, LogInfo, LogWarning, LogError",
    "user": {
      "login": "Crypt-iQ",
      "id": 15145615,
      "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Crypt-iQ",
      "html_url": "https://github.com/Crypt-iQ",
      "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
      "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
      "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
      "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
      "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This revives the work done by dergoegge in https://github.com/bitcoin/bitcoin/pull/21603. The approach is largely the same except that `std::source_location` is used under-the-hood now that we can use c++20 features. The logging functions have also changed slightly since that PR was opened, so work has been done to preserve the intent of the original rate limiting change. I have tried to give commit attribution where possible (unfortunately I was not able to figure out how to type ö in vim).\r\n\r\n**Approach:**\r\nEach source code location is given an hourly logging quota of 1MiB of logging per hour. Logging is only dropped from source locations that exceed the quota.\r\n- Only logging to disk is rate limited. Logging to console is not rate limited.\r\n- Printing with the category argument is not rate limited.\r\n- `UpdateTip: new best=[…]` is logged with the new `UNCONDITIONAL_ALWAYS` category to avoid rate limiting. High log volume is expected for that source location during IBD.\r\n- When logging is restarted a tally of how many messages/bytes were dropped is printed.\r\n- Log rate limiting can be disabled with the -ratelimitlogging config option.\r\n- All logs will be prefixed with [*] if there is at least one source location that is currently being suppressed.\r\n\r\nFor some reason, the CI is failing on a Windows build and I can't figure out why. I believe it's because the file name returned by `std::source_location` isn't standardized.",
    "labels": [
      {
        "id": 241832923,
        "node_id": "MDU6TGFiZWwyNDE4MzI5MjM=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Utils/log/libs",
        "name": "Utils/log/libs",
        "description": "",
        "color": "5319e7",
        "default": false
      }
    ],
    "created_at": "2025-05-23T20:48:49Z",
    "updated_at": "2025-06-05T10:15:01Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "776b71184b742de884dce5ec236590393620c969",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Crypt-iQ:log_ratelimiting_05192025",
      "ref": "log_ratelimiting_05192025",
      "sha": "5535df69a2a7f198e48656912522d531d3867346",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 79155174,
        "node_id": "MDEwOlJlcG9zaXRvcnk3OTE1NTE3NA==",
        "name": "bitcoin",
        "full_name": "Crypt-iQ/bitcoin",
        "owner": {
          "login": "Crypt-iQ",
          "id": 15145615,
          "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
          "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Crypt-iQ",
          "html_url": "https://github.com/Crypt-iQ",
          "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
          "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
          "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
          "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
          "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/Crypt-iQ/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Crypt-iQ/bitcoin",
        "archive_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Crypt-iQ/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Crypt-iQ/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Crypt-iQ/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/hooks",
        "svn_url": "https://github.com/Crypt-iQ/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 254242,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-04T20:52:52Z",
        "created_at": "2017-01-16T20:09:01Z",
        "updated_at": "2025-05-22T21:56:23Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "a5e98dc3ae63fe8ee689917db440954206893a9f",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37315,
        "stargazers_count": 83975,
        "watchers_count": 83975,
        "size": 283317,
        "default_branch": "master",
        "open_issues_count": 741,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-05T08:54:12Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-06-05T10:07:57Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 355,
    "deletions": 51,
    "changed_files": 6,
    "commits": 8,
    "review_comments": 44,
    "comments": 13
  },
  "events": [
    {
      "event": "mentioned",
      "id": 17796220658,
      "node_id": "MEE_lADOABII5864B5OdzwAAAAQkvMby",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17796220658",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T20:48:50Z"
    },
    {
      "event": "subscribed",
      "id": 17796220669,
      "node_id": "SE_lADOABII5864B5OdzwAAAAQkvMb9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17796220669",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T20:48:50Z"
    },
    {
      "event": "commented",
      "id": 2905779417,
      "node_id": "IC_kwDOABII586tMqzZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2905779417",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T20:48:51Z",
      "updated_at": "2025-06-04T22:36:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32604.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [davidgumberg](https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2905800955), [dergoegge](https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2909514124), [brunoerg](https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2910538498), [stickies-v](https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2880741415), [l0rinc](https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2934495128) |\n| Stale ACK | [janb84](https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2868443828) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo over LogPrintf [WIP, NOMERGE, DRAFT] by maflcko)\n* [#29256](https://github.com/bitcoin/bitcoin/pull/29256) (log, refactor: Allow log macros to accept context arguments by ryanofsky)\n* [#26812](https://github.com/bitcoin/bitcoin/pull/26812) (test: add end-to-end tests for CConnman and PeerManager by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2905779417",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "labeled",
      "id": 17796225522,
      "node_id": "LE_lADOABII5864B5OdzwAAAAQkvNny",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17796225522",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T20:49:22Z",
      "label": {
        "name": "Utils/log/libs",
        "color": "5319e7"
      }
    },
    {
      "event": "commented",
      "id": 2905800955,
      "node_id": "IC_kwDOABII586tMwD7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2905800955",
      "actor": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T21:00:08Z",
      "updated_at": "2025-05-23T21:00:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2905800955",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "commented",
      "id": 2905866738,
      "node_id": "IC_kwDOABII586tNAHy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2905866738",
      "actor": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T21:34:45Z",
      "updated_at": "2025-05-23T21:34:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "Any thoughts about adding some kind of dying gasp so that if a node crashes or hits some fatal error the most recent unfiltered log can be saved?",
      "user": {
        "login": "gmaxwell",
        "id": 858454,
        "node_id": "MDQ6VXNlcjg1ODQ1NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gmaxwell",
        "html_url": "https://github.com/gmaxwell",
        "followers_url": "https://api.github.com/users/gmaxwell/followers",
        "following_url": "https://api.github.com/users/gmaxwell/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/gmaxwell/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/gmaxwell/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
        "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
        "repos_url": "https://api.github.com/users/gmaxwell/repos",
        "events_url": "https://api.github.com/users/gmaxwell/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2905866738",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "labeled",
      "id": 17796736612,
      "node_id": "LE_lADOABII5864B5OdzwAAAAQkxKZk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17796736612",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T21:47:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2905884570,
      "node_id": "IC_kwDOABII586tNEea",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2905884570",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-23T21:47:18Z",
      "updated_at": "2025-05-23T21:47:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `lint`: https://github.com/bitcoin/bitcoin/runs/42810774045</sub>\n<sub>LLM reason (✨ experimental): The CI failure is due to linting errors related to `std::filesystem` and locale dependence.\n</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2905884570",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "commented",
      "id": 2907015832,
      "node_id": "IC_kwDOABII586tRYqY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2907015832",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-24T20:49:35Z",
      "updated_at": "2025-05-24T20:49:35Z",
      "author_association": "CONTRIBUTOR",
      "body": "> if a node crashes or hits some fatal error the most recent unfiltered log can be saved?\r\n\r\nDoes unfiltered here mean a log line that was rate limited or does it mean something else in this context? I think that we would need to know ahead of time if we were going to crash to save the most recent unfiltered log unless we somehow always cache it?",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2907015832",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "commented",
      "id": 2909514124,
      "node_id": "IC_kwDOABII586ta6mM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2909514124",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-26T12:07:55Z",
      "updated_at": "2025-05-26T12:07:55Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\n\nThanks for picking this up!",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2909514124",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "reviewed",
      "id": 2868443828,
      "node_id": "PRR_kwDOABII586q-Pq0",
      "url": null,
      "actor": null,
      "commit_id": "0bc6ed61cfab6d97e74103efd41c46faf5941ff6",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 0bc6ed61cfab6d97e74103efd41c46faf5941ff6\r\n\r\nRatelimits loging to disk if loggin exceeds 1 MiB  in  1 hour (WINDOW_MAX_BYTES const & WINDOW_SIZE const)\r\n \r\n- code review \r\n- build & tested ",
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2868443828",
      "submitted_at": "2025-05-26T13:41:23Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "review_requested",
      "id": 17815097347,
      "node_id": "RRE_lADOABII5864B5OdzwAAAAQl3NAD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17815097347",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-26T13:41:26Z",
      "requested_reviewer": {
        "login": "davidgumberg",
        "id": 2257631,
        "node_id": "MDQ6VXNlcjIyNTc2MzE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2257631?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/davidgumberg",
        "html_url": "https://github.com/davidgumberg",
        "followers_url": "https://api.github.com/users/davidgumberg/followers",
        "following_url": "https://api.github.com/users/davidgumberg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/davidgumberg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/davidgumberg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/davidgumberg/subscriptions",
        "organizations_url": "https://api.github.com/users/davidgumberg/orgs",
        "repos_url": "https://api.github.com/users/davidgumberg/repos",
        "events_url": "https://api.github.com/users/davidgumberg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/davidgumberg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 17815097535,
      "node_id": "RRE_lADOABII5864B5OdzwAAAAQl3NC_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17815097535",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-26T13:41:27Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2910538498,
      "node_id": "IC_kwDOABII586te0sC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2910538498",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-26T19:47:41Z",
      "updated_at": "2025-05-26T19:47:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2910538498",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17852493897,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQoF3BJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17852493897",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "created_at": "2025-05-28T14:38:13Z"
    },
    {
      "event": "commented",
      "id": 2919920634,
      "node_id": "IC_kwDOABII586uCnP6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2919920634",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-29T16:22:13Z",
      "updated_at": "2025-05-29T16:24:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "The tidy job is failing because it doesn't like the logging macros being used in lambda functions. It seems like this is pre-existing so I'm not sure why it's failing now. The windows cross-built job is failing on the `rate_limiting` test at every file-size comparison. I don't have a windows machine to debug this, but I think maybe `fs::file_size` is failing or some other quirk is showing up?",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2919920634",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "reviewed",
      "id": 2880741415,
      "node_id": "PRR_kwDOABII586rtKAn",
      "url": null,
      "actor": null,
      "commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK on locking down this attack vector, and the code changes required seem acceptable. Also nice to start using `std::source_location` here.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2880741415",
      "submitted_at": "2025-05-30T10:21:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "commented",
      "id": 2922025698,
      "node_id": "IC_kwDOABII586uKpLi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2922025698",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T10:57:04Z",
      "updated_at": "2025-05-30T10:57:04Z",
      "author_association": "MEMBER",
      "body": "> The windows cross-built job is failing on the rate_limiting test at every file-size comparison. I don't have a windows machine to debug this, but I think maybe fs::file_size is failing or some other quirk is showing up?\r\n\r\n@hebasto can you take a look here? I ran `test_bitcoin.exe` from this branch (rebased) under wine and didn't see any failures.",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2922025698",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "mentioned",
      "id": 17883600371,
      "node_id": "MEE_lADOABII5864B5OdzwAAAAQp8hXz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17883600371",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T10:57:05Z"
    },
    {
      "event": "subscribed",
      "id": 17883600405,
      "node_id": "SE_lADOABII5864B5OdzwAAAAQp8hYV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17883600405",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T10:57:05Z"
    },
    {
      "event": "commented",
      "id": 2922246861,
      "node_id": "IC_kwDOABII586uLfLN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2922246861",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T12:20:01Z",
      "updated_at": "2025-05-30T12:22:49Z",
      "author_association": "MEMBER",
      "body": "> > The windows cross-built job is failing on the rate_limiting test at every file-size comparison. I don't have a windows machine to debug this, but I think maybe fs::file_size is failing or some other quirk is showing up?\r\n> \r\n> @hebasto can you take a look here? I ran `test_bitcoin.exe` from this branch (rebased) under wine and didn't see any failures.\r\n\r\nIt seems to be related to MSVCRT behaviour, as binaries [linked to UCRT](https://github.com/hebasto/bitcoin-core-nightly/actions/runs/15345658695) pass all unit tests.",
      "user": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2922246861",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "mentioned",
      "id": 17884641427,
      "node_id": "MEE_lADOABII5864B5OdzwAAAAQqAfiT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17884641427",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T12:20:02Z"
    },
    {
      "event": "subscribed",
      "id": 17884641493,
      "node_id": "SE_lADOABII5864B5OdzwAAAAQqAfjV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17884641493",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-30T12:20:02Z"
    },
    {
      "event": "reviewed",
      "id": 2881185484,
      "node_id": "PRR_kwDOABII586ru2bM",
      "url": null,
      "actor": null,
      "commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2881185484",
      "submitted_at": "2025-05-30T12:52:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "commented",
      "id": 2934186705,
      "node_id": "IC_kwDOABII586u5CLR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2934186705",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T08:47:37Z",
      "updated_at": "2025-06-03T08:47:37Z",
      "author_association": "MEMBER",
      "body": "I vaguely remember having trouble with the unit tests on windows too. Iirc it had something to do with windows line endings being different (i.e. `\\r\\n` on windows vs `\\n` on linux), which throws off the size accounting.",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2934186705",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "commented",
      "id": 2934471353,
      "node_id": "IC_kwDOABII586u6Hq5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2934471353",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T10:03:15Z",
      "updated_at": "2025-06-03T10:03:15Z",
      "author_association": "MEMBER",
      "body": "> The tidy job is failing because it doesn't like the logging macros being used in lambda functions. It seems like this is pre-existing so I'm not sure why it's failing now.\r\n\r\nIt happens after commit dfbc3e46b8661b112a91c5f00a4dce439f4f5914 and looks unrelated. Maybe just use the workaround from ./src/util/check.h?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2934471353",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "commented",
      "id": 2934495128,
      "node_id": "IC_kwDOABII586u6NeY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2934495128",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-03T10:09:15Z",
      "updated_at": "2025-06-03T10:12:33Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK, but I'm not yet sure about the approach. Let me know if I misunderstood something important here.\r\n\r\nEdit:\r\n> All logs will be prefixed with [*] if there is at least one source location that is currently being suppressed\r\n\r\nWill that appear on the console as well, which didn't have any messages dropped?",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#issuecomment-2934495128",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32604"
    },
    {
      "event": "reviewed",
      "id": 2891468741,
      "node_id": "PRR_kwDOABII586sWE_F",
      "url": null,
      "actor": null,
      "commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2891468741",
      "submitted_at": "2025-06-03T10:09:27Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17986304449,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQwETnB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17986304449",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b275b241a38d0ec0cb6f2899859813d2da5a89d0",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/b275b241a38d0ec0cb6f2899859813d2da5a89d0",
      "created_at": "2025-06-04T17:37:30Z"
    },
    {
      "event": "reviewed",
      "id": 2897579695,
      "node_id": "PRR_kwDOABII586stY6v",
      "url": null,
      "actor": null,
      "commit_id": "b275b241a38d0ec0cb6f2899859813d2da5a89d0",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "The latest change uses a single `BCLog::LogRateLimiter` instance and uses a slimmer way of tracking the amount of logging bytes left per `std::source_location`. I like the approach better as `m_categories` is no longer being used. I would like to point out that the rate-limiting logic can be bypassed if `LogPrintLevel` is used. I think `LogPrintLevel` callers need to be cautious and I kind of think this macro shouldn't be used if `level >= BCLog::Level::Info`.\r\n\r\n> Will that appear on the console as well, which didn't have any messages dropped?\r\n\r\nYes this appears in the console as well. I actually was unsure if console-logging should be rate-limited or not. Hopefully users have sensible limits on their terminal history?\r\n\r\nI will work on fixing the CI, I think review can still happen in the meantime while I debug the windows failure and fix the tidy job.",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2897579695",
      "submitted_at": "2025-06-04T17:58:42Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQwODQwZjNmZjFlM2M0NDY0OGVmNDQ3ZjM0MzY0ZjQ2YmY1NzIzOTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0840f3ff1e3c44648ef447f34364f46bf572395",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d0840f3ff1e3c44648ef447f34364f46bf572395",
      "tree": {
        "sha": "f4214fbc361ecd3cc1c3c6016e4b203daacf822f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4214fbc361ecd3cc1c3c6016e4b203daacf822f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f4214fbc361ecd3cc1c3c6016e4b203daacf822f\nparent 4af72d8b08925ecebf2ce15c9f2b76092c2cf2e3\nauthor Eugene Siegel <elzeigel@gmail.com> 1749047948 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1749070362 -0400\n\nlog: introduce LogRateLimiter and SourceLocationCounter classes\n\nLogRateLimiter will be used to keep track of our time-based logging window.\nIn a later commit, the Logger instance will use a single instance of\nLogRateLimiter to determine when the window needs to be reset.\n\nSourceLocationCounter tracks the available bytes left for logging in the\ncurrent logging window. Usage will become clear in a later commit. It\ndoes not track the actual source location; it is used as a value in an\nunordered_map that is keyed by std::source_location.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhAshoACgkQEYdZ6DQ5\nqbFPIAgAj/vi2Es/OnoN97VWAwUFCl8XNRcB57iY8HuM8CpNCJy4VzATGTLNBmOs\nkz6Taq/Ogyv0/OKMG6iQK1P/Pv0UiHVpW7Iw5FeCDZSwJKelvWVvYCNE1IHg7J8n\nBvbRGL4uOOPT79qf5th8hYpRSoMznqqwfwTIByKygQozN8pjtsijadrwR5sbQ8JD\n3UF4HkVb93i8eWVxqWG4fGRUsFbq9sKBtlX2Vr92lKHjKFzz1uuQbyTA1jJFdAiv\nEc8iYZHS/tju4y60uAcTjYlCrVeciSUnqqXrk6ntAAfeuG4FsulJQxCW00Bpy/vN\n8d6t5L4aJf47LFnMY/C6gznhzFC1pg==\n=Qask\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4af72d8b08925ecebf2ce15c9f2b76092c2cf2e3",
          "sha": "4af72d8b08925ecebf2ce15c9f2b76092c2cf2e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4af72d8b08925ecebf2ce15c9f2b76092c2cf2e3"
        }
      ],
      "message": "log: introduce LogRateLimiter and SourceLocationCounter classes\n\nLogRateLimiter will be used to keep track of our time-based logging window.\nIn a later commit, the Logger instance will use a single instance of\nLogRateLimiter to determine when the window needs to be reset.\n\nSourceLocationCounter tracks the available bytes left for logging in the\ncurrent logging window. Usage will become clear in a later commit. It\ndoes not track the actual source location; it is used as a value in an\nunordered_map that is keyed by std::source_location.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T20:52:42Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T14:39:08Z"
      },
      "sha": "d0840f3ff1e3c44648ef447f34364f46bf572395"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJlYzc0NjI2ODY3YWJlZmJmYzU1ZGE1YWFhZjhhMGMwMzA2NjNmM2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bec74626867abefbfc55da5aaaf8a0c030663f3a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bec74626867abefbfc55da5aaaf8a0c030663f3a",
      "tree": {
        "sha": "40f15133776bb05de72966d99d4b6418f2153604",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40f15133776bb05de72966d99d4b6418f2153604"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 40f15133776bb05de72966d99d4b6418f2153604\nparent d0840f3ff1e3c44648ef447f34364f46bf572395\nauthor Eugene Siegel <elzeigel@gmail.com> 1749051615 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1749070362 -0400\n\nlog: use std::source_location instead of __FILE__, __LINE__ macros\n\nThe std::source_location type stores, among other things, the file\nname and line number of a source code location. We get rid of the\nmacro usage and use std::source_location::current() where applicable.\nIn a later commit, we use this type as the key type in both an\nunordered_map and unordered_set to keep track of SourceLocationCounter\nfor each location.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhAshoACgkQEYdZ6DQ5\nqbHYFgf/RuqhrFX9qi5YFH4gVopEhkPsWncsch5WW8vfuGhhcb0kEVLACr/ulZ98\nG9Fxf1MsxR7A51nS81//DqT+HcMY6O6yhmazClGk9Bisu5EigPv1fKUvgLz2yNP8\ne1vZJ2J1duaTuh5b4n+J+iApu7GDaM2TBE94VHmAtlbPxdUuxPM/nYpdmj4wdajF\nOE8CKmfmTp+OAdwzGf8wt7Y2F9i22GbtbVhN98qKH07kMn+Tl6oXrbbG86zI7bcg\nXNhn1O7UdzvtHwK13u9CCpFvfBok5fpIpJjlqKwn7uL540XCxlDQrfmAAiA28ogl\nJUkKymAubmeKOiyYujIjC1c0qC2d8A==\n=+627\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0840f3ff1e3c44648ef447f34364f46bf572395",
          "sha": "d0840f3ff1e3c44648ef447f34364f46bf572395",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d0840f3ff1e3c44648ef447f34364f46bf572395"
        }
      ],
      "message": "log: use std::source_location instead of __FILE__, __LINE__ macros\n\nThe std::source_location type stores, among other things, the file\nname and line number of a source code location. We get rid of the\nmacro usage and use std::source_location::current() where applicable.\nIn a later commit, we use this type as the key type in both an\nunordered_map and unordered_set to keep track of SourceLocationCounter\nfor each location.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T20:52:42Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T15:40:15Z"
      },
      "sha": "bec74626867abefbfc55da5aaaf8a0c030663f3a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU5MTRhMmVlNmM5MTU1ODViNzIxMzIxNzA0N2FkMTY0NGI4NzMzNzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5914a2ee6c915585b7213217047ad1644b873376",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5914a2ee6c915585b7213217047ad1644b873376",
      "tree": {
        "sha": "45eb45613834559a7160f5ad3ff279555938321f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45eb45613834559a7160f5ad3ff279555938321f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 45eb45613834559a7160f5ad3ff279555938321f\nparent bec74626867abefbfc55da5aaaf8a0c030663f3a\nauthor Eugene Siegel <elzeigel@gmail.com> 1749051741 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1749070362 -0400\n\nconfig: add -ratelimitlogging config option\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhAshoACgkQEYdZ6DQ5\nqbED4AgApa8MC18rNIDUVycPQnG2Inv1X6XFjIk7rgJt5HhT088TIcN8pJ+wtm5/\ncr2AsEkJkoa81Z0RDOdOLvlVeOe3lTPBifYv9mg2Qo77Dc1BCRtQAbF6o9dj7CQF\npdx5Mpygdmq1KUq7PlOfd1gEyZIVC9t2OK8aDahEbZ3xmWZiu1VE3xOklfMd1ALE\nj3sU235RsYJ2wVLz82DP7xa1ScxQXBKp4FBgI3acJwxqHROdoavrydg7oaAaPPw/\nz3moIxpEuMv2+nEjEJPaRc1Mb4CQGMcAMYcDnCAOIk5+2jHk0JhOgzBkbkN+/7wo\nwg/rTMquC9Rx8ja4/1OzW7FgvHIbDg==\n=6EQu\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bec74626867abefbfc55da5aaaf8a0c030663f3a",
          "sha": "bec74626867abefbfc55da5aaaf8a0c030663f3a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bec74626867abefbfc55da5aaaf8a0c030663f3a"
        }
      ],
      "message": "config: add -ratelimitlogging config option\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T20:52:42Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T15:42:21Z"
      },
      "sha": "5914a2ee6c915585b7213217047ad1644b873376"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdmNWM2OWQ0YzFlZjE3NjMzZGYxOTIxNWU1NDFmMzI4ODAzNDQzMzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f5c69d4c1ef17633df19215e541f32880344332",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7f5c69d4c1ef17633df19215e541f32880344332",
      "tree": {
        "sha": "d9107fd50ceb63bafb1a2122dfe3e2e4e397e513",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9107fd50ceb63bafb1a2122dfe3e2e4e397e513"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d9107fd50ceb63bafb1a2122dfe3e2e4e397e513\nparent 5914a2ee6c915585b7213217047ad1644b873376\nauthor Eugene Siegel <elzeigel@gmail.com> 1749052899 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1749070363 -0400\n\nlog: Add rate limiting to LogPrintf, LogInfo, LogWarning, and LogError\n\nTo mitigate disk-filling attacks caused by unsafe usages of LogPrintf and\nfriends, we rate-limit them by passing a should_ratelimit bool that\neventually makes its way to LogPrintStr and calls NeedRateLimiting.\n\nEvery hour, a source location can log up to 1MiB of data. Source\nlocations that exceed the limit will have their logs suppressed for the\nrest of the window which is determined by m_limiter. These source locations\nare tracked in an unordered_map.\n\nNote that this rate-limiting change does not affect callers that directly\nuse LogPrintLevel with BCLog::Level >= BCLog::Level::Info.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhAshsACgkQEYdZ6DQ5\nqbHm1QgAmm4uyP6fj6XU33bmO5gVcTxiGhGfDhoxQ6ohDlpQPM8qmq6zjOzfiQyO\n/U5ISS5A6Caj8gwK+jQPwOmgmOYLlkYJrGvL64DrZ4vPcejp/1HY78twfFIpFtnR\nmZm86SB4gv55UtF3aDM1xnlI01uqZHRye5QD2saTK8Prx2Z1D/2KR4LuN2DmqSkc\nbB+sA0sE8SDNHrnf2FIUSLf+UG3Kr2t7VEh9WNApus6osIo+UbMZs5VkwmVWkLZU\n7qvbGqMGki+KuIfDlI5MjP8M1kXc7MKK09RqahEXrQm+yNklAefwJJfPOf8Mf+Sr\ngP0ADw0CJpfj1asW11yk0W5oWqxZeg==\n=pf92\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5914a2ee6c915585b7213217047ad1644b873376",
          "sha": "5914a2ee6c915585b7213217047ad1644b873376",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5914a2ee6c915585b7213217047ad1644b873376"
        }
      ],
      "message": "log: Add rate limiting to LogPrintf, LogInfo, LogWarning, and LogError\n\nTo mitigate disk-filling attacks caused by unsafe usages of LogPrintf and\nfriends, we rate-limit them by passing a should_ratelimit bool that\neventually makes its way to LogPrintStr and calls NeedRateLimiting.\n\nEvery hour, a source location can log up to 1MiB of data. Source\nlocations that exceed the limit will have their logs suppressed for the\nrest of the window which is determined by m_limiter. These source locations\nare tracked in an unordered_map.\n\nNote that this rate-limiting change does not affect callers that directly\nuse LogPrintLevel with BCLog::Level >= BCLog::Level::Info.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T20:52:43Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T16:01:39Z"
      },
      "sha": "7f5c69d4c1ef17633df19215e541f32880344332"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY5OTg1ZWRjMzg3ZjBmYjM3OGE4YmYzNzU2M2I0NjFlMTQ2ODU2NjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69985edc387f0fb378a8bf37563b461e14685665",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/69985edc387f0fb378a8bf37563b461e14685665",
      "tree": {
        "sha": "368c9f2182657ff1af59516d21c8bae87e08d333",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/368c9f2182657ff1af59516d21c8bae87e08d333"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 368c9f2182657ff1af59516d21c8bae87e08d333\nparent 7f5c69d4c1ef17633df19215e541f32880344332\nauthor Eugene Siegel <elzeigel@gmail.com> 1749053601 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1749070363 -0400\n\nvalidation: use LogPrintLevel to exempt UpdateTipLog from rate limiting\n\nSince UpdateTipLog logs heavily during IBD, we need to exempt it from\nrate limiting. This is done by using the LogPrintLevel macro with\nBCLog::Level::Info since it sets should_ratelimit to false.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhAshsACgkQEYdZ6DQ5\nqbHg0Af/dqzI8xkPYlSB/NqnuP1GhCGqGTcvMUlkDjNJnbRwP/qbX5pdcZtmorlW\nMx+Yjz+bv8snctUa1kykTL/27fBpbkBY9LtVl49alkMc32Clueu7TSpjNddeRtLv\nwwJhyqYXqZC6Jj3tdUJQzyFnsmZd0tITWdWbipfFyjs6R94agoN5t+4txf623Xfi\nQNdsFoVGpydhbRdvo6N6uuuF0fhjsa1Ho5tdkcuJQm6OpTkt1QsrmVuanoyJjdhm\nrjdP4cdcC4O3YtO9BJjd8/CBnHcB6/vfPc+aoyAvdR0Z1YbE8p0dLa2dCu/Cl/mU\nxl++x5y6leM1gWN8WkSuARlcIOONDA==\n=c8KD\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f5c69d4c1ef17633df19215e541f32880344332",
          "sha": "7f5c69d4c1ef17633df19215e541f32880344332",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7f5c69d4c1ef17633df19215e541f32880344332"
        }
      ],
      "message": "validation: use LogPrintLevel to exempt UpdateTipLog from rate limiting\n\nSince UpdateTipLog logs heavily during IBD, we need to exempt it from\nrate limiting. This is done by using the LogPrintLevel macro with\nBCLog::Level::Info since it sets should_ratelimit to false.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T20:52:43Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T16:13:21Z"
      },
      "sha": "69985edc387f0fb378a8bf37563b461e14685665"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU1OThjNDlkMzBjMmViOWE2NTQ1MGUzYzViYjU3ODE4YWUxMWQ2OTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5598c49d30c2eb9a65450e3c5bb57818ae11d692",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5598c49d30c2eb9a65450e3c5bb57818ae11d692",
      "tree": {
        "sha": "b52110c8cd4ae3637323ed39ca6b4b24182116e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b52110c8cd4ae3637323ed39ca6b4b24182116e3"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b52110c8cd4ae3637323ed39ca6b4b24182116e3\nparent 69985edc387f0fb378a8bf37563b461e14685665\nauthor Eugene Siegel <elzeigel@gmail.com> 1749053694 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1749070363 -0400\n\ntest: Mark ~DebugLogHelper as noexcept(false)\n\nWe mark ~DebugLogHelper as noexcept(false) to be able to catch the\nexception it throws. This lets us use it in test in combination with\nBOOST_CHECK_THROW and BOOST_CHECK_NO_THROW to check that certain log\nmessages are (not) logged.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhAshsACgkQEYdZ6DQ5\nqbHx+QgAiFYgBWfG/IKIkZl37UnqbfwCqaOfUT4/aDoxCGua/yIX4gucKU40cnq4\nhY392+sLLZaG2ZDj57NmQYPIMh8sbaVf5sLgtLki2QevkFg4FMWsrOECl63adzb/\nYIbNykJTEfDSEw+yfZleQ+qCccUErkxsJB1o9hHbwTYml14rSu4KHz6sQ/oU0x9O\nuCz4DlM7t+S2IBm73I5SYkGveOVtTz6IJco/KouiCL1WFBqB3VCwMBq8orl3+RHA\nK5BVIHlHPjsZJBBAsNPJyXtEfGKXesy4jMk4hokpZP27Bg5fRlab7AG4nUDtJMKb\n5azRrHWuzWXHIdmR5oHijN4Jqn0TVw==\n=sBQL\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69985edc387f0fb378a8bf37563b461e14685665",
          "sha": "69985edc387f0fb378a8bf37563b461e14685665",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/69985edc387f0fb378a8bf37563b461e14685665"
        }
      ],
      "message": "test: Mark ~DebugLogHelper as noexcept(false)\n\nWe mark ~DebugLogHelper as noexcept(false) to be able to catch the\nexception it throws. This lets us use it in test in combination with\nBOOST_CHECK_THROW and BOOST_CHECK_NO_THROW to check that certain log\nmessages are (not) logged.\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T20:52:43Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T16:14:54Z"
      },
      "sha": "5598c49d30c2eb9a65450e3c5bb57818ae11d692"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU3MzNlYzdmZDkxMTY2YTQ1YzkwNmVhZTgzYWY5MjdiNzdjN2NjNTY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e733ec7fd91166a45c906eae83af927b77c7cc56",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e733ec7fd91166a45c906eae83af927b77c7cc56",
      "tree": {
        "sha": "f6c4c87eaf416a3bbc61a8aeb2e3ee13a2a283d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6c4c87eaf416a3bbc61a8aeb2e3ee13a2a283d1"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f6c4c87eaf416a3bbc61a8aeb2e3ee13a2a283d1\nparent 5598c49d30c2eb9a65450e3c5bb57818ae11d692\nauthor Eugene Siegel <elzeigel@gmail.com> 1749053800 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1749070363 -0400\n\ntest: introduce rate_limiting test to ensure it works as expected\n\nThe rate_limiting test:\n- checks that rate limiting can be disabled\n- checks that rate limiting is disabled for exempt source locations\n- checks that the debug.log file's size changes as expected when rate limiting\n- checks for the expected rate limiting-specific log messages\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhAshsACgkQEYdZ6DQ5\nqbEDcgf/SdvmnnmATrjhrT9B/Jz7g2zZDNT3erX7KjvftjH6knct5dL5oM8A0VPP\nFqep+Kl/5sPvsUTW61LbzQlBx3M5Yd+yXIkEo5d8kahkAKwOAPd8EqjJMIZ2ayzl\n1H7jvznyPW7h4x4lKs29qp9FQ9iV4qDmK3aD5mF78ULDZNxnthLFEoNr2qOa3qrY\nALEHc6SHu3haTwBWNgCCYYnRmjHfUOo/v/uUPvDbw5PoHqyNKaODJ/VKii1YGGSW\nISTvjRXKyib4NrFJd1nwMbZUrTxYf0vIpqm0ClyHXEBqTahs8rRdmx3NMj62YtlY\nGg98RsdTn2swWu7W+5IR98w83dOFMg==\n=xarZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5598c49d30c2eb9a65450e3c5bb57818ae11d692",
          "sha": "5598c49d30c2eb9a65450e3c5bb57818ae11d692",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5598c49d30c2eb9a65450e3c5bb57818ae11d692"
        }
      ],
      "message": "test: introduce rate_limiting test to ensure it works as expected\n\nThe rate_limiting test:\n- checks that rate limiting can be disabled\n- checks that rate limiting is disabled for exempt source locations\n- checks that the debug.log file's size changes as expected when rate limiting\n- checks for the expected rate limiting-specific log messages\n\nCo-Authored-By: Niklas Gogge <n.goeggi@gmail.com>",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T20:52:43Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T16:16:40Z"
      },
      "sha": "e733ec7fd91166a45c906eae83af927b77c7cc56"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU1MzVkZjY5YTJhN2YxOThlNDg2NTY5MTI1MjJkNTMxZDM4NjczNDY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5535df69a2a7f198e48656912522d531d3867346",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5535df69a2a7f198e48656912522d531d3867346",
      "tree": {
        "sha": "552292b277457eee9105bfa68fcb6e2debad3ab8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/552292b277457eee9105bfa68fcb6e2debad3ab8"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 552292b277457eee9105bfa68fcb6e2debad3ab8\nparent e733ec7fd91166a45c906eae83af927b77c7cc56\nauthor Eugene Siegel <elzeigel@gmail.com> 1749069790 -0400\ncommitter Eugene Siegel <elzeigel@gmail.com> 1749070363 -0400\n\nlog: use NOLINT bugprone-lambda-function-name comment for LogPrintLevel_\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEfoHva5mJqcyTiEgDEYdZ6DQ5qbEFAmhAshsACgkQEYdZ6DQ5\nqbEzEwf8DTNXDanOvaPe4o/S8tHLqkjG45rnpX7sfTAMT5wg0k9beIiIP92rZk7s\nH8EO8Gu3BAM/wJQFnjIf7DvLOI+CxAy1XsL9+oFbqhHWn+TEb/oAzk1jxYG+Gs6L\noOAoc9xeijtmvYyj0Yhir50zcqJLuZHUb3hIAq00zVqZtPGBOEA/DdPRLq4C1pza\nKtbzlbb+45X2iykZrO7l3bEgROPBsy6zO4OIHhmqeOq6ix1JaZ1S5x1P3C/phqz+\nQJOtxgQUiWhgCD/coP7SBAdXVLRTrUsRgG+myIKbsw3gevYmLhyusA77lyn2HMJn\nRoUNITtZ5BFpCXSNbDsCstyWo4k3QQ==\n=lt1m\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e733ec7fd91166a45c906eae83af927b77c7cc56",
          "sha": "e733ec7fd91166a45c906eae83af927b77c7cc56",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e733ec7fd91166a45c906eae83af927b77c7cc56"
        }
      ],
      "message": "log: use NOLINT bugprone-lambda-function-name comment for LogPrintLevel_",
      "committer": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T20:52:43Z"
      },
      "author": {
        "name": "Eugene Siegel",
        "email": "elzeigel@gmail.com",
        "date": "2025-06-04T20:43:10Z"
      },
      "sha": "5535df69a2a7f198e48656912522d531d3867346"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17989201758,
      "node_id": "HRFPE_lADOABII5864B5OdzwAAAAQwPW9e",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17989201758",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "commit_url": "https://api.github.com/repos/Crypt-iQ/bitcoin/commits/5535df69a2a7f198e48656912522d531d3867346",
      "created_at": "2025-06-04T20:52:53Z"
    },
    {
      "event": "unlabeled",
      "id": 17989831096,
      "node_id": "UNLE_lADOABII5864B5OdzwAAAAQwRwm4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17989831096",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T21:41:43Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2899378420,
      "node_id": "PRR_kwDOABII586s0QD0",
      "url": null,
      "actor": null,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2899378420",
      "submitted_at": "2025-06-05T09:54:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    },
    {
      "event": "reviewed",
      "id": 2899720611,
      "node_id": "PRR_kwDOABII586s1jmj",
      "url": null,
      "actor": null,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#pullrequestreview-2899720611",
      "submitted_at": "2025-06-05T10:15:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2107350361",
      "pull_request_review_id": 2868443828,
      "id": 2107350361,
      "node_id": "PRRC_kwDOABII5859m51Z",
      "diff_hunk": "@@ -27,10 +31,29 @@ static const bool DEFAULT_LOGTIMESTAMPS = true;\n static const bool DEFAULT_LOGTHREADNAMES = false;\n static const bool DEFAULT_LOGSOURCELOCATIONS = false;\n static constexpr bool DEFAULT_LOGLEVELALWAYS = false;",
      "path": "src/logging.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "0bc6ed61cfab6d97e74103efd41c46faf5941ff6",
      "in_reply_to_id": null,
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: would be nice to align the other initializations to the new C++ 11 {} style in a follow up PR, to keep the code base consistent. ",
      "created_at": "2025-05-26T13:22:15Z",
      "updated_at": "2025-05-26T13:41:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2107350361",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2107350361"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2114308684",
      "pull_request_review_id": 2878876682,
      "id": 2114308684,
      "node_id": "PRRC_kwDOABII585-BcpM",
      "diff_hunk": "@@ -27,10 +31,29 @@ static const bool DEFAULT_LOGTIMESTAMPS = true;\n static const bool DEFAULT_LOGTHREADNAMES = false;\n static const bool DEFAULT_LOGSOURCELOCATIONS = false;\n static constexpr bool DEFAULT_LOGLEVELALWAYS = false;",
      "path": "src/logging.h",
      "position": 26,
      "original_position": 26,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "0bc6ed61cfab6d97e74103efd41c46faf5941ff6",
      "in_reply_to_id": 2107350361,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I can do that in a follow-up",
      "created_at": "2025-05-29T16:23:26Z",
      "updated_at": "2025-05-29T16:23:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2114308684",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2114308684"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 33,
      "original_line": 33,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115514944",
      "pull_request_review_id": 2880741415,
      "id": 2115514944,
      "node_id": "PRRC_kwDOABII585-GDJA",
      "diff_hunk": "@@ -39,39 +62,41 @@ struct LogCategory {\n namespace BCLog {\n     using CategoryMask = uint64_t;\n     enum LogFlags : CategoryMask {\n-        NONE        = CategoryMask{0},\n-        NET         = (CategoryMask{1} <<  0),\n-        TOR         = (CategoryMask{1} <<  1),\n-        MEMPOOL     = (CategoryMask{1} <<  2),\n-        HTTP        = (CategoryMask{1} <<  3),\n-        BENCH       = (CategoryMask{1} <<  4),\n-        ZMQ         = (CategoryMask{1} <<  5),\n-        WALLETDB    = (CategoryMask{1} <<  6),\n-        RPC         = (CategoryMask{1} <<  7),\n-        ESTIMATEFEE = (CategoryMask{1} <<  8),\n-        ADDRMAN     = (CategoryMask{1} <<  9),\n-        SELECTCOINS = (CategoryMask{1} << 10),\n-        REINDEX     = (CategoryMask{1} << 11),\n-        CMPCTBLOCK  = (CategoryMask{1} << 12),\n-        RAND        = (CategoryMask{1} << 13),\n-        PRUNE       = (CategoryMask{1} << 14),\n-        PROXY       = (CategoryMask{1} << 15),\n-        MEMPOOLREJ  = (CategoryMask{1} << 16),\n-        LIBEVENT    = (CategoryMask{1} << 17),\n-        COINDB      = (CategoryMask{1} << 18),\n-        QT          = (CategoryMask{1} << 19),\n-        LEVELDB     = (CategoryMask{1} << 20),\n-        VALIDATION  = (CategoryMask{1} << 21),\n-        I2P         = (CategoryMask{1} << 22),\n-        IPC         = (CategoryMask{1} << 23),\n+        NONE                       = CategoryMask{0},\n+        NET                        = (CategoryMask{1} <<  0),\n+        TOR                        = (CategoryMask{1} <<  1),\n+        MEMPOOL                    = (CategoryMask{1} <<  2),\n+        HTTP                       = (CategoryMask{1} <<  3),\n+        BENCH                      = (CategoryMask{1} <<  4),\n+        ZMQ                        = (CategoryMask{1} <<  5),\n+        WALLETDB                   = (CategoryMask{1} <<  6),\n+        RPC                        = (CategoryMask{1} <<  7),\n+        ESTIMATEFEE                = (CategoryMask{1} <<  8),\n+        ADDRMAN                    = (CategoryMask{1} <<  9),\n+        SELECTCOINS                = (CategoryMask{1} << 10),\n+        REINDEX                    = (CategoryMask{1} << 11),\n+        CMPCTBLOCK                 = (CategoryMask{1} << 12),\n+        RAND                       = (CategoryMask{1} << 13),\n+        PRUNE                      = (CategoryMask{1} << 14),\n+        PROXY                      = (CategoryMask{1} << 15),\n+        MEMPOOLREJ                 = (CategoryMask{1} << 16),\n+        LIBEVENT                   = (CategoryMask{1} << 17),\n+        COINDB                     = (CategoryMask{1} << 18),\n+        QT                         = (CategoryMask{1} << 19),\n+        LEVELDB                    = (CategoryMask{1} << 20),\n+        VALIDATION                 = (CategoryMask{1} << 21),\n+        I2P                        = (CategoryMask{1} << 22),\n+        IPC                        = (CategoryMask{1} << 23),\n #ifdef DEBUG_LOCKCONTENTION\n-        LOCK        = (CategoryMask{1} << 24),\n+        LOCK                       = (CategoryMask{1} << 24),\n #endif\n-        BLOCKSTORAGE = (CategoryMask{1} << 25),\n-        TXRECONCILIATION = (CategoryMask{1} << 26),\n-        SCAN        = (CategoryMask{1} << 27),\n-        TXPACKAGES  = (CategoryMask{1} << 28),\n-        ALL         = ~NONE,\n+        BLOCKSTORAGE               = (CategoryMask{1} << 25),\n+        TXRECONCILIATION           = (CategoryMask{1} << 26),\n+        SCAN                       = (CategoryMask{1} << 27),\n+        TXPACKAGES                 = (CategoryMask{1} << 28),\n+        UNCONDITIONAL_RATE_LIMITED = (CategoryMask{1} << 29),\n+        UNCONDITIONAL_ALWAYS       = (CategoryMask{1} << 30),",
      "path": "src/logging.h",
      "position": null,
      "original_position": 121,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I think a brief docstring on their suggested usage here would be helpful here",
      "created_at": "2025-05-30T09:34:19Z",
      "updated_at": "2025-05-30T10:21:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115514944",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115514944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": 97,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115526293",
      "pull_request_review_id": 2880741415,
      "id": 2115526293,
      "node_id": "PRRC_kwDOABII585-GF6V",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is there a good use case for disabling rate limiting? I can't think of one. Letting the user define the amount of rate limiting is an alternative, but even then, I'm not sure. If an attacker or bug is able to reach the sane default maximum, then is the user really going to get any benefit from being to inspect the additional volume of un-ratelimited logs? I'm not sure. If so, I think it would make sense to not have this as a configurable option.\r\n\r\n",
      "created_at": "2025-05-30T09:40:06Z",
      "updated_at": "2025-05-30T10:21:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115526293",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115526293"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115570067",
      "pull_request_review_id": 2880741415,
      "id": 2115570067,
      "node_id": "PRRC_kwDOABII585-GQmT",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm, I'm feeling uneasy about using `m_categories`, when rate limiting flags fundamentally don't represent a category. I can see how it reduces the diff, but I'm not sure that's worth it. I'll think about an alternative approach - have you considered any already?\r\n\r\nSince the user doesn't have to be able to configure any of this, and we only have a single `UNCONDITIONAL_ALWAYS` use case (and likely won't have (many) more in the future), I think adding an `is_conditional=True` arg to `LogPrintLevel` and a `LogInfoAlways` macro might be an alternative?",
      "created_at": "2025-05-30T10:03:02Z",
      "updated_at": "2025-05-30T10:21:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115570067",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115570067"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115756875",
      "pull_request_review_id": 2881078755,
      "id": 2115756875,
      "node_id": "PRRC_kwDOABII585-G-NL",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's a good point, I can't think of any concrete use case to disable rate limiting here.",
      "created_at": "2025-05-30T11:33:52Z",
      "updated_at": "2025-05-30T11:33:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115756875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115756875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115778728",
      "pull_request_review_id": 2881107790,
      "id": 2115778728,
      "node_id": "PRRC_kwDOABII585-HDio",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115570067,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I haven't considered alternative approaches, but I think adding a boolean is better than adding special-cased categories.",
      "created_at": "2025-05-30T11:44:09Z",
      "updated_at": "2025-05-30T11:44:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115778728",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115778728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115826232",
      "pull_request_review_id": 2881185484,
      "id": 2115826232,
      "node_id": "PRRC_kwDOABII585-HPI4",
      "diff_hunk": "@@ -364,33 +368,71 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::FormatLogStrAndRateLimit(std::string& str, BCLog::LogFlags category, BCLog::Level level, const std::source_location& source_loc, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime)",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it's unintuitive that this function returns `true` when the operation failed. It seems like the rate limiting can be carved out pretty much as-is into a separate `bool NeedsRateLimiting()` function? There are only 2 callsites of `FormatLogStrAndRateLimit`, and the first one (`StartLogging`) doesn't look like it needs rate limiting because we already have a max buffer size?\r\n\r\nedit: this would pair fairly well with my suggestion [here](https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115841360)",
      "created_at": "2025-05-30T12:19:40Z",
      "updated_at": "2025-05-30T12:56:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115826232",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115826232"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115841360",
      "pull_request_review_id": 2881185484,
      "id": 2115841360,
      "node_id": "PRRC_kwDOABII585-HS1Q",
      "diff_hunk": "@@ -81,16 +106,54 @@ namespace BCLog {\n         Error,\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n+    static constexpr LogFlags DEFAULT_LOG_FLAGS{UNCONDITIONAL_RATE_LIMITED | UNCONDITIONAL_ALWAYS};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRateLimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::time_point<NodeClock> m_last_reset;",
      "path": "src/logging.h",
      "position": 62,
      "original_position": 138,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not a big issue, but since we have quite a few log source locations, this class will be instantiated a fair amount of (`N`) times. An alternative approach would be to have a single `LogRateLimiter` instance that encapsulates most of the logic in 6b54362c19ca9baf9dfa9be9281f6faeda169420, and has a single `m_last_reset` member, spawning a minimal `SourceLocationCounter` struct for each source location, containing just the `m_available_bytes` and `m_dropped_bytes` members.\r\n\r\nThis:\r\n- reduces `N` `std::chrono::time_point<NodeClock>` instances to just 1\r\n- allows `LogRateLimiter` to completely clean up memory for log locations that haven't been triggered in the last hour\r\n- improves code encapsulation\r\n\r\nOverall, this shouldn't be a big change from what you have now, mostly just moving code around into a new class?\r\n",
      "created_at": "2025-05-30T12:30:24Z",
      "updated_at": "2025-05-30T12:52:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115841360",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115841360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 114,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115859316",
      "pull_request_review_id": 2881185484,
      "id": 2115859316,
      "node_id": "PRRC_kwDOABII585-HXN0",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115570067,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Or perhaps even better than a boolean is a `uint64_t rate_limit=DEFAULT_RATE_LIMIT` so we can do away with the distinction between ratelimited and non-ratelimited logging entirely? We could use rate_limit=0 as a synonym for non-ratelimited logging, but I think even `UpdateTipLog()` doesn't have to be exempt from rate limiting, we could still set a sane value that allows doing entire IBD in one hour, for example.\r\n\r\nThen `UpdateTipLog()` could just use:\r\n```\r\n    LogInfo(/*rate_limit=*/100, \"%s%s: new best=%s height=%d version=0x%08x log2_work=%f tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)%s\\n\",\r\n```",
      "created_at": "2025-05-30T12:43:09Z",
      "updated_at": "2025-05-30T12:56:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115859316",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115859316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115869345",
      "pull_request_review_id": 2881185484,
      "id": 2115869345,
      "node_id": "PRRC_kwDOABII585-HZqh",
      "diff_hunk": "@@ -364,33 +368,71 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::FormatLogStrAndRateLimit(std::string& str, BCLog::LogFlags category, BCLog::Level level, const std::source_location& source_loc, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime)\n {\n     if (!str.ends_with('\\n')) str.push_back('\\n');\n \n     str.insert(0, GetLogPrefix(category, level));\n \n     if (m_log_sourcelocations) {\n-        str.insert(0, strprintf(\"[%s:%d] [%s] \", RemovePrefixView(source_file, \"./\"), source_line, logging_function));\n+        str.insert(0, strprintf(\"[%s:%d] [%s] \", RemovePrefixView(source_loc.file_name(), \"./\"), source_loc.line(), logging_function));\n     }\n \n     if (m_log_threadnames) {\n         str.insert(0, strprintf(\"[%s] \", (threadname.empty() ? \"unknown\" : threadname)));\n     }\n \n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    if (category == UNCONDITIONAL_RATE_LIMITED && m_ratelimit) {\n+        was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+        is_ratelimited = !m_ratelimiters[source_loc].Consume(str.size());\n+\n+        if (!is_ratelimited && was_ratelimited) {\n+            // Logging will restart for this source location.\n+            m_suppressed_locations.erase(source_loc);\n+\n+            uint64_t dropped_bytes = m_ratelimiters[source_loc].GetDroppedBytes();\n+\n+            str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\n+                                    \"(%d MiB) were dropped during the last hour.\\n\",\n+                                    source_loc.file_name(), source_loc.line(), logging_function,\n+                                    dropped_bytes / (1024 * 1024)));\n+        } else if (is_ratelimited && !was_ratelimited) {",
      "path": "src/logging.cpp",
      "position": 72,
      "original_position": 97,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: It would be nice if we could catch this in debug builds (ideally even at a fraction, say 20% of the limit), to help inform if our default limit needs to change.  `Assume()` is an option, but that would probably break unit tests in debug builds.\r\n\r\nnit, because 1MB is small enough that it should prevent issues even on devices with little disk size (unless an attacker finds multiple log vulnerabilities), and large enough that no single unconditional logging statement should ever hit that in the foreseeable future, so I think \"driving blind\" is acceptable here.",
      "created_at": "2025-05-30T12:49:40Z",
      "updated_at": "2025-05-30T12:52:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115869345",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115869345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 404,
      "original_line": 404,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115877367",
      "pull_request_review_id": 2881278602,
      "id": 2115877367,
      "node_id": "PRRC_kwDOABII585-Hbn3",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@dergoegge might remember why this was added?",
      "created_at": "2025-05-30T12:54:46Z",
      "updated_at": "2025-05-30T12:54:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115877367",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115877367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115895206",
      "pull_request_review_id": 2881307488,
      "id": 2115895206,
      "node_id": "PRRC_kwDOABII585-Hf-m",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "fwiw: I can't find any discussion about it in https://github.com/bitcoin/bitcoin/pull/21603, and the option was present from the first version of the PR (https://github.com/bitcoin/bitcoin/commit/4648b6d207139ec0ab2994f56c0a47f81cdf516a#diff-b1e19192258d83199d8adaa5ac31f067af98f63554bfdd679bd8e8073815e69d)",
      "created_at": "2025-05-30T13:05:58Z",
      "updated_at": "2025-05-30T13:05:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115895206",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2115895206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2116212200",
      "pull_request_review_id": 2881821692,
      "id": 2116212200,
      "node_id": "PRRC_kwDOABII585-ItXo",
      "diff_hunk": "@@ -81,16 +106,54 @@ namespace BCLog {\n         Error,\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n+    static constexpr LogFlags DEFAULT_LOG_FLAGS{UNCONDITIONAL_RATE_LIMITED | UNCONDITIONAL_ALWAYS};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRateLimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::time_point<NodeClock> m_last_reset;",
      "path": "src/logging.h",
      "position": 62,
      "original_position": 138,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115841360,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yup I had thought about this and wasn't sure how to evaluate the overhead. I'll change it.",
      "created_at": "2025-05-30T16:18:02Z",
      "updated_at": "2025-05-30T16:18:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2116212200",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2116212200"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 114,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2116215143",
      "pull_request_review_id": 2881825924,
      "id": 2116215143,
      "node_id": "PRRC_kwDOABII585-IuFn",
      "diff_hunk": "@@ -364,33 +368,71 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::FormatLogStrAndRateLimit(std::string& str, BCLog::LogFlags category, BCLog::Level level, const std::source_location& source_loc, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime)",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115826232,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yup, this makes sense as well. Can change.",
      "created_at": "2025-05-30T16:20:08Z",
      "updated_at": "2025-05-30T16:20:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2116215143",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2116215143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2116217752",
      "pull_request_review_id": 2881829603,
      "id": 2116217752,
      "node_id": "PRRC_kwDOABII585-IuuY",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115570067,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think callers just need to be aware that they cannot set the rate limit very high in certain cases. Maybe this change and a comment will suffice?",
      "created_at": "2025-05-30T16:21:56Z",
      "updated_at": "2025-05-30T16:21:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2116217752",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2116217752"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123243686",
      "pull_request_review_id": 2891468741,
      "id": 2123243686,
      "node_id": "PRRC_kwDOABII585-jiCm",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "When I’m benchmarking IBD, I don’t want any artificial size or rate limits.\r\nSince the attack only matters when peers can influence us, could we simply disable rate-limiting for all logs during IBD/reindexes/assumeutxo?\r\n\r\n------\r\n\r\nShould the docs explicitly state the 1 MiB-per-hour cap, or could we replace the boolean flag with a numeric \"MiB per hour\" parameter (retaining 0 and 1 as the current meanings)?",
      "created_at": "2025-06-03T09:22:24Z",
      "updated_at": "2025-06-03T10:09:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123243686",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123243686"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123314635",
      "pull_request_review_id": 2891468741,
      "id": 2123314635,
      "node_id": "PRRC_kwDOABII585-jzXL",
      "diff_hunk": "@@ -39,39 +62,41 @@ struct LogCategory {\n namespace BCLog {\n     using CategoryMask = uint64_t;\n     enum LogFlags : CategoryMask {\n-        NONE        = CategoryMask{0},\n-        NET         = (CategoryMask{1} <<  0),\n-        TOR         = (CategoryMask{1} <<  1),\n-        MEMPOOL     = (CategoryMask{1} <<  2),\n-        HTTP        = (CategoryMask{1} <<  3),\n-        BENCH       = (CategoryMask{1} <<  4),\n-        ZMQ         = (CategoryMask{1} <<  5),\n-        WALLETDB    = (CategoryMask{1} <<  6),\n-        RPC         = (CategoryMask{1} <<  7),\n-        ESTIMATEFEE = (CategoryMask{1} <<  8),\n-        ADDRMAN     = (CategoryMask{1} <<  9),\n-        SELECTCOINS = (CategoryMask{1} << 10),\n-        REINDEX     = (CategoryMask{1} << 11),\n-        CMPCTBLOCK  = (CategoryMask{1} << 12),\n-        RAND        = (CategoryMask{1} << 13),\n-        PRUNE       = (CategoryMask{1} << 14),\n-        PROXY       = (CategoryMask{1} << 15),\n-        MEMPOOLREJ  = (CategoryMask{1} << 16),\n-        LIBEVENT    = (CategoryMask{1} << 17),\n-        COINDB      = (CategoryMask{1} << 18),\n-        QT          = (CategoryMask{1} << 19),\n-        LEVELDB     = (CategoryMask{1} << 20),\n-        VALIDATION  = (CategoryMask{1} << 21),\n-        I2P         = (CategoryMask{1} << 22),\n-        IPC         = (CategoryMask{1} << 23),\n+        NONE                       = CategoryMask{0},\n+        NET                        = (CategoryMask{1} <<  0),\n+        TOR                        = (CategoryMask{1} <<  1),\n+        MEMPOOL                    = (CategoryMask{1} <<  2),\n+        HTTP                       = (CategoryMask{1} <<  3),\n+        BENCH                      = (CategoryMask{1} <<  4),\n+        ZMQ                        = (CategoryMask{1} <<  5),\n+        WALLETDB                   = (CategoryMask{1} <<  6),\n+        RPC                        = (CategoryMask{1} <<  7),\n+        ESTIMATEFEE                = (CategoryMask{1} <<  8),\n+        ADDRMAN                    = (CategoryMask{1} <<  9),\n+        SELECTCOINS                = (CategoryMask{1} << 10),\n+        REINDEX                    = (CategoryMask{1} << 11),\n+        CMPCTBLOCK                 = (CategoryMask{1} << 12),\n+        RAND                       = (CategoryMask{1} << 13),\n+        PRUNE                      = (CategoryMask{1} << 14),\n+        PROXY                      = (CategoryMask{1} << 15),\n+        MEMPOOLREJ                 = (CategoryMask{1} << 16),\n+        LIBEVENT                   = (CategoryMask{1} << 17),\n+        COINDB                     = (CategoryMask{1} << 18),\n+        QT                         = (CategoryMask{1} << 19),\n+        LEVELDB                    = (CategoryMask{1} << 20),\n+        VALIDATION                 = (CategoryMask{1} << 21),\n+        I2P                        = (CategoryMask{1} << 22),\n+        IPC                        = (CategoryMask{1} << 23),\n #ifdef DEBUG_LOCKCONTENTION\n-        LOCK        = (CategoryMask{1} << 24),\n+        LOCK                       = (CategoryMask{1} << 24),\n #endif\n-        BLOCKSTORAGE = (CategoryMask{1} << 25),\n-        TXRECONCILIATION = (CategoryMask{1} << 26),\n-        SCAN        = (CategoryMask{1} << 27),\n-        TXPACKAGES  = (CategoryMask{1} << 28),\n-        ALL         = ~NONE,\n+        BLOCKSTORAGE               = (CategoryMask{1} << 25),\n+        TXRECONCILIATION           = (CategoryMask{1} << 26),\n+        SCAN                       = (CategoryMask{1} << 27),\n+        TXPACKAGES                 = (CategoryMask{1} << 28),\n+        UNCONDITIONAL_RATE_LIMITED = (CategoryMask{1} << 29),\n+        UNCONDITIONAL_ALWAYS       = (CategoryMask{1} << 30),",
      "path": "src/logging.h",
      "position": null,
      "original_position": 121,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure introducing two extra category flags is a good abstraction here - feels noisy.\r\nWouldn’t it be cleaner to decide based on exposure to the attack surface instead? For example, during IBD (or any state with zero peer connections) we could leave all logs unrestricted, and always enable rate-limiting when node is reachable by peers.",
      "created_at": "2025-06-03T09:49:44Z",
      "updated_at": "2025-06-03T10:09:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123314635",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123314635"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123334010",
      "pull_request_review_id": 2891468741,
      "id": 2123334010,
      "node_id": "PRRC_kwDOABII585-j4F6",
      "diff_hunk": "@@ -105,6 +168,11 @@ namespace BCLog {\n         size_t m_cur_buffer_memusage GUARDED_BY(m_cs){0};\n         size_t m_buffer_lines_discarded GUARDED_BY(m_cs){0};\n \n+        //! Fixed window rate limiters for each source location that has attempted to log something.\n+        std::unordered_map<std::source_location, LogRateLimiter, SourceLocationHasher, SourceLocationEqual> m_ratelimiters GUARDED_BY(m_cs);",
      "path": "src/logging.h",
      "position": null,
      "original_position": 188,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Do we ever clear `m_ratelimiters`, or does that map only grow over the lifetime of the process?",
      "created_at": "2025-06-03T09:57:52Z",
      "updated_at": "2025-06-03T10:09:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123334010",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123334010"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123366909",
      "pull_request_review_id": 2891662033,
      "id": 2123366909,
      "node_id": "PRRC_kwDOABII585-kAH9",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Since the attack only matters when peers can influence us, could we simply disable rate-limiting for all logs during IBD\r\n\r\n?",
      "created_at": "2025-06-03T10:14:05Z",
      "updated_at": "2025-06-03T10:14:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123366909",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123366909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123404055",
      "pull_request_review_id": 2891723668,
      "id": 2123404055,
      "node_id": "PRRC_kwDOABII585-kJMX",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can you be more specific :)?",
      "created_at": "2025-06-03T10:33:06Z",
      "updated_at": "2025-06-03T10:33:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123404055",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123404055"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123418578",
      "pull_request_review_id": 2891749480,
      "id": 2123418578,
      "node_id": "PRRC_kwDOABII585-kMvS",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What do you mean by \"peers not being able to influence us during IBD\"?",
      "created_at": "2025-06-03T10:39:57Z",
      "updated_at": "2025-06-03T10:39:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123418578",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123418578"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123460031",
      "pull_request_review_id": 2891811142,
      "id": 2123460031,
      "node_id": "PRRC_kwDOABII585-kW2_",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I meant that during IBD we’re mostly replaying validated history, and my understanding is that rate-limiting is meant to protect logs caused by peer-supplied invalid data, not the deterministic IBD progress logs (e.g. `-debug=bench` or `-debug=leveldb`, which are *very* verbose (way over the 1MiB/h), but isn't related to a user-sent serialization error or similar cheap attack). \"Attacking\" a node that is still in the original IBD seems less severe to me than skipped logs. I also understand if you disagree with this and I would appreciate an explanation, I want to understand.\r\n\r\nWe can still get invalid data (thanks for triggering a clarification), but maybe the guard should added per `LogFlags` and we may want to blacklist instead of whitelisting.\r\nOr is this meant as a final catch-all for all the unknowns, e.g. maybe there's a trick to enable LevelDB logs externally and this should still guard against that?",
      "created_at": "2025-06-03T10:59:31Z",
      "updated_at": "2025-06-03T10:59:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123460031",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123460031"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123834199",
      "pull_request_review_id": 2892400480,
      "id": 2123834199,
      "node_id": "PRRC_kwDOABII585-lyNX",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I believe that if somebody is using `-debug=bench` or `-debug=leveldb`, the fact that they are using a category should bypass the rate limit if `LogDebug` is used. I think the mitigation should be in place whether or not we're in IBD -- if we have any peers (inbound or outbound), we need to be cautious. This patch _is_ meant to be the \"final catch-all\" like you said to fully eliminate this class of attack.",
      "created_at": "2025-06-03T13:32:35Z",
      "updated_at": "2025-06-03T14:14:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123834199",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123834199"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123954582",
      "pull_request_review_id": 2892579303,
      "id": 2123954582,
      "node_id": "PRRC_kwDOABII585-mPmW",
      "diff_hunk": "@@ -39,39 +62,41 @@ struct LogCategory {\n namespace BCLog {\n     using CategoryMask = uint64_t;\n     enum LogFlags : CategoryMask {\n-        NONE        = CategoryMask{0},\n-        NET         = (CategoryMask{1} <<  0),\n-        TOR         = (CategoryMask{1} <<  1),\n-        MEMPOOL     = (CategoryMask{1} <<  2),\n-        HTTP        = (CategoryMask{1} <<  3),\n-        BENCH       = (CategoryMask{1} <<  4),\n-        ZMQ         = (CategoryMask{1} <<  5),\n-        WALLETDB    = (CategoryMask{1} <<  6),\n-        RPC         = (CategoryMask{1} <<  7),\n-        ESTIMATEFEE = (CategoryMask{1} <<  8),\n-        ADDRMAN     = (CategoryMask{1} <<  9),\n-        SELECTCOINS = (CategoryMask{1} << 10),\n-        REINDEX     = (CategoryMask{1} << 11),\n-        CMPCTBLOCK  = (CategoryMask{1} << 12),\n-        RAND        = (CategoryMask{1} << 13),\n-        PRUNE       = (CategoryMask{1} << 14),\n-        PROXY       = (CategoryMask{1} << 15),\n-        MEMPOOLREJ  = (CategoryMask{1} << 16),\n-        LIBEVENT    = (CategoryMask{1} << 17),\n-        COINDB      = (CategoryMask{1} << 18),\n-        QT          = (CategoryMask{1} << 19),\n-        LEVELDB     = (CategoryMask{1} << 20),\n-        VALIDATION  = (CategoryMask{1} << 21),\n-        I2P         = (CategoryMask{1} << 22),\n-        IPC         = (CategoryMask{1} << 23),\n+        NONE                       = CategoryMask{0},\n+        NET                        = (CategoryMask{1} <<  0),\n+        TOR                        = (CategoryMask{1} <<  1),\n+        MEMPOOL                    = (CategoryMask{1} <<  2),\n+        HTTP                       = (CategoryMask{1} <<  3),\n+        BENCH                      = (CategoryMask{1} <<  4),\n+        ZMQ                        = (CategoryMask{1} <<  5),\n+        WALLETDB                   = (CategoryMask{1} <<  6),\n+        RPC                        = (CategoryMask{1} <<  7),\n+        ESTIMATEFEE                = (CategoryMask{1} <<  8),\n+        ADDRMAN                    = (CategoryMask{1} <<  9),\n+        SELECTCOINS                = (CategoryMask{1} << 10),\n+        REINDEX                    = (CategoryMask{1} << 11),\n+        CMPCTBLOCK                 = (CategoryMask{1} << 12),\n+        RAND                       = (CategoryMask{1} << 13),\n+        PRUNE                      = (CategoryMask{1} << 14),\n+        PROXY                      = (CategoryMask{1} << 15),\n+        MEMPOOLREJ                 = (CategoryMask{1} << 16),\n+        LIBEVENT                   = (CategoryMask{1} << 17),\n+        COINDB                     = (CategoryMask{1} << 18),\n+        QT                         = (CategoryMask{1} << 19),\n+        LEVELDB                    = (CategoryMask{1} << 20),\n+        VALIDATION                 = (CategoryMask{1} << 21),\n+        I2P                        = (CategoryMask{1} << 22),\n+        IPC                        = (CategoryMask{1} << 23),\n #ifdef DEBUG_LOCKCONTENTION\n-        LOCK        = (CategoryMask{1} << 24),\n+        LOCK                       = (CategoryMask{1} << 24),\n #endif\n-        BLOCKSTORAGE = (CategoryMask{1} << 25),\n-        TXRECONCILIATION = (CategoryMask{1} << 26),\n-        SCAN        = (CategoryMask{1} << 27),\n-        TXPACKAGES  = (CategoryMask{1} << 28),\n-        ALL         = ~NONE,\n+        BLOCKSTORAGE               = (CategoryMask{1} << 25),\n+        TXRECONCILIATION           = (CategoryMask{1} << 26),\n+        SCAN                       = (CategoryMask{1} << 27),\n+        TXPACKAGES                 = (CategoryMask{1} << 28),\n+        UNCONDITIONAL_RATE_LIMITED = (CategoryMask{1} << 29),\n+        UNCONDITIONAL_ALWAYS       = (CategoryMask{1} << 30),",
      "path": "src/logging.h",
      "position": null,
      "original_position": 121,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2123314635,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "See https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115570067, will change. Imo, having to determine whether we are in IBD or have zero peer connections is heading into too much complexity. This PR shouldn't cause IBD debug logs to be rate-limited, but if it does we should fix that.",
      "created_at": "2025-06-03T14:08:33Z",
      "updated_at": "2025-06-03T14:08:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123954582",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123954582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123959106",
      "pull_request_review_id": 2892587004,
      "id": 2123959106,
      "node_id": "PRRC_kwDOABII585-mQtC",
      "diff_hunk": "@@ -105,6 +168,11 @@ namespace BCLog {\n         size_t m_cur_buffer_memusage GUARDED_BY(m_cs){0};\n         size_t m_buffer_lines_discarded GUARDED_BY(m_cs){0};\n \n+        //! Fixed window rate limiters for each source location that has attempted to log something.\n+        std::unordered_map<std::source_location, LogRateLimiter, SourceLocationHasher, SourceLocationEqual> m_ratelimiters GUARDED_BY(m_cs);",
      "path": "src/logging.h",
      "position": null,
      "original_position": 188,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2123334010,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This never gets cleared. I haven't calculated the overhead of the map, but it could make sense to clear it periodically. Do you think it should just be on a timer or something? ",
      "created_at": "2025-06-03T14:09:40Z",
      "updated_at": "2025-06-03T14:11:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123959106",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123959106"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123974464",
      "pull_request_review_id": 2892612128,
      "id": 2123974464,
      "node_id": "PRRC_kwDOABII585-mUdA",
      "diff_hunk": "@@ -105,6 +168,11 @@ namespace BCLog {\n         size_t m_cur_buffer_memusage GUARDED_BY(m_cs){0};\n         size_t m_buffer_lines_discarded GUARDED_BY(m_cs){0};\n \n+        //! Fixed window rate limiters for each source location that has attempted to log something.\n+        std::unordered_map<std::source_location, LogRateLimiter, SourceLocationHasher, SourceLocationEqual> m_ratelimiters GUARDED_BY(m_cs);",
      "path": "src/logging.h",
      "position": null,
      "original_position": 188,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2123334010,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "note: this is part of my suggestion in https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2115841360",
      "created_at": "2025-06-03T14:13:15Z",
      "updated_at": "2025-06-03T14:13:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2123974464",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2123974464"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124158984",
      "pull_request_review_id": 2892920996,
      "id": 2124158984,
      "node_id": "PRRC_kwDOABII585-nBgI",
      "diff_hunk": "@@ -105,6 +168,11 @@ namespace BCLog {\n         size_t m_cur_buffer_memusage GUARDED_BY(m_cs){0};\n         size_t m_buffer_lines_discarded GUARDED_BY(m_cs){0};\n \n+        //! Fixed window rate limiters for each source location that has attempted to log something.\n+        std::unordered_map<std::source_location, LogRateLimiter, SourceLocationHasher, SourceLocationEqual> m_ratelimiters GUARDED_BY(m_cs);",
      "path": "src/logging.h",
      "position": null,
      "original_position": 188,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2123334010,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "@stickies-v, my mistake, I quickly wanted to make sure this doesn't affect my IBD benchmarks, didn't have time to review it in detail yet",
      "created_at": "2025-06-03T15:03:54Z",
      "updated_at": "2025-06-03T15:03:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2124158984",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124158984"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124163227",
      "pull_request_review_id": 2892927941,
      "id": 2124163227,
      "node_id": "PRRC_kwDOABII585-nCib",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for clarifying",
      "created_at": "2025-06-03T15:04:59Z",
      "updated_at": "2025-06-03T15:05:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2124163227",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124163227"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124802864",
      "pull_request_review_id": 2893917022,
      "id": 2124802864,
      "node_id": "PRRC_kwDOABII585-pesw",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115570067,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "While implementing this, I came to the conclusion that because macros don't have default arguments, skipping the rate limiting for `UpdateTipLog` means that we need to: 1) introduce a new macro for IBD specifically for `UpdateTipLog`, or 2) modify all call-sites of whichever macro `UpdateTipLog` uses to accept a `rate_limit` argument.\r\n\r\nI am partial to introducing a new macro for `UpdateTipLog` since it gets rid of the noise in the categories logic. I think that option 2) to modify all call-sites to pass in a rate-limiting argument is cumbersome when most callers don't need to be aware of rate limiting and it should instead be done under-the-hood (i.e. `UpdateTipLog` is the exception to the rule). I think using a boolean for rate-limiting vs no-rate-limiting is better than a uint64_t because then the proposed `SourceLocationCounter` needs to also keep track of this window-scaling value (i.e. multiple of `WINDOW_MAX_BYTES`).\r\n\r\nI might be wrong here, curious to hear thoughts.",
      "created_at": "2025-06-03T19:56:07Z",
      "updated_at": "2025-06-03T20:30:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2124802864",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2124802864"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2126699985",
      "pull_request_review_id": 2896892503,
      "id": 2126699985,
      "node_id": "PRRC_kwDOABII585-wt3R",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115570067,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> 2) to modify all call-sites to pass in a rate-limiting argument is cumbersome\r\n\r\nAbsolutely agree that would not be an improvement.\r\n\r\n> I think using a boolean for rate-limiting vs no-rate-limiting is better than a uint64_t\r\n\r\nI think either will work fine, the uint64_t generalizes a bit nicer but we probably won't be needing the generalization in the future, so whichever ends up being the most elegant implementation now is what I think we should go for.\r\n\r\n> I am partial to introducing a new macro for `UpdateTipLog`\r\n\r\nThat seems sensible to me, yes.",
      "created_at": "2025-06-04T14:07:57Z",
      "updated_at": "2025-06-04T14:07:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2126699985",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2126699985"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127117379",
      "pull_request_review_id": 2897579695,
      "id": 2127117379,
      "node_id": "PRRC_kwDOABII585-yTxD",
      "diff_hunk": "@@ -364,33 +368,71 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::FormatLogStrAndRateLimit(std::string& str, BCLog::LogFlags category, BCLog::Level level, const std::source_location& source_loc, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime)\n {\n     if (!str.ends_with('\\n')) str.push_back('\\n');\n \n     str.insert(0, GetLogPrefix(category, level));\n \n     if (m_log_sourcelocations) {\n-        str.insert(0, strprintf(\"[%s:%d] [%s] \", RemovePrefixView(source_file, \"./\"), source_line, logging_function));\n+        str.insert(0, strprintf(\"[%s:%d] [%s] \", RemovePrefixView(source_loc.file_name(), \"./\"), source_loc.line(), logging_function));\n     }\n \n     if (m_log_threadnames) {\n         str.insert(0, strprintf(\"[%s] \", (threadname.empty() ? \"unknown\" : threadname)));\n     }\n \n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    if (category == UNCONDITIONAL_RATE_LIMITED && m_ratelimit) {\n+        was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+        is_ratelimited = !m_ratelimiters[source_loc].Consume(str.size());\n+\n+        if (!is_ratelimited && was_ratelimited) {\n+            // Logging will restart for this source location.\n+            m_suppressed_locations.erase(source_loc);\n+\n+            uint64_t dropped_bytes = m_ratelimiters[source_loc].GetDroppedBytes();\n+\n+            str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\n+                                    \"(%d MiB) were dropped during the last hour.\\n\",\n+                                    source_loc.file_name(), source_loc.line(), logging_function,\n+                                    dropped_bytes / (1024 * 1024)));\n+        } else if (is_ratelimited && !was_ratelimited) {",
      "path": "src/logging.cpp",
      "position": 72,
      "original_position": 97,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115869345,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I want to address this because I think it would be useful to catch in debug builds via `Assume` but also don't want to break tests. Do you think this should be addressed?",
      "created_at": "2025-06-04T17:39:39Z",
      "updated_at": "2025-06-04T17:58:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2127117379",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127117379"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 404,
      "original_line": 404,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127118833",
      "pull_request_review_id": 2897579695,
      "id": 2127118833,
      "node_id": "PRRC_kwDOABII585-yUHx",
      "diff_hunk": "@@ -81,16 +106,54 @@ namespace BCLog {\n         Error,\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n+    static constexpr LogFlags DEFAULT_LOG_FLAGS{UNCONDITIONAL_RATE_LIMITED | UNCONDITIONAL_ALWAYS};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRateLimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::time_point<NodeClock> m_last_reset;",
      "path": "src/logging.h",
      "position": 62,
      "original_position": 138,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115841360,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Implemented this change, lmk what you think. I think this encapsulates code a bit better, but it probably could still be improved.",
      "created_at": "2025-06-04T17:40:40Z",
      "updated_at": "2025-06-04T17:58:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2127118833",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127118833"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 114,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127126139",
      "pull_request_review_id": 2897579695,
      "id": 2127126139,
      "node_id": "PRRC_kwDOABII585-yV57",
      "diff_hunk": "@@ -113,17 +181,17 @@ namespace BCLog {\n         std::atomic<Level> m_log_level{DEFAULT_LOG_LEVEL};\n \n         /** Log categories bitfield. */\n-        std::atomic<CategoryMask> m_categories{BCLog::NONE};\n+        std::atomic<CategoryMask> m_categories{DEFAULT_LOG_FLAGS};",
      "path": "src/logging.h",
      "position": null,
      "original_position": 200,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115570067,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've changed this so that the logging macros eventually pass a `should_ratelimit` bool to `LogPrintStr`. Instead of introducing a new macro for `UpdateTipLog`, it now uses `LogPrintLevel` which can bypass the rate-limiting. I'm not sure how I feel about using `LogPrintLevel` as I don't want to encourage more usage of it in the codebase as it could be a potential footgun.",
      "created_at": "2025-06-04T17:45:17Z",
      "updated_at": "2025-06-04T17:58:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2127126139",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127126139"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127131414",
      "pull_request_review_id": 2897579695,
      "id": 2127131414,
      "node_id": "PRRC_kwDOABII585-yXMW",
      "diff_hunk": "@@ -364,33 +368,71 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::FormatLogStrAndRateLimit(std::string& str, BCLog::LogFlags category, BCLog::Level level, const std::source_location& source_loc, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime)",
      "path": "src/logging.cpp",
      "position": null,
      "original_position": 64,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115826232,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've carved this out into a `NeedsRateLimiting` function and have kept the logic of `FormatLogStrInPlace` mostly unchanged. The reason I had the original change is because `FormatLogStrInPlace` inserts a timestamp at the beginning of `str` and I wanted the prepended rate-limiting logs to occur after the timestamp. With the new change, the rate-limiting logs are first in `str` followed by the time-stamp. I think now the logs look a little wonky, but I like the code change better. I could also extract the time-stamp prepend logic so it's called after `NeedsRateLimiting`.",
      "created_at": "2025-06-04T17:48:36Z",
      "updated_at": "2025-06-04T18:00:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2127131414",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127131414"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 374,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127134262",
      "pull_request_review_id": 2897579695,
      "id": 2127134262,
      "node_id": "PRRC_kwDOABII585-yX42",
      "diff_hunk": "@@ -39,39 +62,41 @@ struct LogCategory {\n namespace BCLog {\n     using CategoryMask = uint64_t;\n     enum LogFlags : CategoryMask {\n-        NONE        = CategoryMask{0},\n-        NET         = (CategoryMask{1} <<  0),\n-        TOR         = (CategoryMask{1} <<  1),\n-        MEMPOOL     = (CategoryMask{1} <<  2),\n-        HTTP        = (CategoryMask{1} <<  3),\n-        BENCH       = (CategoryMask{1} <<  4),\n-        ZMQ         = (CategoryMask{1} <<  5),\n-        WALLETDB    = (CategoryMask{1} <<  6),\n-        RPC         = (CategoryMask{1} <<  7),\n-        ESTIMATEFEE = (CategoryMask{1} <<  8),\n-        ADDRMAN     = (CategoryMask{1} <<  9),\n-        SELECTCOINS = (CategoryMask{1} << 10),\n-        REINDEX     = (CategoryMask{1} << 11),\n-        CMPCTBLOCK  = (CategoryMask{1} << 12),\n-        RAND        = (CategoryMask{1} << 13),\n-        PRUNE       = (CategoryMask{1} << 14),\n-        PROXY       = (CategoryMask{1} << 15),\n-        MEMPOOLREJ  = (CategoryMask{1} << 16),\n-        LIBEVENT    = (CategoryMask{1} << 17),\n-        COINDB      = (CategoryMask{1} << 18),\n-        QT          = (CategoryMask{1} << 19),\n-        LEVELDB     = (CategoryMask{1} << 20),\n-        VALIDATION  = (CategoryMask{1} << 21),\n-        I2P         = (CategoryMask{1} << 22),\n-        IPC         = (CategoryMask{1} << 23),\n+        NONE                       = CategoryMask{0},\n+        NET                        = (CategoryMask{1} <<  0),\n+        TOR                        = (CategoryMask{1} <<  1),\n+        MEMPOOL                    = (CategoryMask{1} <<  2),\n+        HTTP                       = (CategoryMask{1} <<  3),\n+        BENCH                      = (CategoryMask{1} <<  4),\n+        ZMQ                        = (CategoryMask{1} <<  5),\n+        WALLETDB                   = (CategoryMask{1} <<  6),\n+        RPC                        = (CategoryMask{1} <<  7),\n+        ESTIMATEFEE                = (CategoryMask{1} <<  8),\n+        ADDRMAN                    = (CategoryMask{1} <<  9),\n+        SELECTCOINS                = (CategoryMask{1} << 10),\n+        REINDEX                    = (CategoryMask{1} << 11),\n+        CMPCTBLOCK                 = (CategoryMask{1} << 12),\n+        RAND                       = (CategoryMask{1} << 13),\n+        PRUNE                      = (CategoryMask{1} << 14),\n+        PROXY                      = (CategoryMask{1} << 15),\n+        MEMPOOLREJ                 = (CategoryMask{1} << 16),\n+        LIBEVENT                   = (CategoryMask{1} << 17),\n+        COINDB                     = (CategoryMask{1} << 18),\n+        QT                         = (CategoryMask{1} << 19),\n+        LEVELDB                    = (CategoryMask{1} << 20),\n+        VALIDATION                 = (CategoryMask{1} << 21),\n+        I2P                        = (CategoryMask{1} << 22),\n+        IPC                        = (CategoryMask{1} << 23),\n #ifdef DEBUG_LOCKCONTENTION\n-        LOCK        = (CategoryMask{1} << 24),\n+        LOCK                       = (CategoryMask{1} << 24),\n #endif\n-        BLOCKSTORAGE = (CategoryMask{1} << 25),\n-        TXRECONCILIATION = (CategoryMask{1} << 26),\n-        SCAN        = (CategoryMask{1} << 27),\n-        TXPACKAGES  = (CategoryMask{1} << 28),\n-        ALL         = ~NONE,\n+        BLOCKSTORAGE               = (CategoryMask{1} << 25),\n+        TXRECONCILIATION           = (CategoryMask{1} << 26),\n+        SCAN                       = (CategoryMask{1} << 27),\n+        TXPACKAGES                 = (CategoryMask{1} << 28),\n+        UNCONDITIONAL_RATE_LIMITED = (CategoryMask{1} << 29),\n+        UNCONDITIONAL_ALWAYS       = (CategoryMask{1} << 30),",
      "path": "src/logging.h",
      "position": null,
      "original_position": 121,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2123314635,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolving as I've removed categories.",
      "created_at": "2025-06-04T17:50:27Z",
      "updated_at": "2025-06-04T17:58:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2127134262",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127134262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 98,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127135142",
      "pull_request_review_id": 2897579695,
      "id": 2127135142,
      "node_id": "PRRC_kwDOABII585-yYGm",
      "diff_hunk": "@@ -105,6 +168,11 @@ namespace BCLog {\n         size_t m_cur_buffer_memusage GUARDED_BY(m_cs){0};\n         size_t m_buffer_lines_discarded GUARDED_BY(m_cs){0};\n \n+        //! Fixed window rate limiters for each source location that has attempted to log something.\n+        std::unordered_map<std::source_location, LogRateLimiter, SourceLocationHasher, SourceLocationEqual> m_ratelimiters GUARDED_BY(m_cs);",
      "path": "src/logging.h",
      "position": null,
      "original_position": 188,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2123334010,
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Both the map and set are now cleared if `LogRateLimiter` determines that the logging window should be reset.",
      "created_at": "2025-06-04T17:51:01Z",
      "updated_at": "2025-06-04T17:58:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2127135142",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2127135142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 172,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128279631",
      "pull_request_review_id": 2899378420,
      "id": 2128279631,
      "node_id": "PRRC_kwDOABII585-2vhP",
      "diff_hunk": "@@ -31,6 +34,24 @@ extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n+struct SourceLocationEqual {\n+    bool operator()(const std::source_location& lhs, const std::source_location& rhs) const noexcept\n+    {\n+        return strcmp(lhs.file_name(), rhs.file_name()) == 0 && lhs.line() == rhs.line();",
      "path": "src/logging.h",
      "position": 35,
      "original_position": 27,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "bec74626867abefbfc55da5aaaf8a0c030663f3a",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "in bec74626867abefbfc55da5aaaf8a0c030663f3a:\r\n\r\nnit: comparing ints is more performant than comparing strings, and is more differentiating than the filename, so would do the line comparison first\r\n\r\n```cpp\r\n        return lhs.line() == rhs.line() && strcmp(lhs.file_name(), rhs.file_name()) == 0 ;\r\n```",
      "created_at": "2025-06-05T08:38:02Z",
      "updated_at": "2025-06-05T09:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128279631",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128279631"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 42,
      "original_line": 40,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128389554",
      "pull_request_review_id": 2899378420,
      "id": 2128389554,
      "node_id": "PRRC_kwDOABII585-3KWy",
      "diff_hunk": "@@ -364,17 +373,63 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::NeedsRateLimiting(bool should_ratelimit, const std::source_location& source_loc, std::string& str, std::string_view logging_function)",
      "path": "src/logging.cpp",
      "position": 47,
      "original_position": 47,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`NeedsRateLimiting` as well as the underlying maps imo belong to `LogRateLimiter` rather than `Logger`. I also don't think `should_ratelimit` is a meaningful parameter, the function should just not be called if that's `false`. I also don't understand why `logging_function` is a separate parameter - can't we just get that from `source_loc`?\r\n\r\nSuggested diff that incorporates all of those suggestions:\r\n\r\n<details>\r\n<summary>git diff on 5535df69a2</summary>\r\n\r\n```diff\r\ndiff --git a/src/logging.cpp b/src/logging.cpp\r\nindex 1e20c10368..c4ae881ffd 100644\r\n--- a/src/logging.cpp\r\n+++ b/src/logging.cpp\r\n@@ -5,6 +5,7 @@\r\n \r\n #include <logging.h>\r\n #include <memusage.h>\r\n+#include <sync.h>\r\n #include <util/check.h>\r\n #include <util/fs.h>\r\n #include <util/string.h>\r\n@@ -376,41 +377,40 @@ static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\r\n     return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\r\n }\r\n \r\n-bool BCLog::Logger::NeedsRateLimiting(bool should_ratelimit, const std::source_location& source_loc, std::string& str, std::string_view logging_function)\r\n+bool BCLog::LogRateLimiter::NeedsRateLimiting(const std::source_location& source_loc, std::string& str)\r\n {\r\n+    StdLockGuard scoped_lock(m_cs);\r\n     // Whether or not logging to disk was/is ratelimited for this source location.\r\n     bool was_ratelimited{false};\r\n     bool is_ratelimited{false};\r\n \r\n-    if (m_ratelimit && should_ratelimit) {\r\n-        // Check to see if we were rate limited before calling ResetWindow.\r\n-        was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\r\n+    // Check to see if we were rate limited before calling ResetWindow.\r\n+    was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\r\n \r\n-        // If the m_limiter window has elapsed, then we need to clear the unordered map and set.\r\n-        if (m_limiter.ResetWindow()) {\r\n-            m_source_locations.clear();\r\n-            m_suppressed_locations.clear();\r\n-        }\r\n+    // If the m_limiter window has elapsed, then we need to clear the unordered map and set.\r\n+    if (ResetWindow()) {\r\n+        m_source_locations.clear();\r\n+        m_suppressed_locations.clear();\r\n+    }\r\n \r\n-        is_ratelimited = !m_source_locations[source_loc].Consume(str.size());\r\n+    is_ratelimited = !m_source_locations[source_loc].Consume(str.size());\r\n \r\n-        if (!is_ratelimited && was_ratelimited) {\r\n-            uint64_t dropped_bytes = m_source_locations[source_loc].GetDroppedBytes();\r\n+    if (!is_ratelimited && was_ratelimited) {\r\n+        uint64_t dropped_bytes{m_source_locations[source_loc].GetDroppedBytes()};\r\n \r\n-            str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\r\n-                                    \"(%d MiB) were dropped during the last hour.\\n\",\r\n-                                    source_loc.file_name(), source_loc.line(), logging_function,\r\n-                                    dropped_bytes / (1024 * 1024)));\r\n-        } else if (is_ratelimited && !was_ratelimited) {\r\n-            // Logging from this source location will be suppressed until the current window resets.\r\n-            m_suppressed_locations.insert(source_loc);\r\n+        str.insert(0, strprintf(\"Restarting logging from %s:%d (%s): \"\r\n+                                \"(%d MiB) were dropped during the last hour.\\n\",\r\n+                                source_loc.file_name(), source_loc.line(), source_loc.function_name(),\r\n+                                dropped_bytes / (1024 * 1024)));\r\n+    } else if (is_ratelimited && !was_ratelimited) {\r\n+        // Logging from this source location will be suppressed until the current window resets.\r\n+        m_suppressed_locations.insert(source_loc);\r\n \r\n-            str.insert(0, strprintf(\"Excessive logging detected from %s:%d (%s): >%d MiB logged during the last hour.\"\r\n-                                    \"Suppressing logging to disk from this source location for up to one hour. \"\r\n-                                    \"Console logging unaffected. Last log entry.\",\r\n-                                    source_loc.file_name(), source_loc.line(), logging_function,\r\n-                                    LogRateLimiter::WINDOW_MAX_BYTES / (1024 * 1024)));\r\n-        }\r\n+        str.insert(0, strprintf(\"Excessive logging detected from %s:%d (%s): >%d MiB logged during the last hour.\"\r\n+                                \"Suppressing logging to disk from this source location for up to one hour. \"\r\n+                                \"Console logging unaffected. Last log entry.\",\r\n+                                source_loc.file_name(), source_loc.line(), source_loc.function_name(),\r\n+                                LogRateLimiter::WINDOW_MAX_BYTES / (1024 * 1024)));\r\n     }\r\n \r\n     // To avoid confusion caused by dropped log messages when debugging an issue,\r\n@@ -479,7 +479,7 @@ void BCLog::Logger::LogPrintStr_(std::string_view str, std::string_view logging_\r\n     }\r\n \r\n     FormatLogStrInPlace(str_prefixed, category, level, source_loc, logging_function, util::ThreadGetInternalName(), SystemClock::now(), GetMockTime());\r\n-    bool ratelimit = NeedsRateLimiting(should_ratelimit, source_loc, str_prefixed, logging_function);\r\n+    bool ratelimit = m_ratelimit && should_ratelimit && m_limiter.NeedsRateLimiting(source_loc, str_prefixed);\r\n \r\n     if (m_print_to_console) {\r\n         // print to console\r\ndiff --git a/src/logging.h b/src/logging.h\r\nindex b94b9cb495..f9441f6913 100644\r\n--- a/src/logging.h\r\n+++ b/src/logging.h\r\n@@ -48,7 +48,7 @@ struct SourceLocationHasher {\r\n     {\r\n         // Use CSipHasher(0, 0) as a simple way to get uniform distribution.\r\n         return static_cast<size_t>(CSipHasher(0, 0)\r\n-                                       .Write(std::hash<std::string>{}(s.file_name()))\r\n+                                       .Write(std::hash<std::string_view>{}(s.file_name()))\r\n                                        .Write(std::hash<int>{}(s.line()))\r\n                                        .Finalize());\r\n     }\r\n@@ -106,13 +106,18 @@ namespace BCLog {\r\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\r\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\r\n \r\n+    class SourceLocationCounter;\r\n     //! Fixed window rate limiter for logging.\r\n     class LogRateLimiter\r\n     {\r\n     private:\r\n         //! Timestamp of the last window reset.\r\n         std::chrono::time_point<NodeClock> m_last_reset;\r\n-\r\n+        //! Counters for each source location that has attempted to log something.\r\n+        std::unordered_map<std::source_location, SourceLocationCounter, SourceLocationHasher, SourceLocationEqual> m_source_locations GUARDED_BY(m_cs);\r\n+        //! Set of source file locations that were dropped on the last log attempt.\r\n+        std::unordered_set<std::source_location, SourceLocationHasher, SourceLocationEqual> m_suppressed_locations GUARDED_BY(m_cs);\r\n+        mutable StdMutex m_cs; // TODO: does LogRateLimiter need to use Logger:m_cs instead? Didn't investigate.\r\n     public:\r\n         //! Interval after which the window is reset.\r\n         static constexpr std::chrono::hours WINDOW_SIZE{1};\r\n@@ -120,6 +125,8 @@ namespace BCLog {\r\n         static constexpr uint64_t WINDOW_MAX_BYTES{1024 * 1024};\r\n         //! Attempts to reset the window if the window interval has passed. Returns true if the window was reset.\r\n         bool ResetWindow();\r\n+        //! Check if we need to rate limit a source_location.\r\n+        bool NeedsRateLimiting(const std::source_location& source_loc, std::string& str) EXCLUSIVE_LOCKS_REQUIRED(!m_cs);\r\n \r\n         LogRateLimiter() : m_last_reset{NodeClock::now()} {}\r\n \r\n@@ -176,10 +183,6 @@ namespace BCLog {\r\n \r\n         //! Keeps track of the last time we've reset the logging window.\r\n         LogRateLimiter m_limiter GUARDED_BY(m_cs);\r\n-        //! Counters for each source location that has attempted to log something.\r\n-        std::unordered_map<std::source_location, SourceLocationCounter, SourceLocationHasher, SourceLocationEqual> m_source_locations GUARDED_BY(m_cs);\r\n-        //! Set of source file locations that were dropped on the last log attempt.\r\n-        std::unordered_set<std::source_location, SourceLocationHasher, SourceLocationEqual> m_suppressed_locations GUARDED_BY(m_cs);\r\n \r\n         //! Category-specific log level. Overrides `m_log_level`.\r\n         std::unordered_map<LogFlags, Level> m_category_log_levels GUARDED_BY(m_cs);\r\n@@ -193,9 +196,6 @@ namespace BCLog {\r\n \r\n         void FormatLogStrInPlace(std::string& str, LogFlags category, Level level, const std::source_location& source_loc, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const;\r\n \r\n-        /** Check if we need to rate limit a source_location. */\r\n-        bool NeedsRateLimiting(bool should_ratelimit, const std::source_location& source_loc, std::string& str, std::string_view logging_function) EXCLUSIVE_LOCKS_REQUIRED(m_cs);\r\n-\r\n         std::string LogTimestampStr(SystemClock::time_point now, std::chrono::seconds mocktime) const;\r\n \r\n         /** Slots that connect to the print signal */\r\n\r\n```\r\n</details>\r\n\r\nNote: I didn't think about thread safety much yet, so I just threw in another `m_cs` to make it compile and pass tests, might be wrong/unsafe as-is.",
      "created_at": "2025-06-05T09:27:02Z",
      "updated_at": "2025-06-05T09:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128389554",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128389554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 379,
      "original_line": 379,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128390673",
      "pull_request_review_id": 2899378420,
      "id": 2128390673,
      "node_id": "PRRC_kwDOABII585-3KoR",
      "diff_hunk": "@@ -27,10 +31,29 @@ static const bool DEFAULT_LOGTIMESTAMPS = true;\n static const bool DEFAULT_LOGTHREADNAMES = false;\n static const bool DEFAULT_LOGSOURCELOCATIONS = false;\n static constexpr bool DEFAULT_LOGLEVELALWAYS = false;\n+static constexpr bool DEFAULT_RATELIMITLOGGING{true};\n extern const char * const DEFAULT_DEBUGLOGFILE;\n \n extern bool fLogIPs;\n \n+struct SourceLocationEqual {\n+    bool operator()(const std::source_location& lhs, const std::source_location& rhs) const noexcept\n+    {\n+        return strcmp(lhs.file_name(), rhs.file_name()) == 0 && lhs.line() == rhs.line();\n+    }\n+};\n+\n+struct SourceLocationHasher {\n+    size_t operator()(const std::source_location& s) const noexcept\n+    {\n+        // Use CSipHasher(0, 0) as a simple way to get uniform distribution.\n+        return static_cast<size_t>(CSipHasher(0, 0)\n+                                       .Write(std::hash<std::string>{}(s.file_name()))",
      "path": "src/logging.h",
      "position": 44,
      "original_position": 44,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: string_view to avoid unnecessary string construction\r\n\r\n```suggestion\r\n                                       .Write(std::hash<std::string_view>{}(s.file_name()))\r\n```",
      "created_at": "2025-06-05T09:27:33Z",
      "updated_at": "2025-06-05T09:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128390673",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128390673"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 51,
      "original_line": 51,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128403151",
      "pull_request_review_id": 2899378420,
      "id": 2128403151,
      "node_id": "PRRC_kwDOABII585-3NrP",
      "diff_hunk": "@@ -40,6 +40,7 @@ void AddLoggingArgs(ArgsManager& argsman)\n     argsman.AddArg(\"-loglevelalways\", strprintf(\"Always prepend a category and level (default: %u)\", DEFAULT_LOGLEVELALWAYS), ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-printtoconsole\", \"Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-shrinkdebugfile\", \"Shrink debug.log file on client startup (default: 1 when no -debug)\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-ratelimitlogging\", strprintf(\"Rate limit unconditional logging to disk (default: %u)\", DEFAULT_RATELIMITLOGGING), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "path": "src/init/common.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115526293,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It seems like this startup option is still in the latest force-push (5914a2ee6c915585b7213217047ad1644b873376), but from this discussion it doesn't seem like there are good arguments to keep it? I'm not sure if @l0rinc still needs it for IBD bench reasons, but imo that's way too much of a niche to keep it as a startup option?",
      "created_at": "2025-06-05T09:33:59Z",
      "updated_at": "2025-06-05T09:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128403151",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128403151"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 43,
      "original_line": 43,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128424406",
      "pull_request_review_id": 2899378420,
      "id": 2128424406,
      "node_id": "PRRC_kwDOABII585-3S3W",
      "diff_hunk": "@@ -269,11 +353,14 @@ inline void LogPrintFormatInternal(std::string_view logging_function, std::strin\n // evaluating arguments when logging for the category is not enabled.\n \n // Log conditionally, prefixing the output with the passed category name and severity level.\n-#define LogPrintLevel(category, level, ...)               \\\n-    do {                                                  \\\n-        if (LogAcceptCategory((category), (level))) {     \\\n-            LogPrintLevel_(category, level, __VA_ARGS__); \\\n-        }                                                 \\\n+// Note that conditional logging is performed WITHOUT rate limiting. Users specifying\n+// -debug are assumed to be developers or power users who are aware that -debug may cause\n+// excessive disk usage due to logging.\n+#define LogPrintLevel(category, level, ...)                                           \\",
      "path": "src/logging.h",
      "position": 224,
      "original_position": 224,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The previous docstring is misleading, `LogPrintLevel()` can also be used for unconditional logging when a `Level::Info` is passed as level, as is e.g. done in `mapport.cpp` and in a few other places. I don't think this is a robust way of deciding on rate limiting.\r\n\r\nI think I would prefer either:\r\n1. using `LogPrintLevel_` directly in `UpdateTipLog()`, with a comment on why we're using a private function and not enabling rate limiting here. A `LogInfoAlways` macro could be an alternative.\r\n2. refactoring `logging.h` replace a lot of the current macros to become regular functions using `std::source_location`, allowing easier overloads for ratelimiting. This probably makes more sense in a separate pull, so imo going with 1. in this PR and then improving with 2. separately would be nice?",
      "created_at": "2025-06-05T09:44:09Z",
      "updated_at": "2025-06-05T09:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128424406",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128424406"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 359,
      "original_line": 359,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128425813",
      "pull_request_review_id": 2899378420,
      "id": 2128425813,
      "node_id": "PRRC_kwDOABII585-3TNV",
      "diff_hunk": "@@ -81,16 +106,54 @@ namespace BCLog {\n         Error,\n     };\n     constexpr auto DEFAULT_LOG_LEVEL{Level::Debug};\n+    static constexpr LogFlags DEFAULT_LOG_FLAGS{UNCONDITIONAL_RATE_LIMITED | UNCONDITIONAL_ALWAYS};\n     constexpr size_t DEFAULT_MAX_LOG_BUFFER{1'000'000}; // buffer up to 1MB of log data prior to StartLogging\n \n+    //! Fixed window rate limiter for logging.\n+    class LogRateLimiter\n+    {\n+    private:\n+        //! Timestamp of the last window reset.\n+        std::chrono::time_point<NodeClock> m_last_reset;",
      "path": "src/logging.h",
      "position": 62,
      "original_position": 138,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "6dece0553ca4ba39e54e80e840c7cad93fbe1f96",
      "in_reply_to_id": 2115841360,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've left some comments for further encapsulation, but yeah I think this a step in the right direction, thanks!",
      "created_at": "2025-06-05T09:44:43Z",
      "updated_at": "2025-06-05T09:54:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128425813",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128425813"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 114,
      "original_line": 114,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128488386",
      "pull_request_review_id": 2899720611,
      "id": 2128488386,
      "node_id": "PRRC_kwDOABII585-3ifC",
      "diff_hunk": "@@ -364,17 +373,63 @@ std::string BCLog::Logger::GetLogPrefix(BCLog::LogFlags category, BCLog::Level l\n \n static size_t MemUsage(const BCLog::Logger::BufferedLog& buflog)\n {\n-    return buflog.str.size() + buflog.logging_function.size() + buflog.source_file.size() + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n+    return buflog.str.size() + buflog.logging_function.size() + strlen(buflog.source_loc.file_name()) + buflog.threadname.size() + memusage::MallocUsage(sizeof(memusage::list_node<BCLog::Logger::BufferedLog>));\n }\n \n-void BCLog::Logger::FormatLogStrInPlace(std::string& str, BCLog::LogFlags category, BCLog::Level level, std::string_view source_file, int source_line, std::string_view logging_function, std::string_view threadname, SystemClock::time_point now, std::chrono::seconds mocktime) const\n+bool BCLog::Logger::NeedsRateLimiting(bool should_ratelimit, const std::source_location& source_loc, std::string& str, std::string_view logging_function)\n+{\n+    // Whether or not logging to disk was/is ratelimited for this source location.\n+    bool was_ratelimited{false};\n+    bool is_ratelimited{false};\n+\n+    if (m_ratelimit && should_ratelimit) {\n+        // Check to see if we were rate limited before calling ResetWindow.\n+        was_ratelimited = m_suppressed_locations.find(source_loc) != m_suppressed_locations.end();\n+\n+        // If the m_limiter window has elapsed, then we need to clear the unordered map and set.\n+        if (m_limiter.ResetWindow()) {\n+            m_source_locations.clear();\n+            m_suppressed_locations.clear();\n+        }",
      "path": "src/logging.cpp",
      "position": 61,
      "original_position": 61,
      "commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "original_commit_id": "5535df69a2a7f198e48656912522d531d3867346",
      "in_reply_to_id": null,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This logic should be encapsulated in `ResetWindow` imo, so probably this statement could just be:\r\n\r\n```suggestion\r\n        m_limiter.MaybeResetWindow();\r\n```",
      "created_at": "2025-06-05T10:15:01Z",
      "updated_at": "2025-06-05T10:15:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32604#discussion_r2128488386",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2128488386"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32604"
        }
      },
      "start_line": 390,
      "original_start_line": 390,
      "start_side": "RIGHT",
      "line": 393,
      "original_line": 393,
      "side": "RIGHT"
    }
  ]
}