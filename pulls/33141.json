{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33141",
    "id": 2723430805,
    "node_id": "PR_kwDOABII586iVEGV",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33141",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33141.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33141.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33141",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33141/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33141/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33141/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/faaab70684779b81b2f6adac319bbf2d3b77165d",
    "number": 33141,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test: Remove polling loop from test_runner (take 2)",
    "user": {
      "login": "maflcko",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maflcko",
      "html_url": "https://github.com/maflcko",
      "followers_url": "https://api.github.com/users/maflcko/followers",
      "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
      "organizations_url": "https://api.github.com/users/maflcko/orgs",
      "repos_url": "https://api.github.com/users/maflcko/repos",
      "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/maflcko/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "(This picks up my prior attempt from https://github.com/bitcoin/bitcoin/pull/13384)\r\n\r\nCurrently, the test_runner is using a `time.sleep` before polling to check if any tests have completed. This is largely fine when running a few tests, or when the tests take a long time.\r\n\r\nHowever, when running many fast tests, this can accumulate and leave the CPU idle for no reason.\r\n\r\nA trivial improvement would be to only sleep when really needed:\r\n\r\n```diff\r\ndiff --git a/test/functional/test_runner.py b/test/functional/test_runner.py\r\nindex 7c8c15f391..1d9f28cee4 100755\r\n--- a/test/functional/test_runner.py\r\n+++ b/test/functional/test_runner.py\r\n@@ -747,7 +747,6 @@ class TestHandler:\r\n         dot_count = 0\r\n         while True:\r\n             # Return all procs that have finished, if any. Otherwise sleep until there is one.\r\n-            time.sleep(.5)\r\n             ret = []\r\n             for job in self.jobs:\r\n                 (name, start_time, proc, testdir, log_out, log_err) = job\r\n@@ -771,6 +770,7 @@ class TestHandler:\r\n                     ret.append((TestResult(name, status, int(time.time() - start_time)), testdir, stdout, stderr, skip_reason))\r\n             if ret:\r\n                 return ret\r\n+            time.sleep(.5)\r\n             if self.use_term_control:\r\n                 print('.', end='', flush=True)\r\n             dot_count += 1\r\n```\r\n\r\nHowever, ideally there is no sleep at all. So do that by using a `ThreadPoolExecutor`.\r\n\r\nThis can be tested via something like:\r\n\r\n```\r\ntime ./bld-cmake/test/functional/test_runner.py $(for i in {1..200}; do echo -n \"tool_rpcauth \"; done) -j 200\r\n```\r\n\r\nThe result should show:\r\n\r\n* Current `master` is the slowest\r\n* The \"sleep patch\" from above is a bit faster (1.5x improvement)\r\n* This pull request is the fastest (2x improvement)",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2025-08-06T07:56:32Z",
    "updated_at": "2025-08-18T13:23:17Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "ddfb6ab624e0e3d76e33376f9d91f92f229ac3ea",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "maflcko:2508-ci",
      "ref": "2508-ci",
      "sha": "faaab70684779b81b2f6adac319bbf2d3b77165d",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "bitcoin-core",
        "full_name": "maflcko/bitcoin-core",
        "owner": {
          "login": "maflcko",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/maflcko",
          "html_url": "https://github.com/maflcko",
          "followers_url": "https://api.github.com/users/maflcko/followers",
          "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
          "organizations_url": "https://api.github.com/users/maflcko/orgs",
          "repos_url": "https://api.github.com/users/maflcko/repos",
          "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/maflcko/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/maflcko/bitcoin-core",
        "fork": true,
        "url": "https://api.github.com/repos/maflcko/bitcoin-core",
        "archive_url": "https://api.github.com/repos/maflcko/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/maflcko/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/maflcko/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/maflcko/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/maflcko/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/maflcko/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/maflcko/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/maflcko/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/maflcko/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/maflcko/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/maflcko/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/maflcko/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/maflcko/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/maflcko/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/maflcko/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/maflcko/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/maflcko/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/maflcko/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/maflcko/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/maflcko/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/maflcko/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:maflcko/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/maflcko/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/maflcko/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/maflcko/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/maflcko/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/maflcko/bitcoin-core/hooks",
        "svn_url": "https://github.com/maflcko/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 25,
        "watchers_count": 25,
        "size": 258424,
        "default_branch": "master",
        "open_issues_count": 14,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-07T15:35:07Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2025-08-07T03:03:35Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "fd813bf863b1ffa91429de6342285b35bab2bfa4",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37648,
        "stargazers_count": 85075,
        "watchers_count": 85075,
        "size": 291259,
        "default_branch": "master",
        "open_issues_count": 753,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-18T10:54:35Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-18T13:34:50Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33141"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 21,
    "deletions": 12,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 2,
    "comments": 6
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhYWFiNzA2ODQ3NzliODFiMmY2YWRhYzMxOWJiZjJkM2I3NzE2NWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faaab70684779b81b2f6adac319bbf2d3b77165d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/faaab70684779b81b2f6adac319bbf2d3b77165d",
      "tree": {
        "sha": "ebee5cc1f2d9d46734fd40ca16c5c33575b2698c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ebee5cc1f2d9d46734fd40ca16c5c33575b2698c"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree ebee5cc1f2d9d46734fd40ca16c5c33575b2698c\nparent fd813bf863b1ffa91429de6342285b35bab2bfa4\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1754462027 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1754466070 +0200\n\ntest: Remove polling loop from test_runner\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQONHbiu5mISy977Y9jZk3u/I/8QaB4grUorMCGhAiejAykcTn0enrwHxN+H2s4mOin\n5IrB2yIe/FcDhOh9iF2Ag=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd813bf863b1ffa91429de6342285b35bab2bfa4",
          "sha": "fd813bf863b1ffa91429de6342285b35bab2bfa4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fd813bf863b1ffa91429de6342285b35bab2bfa4"
        }
      ],
      "message": "test: Remove polling loop from test_runner",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-08-06T07:41:10Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-08-06T06:33:47Z"
      },
      "sha": "faaab70684779b81b2f6adac319bbf2d3b77165d"
    },
    {
      "event": "labeled",
      "id": 19006802099,
      "node_id": "LE_lADOABII587Eb0DfzwAAAARs5Miz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19006802099",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-06T07:56:35Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 3157939606,
      "node_id": "IC_kwDOABII5868OlWW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3157939606",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-06T07:56:38Z",
      "updated_at": "2025-08-15T10:11:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33141.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [Eunovo](https://github.com/bitcoin/bitcoin/pull/33141#pullrequestreview-3123529231) |\n| Concept ACK | [l0rinc](https://github.com/bitcoin/bitcoin/pull/33141#issuecomment-3162361510) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33141#issuecomment-3157939606",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33141"
    },
    {
      "event": "commented",
      "id": 3162361510,
      "node_id": "IC_kwDOABII5868fc6m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3162361510",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-07T03:59:27Z",
      "updated_at": "2025-08-07T04:00:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "I ran the 3 versions you mentioned with hyperfine, 10 runs each:\r\n```python\r\nCOMMITS=\"d767503b6a2618e0c99407acf98f3bd19fb7defd 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7 35e91b899dac689b24a8a95fcef083affc695d1e\"; \\\r\nPARALLEL=200; RUNS=10; \\\r\nCC=gcc; CXX=g++; \\\r\nBUILD='Release'; \\\r\nTEST_LIST=$(python3 -c \"print('tool_rpcauth ' * $PARALLEL)\"); \\\r\n(echo \"\"; for c in $COMMITS; do git fetch -q origin $c && git log -1 --pretty='%h %s' $c || exit 1; done; echo \"\") && \\\r\nhyperfine \\\r\n  --sort command \\\r\n  --runs $RUNS \\\r\n  --parameter-list COMMIT ${COMMITS// /,} \\\r\n  --prepare \"git checkout {COMMIT}; git clean -fxd; git reset --hard && cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${BUILD} && ninja -C build\" \\\r\n  \"build/test/functional/test_runner.py $TEST_LIST -j$PARALLEL\"\r\n```\r\n\r\n> d767503b6a Merge bitcoin/bitcoin#33039: refactor,test: follow-ups to multi-byte block obfuscation\r\n> 5bb380ec87 test: sleep patch\r\n> 35e91b899d test: Remove polling loop from test_runner\r\n\r\n<details>\r\n<summary>runs</summary>\r\n\r\n```bash\r\nBenchmark 1: ./build/test/functional/test_runner.py tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth too\r\nl_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_r\r\npcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpca\r\nuth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth  -j200 (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):      7.233 s ±  0.057 s    [User: 41.885 s, System: 4.270 s]\r\n  Range (min … max):    7.085 s …  7.286 s    10 runs\r\n\r\nBenchmark 2: ./build/test/functional/test_runner.py tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth too\r\nl_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_r\r\npcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpca\r\nuth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth  -j200 (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):      3.827 s ±  0.127 s    [User: 41.717 s, System: 4.300 s]\r\n  Range (min … max):    3.726 s …  4.174 s    10 runs\r\n\r\nBenchmark 3: ./build/test/functional/test_runner.py tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth too\r\nl_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_r\r\npcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpca\r\nuth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth  -j200 (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):      3.696 s ±  0.026 s    [User: 41.489 s, System: 4.324 s]\r\n  Range (min … max):    3.681 s …  3.768 s    10 runs\r\n```\r\n\r\n</details>\r\n\r\nAnd I'm getting slightly different results than you:\r\n```python\r\nRelative speed comparison\r\n    1.96 ±  0.02  ./build/test/functional/test_runner.py tool_rpcauth [...] tool_rpcauth -j200 (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n    1.04 ±  0.04  ./build/test/functional/test_runner.py tool_rpcauth [...] tool_rpcauth -j200 (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n    1.00          ./build/test/functional/test_runner.py tool_rpcauth [...] tool_rpcauth -j200 (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n```\r\n\r\nTried a few different combinations:\r\n\r\n<details>\r\n<summary>gcc with debug (3 runs)</summary>\r\n\r\n```\r\nCOMMITS=\"d767503b6a2618e0c99407acf98f3bd19fb7defd 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7 35e91b899dac689b24a8a95fcef083affc695d1e\"; \\\r\nPARALLEL=200; RUNS=3; \\\r\nCC=gcc; CXX=g++; \\\r\nBUILD='Debug'; \\\r\nTEST_LIST=$(python3 -c \"print('tool_rpcauth ' * $PARALLEL)\"); \\\r\n(echo \"\"; for c in $COMMITS; do git fetch -q origin $c && git log -1 --pretty='%h %s' $c || exit 1; done; echo \"\") && \\\r\nhyperfine \\\r\n  --sort command \\\r\n  --runs $RUNS \\\r\n  --parameter-list COMMIT ${COMMITS// /,} \\\r\n  --prepare \"git checkout {COMMIT}; git clean -fxd; git reset --hard && cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${BUILD} && ninja -C build\" \\\r\n  \"./build/test/functional/test_runner.py $TEST_LIST -j$PARALLEL\"\r\n\r\nd767503b6a Merge bitcoin/bitcoin#33039: refactor,test: follow-ups to multi-byte block obfuscation\r\n5bb380ec87 test: sleep patch\r\n35e91b899d test: Remove polling loop from test_runner\r\n\r\nBenchmark 1: ./build/test/functional/test_runner.py tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth  -j200 (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):      7.716 s ±  0.013 s    [User: 42.081 s, System: 4.335 s]\r\n  Range (min … max):    7.704 s …  7.731 s    3 runs\r\n\r\nBenchmark 2: ./build/test/functional/test_runner.py tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth  -j200 (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):      4.301 s ±  0.034 s    [User: 42.486 s, System: 4.310 s]\r\n  Range (min … max):    4.263 s …  4.328 s    3 runs\r\n\r\nBenchmark 3: ./build/test/functional/test_runner.py tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth  -j200 (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):      4.169 s ±  0.028 s    [User: 41.859 s, System: 4.345 s]\r\n  Range (min … max):    4.140 s …  4.195 s    3 runs\r\n\r\nRelative speed comparison\r\n        1.85 ±  0.01  ./build/test/functional/test_runner.py tool_rpcauth [...] tool_rpcauth  -j200 (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n        1.03 ±  0.01  ./build/test/functional/test_runner.py tool_rpcauth [...] tool_rpcauth  -j200 (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n        1.00          ./build/test/functional/test_runner.py tool_rpcauth [...] tool_rpcauth  -j200 (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n```\r\n\r\n\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>clang with release (10 runs, different machine)</summary>\r\n\r\n```\r\nCOMMITS=\"d767503b6a2618e0c99407acf98f3bd19fb7defd 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7 35e91b899dac689b24a8a95fcef083affc695d1e\"; \\\r\nPARALLEL=200; RUNS=10; \\\r\nCC=clang; CXX=clang++;\r\nBUILD='Release'; \\\r\nTEST_LIST=$(python3 -c \"print('tool_rpcauth ' * $PARALLEL)\"); \\\r\n(echo \"\"; for c in $COMMITS; do git fetch -q origin $c && git log -1 --pretty='%h %s' $c || exit 1; done; echo \"\") && \\\r\nhyperfine \\\r\n  --sort command \\\r\n  --runs $RUNS \\\r\n  --parameter-list COMMIT ${COMMITS// /,} \\\r\n  --prepare \"git checkout {COMMIT}; git clean -fxd; git reset --hard && cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${BUILD} && ninja -C build\" \\\r\n  \"build/test/functional/test_runner.py $TEST_LIST -j$PARALLEL\"\r\n\r\nd767503b6a Merge bitcoin/bitcoin#33039: refactor,test: follow-ups to multi-byte block obfuscation\r\n5bb380ec87 test: sleep patch\r\n35e91b899d test: Remove polling loop from test_runner\r\n\r\nBenchmark 1: ./build/test/functional/test_runner.py tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth  -j200 (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):      9.829 s ±  0.183 s    [User: 38.943 s, System: 4.407 s]\r\n  Range (min … max):    9.694 s … 10.320 s    10 runs\r\n\r\nBenchmark 2: ./build/test/functional/test_runner.py tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth  -j200 (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):      7.063 s ±  0.193 s    [User: 38.883 s, System: 4.408 s]\r\n  Range (min … max):    6.796 s …  7.267 s    10 runs\r\n\r\nBenchmark 3: ./build/test/functional/test_runner.py tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth tool_rpcauth  -j200 (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):      6.904 s ±  0.213 s    [User: 38.949 s, System: 4.386 s]\r\n  Range (min … max):    6.649 s …  7.267 s    10 runs\r\n\r\nRelative speed comparison\r\n        1.42 ±  0.05  ./build/test/functional/test_runner.py [...] tool_rpcauth  -j200 (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n        1.02 ±  0.04  ./build/test/functional/test_runner.py [...] tool_rpcauth tool_rpcauth  -j200 (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n        1.00          ./build/test/functional/test_runner.py [...] tool_rpcauth tool_rpcauth  -j200 (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n```\r\n\r\n</details>\r\n\r\nSo this is obviously faster for many tiny tests, will run the same for the full test suite and do a full code review later.\r\nConcept ACK",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33141#issuecomment-3162361510",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33141"
    },
    {
      "event": "commented",
      "id": 3162681579,
      "node_id": "IC_kwDOABII5868grDr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3162681579",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-07T06:29:24Z",
      "updated_at": "2025-08-07T06:29:24Z",
      "author_association": "MEMBER",
      "body": "> So this is obviously faster for many tiny tests, will run the same for the full test suite and do a full code review later.\r\n\r\nNice. Thanks for testing and confirming that the code without any sleep is the fastest of the 3 versions. I think benchmarking the full test suite may be difficult, because it has internal noise higher than the savings here. At least back in https://github.com/bitcoin/bitcoin/pull/13384#issuecomment-394335449, it was hard to measure, but maybe there is less noise now and this can be measured now.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33141#issuecomment-3162681579",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33141"
    },
    {
      "event": "commented",
      "id": 3165029728,
      "node_id": "IC_kwDOABII5868poVg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3165029728",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-07T16:56:16Z",
      "updated_at": "2025-08-07T16:56:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "> it has internal noise higher than the savings here\r\n\r\nSure, but I'm just running them a lot of times, the trends are obvious this way.\r\n\r\n> will run the same for the full test suite\r\n\r\nI have measured running the tests with the 3 setups with 1-6x the nproc for parallelism.\r\nThe 3 solutions all scale well beyond the number of cpus (I'm now running the same until 8x on a different platform to confirm the findings).\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```\r\nCOMMITS=\"d767503b6a2618e0c99407acf98f3bd19fb7defd 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7 35e91b899dac689b24a8a95fcef083affc695d1e\"; \\\r\nRUNS=3; \\\r\nCC=gcc; CXX=g++; \\\r\nBUILD='Release'; \\\r\n(echo \"\"; for c in $COMMITS; do git fetch -q origin $c && git log -1 --pretty='%h %s' $c || exit 1; done; echo \"\") && \\\r\nhyperfine \\\r\n  --sort command \\\r\n  --runs $RUNS \\\r\n  --parameter-list COMMIT ${COMMITS// /,} \\\r\n  --parameter-list FACTOR $(seq -s, 1 6) \\\r\n  --prepare \"git checkout {COMMIT}; git clean -fxd; git reset --hard &&  cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${BUILD} && ninja -C build \" \\\r\n  \"build/test/functional/test_runner.py -j\\$(({FACTOR} * $(nproc))) || true\"\r\n\r\nd767503b6a Merge bitcoin/bitcoin#33039: refactor,test: follow-ups to multi-byte block obfuscation\r\n5bb380ec87 test: sleep patch\r\n35e91b899d test: Remove polling loop from test_runner\r\n\r\nBenchmark 1: build/test/functional/test_runner.py -j$((1 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):     161.044 s ± 14.549 s    [User: 727.494 s, System: 95.580 s]\r\n  Range (min … max):   151.727 s … 177.809 s    3 runs\r\n \r\nBenchmark 2: build/test/functional/test_runner.py -j$((1 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):     162.738 s ±  4.422 s    [User: 745.107 s, System: 95.168 s]\r\n  Range (min … max):   157.762 s … 166.217 s    3 runs\r\n \r\nBenchmark 3: build/test/functional/test_runner.py -j$((1 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):     164.559 s ±  2.955 s    [User: 740.193 s, System: 96.168 s]\r\n  Range (min … max):   161.401 s … 167.256 s    3 runs\r\n \r\nBenchmark 4: build/test/functional/test_runner.py -j$((2 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):     123.475 s ±  0.815 s    [User: 881.995 s, System: 112.519 s]\r\n  Range (min … max):   122.815 s … 124.385 s    3 runs\r\n \r\nBenchmark 5: build/test/functional/test_runner.py -j$((2 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):     123.129 s ±  2.608 s    [User: 881.362 s, System: 112.607 s]\r\n  Range (min … max):   121.520 s … 126.137 s    3 runs\r\n \r\n  Warning: Statistical outliers were detected. Consider re-running this benchmark on a quiet system without any interferences from other programs. It might help to use the '--warmup' or '--prepare' options.\r\n \r\nBenchmark 6: build/test/functional/test_runner.py -j$((2 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):     122.078 s ±  0.827 s    [User: 857.404 s, System: 113.242 s]\r\n  Range (min … max):   121.211 s … 122.858 s    3 runs\r\n \r\nBenchmark 7: build/test/functional/test_runner.py -j$((3 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):     111.159 s ±  1.883 s    [User: 900.148 s, System: 123.057 s]\r\n  Range (min … max):   109.349 s … 113.108 s    3 runs\r\n \r\nBenchmark 8: build/test/functional/test_runner.py -j$((3 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):     110.060 s ±  0.637 s    [User: 909.104 s, System: 123.203 s]\r\n  Range (min … max):   109.374 s … 110.634 s    3 runs\r\n \r\nBenchmark 9: build/test/functional/test_runner.py -j$((3 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):     107.698 s ±  0.202 s    [User: 908.138 s, System: 123.326 s]\r\n  Range (min … max):   107.530 s … 107.922 s    3 runs\r\n \r\nBenchmark 10: build/test/functional/test_runner.py -j$((4 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):     99.439 s ±  0.353 s    [User: 876.245 s, System: 123.568 s]\r\n  Range (min … max):   99.055 s … 99.750 s    3 runs\r\n \r\nBenchmark 11: build/test/functional/test_runner.py -j$((4 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):     100.665 s ±  0.930 s    [User: 878.436 s, System: 123.433 s]\r\n  Range (min … max):   99.654 s … 101.483 s    3 runs\r\n \r\nBenchmark 12: build/test/functional/test_runner.py -j$((4 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):     98.818 s ±  0.490 s    [User: 891.573 s, System: 122.992 s]\r\n  Range (min … max):   98.278 s … 99.234 s    3 runs\r\n \r\nBenchmark 13: build/test/functional/test_runner.py -j$((5 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):     96.018 s ±  1.705 s    [User: 847.227 s, System: 123.800 s]\r\n  Range (min … max):   95.008 s … 97.986 s    3 runs\r\n \r\n  Warning: The first benchmarking run for this command was significantly slower than the rest (97.986 s). This could be caused by (filesystem) caches that were not filled until after the first run. You are already using the '--prepare' option which can be used to clear caches. If you did not use a cache-clearing command with '--prepare', you can either try that or consider using the '--warmup' option to fill those caches before the actual benchmark.\r\n \r\nBenchmark 14: build/test/functional/test_runner.py -j$((5 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):     97.786 s ±  1.161 s    [User: 854.971 s, System: 123.509 s]\r\n  Range (min … max):   96.573 s … 98.888 s    3 runs\r\n \r\nBenchmark 15: build/test/functional/test_runner.py -j$((5 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):     97.968 s ±  1.246 s    [User: 876.036 s, System: 123.396 s]\r\n  Range (min … max):   96.862 s … 99.317 s    3 runs\r\n \r\nBenchmark 16: build/test/functional/test_runner.py -j$((6 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):     97.557 s ±  0.795 s    [User: 864.526 s, System: 124.178 s]\r\n  Range (min … max):   96.685 s … 98.242 s    3 runs\r\n \r\nBenchmark 17: build/test/functional/test_runner.py -j$((6 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):     98.179 s ±  1.145 s    [User: 863.995 s, System: 124.434 s]\r\n  Range (min … max):   97.295 s … 99.473 s    3 runs\r\n \r\nBenchmark 18: build/test/functional/test_runner.py -j$((6 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):     96.079 s ±  0.906 s    [User: 857.862 s, System: 124.003 s]\r\n  Range (min … max):   95.159 s … 96.970 s    3 runs\r\n \r\nRelative speed comparison\r\n        1.68 ±  0.15  build/test/functional/test_runner.py -j$((1 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n        1.69 ±  0.06  build/test/functional/test_runner.py -j$((1 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n        1.71 ±  0.04  build/test/functional/test_runner.py -j$((1 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n        1.29 ±  0.02  build/test/functional/test_runner.py -j$((2 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n        1.28 ±  0.04  build/test/functional/test_runner.py -j$((2 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n        1.27 ±  0.02  build/test/functional/test_runner.py -j$((2 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n        1.16 ±  0.03  build/test/functional/test_runner.py -j$((3 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n        1.15 ±  0.02  build/test/functional/test_runner.py -j$((3 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n        1.12 ±  0.02  build/test/functional/test_runner.py -j$((3 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n        1.04 ±  0.02  build/test/functional/test_runner.py -j$((4 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n        1.05 ±  0.02  build/test/functional/test_runner.py -j$((4 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n        1.03 ±  0.02  build/test/functional/test_runner.py -j$((4 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n        1.00          build/test/functional/test_runner.py -j$((5 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n        1.02 ±  0.02  build/test/functional/test_runner.py -j$((5 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n        1.02 ±  0.02  build/test/functional/test_runner.py -j$((5 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n        1.02 ±  0.02  build/test/functional/test_runner.py -j$((6 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n        1.02 ±  0.02  build/test/functional/test_runner.py -j$((6 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n        1.00 ±  0.02  build/test/functional/test_runner.py -j$((6 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n```\r\n\r\n</details>\r\n\r\n<img width=\"1000\" alt=\"image\" src=\"https://github.com/user-attachments/assets/baf5da85-751f-4bf5-bc28-629eadc3b0a1\" />\r\n\r\nWhich indicates to me that the new solution scales a bit better - but since we haven't even hit the bottom yet (surprisingly), I'll post those in a follow-up.\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33141#issuecomment-3165029728",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33141"
    },
    {
      "event": "commented",
      "id": 3165069155,
      "node_id": "IC_kwDOABII5868px9j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3165069155",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-07T17:09:52Z",
      "updated_at": "2025-08-07T17:09:52Z",
      "author_association": "MEMBER",
      "body": "> Which indicates to me that the new solution scales a bit better - but since we haven't even hit the bottom yet (surprisingly), I'll post those in a follow-up.\r\n\r\nThanks for the benchmarks, but honestly, I can't see that the new solution scales better. You only did 3 runs for each point, and the error bars overlap with the other points each time. Also the hyperfine output has warnings about outliers. I guess you'd have to run at least 100 times for each data point (not saying you should :sweat_smile:, I am happy with the  previous benchmarks already).\r\n\r\nAlso, I am thinking you are already saturated at 100 seconds, because the slowest test likely takes this amount of time. No amount of parallelism can make it faster.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33141#issuecomment-3165069155",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33141"
    },
    {
      "event": "commented",
      "id": 3182321413,
      "node_id": "IC_kwDOABII5869rl8F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3182321413",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-13T06:13:15Z",
      "updated_at": "2025-08-13T06:13:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "Redid only 1-4x, with 20 runs for stability to see if these speedups apply to our test suite as well.\r\n\r\nRunning it on a more powerful i9 with SSD:\r\n<img width=\"1200\" alt=\"image\" src=\"https://github.com/user-attachments/assets/0f6baa59-2b6a-4981-a739-1b08b1093eaf\" />\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```\r\nd767503b6a Merge bitcoin/bitcoin#33039: refactor,test: follow-ups to multi-byte block obfuscation\r\n5bb380ec87 test: sleep patch\r\n35e91b899d test: Remove polling loop from test_runner\r\n\r\nBenchmark 1: build/test/functional/test_runner.py -j$((1 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):     162.617 s ±  4.057 s    [User: 742.563 s, System: 95.831 s]\r\n  Range (min … max):   153.539 s … 169.594 s    20 runs\r\n \r\nBenchmark 2: build/test/functional/test_runner.py -j$((1 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):     166.120 s ±  1.751 s    [User: 746.994 s, System: 95.786 s]\r\n  Range (min … max):   162.345 s … 170.193 s    20 runs\r\n \r\nBenchmark 3: build/test/functional/test_runner.py -j$((1 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):     165.285 s ±  1.679 s    [User: 743.584 s, System: 96.084 s]\r\n  Range (min … max):   162.273 s … 168.493 s    20 runs\r\n \r\nBenchmark 4: build/test/functional/test_runner.py -j$((2 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):     123.485 s ±  1.311 s    [User: 861.322 s, System: 112.273 s]\r\n  Range (min … max):   121.381 s … 125.718 s    20 runs\r\n \r\nBenchmark 5: build/test/functional/test_runner.py -j$((2 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):     123.578 s ±  1.149 s    [User: 865.509 s, System: 112.239 s]\r\n  Range (min … max):   121.861 s … 126.296 s    20 runs\r\n \r\nBenchmark 6: build/test/functional/test_runner.py -j$((2 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):     122.229 s ±  1.581 s    [User: 867.603 s, System: 112.883 s]\r\n  Range (min … max):   119.546 s … 124.407 s    20 runs\r\n \r\nBenchmark 7: build/test/functional/test_runner.py -j$((3 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):     110.005 s ±  1.110 s    [User: 904.411 s, System: 122.869 s]\r\n  Range (min … max):   108.654 s … 111.472 s    20 runs\r\n \r\nBenchmark 8: build/test/functional/test_runner.py -j$((3 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):     111.199 s ±  1.291 s    [User: 902.330 s, System: 122.718 s]\r\n  Range (min … max):   108.685 s … 114.161 s    20 runs\r\n \r\nBenchmark 9: build/test/functional/test_runner.py -j$((3 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):     109.771 s ±  1.615 s    [User: 897.538 s, System: 122.906 s]\r\n  Range (min … max):   107.295 s … 113.223 s    20 runs\r\n \r\nBenchmark 10: build/test/functional/test_runner.py -j$((4 * 16)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):     100.538 s ±  1.568 s    [User: 890.148 s, System: 123.298 s]\r\n  Range (min … max):   97.325 s … 103.165 s    20 runs\r\n \r\nBenchmark 11: build/test/functional/test_runner.py -j$((4 * 16)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):     100.561 s ±  1.307 s    [User: 881.061 s, System: 123.444 s]\r\n  Range (min … max):   98.469 s … 103.547 s    20 runs\r\n \r\nBenchmark 12: build/test/functional/test_runner.py -j$((4 * 16)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):     100.220 s ±  1.769 s    [User: 876.089 s, System: 123.136 s]\r\n  Range (min … max):   97.393 s … 103.823 s    20 runs\r\n  ```\r\n\r\n</details>\r\n\r\nAnd on a slowe2 i7 with HDD:\r\n<img width=\"1200\"  alt=\"image\" src=\"https://github.com/user-attachments/assets/f3f219d5-afa5-4850-8361-540ea6d100ba\" />\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```\r\nCOMMITS=\"d767503b6a2618e0c99407acf98f3bd19fb7defd 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7 35e91b899dac689b24a8a95fcef083affc695d1e\"; RUNS=20; CC=gcc; CXX=g++; BUILD='Release'; (echo \"\"; for c in $COMMITS; do git fetch -q origin $c && git log -1 --pretty='%h %s' $c || exit 1; done; echo \"\") && hyperfine   --sor\r\nt command   --runs $RUNS   --parameter-list COMMIT ${COMMITS// /,}   --parameter-list FACTOR $(seq -s, 1 4)   --prepare \"git checkout {COMMIT}; git clean -fxd; git reset --hard &&  cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${BUILD} && ninja -C build \"   \"build/test/functional/test_runner.py -j\\$(({FACTOR} * $(nproc))) || true\"                                           \r\n                                                                                                                                                                                                                                                                                                                                                                                    \r\nd767503b6a Merge bitcoin/bitcoin#33039: refactor,test: follow-ups to multi-byte block obfuscation                                                                                                                                                                                                                                                                                   \r\n5bb380ec87 test: sleep patch                                                                 \r\n35e91b899d test: Remove polling loop from test_runner                                        \r\n\r\nBenchmark 1: build/test/functional/test_runner.py -j$((1 * 8)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)                                                                \r\n  Time (mean ± σ):     536.561 s ± 10.213 s    [User: 741.217 s, System: 100.037 s]          \r\n  Range (min … max):   518.267 s … 556.539 s    20 runs                                      \r\n                                                                                             \r\nBenchmark 2: build/test/functional/test_runner.py -j$((1 * 8)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)                                                                \r\n  Time (mean ± σ):     543.853 s ±  7.098 s    [User: 747.414 s, System: 100.004 s]\r\n  Range (min … max):   532.029 s … 556.266 s    20 runs\r\n                                                                                             \r\nBenchmark 3: build/test/functional/test_runner.py -j$((1 * 8)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):     534.225 s ± 14.423 s    [User: 743.823 s, System: 100.001 s]\r\n  Range (min … max):   502.162 s … 552.954 s    20 runs\r\n                                                                                             \r\nBenchmark 4: build/test/functional/test_runner.py -j$((2 * 8)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)\r\n  Time (mean ± σ):     398.433 s ± 13.789 s    [User: 816.850 s, System: 108.760 s]\r\n  Range (min … max):   368.803 s … 420.022 s    20 runs\r\n                                                                                             \r\nBenchmark 5: build/test/functional/test_runner.py -j$((2 * 8)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)\r\n  Time (mean ± σ):     405.140 s ±  8.846 s    [User: 817.834 s, System: 109.110 s]\r\n  Range (min … max):   388.287 s … 422.856 s    20 runs\r\n                                                                                             \r\nBenchmark 6: build/test/functional/test_runner.py -j$((2 * 8)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)\r\n  Time (mean ± σ):     397.259 s ±  8.343 s    [User: 814.290 s, System: 108.749 s]\r\n  Range (min … max):   378.060 s … 412.245 s    20 runs\r\n                                                                                             \r\nBenchmark 7: build/test/functional/test_runner.py -j$((3 * 8)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)     \r\n  Time (mean ± σ):     351.179 s ±  8.515 s    [User: 855.037 s, System: 113.145 s]          \r\n  Range (min … max):   336.721 s … 368.320 s    20 runs                                      \r\n                                                                                             \r\nBenchmark 8: build/test/functional/test_runner.py -j$((3 * 8)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)                                                                \r\n  Time (mean ± σ):     350.855 s ±  9.233 s    [User: 862.762 s, System: 113.541 s]          \r\n  Range (min … max):   334.352 s … 366.530 s    20 runs                                      \r\n                                                                                             \r\nBenchmark 9: build/test/functional/test_runner.py -j$((3 * 8)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)                                                                \r\n  Time (mean ± σ):     357.291 s ±  8.876 s    [User: 854.476 s, System: 114.151 s]          \r\n  Range (min … max):   340.714 s … 369.699 s    20 runs                                      \r\n                                                                                             \r\nBenchmark 10: build/test/functional/test_runner.py -j$((4 * 8)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)                                                               \r\n  Time (mean ± σ):     338.878 s ±  5.938 s    [User: 881.142 s, System: 116.883 s]          \r\n  Range (min … max):   328.316 s … 348.831 s    20 runs                                      \r\n                                                                                             \r\nBenchmark 11: build/test/functional/test_runner.py -j$((4 * 8)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)                                                               \r\n  Time (mean ± σ):     330.988 s ±  8.537 s    [User: 889.021 s, System: 116.644 s]          \r\n  Range (min … max):   313.327 s … 344.076 s    20 runs                                      \r\n                                                                                             \r\nBenchmark 12: build/test/functional/test_runner.py -j$((4 * 8)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)                                                               \r\n  Time (mean ± σ):     324.608 s ±  8.837 s    [User: 875.886 s, System: 116.579 s]          \r\n  Range (min … max):   304.882 s … 341.161 s    20 runs                                      \r\n                                                                                             \r\nRelative speed comparison                                                                    \r\n        1.65 ±  0.05  build/test/functional/test_runner.py -j$((1 * 8)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)                                                       \r\n        1.68 ±  0.05  build/test/functional/test_runner.py -j$((1 * 8)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)                                                       \r\n        1.65 ±  0.06  build/test/functional/test_runner.py -j$((1 * 8)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)                                                       \r\n        1.23 ±  0.05  build/test/functional/test_runner.py -j$((2 * 8)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)                                                       \r\n        1.25 ±  0.04  build/test/functional/test_runner.py -j$((2 * 8)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)                                                       \r\n        1.22 ±  0.04  build/test/functional/test_runner.py -j$((2 * 8)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)                                                       \r\n        1.08 ±  0.04  build/test/functional/test_runner.py -j$((3 * 8)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)                                                       \r\n        1.08 ±  0.04  build/test/functional/test_runner.py -j$((3 * 8)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)                                                       \r\n        1.10 ±  0.04  build/test/functional/test_runner.py -j$((3 * 8)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)                                                       \r\n        1.04 ±  0.03  build/test/functional/test_runner.py -j$((4 * 8)) || true (COMMIT = d767503b6a2618e0c99407acf98f3bd19fb7defd)                                                       \r\n        1.02 ±  0.04  build/test/functional/test_runner.py -j$((4 * 8)) || true (COMMIT = 5bb380ec87af93ed5543ba10e1f8465aca7bcfe7)                                                       \r\n        1.00          build/test/functional/test_runner.py -j$((4 * 8)) || true (COMMIT = 35e91b899dac689b24a8a95fcef083affc695d1e)      \r\n```\r\n\r\n</details>\r\n\r\n\r\nNot sure we can claim that it's faster, but makes more sense conceptually, maybe we can blow up the heavy tests and scale better.\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33141#issuecomment-3182321413",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33141"
    },
    {
      "event": "reviewed",
      "id": 3123526788,
      "node_id": "PRR_kwDOABII5866LTyE",
      "url": null,
      "actor": null,
      "commit_id": "faaab70684779b81b2f6adac319bbf2d3b77165d",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-15T10:10:12Z",
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33141#pullrequestreview-3123526788",
      "submitted_at": "2025-08-15T10:10:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33141"
    },
    {
      "event": "reviewed",
      "id": 3123529231,
      "node_id": "PRR_kwDOABII5866LUYP",
      "url": null,
      "actor": null,
      "commit_id": "faaab70684779b81b2f6adac319bbf2d3b77165d",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-08-15T10:11:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK https://github.com/bitcoin/bitcoin/pull/33141/commits/faaab70684779b81b2f6adac319bbf2d3b77165d\r\n\r\nI ran some simple benchmarks on my 8-core laptop\r\n```\r\nhyperfine \\\r\n--sort command \\\r\n--runs 3 \\\r\n--parameter-list COMMIT \"master,faaab706\" \\\r\n--prepare \"git checkout {COMMIT}; cmake --build build -j 8\" \\\r\n\"build/test/functional/test_runner.py $(python3  -c \"print('tool_wallet ' * 100)\") -j 8\"\r\nBenchmark 1: build/test/functional/test_runner.py tool_wallet tool_wallet tool_wallet tool_wallet [...] tool_wallet  -j 8 (COMMIT = master)\r\n  Time (mean ± σ):     107.620 s ±  1.261 s    [User: 568.243 s, System: 45.749 s]\r\n  Range (min … max):   106.286 s … 108.791 s    3 runs\r\n \r\nBenchmark 2: build/test/functional/test_runner.py tool_wallet [...] tool_wallet  -j 8 (COMMIT = faaab706)\r\n  Time (mean ± σ):     102.151 s ±  0.840 s    [User: 567.913 s, System: 45.192 s]\r\n  Range (min … max):   101.257 s … 102.925 s    3 runs\r\n \r\nRelative speed comparison\r\n        1.05 ±  0.02  build/test/functional/test_runner.py tool_wallet [...] tool_wallet  -j 8 (COMMIT = master)\r\n        1.00          build/test/functional/test_runner.py tool_wallet [...] tool_wallet  -j 8 (COMMIT = faaab706)\r\n\r\n\r\nhyperfine \\                                          \r\n--sort command \\\r\n--runs 3 \\\r\n--parameter-list COMMIT \"master,faaab706\" \\\r\n--prepare \"git checkout {COMMIT}; cmake --build build -j 8\" \\\r\n\"build/test/functional/test_runner.py -j 8\"\r\nBenchmark 1: build/test/functional/test_runner.py -j 8 (COMMIT = master)\r\n  Time (mean ± σ):     240.953 s ±  3.510 s    [User: 458.626 s, System: 96.167 s]\r\n  Range (min … max):   238.456 s … 244.967 s    3 runs\r\n \r\nBenchmark 2: build/test/functional/test_runner.py -j 8 (COMMIT = faaab706)\r\n  Time (mean ± σ):     232.209 s ± 10.131 s    [User: 441.218 s, System: 96.422 s]\r\n  Range (min … max):   222.179 s … 242.437 s    3 runs\r\n \r\nRelative speed comparison\r\n        1.04 ±  0.05  build/test/functional/test_runner.py -j 8 (COMMIT = master)\r\n        1.00          build/test/functional/test_runner.py -j 8 (COMMIT = faaab706)\r\n```\r\nhttps://github.com/bitcoin/bitcoin/pull/33141/commits/faaab70684779b81b2f6adac319bbf2d3b77165d is slightly faster in both cases.",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33141#pullrequestreview-3123529231",
      "submitted_at": "2025-08-15T10:11:54Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33141"
    },
    {
      "event": "review_requested",
      "id": 19174145672,
      "node_id": "RRE_lADOABII587Eb0DfzwAAAAR23j6I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19174145672",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-15T10:11:58Z",
      "requested_reviewer": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2278736772",
      "pull_request_review_id": 3123526788,
      "id": 2278736772,
      "node_id": "PRRC_kwDOABII586H0sOE",
      "diff_hunk": "@@ -728,42 +729,50 @@ def get_next(self):\n             test_argv = test.split()\n             testdir = \"{}/{}_{}\".format(self.tmpdir, re.sub(\".py$\", \"\", test_argv[0]), portseed)\n             tmpdir_arg = [\"--tmpdir={}\".format(testdir)]\n-            self.jobs.append((test,\n+\n+            def proc_wait(task):\n+                task[2] = task[2].wait()\n+                return task\n+\n+            self.jobs.append(self.executor.submit(proc_wait, task=[\n+                              test,\n                               time.time(),\n                               subprocess.Popen([sys.executable, self.tests_dir + test_argv[0]] + test_argv[1:] + self.flags + portseed_arg + tmpdir_arg,\n                                                text=True,\n                                                stdout=log_stdout,\n-                                               stderr=log_stderr),\n+                                               stderr=log_stderr,\n+                              ),\n                               testdir,\n                               log_stdout,\n-                              log_stderr))\n+                              log_stderr,\n+            ]))\n+            self.jobs[-1].debug_name = test\n         if not self.jobs:\n             raise IndexError('pop from empty list')\n \n         # Print remaining running jobs when all jobs have been started.\n         if not self.test_list:\n-            print(\"Remaining jobs: [{}]\".format(\", \".join(j[0] for j in self.jobs)))\n+            print(\"Remaining jobs: [{}]\".format(\", \".join(j.debug_name for j in self.jobs)))\n \n         dot_count = 0\n         while True:\n             # Return all procs that have finished, if any. Otherwise sleep until there is one.\n-            time.sleep(.5)\n+            procs = futures.wait(self.jobs, timeout=.5, return_when=futures.FIRST_COMPLETED)",
      "path": "test/functional/test_runner.py",
      "position": 56,
      "original_position": 56,
      "commit_id": "faaab70684779b81b2f6adac319bbf2d3b77165d",
      "original_commit_id": "faaab70684779b81b2f6adac319bbf2d3b77165d",
      "in_reply_to_id": null,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "https://github.com/bitcoin/bitcoin/pull/33141/commits/faaab70684779b81b2f6adac319bbf2d3b77165d: I thought the timeout here might be unnecessary, but I ran some benchmarks comparing `.5s` timeout  to no timeout and this commit was always sligthly faster.",
      "created_at": "2025-08-15T10:10:12Z",
      "updated_at": "2025-08-15T10:10:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33141#discussion_r2278736772",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2278736772"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33141"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 760,
      "original_line": 760,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282385073",
      "pull_request_review_id": 3128354847,
      "id": 2282385073,
      "node_id": "PRRC_kwDOABII586ICm6x",
      "diff_hunk": "@@ -728,42 +729,50 @@ def get_next(self):\n             test_argv = test.split()\n             testdir = \"{}/{}_{}\".format(self.tmpdir, re.sub(\".py$\", \"\", test_argv[0]), portseed)\n             tmpdir_arg = [\"--tmpdir={}\".format(testdir)]\n-            self.jobs.append((test,\n+\n+            def proc_wait(task):\n+                task[2] = task[2].wait()\n+                return task\n+\n+            self.jobs.append(self.executor.submit(proc_wait, task=[\n+                              test,\n                               time.time(),\n                               subprocess.Popen([sys.executable, self.tests_dir + test_argv[0]] + test_argv[1:] + self.flags + portseed_arg + tmpdir_arg,\n                                                text=True,\n                                                stdout=log_stdout,\n-                                               stderr=log_stderr),\n+                                               stderr=log_stderr,\n+                              ),\n                               testdir,\n                               log_stdout,\n-                              log_stderr))\n+                              log_stderr,\n+            ]))\n+            self.jobs[-1].debug_name = test\n         if not self.jobs:\n             raise IndexError('pop from empty list')\n \n         # Print remaining running jobs when all jobs have been started.\n         if not self.test_list:\n-            print(\"Remaining jobs: [{}]\".format(\", \".join(j[0] for j in self.jobs)))\n+            print(\"Remaining jobs: [{}]\".format(\", \".join(j.debug_name for j in self.jobs)))\n \n         dot_count = 0\n         while True:\n             # Return all procs that have finished, if any. Otherwise sleep until there is one.\n-            time.sleep(.5)\n+            procs = futures.wait(self.jobs, timeout=.5, return_when=futures.FIRST_COMPLETED)",
      "path": "test/functional/test_runner.py",
      "position": 56,
      "original_position": 56,
      "commit_id": "faaab70684779b81b2f6adac319bbf2d3b77165d",
      "original_commit_id": "faaab70684779b81b2f6adac319bbf2d3b77165d",
      "in_reply_to_id": 2278736772,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I ran some benchmarks comparing `.5s` timeout to no timeout and this commit was always sligthly faster.\r\n\r\nThe reason why `.5` is picked here is to preserve the observable behavior when `print('.', end='', flush=True)` is hit: During the sleep/wait you'll only want a dot every half second, not in a busy-loop without delay. Using a busy-loop also sounds like a plausible explanation for your observed slow down, when decreasing it to `0`.\r\n\r\nOther than that, I don't think the exact value here should matter, as long as it is not zero.",
      "created_at": "2025-08-18T13:23:17Z",
      "updated_at": "2025-08-18T13:23:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33141#discussion_r2282385073",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2282385073"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33141"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 760,
      "original_line": 760,
      "side": "RIGHT"
    }
  ]
}