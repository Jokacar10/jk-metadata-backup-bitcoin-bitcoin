{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532",
    "id": 1989628214,
    "node_id": "PR_kwDOABII5852l1E2",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30532",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30532.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30532.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30532",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30532/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/f553e6d86fe114e90585ea6d4b8e345a209cae5d",
    "number": 30532,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "refactor: remove deprecated TxidFromString() in favour of transaction_identifier::FromHex()",
    "user": {
      "login": "stickies-v",
      "id": 69010457,
      "node_id": "MDQ6VXNlcjY5MDEwNDU3",
      "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stickies-v",
      "html_url": "https://github.com/stickies-v",
      "followers_url": "https://api.github.com/users/stickies-v/followers",
      "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
      "organizations_url": "https://api.github.com/users/stickies-v/orgs",
      "repos_url": "https://api.github.com/users/stickies-v/repos",
      "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/stickies-v/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Since https://github.com/bitcoin/bitcoin/pull/30482/commits/fab6ddbee64e50d5e2f499aebca35b5911896ec4, `TxidFromString()` has been deprecated because it is less robust than the `transaction_identifier::FromHex()` introduced in [the same PR](https://github.com/bitcoin/bitcoin/pull/30482). Specifically, it tries to recover from length-mismatches, recover from untrimmed whitespace, 0x-prefix and garbage at the end, instead of simply requiring exactly 64 hex-only characters.\r\n\r\nIn this PR, `TxidFromString` is removed completely to clean up the code and prevent further unsafe usage. Unit and fuzz test coverage on `uint256::FromHex()` and functions that wrap it is increased.\r\n\r\nNote: `TxidFromSring` allowed users to prefix strings with \"0x\", this is no longer allowed for `transaction_identifier::FromHex()`, so a helper function for input validation may prove helpful in the future _(this overlaps with the `uint256::uint256S()` vs `uint256::FromHex()` future cleanup)_. It is not relevant to this PR, though, besides the fact that this unused (except for in tests) functionality is removed.\r\n\r\nThe only users of `TxidFromString` are:\r\n- `test`, where it is straightforward to drop in the new `FromHex()` methods without much further concern\r\n- `qt` coincontrol. There is no need for input validation here, but txids are not guaranteed to be 64 characters. This is already handled by the existing code, so again, using `FromHex()` here seems quite straightforward.\r\n\r\nAddresses @maflcko's suggestion: https://github.com/bitcoin/bitcoin/pull/30482#discussion_r1691826934\r\n\r\nAlso removes `WtxidFromString()`, which is a test-only helper function.\r\n\r\n### Testing GUI changes\r\n\r\nTo test the GUI coincontrol affected lines, `regtest` is probably the easiest way to quickly get some test coins, you can use e.g.\r\n\r\n```\r\nalias cli=\"./src/bitcoin-cli -regtest\"\r\ncli createwallet \"coincontrol\"\r\n# generate 10 spendable outputs on 1 address\r\ncli generatetoaddress 10 $(cli -rpcwallet=coincontrol getnewaddress)\r\n# generate 10 spendable outputs on another address\r\ncli generatetoaddress 10 $(cli -rpcwallet=coincontrol getnewaddress)\r\n# make previous outputs spendable\r\ncli generatetoaddress 100 $(cli -rpcwallet=coincontrol getnewaddress)\r\n```",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2024-07-26T15:02:08Z",
    "updated_at": "2025-08-01T14:18:13Z",
    "closed_at": "2024-08-01T11:06:23Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-08-01T11:06:23Z",
    "merged_by": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "ebd82fa9fae13d5a7a395800295dd7fd34185b58",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "head": {
      "label": "stickies-v:2024-07/rm-txidfromstring",
      "ref": "2024-07/rm-txidfromstring",
      "sha": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 431644530,
        "node_id": "R_kgDOGbpfcg",
        "name": "bitcoin",
        "full_name": "stickies-v/bitcoin",
        "owner": {
          "login": "stickies-v",
          "id": 69010457,
          "node_id": "MDQ6VXNlcjY5MDEwNDU3",
          "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/stickies-v",
          "html_url": "https://github.com/stickies-v",
          "followers_url": "https://api.github.com/users/stickies-v/followers",
          "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
          "organizations_url": "https://api.github.com/users/stickies-v/orgs",
          "repos_url": "https://api.github.com/users/stickies-v/repos",
          "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/stickies-v/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/stickies-v/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/stickies-v/bitcoin",
        "archive_url": "https://api.github.com/repos/stickies-v/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/stickies-v/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/stickies-v/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/stickies-v/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/stickies-v/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/stickies-v/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/stickies-v/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/stickies-v/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/stickies-v/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/stickies-v/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/stickies-v/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/stickies-v/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/stickies-v/bitcoin/events",
        "forks_url": "https://api.github.com/repos/stickies-v/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/stickies-v/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/stickies-v/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/stickies-v/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/stickies-v/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/stickies-v/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/stickies-v/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/stickies-v/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/stickies-v/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/stickies-v/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/stickies-v/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/stickies-v/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/stickies-v/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/stickies-v/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/stickies-v/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/stickies-v/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:stickies-v/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/stickies-v/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/stickies-v/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/stickies-v/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/stickies-v/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/stickies-v/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/stickies-v/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/stickies-v/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/stickies-v/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/stickies-v/bitcoin/hooks",
        "svn_url": "https://github.com/stickies-v/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 2,
        "watchers_count": 2,
        "size": 279463,
        "default_branch": "master",
        "open_issues_count": 1,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-01T13:12:53Z",
        "created_at": "2021-11-24T22:26:41Z",
        "updated_at": "2024-06-19T14:39:47Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "9eb57d1ab6ea5ae642b6d6cc2e74c3046984230c",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37595,
        "stargazers_count": 84848,
        "watchers_count": 84848,
        "size": 290051,
        "default_branch": "master",
        "open_issues_count": 748,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-01T14:45:23Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-01T14:45:30Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 93,
    "deletions": 57,
    "changed_files": 8,
    "commits": 4,
    "review_comments": 62,
    "comments": 7
  },
  "events": [
    {
      "event": "mentioned",
      "id": 13662561162,
      "node_id": "MEE_lADOABII586Q--0NzwAAAAMuWiOK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13662561162",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T15:02:09Z"
    },
    {
      "event": "subscribed",
      "id": 13662561172,
      "node_id": "SE_lADOABII586Q--0NzwAAAAMuWiOU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13662561172",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T15:02:09Z"
    },
    {
      "event": "commented",
      "id": 2252954178,
      "node_id": "IC_kwDOABII586GSVpC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2252954178",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T15:02:11Z",
      "updated_at": "2024-08-01T11:02:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30532).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [hodlinator](https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2211103756), [maflcko](https://github.com/bitcoin/bitcoin/pull/30532#issuecomment-2262178256), [paplorinc](https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2211916268), [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2212325302) |\n| Concept ACK | [glozow](https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2212418654) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#issuecomment-2252954178",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30532"
    },
    {
      "event": "labeled",
      "id": 13662562043,
      "node_id": "LE_lADOABII586Q--0NzwAAAAMuWib7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13662562043",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T15:02:13Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "reviewed",
      "id": 2202774226,
      "node_id": "PRR_kwDOABII586DS6rS",
      "url": null,
      "actor": null,
      "commit_id": "2cad2ef1886d31e647d88191a2d4a9d0ce834199",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK 2cad2ef1886d31e647d88191a2d4a9d0ce834199\r\n\r\nnit regarding PR summary:\r\nSpecifically, it is lacking length checks to ensure input is exactly 64 characters.\r\n->\r\nSpecifically, it does it's best to recover from length-mismatches, recover from untrimmed whitespace, `0x`-prefix and garbage at the end, instead of simply requiring exactly 64 hex-only characters.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2202774226",
      "submitted_at": "2024-07-26T21:48:38Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "reviewed",
      "id": 2203150611,
      "node_id": "PRR_kwDOABII586DUWkT",
      "url": null,
      "actor": null,
      "commit_id": "2cad2ef1886d31e647d88191a2d4a9d0ce834199",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2203150611",
      "submitted_at": "2024-07-28T07:49:46Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13683748476,
      "node_id": "HRFPE_lADOABII586Q--0NzwAAAAMvnW58",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13683748476",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b6080f26ffe951a8734a475a1059465d649b7d96",
      "commit_url": "https://api.github.com/repos/stickies-v/bitcoin/commits/b6080f26ffe951a8734a475a1059465d649b7d96",
      "created_at": "2024-07-29T17:04:39Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13683833646,
      "node_id": "HRFPE_lADOABII586Q--0NzwAAAAMvnrsu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13683833646",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "commit_url": "https://api.github.com/repos/stickies-v/bitcoin/commits/30c7351491063dab127cff236074beddff59d1a5",
      "created_at": "2024-07-29T17:12:10Z"
    },
    {
      "event": "labeled",
      "id": 13683834801,
      "node_id": "LE_lADOABII586Q--0NzwAAAAMvnr-x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13683834801",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T17:12:17Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2256471158,
      "node_id": "IC_kwDOABII586GfwR2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2256471158",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T17:12:18Z",
      "updated_at": "2024-07-29T17:12:18Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/28061801420</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#issuecomment-2256471158",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30532"
    },
    {
      "event": "commented",
      "id": 2256479677,
      "node_id": "IC_kwDOABII586GfyW9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2256479677",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T17:16:16Z",
      "updated_at": "2024-07-29T17:16:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "Force pushed to:\r\n- increase unittest coverage on `uint256::FromHex()`, as well as methods that wrap it (`Txid::FromHex()` and `Wtxid::FromHex()`)\r\n- add fuzz target `uint256_fromhex`\r\n\r\n> nit regarding PR summary:\r\n\r\nThanks, updated PR description.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#issuecomment-2256479677",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30532"
    },
    {
      "event": "unlabeled",
      "id": 13684698694,
      "node_id": "UNLE_lADOABII586Q--0NzwAAAAMvq-5G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13684698694",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-29T18:29:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2205685953,
      "node_id": "PRR_kwDOABII586DeBjB",
      "url": null,
      "actor": null,
      "commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2205685953",
      "submitted_at": "2024-07-29T23:09:45Z",
      "state": "CHANGES_REQUESTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "reviewed",
      "id": 2206897116,
      "node_id": "PRR_kwDOABII586DipPc",
      "url": null,
      "actor": null,
      "commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2206897116",
      "submitted_at": "2024-07-30T07:39:10Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13694895588,
      "node_id": "HRFPE_lADOABII586Q--0NzwAAAAMwR4Xk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13694895588",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "24a6de35857e88d968ef90cd6fbcda0003f0e3e3",
      "commit_url": "https://api.github.com/repos/stickies-v/bitcoin/commits/24a6de35857e88d968ef90cd6fbcda0003f0e3e3",
      "created_at": "2024-07-30T12:02:52Z"
    },
    {
      "event": "commented",
      "id": 2258191230,
      "node_id": "IC_kwDOABII586GmUN-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2258191230",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-30T12:06:42Z",
      "updated_at": "2024-07-30T12:06:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "Force pushed to address review comments by [removing the new fuzz target and updating the existing one instead](https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696846017), and [updating a docstring in coincontroldialog.cpp](https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696759211). No other changes.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#issuecomment-2258191230",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30532"
    },
    {
      "event": "reviewed",
      "id": 2207923972,
      "node_id": "PRR_kwDOABII586Dmj8E",
      "url": null,
      "actor": null,
      "commit_id": "24a6de35857e88d968ef90cd6fbcda0003f0e3e3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 24a6de35857e88d968ef90cd6fbcda0003f0e3e3\r\n\r\nMinor reservation, but not blocking: https://github.com/bitcoin/bitcoin/pull/30532/files#r1695679909\r\n\r\nTried to break `bitcoin-qt` Coin Control dialog on the previous revision (30c7351491063dab127cff236074beddff59d1a5) without success and confirmed that only comments and fuzz code have changed since then.\r\n\r\n(Passed `make check`).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2207923972",
      "submitted_at": "2024-07-30T15:18:04Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "reviewed",
      "id": 2209589526,
      "node_id": "PRR_kwDOABII586Ds6kW",
      "url": null,
      "actor": null,
      "commit_id": "24a6de35857e88d968ef90cd6fbcda0003f0e3e3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Only left some test-only style-nits. Feel free to ignore.\r\n\r\nreview ACK 24a6de35857e88d968ef90cd6fbcda0003f0e3e 🎨\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: review ACK 24a6de35857e88d968ef90cd6fbcda0003f0e3e 🎨\r\nmyhszgeXHcG4zBfV085OKVMVT0Z23g+tNmrxR3lxWUxa1Q7mYqyLKn6T29n/APMWsREgWDZ9DtN5m9mZ+ZEHDw==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2209589526",
      "submitted_at": "2024-07-31T09:20:24Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "reviewed",
      "id": 2209647215,
      "node_id": "PRR_kwDOABII586DtIpv",
      "url": null,
      "actor": null,
      "commit_id": "17ebf1ac133d26676ba7ae3e40042fdf389d146f",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2209647215",
      "submitted_at": "2024-07-31T09:23:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13710455761,
      "node_id": "HRFPE_lADOABII586Q--0NzwAAAAMxNPPR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13710455761",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9113f6b605f9e0a3b438561837f1f4e4142ad3c7",
      "commit_url": "https://api.github.com/repos/stickies-v/bitcoin/commits/9113f6b605f9e0a3b438561837f1f4e4142ad3c7",
      "created_at": "2024-07-31T13:53:38Z"
    },
    {
      "event": "reviewed",
      "id": 2210086223,
      "node_id": "PRR_kwDOABII586Duz1P",
      "url": null,
      "actor": null,
      "commit_id": "9113f6b605f9e0a3b438561837f1f4e4142ad3c7",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Force-pushed to address test-only style nits, and [generalizing `TestFromHex()` further](https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698197301) to allow for testing`uint160` too. ",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2210086223",
      "submitted_at": "2024-07-31T13:56:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "reviewed",
      "id": 2210315059,
      "node_id": "PRR_kwDOABII586Dvrsz",
      "url": null,
      "actor": null,
      "commit_id": "9113f6b605f9e0a3b438561837f1f4e4142ad3c7",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "lgtm. No real changes other than test fixups.\r\n\r\nre-ACK 9113f6b605f9e0a3b438561837f1f4e4142ad3c7 🍷\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: re-ACK 9113f6b605f9e0a3b438561837f1f4e4142ad3c7 🍷\r\nzpDwXlcOI4l11MhTUagbDaSkMEEIAWBDTmYF6+SCff3iMIuYxOqry2UPAJrGEeZCFMmzcnvMp4iJ1MLSOdVCCA==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2210315059",
      "submitted_at": "2024-07-31T14:19:47Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "review_requested",
      "id": 13710874751,
      "node_id": "RRE_lADOABII586Q--0NzwAAAAMxO1h_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13710874751",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-31T14:19:50Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUyNmE4N2JhNmI0ZjIwNTkyYWQzYzA5MGI4MmU4M2VjZmYyMTA3ZmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/526a87ba6b4f20592ad3c090b82e83ecff2107fc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/526a87ba6b4f20592ad3c090b82e83ecff2107fc",
      "tree": {
        "sha": "8c18746e3a4d5f89c67702b2fef946c8a768c39e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c18746e3a4d5f89c67702b2fef946c8a768c39e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8c18746e3a4d5f89c67702b2fef946c8a768c39e\nparent 5d280130446d57d653c749005a2e363265d87686\nauthor stickies-v <stickies-v@protonmail.com> 1722269814 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1722440857 +0100\n\ntest: add uint256::FromHex unittest coverage\n\nSimultaneously cover transaction_identifier::FromHex()\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmaqXJkACgkQXLHObl5m\np1f1Qw//VZ5wcHTXvh+vLvDhm+FfOi+s9AP4uR/HxFaMZEu+Fou5ZEaUx4egRKpR\nz6O2SY7fJp4UblDtegerqiIAAcsvGqbvGVFVbZ5LXyxpCQqAaLT9jsNk5WRBA3Wm\nLHwfMMbDv6UtX7CI4vaHL/ZEc9SpLCUaGWsARc7J0Kiu22pQF6rLVoBmdDJvD9pr\nmxXvtzZl1FqVTPjWVAp6L/MpTv7aYqkSr4GqoRSVD3ZSVdRTsS7NEMUf0JwDMruq\n61I6aTbKBw5CDAslsND4QSjOX8JMubs3lYIU0tAb0nqMMecGd39oG/8yzgmuN89Y\nG8ASB/oJUgzkZ5nclSZ8PuXXw+1tmENICJbJcKwe3tseSZ7/1evdIycxdVve19zR\n+OZuVlDEdcdWyY52o45OdKZfy3hIrF1Nr4bmGfa6BSUSFo9tyAF1p+4YRyp7h265\nP1E0p3VBcpVbqKlq5Q23ymrhwK1voGpaciNeO150Ynrd8JWiaCHNHdri11WX5l4t\nafjtgEu7PcyUmhOOTBEwj41zvZpCZSH0jCBwo5JHVnSR+z++bEHJE7Nrma6rYYWE\nwoE8kA2FfckvVJDunRd+bu5kr/lsdSiFr69b4Pybzju+cK+u1MBzHgon302ytov5\nWqx6SKJdZB99Ufd9/8gp7Pt5zG9aN3kVYXlQCdWqz7PMAlDgcX0=\n=wUPb\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d280130446d57d653c749005a2e363265d87686",
          "sha": "5d280130446d57d653c749005a2e363265d87686",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/5d280130446d57d653c749005a2e363265d87686"
        }
      ],
      "message": "test: add uint256::FromHex unittest coverage\n\nSimultaneously cover transaction_identifier::FromHex()",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-31T15:47:37Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-29T16:16:54Z"
      },
      "sha": "526a87ba6b4f20592ad3c090b82e83ecff2107fc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDlhMGIyYTY5YzRkODM2ZDczODJmNmZlNzcwM2RlNDAyODhmYzc0MjE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a0b2a69c4d836d7382f6fe7703de40288fc7421",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9a0b2a69c4d836d7382f6fe7703de40288fc7421",
      "tree": {
        "sha": "3abdbb511fe647fa577e14da806dc388de80ab47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3abdbb511fe647fa577e14da806dc388de80ab47"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3abdbb511fe647fa577e14da806dc388de80ab47\nparent 526a87ba6b4f20592ad3c090b82e83ecff2107fc\nauthor stickies-v <stickies-v@protonmail.com> 1722270901 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1722440858 +0100\n\nfuzz: increase FromHex() coverage\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmaqXJoACgkQXLHObl5m\np1cyPQ//W1xoUgctvrGSm+Rmkj6EUXG2BwpXPK9AvdIno2j5obnG51ioeIGhLHZS\nfs4QkZefQexcPHZwISnaL0mhvtVXq05ar2xtNfHZLoqSM8yjDgfr5zQSYYrIcdFf\nCb1QiLoW+2JHkDbCDhx/UoVA+u10QSzrETeWXHBMTyCbCpHfCeywU4hgsBPtEjgA\nr8gPLz4s6+V7c32NFB58ndVnL8RuAGnw9uqjozHcyKyQ4rdvGxOSAQh1aNr1xooF\nyTpgCNaMtpbAgnhz0i6otpro3nHhCdDQsEB9b9I//43tWWkGqYy5D0oOiMJVC7gb\n/j0ZjUSJqE58Nxr6y4+q8eqIjJG+a97oZtn/IWmey+ly1uNaF7vEE22m1MtTVfrJ\ndjZICC8ebmqM/qIex7oA1+JL97k7t+nNABIqYn5+Xa7wT6UFMHIH9GtTlNnuAVep\ne/byYdS7MT6k6R70grl4a3nEQnJvVTfkVGoKROmVHRUCcBGk7BJesjf91t14In8g\nQtfwXrYKajGWGdbBfECPHFxqH495ZS+wzzrfsP3ibgN5Hy3SUIWawQ11VaxCyd2e\nyJHAT80dGX/Den7kc/lFxJVkYD7PqT3vre/zLmT0SCg60SgUN1NoH3PU5kgtJp0p\ny5erqz6o6lBt2QdDUS99cII6D33uV8J7BMIMeVgENVlC0pBtBno=\n=n6SL\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/526a87ba6b4f20592ad3c090b82e83ecff2107fc",
          "sha": "526a87ba6b4f20592ad3c090b82e83ecff2107fc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/526a87ba6b4f20592ad3c090b82e83ecff2107fc"
        }
      ],
      "message": "fuzz: increase FromHex() coverage",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-31T15:47:38Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-29T16:35:01Z"
      },
      "sha": "9a0b2a69c4d836d7382f6fe7703de40288fc7421"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI4NWFiNTBhY2U0YzA0MjA5ZjMzMWNjYWYxMjExNTJiOTc3Y2M0OTA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/285ab50ace4c04209f331ccaf121152b977cc490",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/285ab50ace4c04209f331ccaf121152b977cc490",
      "tree": {
        "sha": "f4e5d58d27caafa9cd983fb1baf12b9ad37089ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4e5d58d27caafa9cd983fb1baf12b9ad37089ed"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree f4e5d58d27caafa9cd983fb1baf12b9ad37089ed\nparent 9a0b2a69c4d836d7382f6fe7703de40288fc7421\nauthor stickies-v <stickies-v@protonmail.com> 1721938161 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1722440859 +0100\n\ntest: replace WtxidFromString with Wtxid::FromHex\n\nThe newly introduced Wtxid::FromHex is more robust and removes\nthe need for a WtxidFromString helper function\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmaqXJsACgkQXLHObl5m\np1dQHw/+PClO124NIswxYDCbd1X0TaUJf8RgsPbIXBW2HBWcFFV/MYamHozgbtUG\noIB+uqEgYZzbB25ijB3uuGbklHyDjJt/tWKagjHK4pd/tB42XlIjGsiuL2NUsxBn\nND5fSo0i+Yl2mT7IjX7BD9X1DDknRGxynVVS9++2NZxqesMTNOMtDVrCZJm6nSeZ\nRCm19/4JGbV/iJindI/w18k/DlI+bJSOChWq5ezkthezNMR+PdNyLR09KkvF40qc\nQ8CcFMeH5R+AXlaSzp7GVNgwthFvrV96MsyehRd7hRn4J1U/LAuEBsrn9QUu/R/0\nSlQRJmB4NZbwy0UqC9yYGAXuKdLU+cuAfclfvXLtexeQ+BdUeQ+3Tvbg8SQR+xge\nF0bH6/K+bbtsyb3mu6HJlyWA6OPWf/89uPKfi1UUbFTTNw1xiyfCb0IWlRQjF6vh\nzMjTwVqEjsZE1oM4DVrathi4vFMe7/pN/OeTDXijqaZIiUY9q0kjNt/pl3SceFX1\nb9L0xfwfnZ+P6do1Z6FydhTpqOi/1c6/4+ce59g9V6T0Q6Vema0PFnE3Oz+dDVrb\nr+b9S3nSPpUw/KkOZiwUQbi/qnTjbZKLEx/Zbg0oOiWeH954Q3PL9oZu6Z8jXCr/\nx4X5yyq4lKyo9PeIEMe0VnDi56t/jHI2ZzqwcT3dZ3LjF5Cxo98=\n=y+8L\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a0b2a69c4d836d7382f6fe7703de40288fc7421",
          "sha": "9a0b2a69c4d836d7382f6fe7703de40288fc7421",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9a0b2a69c4d836d7382f6fe7703de40288fc7421"
        }
      ],
      "message": "test: replace WtxidFromString with Wtxid::FromHex\n\nThe newly introduced Wtxid::FromHex is more robust and removes\nthe need for a WtxidFromString helper function",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-31T15:47:39Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-25T20:09:21Z"
      },
      "sha": "285ab50ace4c04209f331ccaf121152b977cc490"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY1NTNlNmQ4NmZlMTE0ZTkwNTg1ZWE2ZDRiOGUzNDVhMjA5Y2FlNWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "tree": {
        "sha": "3a5ea954d1f6ed2da9e5fe052d4ba4b6677b1074",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a5ea954d1f6ed2da9e5fe052d4ba4b6677b1074"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3a5ea954d1f6ed2da9e5fe052d4ba4b6677b1074\nparent 285ab50ace4c04209f331ccaf121152b977cc490\nauthor stickies-v <stickies-v@protonmail.com> 1721991100 +0100\ncommitter stickies-v <stickies-v@protonmail.com> 1722440859 +0100\n\nrefactor: remove TxidFromString\n\nTxidFromString was deprecated due to missing 64-character length-check\nand hex-check, replace it with the more robust Txid::FromHex.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5g/ggIZt5fccjfOgXLHObl5mp1cFAmaqXJsACgkQXLHObl5m\np1egPQ//TBGS+RbkefPah/hQKcFDFK1p6ZlQaB5u3ZxnJX8nMaazT2yyOjDerRbJ\nf95h8TaQFOMSRcLLlIQuROxoCGVj/lt+LSyPJ+mkxgb/885B6e6kaL3EVLCLzUV7\nbhUOnql6Ne0JQY0504HscaWyl5QO7sCvLD5UIPIiLMqypogAVQahZsVA1d/Ssgua\nSGrT1BUaTdoDa7KKzL9IkKwVaGhLWjcPnez9cx0hsDhNUdVJNhahwsLUhY3Jvh6N\nVmqpw57G7/fvgIq5leObyQ3y7Un+l9XMX3KkenhkegqeUCkMLmYA+R8pJoAo1wvV\nO8H+Nbyrq5H0+J0vj6W64bd031o/j2lMDpSQiqV8PkhQ1KDIJ0Kay+cubc9xvOC0\ncdnwdtrCsa9vgBtC9S7sN9ByRP+z1hu6AKSeWmReTM5N8zhvxNFxw/hvDdyHSxKg\nTAvQ6uxZCLRgxowHnXGFmBGKCMIILp4c+IpJ/ouD8m13VWT2/i84B4tIIKRHvuTQ\n1zvXXNmI2lKgtz6WJ5ikKvRfs3CatVl1nWy+xV8dIW/QL00gt6gSJOh0n1bpm+ct\nyyHtAI3Hk/u0RvhnoElbHRN7vJ+nckW+Ab5SjzLuYRUpe9dIANA92iV+1IGrjP0u\nDYG3S738HU8x2tVE21JVv/FeZAvXElzWEkpLOAxT6mj+EwzlspU=\n=Nts5\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/285ab50ace4c04209f331ccaf121152b977cc490",
          "sha": "285ab50ace4c04209f331ccaf121152b977cc490",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/285ab50ace4c04209f331ccaf121152b977cc490"
        }
      ],
      "message": "refactor: remove TxidFromString\n\nTxidFromString was deprecated due to missing 64-character length-check\nand hex-check, replace it with the more robust Txid::FromHex.",
      "committer": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-31T15:47:39Z"
      },
      "author": {
        "name": "stickies-v",
        "email": "stickies-v@protonmail.com",
        "date": "2024-07-26T10:51:40Z"
      },
      "sha": "f553e6d86fe114e90585ea6d4b8e345a209cae5d"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13712167277,
      "node_id": "HRFPE_lADOABII586Q--0NzwAAAAMxTxFt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13712167277",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "commit_url": "https://api.github.com/repos/stickies-v/bitcoin/commits/f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "created_at": "2024-07-31T15:50:06Z"
    },
    {
      "event": "commented",
      "id": 2260843751,
      "node_id": "IC_kwDOABII586Gwbzn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2260843751",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-31T15:51:49Z",
      "updated_at": "2024-07-31T15:51:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "Force pushed to resolve [all](https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698597925) [nits](https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698598718). Test-only doc changes so should be a trivial re-review.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#issuecomment-2260843751",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30532"
    },
    {
      "event": "reviewed",
      "id": 2211103756,
      "node_id": "PRR_kwDOABII586DysQM",
      "url": null,
      "actor": null,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK f553e6d86fe114e90585ea6d4b8e345a209cae5d\r\n\r\n[Compared](https://github.com/bitcoin/bitcoin/compare/24a6de35857e88d968ef90cd6fbcda0003f0e3e3..f553e6d86fe114e90585ea6d4b8e345a209cae5d) to see only test code changed with fairly reasonable changes. Passed `make check`.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2211103756",
      "submitted_at": "2024-07-31T20:46:44Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "review_requested",
      "id": 13716158271,
      "node_id": "RRE_lADOABII586Q--0NzwAAAAMxi_c_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13716158271",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-31T20:46:47Z",
      "requested_reviewer": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2262178092,
      "node_id": "IC_kwDOABII586G1hks",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2262178092",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T06:46:37Z",
      "updated_at": "2024-08-01T06:46:37Z",
      "author_association": "MEMBER",
      "body": "> [Compared](https://github.com/bitcoin/bitcoin/compare/24a6de35857e88d968ef90cd6fbcda0003f0e3e3..f553e6d86fe114e90585ea6d4b8e345a209cae5d) to see only test code changed with fairly reasonable changes. Passed `make check`.\r\n\r\nJust as a note, the GitHub compare between A and B (or similarly, `git diff A B`) is insufficient if the pull request has more then one commit. It can easily miss a code issue that was added in an earlier commit and then removed in a later commit in the same pull request. The overall diff for the added code issue will not be visible, but when running `git bisect` or otherwise walking over the commits, it may become apparent.\r\n\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#issuecomment-2262178092",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30532"
    },
    {
      "event": "commented",
      "id": 2262178256,
      "node_id": "IC_kwDOABII586G1hnQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2262178256",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T06:46:45Z",
      "updated_at": "2024-08-01T06:46:45Z",
      "author_association": "MEMBER",
      "body": "re-ACK f553e6d86fe114e90585ea6d4b8e345a209cae5d 🔻\r\n\r\n<details><summary>Show signature</summary>\r\n\r\nSignature:\r\n\r\n```\r\nuntrusted comment: signature from minisign secret key on empty file; verify via: minisign -Vm \"${path_to_any_empty_file}\" -P RWTRmVTMeKV5noAMqVlsMugDDCyyTSbA3Re5AkUrhvLVln0tSaFWglOw -x \"${path_to_this_whole_four_line_signature_blob}\"\r\nRUTRmVTMeKV5npGrKx1nqXCw5zeVHdtdYURB/KlyA/LMFgpNCs+SkW9a8N95d+U4AP1RJMi+krxU1A3Yux4bpwZNLvVBKy0wLgM=\r\ntrusted comment: re-ACK f553e6d86fe114e90585ea6d4b8e345a209cae5d 🔻\r\nuDZbcjyrvbfhAAjTYC5C+LSEI7ldXJfKAMe8JnZ3sy+CHq4+Sk0jtU11dxj46i5hk79CcicruCcb+zugYyyWDw==\r\n```\r\n\r\n</details>\r\n",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#issuecomment-2262178256",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30532"
    },
    {
      "event": "reviewed",
      "id": 2211916268,
      "node_id": "PRR_kwDOABII586D1yns",
      "url": null,
      "actor": null,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK f553e6d86fe114e90585ea6d4b8e345a209cae5d\r\n\r\nLeft a few nits, will glady re-ack, if needed.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2211916268",
      "submitted_at": "2024-08-01T10:20:08Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "reviewed",
      "id": 2212325302,
      "node_id": "PRR_kwDOABII586D3We2",
      "url": null,
      "actor": null,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Nice, ACK f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2212325302",
      "submitted_at": "2024-08-01T10:28:18Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "reviewed",
      "id": 2212348878,
      "node_id": "PRR_kwDOABII586D3cPO",
      "url": null,
      "actor": null,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the reviews everyone. Going to hold off on addressing nits given that I think this PR is now RFM, but will happily incorporate them when I have to force push for other reasons.",
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2212348878",
      "submitted_at": "2024-08-01T10:44:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "reviewed",
      "id": 2212418654,
      "node_id": "PRR_kwDOABII586D3tRe",
      "url": null,
      "actor": null,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "concept ACK + lgtm",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#pullrequestreview-2212418654",
      "submitted_at": "2024-08-01T11:02:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
    },
    {
      "event": "merged",
      "id": 13724280132,
      "node_id": "ME_lADOABII586Q--0NzwAAAAMyB-VE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13724280132",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ebd82fa9fae13d5a7a395800295dd7fd34185b58",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebd82fa9fae13d5a7a395800295dd7fd34185b58",
      "created_at": "2024-08-01T11:06:23Z"
    },
    {
      "event": "closed",
      "id": 13724280165,
      "node_id": "CE_lADOABII586Q--0NzwAAAAMyB-Vl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13724280165",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T11:06:23Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 13724412939,
      "node_id": "HRDE_lADOABII586Q--0NzwAAAAMyCewL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13724412939",
      "actor": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-01T11:17:11Z"
    },
    {
      "event": "referenced",
      "id": 14034867114,
      "node_id": "REFE_lADOABII586Q--0NzwAAAANEixOq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14034867114",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2c7a4231db35060fa1ab66d29e8139f04edc85a4",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c7a4231db35060fa1ab66d29e8139f04edc85a4",
      "created_at": "2024-08-27T20:48:01Z"
    },
    {
      "event": "referenced",
      "id": 14091878962,
      "node_id": "REFE_lADOABII586Q--0NzwAAAANH8QIy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14091878962",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b52d54736168bed82775e3c9e66c6320c7b83626",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b52d54736168bed82775e3c9e66c6320c7b83626",
      "created_at": "2024-08-31T14:18:10Z"
    },
    {
      "event": "referenced",
      "id": 14204810443,
      "node_id": "REFE_lADOABII586Q--0NzwAAAANOrDTL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14204810443",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c66c68345efb0bb3d5613ebac703cde779fa0f01",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c66c68345efb0bb3d5613ebac703cde779fa0f01",
      "created_at": "2024-09-10T19:41:42Z"
    },
    {
      "event": "locked",
      "id": 18940829591,
      "node_id": "LOE_lADOABII586Q--0NzwAAAARo9h-X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18940829591",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-01T14:18:13Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693622390",
      "pull_request_review_id": 2202774226,
      "id": 1693622390,
      "node_id": "PRRC_kwDOABII585k8qB2",
      "diff_hunk": "@@ -240,7 +235,7 @@ void CoinControlDialog::lockCoin()\n     if (contextMenuItem->checkState(COLUMN_CHECKBOX) == Qt::Checked)\n         contextMenuItem->setCheckState(COLUMN_CHECKBOX, Qt::Unchecked);\n \n-    COutPoint outpt(TxidFromString(contextMenuItem->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()), contextMenuItem->data(COLUMN_ADDRESS, VOutRole).toUInt());\n+    COutPoint outpt(Txid::FromHex(contextMenuItem->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()).value(), contextMenuItem->data(COLUMN_ADDRESS, VOutRole).toUInt());",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 33,
      "original_position": 33,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "2cad2ef1886d31e647d88191a2d4a9d0ce834199",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This will now throw `std::bad_optional_access` instead of.. trying to make sense of a potentially non-conforming hex string and continuing. I guess that's fair. :) Not sure on the guarantees of a valid hex-string here.",
      "created_at": "2024-07-26T21:31:01Z",
      "updated_at": "2024-07-26T21:48:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1693622390",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693622390"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693624054",
      "pull_request_review_id": 2202774226,
      "id": 1693624054,
      "node_id": "PRRC_kwDOABII585k8qb2",
      "diff_hunk": "@@ -328,6 +328,15 @@ BOOST_AUTO_TEST_CASE(parse)\n         BOOST_CHECK_EQUAL(uint256S(\" 0x\").GetHex(), s_0);\n         BOOST_CHECK_EQUAL(uint256S(\" \").GetHex(), s_0);\n     }\n+    {\n+        // Make sure FromHex respects string_view length and stops reading at\n+        // end of the substring.\n+        auto chars_68{\"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123\"};\n+        std::string_view chars_64{chars_68, 64};\n+        BOOST_CHECK(!uint256::FromHex(std::string_view(chars_68, 63))); // too short\n+        BOOST_CHECK_EQUAL(uint256::FromHex(std::string_view(chars_68, 64)).value().ToString(), chars_64);\n+        BOOST_CHECK(!uint256::FromHex(std::string_view(chars_68, 65))); // too long\n+    }",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "2cad2ef1886d31e647d88191a2d4a9d0ce834199",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good to see the former `TxidFromString()` test resurrected with even more checks!\r\n\r\nI noticed there are no tests for `FromHex` returning `nullopt` for invalid characters, care to add?\r\n\r\nMaybe also mix up the hex case in `chars_68`?\r\n`0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF0123`",
      "created_at": "2024-07-26T21:33:41Z",
      "updated_at": "2024-07-26T21:48:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1693624054",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693624054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": 331,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 378,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693930185",
      "pull_request_review_id": 2203150611,
      "id": 1693930185,
      "node_id": "PRRC_kwDOABII585k91LJ",
      "diff_hunk": "@@ -174,22 +174,17 @@ void CoinControlDialog::showMenu(const QPoint &point)\n         contextMenuItem = item;\n \n         // disable some items (like Copy Transaction ID, lock, unlock) for tree roots in context menu\n-        if (item->data(COLUMN_ADDRESS, TxHashRole).toString().length() == 64) // transaction hash is 64 characters (this means it is a child node, so it is not a parent node in tree mode)\n-        {\n+        auto txid{Txid::FromHex(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString())};",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "2cad2ef1886d31e647d88191a2d4a9d0ce834199",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "can you please tell me which test covers this line?\r\nI tried checking it via the UI, but I think I would need testnet coins to be able to exercise it - is there a simpler way?",
      "created_at": "2024-07-27T09:40:40Z",
      "updated_at": "2024-07-28T07:50:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1693930185",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693930185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 177,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1694701815",
      "pull_request_review_id": 2204099260,
      "id": 1694701815,
      "node_id": "PRRC_kwDOABII585lAxj3",
      "diff_hunk": "@@ -174,22 +174,17 @@ void CoinControlDialog::showMenu(const QPoint &point)\n         contextMenuItem = item;\n \n         // disable some items (like Copy Transaction ID, lock, unlock) for tree roots in context menu\n-        if (item->data(COLUMN_ADDRESS, TxHashRole).toString().length() == 64) // transaction hash is 64 characters (this means it is a child node, so it is not a parent node in tree mode)\n-        {\n+        auto txid{Txid::FromHex(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString())};",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "2cad2ef1886d31e647d88191a2d4a9d0ce834199",
      "in_reply_to_id": 1693930185,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> can you please tell me which test covers this line?\r\n\r\nPossibly none, as the GUI tests are sparse at best.\r\n\r\n> I tried checking it via the UI, but I think I would need testnet coins to be able to exercise it - is there a simpler way?\r\n\r\nFor the majority of testing `regtest` (a non-public test-only network) is more than sufficient.",
      "created_at": "2024-07-29T07:11:27Z",
      "updated_at": "2024-07-29T07:11:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1694701815",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1694701815"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 177,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1694940958",
      "pull_request_review_id": 2204485711,
      "id": 1694940958,
      "node_id": "PRRC_kwDOABII585lBr8e",
      "diff_hunk": "@@ -174,22 +174,17 @@ void CoinControlDialog::showMenu(const QPoint &point)\n         contextMenuItem = item;\n \n         // disable some items (like Copy Transaction ID, lock, unlock) for tree roots in context menu\n-        if (item->data(COLUMN_ADDRESS, TxHashRole).toString().length() == 64) // transaction hash is 64 characters (this means it is a child node, so it is not a parent node in tree mode)\n-        {\n+        auto txid{Txid::FromHex(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString())};",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "2cad2ef1886d31e647d88191a2d4a9d0ce834199",
      "in_reply_to_id": 1693930185,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`regtest` is indeed how I've been testing my changes, added some instructions to the OP.",
      "created_at": "2024-07-29T09:55:14Z",
      "updated_at": "2024-07-29T09:55:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1694940958",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1694940958"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 177,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695573341",
      "pull_request_review_id": 2205522554,
      "id": 1695573341,
      "node_id": "PRRC_kwDOABII585lEGVd",
      "diff_hunk": "@@ -328,6 +328,15 @@ BOOST_AUTO_TEST_CASE(parse)\n         BOOST_CHECK_EQUAL(uint256S(\" 0x\").GetHex(), s_0);\n         BOOST_CHECK_EQUAL(uint256S(\" \").GetHex(), s_0);\n     }\n+    {\n+        // Make sure FromHex respects string_view length and stops reading at\n+        // end of the substring.\n+        auto chars_68{\"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef0123\"};\n+        std::string_view chars_64{chars_68, 64};\n+        BOOST_CHECK(!uint256::FromHex(std::string_view(chars_68, 63))); // too short\n+        BOOST_CHECK_EQUAL(uint256::FromHex(std::string_view(chars_68, 64)).value().ToString(), chars_64);\n+        BOOST_CHECK(!uint256::FromHex(std::string_view(chars_68, 65))); // too long\n+    }",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "2cad2ef1886d31e647d88191a2d4a9d0ce834199",
      "in_reply_to_id": 1693624054,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've added 17ebf1ac133d26676ba7ae3e40042fdf389d146f with a bunch more unit test coverage for `uint256::FromHex()`  and methods that wrap it, including invalid characters, `0x` prefix, and mixed case. Additionally, I've also added a fuzz target in ed764b55abb18dacb814658d328098a77682d128",
      "created_at": "2024-07-29T17:06:29Z",
      "updated_at": "2024-07-29T17:12:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1695573341",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695573341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": 331,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 378,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695586065",
      "pull_request_review_id": 2205542417,
      "id": 1695586065,
      "node_id": "PRRC_kwDOABII585lEJcR",
      "diff_hunk": "@@ -240,7 +235,7 @@ void CoinControlDialog::lockCoin()\n     if (contextMenuItem->checkState(COLUMN_CHECKBOX) == Qt::Checked)\n         contextMenuItem->setCheckState(COLUMN_CHECKBOX, Qt::Unchecked);\n \n-    COutPoint outpt(TxidFromString(contextMenuItem->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()), contextMenuItem->data(COLUMN_ADDRESS, VOutRole).toUInt());\n+    COutPoint outpt(Txid::FromHex(contextMenuItem->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()).value(), contextMenuItem->data(COLUMN_ADDRESS, VOutRole).toUInt());",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 33,
      "original_position": 33,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "2cad2ef1886d31e647d88191a2d4a9d0ce834199",
      "in_reply_to_id": 1693622390,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "There's no user input here, this dialog just shows coins that are already in the wallet (and thus validated), so I think this is a safe change?",
      "created_at": "2024-07-29T17:15:40Z",
      "updated_at": "2024-07-29T17:15:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1695586065",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695586065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695677286",
      "pull_request_review_id": 2205685953,
      "id": 1695677286,
      "node_id": "PRRC_kwDOABII585lEftm",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+#include <util/transaction_identifier.h>\n+\n+FUZZ_TARGET(uint256_fromhex)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto input{fuzzed_data_provider.ConsumeRandomLengthString()};\n+    const auto result{uint256::FromHex(input)};\n+    if (result) {\n+        // we only expect a result for a 64 character hex-string\n+        assert(input.length() == 64);\n+\n+        // check we can also construct {T,Wt}xids from a valid 64 character hex-string input\n+        assert(Txid::FromHex(input));\n+        assert(Wtxid::FromHex(input));\n+    }\n+}",
      "path": "src/test/fuzz/uint256.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I guess the red warning symbol is GitHub complaining about missing empty line at EOF. Best to fix in order to avoid warnings in editors, git diffs, etc.",
      "created_at": "2024-07-29T18:25:18Z",
      "updated_at": "2024-07-29T23:09:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1695677286",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695677286"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695679909",
      "pull_request_review_id": 2205685953,
      "id": 1695679909,
      "node_id": "PRRC_kwDOABII585lEgWl",
      "diff_hunk": "@@ -330,6 +331,57 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex64Chars()\n+{\n+    std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_64char_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_64char_input));\n+    }\n+    {\n+        // check that only strings of size 64 are accepted\n+        BOOST_CHECK(!T::FromHex(\"\"));\n+        BOOST_CHECK(!T::FromHex(\"0\"));\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF\"));                                  // 32 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"));   // 63 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF0\")); // 65 chars\n+    }\n+    {\n+        // check that non-hex characters are not accepted\n+        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~)\"};\n+        std::string valid_base{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"}; // 63 chars\n+        BOOST_CHECK_EQUAL(valid_base.length(), 63);\n+        for (auto c : invalid_chars) {\n+            BOOST_CHECK(!T::FromHex(valid_base + c));\n+        }\n+        // 0x prefixes are invalid\n+        std::string invalid_prefix{\"0x\" + valid_64char_input};\n+        BOOST_CHECK(!T::FromHex(std::string_view(invalid_prefix.data(), 64)));\n+        BOOST_CHECK(!T::FromHex(invalid_prefix));\n+    }\n+    {\n+        // check that string_view length is respected\n+        std::string chars_68{valid_64char_input + \"0123\"};\n+        BOOST_CHECK(T::FromHex(std::string_view(chars_68.data(), 64)));\n+        BOOST_CHECK(!T::FromHex(std::string_view(chars_68.data(), 63))); // too short\n+        BOOST_CHECK(!T::FromHex(std::string_view(chars_68.data(), 65))); // too long\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(from_hex)\n+{\n+    TestFromHex64Chars<uint256>();\n+    TestFromHex64Chars<Txid>();\n+    TestFromHex64Chars<Wtxid>();",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Very nice to see the additional coverage!\r\n\r\nIMHO it is overkill to be testing the `Txid`/`Wtxid` clients of `FromHex` here.",
      "created_at": "2024-07-29T18:27:36Z",
      "updated_at": "2024-07-29T23:09:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1695679909",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695679909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": 380,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 382,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695897672",
      "pull_request_review_id": 2205685953,
      "id": 1695897672,
      "node_id": "PRRC_kwDOABII585lFVhI",
      "diff_hunk": "@@ -174,22 +174,17 @@ void CoinControlDialog::showMenu(const QPoint &point)\n         contextMenuItem = item;\n \n         // disable some items (like Copy Transaction ID, lock, unlock) for tree roots in context menu\n-        if (item->data(COLUMN_ADDRESS, TxHashRole).toString().length() == 64) // transaction hash is 64 characters (this means it is a child node, so it is not a parent node in tree mode)\n-        {\n+        auto txid{Txid::FromHex(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString())};\n+        if (txid) { // transaction hash is 64 characters (this means it is a child node, so it is not a parent node in tree mode)",
      "path": "src/qt/coincontroldialog.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Comment seems a bit off now that `== 64` is removed.\r\n```suggestion\r\n        if (txid) { // transaction hash is a valid txid (this means it is a child node, so it is not a parent node in tree mode)\r\n```\r\nSame in `CoinControlDialog::viewItemChanged`.",
      "created_at": "2024-07-29T20:50:40Z",
      "updated_at": "2024-07-29T23:09:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1695897672",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695897672"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695995273",
      "pull_request_review_id": 2205685953,
      "id": 1695995273,
      "node_id": "PRRC_kwDOABII585lFtWJ",
      "diff_hunk": "@@ -240,7 +235,7 @@ void CoinControlDialog::lockCoin()\n     if (contextMenuItem->checkState(COLUMN_CHECKBOX) == Qt::Checked)\n         contextMenuItem->setCheckState(COLUMN_CHECKBOX, Qt::Unchecked);\n \n-    COutPoint outpt(TxidFromString(contextMenuItem->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()), contextMenuItem->data(COLUMN_ADDRESS, VOutRole).toUInt());\n+    COutPoint outpt(Txid::FromHex(contextMenuItem->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()).value(), contextMenuItem->data(COLUMN_ADDRESS, VOutRole).toUInt());",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 33,
      "original_position": 33,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "2cad2ef1886d31e647d88191a2d4a9d0ce834199",
      "in_reply_to_id": 1693622390,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Probably safe. I clicked around a bunch in the Coin Control dialog in both tree & list nodes. Wasn't able to have the debugger detect anything that failed to parse as txid's in any of these functions except for when right-clicking the parent tree item to have the menu be shown, correctly disabling lock/unlock actions.",
      "created_at": "2024-07-29T21:37:47Z",
      "updated_at": "2024-07-29T23:09:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1695995273",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1695995273"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696061544",
      "pull_request_review_id": 2205685953,
      "id": 1696061544,
      "node_id": "PRRC_kwDOABII585lF9ho",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+#include <util/transaction_identifier.h>\n+\n+FUZZ_TARGET(uint256_fromhex)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto input{fuzzed_data_provider.ConsumeRandomLengthString()};\n+    const auto result{uint256::FromHex(input)};",
      "path": "src/test/fuzz/uint256.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Strikes me as being \"too far off the reservation\" with the `input`s. Won't we be hitting the first condition in `FromHex` on `str.size()` being different from `::size() * 2` in >99% of cases? Maybe something closer to the below would spend fuzz-cycles a bit more wisely? Also added a loop to use more of the fuzz data. Then again I'm new to fuzzing.\r\n```diff\r\ndiff --git a/src/test/fuzz/uint256.cpp b/src/test/fuzz/uint256.cpp\r\nindex f5c8b2e146..38bbc5e108 100644\r\n--- a/src/test/fuzz/uint256.cpp\r\n+++ b/src/test/fuzz/uint256.cpp\r\n@@ -9,15 +9,42 @@\r\n \r\n FUZZ_TARGET(uint256_fromhex)\r\n {\r\n+    enum Mode {\r\n+        RandomCharsRandomLength,\r\n+        RandomCharsCorrectLength,\r\n+        ValidCharsRandomLength,\r\n+\r\n+        kMaxValue = ValidCharsRandomLength\r\n+    };\r\n+\r\n     FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\r\n-    const auto input{fuzzed_data_provider.ConsumeRandomLengthString()};\r\n-    const auto result{uint256::FromHex(input)};\r\n-    if (result) {\r\n-        // we only expect a result for a 64 character hex-string\r\n-        assert(input.length() == 64);\r\n+    while (fuzzed_data_provider.remaining_bytes() > 0) {\r\n+        std::string input;\r\n+        static_assert(64 == uint256::size() * 2, \"2 hex chars per byte\");\r\n+        switch (fuzzed_data_provider.ConsumeEnum<Mode>()) {\r\n+        case RandomCharsRandomLength:\r\n+            input = fuzzed_data_provider.ConsumeRandomLengthString();\r\n+            break;\r\n+        case RandomCharsCorrectLength:\r\n+            input = fuzzed_data_provider.ConsumeBytesAsString(64);\r\n+            break;\r\n+        case ValidCharsRandomLength:\r\n+            constexpr char valid[] = \"0123456789abcdefABCDEF\";\r\n+            input.resize(64, '0');\r\n+            for (char& c : input) {\r\n+                c = valid[fuzzed_data_provider.ConsumeIntegralInRange<int>(0, sizeof(valid)-1)];\r\n+            }\r\n+            break;\r\n+        }\r\n+\r\n+        const auto result{uint256::FromHex(input)};\r\n+        if (result) {\r\n+            // we only expect a result for a 64 character hex-string\r\n+            assert(input.length() == 64);\r\n \r\n-        // check we can also construct {T,Wt}xids from a valid 64 character hex-string input\r\n-        assert(Txid::FromHex(input));\r\n-        assert(Wtxid::FromHex(input));\r\n+            // check we can also construct {T,Wt}xids from a valid 64 character hex-string input\r\n+            assert(Txid::FromHex(input));\r\n+            assert(Wtxid::FromHex(input));\r\n+        }\r\n     }\r\n-}\r\n\\ No newline at end of file\r\n+}\r\n```",
      "created_at": "2024-07-29T23:06:08Z",
      "updated_at": "2024-07-29T23:09:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696061544",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696061544"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": 13,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696468590",
      "pull_request_review_id": 2206885926,
      "id": 1696468590,
      "node_id": "PRRC_kwDOABII585lHg5u",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+#include <util/transaction_identifier.h>\n+\n+FUZZ_TARGET(uint256_fromhex)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto input{fuzzed_data_provider.ConsumeRandomLengthString()};\n+    const auto result{uint256::FromHex(input)};",
      "path": "src/test/fuzz/uint256.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": 1696061544,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Strikes me as being \"too far off the reservation\" with the `input`s. Won't we be hitting the first condition in `FromHex` on `str.size()` being different from `::size() * 2` in >99% of cases? Maybe something closer to the below would spend fuzz-cycles a bit more wisely? Also added a loop to use more of the fuzz data. Then again I'm new to fuzzing.\r\n\r\nSome replies:\r\n\r\n* You are right that fuzz engines (the program that produces fuzz inputs) sometimes have difficulty reaching code that is hidden by complicated conditions. However, this condition isn't complicated and a fuzz engine should be able to solve it quickly. Once it is solved, most fuzz engines will by itself mutate the passing input further to try to reach more coverage. So I think in this particular case no hand-holding in the form of `enum Mode` is needed. (Though, there are fuzz targets where something like it is beneficial)\r\n* You should be able to see coverage reported by the fuzz engine and see it saturate quickly as a way to check whether my first point is plausible here\r\n\r\nAbout \"using more fuzz data\": I'd say not using a loop here is more beneficial, because:\r\n* Generally, a shorter fuzz input corresponds to a faster runtime, allowing a fuzz engine to iterate faster when searching for new inputs\r\n* The function under test has no state (it is pure). Thus, no additional bugs can be found by running in a loop. (Though, there are fuzz targets where something like it is beneficial)\r\n* When adding fuzz inputs to the `qa-assets` repo, small ones will be preferred, so the long ones will be discarded anyway. Should they not be discarded (maybe due to the use of `-use_value_profile=1`), they will not help to increase coverage or find more bugs, but only bloat the `qa-assets` repo with storage and runtime overhead",
      "created_at": "2024-07-30T07:33:42Z",
      "updated_at": "2024-07-30T07:33:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696468590",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696468590"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": 13,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696476037",
      "pull_request_review_id": 2206897116,
      "id": 1696476037,
      "node_id": "PRRC_kwDOABII585lHiuF",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+#include <util/transaction_identifier.h>\n+\n+FUZZ_TARGET(uint256_fromhex)",
      "path": "src/test/fuzz/uint256.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This would be duplicate with the `src/test/fuzz/hex.cpp`, which already does `(void)uint256::FromHex(random_hex_string);`\r\n\r\nI'd say that hex parsing is trivial enough to put everything into one fuzz target. Otherwise the overhead of allocating a dedicated fuzz target, fuzz input folder, and fuzz resources (CPU...) may take away those resources from more meaningful fuzz targets that actually need them more than 5 minutes of initial fuzzing. (I'd be surprised if all code wasn't covered in 5 minutes of fuzzing here, if it isn't already covered by the existing `hex` fuzz inputs.",
      "created_at": "2024-07-30T07:39:09Z",
      "updated_at": "2024-07-30T07:39:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696476037",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696476037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696732652",
      "pull_request_review_id": 2207310737,
      "id": 1696732652,
      "node_id": "PRRC_kwDOABII585lIhXs",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+#include <util/transaction_identifier.h>\n+\n+FUZZ_TARGET(uint256_fromhex)",
      "path": "src/test/fuzz/uint256.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": 1696476037,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah yes, I missed that it's already covered. Do you think it's best to drop the fuzz commit altogether or move the extra checks into `fuzz/hex.cpp`?\r\n\r\n<details>\r\n<summary>git diff on 30c7351491</summary>\r\n\r\n```diff\r\ndiff --git a/src/Makefile.test.include b/src/Makefile.test.include\r\nindex 268d346d6b..0993a65eff 100644\r\n--- a/src/Makefile.test.include\r\n+++ b/src/Makefile.test.include\r\n@@ -397,7 +397,6 @@ test_fuzz_fuzz_SOURCES = \\\r\n  test/fuzz/tx_pool.cpp \\\r\n  test/fuzz/txorphan.cpp \\\r\n  test/fuzz/txrequest.cpp \\\r\n- test/fuzz/uint256.cpp \\\r\n  test/fuzz/utxo_snapshot.cpp \\\r\n  test/fuzz/utxo_total_supply.cpp \\\r\n  test/fuzz/validation_load_mempool.cpp \\\r\ndiff --git a/src/test/fuzz/hex.cpp b/src/test/fuzz/hex.cpp\r\nindex bc46863f1d..dcf2df279e 100644\r\n--- a/src/test/fuzz/hex.cpp\r\n+++ b/src/test/fuzz/hex.cpp\r\n@@ -27,7 +27,11 @@ FUZZ_TARGET(hex)\r\n         assert(ToLower(random_hex_string) == hex_data);\r\n     }\r\n     (void)IsHexNumber(random_hex_string);\r\n-    (void)uint256::FromHex(random_hex_string);\r\n+    if (uint256::FromHex(random_hex_string)) {\r\n+        assert(random_hex_string.length() == 64);\r\n+        assert(Txid::FromHex(random_hex_string));\r\n+        assert(Wtxid::FromHex(random_hex_string));\r\n+    }\r\n     (void)uint256S(random_hex_string);\r\n     try {\r\n         (void)HexToPubKey(random_hex_string);\r\n\r\n```\r\n</details>\r\n\r\nI'm not 100% sure on the `assert(random_hex_string.length() == 64);` check since that feels like more of a unittest thing, but at the same time it's pretty cheap check",
      "created_at": "2024-07-30T10:32:53Z",
      "updated_at": "2024-07-30T10:56:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696732652",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696732652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696742831",
      "pull_request_review_id": 2207310737,
      "id": 1696742831,
      "node_id": "PRRC_kwDOABII585lIj2v",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+#include <util/transaction_identifier.h>\n+\n+FUZZ_TARGET(uint256_fromhex)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto input{fuzzed_data_provider.ConsumeRandomLengthString()};\n+    const auto result{uint256::FromHex(input)};",
      "path": "src/test/fuzz/uint256.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": 1696061544,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm lacking hands-on experience with fuzzing to comment on worthwhile optimizations, so I'm going to go with consensus here. @maflcko's reasoning looks sounds to me, so I think keeping it as is (besides moving to to `fuzz/hex.cpp` as discussed in another comment) is the sensible approach, but thank you for sharing the `Enum` approach, I hadn't seen that yet and it looks like a useful pattern to know.",
      "created_at": "2024-07-30T10:41:29Z",
      "updated_at": "2024-07-30T10:56:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696742831",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696742831"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": 13,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696748021",
      "pull_request_review_id": 2207310737,
      "id": 1696748021,
      "node_id": "PRRC_kwDOABII585lIlH1",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+#include <util/transaction_identifier.h>\n+\n+FUZZ_TARGET(uint256_fromhex)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto input{fuzzed_data_provider.ConsumeRandomLengthString()};\n+    const auto result{uint256::FromHex(input)};\n+    if (result) {\n+        // we only expect a result for a 64 character hex-string\n+        assert(input.length() == 64);\n+\n+        // check we can also construct {T,Wt}xids from a valid 64 character hex-string input\n+        assert(Txid::FromHex(input));\n+        assert(Wtxid::FromHex(input));\n+    }\n+}",
      "path": "src/test/fuzz/uint256.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": 1695677286,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah it is, will fix in next force push, thanks.",
      "created_at": "2024-07-30T10:45:54Z",
      "updated_at": "2024-07-30T10:56:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696748021",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696748021"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696752519",
      "pull_request_review_id": 2207310737,
      "id": 1696752519,
      "node_id": "PRRC_kwDOABII585lImOH",
      "diff_hunk": "@@ -330,6 +331,57 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex64Chars()\n+{\n+    std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_64char_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_64char_input));\n+    }\n+    {\n+        // check that only strings of size 64 are accepted\n+        BOOST_CHECK(!T::FromHex(\"\"));\n+        BOOST_CHECK(!T::FromHex(\"0\"));\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF\"));                                  // 32 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"));   // 63 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF0\")); // 65 chars\n+    }\n+    {\n+        // check that non-hex characters are not accepted\n+        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~)\"};\n+        std::string valid_base{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"}; // 63 chars\n+        BOOST_CHECK_EQUAL(valid_base.length(), 63);\n+        for (auto c : invalid_chars) {\n+            BOOST_CHECK(!T::FromHex(valid_base + c));\n+        }\n+        // 0x prefixes are invalid\n+        std::string invalid_prefix{\"0x\" + valid_64char_input};\n+        BOOST_CHECK(!T::FromHex(std::string_view(invalid_prefix.data(), 64)));\n+        BOOST_CHECK(!T::FromHex(invalid_prefix));\n+    }\n+    {\n+        // check that string_view length is respected\n+        std::string chars_68{valid_64char_input + \"0123\"};\n+        BOOST_CHECK(T::FromHex(std::string_view(chars_68.data(), 64)));\n+        BOOST_CHECK(!T::FromHex(std::string_view(chars_68.data(), 63))); // too short\n+        BOOST_CHECK(!T::FromHex(std::string_view(chars_68.data(), 65))); // too long\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(from_hex)\n+{\n+    TestFromHex64Chars<uint256>();\n+    TestFromHex64Chars<Txid>();\n+    TestFromHex64Chars<Wtxid>();",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": 1695679909,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would you prefer we don't test `{T, Wt}xid::FromHex()` at all, or in a different way? At the moment these won't catch anything as `{T, Wt}xid::FromHex()` is just wrapping the `uint256` one, but I thought it'd be prudent to add the tests already for when the wrappers are reimplemented in the future for whatever reason, and this approach doesn't add much overhead? So, just a way to enforce the interface remains stable?",
      "created_at": "2024-07-30T10:49:33Z",
      "updated_at": "2024-07-30T10:57:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696752519",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696752519"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": 380,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 382,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696759211",
      "pull_request_review_id": 2207310737,
      "id": 1696759211,
      "node_id": "PRRC_kwDOABII585lIn2r",
      "diff_hunk": "@@ -174,22 +174,17 @@ void CoinControlDialog::showMenu(const QPoint &point)\n         contextMenuItem = item;\n \n         // disable some items (like Copy Transaction ID, lock, unlock) for tree roots in context menu\n-        if (item->data(COLUMN_ADDRESS, TxHashRole).toString().length() == 64) // transaction hash is 64 characters (this means it is a child node, so it is not a parent node in tree mode)\n-        {\n+        auto txid{Txid::FromHex(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString())};\n+        if (txid) { // transaction hash is 64 characters (this means it is a child node, so it is not a parent node in tree mode)",
      "path": "src/qt/coincontroldialog.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": 1695897672,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Makes sense, will update both to `if (txid) { // a valid txid means this is a child node, and not a parent node in tree mode` in next force push.",
      "created_at": "2024-07-30T10:54:56Z",
      "updated_at": "2024-07-30T10:56:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696759211",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696759211"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696783353",
      "pull_request_review_id": 2207395938,
      "id": 1696783353,
      "node_id": "PRRC_kwDOABII585lItv5",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+#include <util/transaction_identifier.h>\n+\n+FUZZ_TARGET(uint256_fromhex)",
      "path": "src/test/fuzz/uint256.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": 1696476037,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Do you think it's best to drop the fuzz commit altogether or move the extra checks into `fuzz/hex.cpp`?\r\n\r\nNo opinion. Up to you. Your diff looks good.",
      "created_at": "2024-07-30T11:14:34Z",
      "updated_at": "2024-07-30T11:14:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696783353",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696783353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696846017",
      "pull_request_review_id": 2207495849,
      "id": 1696846017,
      "node_id": "PRRC_kwDOABII585lI9DB",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+#include <util/transaction_identifier.h>\n+\n+FUZZ_TARGET(uint256_fromhex)",
      "path": "src/test/fuzz/uint256.cpp",
      "position": null,
      "original_position": 10,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": 1696476037,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, I've applied the above diff to fcf7fe35f1805e59357bcb6e65fa66460b423f86",
      "created_at": "2024-07-30T12:04:11Z",
      "updated_at": "2024-07-30T12:04:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696846017",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696846017"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 10,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696847070",
      "pull_request_review_id": 2207497648,
      "id": 1696847070,
      "node_id": "PRRC_kwDOABII585lI9Te",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+#include <util/transaction_identifier.h>\n+\n+FUZZ_TARGET(uint256_fromhex)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto input{fuzzed_data_provider.ConsumeRandomLengthString()};\n+    const auto result{uint256::FromHex(input)};\n+    if (result) {\n+        // we only expect a result for a 64 character hex-string\n+        assert(input.length() == 64);\n+\n+        // check we can also construct {T,Wt}xids from a valid 64 character hex-string input\n+        assert(Txid::FromHex(input));\n+        assert(Wtxid::FromHex(input));\n+    }\n+}",
      "path": "src/test/fuzz/uint256.cpp",
      "position": null,
      "original_position": 23,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": 1695677286,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Resolved by [removing the file entirely](https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696846017).",
      "created_at": "2024-07-30T12:05:05Z",
      "updated_at": "2024-07-30T12:05:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696847070",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696847070"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696851047",
      "pull_request_review_id": 2207503969,
      "id": 1696851047,
      "node_id": "PRRC_kwDOABII585lI-Rn",
      "diff_hunk": "@@ -174,22 +174,17 @@ void CoinControlDialog::showMenu(const QPoint &point)\n         contextMenuItem = item;\n \n         // disable some items (like Copy Transaction ID, lock, unlock) for tree roots in context menu\n-        if (item->data(COLUMN_ADDRESS, TxHashRole).toString().length() == 64) // transaction hash is 64 characters (this means it is a child node, so it is not a parent node in tree mode)\n-        {\n+        auto txid{Txid::FromHex(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString())};\n+        if (txid) { // transaction hash is 64 characters (this means it is a child node, so it is not a parent node in tree mode)",
      "path": "src/qt/coincontroldialog.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": 1695897672,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done in 24a6de35857e88d968ef90cd6fbcda0003f0e3e3",
      "created_at": "2024-07-30T12:07:18Z",
      "updated_at": "2024-07-30T12:07:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696851047",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1696851047"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 178,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697105302",
      "pull_request_review_id": 2207923972,
      "id": 1697105302,
      "node_id": "PRRC_kwDOABII585lJ8WW",
      "diff_hunk": "@@ -330,6 +331,57 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex64Chars()\n+{\n+    std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_64char_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_64char_input));\n+    }\n+    {\n+        // check that only strings of size 64 are accepted\n+        BOOST_CHECK(!T::FromHex(\"\"));\n+        BOOST_CHECK(!T::FromHex(\"0\"));\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF\"));                                  // 32 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"));   // 63 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF0\")); // 65 chars\n+    }\n+    {\n+        // check that non-hex characters are not accepted\n+        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~)\"};\n+        std::string valid_base{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"}; // 63 chars\n+        BOOST_CHECK_EQUAL(valid_base.length(), 63);\n+        for (auto c : invalid_chars) {\n+            BOOST_CHECK(!T::FromHex(valid_base + c));\n+        }\n+        // 0x prefixes are invalid\n+        std::string invalid_prefix{\"0x\" + valid_64char_input};\n+        BOOST_CHECK(!T::FromHex(std::string_view(invalid_prefix.data(), 64)));\n+        BOOST_CHECK(!T::FromHex(invalid_prefix));\n+    }\n+    {\n+        // check that string_view length is respected\n+        std::string chars_68{valid_64char_input + \"0123\"};\n+        BOOST_CHECK(T::FromHex(std::string_view(chars_68.data(), 64)));\n+        BOOST_CHECK(!T::FromHex(std::string_view(chars_68.data(), 63))); // too short\n+        BOOST_CHECK(!T::FromHex(std::string_view(chars_68.data(), 65))); // too long\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(from_hex)\n+{\n+    TestFromHex64Chars<uint256>();\n+    TestFromHex64Chars<Txid>();\n+    TestFromHex64Chars<Wtxid>();",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": 1695679909,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In reply to https://github.com/bitcoin/bitcoin/pull/30532/files#r1696752519:\r\n\r\nI'm not too worried about `{T, Wt}xid::FromHex` diverging in behavior. But maybe someone else can chime in to tie-break.",
      "created_at": "2024-07-30T14:48:53Z",
      "updated_at": "2024-07-30T15:18:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1697105302",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697105302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": 380,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 382,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697123924",
      "pull_request_review_id": 2207923972,
      "id": 1697123924,
      "node_id": "PRRC_kwDOABII585lKA5U",
      "diff_hunk": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2020-2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <uint256.h>\n+#include <util/transaction_identifier.h>\n+\n+FUZZ_TARGET(uint256_fromhex)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto input{fuzzed_data_provider.ConsumeRandomLengthString()};\n+    const auto result{uint256::FromHex(input)};",
      "path": "src/test/fuzz/uint256.cpp",
      "position": null,
      "original_position": 14,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": 1696061544,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In reply to https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1696742831:\r\n\r\n> However, this condition isn't complicated and a fuzz engine should be able to solve it quickly. Once it is solved, most fuzz engines will by itself mutate the passing input further to try to reach more coverage.\r\n\r\n> Generally, a shorter fuzz input corresponds to a faster runtime, allowing a fuzz engine to iterate faster when searching for new inputs\r\n\r\nWow, wasn't aware that fuzz engines were aware of code coverage and generated this level of non-random inputs. Thanks for the fuzz crash course @maflcko!\r\n\r\nSounds good to me @stickies-v.",
      "created_at": "2024-07-30T14:59:49Z",
      "updated_at": "2024-07-30T15:18:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1697123924",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697123924"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": 13,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 14,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697162696",
      "pull_request_review_id": 2208017555,
      "id": 1697162696,
      "node_id": "PRRC_kwDOABII585lKKXI",
      "diff_hunk": "@@ -330,6 +331,57 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex64Chars()\n+{\n+    std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_64char_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_64char_input));\n+    }\n+    {\n+        // check that only strings of size 64 are accepted\n+        BOOST_CHECK(!T::FromHex(\"\"));\n+        BOOST_CHECK(!T::FromHex(\"0\"));\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF\"));                                  // 32 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"));   // 63 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF0\")); // 65 chars\n+    }\n+    {\n+        // check that non-hex characters are not accepted\n+        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~)\"};\n+        std::string valid_base{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"}; // 63 chars\n+        BOOST_CHECK_EQUAL(valid_base.length(), 63);\n+        for (auto c : invalid_chars) {\n+            BOOST_CHECK(!T::FromHex(valid_base + c));\n+        }\n+        // 0x prefixes are invalid\n+        std::string invalid_prefix{\"0x\" + valid_64char_input};\n+        BOOST_CHECK(!T::FromHex(std::string_view(invalid_prefix.data(), 64)));\n+        BOOST_CHECK(!T::FromHex(invalid_prefix));\n+    }\n+    {\n+        // check that string_view length is respected\n+        std::string chars_68{valid_64char_input + \"0123\"};\n+        BOOST_CHECK(T::FromHex(std::string_view(chars_68.data(), 64)));\n+        BOOST_CHECK(!T::FromHex(std::string_view(chars_68.data(), 63))); // too short\n+        BOOST_CHECK(!T::FromHex(std::string_view(chars_68.data(), 65))); // too long\n+    }\n+}\n+\n+BOOST_AUTO_TEST_CASE(from_hex)\n+{\n+    TestFromHex64Chars<uint256>();\n+    TestFromHex64Chars<Txid>();\n+    TestFromHex64Chars<Wtxid>();",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 60,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "30c7351491063dab127cff236074beddff59d1a5",
      "in_reply_to_id": 1695679909,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Welcoming more input here, yeah. To draw a parallel: [`TxidFromString` was also \"just a wrapper\"](https://github.com/bitcoin/bitcoin/pull/30436/files#diff-98ca28aa44cf84d5a29e4ce7eddbabf495a51154b02a6703a78977b80e19b17aL50-R50).\r\n\r\nEdit: my biggest concern with this code is actually that we're testing `transaction_identifier` logic in `uint256` tests, but creating a header just for this seems like too much of a hassle atm.",
      "created_at": "2024-07-30T15:24:38Z",
      "updated_at": "2024-07-30T15:30:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1697162696",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1697162696"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": 380,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 382,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698159793",
      "pull_request_review_id": 2209589526,
      "id": 1698159793,
      "node_id": "PRRC_kwDOABII585lN9yx",
      "diff_hunk": "@@ -1028,12 +1028,4 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     }\n }\n \n-BOOST_AUTO_TEST_CASE(test_TxidFromString)\n-{\n-    // Make sure TxidFromString respects string_view length and stops reading at\n-    // end of the substring.\n-    BOOST_CHECK_EQUAL(TxidFromString(std::string_view(\"ABCD1234\", 4)).ToString(),",
      "path": "src/test/transaction_tests.cpp",
      "position": 35,
      "original_position": 8,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "17ebf1ac133d26676ba7ae3e40042fdf389d146f",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "style nit in 17ebf1ac133d26676ba7ae3e40042fdf389d146f: Test coverage for `TxidFromString` is removed in the wrong commit.",
      "created_at": "2024-07-31T09:00:59Z",
      "updated_at": "2024-07-31T09:20:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698159793",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698159793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1035,
      "original_line": 1035,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698165764",
      "pull_request_review_id": 2209589526,
      "id": 1698165764,
      "node_id": "PRRC_kwDOABII585lN_QE",
      "diff_hunk": "@@ -330,6 +331,57 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex64Chars()\n+{\n+    std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_64char_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_64char_input));\n+    }\n+    {\n+        // check that only strings of size 64 are accepted",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "17ebf1ac133d26676ba7ae3e40042fdf389d146f",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "style nit in https://github.com/bitcoin/bitcoin/commit/17ebf1ac133d26676ba7ae3e40042fdf389d146f: Seems duplicate with the \"too short\"/\"too long\" test below?",
      "created_at": "2024-07-31T09:04:18Z",
      "updated_at": "2024-07-31T09:20:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698165764",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698165764"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 354,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698172542",
      "pull_request_review_id": 2209589526,
      "id": 1698172542,
      "node_id": "PRRC_kwDOABII585lOA5-",
      "diff_hunk": "@@ -330,6 +331,57 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex64Chars()\n+{\n+    std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_64char_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_64char_input));\n+    }\n+    {\n+        // check that only strings of size 64 are accepted\n+        BOOST_CHECK(!T::FromHex(\"\"));\n+        BOOST_CHECK(!T::FromHex(\"0\"));\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF\"));                                  // 32 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"));   // 63 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF0\")); // 65 chars\n+    }\n+    {\n+        // check that non-hex characters are not accepted\n+        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~)\"};\n+        std::string valid_base{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"}; // 63 chars",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "17ebf1ac133d26676ba7ae3e40042fdf389d146f",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "style nit in https://github.com/bitcoin/bitcoin/commit/17ebf1ac133d26676ba7ae3e40042fdf389d146f: Could just re-use `valid_64char_input.substr(0, 63)`?",
      "created_at": "2024-07-31T09:07:56Z",
      "updated_at": "2024-07-31T09:20:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698172542",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698172542"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 359,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698177785",
      "pull_request_review_id": 2209589526,
      "id": 1698177785,
      "node_id": "PRRC_kwDOABII585lOCL5",
      "diff_hunk": "@@ -330,6 +331,57 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex64Chars()\n+{\n+    std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_64char_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_64char_input));\n+    }\n+    {\n+        // check that only strings of size 64 are accepted\n+        BOOST_CHECK(!T::FromHex(\"\"));\n+        BOOST_CHECK(!T::FromHex(\"0\"));\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF\"));                                  // 32 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"));   // 63 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF0\")); // 65 chars\n+    }\n+    {\n+        // check that non-hex characters are not accepted\n+        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~)\"};\n+        std::string valid_base{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"}; // 63 chars\n+        BOOST_CHECK_EQUAL(valid_base.length(), 63);\n+        for (auto c : invalid_chars) {\n+            BOOST_CHECK(!T::FromHex(valid_base + c));\n+        }\n+        // 0x prefixes are invalid\n+        std::string invalid_prefix{\"0x\" + valid_64char_input};\n+        BOOST_CHECK(!T::FromHex(std::string_view(invalid_prefix.data(), 64)));\n+        BOOST_CHECK(!T::FromHex(invalid_prefix));\n+    }\n+    {\n+        // check that string_view length is respected\n+        std::string chars_68{valid_64char_input + \"0123\"};\n+        BOOST_CHECK(T::FromHex(std::string_view(chars_68.data(), 64)));",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "17ebf1ac133d26676ba7ae3e40042fdf389d146f",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "style nit in https://github.com/bitcoin/bitcoin/commit/17ebf1ac133d26676ba7ae3e40042fdf389d146f: Could check that `.value().ToString()` is equal to `ToLower(valid_64char_input)`? Similar to `test_TxidFromString`.",
      "created_at": "2024-07-31T09:11:03Z",
      "updated_at": "2024-07-31T09:20:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698177785",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698177785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 372,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698185872",
      "pull_request_review_id": 2209589526,
      "id": 1698185872,
      "node_id": "PRRC_kwDOABII585lOEKQ",
      "diff_hunk": "@@ -78,9 +78,9 @@ BOOST_FIXTURE_TEST_CASE(package_hash_tests, TestChain100Setup)\n     BOOST_CHECK(wtxid_2.GetHex() < wtxid_3.GetHex());\n \n     // The txids are not (we want to test that sorting and hashing use wtxid, not txid):\n-    Txid txid_1{TxidFromString(\"0xbd0f71c1d5e50589063e134fad22053cdae5ab2320db5bf5e540198b0b5a4e69\")};\n-    Txid txid_2{TxidFromString(\"0xb4749f017444b051c44dfd2720e88f314ff94f3dd6d56d40ef65854fcd7fff6b\")};\n-    Txid txid_3{TxidFromString(\"0xee707be5201160e32c4fc715bec227d1aeea5940fb4295605e7373edce3b1a93\")};\n+    Txid txid_1{Txid::FromHex(\"bd0f71c1d5e50589063e134fad22053cdae5ab2320db5bf5e540198b0b5a4e69\").value()};\n+    Txid txid_2{Txid::FromHex(\"b4749f017444b051c44dfd2720e88f314ff94f3dd6d56d40ef65854fcd7fff6b\").value()};\n+    Txid txid_3{Txid::FromHex(\"ee707be5201160e32c4fc715bec227d1aeea5940fb4295605e7373edce3b1a93\").value()};",
      "path": "src/test/txpackage_tests.cpp",
      "position": 36,
      "original_position": 9,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "24a6de35857e88d968ef90cd6fbcda0003f0e3e3",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "style nit in the last commit: Could combine all test changes of this form into the previous test-only commit, so that similar test-only changes are grouped together?",
      "created_at": "2024-07-31T09:16:15Z",
      "updated_at": "2024-07-31T09:20:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698185872",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698185872"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 83,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698197301",
      "pull_request_review_id": 2209647215,
      "id": 1698197301,
      "node_id": "PRRC_kwDOABII585lOG81",
      "diff_hunk": "@@ -330,6 +331,57 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex64Chars()\n+{\n+    std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "17ebf1ac133d26676ba7ae3e40042fdf389d146f",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "test-nit in: Could even template `64` with `valid_input = valid_input.substr(0, T::size())` and use `T::size()` below as well, to allow testing of uint160 as well, but this can be done in a follow-up.",
      "created_at": "2024-07-31T09:23:51Z",
      "updated_at": "2024-07-31T09:23:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698197301",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698197301"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698459388",
      "pull_request_review_id": 2210086223,
      "id": 1698459388,
      "node_id": "PRRC_kwDOABII585lPG78",
      "diff_hunk": "@@ -1028,12 +1028,4 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     }\n }\n \n-BOOST_AUTO_TEST_CASE(test_TxidFromString)\n-{\n-    // Make sure TxidFromString respects string_view length and stops reading at\n-    // end of the substring.\n-    BOOST_CHECK_EQUAL(TxidFromString(std::string_view(\"ABCD1234\", 4)).ToString(),",
      "path": "src/test/transaction_tests.cpp",
      "position": 35,
      "original_position": 8,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "17ebf1ac133d26676ba7ae3e40042fdf389d146f",
      "in_reply_to_id": 1698159793,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks, fixed. This commit was initially just meant to move the test, but I agree your approach makes more sense, especially in the current way the commits are organized.",
      "created_at": "2024-07-31T12:53:18Z",
      "updated_at": "2024-07-31T13:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698459388",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698459388"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1035,
      "original_line": 1035,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698463761",
      "pull_request_review_id": 2210086223,
      "id": 1698463761,
      "node_id": "PRRC_kwDOABII585lPIAR",
      "diff_hunk": "@@ -330,6 +331,57 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex64Chars()\n+{\n+    std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 19,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "17ebf1ac133d26676ba7ae3e40042fdf389d146f",
      "in_reply_to_id": 1698197301,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice, I like it. Adopted this approach and added `TestFromHex<uint160>();`",
      "created_at": "2024-07-31T12:56:16Z",
      "updated_at": "2024-07-31T13:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698463761",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698463761"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698467272",
      "pull_request_review_id": 2210086223,
      "id": 1698467272,
      "node_id": "PRRC_kwDOABII585lPI3I",
      "diff_hunk": "@@ -330,6 +331,57 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex64Chars()\n+{\n+    std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_64char_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_64char_input));\n+    }\n+    {\n+        // check that only strings of size 64 are accepted",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "17ebf1ac133d26676ba7ae3e40042fdf389d146f",
      "in_reply_to_id": 1698165764,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The \"too short\"/\"too long\" tests are a replacement of the `test_TxidFromString` where we're specifically testing `string_view` substring input, so I don't think they're duplicated?",
      "created_at": "2024-07-31T12:58:44Z",
      "updated_at": "2024-07-31T13:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698467272",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698467272"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 354,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698468890",
      "pull_request_review_id": 2210086223,
      "id": 1698468890,
      "node_id": "PRRC_kwDOABII585lPJQa",
      "diff_hunk": "@@ -330,6 +331,57 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex64Chars()\n+{\n+    std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_64char_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_64char_input));\n+    }\n+    {\n+        // check that only strings of size 64 are accepted\n+        BOOST_CHECK(!T::FromHex(\"\"));\n+        BOOST_CHECK(!T::FromHex(\"0\"));\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF\"));                                  // 32 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"));   // 63 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF0\")); // 65 chars\n+    }\n+    {\n+        // check that non-hex characters are not accepted\n+        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~)\"};\n+        std::string valid_base{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"}; // 63 chars",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 37,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "17ebf1ac133d26676ba7ae3e40042fdf389d146f",
      "in_reply_to_id": 1698172542,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice, taken, thanks.",
      "created_at": "2024-07-31T12:59:49Z",
      "updated_at": "2024-07-31T13:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698468890",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698468890"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 359,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698476913",
      "pull_request_review_id": 2210086223,
      "id": 1698476913,
      "node_id": "PRRC_kwDOABII585lPLNx",
      "diff_hunk": "@@ -330,6 +331,57 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex64Chars()\n+{\n+    std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_64char_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_64char_input));\n+    }\n+    {\n+        // check that only strings of size 64 are accepted\n+        BOOST_CHECK(!T::FromHex(\"\"));\n+        BOOST_CHECK(!T::FromHex(\"0\"));\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF\"));                                  // 32 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"));   // 63 chars\n+        BOOST_CHECK(!T::FromHex(\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF0\")); // 65 chars\n+    }\n+    {\n+        // check that non-hex characters are not accepted\n+        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~)\"};\n+        std::string valid_base{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDE\"}; // 63 chars\n+        BOOST_CHECK_EQUAL(valid_base.length(), 63);\n+        for (auto c : invalid_chars) {\n+            BOOST_CHECK(!T::FromHex(valid_base + c));\n+        }\n+        // 0x prefixes are invalid\n+        std::string invalid_prefix{\"0x\" + valid_64char_input};\n+        BOOST_CHECK(!T::FromHex(std::string_view(invalid_prefix.data(), 64)));\n+        BOOST_CHECK(!T::FromHex(invalid_prefix));\n+    }\n+    {\n+        // check that string_view length is respected\n+        std::string chars_68{valid_64char_input + \"0123\"};\n+        BOOST_CHECK(T::FromHex(std::string_view(chars_68.data(), 64)));",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 50,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "17ebf1ac133d26676ba7ae3e40042fdf389d146f",
      "in_reply_to_id": 1698177785,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I initially changed it to what it is now because I wanted to keep the test focused on ensuring string_view length to be respected, but I suppose it is helpful to ensure the correct substring characters are respected too, so I've taken your suggestion, thanks.",
      "created_at": "2024-07-31T13:05:33Z",
      "updated_at": "2024-07-31T13:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698476913",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698476913"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 372,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698543302",
      "pull_request_review_id": 2210086223,
      "id": 1698543302,
      "node_id": "PRRC_kwDOABII585lPbbG",
      "diff_hunk": "@@ -78,9 +78,9 @@ BOOST_FIXTURE_TEST_CASE(package_hash_tests, TestChain100Setup)\n     BOOST_CHECK(wtxid_2.GetHex() < wtxid_3.GetHex());\n \n     // The txids are not (we want to test that sorting and hashing use wtxid, not txid):\n-    Txid txid_1{TxidFromString(\"0xbd0f71c1d5e50589063e134fad22053cdae5ab2320db5bf5e540198b0b5a4e69\")};\n-    Txid txid_2{TxidFromString(\"0xb4749f017444b051c44dfd2720e88f314ff94f3dd6d56d40ef65854fcd7fff6b\")};\n-    Txid txid_3{TxidFromString(\"0xee707be5201160e32c4fc715bec227d1aeea5940fb4295605e7373edce3b1a93\")};\n+    Txid txid_1{Txid::FromHex(\"bd0f71c1d5e50589063e134fad22053cdae5ab2320db5bf5e540198b0b5a4e69\").value()};\n+    Txid txid_2{Txid::FromHex(\"b4749f017444b051c44dfd2720e88f314ff94f3dd6d56d40ef65854fcd7fff6b\").value()};\n+    Txid txid_3{Txid::FromHex(\"ee707be5201160e32c4fc715bec227d1aeea5940fb4295605e7373edce3b1a93\").value()};",
      "path": "src/test/txpackage_tests.cpp",
      "position": 36,
      "original_position": 9,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "24a6de35857e88d968ef90cd6fbcda0003f0e3e3",
      "in_reply_to_id": 1698185872,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The reason I organized it like this was to keep `TxidFromString()` test coverage until the same commit it was removed, whereas `WtxidFromString` is a test-only function and could be safely removed beforehand. Gonna leave as is for now since I think it's quite reviewable in the current shape, too?",
      "created_at": "2024-07-31T13:47:47Z",
      "updated_at": "2024-07-31T13:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698543302",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698543302"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 83,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698597925",
      "pull_request_review_id": 2210315059,
      "id": 1698597925,
      "node_id": "PRRC_kwDOABII585lPowl",
      "diff_hunk": "@@ -330,6 +333,59 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "d50ba708989e55d6081959acd72c7b68ed29a890",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in d50ba708989e55d6081959acd72c7b68ed29a890: `uint256` -> base_blob",
      "created_at": "2024-07-31T14:16:29Z",
      "updated_at": "2024-07-31T14:19:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698597925",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698597925"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698598718",
      "pull_request_review_id": 2210315059,
      "id": 1698598718,
      "node_id": "PRRC_kwDOABII585lPo8-",
      "diff_hunk": "@@ -330,6 +331,57 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps uint256::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex64Chars()\n+{\n+    std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_64char_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_64char_input));\n+    }\n+    {\n+        // check that only strings of size 64 are accepted",
      "path": "src/test/uint256_tests.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "17ebf1ac133d26676ba7ae3e40042fdf389d146f",
      "in_reply_to_id": 1698165764,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit in d50ba708989e55d6081959acd72c7b68ed29a890: 64 -> num_chars",
      "created_at": "2024-07-31T14:17:01Z",
      "updated_at": "2024-07-31T14:19:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1698598718",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1698598718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 354,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699607128",
      "pull_request_review_id": 2211916268,
      "id": 1699607128,
      "node_id": "PRRC_kwDOABII585lTfJY",
      "diff_hunk": "@@ -330,6 +333,59 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps base_blob::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex()\n+{\n+    constexpr unsigned int num_chars{T::size() * 2};\n+    static_assert(num_chars <= 64); // this test needs to be modified to allow for more than 64 hex chars",
      "path": "src/test/uint256_tests.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "526a87ba6b4f20592ad3c090b82e83ecff2107fc",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: what is the purpose of the comment? Sounds like a todo, but I guess it's just a warning - which the assert already states clearly.",
      "created_at": "2024-08-01T07:54:15Z",
      "updated_at": "2024-08-01T10:20:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699607128",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699607128"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 344,
      "original_line": 344,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699628821",
      "pull_request_review_id": 2211916268,
      "id": 1699628821,
      "node_id": "PRRC_kwDOABII585lTkcV",
      "diff_hunk": "@@ -330,6 +333,59 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps base_blob::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex()",
      "path": "src/test/uint256_tests.cpp",
      "position": 25,
      "original_position": 25,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "526a87ba6b4f20592ad3c090b82e83ecff2107fc",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "👍 nice exhaustive test suite",
      "created_at": "2024-08-01T08:11:02Z",
      "updated_at": "2024-08-01T10:20:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699628821",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699628821"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 341,
      "original_line": 341,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699629577",
      "pull_request_review_id": 2211916268,
      "id": 1699629577,
      "node_id": "PRRC_kwDOABII585lTkoJ",
      "diff_hunk": "@@ -27,7 +28,11 @@ FUZZ_TARGET(hex)\n         assert(ToLower(random_hex_string) == hex_data);\n     }\n     (void)IsHexNumber(random_hex_string);\n-    (void)uint256::FromHex(random_hex_string);\n+    if (uint256::FromHex(random_hex_string)) {\n+        assert(random_hex_string.length() == 64);",
      "path": "src/test/fuzz/hex.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "9a0b2a69c4d836d7382f6fe7703de40288fc7421",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "would it make sense to deduplicate (and therefore document) all the `64` constants used in the PR",
      "created_at": "2024-08-01T08:11:40Z",
      "updated_at": "2024-08-01T10:21:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699629577",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699629577"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699875102",
      "pull_request_review_id": 2211916268,
      "id": 1699875102,
      "node_id": "PRRC_kwDOABII585lUgke",
      "diff_hunk": "@@ -340,9 +335,10 @@ void CoinControlDialog::radioListMode(bool checked)\n // checkbox clicked by user\n void CoinControlDialog::viewItemChanged(QTreeWidgetItem* item, int column)",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 48,
      "original_position": 48,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "opening the inputs triggers this: 👍 \r\n<img src=\"https://github.com/user-attachments/assets/7d0af3c2-1756-4694-8a50-569cf605d64e\">\r\n",
      "created_at": "2024-08-01T09:58:23Z",
      "updated_at": "2024-08-01T10:20:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699875102",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699875102"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 336,
      "original_line": 336,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699879316",
      "pull_request_review_id": 2211916268,
      "id": 1699879316,
      "node_id": "PRRC_kwDOABII585lUhmU",
      "diff_hunk": "@@ -174,22 +174,17 @@ void CoinControlDialog::showMenu(const QPoint &point)\n         contextMenuItem = item;\n \n         // disable some items (like Copy Transaction ID, lock, unlock) for tree roots in context menu\n-        if (item->data(COLUMN_ADDRESS, TxHashRole).toString().length() == 64) // transaction hash is 64 characters (this means it is a child node, so it is not a parent node in tree mode)\n-        {\n+        auto txid{Txid::FromHex(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString())};",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 6,
      "original_position": 6,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this was triggered when right-clicking on the lines: 👍 \r\n<img src=\"https://github.com/user-attachments/assets/456df378-5932-4bc6-8260-00b7a8f8acf1\">\r\n",
      "created_at": "2024-08-01T10:01:40Z",
      "updated_at": "2024-08-01T10:21:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699879316",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699879316"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 177,
      "original_line": 177,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699884987",
      "pull_request_review_id": 2211916268,
      "id": 1699884987,
      "node_id": "PRRC_kwDOABII585lUi-7",
      "diff_hunk": "@@ -240,7 +235,7 @@ void CoinControlDialog::lockCoin()\n     if (contextMenuItem->checkState(COLUMN_CHECKBOX) == Qt::Checked)\n         contextMenuItem->setCheckState(COLUMN_CHECKBOX, Qt::Unchecked);\n \n-    COutPoint outpt(TxidFromString(contextMenuItem->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()), contextMenuItem->data(COLUMN_ADDRESS, VOutRole).toUInt());\n+    COutPoint outpt(Txid::FromHex(contextMenuItem->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()).value(), contextMenuItem->data(COLUMN_ADDRESS, VOutRole).toUInt());",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 33,
      "original_position": 33,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this was accessed when selecting lock from the menu: 👍 \r\n<img src=\"https://github.com/user-attachments/assets/c347e6bb-16c4-4742-b396-a065c08606d5\">\r\n",
      "created_at": "2024-08-01T10:04:45Z",
      "updated_at": "2024-08-01T10:21:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699884987",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699884987"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 238,
      "original_line": 238,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699886728",
      "pull_request_review_id": 2211916268,
      "id": 1699886728,
      "node_id": "PRRC_kwDOABII585lUjaI",
      "diff_hunk": "@@ -250,7 +245,7 @@ void CoinControlDialog::lockCoin()\n // context menu action: unlock coin\n void CoinControlDialog::unlockCoin()\n {\n-    COutPoint outpt(TxidFromString(contextMenuItem->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()), contextMenuItem->data(COLUMN_ADDRESS, VOutRole).toUInt());\n+    COutPoint outpt(Txid::FromHex(contextMenuItem->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()).value(), contextMenuItem->data(COLUMN_ADDRESS, VOutRole).toUInt());",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 42,
      "original_position": 42,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this was hit when selecting unlock from the menu:\r\n<img src=\"https://github.com/user-attachments/assets/922ccfe2-d97a-4b83-a101-3caac4578802\">\r\n",
      "created_at": "2024-08-01T10:06:06Z",
      "updated_at": "2024-08-01T10:20:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699886728",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699886728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 248,
      "original_line": 248,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699888823",
      "pull_request_review_id": 2211916268,
      "id": 1699888823,
      "node_id": "PRRC_kwDOABII585lUj63",
      "diff_hunk": "@@ -138,11 +138,11 @@ BOOST_AUTO_TEST_CASE(bloom_match)\n     BOOST_CHECK_MESSAGE(filter.IsRelevantAndUpdate(tx), \"Simple Bloom filter didn't match output address\");\n \n     filter = CBloomFilter(10, 0.000001, 0, BLOOM_UPDATE_ALL);\n-    filter.insert(COutPoint(TxidFromString(\"0x90c122d70786e899529d71dbeba91ba216982fb6ba58f3bdaab65e73b7e9260b\"), 0));\n+    filter.insert(COutPoint(Txid::FromHex(\"90c122d70786e899529d71dbeba91ba216982fb6ba58f3bdaab65e73b7e9260b\").value(), 0));",
      "path": "src/test/bloom_tests.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: might want to extract to avoid duplicating it 4 and 22 lines below (would make the bloom mistmatch slightly more obvious)",
      "created_at": "2024-08-01T10:07:49Z",
      "updated_at": "2024-08-01T10:20:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699888823",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699888823"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699894260",
      "pull_request_review_id": 2211916268,
      "id": 1699894260,
      "node_id": "PRRC_kwDOABII585lUlP0",
      "diff_hunk": "@@ -330,6 +333,59 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps base_blob::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex()\n+{\n+    constexpr unsigned int num_chars{T::size() * 2};\n+    static_assert(num_chars <= 64); // this test needs to be modified to allow for more than 64 hex chars\n+    const std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    const auto valid_input{valid_64char_input.substr(0, num_chars)};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_input));\n+    }\n+    {\n+        // check that only strings of size num_chars are accepted\n+        BOOST_CHECK(!T::FromHex(\"\"));\n+        BOOST_CHECK(!T::FromHex(\"0\"));\n+        BOOST_CHECK(!T::FromHex(valid_input.substr(0, num_chars / 2)));\n+        BOOST_CHECK(!T::FromHex(valid_input.substr(0, num_chars - 1)));\n+        BOOST_CHECK(!T::FromHex(valid_input + \"0\"));\n+    }\n+    {\n+        // check that non-hex characters are not accepted\n+        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~)\"};",
      "path": "src/test/uint256_tests.cpp",
      "position": 47,
      "original_position": 47,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: let's add some multi-byte unicode values here:\r\n```suggestion\r\n        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~ő💣)\"};\r\n```",
      "created_at": "2024-08-01T10:11:44Z",
      "updated_at": "2024-08-01T10:20:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699894260",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699894260"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 363,
      "original_line": 363,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699898019",
      "pull_request_review_id": 2212325302,
      "id": 1699898019,
      "node_id": "PRRC_kwDOABII585lUmKj",
      "diff_hunk": "@@ -78,9 +78,9 @@ BOOST_FIXTURE_TEST_CASE(package_hash_tests, TestChain100Setup)\n     BOOST_CHECK(wtxid_2.GetHex() < wtxid_3.GetHex());\n \n     // The txids are not (we want to test that sorting and hashing use wtxid, not txid):\n-    Txid txid_1{TxidFromString(\"0xbd0f71c1d5e50589063e134fad22053cdae5ab2320db5bf5e540198b0b5a4e69\")};\n-    Txid txid_2{TxidFromString(\"0xb4749f017444b051c44dfd2720e88f314ff94f3dd6d56d40ef65854fcd7fff6b\")};\n-    Txid txid_3{TxidFromString(\"0xee707be5201160e32c4fc715bec227d1aeea5940fb4295605e7373edce3b1a93\")};\n+    Txid txid_1{Txid::FromHex(\"bd0f71c1d5e50589063e134fad22053cdae5ab2320db5bf5e540198b0b5a4e69\").value()};\n+    Txid txid_2{Txid::FromHex(\"b4749f017444b051c44dfd2720e88f314ff94f3dd6d56d40ef65854fcd7fff6b\").value()};\n+    Txid txid_3{Txid::FromHex(\"ee707be5201160e32c4fc715bec227d1aeea5940fb4295605e7373edce3b1a93\").value()};",
      "path": "src/test/txpackage_tests.cpp",
      "position": 36,
      "original_position": 9,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "24a6de35857e88d968ef90cd6fbcda0003f0e3e3",
      "in_reply_to_id": 1698185872,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would have preferred the test changes in one commit too, but as you said, it is very reviewable already.",
      "created_at": "2024-08-01T10:14:28Z",
      "updated_at": "2024-08-01T10:28:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699898019",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699898019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 83,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699901252",
      "pull_request_review_id": 2212325302,
      "id": 1699901252,
      "node_id": "PRRC_kwDOABII585lUm9E",
      "diff_hunk": "@@ -340,9 +335,10 @@ void CoinControlDialog::radioListMode(bool checked)\n // checkbox clicked by user\n void CoinControlDialog::viewItemChanged(QTreeWidgetItem* item, int column)\n {\n-    if (column == COLUMN_CHECKBOX && item->data(COLUMN_ADDRESS, TxHashRole).toString().length() == 64) // transaction hash is 64 characters (this means it is a child node, so it is not a parent node in tree mode)\n-    {\n-        COutPoint outpt(TxidFromString(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()), item->data(COLUMN_ADDRESS, VOutRole).toUInt());\n+    if (column != COLUMN_CHECKBOX) return;\n+    auto txid{Txid::FromHex(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString())};\n+    if (txid) { // a valid txid means this is a child node, and not a parent node in tree mode",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 55,
      "original_position": 55,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just a comment: Still not sure what ends up being more readable. This, or:\r\n```\r\nif (auto txid{...}; txid) {\r\n...\r\n```",
      "created_at": "2024-08-01T10:17:02Z",
      "updated_at": "2024-08-01T10:28:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699901252",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699901252"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 340,
      "original_line": 340,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699903949",
      "pull_request_review_id": 2211916268,
      "id": 1699903949,
      "node_id": "PRRC_kwDOABII585lUnnN",
      "diff_hunk": "@@ -330,6 +333,59 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps base_blob::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex()\n+{\n+    constexpr unsigned int num_chars{T::size() * 2};\n+    static_assert(num_chars <= 64); // this test needs to be modified to allow for more than 64 hex chars\n+    const std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    const auto valid_input{valid_64char_input.substr(0, num_chars)};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_input));\n+    }\n+    {\n+        // check that only strings of size num_chars are accepted\n+        BOOST_CHECK(!T::FromHex(\"\"));\n+        BOOST_CHECK(!T::FromHex(\"0\"));\n+        BOOST_CHECK(!T::FromHex(valid_input.substr(0, num_chars / 2)));\n+        BOOST_CHECK(!T::FromHex(valid_input.substr(0, num_chars - 1)));\n+        BOOST_CHECK(!T::FromHex(valid_input + \"0\"));\n+    }\n+    {\n+        // check that non-hex characters are not accepted\n+        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~)\"};\n+        for (auto c : invalid_chars) {\n+            BOOST_CHECK(!T::FromHex(valid_input.substr(0, num_chars - 1) + c));\n+        }\n+        // 0x prefixes are invalid\n+        std::string invalid_prefix{\"0x\" + valid_input};",
      "path": "src/test/uint256_tests.cpp",
      "position": 52,
      "original_position": 52,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": null,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "this will fail because of the length requirerement, not the prefix, right?\r\n```suggestion\r\n        std::string invalid_prefix{\"0x\" + valid_input.substr(0, num_chars - 2)};\r\n```",
      "created_at": "2024-08-01T10:19:11Z",
      "updated_at": "2024-08-01T10:20:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699903949",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699903949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 368,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699913313",
      "pull_request_review_id": 2212348878,
      "id": 1699913313,
      "node_id": "PRRC_kwDOABII585lUp5h",
      "diff_hunk": "@@ -330,6 +333,59 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps base_blob::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex()\n+{\n+    constexpr unsigned int num_chars{T::size() * 2};\n+    static_assert(num_chars <= 64); // this test needs to be modified to allow for more than 64 hex chars\n+    const std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    const auto valid_input{valid_64char_input.substr(0, num_chars)};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_input));\n+    }\n+    {\n+        // check that only strings of size num_chars are accepted\n+        BOOST_CHECK(!T::FromHex(\"\"));\n+        BOOST_CHECK(!T::FromHex(\"0\"));\n+        BOOST_CHECK(!T::FromHex(valid_input.substr(0, num_chars / 2)));\n+        BOOST_CHECK(!T::FromHex(valid_input.substr(0, num_chars - 1)));\n+        BOOST_CHECK(!T::FromHex(valid_input + \"0\"));\n+    }\n+    {\n+        // check that non-hex characters are not accepted\n+        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~)\"};\n+        for (auto c : invalid_chars) {\n+            BOOST_CHECK(!T::FromHex(valid_input.substr(0, num_chars - 1) + c));\n+        }\n+        // 0x prefixes are invalid\n+        std::string invalid_prefix{\"0x\" + valid_input};",
      "path": "src/test/uint256_tests.cpp",
      "position": 52,
      "original_position": 52,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": 1699903949,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Correct, this specific case is to ensure \"0x\" is not treated as some magic prefix that is silently trimmed. So I'm testing both the case of length 64 and 66 in the next 2 lines, so I'm going to keep this as is.",
      "created_at": "2024-08-01T10:26:52Z",
      "updated_at": "2024-08-01T10:44:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699913313",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699913313"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 368,
      "original_line": 368,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699913528",
      "pull_request_review_id": 2212325302,
      "id": 1699913528,
      "node_id": "PRRC_kwDOABII585lUp84",
      "diff_hunk": "@@ -6,12 +6,15 @@\n #include <streams.h>\n #include <test/util/setup_common.h>\n #include <uint256.h>\n+#include <util/strencodings.h>\n+#include <util/transaction_identifier.h>\n \n #include <boost/test/unit_test.hpp>\n \n #include <iomanip>\n #include <sstream>\n #include <string>\n+#include <string_view>",
      "path": "src/test/uint256_tests.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "iwyu reports this include as unneeded, but it is obviously used: https://cirrus-ci.com/task/6533090686795776?logs=ci#L17964",
      "created_at": "2024-08-01T10:27:02Z",
      "updated_at": "2024-08-01T10:28:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699913528",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699913528"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 17,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699915327",
      "pull_request_review_id": 2212348878,
      "id": 1699915327,
      "node_id": "PRRC_kwDOABII585lUqY_",
      "diff_hunk": "@@ -330,6 +333,59 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps base_blob::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex()\n+{\n+    constexpr unsigned int num_chars{T::size() * 2};\n+    static_assert(num_chars <= 64); // this test needs to be modified to allow for more than 64 hex chars",
      "path": "src/test/uint256_tests.cpp",
      "position": 28,
      "original_position": 28,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "526a87ba6b4f20592ad3c090b82e83ecff2107fc",
      "in_reply_to_id": 1699607128,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "it's just a brief explanation on why this assertion is here, happy to remove if you feel strongly about it but i think it's fine as is",
      "created_at": "2024-08-01T10:27:46Z",
      "updated_at": "2024-08-01T10:44:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699915327",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699915327"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 344,
      "original_line": 344,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699918363",
      "pull_request_review_id": 2212348878,
      "id": 1699918363,
      "node_id": "PRRC_kwDOABII585lUrIb",
      "diff_hunk": "@@ -138,11 +138,11 @@ BOOST_AUTO_TEST_CASE(bloom_match)\n     BOOST_CHECK_MESSAGE(filter.IsRelevantAndUpdate(tx), \"Simple Bloom filter didn't match output address\");\n \n     filter = CBloomFilter(10, 0.000001, 0, BLOOM_UPDATE_ALL);\n-    filter.insert(COutPoint(TxidFromString(\"0x90c122d70786e899529d71dbeba91ba216982fb6ba58f3bdaab65e73b7e9260b\"), 0));\n+    filter.insert(COutPoint(Txid::FromHex(\"90c122d70786e899529d71dbeba91ba216982fb6ba58f3bdaab65e73b7e9260b\").value(), 0));",
      "path": "src/test/bloom_tests.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": 1699888823,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "going to leave as is to minimize the diff since the bloom tests are not relevant to this PR",
      "created_at": "2024-08-01T10:30:33Z",
      "updated_at": "2024-08-01T10:44:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699918363",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699918363"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 141,
      "original_line": 141,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699922265",
      "pull_request_review_id": 2212348878,
      "id": 1699922265,
      "node_id": "PRRC_kwDOABII585lUsFZ",
      "diff_hunk": "@@ -27,7 +28,11 @@ FUZZ_TARGET(hex)\n         assert(ToLower(random_hex_string) == hex_data);\n     }\n     (void)IsHexNumber(random_hex_string);\n-    (void)uint256::FromHex(random_hex_string);\n+    if (uint256::FromHex(random_hex_string)) {\n+        assert(random_hex_string.length() == 64);",
      "path": "src/test/fuzz/hex.cpp",
      "position": 14,
      "original_position": 14,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "9a0b2a69c4d836d7382f6fe7703de40288fc7421",
      "in_reply_to_id": 1699629577,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm not sure, internally we're using `base_blob::size()` quite a bit already but I think for this test it makes sense to hardcode 64 since this function deals with user input, so we really do want to make sure this keeps expecting 64 characters. I don't think there are any other `64` constants in this PR that would benefit from being deduplicated or documented further?",
      "created_at": "2024-08-01T10:33:57Z",
      "updated_at": "2024-08-01T10:44:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699922265",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699922265"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 32,
      "original_line": 32,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699928501",
      "pull_request_review_id": 2212348878,
      "id": 1699928501,
      "node_id": "PRRC_kwDOABII585lUtm1",
      "diff_hunk": "@@ -330,6 +333,59 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps base_blob::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex()\n+{\n+    constexpr unsigned int num_chars{T::size() * 2};\n+    static_assert(num_chars <= 64); // this test needs to be modified to allow for more than 64 hex chars\n+    const std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    const auto valid_input{valid_64char_input.substr(0, num_chars)};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_input));\n+    }\n+    {\n+        // check that only strings of size num_chars are accepted\n+        BOOST_CHECK(!T::FromHex(\"\"));\n+        BOOST_CHECK(!T::FromHex(\"0\"));\n+        BOOST_CHECK(!T::FromHex(valid_input.substr(0, num_chars / 2)));\n+        BOOST_CHECK(!T::FromHex(valid_input.substr(0, num_chars - 1)));\n+        BOOST_CHECK(!T::FromHex(valid_input + \"0\"));\n+    }\n+    {\n+        // check that non-hex characters are not accepted\n+        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~)\"};",
      "path": "src/test/uint256_tests.cpp",
      "position": 47,
      "original_position": 47,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": 1699894260,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "good idea, will add if I have to force push, thanks",
      "created_at": "2024-08-01T10:39:37Z",
      "updated_at": "2024-08-01T10:44:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699928501",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699928501"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 363,
      "original_line": 363,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699932993",
      "pull_request_review_id": 2212381667,
      "id": 1699932993,
      "node_id": "PRRC_kwDOABII585lUutB",
      "diff_hunk": "@@ -6,12 +6,15 @@\n #include <streams.h>\n #include <test/util/setup_common.h>\n #include <uint256.h>\n+#include <util/strencodings.h>\n+#include <util/transaction_identifier.h>\n \n #include <boost/test/unit_test.hpp>\n \n #include <iomanip>\n #include <sstream>\n #include <string>\n+#include <string_view>",
      "path": "src/test/uint256_tests.cpp",
      "position": 12,
      "original_position": 12,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": 1699913528,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I made `util/string.h` to export them, but this may be confusing? (Should be harmless either way)",
      "created_at": "2024-08-01T10:43:26Z",
      "updated_at": "2024-08-01T10:43:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699932993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699932993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 17,
      "original_line": 17,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699933550",
      "pull_request_review_id": 2212348878,
      "id": 1699933550,
      "node_id": "PRRC_kwDOABII585lUu1u",
      "diff_hunk": "@@ -340,9 +335,10 @@ void CoinControlDialog::radioListMode(bool checked)\n // checkbox clicked by user\n void CoinControlDialog::viewItemChanged(QTreeWidgetItem* item, int column)\n {\n-    if (column == COLUMN_CHECKBOX && item->data(COLUMN_ADDRESS, TxHashRole).toString().length() == 64) // transaction hash is 64 characters (this means it is a child node, so it is not a parent node in tree mode)\n-    {\n-        COutPoint outpt(TxidFromString(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()), item->data(COLUMN_ADDRESS, VOutRole).toUInt());\n+    if (column != COLUMN_CHECKBOX) return;\n+    auto txid{Txid::FromHex(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString())};\n+    if (txid) { // a valid txid means this is a child node, and not a parent node in tree mode",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 55,
      "original_position": 55,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": 1699901252,
      "user": {
        "login": "stickies-v",
        "id": 69010457,
        "node_id": "MDQ6VXNlcjY5MDEwNDU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/69010457?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/stickies-v",
        "html_url": "https://github.com/stickies-v",
        "followers_url": "https://api.github.com/users/stickies-v/followers",
        "following_url": "https://api.github.com/users/stickies-v/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/stickies-v/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/stickies-v/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/stickies-v/subscriptions",
        "organizations_url": "https://api.github.com/users/stickies-v/orgs",
        "repos_url": "https://api.github.com/users/stickies-v/repos",
        "events_url": "https://api.github.com/users/stickies-v/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/stickies-v/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Usually I'd have preferred the `if (auto txid{...}) {` approach (no need for the `; txid` I think), but since we have the docstring anyway I thought the current approach was slightly more readable.",
      "created_at": "2024-08-01T10:43:57Z",
      "updated_at": "2024-08-01T10:44:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699933550",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699933550"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 340,
      "original_line": 340,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699974449",
      "pull_request_review_id": 2212449415,
      "id": 1699974449,
      "node_id": "PRRC_kwDOABII585lU40x",
      "diff_hunk": "@@ -330,6 +333,59 @@ BOOST_AUTO_TEST_CASE(parse)\n     }\n }\n \n+/**\n+ * Implemented as a templated function so it can be reused by other classes that have a FromHex()\n+ * method that wraps base_blob::FromHex(), such as transaction_identifier::FromHex().\n+ */\n+template <typename T>\n+void TestFromHex()\n+{\n+    constexpr unsigned int num_chars{T::size() * 2};\n+    static_assert(num_chars <= 64); // this test needs to be modified to allow for more than 64 hex chars\n+    const std::string valid_64char_input{\"0123456789abcdef0123456789ABCDEF0123456789abcdef0123456789ABCDEF\"};\n+    const auto valid_input{valid_64char_input.substr(0, num_chars)};\n+    {\n+        // check that lower and upper case hex characters are accepted\n+        auto valid_result{T::FromHex(valid_input)};\n+        BOOST_REQUIRE(valid_result);\n+        BOOST_CHECK_EQUAL(valid_result->ToString(), ToLower(valid_input));\n+    }\n+    {\n+        // check that only strings of size num_chars are accepted\n+        BOOST_CHECK(!T::FromHex(\"\"));\n+        BOOST_CHECK(!T::FromHex(\"0\"));\n+        BOOST_CHECK(!T::FromHex(valid_input.substr(0, num_chars / 2)));\n+        BOOST_CHECK(!T::FromHex(valid_input.substr(0, num_chars - 1)));\n+        BOOST_CHECK(!T::FromHex(valid_input + \"0\"));\n+    }\n+    {\n+        // check that non-hex characters are not accepted\n+        std::string invalid_chars{R\"( !\"#$%&'()*+,-./:;<=>?@GHIJKLMNOPQRSTUVWXYZ[\\]^_`ghijklmnopqrstuvwxyz{|}~)\"};",
      "path": "src/test/uint256_tests.cpp",
      "position": 47,
      "original_position": 47,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": 1699894260,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "these are just nits, it's fine if we do it next time we touch it, of course",
      "created_at": "2024-08-01T11:18:20Z",
      "updated_at": "2024-08-01T11:18:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699974449",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699974449"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 363,
      "original_line": 363,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699976442",
      "pull_request_review_id": 2212452711,
      "id": 1699976442,
      "node_id": "PRRC_kwDOABII585lU5T6",
      "diff_hunk": "@@ -340,9 +335,10 @@ void CoinControlDialog::radioListMode(bool checked)\n // checkbox clicked by user\n void CoinControlDialog::viewItemChanged(QTreeWidgetItem* item, int column)\n {\n-    if (column == COLUMN_CHECKBOX && item->data(COLUMN_ADDRESS, TxHashRole).toString().length() == 64) // transaction hash is 64 characters (this means it is a child node, so it is not a parent node in tree mode)\n-    {\n-        COutPoint outpt(TxidFromString(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString()), item->data(COLUMN_ADDRESS, VOutRole).toUInt());\n+    if (column != COLUMN_CHECKBOX) return;\n+    auto txid{Txid::FromHex(item->data(COLUMN_ADDRESS, TxHashRole).toString().toStdString())};\n+    if (txid) { // a valid txid means this is a child node, and not a parent node in tree mode",
      "path": "src/qt/coincontroldialog.cpp",
      "position": 55,
      "original_position": 55,
      "commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "original_commit_id": "f553e6d86fe114e90585ea6d4b8e345a209cae5d",
      "in_reply_to_id": 1699901252,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Though of the same, both are fine with me as well",
      "created_at": "2024-08-01T11:19:49Z",
      "updated_at": "2024-08-01T11:19:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30532#discussion_r1699976442",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1699976442"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30532"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 340,
      "original_line": 340,
      "side": "RIGHT"
    }
  ]
}