{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32305",
    "id": 2469055905,
    "node_id": "PR_kwDOABII586TKs2h",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32305",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32305.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32305.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32305",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32305/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32305/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32305/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/58fd30f8b60983a6bb3ab2effe2d7645818335db",
    "number": 32305,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "test: add test for decoding PSBT with MuSig2 PSBT key types (BIP 373)",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR is a follow-up to #31247 (see https://github.com/bitcoin/bitcoin/pull/31247#pullrequestreview-2427834909) and adds a functional test for decoding PSBTs (using the `decodepsbt` RPC) with MuSig2 per-input and per-output types. The first commit adds the new MuSig2 key types to the test frameworks and extends the PSBT serialization to cope with lists of bytestrings.",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2025-04-18T21:35:07Z",
    "updated_at": "2025-05-07T14:24:38Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "3ee9d20471ea8beaa52fb089053b6be7e6d6ecd4",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "theStack:202504-test-add_musig2_decodepsbt_tests",
      "ref": "202504-test-add_musig2_decodepsbt_tests",
      "sha": "58fd30f8b60983a6bb3ab2effe2d7645818335db",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 204970720,
        "node_id": "MDEwOlJlcG9zaXRvcnkyMDQ5NzA3MjA=",
        "name": "bitcoin",
        "full_name": "theStack/bitcoin",
        "owner": {
          "login": "theStack",
          "id": 91535,
          "node_id": "MDQ6VXNlcjkxNTM1",
          "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/theStack",
          "html_url": "https://github.com/theStack",
          "followers_url": "https://api.github.com/users/theStack/followers",
          "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
          "organizations_url": "https://api.github.com/users/theStack/orgs",
          "repos_url": "https://api.github.com/users/theStack/repos",
          "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/theStack/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/theStack/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/theStack/bitcoin",
        "archive_url": "https://api.github.com/repos/theStack/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/theStack/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/theStack/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/theStack/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/theStack/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/theStack/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/theStack/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/theStack/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/theStack/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/theStack/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/theStack/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/theStack/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/theStack/bitcoin/events",
        "forks_url": "https://api.github.com/repos/theStack/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/theStack/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/theStack/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/theStack/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/theStack/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/theStack/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/theStack/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/theStack/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/theStack/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/theStack/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/theStack/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/theStack/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/theStack/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/theStack/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/theStack/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/theStack/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:theStack/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/theStack/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/theStack/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/theStack/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/theStack/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/theStack/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/theStack/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/theStack/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/theStack/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/theStack/bitcoin/hooks",
        "svn_url": "https://github.com/theStack/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 2,
        "stargazers_count": 1,
        "watchers_count": 1,
        "size": 347850,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-05-07T14:22:07Z",
        "created_at": "2019-08-28T15:59:29Z",
        "updated_at": "2024-09-28T22:43:31Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "efac285a0d709f48856c37b15bfa09af94c1d75b",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37185,
        "stargazers_count": 83439,
        "watchers_count": 83439,
        "size": 281319,
        "default_branch": "master",
        "open_issues_count": 712,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-05-07T14:19:21Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-05-07T14:35:26Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32305"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 82,
    "deletions": 0,
    "changed_files": 2,
    "commits": 2,
    "review_comments": 8,
    "comments": 3
  },
  "events": [
    {
      "event": "commented",
      "id": 2816229156,
      "node_id": "IC_kwDOABII586n3D8k",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2816229156",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-18T21:35:10Z",
      "updated_at": "2025-05-07T14:22:29Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32305.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Stale ACK | [rkrux](https://github.com/bitcoin/bitcoin/pull/32305#pullrequestreview-2781251768) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->\n### LLM Linter (✨ experimental)\n\nPossible typos and grammar issues:\n\nassert \"aggregate_pubkey\" in in_pubnonce -> assert \"aggregate_pubkey\" in in_partialsig [The assertion checks the wrong dictionary, should check 'in_partialsig']\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32305#issuecomment-2816229156",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32305"
    },
    {
      "event": "labeled",
      "id": 17325208329,
      "node_id": "LE_lADOABII586zKOafzwAAAAQIqbMJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17325208329",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-18T21:35:15Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 2818284555,
      "node_id": "IC_kwDOABII586n-5wL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2818284555",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-21T12:06:43Z",
      "updated_at": "2025-04-21T12:06:43Z",
      "author_association": "MEMBER",
      "body": "(fresh CI)",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32305#issuecomment-2818284555",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32305"
    },
    {
      "event": "closed",
      "id": 17337719075,
      "node_id": "CE_lADOABII586zKOafzwAAAAQJaJkj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17337719075",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-21T12:06:43Z"
    },
    {
      "event": "reopened",
      "id": 17337720011,
      "node_id": "REE_lADOABII586zKOafzwAAAAQJaJzL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17337720011",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-21T12:06:50Z"
    },
    {
      "event": "reviewed",
      "id": 2781251768,
      "node_id": "PRR_kwDOABII586lxoi4",
      "url": null,
      "actor": null,
      "commit_id": "23ee07dd0f81930f46d2f4910cc92cb0eab61cc3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "tACK 23ee07dd0f81930f46d2f4910cc92cb0eab61cc3\r\n\r\nI believe this is a value add as it sets the base for the MuSig2 functional testing. I left few minor suggestions, I would be quick to re-ack if they are implemented. ",
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32305#pullrequestreview-2781251768",
      "submitted_at": "2025-04-21T13:41:42Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32305"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQwNDA3NmFhZDRhZjNmMGU0OWE4YmIyMTJhNDg5NGU4NzlkYjNmOWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/404076aad4af3f0e49a8bb212a4894e879db3f9e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/404076aad4af3f0e49a8bb212a4894e879db3f9e",
      "tree": {
        "sha": "3b5a0ddd4c53bca57bbef2b72a8a8c786517831a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b5a0ddd4c53bca57bbef2b72a8a8c786517831a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d5edfcc585bab3374ae14aa7918b3e178e016aa",
          "sha": "6d5edfcc585bab3374ae14aa7918b3e178e016aa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6d5edfcc585bab3374ae14aa7918b3e178e016aa"
        }
      ],
      "message": "test: add constants for MuSig2 PSBT key types (BIP 373)\n\nAlso, support serialization of lists of byte-strings as PSBTMap values,\nwhich will be simply concatenated without any compact-size prefixes\n(neither for the individual items nor for the size of the list).",
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2025-05-07T13:59:47Z"
      },
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2024-11-11T17:22:29Z"
      },
      "sha": "404076aad4af3f0e49a8bb212a4894e879db3f9e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU4ZmQzMGY4YjYwOTgzYTZiYjNhYjJlZmZlMmQ3NjQ1ODE4MzM1ZGI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58fd30f8b60983a6bb3ab2effe2d7645818335db",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/58fd30f8b60983a6bb3ab2effe2d7645818335db",
      "tree": {
        "sha": "a6ff30f1fc9643eda388650fa6159f5c25731095",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6ff30f1fc9643eda388650fa6159f5c25731095"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/404076aad4af3f0e49a8bb212a4894e879db3f9e",
          "sha": "404076aad4af3f0e49a8bb212a4894e879db3f9e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/404076aad4af3f0e49a8bb212a4894e879db3f9e"
        }
      ],
      "message": "test: add test for decoding PSBT with MuSig2 PSBT key types (BIP 373)",
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2025-05-07T14:07:14Z"
      },
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2024-11-11T17:27:40Z"
      },
      "sha": "58fd30f8b60983a6bb3ab2effe2d7645818335db"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17557527550,
      "node_id": "HRFPE_lADOABII586zKOafzwAAAAQWgpv-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17557527550",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "58fd30f8b60983a6bb3ab2effe2d7645818335db",
      "commit_url": "https://api.github.com/repos/theStack/bitcoin/commits/58fd30f8b60983a6bb3ab2effe2d7645818335db",
      "created_at": "2025-05-07T14:22:09Z"
    },
    {
      "event": "commented",
      "id": 2858796140,
      "node_id": "IC_kwDOABII586qZcRs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2858796140",
      "actor": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-07T14:24:37Z",
      "updated_at": "2025-05-07T14:24:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the review @rkrux, I rebased on master and addressed most of your review comments.",
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32305#issuecomment-2858796140",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32305"
    },
    {
      "event": "mentioned",
      "id": 17557574341,
      "node_id": "MEE_lADOABII586zKOafzwAAAAQWg1LF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17557574341",
      "actor": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-07T14:24:38Z"
    },
    {
      "event": "subscribed",
      "id": 17557574376,
      "node_id": "SE_lADOABII586zKOafzwAAAAQWg1Lo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17557574376",
      "actor": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-05-07T14:24:39Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2052391023",
      "pull_request_review_id": 2781251768,
      "id": 2052391023,
      "node_id": "PRRC_kwDOABII5856VQBv",
      "diff_hunk": "@@ -88,6 +92,9 @@ def serialize(self):\n         for k,v in self.map.items():\n             if isinstance(k, int) and 0 <= k and k <= 255:\n                 k = bytes([k])\n+            if isinstance(v, list):\n+                assert any(type(elem) is bytes for elem in v)",
      "path": "test/functional/test_framework/psbt.py",
      "position": null,
      "original_position": 23,
      "commit_id": "58fd30f8b60983a6bb3ab2effe2d7645818335db",
      "original_commit_id": "e5537de0ab28124de0d557f98f6d1a0de6af5f51",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since this is a new check that has been added & the current use case is of a list of only bytes (in participant pubkeys), maybe we can assert this on all instead of any to keep the checking strict to start with that can be eased in the future if needed?",
      "created_at": "2025-04-21T13:33:51Z",
      "updated_at": "2025-04-21T13:41:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32305#discussion_r2052391023",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2052391023"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2052391602",
      "pull_request_review_id": 2781251768,
      "id": 2052391602,
      "node_id": "PRRC_kwDOABII5856VQKy",
      "diff_hunk": "@@ -977,6 +981,74 @@ def test_psbt_input_keys(psbt_input, keys):\n             assert hash.hex() in res_input[preimage_key]\n             assert_equal(res_input[preimage_key][hash.hex()], preimage.hex())\n \n+        self.log.info(\"Test decoding PSBT with MuSig2 per-input and per-output types\")\n+        # create 2-of-2 musig2 using fake aggregate key, leaf hash, pubnonce, and partial sig\n+        # TODO: actually implement MuSig2 aggregation (for decoding only it doesn't matter though)\n+        _, in_pubkey1 = generate_keypair()\n+        _, in_pubkey2 = generate_keypair()\n+        _, in_fake_agg_pubkey = generate_keypair()\n+        fake_leaf_hash = randbytes(32)\n+        fake_pubnonce = randbytes(66)\n+        fake_partialsig = randbytes(32)\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(outpoint=COutPoint(hash=int('ee' * 32, 16), n=0), scriptSig=b\"\")]\n+        tx.vout = [CTxOut(nValue=0, scriptPubKey=b\"\")]\n+        psbt = PSBT()\n+        psbt.g = PSBTMap({PSBT_GLOBAL_UNSIGNED_TX: tx.serialize()})\n+        participant1_keydata = in_pubkey1 + in_fake_agg_pubkey + fake_leaf_hash\n+        psbt.i = [PSBTMap({\n+                    bytes([PSBT_IN_MUSIG2_PARTICIPANT_PUBKEYS]) + in_fake_agg_pubkey: [in_pubkey1, in_pubkey2],\n+                    bytes([PSBT_IN_MUSIG2_PUB_NONCE]) + participant1_keydata: fake_pubnonce,\n+                    bytes([PSBT_IN_MUSIG2_PARTIAL_SIG]) + participant1_keydata: fake_partialsig,\n+                 })]\n+        _, out_pubkey1 = generate_keypair()\n+        _, out_pubkey2 = generate_keypair()\n+        _, out_fake_agg_pubkey = generate_keypair()\n+        psbt.o = [PSBTMap({\n+                    bytes([PSBT_OUT_MUSIG2_PARTICIPANT_PUBKEYS]) + out_fake_agg_pubkey: [out_pubkey1, out_pubkey2],\n+                 })]\n+        res = self.nodes[0].decodepsbt(psbt.to_base64())\n+        assert_equal(len(res[\"inputs\"]), 1)\n+        res_input = res[\"inputs\"][0]\n+        assert_equal(len(res[\"outputs\"]), 1)\n+        res_output = res[\"outputs\"][0]\n+\n+        assert \"musig2_participant_pubkeys\" in res_input\n+        in_participant_pks = res_input[\"musig2_participant_pubkeys\"][0]\n+        assert \"aggregate_pubkey\" in in_participant_pks\n+        assert_equal(in_participant_pks[\"aggregate_pubkey\"], in_fake_agg_pubkey.hex())\n+        assert \"participant_pubkeys\" in in_participant_pks",
      "path": "test/functional/rpc_psbt.py",
      "position": null,
      "original_position": 53,
      "commit_id": "58fd30f8b60983a6bb3ab2effe2d7645818335db",
      "original_commit_id": "23ee07dd0f81930f46d2f4910cc92cb0eab61cc3",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Are asserts like on this line really needed? If the decoded psbt is malformed then the test would fail in the following assert anyway.",
      "created_at": "2025-04-21T13:34:30Z",
      "updated_at": "2025-04-21T13:41:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32305#discussion_r2052391602",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2052391602"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1020,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2052392744",
      "pull_request_review_id": 2781251768,
      "id": 2052392744,
      "node_id": "PRRC_kwDOABII5856VQco",
      "diff_hunk": "@@ -977,6 +981,74 @@ def test_psbt_input_keys(psbt_input, keys):\n             assert hash.hex() in res_input[preimage_key]\n             assert_equal(res_input[preimage_key][hash.hex()], preimage.hex())\n \n+        self.log.info(\"Test decoding PSBT with MuSig2 per-input and per-output types\")",
      "path": "test/functional/rpc_psbt.py",
      "position": null,
      "original_position": 17,
      "commit_id": "58fd30f8b60983a6bb3ab2effe2d7645818335db",
      "original_commit_id": "23ee07dd0f81930f46d2f4910cc92cb0eab61cc3",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit: Maybe consider putting this in a separate subtest as the current `run_test` is quite long already.",
      "created_at": "2025-04-21T13:35:44Z",
      "updated_at": "2025-04-21T13:41:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32305#discussion_r2052392744",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2052392744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2052395285",
      "pull_request_review_id": 2781251768,
      "id": 2052395285,
      "node_id": "PRRC_kwDOABII5856VREV",
      "diff_hunk": "@@ -977,6 +981,74 @@ def test_psbt_input_keys(psbt_input, keys):\n             assert hash.hex() in res_input[preimage_key]\n             assert_equal(res_input[preimage_key][hash.hex()], preimage.hex())\n \n+        self.log.info(\"Test decoding PSBT with MuSig2 per-input and per-output types\")\n+        # create 2-of-2 musig2 using fake aggregate key, leaf hash, pubnonce, and partial sig\n+        # TODO: actually implement MuSig2 aggregation (for decoding only it doesn't matter though)\n+        _, in_pubkey1 = generate_keypair()\n+        _, in_pubkey2 = generate_keypair()\n+        _, in_fake_agg_pubkey = generate_keypair()\n+        fake_leaf_hash = randbytes(32)\n+        fake_pubnonce = randbytes(66)\n+        fake_partialsig = randbytes(32)\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(outpoint=COutPoint(hash=int('ee' * 32, 16), n=0), scriptSig=b\"\")]\n+        tx.vout = [CTxOut(nValue=0, scriptPubKey=b\"\")]\n+        psbt = PSBT()\n+        psbt.g = PSBTMap({PSBT_GLOBAL_UNSIGNED_TX: tx.serialize()})\n+        participant1_keydata = in_pubkey1 + in_fake_agg_pubkey + fake_leaf_hash\n+        psbt.i = [PSBTMap({\n+                    bytes([PSBT_IN_MUSIG2_PARTICIPANT_PUBKEYS]) + in_fake_agg_pubkey: [in_pubkey1, in_pubkey2],\n+                    bytes([PSBT_IN_MUSIG2_PUB_NONCE]) + participant1_keydata: fake_pubnonce,\n+                    bytes([PSBT_IN_MUSIG2_PARTIAL_SIG]) + participant1_keydata: fake_partialsig,\n+                 })]\n+        _, out_pubkey1 = generate_keypair()\n+        _, out_pubkey2 = generate_keypair()\n+        _, out_fake_agg_pubkey = generate_keypair()\n+        psbt.o = [PSBTMap({\n+                    bytes([PSBT_OUT_MUSIG2_PARTICIPANT_PUBKEYS]) + out_fake_agg_pubkey: [out_pubkey1, out_pubkey2],\n+                 })]\n+        res = self.nodes[0].decodepsbt(psbt.to_base64())\n+        assert_equal(len(res[\"inputs\"]), 1)\n+        res_input = res[\"inputs\"][0]\n+        assert_equal(len(res[\"outputs\"]), 1)\n+        res_output = res[\"outputs\"][0]\n+\n+        assert \"musig2_participant_pubkeys\" in res_input\n+        in_participant_pks = res_input[\"musig2_participant_pubkeys\"][0]\n+        assert \"aggregate_pubkey\" in in_participant_pks\n+        assert_equal(in_participant_pks[\"aggregate_pubkey\"], in_fake_agg_pubkey.hex())\n+        assert \"participant_pubkeys\" in in_participant_pks\n+        assert_equal(in_participant_pks[\"participant_pubkeys\"], [in_pubkey1.hex(), in_pubkey2.hex()])\n+\n+        assert \"musig2_pubnonces\" in res_input\n+        in_pubnonce = res_input[\"musig2_pubnonces\"][0]\n+        assert \"participant_pubkey\" in in_pubnonce\n+        assert_equal(in_pubnonce[\"participant_pubkey\"], in_pubkey1.hex())\n+        assert \"aggregate_pubkey\" in in_pubnonce\n+        assert_equal(in_pubnonce[\"aggregate_pubkey\"], in_fake_agg_pubkey.hex())\n+        assert \"leaf_hash\" in in_pubnonce\n+        assert_equal(in_pubnonce[\"leaf_hash\"], fake_leaf_hash.hex())\n+        assert \"pubnonce\" in in_pubnonce\n+        assert_equal(in_pubnonce[\"pubnonce\"], fake_pubnonce.hex())\n+\n+        assert \"musig2_partial_sigs\" in res_input\n+        in_partialsig = res_input[\"musig2_partial_sigs\"][0]\n+        assert \"participant_pubkey\" in in_partialsig\n+        assert_equal(in_partialsig[\"participant_pubkey\"], in_pubkey1.hex())\n+        assert \"aggregate_pubkey\" in in_pubnonce\n+        assert_equal(in_partialsig[\"aggregate_pubkey\"], in_fake_agg_pubkey.hex())\n+        assert \"leaf_hash\" in in_partialsig\n+        assert_equal(in_partialsig[\"leaf_hash\"], fake_leaf_hash.hex())\n+        assert \"partial_sig\" in in_partialsig\n+        assert_equal(in_partialsig[\"partial_sig\"], fake_partialsig.hex())\n+\n+        assert \"musig2_participant_pubkeys\" in res_output\n+        out_participant_pks = res_output[\"musig2_participant_pubkeys\"][0]\n+        assert \"aggregate_pubkey\" in out_participant_pks\n+        assert_equal(out_participant_pks[\"aggregate_pubkey\"], out_fake_agg_pubkey.hex())\n+        assert \"participant_pubkeys\" in out_participant_pks\n+        assert_equal(out_participant_pks[\"participant_pubkeys\"], [out_pubkey1.hex(), out_pubkey2.hex()])",
      "path": "test/functional/rpc_psbt.py",
      "position": null,
      "original_position": 83,
      "commit_id": "58fd30f8b60983a6bb3ab2effe2d7645818335db",
      "original_commit_id": "23ee07dd0f81930f46d2f4910cc92cb0eab61cc3",
      "in_reply_to_id": null,
      "user": {
        "login": "rkrux",
        "id": 5960750,
        "node_id": "MDQ6VXNlcjU5NjA3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5960750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rkrux",
        "html_url": "https://github.com/rkrux",
        "followers_url": "https://api.github.com/users/rkrux/followers",
        "following_url": "https://api.github.com/users/rkrux/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/rkrux/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/rkrux/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/rkrux/subscriptions",
        "organizations_url": "https://api.github.com/users/rkrux/orgs",
        "repos_url": "https://api.github.com/users/rkrux/repos",
        "events_url": "https://api.github.com/users/rkrux/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/rkrux/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fine for now but maybe we can consider making an `assert_musig2_fields()` later when more musig2 specific tests are added - if needed though.",
      "created_at": "2025-04-21T13:38:21Z",
      "updated_at": "2025-04-21T13:41:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32305#discussion_r2052395285",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2052395285"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32305"
        }
      },
      "start_line": null,
      "original_start_line": 1023,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1050,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077753175",
      "pull_request_review_id": 2821961401,
      "id": 2077753175,
      "node_id": "PRRC_kwDOABII58571_9X",
      "diff_hunk": "@@ -88,6 +92,9 @@ def serialize(self):\n         for k,v in self.map.items():\n             if isinstance(k, int) and 0 <= k and k <= 255:\n                 k = bytes([k])\n+            if isinstance(v, list):\n+                assert any(type(elem) is bytes for elem in v)",
      "path": "test/functional/test_framework/psbt.py",
      "position": null,
      "original_position": 23,
      "commit_id": "58fd30f8b60983a6bb3ab2effe2d7645818335db",
      "original_commit_id": "e5537de0ab28124de0d557f98f6d1a0de6af5f51",
      "in_reply_to_id": 2052391023,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good point, I agree that the `all` predicate makes much more sense than `any` here, not sure what motivated me to use the latter back then. Fixed.",
      "created_at": "2025-05-07T14:22:20Z",
      "updated_at": "2025-05-07T14:22:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32305#discussion_r2077753175",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077753175"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 96,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077754185",
      "pull_request_review_id": 2821962653,
      "id": 2077754185,
      "node_id": "PRRC_kwDOABII58572ANJ",
      "diff_hunk": "@@ -977,6 +981,74 @@ def test_psbt_input_keys(psbt_input, keys):\n             assert hash.hex() in res_input[preimage_key]\n             assert_equal(res_input[preimage_key][hash.hex()], preimage.hex())\n \n+        self.log.info(\"Test decoding PSBT with MuSig2 per-input and per-output types\")\n+        # create 2-of-2 musig2 using fake aggregate key, leaf hash, pubnonce, and partial sig\n+        # TODO: actually implement MuSig2 aggregation (for decoding only it doesn't matter though)\n+        _, in_pubkey1 = generate_keypair()\n+        _, in_pubkey2 = generate_keypair()\n+        _, in_fake_agg_pubkey = generate_keypair()\n+        fake_leaf_hash = randbytes(32)\n+        fake_pubnonce = randbytes(66)\n+        fake_partialsig = randbytes(32)\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(outpoint=COutPoint(hash=int('ee' * 32, 16), n=0), scriptSig=b\"\")]\n+        tx.vout = [CTxOut(nValue=0, scriptPubKey=b\"\")]\n+        psbt = PSBT()\n+        psbt.g = PSBTMap({PSBT_GLOBAL_UNSIGNED_TX: tx.serialize()})\n+        participant1_keydata = in_pubkey1 + in_fake_agg_pubkey + fake_leaf_hash\n+        psbt.i = [PSBTMap({\n+                    bytes([PSBT_IN_MUSIG2_PARTICIPANT_PUBKEYS]) + in_fake_agg_pubkey: [in_pubkey1, in_pubkey2],\n+                    bytes([PSBT_IN_MUSIG2_PUB_NONCE]) + participant1_keydata: fake_pubnonce,\n+                    bytes([PSBT_IN_MUSIG2_PARTIAL_SIG]) + participant1_keydata: fake_partialsig,\n+                 })]\n+        _, out_pubkey1 = generate_keypair()\n+        _, out_pubkey2 = generate_keypair()\n+        _, out_fake_agg_pubkey = generate_keypair()\n+        psbt.o = [PSBTMap({\n+                    bytes([PSBT_OUT_MUSIG2_PARTICIPANT_PUBKEYS]) + out_fake_agg_pubkey: [out_pubkey1, out_pubkey2],\n+                 })]\n+        res = self.nodes[0].decodepsbt(psbt.to_base64())\n+        assert_equal(len(res[\"inputs\"]), 1)\n+        res_input = res[\"inputs\"][0]\n+        assert_equal(len(res[\"outputs\"]), 1)\n+        res_output = res[\"outputs\"][0]\n+\n+        assert \"musig2_participant_pubkeys\" in res_input\n+        in_participant_pks = res_input[\"musig2_participant_pubkeys\"][0]\n+        assert \"aggregate_pubkey\" in in_participant_pks\n+        assert_equal(in_participant_pks[\"aggregate_pubkey\"], in_fake_agg_pubkey.hex())\n+        assert \"participant_pubkeys\" in in_participant_pks",
      "path": "test/functional/rpc_psbt.py",
      "position": null,
      "original_position": 53,
      "commit_id": "58fd30f8b60983a6bb3ab2effe2d7645818335db",
      "original_commit_id": "23ee07dd0f81930f46d2f4910cc92cb0eab61cc3",
      "in_reply_to_id": 2052391602,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Right, strictly speaking they are not needed. I added them because we seem to do this also in many other functional tests, and I think it's nice to differentiate between \"attribute is not available\" and \"attribute doesn't match the expected value\" more explicitly by failing in different lines. Happy to drop them though if others feel strongly.",
      "created_at": "2025-05-07T14:22:40Z",
      "updated_at": "2025-05-07T14:22:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32305#discussion_r2077754185",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077754185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1020,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077754605",
      "pull_request_review_id": 2821963319,
      "id": 2077754605,
      "node_id": "PRRC_kwDOABII58572ATt",
      "diff_hunk": "@@ -977,6 +981,74 @@ def test_psbt_input_keys(psbt_input, keys):\n             assert hash.hex() in res_input[preimage_key]\n             assert_equal(res_input[preimage_key][hash.hex()], preimage.hex())\n \n+        self.log.info(\"Test decoding PSBT with MuSig2 per-input and per-output types\")",
      "path": "test/functional/rpc_psbt.py",
      "position": null,
      "original_position": 17,
      "commit_id": "58fd30f8b60983a6bb3ab2effe2d7645818335db",
      "original_commit_id": "23ee07dd0f81930f46d2f4910cc92cb0eab61cc3",
      "in_reply_to_id": 2052392744,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good idea, done.",
      "created_at": "2025-05-07T14:22:45Z",
      "updated_at": "2025-05-07T14:22:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32305#discussion_r2077754605",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077754605"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32305"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 984,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077754899",
      "pull_request_review_id": 2821963742,
      "id": 2077754899,
      "node_id": "PRRC_kwDOABII58572AYT",
      "diff_hunk": "@@ -977,6 +981,74 @@ def test_psbt_input_keys(psbt_input, keys):\n             assert hash.hex() in res_input[preimage_key]\n             assert_equal(res_input[preimage_key][hash.hex()], preimage.hex())\n \n+        self.log.info(\"Test decoding PSBT with MuSig2 per-input and per-output types\")\n+        # create 2-of-2 musig2 using fake aggregate key, leaf hash, pubnonce, and partial sig\n+        # TODO: actually implement MuSig2 aggregation (for decoding only it doesn't matter though)\n+        _, in_pubkey1 = generate_keypair()\n+        _, in_pubkey2 = generate_keypair()\n+        _, in_fake_agg_pubkey = generate_keypair()\n+        fake_leaf_hash = randbytes(32)\n+        fake_pubnonce = randbytes(66)\n+        fake_partialsig = randbytes(32)\n+        tx = CTransaction()\n+        tx.vin = [CTxIn(outpoint=COutPoint(hash=int('ee' * 32, 16), n=0), scriptSig=b\"\")]\n+        tx.vout = [CTxOut(nValue=0, scriptPubKey=b\"\")]\n+        psbt = PSBT()\n+        psbt.g = PSBTMap({PSBT_GLOBAL_UNSIGNED_TX: tx.serialize()})\n+        participant1_keydata = in_pubkey1 + in_fake_agg_pubkey + fake_leaf_hash\n+        psbt.i = [PSBTMap({\n+                    bytes([PSBT_IN_MUSIG2_PARTICIPANT_PUBKEYS]) + in_fake_agg_pubkey: [in_pubkey1, in_pubkey2],\n+                    bytes([PSBT_IN_MUSIG2_PUB_NONCE]) + participant1_keydata: fake_pubnonce,\n+                    bytes([PSBT_IN_MUSIG2_PARTIAL_SIG]) + participant1_keydata: fake_partialsig,\n+                 })]\n+        _, out_pubkey1 = generate_keypair()\n+        _, out_pubkey2 = generate_keypair()\n+        _, out_fake_agg_pubkey = generate_keypair()\n+        psbt.o = [PSBTMap({\n+                    bytes([PSBT_OUT_MUSIG2_PARTICIPANT_PUBKEYS]) + out_fake_agg_pubkey: [out_pubkey1, out_pubkey2],\n+                 })]\n+        res = self.nodes[0].decodepsbt(psbt.to_base64())\n+        assert_equal(len(res[\"inputs\"]), 1)\n+        res_input = res[\"inputs\"][0]\n+        assert_equal(len(res[\"outputs\"]), 1)\n+        res_output = res[\"outputs\"][0]\n+\n+        assert \"musig2_participant_pubkeys\" in res_input\n+        in_participant_pks = res_input[\"musig2_participant_pubkeys\"][0]\n+        assert \"aggregate_pubkey\" in in_participant_pks\n+        assert_equal(in_participant_pks[\"aggregate_pubkey\"], in_fake_agg_pubkey.hex())\n+        assert \"participant_pubkeys\" in in_participant_pks\n+        assert_equal(in_participant_pks[\"participant_pubkeys\"], [in_pubkey1.hex(), in_pubkey2.hex()])\n+\n+        assert \"musig2_pubnonces\" in res_input\n+        in_pubnonce = res_input[\"musig2_pubnonces\"][0]\n+        assert \"participant_pubkey\" in in_pubnonce\n+        assert_equal(in_pubnonce[\"participant_pubkey\"], in_pubkey1.hex())\n+        assert \"aggregate_pubkey\" in in_pubnonce\n+        assert_equal(in_pubnonce[\"aggregate_pubkey\"], in_fake_agg_pubkey.hex())\n+        assert \"leaf_hash\" in in_pubnonce\n+        assert_equal(in_pubnonce[\"leaf_hash\"], fake_leaf_hash.hex())\n+        assert \"pubnonce\" in in_pubnonce\n+        assert_equal(in_pubnonce[\"pubnonce\"], fake_pubnonce.hex())\n+\n+        assert \"musig2_partial_sigs\" in res_input\n+        in_partialsig = res_input[\"musig2_partial_sigs\"][0]\n+        assert \"participant_pubkey\" in in_partialsig\n+        assert_equal(in_partialsig[\"participant_pubkey\"], in_pubkey1.hex())\n+        assert \"aggregate_pubkey\" in in_pubnonce\n+        assert_equal(in_partialsig[\"aggregate_pubkey\"], in_fake_agg_pubkey.hex())\n+        assert \"leaf_hash\" in in_partialsig\n+        assert_equal(in_partialsig[\"leaf_hash\"], fake_leaf_hash.hex())\n+        assert \"partial_sig\" in in_partialsig\n+        assert_equal(in_partialsig[\"partial_sig\"], fake_partialsig.hex())\n+\n+        assert \"musig2_participant_pubkeys\" in res_output\n+        out_participant_pks = res_output[\"musig2_participant_pubkeys\"][0]\n+        assert \"aggregate_pubkey\" in out_participant_pks\n+        assert_equal(out_participant_pks[\"aggregate_pubkey\"], out_fake_agg_pubkey.hex())\n+        assert \"participant_pubkeys\" in out_participant_pks\n+        assert_equal(out_participant_pks[\"participant_pubkeys\"], [out_pubkey1.hex(), out_pubkey2.hex()])",
      "path": "test/functional/rpc_psbt.py",
      "position": null,
      "original_position": 83,
      "commit_id": "58fd30f8b60983a6bb3ab2effe2d7645818335db",
      "original_commit_id": "23ee07dd0f81930f46d2f4910cc92cb0eab61cc3",
      "in_reply_to_id": 2052395285,
      "user": {
        "login": "theStack",
        "id": 91535,
        "node_id": "MDQ6VXNlcjkxNTM1",
        "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theStack",
        "html_url": "https://github.com/theStack",
        "followers_url": "https://api.github.com/users/theStack/followers",
        "following_url": "https://api.github.com/users/theStack/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theStack/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theStack/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
        "organizations_url": "https://api.github.com/users/theStack/orgs",
        "repos_url": "https://api.github.com/users/theStack/repos",
        "events_url": "https://api.github.com/users/theStack/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theStack/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Leaving that one for a follow-up.",
      "created_at": "2025-05-07T14:22:51Z",
      "updated_at": "2025-05-07T14:22:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32305#discussion_r2077754899",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2077754899"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32305"
        }
      },
      "start_line": null,
      "original_start_line": 1023,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1050,
      "side": "RIGHT"
    }
  ]
}