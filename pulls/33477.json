{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477",
    "id": 2858375622,
    "node_id": "PR_kwDOABII586qX1nG",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33477",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33477.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33477.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33477",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33477/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/6d409d59704a026a56d18856ab2f9e90eea62186",
    "number": 33477,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Rollback for dumptxoutset without invalidating blocks",
    "user": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This is an alternative approach to implement `dumptxoutset` with rollback that was discussed a few times. It does not rely on `invalidateblock` and `reconsiderblock` and instead creates a temporary copy of the coins DB, modifies this copy by rolling back as many blocks as necessary and then creating the dump from this temp copy DB. See also https://github.com/bitcoin/bitcoin/pull/29553#issuecomment-1978480989, https://github.com/bitcoin/bitcoin/issues/32817#issuecomment-3012406102 and #29565 discussions.\r\n\r\nThe nice side-effects of this are that forks can not interfere with the rollback and network activity does not have to be suspended. But there are also some downsides when comparing to the current approach: this does require some additional disk space for the copied coins DB and performance is slower (master took 3m 17s vs 9m 16s in my last test with the code here, rolling back ~1500 blocks). However, there is also not much code being added here, network can stay active throughout and performance would stay constant with this approach while it would impact master if there were forks that needed to be invalidated as well (see #33444 for the alternative approach), so this could still be considered a good trade-off.",
    "labels": [],
    "created_at": "2025-09-24T21:15:11Z",
    "updated_at": "2025-09-30T08:52:34Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "9b41411e008618f2cca94ae1df375c08bf2cee5b",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "fjahr:202509-better-rollback",
      "ref": "202509-better-rollback",
      "sha": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 196253948,
        "node_id": "MDEwOlJlcG9zaXRvcnkxOTYyNTM5NDg=",
        "name": "bitcoin",
        "full_name": "fjahr/bitcoin",
        "owner": {
          "login": "fjahr",
          "id": 1322187,
          "node_id": "MDQ6VXNlcjEzMjIxODc=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fjahr",
          "html_url": "https://github.com/fjahr",
          "followers_url": "https://api.github.com/users/fjahr/followers",
          "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
          "organizations_url": "https://api.github.com/users/fjahr/orgs",
          "repos_url": "https://api.github.com/users/fjahr/repos",
          "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/fjahr/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/fjahr/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/fjahr/bitcoin",
        "archive_url": "https://api.github.com/repos/fjahr/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/fjahr/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/fjahr/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/fjahr/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/fjahr/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/fjahr/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/fjahr/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/fjahr/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/fjahr/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/fjahr/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/fjahr/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/fjahr/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/fjahr/bitcoin/events",
        "forks_url": "https://api.github.com/repos/fjahr/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/fjahr/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/fjahr/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/fjahr/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/fjahr/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/fjahr/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/fjahr/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/fjahr/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/fjahr/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/fjahr/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/fjahr/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/fjahr/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/fjahr/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/fjahr/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/fjahr/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/fjahr/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:fjahr/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/fjahr/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/fjahr/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/fjahr/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/fjahr/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/fjahr/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/fjahr/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/fjahr/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/fjahr/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/fjahr/bitcoin/hooks",
        "svn_url": "https://github.com/fjahr/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 4,
        "watchers_count": 4,
        "size": 279280,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-29T20:25:23Z",
        "created_at": "2019-07-10T18:11:06Z",
        "updated_at": "2024-07-23T22:14:45Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "d41b503ae128ac36ef27e652d2935c6fe7981a79",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37900,
        "stargazers_count": 85767,
        "watchers_count": 85767,
        "size": 294230,
        "default_branch": "master",
        "open_issues_count": 807,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-30T07:17:43Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-09-30T08:20:50Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 193,
    "deletions": 113,
    "changed_files": 2,
    "commits": 2,
    "review_comments": 13,
    "comments": 4
  },
  "events": [
    {
      "event": "commented",
      "id": 3330742861,
      "node_id": "IC_kwDOABII587GhxpN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3330742861",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-24T21:15:20Z",
      "updated_at": "2025-09-27T14:04:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33477.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [luke-jr](https://github.com/bitcoin/bitcoin/pull/33477#issuecomment-3333347528), [kevkevinpal](https://github.com/bitcoin/bitcoin/pull/33477#pullrequestreview-3274904950) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#33444](https://github.com/bitcoin/bitcoin/pull/33444) (rpc: Fix dumptxoutset rollback with competing forks by enirox001)\n* [#31560](https://github.com/bitcoin/bitcoin/pull/31560) (rpc: allow writing UTXO set to a named pipe, introduce dump_to_sqlite.sh script by theStack)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#issuecomment-3330742861",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33477"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19903386464,
      "node_id": "HRFPE_lADOABII587NsmtbzwAAAASiVZNg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19903386464",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d51c7d71486c86b14806fdaeea1fb47aa1f5312b",
      "commit_url": "https://api.github.com/repos/fjahr/bitcoin/commits/d51c7d71486c86b14806fdaeea1fb47aa1f5312b",
      "created_at": "2025-09-24T21:22:09Z"
    },
    {
      "event": "commented",
      "id": 3330760975,
      "node_id": "IC_kwDOABII587Gh2EP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3330760975",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-24T21:22:50Z",
      "updated_at": "2025-09-24T21:22:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "cc @Sjors since you were asking for this approach a few times :)",
      "user": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#issuecomment-3330760975",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33477"
    },
    {
      "event": "mentioned",
      "id": 19903397541,
      "node_id": "MEE_lADOABII587NsmtbzwAAAASiVb6l",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19903397541",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-24T21:22:51Z"
    },
    {
      "event": "subscribed",
      "id": 19903397561,
      "node_id": "SE_lADOABII587NsmtbzwAAAASiVb65",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19903397561",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-24T21:22:51Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19903537752,
      "node_id": "HRFPE_lADOABII587NsmtbzwAAAASiV-JY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19903537752",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "716e1dbf82b21e2ab9adb97328d2c54b09ae4a38",
      "commit_url": "https://api.github.com/repos/fjahr/bitcoin/commits/716e1dbf82b21e2ab9adb97328d2c54b09ae4a38",
      "created_at": "2025-09-24T21:31:37Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGYwNDYyODZjMGM1ZTFmZWY4YjYxZGE1NDhjYjk3NTA2ZjdhOGIwNDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f046286c0c5e1fef8b61da548cb97506f7a8b047",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f046286c0c5e1fef8b61da548cb97506f7a8b047",
      "tree": {
        "sha": "c85591cb2fd168805a0fbbde0832d50abdc87698",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c85591cb2fd168805a0fbbde0832d50abdc87698"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree c85591cb2fd168805a0fbbde0832d50abdc87698\nparent 3b3ab3a50a0b984374b328b9b2755478b8f58230\nauthor Fabian Jahr <fjahr@protonmail.com> 1758661487 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1758753217 +0200\n\nrpc: Don't invalidate blocks in dumptxoutset\n\nInstead this new approach uses a temporary coins db to roll back the\nUTXO set.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmjUccMVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNe5sP/RXM1Z8Qf1ivTcrHUGYI80XSNAxh\nnzcBazuvphX+7kNG8vMUV+mmmi806b3xM76KXA13FN/rCjLUwjjlzNP7vsmSIf6a\nhba09ZRNTs960ldwKoM9mTOYu5ZPeZX1SK6wyXAG2v/npaswy4NofvE5+MhKwUiX\nlRjhAeun+Qt3GTiiMVHQOih54rT3KALC3oNCesgPPGLAuoXNoQ5kLP+6ISIc476D\nO8zG5IJZ/qUeOxKXSBF8TvK3vJBJDvhcffYHr6bAHgnCQpt4b2HHsc6r1P9deydv\nffDDGjMEyOwis88bzEI7/6IYgWgGV2aqJFIlgvxqSoBUCi9pEYlInA5ugLUm6CUh\nSa2AaPpBkVrdh/QN1FR5o2HCskNp6UURLW0bGYiGYQPWCO6xaf/D4+PaLPdTnksq\napk+EFgyqlueMKoWJ+dRBO7OqHTSz6LQDM9JzXS+P6uACmGA2bUf8adA/QdjLjdR\nlJ1aJVU5aNOr1OyMELirX+tcslqhtEULyiOEP3xyyBdoR0mWxkBMxbTDkIixQquU\nx9dT5GMz3sfXKXOp2shoV8haXrquK04NJLwnQAjSTSeYbY0Z2LeortvWqE2ssNR2\nG2Ulc9GUFYED/q2bZaQ82a9sXzLKW/95vp1t5a9dOlNw0THKwJKFiKFk51Py4fPF\naO11avBojM+jk98S\n=t4mG\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b3ab3a50a0b984374b328b9b2755478b8f58230",
          "sha": "3b3ab3a50a0b984374b328b9b2755478b8f58230",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3b3ab3a50a0b984374b328b9b2755478b8f58230"
        }
      ],
      "message": "rpc: Don't invalidate blocks in dumptxoutset\n\nInstead this new approach uses a temporary coins db to roll back the\nUTXO set.",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-09-24T22:33:37Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-09-23T21:04:47Z"
      },
      "sha": "f046286c0c5e1fef8b61da548cb97506f7a8b047"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDZkNDA5ZDU5NzA0YTAyNmE1NmQxODg1NmFiMmY5ZTkwZWVhNjIxODY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d409d59704a026a56d18856ab2f9e90eea62186",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/6d409d59704a026a56d18856ab2f9e90eea62186",
      "tree": {
        "sha": "17b306ac2db804f6329615c8b7de8e809a2e576f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/17b306ac2db804f6329615c8b7de8e809a2e576f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 17b306ac2db804f6329615c8b7de8e809a2e576f\nparent f046286c0c5e1fef8b61da548cb97506f7a8b047\nauthor Fabian Jahr <fjahr@protonmail.com> 1758671406 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1758753220 +0200\n\ntest: Add dumptxoutset fork test\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAmjUccQVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jNyHUP/jq7++ZUZy5V4ulE/PQg8lyCssSS\nTcrL9h5BLZizktVu5z6WKNiyqBO5nNFErKigJk36wpck+0OWZHSNmMhTbRNMmOZZ\nRj5xx/FG0tLJnMg+A8z5cC9DPXTXdk2TSEgMQrB1hmsQFxSgzfKIjMR4STUGrFco\nH8v2KCFerMeeUTRiIZfZ0/YKMZwKxTcIlY7YYV3GeQYWm2Wm9AhgubOsFDVZ58YI\nGpyM8p0CvlSxa7Z2bvwqMdUFK4v5TuAv1EvoZGT3Ta88JF4vmI75i+ds3S/uhwpE\nlUIkMYClWCV6JrCN1d+mNH51W5rV+Rmg7Sf1isj0uI5BHIfrZKODPpzAEAW8yqvt\nUZnirxOir8cg4AOY17kab3/GhvHQohvV2I56p+ceIvGIE9xT/0VwMhsC6bGJbakM\na3q1T592YG3+07faQtguZLWDxRxSuZbeCjW3nhtfIYB6tMTaCTt8IyYz2I/FWH9N\nXMV1UmFvf6QBAbdLw7TOBMIqS6r6X10ycdnMPnNYWHCByqJ4kFjjZeVkT8opBwQD\na1MS64w7BN9NhO2PgWz2fp6KV6ngY3SbWBNsmGSA24T0+r+LGaXJG9kXjwOyBrhe\nib/sTks3I0hfvuxLCH2FSHMBdbqdW/vJyCp5z+OAdb9hXs/+SXiEzxacDo4psKGp\nziyqbB5sOl9byG3v\n=AIyC\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f046286c0c5e1fef8b61da548cb97506f7a8b047",
          "sha": "f046286c0c5e1fef8b61da548cb97506f7a8b047",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f046286c0c5e1fef8b61da548cb97506f7a8b047"
        }
      ],
      "message": "test: Add dumptxoutset fork test",
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-09-24T22:33:40Z"
      },
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2025-09-23T23:50:06Z"
      },
      "sha": "6d409d59704a026a56d18856ab2f9e90eea62186"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 19904389221,
      "node_id": "HRFPE_lADOABII587NsmtbzwAAAASiZOBl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19904389221",
      "actor": {
        "login": "fjahr",
        "id": 1322187,
        "node_id": "MDQ6VXNlcjEzMjIxODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fjahr",
        "html_url": "https://github.com/fjahr",
        "followers_url": "https://api.github.com/users/fjahr/followers",
        "following_url": "https://api.github.com/users/fjahr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fjahr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fjahr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
        "organizations_url": "https://api.github.com/users/fjahr/orgs",
        "repos_url": "https://api.github.com/users/fjahr/repos",
        "events_url": "https://api.github.com/users/fjahr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fjahr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "commit_url": "https://api.github.com/repos/fjahr/bitcoin/commits/6d409d59704a026a56d18856ab2f9e90eea62186",
      "created_at": "2025-09-24T22:33:46Z"
    },
    {
      "event": "commented",
      "id": 3333347528,
      "node_id": "IC_kwDOABII587GrtjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3333347528",
      "actor": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-25T10:40:34Z",
      "updated_at": "2025-09-25T10:40:34Z",
      "author_association": "MEMBER",
      "body": "Concept ACK, this seems cleaner.\r\n\r\n> master took 3m 17s vs 9m 16s in my last test with the code here\r\n\r\nI suspect if you go back further, this approach will end up performing better because we no longer need to roll back forward at the end",
      "user": {
        "login": "luke-jr",
        "id": 1095675,
        "node_id": "MDQ6VXNlcjEwOTU2NzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/luke-jr",
        "html_url": "https://github.com/luke-jr",
        "followers_url": "https://api.github.com/users/luke-jr/followers",
        "following_url": "https://api.github.com/users/luke-jr/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/luke-jr/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/luke-jr/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
        "organizations_url": "https://api.github.com/users/luke-jr/orgs",
        "repos_url": "https://api.github.com/users/luke-jr/repos",
        "events_url": "https://api.github.com/users/luke-jr/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/luke-jr/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#issuecomment-3333347528",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33477"
    },
    {
      "event": "subscribed",
      "id": 19941062280,
      "node_id": "SE_lADOABII587NsmtbzwAAAASklHaI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19941062280",
      "actor": {
        "login": "nervana21",
        "id": 205626986,
        "node_id": "U_kgDODEGeag",
        "avatar_url": "https://avatars.githubusercontent.com/u/205626986?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nervana21",
        "html_url": "https://github.com/nervana21",
        "followers_url": "https://api.github.com/users/nervana21/followers",
        "following_url": "https://api.github.com/users/nervana21/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/nervana21/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/nervana21/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/nervana21/subscriptions",
        "organizations_url": "https://api.github.com/users/nervana21/orgs",
        "repos_url": "https://api.github.com/users/nervana21/repos",
        "events_url": "https://api.github.com/users/nervana21/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/nervana21/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-26T10:53:27Z"
    },
    {
      "event": "reviewed",
      "id": 3274904950,
      "node_id": "PRR_kwDOABII587DMxV2",
      "url": null,
      "actor": null,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-27T14:04:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK [6d409d5](https://github.com/bitcoin/bitcoin/pull/33477/commits/6d409d59704a026a56d18856ab2f9e90eea62186)\n\nThis approach makes more sense. I reviewed the code a bit and made some comments, but nothing blocking\n\nI also added comments on possible functional tests for the new `JSONRPCError` but these can be done in a followup",
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#pullrequestreview-3274904950",
      "submitted_at": "2025-09-27T14:04:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
    },
    {
      "event": "commented",
      "id": 3344719601,
      "node_id": "IC_kwDOABII587HXF7x",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3344719601",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-29T03:27:34Z",
      "updated_at": "2025-09-29T03:27:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "Nice!\r\n\r\n> performance is slower (master took 3m 17s vs 9m 16s in my last test with the code here,\r\n\r\nThat probably makes sense. It might be possible to do it faster and with less disk usage for relatively short rollbacks via a two step process:\r\n\r\n * create a read-only snapshot of the db\r\n * create an empty \"coins-delta\" db\r\n * iterate through the rev data to rollback, update the coins-delta db:\r\n    * when you rollback past a coin's creation:\r\n      * if the coin was in the snapshot db, add \"[coin] deleted\"\r\n      * otherwise, if it was in the coins-delta db, remove \"[coin]\"\r\n      * (otherwise, there's a bug)\r\n    * when you rollback past a coin's spend, add \"[coin]\"\r\n * when you've finished the rollback,\r\n   * iterate through the snapshot coins, skipping any where there is a \"[coin] deleted\" entry, reporting them\r\n   * iterate through the non-deleted coins-delta coins, reporting them\r\n * delete the coins-delta db, delete the snapshot\r\n\r\nRather than being direct RPC functionality, maybe it would be better to have an RPC function to export a copy of the utxo set at the current height, and have a separate bitcoin-kernel binary that performs the rollback and utxoset stats calculation itself?",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#issuecomment-3344719601",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33477"
    },
    {
      "event": "reviewed",
      "id": 3283254825,
      "node_id": "PRR_kwDOABII587Dsn4p",
      "url": null,
      "actor": null,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2025-09-30T08:52:34Z",
      "author_association": "NONE",
      "body": "The changes refactor the `dumptxoutset` RPC to improve its handling of historical UTXO snapshots. It introduces a new function `CreateRolledBackUTXOSnapshot` and removes RAII classes `NetworkDisable` and `TemporaryRollback`, simplifying the rollback logic. The test file `rpc_dumptxoutset.py` is updated to reflect these changes.\r\n\r\n**Key Changes:**\r\n- Introduced `CreateRolledBackUTXOSnapshot` function to encapsulate the logic for creating UTXO snapshots from historical states.\r\n- Removed `NetworkDisable` RAII class, as network suspension is now handled within the new rollback function.\r\n- Removed `TemporaryRollback` RAII class, with rollback logic integrated into `CreateRolledBackUTXOSnapshot`.\r\n- Modified `dumptxoutset` RPC to call `CreateRolledBackUTXOSnapshot` when a historical snapshot is requested.\r\n- Updated the RPC help text for `dumptxoutset` to reflect the new rollback mechanism and potential manual cleanup of temporary databases.\r\n- Updated `test/functional/rpc_dumptxoutset.py` to accommodate the changes in the `dumptxoutset` RPC behavior.\r\n\r\n",
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#pullrequestreview-3283254825",
      "submitted_at": "2025-09-30T08:32:39Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384138037",
      "pull_request_review_id": 3274904950,
      "id": 2384138037,
      "node_id": "PRRC_kwDOABII586OGw81",
      "diff_hunk": "@@ -3020,9 +2992,8 @@ static RPCHelpMan dumptxoutset()\n     return RPCHelpMan{\n         \"dumptxoutset\",\n         \"Write the serialized UTXO set to a file. This can be used in loadtxoutset afterwards if this snapshot height is supported in the chainparams as well.\\n\\n\"\n-        \"Unless the \\\"latest\\\" type is requested, the node will roll back to the requested height and network activity will be suspended during this process. \"\n-        \"Because of this it is discouraged to interact with the node in any other way during the execution of this call to avoid inconsistent results and race conditions, particularly RPCs that interact with blockstorage.\\n\\n\"\n-        \"This call may take several minutes. Make sure to use no RPC timeout (bitcoin-cli -rpcclienttimeout=0)\",\n+        \"This creates a temporary UTXO database when rolling back, keeping the main chain intact. Should the node experience an unclean shutdown the temporary database may need to be removed from the datadir manually.\\n\\n\"",
      "path": "src/rpc/blockchain.cpp",
      "position": 65,
      "original_position": 65,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "original_commit_id": "f046286c0c5e1fef8b61da548cb97506f7a8b047",
      "in_reply_to_id": null,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It may be worth noting that \"network activity will **_not_** be suspended during this process.\"",
      "created_at": "2025-09-27T12:54:25Z",
      "updated_at": "2025-09-27T14:04:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#discussion_r2384138037",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384138037"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2995,
      "original_line": 2995,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384142999",
      "pull_request_review_id": 3274904950,
      "id": 2384142999,
      "node_id": "PRRC_kwDOABII586OGyKX",
      "diff_hunk": "@@ -3020,9 +2992,8 @@ static RPCHelpMan dumptxoutset()\n     return RPCHelpMan{\n         \"dumptxoutset\",\n         \"Write the serialized UTXO set to a file. This can be used in loadtxoutset afterwards if this snapshot height is supported in the chainparams as well.\\n\\n\"\n-        \"Unless the \\\"latest\\\" type is requested, the node will roll back to the requested height and network activity will be suspended during this process. \"\n-        \"Because of this it is discouraged to interact with the node in any other way during the execution of this call to avoid inconsistent results and race conditions, particularly RPCs that interact with blockstorage.\\n\\n\"\n-        \"This call may take several minutes. Make sure to use no RPC timeout (bitcoin-cli -rpcclienttimeout=0)\",\n+        \"This creates a temporary UTXO database when rolling back, keeping the main chain intact. Should the node experience an unclean shutdown the temporary database may need to be removed from the datadir manually.\\n\\n\"\n+        \"This call may take several minutes for deep rollbacks. Make sure to use no RPC timeout (bitcoin-cli -rpcclienttimeout=0)\",",
      "path": "src/rpc/blockchain.cpp",
      "position": 66,
      "original_position": 66,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "original_commit_id": "f046286c0c5e1fef8b61da548cb97506f7a8b047",
      "in_reply_to_id": null,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe this text would make more sense\r\n\r\n\"For deep rollbacks, make sure to use no RPC timeout (bitcoin-cli -rpcclienttimeout=0) as it may take several minutes.\"",
      "created_at": "2025-09-27T12:56:16Z",
      "updated_at": "2025-09-27T14:04:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#discussion_r2384142999",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384142999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2996,
      "original_line": 2996,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384175011",
      "pull_request_review_id": 3274904950,
      "id": 2384175011,
      "node_id": "PRRC_kwDOABII586OG5-j",
      "diff_hunk": "@@ -3171,6 +3097,152 @@ static RPCHelpMan dumptxoutset()\n     };\n }\n \n+/**\n+ * RAII class that creates a temporary database directory in its constructor\n+ * and removes it in its destructor.\n+ */\n+class TemporaryUTXODatabase\n+{\n+    fs::path m_path;\n+public:\n+    TemporaryUTXODatabase(const fs::path& path) : m_path(path) {\n+        fs::create_directories(m_path);\n+    }\n+    ~TemporaryUTXODatabase() {\n+        try {\n+            fs::remove_all(m_path);\n+        } catch (...) {\n+            LogInfo(\"Failed to clean up temporary UTXO database at %s, please remove it manually.\",\n+                    fs::PathToString(m_path));\n+        }\n+    }\n+};\n+\n+UniValue CreateRolledBackUTXOSnapshot(\n+    NodeContext& node,\n+    Chainstate& chainstate,\n+    const CBlockIndex* target,\n+    AutoFile&& afile,\n+    const fs::path& path,\n+    const fs::path& tmppath)\n+{\n+    // Create a temporary leveldb to store the UTXO set that is being rolled back\n+    std::string temp_db_name{strprintf(\"temp_utxo_%d\", target->nHeight)};\n+    fs::path temp_db_path{fsbridge::AbsPathJoin(tmppath.parent_path(), fs::u8path(temp_db_name))};\n+    TemporaryUTXODatabase temp_db_cleaner{temp_db_path};\n+\n+    // Create temporary database\n+    DBParams db_params{\n+        .path = temp_db_path,\n+        .cache_bytes = size_t(1) << 24,  // 16MB cache\n+        .memory_only = false,\n+        .wipe_data = true,\n+        .obfuscate = false,\n+        .options = DBOptions{}\n+    };\n+\n+    std::unique_ptr<CCoinsViewDB> temp_db = std::make_unique<CCoinsViewDB>(\n+        std::move(db_params),\n+        CoinsViewOptions{}\n+    );\n+\n+    LogInfo(\"Copying current UTXO set to temporary database.\");\n+    {\n+        WITH_LOCK(::cs_main, chainstate.ForceFlushStateToDisk());\n+        CCoinsViewCache temp_cache(temp_db.get());\n+        temp_cache.SetBestBlock(chainstate.m_chain.Tip()->GetBlockHash());\n+\n+        std::unique_ptr<CCoinsViewCursor> cursor;\n+        WITH_LOCK(::cs_main, cursor = chainstate.CoinsDB().Cursor());\n+\n+        size_t coins_count = 0;\n+        while (cursor->Valid()) {\n+            node.rpc_interruption_point();\n+\n+            COutPoint key;\n+            Coin coin;\n+            if (cursor->GetKey(key) && cursor->GetValue(coin)) {\n+                temp_cache.AddCoin(key, std::move(coin), false);\n+                coins_count++;\n+\n+                // Log every 10M coins (optimized for mainnet)\n+                if (coins_count % 10'000'000 == 0) {\n+                    LogInfo(\"Copying UTXO set: %uM coins copied.\", coins_count / 1'000'000);\n+                }\n+\n+                // Flush periodically\n+                if (coins_count % 100'000 == 0) {\n+                    temp_cache.Flush();\n+                }\n+            }\n+            cursor->Next();\n+        }\n+\n+        temp_cache.Flush();\n+        LogInfo(\"UTXO set copy complete: %u coins total\", coins_count);\n+    }\n+\n+    LogInfo(\"Rolling back from height %d to %d\", chainstate.m_chain.Tip()->nHeight, target->nHeight);\n+\n+    const CBlockIndex* block_index{chainstate.m_chain.Tip()};\n+    CCoinsViewCache rollback_cache(temp_db.get());\n+    rollback_cache.SetBestBlock(block_index->GetBlockHash());\n+    size_t blocks_processed = 0;\n+    DisconnectResult res;\n+\n+    while (block_index->nHeight > target->nHeight) {\n+        node.rpc_interruption_point();\n+\n+        CBlock block;\n+        if (!node.chainman->m_blockman.ReadBlock(block, *block_index)) {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR,\n+                strprintf(\"Failed to read block at height %d\", block_index->nHeight));",
      "path": "src/rpc/blockchain.cpp",
      "position": 269,
      "original_position": 269,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "original_commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "in_reply_to_id": null,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Might be able to add a functional test for this rpc error",
      "created_at": "2025-09-27T13:46:58Z",
      "updated_at": "2025-09-27T14:04:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#discussion_r2384175011",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384175011"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3199,
      "original_line": 3199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384175091",
      "pull_request_review_id": 3274904950,
      "id": 2384175091,
      "node_id": "PRRC_kwDOABII586OG5_z",
      "diff_hunk": "@@ -3171,6 +3097,152 @@ static RPCHelpMan dumptxoutset()\n     };\n }\n \n+/**\n+ * RAII class that creates a temporary database directory in its constructor\n+ * and removes it in its destructor.\n+ */\n+class TemporaryUTXODatabase\n+{\n+    fs::path m_path;\n+public:\n+    TemporaryUTXODatabase(const fs::path& path) : m_path(path) {\n+        fs::create_directories(m_path);\n+    }\n+    ~TemporaryUTXODatabase() {\n+        try {\n+            fs::remove_all(m_path);\n+        } catch (...) {\n+            LogInfo(\"Failed to clean up temporary UTXO database at %s, please remove it manually.\",\n+                    fs::PathToString(m_path));\n+        }\n+    }\n+};\n+\n+UniValue CreateRolledBackUTXOSnapshot(\n+    NodeContext& node,\n+    Chainstate& chainstate,\n+    const CBlockIndex* target,\n+    AutoFile&& afile,\n+    const fs::path& path,\n+    const fs::path& tmppath)\n+{\n+    // Create a temporary leveldb to store the UTXO set that is being rolled back\n+    std::string temp_db_name{strprintf(\"temp_utxo_%d\", target->nHeight)};\n+    fs::path temp_db_path{fsbridge::AbsPathJoin(tmppath.parent_path(), fs::u8path(temp_db_name))};\n+    TemporaryUTXODatabase temp_db_cleaner{temp_db_path};\n+\n+    // Create temporary database\n+    DBParams db_params{\n+        .path = temp_db_path,\n+        .cache_bytes = size_t(1) << 24,  // 16MB cache\n+        .memory_only = false,\n+        .wipe_data = true,\n+        .obfuscate = false,\n+        .options = DBOptions{}\n+    };\n+\n+    std::unique_ptr<CCoinsViewDB> temp_db = std::make_unique<CCoinsViewDB>(\n+        std::move(db_params),\n+        CoinsViewOptions{}\n+    );\n+\n+    LogInfo(\"Copying current UTXO set to temporary database.\");\n+    {\n+        WITH_LOCK(::cs_main, chainstate.ForceFlushStateToDisk());\n+        CCoinsViewCache temp_cache(temp_db.get());\n+        temp_cache.SetBestBlock(chainstate.m_chain.Tip()->GetBlockHash());\n+\n+        std::unique_ptr<CCoinsViewCursor> cursor;\n+        WITH_LOCK(::cs_main, cursor = chainstate.CoinsDB().Cursor());\n+\n+        size_t coins_count = 0;\n+        while (cursor->Valid()) {\n+            node.rpc_interruption_point();\n+\n+            COutPoint key;\n+            Coin coin;\n+            if (cursor->GetKey(key) && cursor->GetValue(coin)) {\n+                temp_cache.AddCoin(key, std::move(coin), false);\n+                coins_count++;\n+\n+                // Log every 10M coins (optimized for mainnet)\n+                if (coins_count % 10'000'000 == 0) {\n+                    LogInfo(\"Copying UTXO set: %uM coins copied.\", coins_count / 1'000'000);\n+                }\n+\n+                // Flush periodically\n+                if (coins_count % 100'000 == 0) {\n+                    temp_cache.Flush();\n+                }\n+            }\n+            cursor->Next();\n+        }\n+\n+        temp_cache.Flush();\n+        LogInfo(\"UTXO set copy complete: %u coins total\", coins_count);\n+    }\n+\n+    LogInfo(\"Rolling back from height %d to %d\", chainstate.m_chain.Tip()->nHeight, target->nHeight);\n+\n+    const CBlockIndex* block_index{chainstate.m_chain.Tip()};\n+    CCoinsViewCache rollback_cache(temp_db.get());\n+    rollback_cache.SetBestBlock(block_index->GetBlockHash());\n+    size_t blocks_processed = 0;\n+    DisconnectResult res;\n+\n+    while (block_index->nHeight > target->nHeight) {\n+        node.rpc_interruption_point();\n+\n+        CBlock block;\n+        if (!node.chainman->m_blockman.ReadBlock(block, *block_index)) {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR,\n+                strprintf(\"Failed to read block at height %d\", block_index->nHeight));\n+        }\n+\n+        WITH_LOCK(::cs_main, res = chainstate.DisconnectBlock(block, block_index, rollback_cache));\n+        if (res == DISCONNECT_FAILED) {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR,\n+                strprintf(\"Failed to roll back block at height %d\", block_index->nHeight));",
      "path": "src/rpc/blockchain.cpp",
      "position": 275,
      "original_position": 275,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "original_commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "in_reply_to_id": null,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Might be able to add a functional test for this rpc error",
      "created_at": "2025-09-27T13:47:06Z",
      "updated_at": "2025-09-27T14:04:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#discussion_r2384175091",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384175091"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3205,
      "original_line": 3205,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384175151",
      "pull_request_review_id": 3274904950,
      "id": 2384175151,
      "node_id": "PRRC_kwDOABII586OG6Av",
      "diff_hunk": "@@ -3171,6 +3097,152 @@ static RPCHelpMan dumptxoutset()\n     };\n }\n \n+/**\n+ * RAII class that creates a temporary database directory in its constructor\n+ * and removes it in its destructor.\n+ */\n+class TemporaryUTXODatabase\n+{\n+    fs::path m_path;\n+public:\n+    TemporaryUTXODatabase(const fs::path& path) : m_path(path) {\n+        fs::create_directories(m_path);\n+    }\n+    ~TemporaryUTXODatabase() {\n+        try {\n+            fs::remove_all(m_path);\n+        } catch (...) {\n+            LogInfo(\"Failed to clean up temporary UTXO database at %s, please remove it manually.\",\n+                    fs::PathToString(m_path));\n+        }\n+    }\n+};\n+\n+UniValue CreateRolledBackUTXOSnapshot(\n+    NodeContext& node,\n+    Chainstate& chainstate,\n+    const CBlockIndex* target,\n+    AutoFile&& afile,\n+    const fs::path& path,\n+    const fs::path& tmppath)\n+{\n+    // Create a temporary leveldb to store the UTXO set that is being rolled back\n+    std::string temp_db_name{strprintf(\"temp_utxo_%d\", target->nHeight)};\n+    fs::path temp_db_path{fsbridge::AbsPathJoin(tmppath.parent_path(), fs::u8path(temp_db_name))};\n+    TemporaryUTXODatabase temp_db_cleaner{temp_db_path};\n+\n+    // Create temporary database\n+    DBParams db_params{\n+        .path = temp_db_path,\n+        .cache_bytes = size_t(1) << 24,  // 16MB cache\n+        .memory_only = false,\n+        .wipe_data = true,\n+        .obfuscate = false,\n+        .options = DBOptions{}\n+    };\n+\n+    std::unique_ptr<CCoinsViewDB> temp_db = std::make_unique<CCoinsViewDB>(\n+        std::move(db_params),\n+        CoinsViewOptions{}\n+    );\n+\n+    LogInfo(\"Copying current UTXO set to temporary database.\");\n+    {\n+        WITH_LOCK(::cs_main, chainstate.ForceFlushStateToDisk());\n+        CCoinsViewCache temp_cache(temp_db.get());\n+        temp_cache.SetBestBlock(chainstate.m_chain.Tip()->GetBlockHash());\n+\n+        std::unique_ptr<CCoinsViewCursor> cursor;\n+        WITH_LOCK(::cs_main, cursor = chainstate.CoinsDB().Cursor());\n+\n+        size_t coins_count = 0;\n+        while (cursor->Valid()) {\n+            node.rpc_interruption_point();\n+\n+            COutPoint key;\n+            Coin coin;\n+            if (cursor->GetKey(key) && cursor->GetValue(coin)) {\n+                temp_cache.AddCoin(key, std::move(coin), false);\n+                coins_count++;\n+\n+                // Log every 10M coins (optimized for mainnet)\n+                if (coins_count % 10'000'000 == 0) {\n+                    LogInfo(\"Copying UTXO set: %uM coins copied.\", coins_count / 1'000'000);\n+                }\n+\n+                // Flush periodically\n+                if (coins_count % 100'000 == 0) {\n+                    temp_cache.Flush();\n+                }\n+            }\n+            cursor->Next();\n+        }\n+\n+        temp_cache.Flush();\n+        LogInfo(\"UTXO set copy complete: %u coins total\", coins_count);\n+    }\n+\n+    LogInfo(\"Rolling back from height %d to %d\", chainstate.m_chain.Tip()->nHeight, target->nHeight);\n+\n+    const CBlockIndex* block_index{chainstate.m_chain.Tip()};\n+    CCoinsViewCache rollback_cache(temp_db.get());\n+    rollback_cache.SetBestBlock(block_index->GetBlockHash());\n+    size_t blocks_processed = 0;\n+    DisconnectResult res;\n+\n+    while (block_index->nHeight > target->nHeight) {\n+        node.rpc_interruption_point();\n+\n+        CBlock block;\n+        if (!node.chainman->m_blockman.ReadBlock(block, *block_index)) {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR,\n+                strprintf(\"Failed to read block at height %d\", block_index->nHeight));\n+        }\n+\n+        WITH_LOCK(::cs_main, res = chainstate.DisconnectBlock(block, block_index, rollback_cache));\n+        if (res == DISCONNECT_FAILED) {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR,\n+                strprintf(\"Failed to roll back block at height %d\", block_index->nHeight));\n+        }\n+\n+        blocks_processed++;\n+        if (blocks_processed % 500 == 0) {\n+            LogInfo(\"Rolled back %d blocks.\", blocks_processed);\n+            rollback_cache.Flush();\n+        }\n+\n+        block_index = block_index->pprev;\n+    }\n+\n+    rollback_cache.SetBestBlock(target->GetBlockHash());\n+    rollback_cache.Flush();\n+\n+    LogInfo(\"Rollback complete. Computing UTXO statistics for created txoutset dump.\");\n+    std::optional<CCoinsStats> maybe_stats = GetUTXOStats(temp_db.get(),\n+                                                          chainstate.m_blockman,\n+                                                          CoinStatsHashType::HASH_SERIALIZED,\n+                                                          node.rpc_interruption_point);\n+\n+    if (!maybe_stats) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to compute UTXO statistics\");",
      "path": "src/rpc/blockchain.cpp",
      "position": 297,
      "original_position": 297,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "original_commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "in_reply_to_id": null,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Might be able to add a functional test for this rpc error",
      "created_at": "2025-09-27T13:47:22Z",
      "updated_at": "2025-09-27T14:04:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#discussion_r2384175151",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384175151"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3227,
      "original_line": 3227,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384175185",
      "pull_request_review_id": 3274904950,
      "id": 2384175185,
      "node_id": "PRRC_kwDOABII586OG6BR",
      "diff_hunk": "@@ -3171,6 +3097,152 @@ static RPCHelpMan dumptxoutset()\n     };\n }\n \n+/**\n+ * RAII class that creates a temporary database directory in its constructor\n+ * and removes it in its destructor.\n+ */\n+class TemporaryUTXODatabase\n+{\n+    fs::path m_path;\n+public:\n+    TemporaryUTXODatabase(const fs::path& path) : m_path(path) {\n+        fs::create_directories(m_path);\n+    }\n+    ~TemporaryUTXODatabase() {\n+        try {\n+            fs::remove_all(m_path);\n+        } catch (...) {\n+            LogInfo(\"Failed to clean up temporary UTXO database at %s, please remove it manually.\",\n+                    fs::PathToString(m_path));\n+        }\n+    }\n+};\n+\n+UniValue CreateRolledBackUTXOSnapshot(\n+    NodeContext& node,\n+    Chainstate& chainstate,\n+    const CBlockIndex* target,\n+    AutoFile&& afile,\n+    const fs::path& path,\n+    const fs::path& tmppath)\n+{\n+    // Create a temporary leveldb to store the UTXO set that is being rolled back\n+    std::string temp_db_name{strprintf(\"temp_utxo_%d\", target->nHeight)};\n+    fs::path temp_db_path{fsbridge::AbsPathJoin(tmppath.parent_path(), fs::u8path(temp_db_name))};\n+    TemporaryUTXODatabase temp_db_cleaner{temp_db_path};\n+\n+    // Create temporary database\n+    DBParams db_params{\n+        .path = temp_db_path,\n+        .cache_bytes = size_t(1) << 24,  // 16MB cache\n+        .memory_only = false,\n+        .wipe_data = true,\n+        .obfuscate = false,\n+        .options = DBOptions{}\n+    };\n+\n+    std::unique_ptr<CCoinsViewDB> temp_db = std::make_unique<CCoinsViewDB>(\n+        std::move(db_params),\n+        CoinsViewOptions{}\n+    );\n+\n+    LogInfo(\"Copying current UTXO set to temporary database.\");\n+    {\n+        WITH_LOCK(::cs_main, chainstate.ForceFlushStateToDisk());\n+        CCoinsViewCache temp_cache(temp_db.get());\n+        temp_cache.SetBestBlock(chainstate.m_chain.Tip()->GetBlockHash());\n+\n+        std::unique_ptr<CCoinsViewCursor> cursor;\n+        WITH_LOCK(::cs_main, cursor = chainstate.CoinsDB().Cursor());\n+\n+        size_t coins_count = 0;\n+        while (cursor->Valid()) {\n+            node.rpc_interruption_point();\n+\n+            COutPoint key;\n+            Coin coin;\n+            if (cursor->GetKey(key) && cursor->GetValue(coin)) {\n+                temp_cache.AddCoin(key, std::move(coin), false);\n+                coins_count++;\n+\n+                // Log every 10M coins (optimized for mainnet)\n+                if (coins_count % 10'000'000 == 0) {\n+                    LogInfo(\"Copying UTXO set: %uM coins copied.\", coins_count / 1'000'000);\n+                }\n+\n+                // Flush periodically\n+                if (coins_count % 100'000 == 0) {\n+                    temp_cache.Flush();\n+                }\n+            }\n+            cursor->Next();\n+        }\n+\n+        temp_cache.Flush();\n+        LogInfo(\"UTXO set copy complete: %u coins total\", coins_count);\n+    }\n+\n+    LogInfo(\"Rolling back from height %d to %d\", chainstate.m_chain.Tip()->nHeight, target->nHeight);\n+\n+    const CBlockIndex* block_index{chainstate.m_chain.Tip()};\n+    CCoinsViewCache rollback_cache(temp_db.get());\n+    rollback_cache.SetBestBlock(block_index->GetBlockHash());\n+    size_t blocks_processed = 0;\n+    DisconnectResult res;\n+\n+    while (block_index->nHeight > target->nHeight) {\n+        node.rpc_interruption_point();\n+\n+        CBlock block;\n+        if (!node.chainman->m_blockman.ReadBlock(block, *block_index)) {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR,\n+                strprintf(\"Failed to read block at height %d\", block_index->nHeight));\n+        }\n+\n+        WITH_LOCK(::cs_main, res = chainstate.DisconnectBlock(block, block_index, rollback_cache));\n+        if (res == DISCONNECT_FAILED) {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR,\n+                strprintf(\"Failed to roll back block at height %d\", block_index->nHeight));\n+        }\n+\n+        blocks_processed++;\n+        if (blocks_processed % 500 == 0) {\n+            LogInfo(\"Rolled back %d blocks.\", blocks_processed);\n+            rollback_cache.Flush();\n+        }\n+\n+        block_index = block_index->pprev;\n+    }\n+\n+    rollback_cache.SetBestBlock(target->GetBlockHash());\n+    rollback_cache.Flush();\n+\n+    LogInfo(\"Rollback complete. Computing UTXO statistics for created txoutset dump.\");\n+    std::optional<CCoinsStats> maybe_stats = GetUTXOStats(temp_db.get(),\n+                                                          chainstate.m_blockman,\n+                                                          CoinStatsHashType::HASH_SERIALIZED,\n+                                                          node.rpc_interruption_point);\n+\n+    if (!maybe_stats) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to compute UTXO statistics\");\n+    }\n+\n+    std::unique_ptr<CCoinsViewCursor> pcursor{temp_db->Cursor()};\n+    if (!pcursor) {\n+        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Unable to create UTXO cursor\");",
      "path": "src/rpc/blockchain.cpp",
      "position": 302,
      "original_position": 302,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "original_commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "in_reply_to_id": null,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Might be able to add a functional test for this rpc error",
      "created_at": "2025-09-27T13:47:31Z",
      "updated_at": "2025-09-27T14:04:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#discussion_r2384175185",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384175185"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3232,
      "original_line": 3232,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384179539",
      "pull_request_review_id": 3274904950,
      "id": 2384179539,
      "node_id": "PRRC_kwDOABII586OG7FT",
      "diff_hunk": "@@ -3171,6 +3097,152 @@ static RPCHelpMan dumptxoutset()\n     };\n }\n \n+/**\n+ * RAII class that creates a temporary database directory in its constructor\n+ * and removes it in its destructor.\n+ */\n+class TemporaryUTXODatabase\n+{\n+    fs::path m_path;\n+public:\n+    TemporaryUTXODatabase(const fs::path& path) : m_path(path) {\n+        fs::create_directories(m_path);\n+    }\n+    ~TemporaryUTXODatabase() {\n+        try {\n+            fs::remove_all(m_path);",
      "path": "src/rpc/blockchain.cpp",
      "position": 183,
      "original_position": 183,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "original_commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "in_reply_to_id": null,
      "user": {
        "login": "kevkevinpal",
        "id": 15950706,
        "node_id": "MDQ6VXNlcjE1OTUwNzA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/15950706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kevkevinpal",
        "html_url": "https://github.com/kevkevinpal",
        "followers_url": "https://api.github.com/users/kevkevinpal/followers",
        "following_url": "https://api.github.com/users/kevkevinpal/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/kevkevinpal/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/kevkevinpal/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/kevkevinpal/subscriptions",
        "organizations_url": "https://api.github.com/users/kevkevinpal/orgs",
        "repos_url": "https://api.github.com/users/kevkevinpal/repos",
        "events_url": "https://api.github.com/users/kevkevinpal/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/kevkevinpal/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It might be useful to add a log here to inform the user the temp UTXO db was cleaned up since we mentioned in logs that we are creating a temp UTXO db",
      "created_at": "2025-09-27T14:01:30Z",
      "updated_at": "2025-09-27T14:04:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#discussion_r2384179539",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2384179539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3113,
      "original_line": 3113,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390336820",
      "pull_request_review_id": 3283254825,
      "id": 2390336820,
      "node_id": "PRRC_kwDOABII586OeaU0",
      "diff_hunk": "@@ -3020,9 +2992,8 @@ static RPCHelpMan dumptxoutset()\n     return RPCHelpMan{",
      "path": "src/rpc/blockchain.cpp",
      "position": 59,
      "original_position": 59,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "original_commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "in_reply_to_id": null,
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "## 💡 Improvement Needed\r\n\r\n**Type:** Maintainability\r\n\r\n**Lines:** 2992-3098\r\n\r\nThe `dumptxoutset` RPC function has been refactored to call `CreateRolledBackUTXOSnapshot` for rollback scenarios. However, the `dumptxoutset` function itself still contains a mix of responsibilities, including handling the 'latest' snapshot type and performing pruning checks. This could be further improved by extracting these distinct pieces of logic into their own dedicated helper functions or classes, leading to a more focused and maintainable `dumptxoutset` function.\r\n\r\n**Suggestion:**\r\nExtract the logic for handling the 'latest' snapshot type and the pruning checks into separate, well-defined functions or classes. This will make the `dumptxoutset` function primarily responsible for orchestrating the snapshot creation process, delegating specific tasks to these new components.",
      "created_at": "2025-09-30T08:32:28Z",
      "updated_at": "2025-09-30T08:32:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#discussion_r2390336820",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390336820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2992,
      "original_line": 2992,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390336871",
      "pull_request_review_id": 3283254825,
      "id": 2390336871,
      "node_id": "PRRC_kwDOABII586OeaVn",
      "diff_hunk": "@@ -3171,6 +3097,152 @@ static RPCHelpMan dumptxoutset()\n     };\n }\n \n+/**\n+ * RAII class that creates a temporary database directory in its constructor\n+ * and removes it in its destructor.\n+ */\n+class TemporaryUTXODatabase\n+{\n+    fs::path m_path;\n+public:\n+    TemporaryUTXODatabase(const fs::path& path) : m_path(path) {\n+        fs::create_directories(m_path);\n+    }\n+    ~TemporaryUTXODatabase() {\n+        try {",
      "path": "src/rpc/blockchain.cpp",
      "position": 173,
      "original_position": 173,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "original_commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "in_reply_to_id": null,
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "## ⚠️ Issue\r\n\r\n**Type:** Bug\r\n\r\n**Severity:** High\r\n\r\n**Lines:** 3112-3117\r\n\r\nThe `TemporaryUTXODatabase` RAII class is intended to clean up temporary UTXO database directories. However, if `fs::remove_all(m_path)` throws an exception, the cleanup fails, and the destructor logs an informational message but continues execution. This could lead to orphaned temporary directories on unclean shutdowns, requiring manual intervention. The current error handling is insufficient to guarantee cleanup.\r\n\r\n**Fix:**\r\nEnhance the exception handling within the `TemporaryUTXODatabase` destructor. Consider re-throwing the exception after logging, or implementing a more persistent cleanup mechanism that retries or logs a critical error to ensure the user is aware of the uncleaned state and the need for manual intervention. Alternatively, explore using a more robust temporary directory management solution if available.",
      "created_at": "2025-09-30T08:32:30Z",
      "updated_at": "2025-09-30T08:32:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#discussion_r2390336871",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390336871"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3112,
      "original_line": 3112,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390336930",
      "pull_request_review_id": 3283254825,
      "id": 2390336930,
      "node_id": "PRRC_kwDOABII586OeaWi",
      "diff_hunk": "@@ -3171,6 +3097,152 @@ static RPCHelpMan dumptxoutset()\n     };\n }\n \n+/**\n+ * RAII class that creates a temporary database directory in its constructor\n+ * and removes it in its destructor.\n+ */\n+class TemporaryUTXODatabase\n+{\n+    fs::path m_path;\n+public:\n+    TemporaryUTXODatabase(const fs::path& path) : m_path(path) {\n+        fs::create_directories(m_path);\n+    }\n+    ~TemporaryUTXODatabase() {\n+        try {\n+            fs::remove_all(m_path);\n+        } catch (...) {\n+            LogInfo(\"Failed to clean up temporary UTXO database at %s, please remove it manually.\",\n+                    fs::PathToString(m_path));\n+        }\n+    }\n+};\n+\n+UniValue CreateRolledBackUTXOSnapshot(\n+    NodeContext& node,\n+    Chainstate& chainstate,\n+    const CBlockIndex* target,\n+    AutoFile&& afile,\n+    const fs::path& path,\n+    const fs::path& tmppath)\n+{\n+    // Create a temporary leveldb to store the UTXO set that is being rolled back\n+    std::string temp_db_name{strprintf(\"temp_utxo_%d\", target->nHeight)};\n+    fs::path temp_db_path{fsbridge::AbsPathJoin(tmppath.parent_path(), fs::u8path(temp_db_name))};\n+    TemporaryUTXODatabase temp_db_cleaner{temp_db_path};\n+\n+    // Create temporary database\n+    DBParams db_params{\n+        .path = temp_db_path,\n+        .cache_bytes = size_t(1) << 24,  // 16MB cache\n+        .memory_only = false,\n+        .wipe_data = true,\n+        .obfuscate = false,\n+        .options = DBOptions{}\n+    };\n+\n+    std::unique_ptr<CCoinsViewDB> temp_db = std::make_unique<CCoinsViewDB>(\n+        std::move(db_params),\n+        CoinsViewOptions{}\n+    );\n+\n+    LogInfo(\"Copying current UTXO set to temporary database.\");\n+    {\n+        WITH_LOCK(::cs_main, chainstate.ForceFlushStateToDisk());\n+        CCoinsViewCache temp_cache(temp_db.get());\n+        temp_cache.SetBestBlock(chainstate.m_chain.Tip()->GetBlockHash());\n+\n+        std::unique_ptr<CCoinsViewCursor> cursor;\n+        WITH_LOCK(::cs_main, cursor = chainstate.CoinsDB().Cursor());\n+\n+        size_t coins_count = 0;\n+        while (cursor->Valid()) {\n+            node.rpc_interruption_point();\n+\n+            COutPoint key;\n+            Coin coin;\n+            if (cursor->GetKey(key) && cursor->GetValue(coin)) {\n+                temp_cache.AddCoin(key, std::move(coin), false);\n+                coins_count++;\n+\n+                // Log every 10M coins (optimized for mainnet)\n+                if (coins_count % 10'000'000 == 0) {\n+                    LogInfo(\"Copying UTXO set: %uM coins copied.\", coins_count / 1'000'000);\n+                }\n+\n+                // Flush periodically\n+                if (coins_count % 100'000 == 0) {",
      "path": "src/rpc/blockchain.cpp",
      "position": 235,
      "original_position": 235,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "original_commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "in_reply_to_id": null,
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "## 💡 Improvement Needed\r\n\r\n**Type:** Performance\r\n\r\n**Lines:** 3174-3176\r\n\r\nThe `CreateRolledBackUTXOSnapshot` function flushes the `temp_cache` every 100,000 coins. While this aims to prevent excessive memory usage, frequent flushes can introduce performance overhead due to repeated disk I/O operations. This might be suboptimal for very large UTXO sets.\r\n\r\n**Suggestion:**\r\nProfile the performance of the UTXO set copying process with different flush intervals. Consider increasing the flush interval (e.g., to 1,000,000 coins) or implementing a dynamic flushing strategy that adjusts based on memory usage or other performance metrics. This could reduce the I/O overhead and potentially speed up the initial UTXO set copy.",
      "created_at": "2025-09-30T08:32:32Z",
      "updated_at": "2025-09-30T08:32:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#discussion_r2390336930",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390336930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3174,
      "original_line": 3174,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390336989",
      "pull_request_review_id": 3283254825,
      "id": 2390336989,
      "node_id": "PRRC_kwDOABII586OeaXd",
      "diff_hunk": "@@ -3171,6 +3097,152 @@ static RPCHelpMan dumptxoutset()\n     };\n }\n \n+/**\n+ * RAII class that creates a temporary database directory in its constructor\n+ * and removes it in its destructor.\n+ */\n+class TemporaryUTXODatabase\n+{\n+    fs::path m_path;\n+public:\n+    TemporaryUTXODatabase(const fs::path& path) : m_path(path) {\n+        fs::create_directories(m_path);\n+    }\n+    ~TemporaryUTXODatabase() {\n+        try {\n+            fs::remove_all(m_path);\n+        } catch (...) {\n+            LogInfo(\"Failed to clean up temporary UTXO database at %s, please remove it manually.\",\n+                    fs::PathToString(m_path));\n+        }\n+    }\n+};\n+\n+UniValue CreateRolledBackUTXOSnapshot(\n+    NodeContext& node,\n+    Chainstate& chainstate,\n+    const CBlockIndex* target,\n+    AutoFile&& afile,\n+    const fs::path& path,\n+    const fs::path& tmppath)\n+{\n+    // Create a temporary leveldb to store the UTXO set that is being rolled back\n+    std::string temp_db_name{strprintf(\"temp_utxo_%d\", target->nHeight)};\n+    fs::path temp_db_path{fsbridge::AbsPathJoin(tmppath.parent_path(), fs::u8path(temp_db_name))};\n+    TemporaryUTXODatabase temp_db_cleaner{temp_db_path};\n+\n+    // Create temporary database\n+    DBParams db_params{\n+        .path = temp_db_path,\n+        .cache_bytes = size_t(1) << 24,  // 16MB cache\n+        .memory_only = false,\n+        .wipe_data = true,\n+        .obfuscate = false,\n+        .options = DBOptions{}\n+    };\n+\n+    std::unique_ptr<CCoinsViewDB> temp_db = std::make_unique<CCoinsViewDB>(\n+        std::move(db_params),\n+        CoinsViewOptions{}\n+    );\n+\n+    LogInfo(\"Copying current UTXO set to temporary database.\");\n+    {\n+        WITH_LOCK(::cs_main, chainstate.ForceFlushStateToDisk());\n+        CCoinsViewCache temp_cache(temp_db.get());\n+        temp_cache.SetBestBlock(chainstate.m_chain.Tip()->GetBlockHash());\n+\n+        std::unique_ptr<CCoinsViewCursor> cursor;\n+        WITH_LOCK(::cs_main, cursor = chainstate.CoinsDB().Cursor());\n+\n+        size_t coins_count = 0;\n+        while (cursor->Valid()) {\n+            node.rpc_interruption_point();\n+\n+            COutPoint key;\n+            Coin coin;\n+            if (cursor->GetKey(key) && cursor->GetValue(coin)) {\n+                temp_cache.AddCoin(key, std::move(coin), false);\n+                coins_count++;\n+\n+                // Log every 10M coins (optimized for mainnet)\n+                if (coins_count % 10'000'000 == 0) {\n+                    LogInfo(\"Copying UTXO set: %uM coins copied.\", coins_count / 1'000'000);\n+                }\n+\n+                // Flush periodically\n+                if (coins_count % 100'000 == 0) {\n+                    temp_cache.Flush();\n+                }\n+            }\n+            cursor->Next();\n+        }\n+\n+        temp_cache.Flush();\n+        LogInfo(\"UTXO set copy complete: %u coins total\", coins_count);\n+    }\n+\n+    LogInfo(\"Rolling back from height %d to %d\", chainstate.m_chain.Tip()->nHeight, target->nHeight);\n+\n+    const CBlockIndex* block_index{chainstate.m_chain.Tip()};\n+    CCoinsViewCache rollback_cache(temp_db.get());\n+    rollback_cache.SetBestBlock(block_index->GetBlockHash());\n+    size_t blocks_processed = 0;\n+    DisconnectResult res;\n+\n+    while (block_index->nHeight > target->nHeight) {\n+        node.rpc_interruption_point();\n+\n+        CBlock block;\n+        if (!node.chainman->m_blockman.ReadBlock(block, *block_index)) {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR,\n+                strprintf(\"Failed to read block at height %d\", block_index->nHeight));\n+        }\n+\n+        WITH_LOCK(::cs_main, res = chainstate.DisconnectBlock(block, block_index, rollback_cache));\n+        if (res == DISCONNECT_FAILED) {\n+            throw JSONRPCError(RPC_INTERNAL_ERROR,\n+                strprintf(\"Failed to roll back block at height %d\", block_index->nHeight));\n+        }\n+\n+        blocks_processed++;\n+        if (blocks_processed % 500 == 0) {\n+            LogInfo(\"Rolled back %d blocks.\", blocks_processed);\n+            rollback_cache.Flush();",
      "path": "src/rpc/blockchain.cpp",
      "position": 272,
      "original_position": 272,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "original_commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "in_reply_to_id": null,
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "## 💡 Improvement Needed\r\n\r\n**Type:** Performance\r\n\r\n**Line:** 3211\r\n\r\nThe `CreateRolledBackUTXOSnapshot` function flushes the `rollback_cache` every 500 blocks during the rollback process. Similar to the UTXO set copying, frequent flushes can impact performance. For deep rollbacks, this could become a significant bottleneck.\r\n\r\n**Suggestion:**\r\nEvaluate the impact of the `rollback_cache` flush frequency on the overall rollback performance. Consider increasing the flush interval or implementing a more adaptive flushing mechanism. Profiling the rollback process with different flush intervals would be beneficial to determine the optimal setting.",
      "created_at": "2025-09-30T08:32:33Z",
      "updated_at": "2025-09-30T08:32:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#discussion_r2390336989",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390336989"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3211,
      "original_line": 3211,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390337064",
      "pull_request_review_id": 3283254825,
      "id": 2390337064,
      "node_id": "PRRC_kwDOABII586OeaYo",
      "diff_hunk": "@@ -3171,6 +3097,152 @@ static RPCHelpMan dumptxoutset()\n     };\n }\n \n+/**\n+ * RAII class that creates a temporary database directory in its constructor\n+ * and removes it in its destructor.\n+ */\n+class TemporaryUTXODatabase\n+{\n+    fs::path m_path;\n+public:\n+    TemporaryUTXODatabase(const fs::path& path) : m_path(path) {\n+        fs::create_directories(m_path);\n+    }\n+    ~TemporaryUTXODatabase() {\n+        try {\n+            fs::remove_all(m_path);\n+        } catch (...) {\n+            LogInfo(\"Failed to clean up temporary UTXO database at %s, please remove it manually.\",\n+                    fs::PathToString(m_path));\n+        }\n+    }\n+};\n+\n+UniValue CreateRolledBackUTXOSnapshot(\n+    NodeContext& node,\n+    Chainstate& chainstate,\n+    const CBlockIndex* target,\n+    AutoFile&& afile,\n+    const fs::path& path,\n+    const fs::path& tmppath)\n+{\n+    // Create a temporary leveldb to store the UTXO set that is being rolled back\n+    std::string temp_db_name{strprintf(\"temp_utxo_%d\", target->nHeight)};\n+    fs::path temp_db_path{fsbridge::AbsPathJoin(tmppath.parent_path(), fs::u8path(temp_db_name))};\n+    TemporaryUTXODatabase temp_db_cleaner{temp_db_path};\n+\n+    // Create temporary database\n+    DBParams db_params{\n+        .path = temp_db_path,\n+        .cache_bytes = size_t(1) << 24,  // 16MB cache",
      "path": "src/rpc/blockchain.cpp",
      "position": 198,
      "original_position": 198,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "original_commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "in_reply_to_id": null,
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "## 💡 Improvement Needed\r\n\r\n**Type:** Maintainability\r\n\r\n**Line:** 3137\r\n\r\nThe temporary database used in `CreateRolledBackUTXOSnapshot` has a hardcoded cache size of 16MB (`size_t(1) << 24`). This fixed value might not be optimal across all system configurations and usage patterns. Hardcoding such values can make it difficult to tune performance without code modification.\r\n\r\n**Suggestion:**\r\nConsider making the cache size configurable. This could be achieved by defining it as a constant at a higher scope, passing it as a parameter to the function, or potentially deriving it based on available system resources. This would allow for easier experimentation and optimization of the cache size for different environments.",
      "created_at": "2025-09-30T08:32:35Z",
      "updated_at": "2025-09-30T08:32:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#discussion_r2390337064",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390337064"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3137,
      "original_line": 3137,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390337143",
      "pull_request_review_id": 3283254825,
      "id": 2390337143,
      "node_id": "PRRC_kwDOABII586OeaZ3",
      "diff_hunk": "@@ -19,16 +19,29 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n \n-    def check_expected_network(self, node, active):\n-        rev_file = node.blocks_path / \"rev00000.dat\"\n-        bogus_file = node.blocks_path / \"bogus.dat\"\n-        rev_file.rename(bogus_file)\n-        assert_raises_rpc_error(\n-            -1, 'Could not roll back to requested height.', node.dumptxoutset, 'utxos.dat', rollback=99)\n-        assert_equal(node.getnetworkinfo()['networkactive'], active)\n+    def test_dumptxoutset_with_fork(self):",
      "path": "test/functional/rpc_dumptxoutset.py",
      "position": 11,
      "original_position": 11,
      "commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "original_commit_id": "6d409d59704a026a56d18856ab2f9e90eea62186",
      "in_reply_to_id": null,
      "user": {
        "login": "starkshade",
        "id": 234865730,
        "node_id": "U_kgDODf_EQg",
        "avatar_url": "https://avatars.githubusercontent.com/u/234865730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/starkshade",
        "html_url": "https://github.com/starkshade",
        "followers_url": "https://api.github.com/users/starkshade/followers",
        "following_url": "https://api.github.com/users/starkshade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/starkshade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/starkshade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/starkshade/subscriptions",
        "organizations_url": "https://api.github.com/users/starkshade/orgs",
        "repos_url": "https://api.github.com/users/starkshade/repos",
        "events_url": "https://api.github.com/users/starkshade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/starkshade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "## ⚠️ Code Issue\r\n\r\n**Lines:** 22-31\r\n\r\n```python\r\n    def check_expected_network(self, node, active):\r\n        rev_file = node.blocks_path / \"rev00000.dat\"\r\n        bogus_file = node.blocks_path / \"bogus.dat\"\r\n        rev_file.rename(bogus_file)\r\n        assert_raises_rpc_error(\r\n            -1, 'Could not roll back to requested height.', node.dumptxoutset, 'utxos.dat', rollback=99)\r\n        assert_equal(node.getnetworkinfo()['networkactive'], active)\r\n\r\n        # Cleanup\r\n        bogus_file.rename(rev_file)\r\n```\r\n\r\nThe `check_expected_network` function was removed. This function appears to have been used to test the behavior of `dumptxoutset` when network activity is suspended or active, and to ensure the correct network state is maintained after a failed RPC call. Its removal means these specific test cases are no longer covered.",
      "created_at": "2025-09-30T08:32:37Z",
      "updated_at": "2025-09-30T08:32:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33477#discussion_r2390337143",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2390337143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33477"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 22,
      "original_line": 22,
      "side": "RIGHT"
    }
  ]
}