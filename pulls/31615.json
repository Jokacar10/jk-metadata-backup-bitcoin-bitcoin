{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615",
    "id": 2263728332,
    "node_id": "PR_kwDOABII586G7cDM",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31615",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31615.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31615.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31615",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31615/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/57bd31eac470eef41e819e7ad4957629734ce414",
    "number": 31615,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Ensure assumevalid is always used during reindex",
    "user": {
      "login": "Eunovo",
      "id": 37949128,
      "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Eunovo",
      "html_url": "https://github.com/Eunovo",
      "followers_url": "https://api.github.com/users/Eunovo/followers",
      "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
      "organizations_url": "https://api.github.com/users/Eunovo/orgs",
      "repos_url": "https://api.github.com/users/Eunovo/repos",
      "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Eunovo/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "assumevalid is not always used during reindex because the chainwork of the best header might be less than the minimumchainwork if the previous IBD was interrupted before it could connect blocks up to minimumchainwork.\r\nSee Issue https://github.com/bitcoin/bitcoin/issues/31494\r\n\r\nThis does not occur during normal IBD because the node does not connect blocks before minchainwork headers.",
    "labels": [],
    "created_at": "2025-01-07T11:52:23Z",
    "updated_at": "2025-01-10T13:59:01Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "e1dccf2bb15fd6feaf756e25aa508fbe6b82f9f2",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Eunovo:31494-reindex-assumevalid",
      "ref": "31494-reindex-assumevalid",
      "sha": "57bd31eac470eef41e819e7ad4957629734ce414",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 755831492,
        "node_id": "R_kgDOLQ0SxA",
        "name": "bitcoin",
        "full_name": "Eunovo/bitcoin",
        "owner": {
          "login": "Eunovo",
          "id": 37949128,
          "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
          "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Eunovo",
          "html_url": "https://github.com/Eunovo",
          "followers_url": "https://api.github.com/users/Eunovo/followers",
          "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
          "organizations_url": "https://api.github.com/users/Eunovo/orgs",
          "repos_url": "https://api.github.com/users/Eunovo/repos",
          "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Eunovo/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/Eunovo/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Eunovo/bitcoin",
        "archive_url": "https://api.github.com/repos/Eunovo/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Eunovo/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Eunovo/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Eunovo/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Eunovo/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Eunovo/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Eunovo/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Eunovo/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Eunovo/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Eunovo/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Eunovo/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Eunovo/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Eunovo/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Eunovo/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Eunovo/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Eunovo/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Eunovo/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Eunovo/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Eunovo/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Eunovo/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Eunovo/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Eunovo/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Eunovo/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Eunovo/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Eunovo/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Eunovo/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Eunovo/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Eunovo/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Eunovo/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Eunovo/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Eunovo/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Eunovo/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Eunovo/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Eunovo/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Eunovo/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Eunovo/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Eunovo/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Eunovo/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Eunovo/bitcoin/hooks",
        "svn_url": "https://github.com/Eunovo/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 235214,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-10T13:47:44Z",
        "created_at": "2024-02-11T07:44:19Z",
        "updated_at": "2024-02-11T07:44:19Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "433412fd8478923dfdb20044f74c5d1e19fa8dd8",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36515,
        "stargazers_count": 81288,
        "watchers_count": 81288,
        "size": 274020,
        "default_branch": "master",
        "open_issues_count": 685,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-10T13:53:40Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-01-10T13:53:46Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
      }
    },
    "author_association": "NONE",
    "draft": false,
    "additions": 85,
    "deletions": 3,
    "changed_files": 2,
    "commits": 2,
    "review_comments": 4,
    "comments": 1
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk1MTgxMmIwYWM5MzQyNGVkNGFkZjA5NDI3Y2EwNDJhODMyYzczZWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/951812b0ac93424ed4adf09427ca042a832c73ef",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/951812b0ac93424ed4adf09427ca042a832c73ef",
      "tree": {
        "sha": "7a19fadca934d17ace134a96b28b32d5cecfc87c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a19fadca934d17ace134a96b28b32d5cecfc87c"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6475849c4020f3aba82357631cfb06978662689e",
          "sha": "6475849c4020f3aba82357631cfb06978662689e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/6475849c4020f3aba82357631cfb06978662689e"
        }
      ],
      "message": "validation.cpp: Bypass minimumchainwork test during reindex\n\n-reindex deletes the block tree db and attempts to rebuild it based on local block files, without attempting to re-request headers for which we don't have the full block yet (because we didn't get to that point in the previous IBD). This might cause the best known chain to have a chainwork less than the minimumchainwork\n\nBypassing the minimuchainwork test while `LoadingBlocks() == true` allows reindex to use assumevalid",
      "committer": {
        "name": "Eunovo",
        "email": "eunovo9@gmail.com",
        "date": "2025-01-07T11:43:13Z"
      },
      "author": {
        "name": "Eunovo",
        "email": "eunovo9@gmail.com",
        "date": "2025-01-07T11:30:56Z"
      },
      "sha": "951812b0ac93424ed4adf09427ca042a832c73ef"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU3YmQzMWVhYzQ3MGVlZjQxZTgxOWU3YWQ0OTU3NjI5NzM0Y2U0MTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57bd31eac470eef41e819e7ad4957629734ce414",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/57bd31eac470eef41e819e7ad4957629734ce414",
      "tree": {
        "sha": "c66ee35ebd5612ffc86214648ba685fe7b3c95b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c66ee35ebd5612ffc86214648ba685fe7b3c95b8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/951812b0ac93424ed4adf09427ca042a832c73ef",
          "sha": "951812b0ac93424ed4adf09427ca042a832c73ef",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/951812b0ac93424ed4adf09427ca042a832c73ef"
        }
      ],
      "message": "test: Check that reindex always uses -assumevalid",
      "committer": {
        "name": "Eunovo",
        "email": "eunovo9@gmail.com",
        "date": "2025-01-07T11:43:13Z"
      },
      "author": {
        "name": "Eunovo",
        "email": "eunovo9@gmail.com",
        "date": "2025-01-06T18:44:17Z"
      },
      "sha": "57bd31eac470eef41e819e7ad4957629734ce414"
    },
    {
      "event": "commented",
      "id": 2575096378,
      "node_id": "IC_kwDOABII586ZfNo6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2575096378",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T11:52:27Z",
      "updated_at": "2025-01-07T11:52:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31615.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#issuecomment-2575096378",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31615"
    },
    {
      "event": "reviewed",
      "id": 2534670554,
      "node_id": "PRR_kwDOABII586XFADa",
      "url": null,
      "actor": null,
      "commit_id": "57bd31eac470eef41e819e7ad4957629734ce414",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#pullrequestreview-2534670554",
      "submitted_at": "2025-01-07T16:13:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905647128",
      "pull_request_review_id": 2534670554,
      "id": 1905647128,
      "node_id": "PRRC_kwDOABII585xld4Y",
      "diff_hunk": "@@ -2499,7 +2499,7 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (it != m_blockman.m_block_index.end()) {\n             if (it->second.GetAncestor(pindex->nHeight) == pindex &&\n                 m_chainman.m_best_header->GetAncestor(pindex->nHeight) == pindex &&\n-                m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork()) {\n+                (m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork() || m_chainman.m_blockman.LoadingBlocks())) {",
      "path": "src/validation.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "57bd31eac470eef41e819e7ad4957629734ce414",
      "original_commit_id": "951812b0ac93424ed4adf09427ca042a832c73ef",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think that this won't achieve the desired result: If the assumevalid block is not in the block index (which will be the case if IBD crashed midway before that block was downloaded, and a reindex is done) we'll abort above in line 2499 and  never get to this spot.",
      "created_at": "2025-01-07T15:39:12Z",
      "updated_at": "2025-01-07T16:13:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r1905647128",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905647128"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2502,
      "original_line": 2502,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905885950",
      "pull_request_review_id": 2535103631,
      "id": 1905885950,
      "node_id": "PRRC_kwDOABII585xmYL-",
      "diff_hunk": "@@ -2499,7 +2499,7 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (it != m_blockman.m_block_index.end()) {\n             if (it->second.GetAncestor(pindex->nHeight) == pindex &&\n                 m_chainman.m_best_header->GetAncestor(pindex->nHeight) == pindex &&\n-                m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork()) {\n+                (m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork() || m_chainman.m_blockman.LoadingBlocks())) {",
      "path": "src/validation.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "57bd31eac470eef41e819e7ad4957629734ce414",
      "original_commit_id": "951812b0ac93424ed4adf09427ca042a832c73ef",
      "in_reply_to_id": 1905647128,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's true. I thought https://github.com/bitcoin/bitcoin/issues/31494 was focused on the best header chainwork not being up to minimumchainwork. I could change this to always skip script checks during a reindex, but IIUC having a block on disk doesn't mean that it was connected during the previous IBD. Might be worth it to sync headers first then connect blocks even during reindex.",
      "created_at": "2025-01-07T18:29:47Z",
      "updated_at": "2025-01-07T18:29:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r1905885950",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905885950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2502,
      "original_line": 2502,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1906056946",
      "pull_request_review_id": 2535395138,
      "id": 1906056946,
      "node_id": "PRRC_kwDOABII585xnB7y",
      "diff_hunk": "@@ -2499,7 +2499,7 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (it != m_blockman.m_block_index.end()) {\n             if (it->second.GetAncestor(pindex->nHeight) == pindex &&\n                 m_chainman.m_best_header->GetAncestor(pindex->nHeight) == pindex &&\n-                m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork()) {\n+                (m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork() || m_chainman.m_blockman.LoadingBlocks())) {",
      "path": "src/validation.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "57bd31eac470eef41e819e7ad4957629734ce414",
      "original_commit_id": "951812b0ac93424ed4adf09427ca042a832c73ef",
      "in_reply_to_id": 1905647128,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I really wasn't sure what the best solution is when I opened the issue and still am not, but these are my thoughts:\r\n\r\nYes, there are two reasons why we might not apply assumevalid during a reindex currently:\r\n1.) The best header has not enough chainwork\r\n2.) The assumevalid block is not in our block index\r\n\r\n> I could change this to always skip script checks during a reindex, but IIUC having a block on disk doesn't mean that it was connected during the previous IBD. \r\n\r\nI think the question is rather how well we can avoid to connect blocks skipping the script checks during the reindex that we would have fully validated in the original run if we hadn't crashed. Assuming that the user provides the same `-assumevalid`  arg to the reindex run that they did in the original run I can see the following cases:\r\n1.) The user provides an existing block (or nothing, so that the default hash from chainparams is used) that we just haven't downloaded yet because it's later in the best chain - if we don't have it in our index we'd be justified to skip script checks - if we do have it in our index, no special rules are necessary for reindexing. I think that's the most common case for users.\r\n2.) The user provides `-assumevalid=0`  - we should respect that also in the reindex run and fully validate everything.\r\n3.) The user provides a block hash with `-assumevalid` that is non-existing / not in the best chain. I think that's the critical case because here we would have fully validated everything in the original run, but won't validate anything during the reindex. But arguably that's not a common case / the user's fault for providing this bad block, so maybe it can be tolerated?\r\n\r\n> Might be worth it to sync headers first then connect blocks even during reindex.\r\n\r\nYes, that's the second option I thought of. I think we can't just stop and wait for the headers to be downloaded - reindex should be able to finish without having a p2p connection, even if that means no assumevalid. But I was thinking of maybe just disabling the relevant `LoadingBlocks()` guards in net_processing, so that we'd download headers in parallel to `ActivateBestChain()`, and would change to use assumevalid after a few thousand blocks or so. That seem a bit messy (we'd still connect _some_ blocks without assumevalid) and requires testing but might work well in practice?!\r\n\r\n",
      "created_at": "2025-01-07T21:23:34Z",
      "updated_at": "2025-01-07T21:23:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r1906056946",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1906056946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2502,
      "original_line": 2502,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910413909",
      "pull_request_review_id": 2542504562,
      "id": 1910413909,
      "node_id": "PRRC_kwDOABII585x3ppV",
      "diff_hunk": "@@ -2499,7 +2499,7 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (it != m_blockman.m_block_index.end()) {\n             if (it->second.GetAncestor(pindex->nHeight) == pindex &&\n                 m_chainman.m_best_header->GetAncestor(pindex->nHeight) == pindex &&\n-                m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork()) {\n+                (m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork() || m_chainman.m_blockman.LoadingBlocks())) {",
      "path": "src/validation.cpp",
      "position": 5,
      "original_position": 5,
      "commit_id": "57bd31eac470eef41e819e7ad4957629734ce414",
      "original_commit_id": "951812b0ac93424ed4adf09427ca042a832c73ef",
      "in_reply_to_id": 1905647128,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I created another test to check if blocks rejected in the normal IBD run get loaded during a `-reindex`. The test reveals that it does load the invalid block and it will connect it if script checks are skipped, see https://github.com/Eunovo/bitcoin/commit/1ff4e5ee78418a30ba1ea9c384b8c7ee43435ce6\r\n\r\nIIUC During a reindex, the node does not know what blocks were connected in the previous run so it can't safely skip checks. It looks to me like we have to:\r\n1. Sync headers before connecting blocks during  reindex OR\r\n2. Persist data to show that we previously connected this block (IIUC this exact data exists but gets deleted during reindex, maybe we can preserve the relevant data we need?)",
      "created_at": "2025-01-10T13:59:01Z",
      "updated_at": "2025-01-10T13:59:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r1910413909",
      "author_association": "NONE",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910413909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2502,
      "original_line": 2502,
      "side": "RIGHT"
    }
  ]
}