{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615",
    "id": 2263728332,
    "node_id": "PR_kwDOABII586G7cDM",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31615",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31615.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31615.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31615",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31615/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
    "number": 31615,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "validation: ensure assumevalid is always used during reindex",
    "user": {
      "login": "Eunovo",
      "id": 37949128,
      "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Eunovo",
      "html_url": "https://github.com/Eunovo",
      "followers_url": "https://api.github.com/users/Eunovo/followers",
      "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
      "organizations_url": "https://api.github.com/users/Eunovo/orgs",
      "repos_url": "https://api.github.com/users/Eunovo/repos",
      "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Eunovo/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "assumevalid may be ignored during reindex for the following reasons:\r\n- the assumevalid block is not in the block index:  this happens when the assumevalid block could not be downloaded before the previous IBD run was interrupted\r\n-  the chainwork of the best header is less than the minimumchainwork: happens if the previous IBD was interrupted before it could connect blocks up to minimumchainwork. See Issue https://github.com/bitcoin/bitcoin/issues/31494\r\n\r\nThis PR fixes this by skipping script verification during reindex if assumevalid is enabled. ",
    "labels": [
      {
        "id": 118379652,
        "node_id": "MDU6TGFiZWwxMTgzNzk2NTI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Validation",
        "name": "Validation",
        "color": "6060aa",
        "default": false
      },
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2025-01-07T11:52:23Z",
    "updated_at": "2025-06-18T04:26:00Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "ac805dc2b338c2bcc00ef4cc3126ec107bb16eb8",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "Eunovo:31494-reindex-assumevalid",
      "ref": "31494-reindex-assumevalid",
      "sha": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 755831492,
        "node_id": "R_kgDOLQ0SxA",
        "name": "bitcoin",
        "full_name": "Eunovo/bitcoin",
        "owner": {
          "login": "Eunovo",
          "id": 37949128,
          "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
          "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Eunovo",
          "html_url": "https://github.com/Eunovo",
          "followers_url": "https://api.github.com/users/Eunovo/followers",
          "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
          "organizations_url": "https://api.github.com/users/Eunovo/orgs",
          "repos_url": "https://api.github.com/users/Eunovo/repos",
          "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Eunovo/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/Eunovo/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Eunovo/bitcoin",
        "archive_url": "https://api.github.com/repos/Eunovo/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Eunovo/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Eunovo/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Eunovo/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Eunovo/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Eunovo/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Eunovo/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Eunovo/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Eunovo/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Eunovo/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Eunovo/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Eunovo/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Eunovo/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Eunovo/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Eunovo/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Eunovo/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Eunovo/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Eunovo/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Eunovo/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Eunovo/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Eunovo/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Eunovo/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Eunovo/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Eunovo/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Eunovo/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Eunovo/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Eunovo/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Eunovo/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Eunovo/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Eunovo/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Eunovo/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Eunovo/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Eunovo/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Eunovo/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Eunovo/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Eunovo/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Eunovo/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Eunovo/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Eunovo/bitcoin/hooks",
        "svn_url": "https://github.com/Eunovo/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 242963,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-09T12:20:32Z",
        "created_at": "2024-02-11T07:44:19Z",
        "updated_at": "2025-05-02T08:08:35Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "770d39a37652d40885533fecce37e9f71cc0d051",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37392,
        "stargazers_count": 84203,
        "watchers_count": 84203,
        "size": 284244,
        "default_branch": "master",
        "open_issues_count": 753,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-06-17T18:12:50Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-06-18T03:29:07Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 127,
    "deletions": 15,
    "changed_files": 4,
    "commits": 2,
    "review_comments": 17,
    "comments": 7
  },
  "events": [
    {
      "event": "commented",
      "id": 2575096378,
      "node_id": "IC_kwDOABII586ZfNo6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2575096378",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T11:52:27Z",
      "updated_at": "2025-06-18T04:26:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31615.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [l0rinc](https://github.com/bitcoin/bitcoin/pull/31615#issuecomment-2624782947), [mzumsande](https://github.com/bitcoin/bitcoin/pull/31615#pullrequestreview-2668456532) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#30214](https://github.com/bitcoin/bitcoin/pull/30214) (refactor: Improve assumeutxo state representation by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#issuecomment-2575096378",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31615"
    },
    {
      "event": "reviewed",
      "id": 2534670554,
      "node_id": "PRR_kwDOABII586XFADa",
      "url": null,
      "actor": null,
      "commit_id": "57bd31eac470eef41e819e7ad4957629734ce414",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#pullrequestreview-2534670554",
      "submitted_at": "2025-01-07T16:13:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
    },
    {
      "event": "commented",
      "id": 2599687406,
      "node_id": "IC_kwDOABII586a9BTu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2599687406",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-18T11:56:57Z",
      "updated_at": "2025-01-18T11:56:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "I had an offline conversation with @mzumsande. During the reindex, we can apply assumevalid for following cases:\r\n- If the assumevalid block is the index, then we can skip script checks for all ancestors of the assumevalid block\r\n- If the assumevalid block is not in the index, then the initial IBD run had not downloaded the assumevalid block yet then the blocks on disk are ancestors of the assumevalid block and we can still skip script verification\r\n\r\nThen we download headers from peers in parallel to ActivateBestChain()\r\n\r\nI'll put this in draft while I implement and test this over  the next few days",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#issuecomment-2599687406",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31615"
    },
    {
      "event": "mentioned",
      "id": 15985688473,
      "node_id": "MEE_lADOABII586lQ1oXzwAAAAO40j-Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15985688473",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-18T11:56:58Z"
    },
    {
      "event": "subscribed",
      "id": 15985688475,
      "node_id": "SE_lADOABII586lQ1oXzwAAAAO40j-b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15985688475",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-18T11:56:58Z"
    },
    {
      "event": "convert_to_draft",
      "id": 15985688601,
      "node_id": "CTDE_lADOABII586lQ1oXzwAAAAO40kAZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15985688601",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-18T11:57:05Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16110088151,
      "node_id": "HRFPE_lADOABII586lQ1oXzwAAAAPAPG_X",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16110088151",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "89ca265501d3a7dfd0e15bfe02a6a5a94d562670",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/89ca265501d3a7dfd0e15bfe02a6a5a94d562670",
      "created_at": "2025-01-29T15:37:25Z"
    },
    {
      "event": "labeled",
      "id": 16111050577,
      "node_id": "LE_lADOABII586lQ1oXzwAAAAPASx9R",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16111050577",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-29T16:42:58Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16111852039,
      "node_id": "HRFPE_lADOABII586lQ1oXzwAAAAPAV1oH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16111852039",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fda93dfae214f9f93283827f8fddacc0df1d4337",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/fda93dfae214f9f93283827f8fddacc0df1d4337",
      "created_at": "2025-01-29T17:43:05Z"
    },
    {
      "event": "unlabeled",
      "id": 16112677077,
      "node_id": "UNLE_lADOABII586lQ1oXzwAAAAPAY_DV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16112677077",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-29T18:55:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2624782947,
      "node_id": "IC_kwDOABII586ccwJj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2624782947",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-30T15:17:25Z",
      "updated_at": "2025-01-30T15:18:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm not sure whether `LoadingBlocks` is the correct way to solve it or not (I would need someone else to opine on that, I can't tell if this can err on the side of not checking the scripts at all for some edge case).\r\n\r\nI can confirm however that this does seem to solve the issue I had, reported in https://github.com/bitcoin/bitcoin/issues/31494 (i.e. reindex(-chainstate) after a partial IBD always enabling script verification).\r\n\r\n-----\r\n\r\nTo test it, I have added a `LogWarning(\"fScriptChecks is %s\", fScriptChecks);` after the assignments and ran it with master vs the branch:\r\n```bash\r\n   cmake -B build -DCMAKE_BUILD_TYPE=Debug && cmake --build build -j$(nproc) \\\r\n&& mkdir -p demo && build/src/bitcoind -datadir=demo -stopatheight=100 \\\r\n&& build/src/bitcoind -datadir=demo -reindex-chainstate -stopatheight=10\r\n```\r\n\r\n> master\r\n```bash\r\n[warning] fScriptChecks is true\r\n```\r\n\r\n> Eunovo:31494-reindex-assumevalid\r\n```bash\r\n[warning] fScriptChecks is false\r\n```\r\n\r\n----\r\n\r\nI can also confirm that adding `-assumevalid=0` will enable script checking from the beginning and that `-assumevalid=000000009b7262315dbf071787ad3656097b892abffd1f95a1a022f896f533fc` has 5 fScriptChecks=false values after which script checking is (correctly) enabled again.\r\n\r\n---\r\n\r\nI also checked that the new `assume_valid` test passes here and fails correctly on master (though it's *very* slow, we have to check if there's a way to speed it up somewhat)\r\n\r\n<details>\r\n<summary>Details</summary>\r\n\r\n```bash\r\n2025-01-30T15:08:22.897000Z TestFramework (INFO): Success\r\n2025-01-30T15:08:31.343000Z TestFramework (INFO): Restarting node while reindexing..\r\n2025-01-30T15:08:32.551000Z TestFramework (INFO): Testing reindex with -assumevalid\r\n2025-01-30T15:09:23.963000Z TestFramework (INFO): Testing reindex with assumevalid block in block index and minchainwork > best_header chainwork\r\n2025-01-30T15:09:52.592000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n  File \"/Users/lorinc/IdeaProjects/bitcoin/test/functional/test_framework/test_framework.py\", line 135, in main\r\n    self.run_test()\r\n    ~~~~~~~~~~~~~^^\r\n  File \"/Users/lorinc/IdeaProjects/bitcoin/build/test/functional/feature_reindex.py\", line 203, in run_test\r\n    self.assume_valid()\r\n    ~~~~~~~~~~~~~~~~~^^\r\n```\r\n\r\n</details>\r\n\r\n----\r\n\r\nSo from me it's an approach ACK, but someone else needs to validate the implementation details and the corner cases that can result from this.\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#issuecomment-2624782947",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31615"
    },
    {
      "event": "commented",
      "id": 2624877742,
      "node_id": "IC_kwDOABII586cdHSu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2624877742",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-30T15:51:52Z",
      "updated_at": "2025-01-30T15:51:52Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I'm not sure whether `LoadingBlocks` is the correct way to solve it or not (I would need someone else to opine on that, I can't tell if this can err on the side of not checking the scripts at all for some edge case).\r\n\r\nI agree too. `LoadingBlocks()` is `true` when blocks are being reindexed or  when new blocks are being loaded with `-loadblocks` .  I intend to move away from `LoadingBlocks()` to something that's only true when blockfiles are being reindexed.\r\n\r\n> I also checked that the new `assume_valid` test passes here and fails correctly on master (though it's _very_ slow, we have to check if there's a way to speed it up somewhat)\r\n\r\nI'll look into this!",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#issuecomment-2624877742",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31615"
    },
    {
      "event": "unsubscribed",
      "id": 16129566785,
      "node_id": "UE_lADOABII586lQ1oXzwAAAAPBZahB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16129566785",
      "actor": {
        "login": "PRADACANDI18",
        "id": 91190628,
        "node_id": "MDQ6VXNlcjkxMTkwNjI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/91190628?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PRADACANDI18",
        "html_url": "https://github.com/PRADACANDI18",
        "followers_url": "https://api.github.com/users/PRADACANDI18/followers",
        "following_url": "https://api.github.com/users/PRADACANDI18/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PRADACANDI18/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PRADACANDI18/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PRADACANDI18/subscriptions",
        "organizations_url": "https://api.github.com/users/PRADACANDI18/orgs",
        "repos_url": "https://api.github.com/users/PRADACANDI18/repos",
        "events_url": "https://api.github.com/users/PRADACANDI18/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PRADACANDI18/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-30T20:13:57Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16301232476,
      "node_id": "HRFPE_lADOABII586lQ1oXzwAAAAPLoRFc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16301232476",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "98dce62e11fe3b75b8f354f607ad2852e0caf861",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/98dce62e11fe3b75b8f354f607ad2852e0caf861",
      "created_at": "2025-02-13T18:49:00Z"
    },
    {
      "event": "reviewed",
      "id": 2668456532,
      "node_id": "PRR_kwDOABII586fDWpU",
      "url": null,
      "actor": null,
      "commit_id": "98dce62e11fe3b75b8f354f607ad2852e0caf861",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK\r\n\r\nI think the current approach would work.\r\nEven though it means that if the user provided a bad / non-existing assumeutxo hash they could skip script validation during a reindex when they wouldn't have in the original run,  I'd  say that's not a major problem because a reindex should only be necessary in case of a a db corruption, which should not be remotely triggerable.\r\n\r\nSo it will hopefully make the reindex a bit faster in case of a database corruption, while not changing the assumevalid security assumption very much, and it does respect `-assumevalid=0`.\r\n\r\nThough it would be good to have some experienced contributors chime in that were around when assumevalid was introduced (#9484).",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#pullrequestreview-2668456532",
      "submitted_at": "2025-03-07T21:49:32Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
    },
    {
      "event": "ready_for_review",
      "id": 16641307203,
      "node_id": "RFRE_lADOABII586lQ1oXzwAAAAPf5jJD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16641307203",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-08T06:30:25Z"
    },
    {
      "event": "commented",
      "id": 2708070578,
      "node_id": "IC_kwDOABII586haeCy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2708070578",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-08T06:33:47Z",
      "updated_at": "2025-03-08T06:33:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the reviews @l0rinc and @mzumsande . Due to your feedback, I have opened the PR for general review.",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#issuecomment-2708070578",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31615"
    },
    {
      "event": "mentioned",
      "id": 16641321655,
      "node_id": "MEE_lADOABII586lQ1oXzwAAAAPf5mq3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16641321655",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-08T06:33:48Z"
    },
    {
      "event": "subscribed",
      "id": 16641321660,
      "node_id": "SE_lADOABII586lQ1oXzwAAAAPf5mq8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16641321660",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-08T06:33:48Z"
    },
    {
      "event": "mentioned",
      "id": 16641321664,
      "node_id": "MEE_lADOABII586lQ1oXzwAAAAPf5mrA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16641321664",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-08T06:33:48Z"
    },
    {
      "event": "subscribed",
      "id": 16641321667,
      "node_id": "SE_lADOABII586lQ1oXzwAAAAPf5mrD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16641321667",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-08T06:33:48Z"
    },
    {
      "event": "labeled",
      "id": 16921038095,
      "node_id": "LE_lADOABII586lQ1oXzwAAAAPwko0P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16921038095",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-21T02:52:16Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2742593133,
      "node_id": "IC_kwDOABII586jeKZt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2742593133",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-21T07:47:31Z",
      "updated_at": "2025-03-21T07:47:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Needs rebase, if still relevant",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#issuecomment-2742593133",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31615"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUxYjQyNDU4Y2M1YTRhYjkwNmIxYjhlZTBkYjI5YjBkYWQwYzdiM2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1b42458cc5a4ab906b1b8ee0db29b0dad0c7b3c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e1b42458cc5a4ab906b1b8ee0db29b0dad0c7b3c",
      "tree": {
        "sha": "4e714b3b1575eed702a2ea75c32bbae14edc0abe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e714b3b1575eed702a2ea75c32bbae14edc0abe"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/770d39a37652d40885533fecce37e9f71cc0d051",
          "sha": "770d39a37652d40885533fecce37e9f71cc0d051",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/770d39a37652d40885533fecce37e9f71cc0d051"
        }
      ],
      "message": "validation.cpp: use assumevalid during reindex\n\n-reindex deletes the block tree db and attempts to rebuild it based on local block files,\nwithout attempting to re-request headers for which we don't have the full block yet\nThis might cause:\n- the best known chain to have a chainwork less than the minimumchainwork\n- the assumedvalid block to not be in the block index if the previous IBD was interrupted\nbefore downloading it",
      "committer": {
        "name": "Eunovo",
        "email": "eunovo9@gmail.com",
        "date": "2025-03-24T09:52:10Z"
      },
      "author": {
        "name": "Eunovo",
        "email": "eunovo9@gmail.com",
        "date": "2025-01-07T11:30:56Z"
      },
      "sha": "e1b42458cc5a4ab906b1b8ee0db29b0dad0c7b3c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNiMjliYzNjMzBjY2QxNDkxOWI0YTY2YmVjMGM1NmQ5ZTRhZGFhZmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "tree": {
        "sha": "3d35f7bfd856c645b0342b406846911ef0980b53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d35f7bfd856c645b0342b406846911ef0980b53"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1b42458cc5a4ab906b1b8ee0db29b0dad0c7b3c",
          "sha": "e1b42458cc5a4ab906b1b8ee0db29b0dad0c7b3c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e1b42458cc5a4ab906b1b8ee0db29b0dad0c7b3c"
        }
      ],
      "message": "test: Check that reindex always uses -assumevalid",
      "committer": {
        "name": "Eunovo",
        "email": "eunovo9@gmail.com",
        "date": "2025-03-24T10:23:29Z"
      },
      "author": {
        "name": "Eunovo",
        "email": "eunovo9@gmail.com",
        "date": "2025-01-06T18:44:17Z"
      },
      "sha": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16952865605,
      "node_id": "HRFPE_lADOABII586lQ1oXzwAAAAPyeDNF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16952865605",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "created_at": "2025-03-24T10:23:35Z"
    },
    {
      "event": "renamed",
      "id": 16953802714,
      "node_id": "RTE_lADOABII586lQ1oXzwAAAAPyhn_a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16953802714",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T11:21:10Z",
      "rename": {
        "from": "Ensure assumevalid is always used during reindex",
        "to": "validation: ensure assumevalid is always used during reindex"
      }
    },
    {
      "event": "commented",
      "id": 2747830190,
      "node_id": "IC_kwDOABII586jyI-u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2747830190",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T11:39:41Z",
      "updated_at": "2025-03-24T11:39:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased on master https://github.com/bitcoin/bitcoin/commit/770d39a37652d40885533fecce37e9f71cc0d051\r\n- fix failing functional test by changing `self.send_message` to `self.send_without_ping` due to https://github.com/bitcoin/bitcoin/commit/fa9cf38ab666b50b0d8e82cb17f9e5a8a613547d",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#issuecomment-2747830190",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31615"
    },
    {
      "event": "unlabeled",
      "id": 16954092275,
      "node_id": "UNLE_lADOABII586lQ1oXzwAAAAPyiurz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16954092275",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T11:40:33Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 16954093075,
      "node_id": "LE_lADOABII586lQ1oXzwAAAAPyiu4T",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16954093075",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T11:40:35Z",
      "label": {
        "name": "Validation",
        "color": "6060aa"
      }
    },
    {
      "event": "reviewed",
      "id": 2844925670,
      "node_id": "PRR_kwDOABII586pkh7m",
      "url": null,
      "actor": null,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#pullrequestreview-2844925670",
      "submitted_at": "2025-05-15T22:08:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
    },
    {
      "event": "labeled",
      "id": 18156507534,
      "node_id": "LE_lADOABII586lQ1oXzwAAAAQ6NlGO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18156507534",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-15T13:59:14Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2931181107,
      "node_id": "PRR_kwDOABII586utkYz",
      "url": null,
      "actor": null,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#pullrequestreview-2931181107",
      "submitted_at": "2025-06-16T08:49:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905647128",
      "pull_request_review_id": 2534670554,
      "id": 1905647128,
      "node_id": "PRRC_kwDOABII585xld4Y",
      "diff_hunk": "@@ -2499,7 +2499,7 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (it != m_blockman.m_block_index.end()) {\n             if (it->second.GetAncestor(pindex->nHeight) == pindex &&\n                 m_chainman.m_best_header->GetAncestor(pindex->nHeight) == pindex &&\n-                m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork()) {\n+                (m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork() || m_chainman.m_blockman.LoadingBlocks())) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "951812b0ac93424ed4adf09427ca042a832c73ef",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think that this won't achieve the desired result: If the assumevalid block is not in the block index (which will be the case if IBD crashed midway before that block was downloaded, and a reindex is done) we'll abort above in line 2499 and  never get to this spot.",
      "created_at": "2025-01-07T15:39:12Z",
      "updated_at": "2025-01-07T16:13:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r1905647128",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905647128"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2502,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905885950",
      "pull_request_review_id": 2535103631,
      "id": 1905885950,
      "node_id": "PRRC_kwDOABII585xmYL-",
      "diff_hunk": "@@ -2499,7 +2499,7 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (it != m_blockman.m_block_index.end()) {\n             if (it->second.GetAncestor(pindex->nHeight) == pindex &&\n                 m_chainman.m_best_header->GetAncestor(pindex->nHeight) == pindex &&\n-                m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork()) {\n+                (m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork() || m_chainman.m_blockman.LoadingBlocks())) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "951812b0ac93424ed4adf09427ca042a832c73ef",
      "in_reply_to_id": 1905647128,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's true. I thought https://github.com/bitcoin/bitcoin/issues/31494 was focused on the best header chainwork not being up to minimumchainwork. I could change this to always skip script checks during a reindex, but IIUC having a block on disk doesn't mean that it was connected during the previous IBD. Might be worth it to sync headers first then connect blocks even during reindex.",
      "created_at": "2025-01-07T18:29:47Z",
      "updated_at": "2025-01-07T18:29:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r1905885950",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1905885950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2502,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1906056946",
      "pull_request_review_id": 2535395138,
      "id": 1906056946,
      "node_id": "PRRC_kwDOABII585xnB7y",
      "diff_hunk": "@@ -2499,7 +2499,7 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (it != m_blockman.m_block_index.end()) {\n             if (it->second.GetAncestor(pindex->nHeight) == pindex &&\n                 m_chainman.m_best_header->GetAncestor(pindex->nHeight) == pindex &&\n-                m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork()) {\n+                (m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork() || m_chainman.m_blockman.LoadingBlocks())) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "951812b0ac93424ed4adf09427ca042a832c73ef",
      "in_reply_to_id": 1905647128,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I really wasn't sure what the best solution is when I opened the issue and still am not, but these are my thoughts:\r\n\r\nYes, there are two reasons why we might not apply assumevalid during a reindex currently:\r\n1.) The best header has not enough chainwork\r\n2.) The assumevalid block is not in our block index\r\n\r\n> I could change this to always skip script checks during a reindex, but IIUC having a block on disk doesn't mean that it was connected during the previous IBD. \r\n\r\nI think the question is rather how well we can avoid to connect blocks skipping the script checks during the reindex that we would have fully validated in the original run if we hadn't crashed. Assuming that the user provides the same `-assumevalid`  arg to the reindex run that they did in the original run I can see the following cases:\r\n1.) The user provides an existing block (or nothing, so that the default hash from chainparams is used) that we just haven't downloaded yet because it's later in the best chain - if we don't have it in our index we'd be justified to skip script checks - if we do have it in our index, no special rules are necessary for reindexing. I think that's the most common case for users.\r\n2.) The user provides `-assumevalid=0`  - we should respect that also in the reindex run and fully validate everything.\r\n3.) The user provides a block hash with `-assumevalid` that is non-existing / not in the best chain. I think that's the critical case because here we would have fully validated everything in the original run, but won't validate anything during the reindex. But arguably that's not a common case / the user's fault for providing this bad block, so maybe it can be tolerated?\r\n\r\n> Might be worth it to sync headers first then connect blocks even during reindex.\r\n\r\nYes, that's the second option I thought of. I think we can't just stop and wait for the headers to be downloaded - reindex should be able to finish without having a p2p connection, even if that means no assumevalid. But I was thinking of maybe just disabling the relevant `LoadingBlocks()` guards in net_processing, so that we'd download headers in parallel to `ActivateBestChain()`, and would change to use assumevalid after a few thousand blocks or so. That seem a bit messy (we'd still connect _some_ blocks without assumevalid) and requires testing but might work well in practice?!\r\n\r\n",
      "created_at": "2025-01-07T21:23:34Z",
      "updated_at": "2025-01-07T21:23:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r1906056946",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1906056946"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2502,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910413909",
      "pull_request_review_id": 2542504562,
      "id": 1910413909,
      "node_id": "PRRC_kwDOABII585x3ppV",
      "diff_hunk": "@@ -2499,7 +2499,7 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (it != m_blockman.m_block_index.end()) {\n             if (it->second.GetAncestor(pindex->nHeight) == pindex &&\n                 m_chainman.m_best_header->GetAncestor(pindex->nHeight) == pindex &&\n-                m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork()) {\n+                (m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork() || m_chainman.m_blockman.LoadingBlocks())) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "951812b0ac93424ed4adf09427ca042a832c73ef",
      "in_reply_to_id": 1905647128,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I created another test to check if blocks rejected in the normal IBD run get loaded during a `-reindex`. The test reveals that it does load the invalid block and it will connect it if script checks are skipped, see https://github.com/Eunovo/bitcoin/commit/1ff4e5ee78418a30ba1ea9c384b8c7ee43435ce6\r\n\r\nIIUC During a reindex, the node does not know what blocks were connected in the previous run so it can't safely skip checks. It looks to me like we have to:\r\n1. Sync headers before connecting blocks during  reindex OR\r\n2. Persist data to show that we previously connected this block (IIUC this exact data exists but gets deleted during reindex, maybe we can preserve the relevant data we need?)",
      "created_at": "2025-01-10T13:59:01Z",
      "updated_at": "2025-01-10T13:59:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r1910413909",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910413909"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2502,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910419783",
      "pull_request_review_id": 2542515313,
      "id": 1910419783,
      "node_id": "PRRC_kwDOABII585x3rFH",
      "diff_hunk": "@@ -2499,7 +2499,7 @@ bool Chainstate::ConnectBlock(const CBlock& block, BlockValidationState& state,\n         if (it != m_blockman.m_block_index.end()) {\n             if (it->second.GetAncestor(pindex->nHeight) == pindex &&\n                 m_chainman.m_best_header->GetAncestor(pindex->nHeight) == pindex &&\n-                m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork()) {\n+                (m_chainman.m_best_header->nChainWork >= m_chainman.MinimumChainWork() || m_chainman.m_blockman.LoadingBlocks())) {",
      "path": "src/validation.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "951812b0ac93424ed4adf09427ca042a832c73ef",
      "in_reply_to_id": 1905647128,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> The test reveals that it does load the invalid block and it will connect it if script checks are skipped, see [Eunovo@1ff4e5e](https://github.com/Eunovo/bitcoin/commit/1ff4e5ee78418a30ba1ea9c384b8c7ee43435ce6)\r\n\r\nI'm still not sure if this causes any damage because I expect the node to eventually pick the most-work chain when it syncs headers",
      "created_at": "2025-01-10T14:04:03Z",
      "updated_at": "2025-01-10T14:04:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r1910419783",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1910419783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2502,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091928728",
      "pull_request_review_id": 2844925670,
      "id": 2091928728,
      "node_id": "PRRC_kwDOABII5858sEyY",
      "diff_hunk": "@@ -1213,6 +1228,11 @@ void ImportBlocks(ChainstateManager& chainman, std::span<const fs::path> import_\n             }\n             nFile++;\n         }\n+\n+        // Call ActivateBestChain here so we can skip script verification",
      "path": "src/node/blockstorage.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "e1b42458cc5a4ab906b1b8ee0db29b0dad0c7b3c",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: I'd replace \"here\" with \"before setting m_blockfiles_indexed\" so the reason becomes more clear.",
      "created_at": "2025-05-15T20:41:19Z",
      "updated_at": "2025-05-15T22:08:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r2091928728",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091928728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1232,
      "original_line": 1232,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091930195",
      "pull_request_review_id": 2844925670,
      "id": 2091930195,
      "node_id": "PRRC_kwDOABII5858sFJT",
      "diff_hunk": "@@ -1190,6 +1190,21 @@ void ImportBlocks(ChainstateManager& chainman, std::span<const fs::path> import_\n {\n     ImportingNow imp{chainman.m_blockman.m_importing};\n \n+    auto update_all_chainstate = [&]() {",
      "path": "src/node/blockstorage.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "e1b42458cc5a4ab906b1b8ee0db29b0dad0c7b3c",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'd prefer to call it `activate_all_chainstates` to not introduce a less precise term (\"update\").",
      "created_at": "2025-05-15T20:42:29Z",
      "updated_at": "2025-05-15T22:08:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r2091930195",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091930195"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1193,
      "original_line": 1193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091983914",
      "pull_request_review_id": 2844925670,
      "id": 2091983914,
      "node_id": "PRRC_kwDOABII5858sSQq",
      "diff_hunk": "@@ -1235,18 +1255,7 @@ void ImportBlocks(ChainstateManager& chainman, std::span<const fs::path> import_\n         }\n     }\n \n-    // scan for better chains in the block chain database, that are not yet connected in the active best chain\n-\n-    // We can't hold cs_main during ActivateBestChain even though we're accessing\n-    // the chainman unique_ptrs since ABC requires us not to be holding cs_main, so retrieve\n-    // the relevant pointers before the ABC call.\n-    for (Chainstate* chainstate : WITH_LOCK(::cs_main, return chainman.GetAll())) {\n-        BlockValidationState state;\n-        if (!chainstate->ActivateBestChain(state, nullptr)) {\n-            chainman.GetNotifications().fatalError(strprintf(_(\"Failed to connect best block (%s).\"), state.ToString()));\n-            return;\n-        }\n-    }\n+    update_all_chainstate();",
      "path": "src/node/blockstorage.cpp",
      "position": 50,
      "original_position": 50,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "e1b42458cc5a4ab906b1b8ee0db29b0dad0c7b3c",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This means that in case of a reindex, `ActivateBestChain()`, will be called twice now from `ImportBlocks`, but that shouldn't be a problem because the second call just won't do any work.",
      "created_at": "2025-05-15T21:27:20Z",
      "updated_at": "2025-05-15T22:08:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r2091983914",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2091983914"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1258,
      "original_line": 1258,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092011943",
      "pull_request_review_id": 2844925670,
      "id": 2092011943,
      "node_id": "PRRC_kwDOABII5858sZGn",
      "diff_hunk": "@@ -97,6 +121,77 @@ def continue_reindex_after_shutdown(self):\n             node.wait_for_rpc_connection(wait_for_import=False)\n         node.stop_node()\n \n+    # Check that reindex uses -assumevalid\n+    def assume_valid(self):\n+        self.log.info(\"Testing reindex with -assumevalid\")\n+        self.start_node(0)\n+        node = self.nodes[0]\n+        self.generate(node, 1)\n+        coinbase_to_spend = node.getblock(node.getbestblockhash())['tx'][0]\n+        # Generate COINBASE_MATURITY blocks to make the coinbase spendable\n+        self.generate(node, COINBASE_MATURITY)\n+        tip = int(node.getbestblockhash(), 16)\n+        block_info = node.getblock(node.getbestblockhash())\n+        block_time = block_info['time'] + 1\n+        height = block_info['height'] + 1\n+        blocks = []\n+\n+        # Create a block with an invalid signature\n+        tx = CTransaction()\n+        tx.vin.append(CTxIn(COutPoint(int(coinbase_to_spend, 16), 0), scriptSig=b\"\"))\n+        tx.vout.append(CTxOut(49 * 10000, CScript([OP_TRUE])))\n+        tx.calc_sha256()\n+        invalid_block = create_block(tip, create_coinbase(height), block_time, txlist=[tx])\n+        invalid_block.solve()\n+        tip = invalid_block.sha256\n+        blocks.append(invalid_block)\n+\n+        # Bury that block with roughly two weeks' worth of blocks (2100 blocks) and an extra 100 blocks\n+        for _ in range(2200):\n+            block_time += 1\n+            height += 1\n+            block = create_block(tip, create_coinbase(height), block_time)\n+            block.solve()\n+            blocks.append(block)\n+            tip = block.sha256\n+\n+        # Start node0 with -assumevalid pointing to the block with invalid signature\n+        node.stop_node()\n+        self.start_node(0, extra_args=[\"-assumevalid=\" + blocks[-1].hash])\n+\n+        # Send blocks to node0\n+        p2p0 = node.add_p2p_connection(BaseNode())\n+        p2p0.send_header_for_blocks(blocks[0:2000])\n+        p2p0.send_header_for_blocks(blocks[2000:])\n+        # Only send the first 2100 blocks so the assumevalid block is not saved to disk before we reindex\n+        # This allows us to test that assumevalid is used in reindex even if the assumevalid block was not loaded during reindex\n+        for block in blocks[:2101]:\n+            p2p0.send_without_ping(msg_block(block))\n+        p2p0.sync_with_ping(timeout=960)\n+\n+        expected_height = height - 100\n+        # node0 should sync to tip of the chain, ignoring the invalid signature\n+        assert_equal(node.getblock(node.getbestblockhash())['height'], expected_height)\n+\n+        self.log.info(\"Testing reindex with assumevalid block in block index and minchainwork > best_header chainwork\")\n+        # Restart node0 but raise minimumchainwork to that of a chain 32256 blocks long\n+        node.stop_node()\n+        self.start_node(0, extra_args=[\"-reindex\", \"-assumevalid=\" + blocks[2100].hash, \"-minimumchainwork=00000000000000000000000000000000000000000000000000007e01acd42dd2\"])\n+\n+        # node0 should sync to tip of the chain, ignoring the invalid signature\n+        assert_equal(node.getblock(node.getbestblockhash())['height'], expected_height)\n+        assert_equal(int(node.getbestblockhash(), 16), blocks[2100].sha256)\n+\n+        self.log.info(\"Testing reindex with assumevalid block not in block index\")\n+        node.stop_node()\n+        self.start_node(0, extra_args=[\"-reindex\", \"-assumevalid=\" + blocks[-1].hash])\n+\n+        # node0 should still sync to tip of the chain, ignoring the invalid signature\n+        assert_equal(node.getblock(node.getbestblockhash())['height'], expected_height)\n+        assert_equal(int(node.getbestblockhash(), 16), blocks[2100].sha256)\n+\n+        self.log.info(\"Success\")",
      "path": "test/functional/feature_reindex.py",
      "position": 111,
      "original_position": 111,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "would be good to add a subtest that a run without `-assumevalid` will not connect the invalid block. ",
      "created_at": "2025-05-15T21:54:39Z",
      "updated_at": "2025-05-15T22:08:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r2092011943",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092011943"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092014654",
      "pull_request_review_id": 2844925670,
      "id": 2092014654,
      "node_id": "PRRC_kwDOABII5858sZw-",
      "diff_hunk": "@@ -97,6 +121,77 @@ def continue_reindex_after_shutdown(self):\n             node.wait_for_rpc_connection(wait_for_import=False)\n         node.stop_node()\n \n+    # Check that reindex uses -assumevalid\n+    def assume_valid(self):\n+        self.log.info(\"Testing reindex with -assumevalid\")\n+        self.start_node(0)\n+        node = self.nodes[0]\n+        self.generate(node, 1)\n+        coinbase_to_spend = node.getblock(node.getbestblockhash())['tx'][0]\n+        # Generate COINBASE_MATURITY blocks to make the coinbase spendable\n+        self.generate(node, COINBASE_MATURITY)\n+        tip = int(node.getbestblockhash(), 16)\n+        block_info = node.getblock(node.getbestblockhash())\n+        block_time = block_info['time'] + 1\n+        height = block_info['height'] + 1\n+        blocks = []\n+\n+        # Create a block with an invalid signature\n+        tx = CTransaction()\n+        tx.vin.append(CTxIn(COutPoint(int(coinbase_to_spend, 16), 0), scriptSig=b\"\"))\n+        tx.vout.append(CTxOut(49 * 10000, CScript([OP_TRUE])))\n+        tx.calc_sha256()\n+        invalid_block = create_block(tip, create_coinbase(height), block_time, txlist=[tx])\n+        invalid_block.solve()\n+        tip = invalid_block.sha256\n+        blocks.append(invalid_block)\n+\n+        # Bury that block with roughly two weeks' worth of blocks (2100 blocks) and an extra 100 blocks\n+        for _ in range(2200):\n+            block_time += 1\n+            height += 1\n+            block = create_block(tip, create_coinbase(height), block_time)\n+            block.solve()\n+            blocks.append(block)\n+            tip = block.sha256\n+\n+        # Start node0 with -assumevalid pointing to the block with invalid signature",
      "path": "test/functional/feature_reindex.py",
      "position": 76,
      "original_position": 76,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Comment needs updating, `-assumevalid` points to the last block, not the invalid one.",
      "created_at": "2025-05-15T21:57:24Z",
      "updated_at": "2025-05-15T22:08:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r2092014654",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092014654"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 158,
      "original_line": 158,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092020053",
      "pull_request_review_id": 2844925670,
      "id": 2092020053,
      "node_id": "PRRC_kwDOABII5858sbFV",
      "diff_hunk": "@@ -97,6 +121,77 @@ def continue_reindex_after_shutdown(self):\n             node.wait_for_rpc_connection(wait_for_import=False)\n         node.stop_node()\n \n+    # Check that reindex uses -assumevalid\n+    def assume_valid(self):\n+        self.log.info(\"Testing reindex with -assumevalid\")\n+        self.start_node(0)\n+        node = self.nodes[0]\n+        self.generate(node, 1)\n+        coinbase_to_spend = node.getblock(node.getbestblockhash())['tx'][0]\n+        # Generate COINBASE_MATURITY blocks to make the coinbase spendable\n+        self.generate(node, COINBASE_MATURITY)\n+        tip = int(node.getbestblockhash(), 16)\n+        block_info = node.getblock(node.getbestblockhash())\n+        block_time = block_info['time'] + 1\n+        height = block_info['height'] + 1\n+        blocks = []\n+\n+        # Create a block with an invalid signature\n+        tx = CTransaction()\n+        tx.vin.append(CTxIn(COutPoint(int(coinbase_to_spend, 16), 0), scriptSig=b\"\"))\n+        tx.vout.append(CTxOut(49 * 10000, CScript([OP_TRUE])))\n+        tx.calc_sha256()\n+        invalid_block = create_block(tip, create_coinbase(height), block_time, txlist=[tx])\n+        invalid_block.solve()\n+        tip = invalid_block.sha256\n+        blocks.append(invalid_block)\n+\n+        # Bury that block with roughly two weeks' worth of blocks (2100 blocks) and an extra 100 blocks\n+        for _ in range(2200):",
      "path": "test/functional/feature_reindex.py",
      "position": 68,
      "original_position": 68,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "in_reply_to_id": null,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "is there a reason we need to mine that many blocks, and not just a few more to make the test faster?",
      "created_at": "2025-05-15T22:02:53Z",
      "updated_at": "2025-05-15T22:08:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r2092020053",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092020053"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 150,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092562248",
      "pull_request_review_id": 2845859601,
      "id": 2092562248,
      "node_id": "PRRC_kwDOABII5858ufdI",
      "diff_hunk": "@@ -97,6 +121,77 @@ def continue_reindex_after_shutdown(self):\n             node.wait_for_rpc_connection(wait_for_import=False)\n         node.stop_node()\n \n+    # Check that reindex uses -assumevalid\n+    def assume_valid(self):\n+        self.log.info(\"Testing reindex with -assumevalid\")\n+        self.start_node(0)\n+        node = self.nodes[0]\n+        self.generate(node, 1)\n+        coinbase_to_spend = node.getblock(node.getbestblockhash())['tx'][0]\n+        # Generate COINBASE_MATURITY blocks to make the coinbase spendable\n+        self.generate(node, COINBASE_MATURITY)\n+        tip = int(node.getbestblockhash(), 16)\n+        block_info = node.getblock(node.getbestblockhash())\n+        block_time = block_info['time'] + 1\n+        height = block_info['height'] + 1\n+        blocks = []\n+\n+        # Create a block with an invalid signature\n+        tx = CTransaction()\n+        tx.vin.append(CTxIn(COutPoint(int(coinbase_to_spend, 16), 0), scriptSig=b\"\"))\n+        tx.vout.append(CTxOut(49 * 10000, CScript([OP_TRUE])))\n+        tx.calc_sha256()\n+        invalid_block = create_block(tip, create_coinbase(height), block_time, txlist=[tx])\n+        invalid_block.solve()\n+        tip = invalid_block.sha256\n+        blocks.append(invalid_block)\n+\n+        # Bury that block with roughly two weeks' worth of blocks (2100 blocks) and an extra 100 blocks\n+        for _ in range(2200):\n+            block_time += 1\n+            height += 1\n+            block = create_block(tip, create_coinbase(height), block_time)\n+            block.solve()\n+            blocks.append(block)\n+            tip = block.sha256\n+\n+        # Start node0 with -assumevalid pointing to the block with invalid signature\n+        node.stop_node()\n+        self.start_node(0, extra_args=[\"-assumevalid=\" + blocks[-1].hash])\n+\n+        # Send blocks to node0\n+        p2p0 = node.add_p2p_connection(BaseNode())\n+        p2p0.send_header_for_blocks(blocks[0:2000])\n+        p2p0.send_header_for_blocks(blocks[2000:])\n+        # Only send the first 2100 blocks so the assumevalid block is not saved to disk before we reindex\n+        # This allows us to test that assumevalid is used in reindex even if the assumevalid block was not loaded during reindex\n+        for block in blocks[:2101]:\n+            p2p0.send_without_ping(msg_block(block))\n+        p2p0.sync_with_ping(timeout=960)\n+\n+        expected_height = height - 100\n+        # node0 should sync to tip of the chain, ignoring the invalid signature\n+        assert_equal(node.getblock(node.getbestblockhash())['height'], expected_height)\n+\n+        self.log.info(\"Testing reindex with assumevalid block in block index and minchainwork > best_header chainwork\")\n+        # Restart node0 but raise minimumchainwork to that of a chain 32256 blocks long\n+        node.stop_node()\n+        self.start_node(0, extra_args=[\"-reindex\", \"-assumevalid=\" + blocks[2100].hash, \"-minimumchainwork=00000000000000000000000000000000000000000000000000007e01acd42dd2\"])\n+\n+        # node0 should sync to tip of the chain, ignoring the invalid signature\n+        assert_equal(node.getblock(node.getbestblockhash())['height'], expected_height)\n+        assert_equal(int(node.getbestblockhash(), 16), blocks[2100].sha256)\n+\n+        self.log.info(\"Testing reindex with assumevalid block not in block index\")\n+        node.stop_node()\n+        self.start_node(0, extra_args=[\"-reindex\", \"-assumevalid=\" + blocks[-1].hash])\n+\n+        # node0 should still sync to tip of the chain, ignoring the invalid signature\n+        assert_equal(node.getblock(node.getbestblockhash())['height'], expected_height)\n+        assert_equal(int(node.getbestblockhash(), 16), blocks[2100].sha256)\n+\n+        self.log.info(\"Success\")",
      "path": "test/functional/feature_reindex.py",
      "position": 111,
      "original_position": 111,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "in_reply_to_id": 2092011943,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Will do",
      "created_at": "2025-05-16T08:12:47Z",
      "updated_at": "2025-05-16T08:12:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r2092562248",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092562248"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 193,
      "original_line": 193,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092592761",
      "pull_request_review_id": 2845906267,
      "id": 2092592761,
      "node_id": "PRRC_kwDOABII5858um55",
      "diff_hunk": "@@ -97,6 +121,77 @@ def continue_reindex_after_shutdown(self):\n             node.wait_for_rpc_connection(wait_for_import=False)\n         node.stop_node()\n \n+    # Check that reindex uses -assumevalid\n+    def assume_valid(self):\n+        self.log.info(\"Testing reindex with -assumevalid\")\n+        self.start_node(0)\n+        node = self.nodes[0]\n+        self.generate(node, 1)\n+        coinbase_to_spend = node.getblock(node.getbestblockhash())['tx'][0]\n+        # Generate COINBASE_MATURITY blocks to make the coinbase spendable\n+        self.generate(node, COINBASE_MATURITY)\n+        tip = int(node.getbestblockhash(), 16)\n+        block_info = node.getblock(node.getbestblockhash())\n+        block_time = block_info['time'] + 1\n+        height = block_info['height'] + 1\n+        blocks = []\n+\n+        # Create a block with an invalid signature\n+        tx = CTransaction()\n+        tx.vin.append(CTxIn(COutPoint(int(coinbase_to_spend, 16), 0), scriptSig=b\"\"))\n+        tx.vout.append(CTxOut(49 * 10000, CScript([OP_TRUE])))\n+        tx.calc_sha256()\n+        invalid_block = create_block(tip, create_coinbase(height), block_time, txlist=[tx])\n+        invalid_block.solve()\n+        tip = invalid_block.sha256\n+        blocks.append(invalid_block)\n+\n+        # Bury that block with roughly two weeks' worth of blocks (2100 blocks) and an extra 100 blocks\n+        for _ in range(2200):",
      "path": "test/functional/feature_reindex.py",
      "position": 68,
      "original_position": 68,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "in_reply_to_id": 2092020053,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Are you referring to the 100 blocks mined after the first 2100 blocks?",
      "created_at": "2025-05-16T08:31:12Z",
      "updated_at": "2025-05-16T08:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r2092592761",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2092592761"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 150,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2093270847",
      "pull_request_review_id": 2846986085,
      "id": 2093270847,
      "node_id": "PRRC_kwDOABII5858xMc_",
      "diff_hunk": "@@ -97,6 +121,77 @@ def continue_reindex_after_shutdown(self):\n             node.wait_for_rpc_connection(wait_for_import=False)\n         node.stop_node()\n \n+    # Check that reindex uses -assumevalid\n+    def assume_valid(self):\n+        self.log.info(\"Testing reindex with -assumevalid\")\n+        self.start_node(0)\n+        node = self.nodes[0]\n+        self.generate(node, 1)\n+        coinbase_to_spend = node.getblock(node.getbestblockhash())['tx'][0]\n+        # Generate COINBASE_MATURITY blocks to make the coinbase spendable\n+        self.generate(node, COINBASE_MATURITY)\n+        tip = int(node.getbestblockhash(), 16)\n+        block_info = node.getblock(node.getbestblockhash())\n+        block_time = block_info['time'] + 1\n+        height = block_info['height'] + 1\n+        blocks = []\n+\n+        # Create a block with an invalid signature\n+        tx = CTransaction()\n+        tx.vin.append(CTxIn(COutPoint(int(coinbase_to_spend, 16), 0), scriptSig=b\"\"))\n+        tx.vout.append(CTxOut(49 * 10000, CScript([OP_TRUE])))\n+        tx.calc_sha256()\n+        invalid_block = create_block(tip, create_coinbase(height), block_time, txlist=[tx])\n+        invalid_block.solve()\n+        tip = invalid_block.sha256\n+        blocks.append(invalid_block)\n+\n+        # Bury that block with roughly two weeks' worth of blocks (2100 blocks) and an extra 100 blocks\n+        for _ in range(2200):",
      "path": "test/functional/feature_reindex.py",
      "position": 68,
      "original_position": 68,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "in_reply_to_id": 2092020053,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I meant the 2100 (two weeks) of blocks. I didn't test this, but is there a reason this couldn't just be a few blocks (plus a few more that aren't sent to the node)?",
      "created_at": "2025-05-16T15:31:36Z",
      "updated_at": "2025-05-16T15:31:46Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r2093270847",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2093270847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 150,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2093372479",
      "pull_request_review_id": 2847147953,
      "id": 2093372479,
      "node_id": "PRRC_kwDOABII5858xlQ_",
      "diff_hunk": "@@ -97,6 +121,77 @@ def continue_reindex_after_shutdown(self):\n             node.wait_for_rpc_connection(wait_for_import=False)\n         node.stop_node()\n \n+    # Check that reindex uses -assumevalid\n+    def assume_valid(self):\n+        self.log.info(\"Testing reindex with -assumevalid\")\n+        self.start_node(0)\n+        node = self.nodes[0]\n+        self.generate(node, 1)\n+        coinbase_to_spend = node.getblock(node.getbestblockhash())['tx'][0]\n+        # Generate COINBASE_MATURITY blocks to make the coinbase spendable\n+        self.generate(node, COINBASE_MATURITY)\n+        tip = int(node.getbestblockhash(), 16)\n+        block_info = node.getblock(node.getbestblockhash())\n+        block_time = block_info['time'] + 1\n+        height = block_info['height'] + 1\n+        blocks = []\n+\n+        # Create a block with an invalid signature\n+        tx = CTransaction()\n+        tx.vin.append(CTxIn(COutPoint(int(coinbase_to_spend, 16), 0), scriptSig=b\"\"))\n+        tx.vout.append(CTxOut(49 * 10000, CScript([OP_TRUE])))\n+        tx.calc_sha256()\n+        invalid_block = create_block(tip, create_coinbase(height), block_time, txlist=[tx])\n+        invalid_block.solve()\n+        tip = invalid_block.sha256\n+        blocks.append(invalid_block)\n+\n+        # Bury that block with roughly two weeks' worth of blocks (2100 blocks) and an extra 100 blocks\n+        for _ in range(2200):",
      "path": "test/functional/feature_reindex.py",
      "position": 68,
      "original_position": 68,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "in_reply_to_id": 2092020053,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Script checks are only skipped when the current block is roughly 2 weeks away from the tip. See https://github.com/bitcoin/bitcoin/blob/3f83c744ac28b700090e15b5dda2260724a56f49/src/validation.cpp#L2476-L2494\r\n\r\nWe have to bury the test block 2 weeks deep for script verification to the skipped",
      "created_at": "2025-05-16T16:42:39Z",
      "updated_at": "2025-05-16T16:42:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r2093372479",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2093372479"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 150,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2093440637",
      "pull_request_review_id": 2847251855,
      "id": 2093440637,
      "node_id": "PRRC_kwDOABII5858x159",
      "diff_hunk": "@@ -97,6 +121,77 @@ def continue_reindex_after_shutdown(self):\n             node.wait_for_rpc_connection(wait_for_import=False)\n         node.stop_node()\n \n+    # Check that reindex uses -assumevalid\n+    def assume_valid(self):\n+        self.log.info(\"Testing reindex with -assumevalid\")\n+        self.start_node(0)\n+        node = self.nodes[0]\n+        self.generate(node, 1)\n+        coinbase_to_spend = node.getblock(node.getbestblockhash())['tx'][0]\n+        # Generate COINBASE_MATURITY blocks to make the coinbase spendable\n+        self.generate(node, COINBASE_MATURITY)\n+        tip = int(node.getbestblockhash(), 16)\n+        block_info = node.getblock(node.getbestblockhash())\n+        block_time = block_info['time'] + 1\n+        height = block_info['height'] + 1\n+        blocks = []\n+\n+        # Create a block with an invalid signature\n+        tx = CTransaction()\n+        tx.vin.append(CTxIn(COutPoint(int(coinbase_to_spend, 16), 0), scriptSig=b\"\"))\n+        tx.vout.append(CTxOut(49 * 10000, CScript([OP_TRUE])))\n+        tx.calc_sha256()\n+        invalid_block = create_block(tip, create_coinbase(height), block_time, txlist=[tx])\n+        invalid_block.solve()\n+        tip = invalid_block.sha256\n+        blocks.append(invalid_block)\n+\n+        # Bury that block with roughly two weeks' worth of blocks (2100 blocks) and an extra 100 blocks\n+        for _ in range(2200):",
      "path": "test/functional/feature_reindex.py",
      "position": 68,
      "original_position": 68,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "in_reply_to_id": 2092020053,
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "oh I see, forgot about that check - can be resolved.",
      "created_at": "2025-05-16T17:30:53Z",
      "updated_at": "2025-05-16T17:30:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r2093440637",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2093440637"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 150,
      "original_line": 150,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2149393863",
      "pull_request_review_id": 2931181107,
      "id": 2149393863,
      "node_id": "PRRC_kwDOABII586AHSXH",
      "diff_hunk": "@@ -97,6 +121,77 @@ def continue_reindex_after_shutdown(self):\n             node.wait_for_rpc_connection(wait_for_import=False)\n         node.stop_node()\n \n+    # Check that reindex uses -assumevalid\n+    def assume_valid(self):\n+        self.log.info(\"Testing reindex with -assumevalid\")\n+        self.start_node(0)\n+        node = self.nodes[0]\n+        self.generate(node, 1)\n+        coinbase_to_spend = node.getblock(node.getbestblockhash())['tx'][0]\n+        # Generate COINBASE_MATURITY blocks to make the coinbase spendable\n+        self.generate(node, COINBASE_MATURITY)\n+        tip = int(node.getbestblockhash(), 16)\n+        block_info = node.getblock(node.getbestblockhash())\n+        block_time = block_info['time'] + 1\n+        height = block_info['height'] + 1\n+        blocks = []\n+\n+        # Create a block with an invalid signature\n+        tx = CTransaction()\n+        tx.vin.append(CTxIn(COutPoint(int(coinbase_to_spend, 16), 0), scriptSig=b\"\"))\n+        tx.vout.append(CTxOut(49 * 10000, CScript([OP_TRUE])))\n+        tx.calc_sha256()",
      "path": "test/functional/feature_reindex.py",
      "position": 61,
      "original_position": 61,
      "commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "original_commit_id": "cb29bc3c30ccd14919b4a66bec0c56d9e4adaafa",
      "in_reply_to_id": null,
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "                                   AttributeError: 'CTransaction' object has no attribute 'calc_sha256'",
      "created_at": "2025-06-16T08:49:12Z",
      "updated_at": "2025-06-16T08:49:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31615#discussion_r2149393863",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2149393863"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31615"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 143,
      "original_line": 143,
      "side": "RIGHT"
    }
  ]
}