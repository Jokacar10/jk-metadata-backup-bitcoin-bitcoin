{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158",
    "id": 2425411961,
    "node_id": "PR_kwDOABII586QkNl5",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32158",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32158.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32158.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32158",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32158/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/fa74244e97079658a51a808e1efb286fba0fd541",
    "number": 32158,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "fuzz: Make partially_downloaded_block more deterministic",
    "user": {
      "login": "maflcko",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maflcko",
      "html_url": "https://github.com/maflcko",
      "followers_url": "https://api.github.com/users/maflcko/followers",
      "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
      "organizations_url": "https://api.github.com/users/maflcko/orgs",
      "repos_url": "https://api.github.com/users/maflcko/repos",
      "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/maflcko/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This should make the `partially_downloaded_block` fuzz target even more deterministic.\r\n\r\nFollow-up to https://github.com/bitcoin/bitcoin/pull/31841. Tracking issue: https://github.com/bitcoin/bitcoin/issues/29018.\r\n\r\nThis bundles several changes:\r\n\r\n* First, speed up the `deterministic-fuzz-coverage` helper by introducing parallelism.\r\n* Then, a fix to remove spawned test threads or spawn them deterministically. (While testing this, high parallelism and thread contention may be needed)\r\n\r\n### Testing\r\n\r\nIt can be tested via (setting 32 parallel threads):\r\n\r\n```\r\ncargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/bld-cmake/ $PWD/../b-c-qa-assets/fuzz_corpora/ partially_downloaded_block 32\r\n```\r\n\r\nLocally, on a failure, the output would look like:\r\n\r\n```diff\r\n ....\r\n-  150|      0|            m_worker_threads.emplace_back([this, n]() {\r\n-  151|      0|                util::ThreadRename(strprintf(\"scriptch.%i\", n));\r\n+  150|      1|            m_worker_threads.emplace_back([this, n]() {\r\n+  151|      1|                util::ThreadRename(strprintf(\"scriptch.%i\", n));\r\n ...\r\n```\r\n\r\nThis likely indicates that the script threads were started after the fuzz init function returned.\r\n\r\nSimilarly, for the scheduler thread, it would look like:\r\n\r\n```diff\r\n ...\r\n   227|      0|        m_node.scheduler = std::make_unique<CScheduler>();\r\n-  228|      1|        m_node.scheduler->m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { m_node.scheduler->serviceQueue(); });\r\n+  228|      0|        m_node.scheduler->m_service_thread = std::thread(util::TraceThread, \"scheduler\", [&] { m_node.scheduler->serviceQueue(); });\r\n   229|      0|        m_node.validation_signals =\r\n ...\r\n```",
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "created_at": "2025-03-28T14:04:45Z",
    "updated_at": "2025-04-01T08:00:18Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "c6e829e9ae716363c80dd740b1ba4992912ae2a6",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "maflcko:2503-fuzz-det",
      "ref": "2503-fuzz-det",
      "sha": "fa74244e97079658a51a808e1efb286fba0fd541",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 40046254,
        "node_id": "MDEwOlJlcG9zaXRvcnk0MDA0NjI1NA==",
        "name": "bitcoin-core",
        "full_name": "maflcko/bitcoin-core",
        "owner": {
          "login": "maflcko",
          "id": 6399679,
          "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
          "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/maflcko",
          "html_url": "https://github.com/maflcko",
          "followers_url": "https://api.github.com/users/maflcko/followers",
          "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
          "organizations_url": "https://api.github.com/users/maflcko/orgs",
          "repos_url": "https://api.github.com/users/maflcko/repos",
          "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/maflcko/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/maflcko/bitcoin-core",
        "fork": true,
        "url": "https://api.github.com/repos/maflcko/bitcoin-core",
        "archive_url": "https://api.github.com/repos/maflcko/bitcoin-core/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/maflcko/bitcoin-core/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/maflcko/bitcoin-core/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/maflcko/bitcoin-core/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/maflcko/bitcoin-core/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/maflcko/bitcoin-core/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/maflcko/bitcoin-core/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/maflcko/bitcoin-core/contributors",
        "deployments_url": "https://api.github.com/repos/maflcko/bitcoin-core/deployments",
        "downloads_url": "https://api.github.com/repos/maflcko/bitcoin-core/downloads",
        "events_url": "https://api.github.com/repos/maflcko/bitcoin-core/events",
        "forks_url": "https://api.github.com/repos/maflcko/bitcoin-core/forks",
        "git_commits_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/tags%7B/sha%7D",
        "git_url": "git://github.com/maflcko/bitcoin-core.git",
        "issue_comment_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/maflcko/bitcoin-core/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/maflcko/bitcoin-core/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/maflcko/bitcoin-core/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/maflcko/bitcoin-core/languages",
        "merges_url": "https://api.github.com/repos/maflcko/bitcoin-core/merges",
        "milestones_url": "https://api.github.com/repos/maflcko/bitcoin-core/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/maflcko/bitcoin-core/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/maflcko/bitcoin-core/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/maflcko/bitcoin-core/releases%7B/id%7D",
        "ssh_url": "git@github.com:maflcko/bitcoin-core.git",
        "stargazers_url": "https://api.github.com/repos/maflcko/bitcoin-core/stargazers",
        "statuses_url": "https://api.github.com/repos/maflcko/bitcoin-core/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscribers",
        "subscription_url": "https://api.github.com/repos/maflcko/bitcoin-core/subscription",
        "tags_url": "https://api.github.com/repos/maflcko/bitcoin-core/tags",
        "teams_url": "https://api.github.com/repos/maflcko/bitcoin-core/teams",
        "trees_url": "https://api.github.com/repos/maflcko/bitcoin-core/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/maflcko/bitcoin-core.git",
        "hooks_url": "https://api.github.com/repos/maflcko/bitcoin-core/hooks",
        "svn_url": "https://github.com/maflcko/bitcoin-core",
        "homepage": "",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 27,
        "watchers_count": 27,
        "size": 247162,
        "default_branch": "master",
        "open_issues_count": 14,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-31T15:51:51Z",
        "created_at": "2015-08-01T12:42:47Z",
        "updated_at": "2025-01-22T17:43:41Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "3358b1d105196647230e6f828b8ec820426b96a0",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36992,
        "stargazers_count": 82714,
        "watchers_count": 82714,
        "size": 279007,
        "default_branch": "master",
        "open_issues_count": 693,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-03-31T20:08:21Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-04-01T05:27:39Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 81,
    "deletions": 27,
    "changed_files": 3,
    "commits": 4,
    "review_comments": 22,
    "comments": 4
  },
  "events": [
    {
      "event": "commented",
      "id": 2761467082,
      "node_id": "IC_kwDOABII586kmKTK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2761467082",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T14:04:48Z",
      "updated_at": "2025-04-01T07:53:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32158.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [janb84](https://github.com/bitcoin/bitcoin/pull/32158#pullrequestreview-2730518297) |\n| Stale ACK | [Prabhat1308](https://github.com/bitcoin/bitcoin/pull/32158#pullrequestreview-2727721222), [hodlinator](https://github.com/bitcoin/bitcoin/pull/32158#pullrequestreview-2730365813) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32113](https://github.com/bitcoin/bitcoin/pull/32113) (fuzz: enable running fuzz test cases in Debug mode by ajtowns)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#issuecomment-2761467082",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32158"
    },
    {
      "event": "labeled",
      "id": 17033204253,
      "node_id": "LE_lADOABII586wNTMqzwAAAAP3QhId",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17033204253",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-28T14:04:51Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "review_requested",
      "id": 17041554716,
      "node_id": "RRE_lADOABII586wNTMqzwAAAAP3wX0c",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17041554716",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-29T02:51:56Z",
      "requested_reviewer": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "review_requested",
      "id": 17041554720,
      "node_id": "RRE_lADOABII586wNTMqzwAAAAP3wX0g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17041554720",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-29T02:51:56Z",
      "requested_reviewer": {
        "login": "marcofleon",
        "id": 95179662,
        "node_id": "U_kgDOBaxTjg",
        "avatar_url": "https://avatars.githubusercontent.com/u/95179662?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/marcofleon",
        "html_url": "https://github.com/marcofleon",
        "followers_url": "https://api.github.com/users/marcofleon/followers",
        "following_url": "https://api.github.com/users/marcofleon/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/marcofleon/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/marcofleon/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/marcofleon/subscriptions",
        "organizations_url": "https://api.github.com/users/marcofleon/orgs",
        "repos_url": "https://api.github.com/users/marcofleon/repos",
        "events_url": "https://api.github.com/users/marcofleon/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/marcofleon/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2763285550,
      "node_id": "IC_kwDOABII586ktGQu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2763285550",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-29T10:34:09Z",
      "updated_at": "2025-03-29T10:34:09Z",
      "author_association": "MEMBER",
      "body": "I've run `cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/bld-cmake/ $PWD/../b-c-qa-assets/fuzz_corpora/ partially_downloaded_block 128` for about 300 times and it passed. So hopefully this is good enough for now. (In theory the scheduler thread may still be woken spuriously, even if there is no work, but the only solution to that would be to disable it completely for all fuzz targets that don't need it.)",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#issuecomment-2763285550",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32158"
    },
    {
      "event": "reviewed",
      "id": 2727721222,
      "node_id": "PRR_kwDOABII586ilbkG",
      "url": null,
      "actor": null,
      "commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "body": "tACK [`fa1e299`](https://github.com/bitcoin/bitcoin/pull/32158/commits/fa1e2995d9996641e79f92549e99a6b37e36d140)\r\n\r\nTested 10 runs with each 32 and 128 parallel threads on MacOS.\r\nSteps followed \r\n```\r\ncmake -B build -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\ \r\n   -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\r\n   -DCMAKE_C_FLAGS=\"-fprofile-instr-generate -fcoverage-mapping\" \\\r\n   -DCMAKE_CXX_FLAGS=\"-fprofile-instr-generate -fcoverage-mapping\" \\\r\n   -DBUILD_FOR_FUZZING=ON\r\n   \r\n   cmake --build build -j$(sysctl -n hw.ncpu) \r\n   \r\n   cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build/ $PWD/qa-assets/fuzz_corpora/ partially_downloaded_block 32/128\r\n```",
      "user": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#pullrequestreview-2727721222",
      "submitted_at": "2025-03-29T20:34:02Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
    },
    {
      "event": "reviewed",
      "id": 2728650579,
      "node_id": "PRR_kwDOABII586io-dT",
      "url": null,
      "actor": null,
      "commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK fa1e2995d9996641e79f92549e99a6b37e36d140",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#pullrequestreview-2728650579",
      "submitted_at": "2025-03-31T12:07:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
    },
    {
      "event": "reviewed",
      "id": 2729675168,
      "node_id": "PRR_kwDOABII586is4mg",
      "url": null,
      "actor": null,
      "commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#pullrequestreview-2729675168",
      "submitted_at": "2025-03-31T15:21:22Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17059679269,
      "node_id": "HRFPE_lADOABII586wNTMqzwAAAAP41gwl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17059679269",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fa6286f089fdf42acd369a8173790a4d1da3d244",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fa6286f089fdf42acd369a8173790a4d1da3d244",
      "created_at": "2025-03-31T15:43:48Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhN2U5MzExMzA1MmQwOWNjNWNlNDMzMmQxYzE1OTA0MzQxYmQxMzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7e93113052d09cc5ce4332d1c15904341bd132",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7e93113052d09cc5ce4332d1c15904341bd132",
      "tree": {
        "sha": "756fb01556dde69b3e050235b9d6a913b419cbc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/756fb01556dde69b3e050235b9d6a913b419cbc2"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 756fb01556dde69b3e050235b9d6a913b419cbc2\nparent a54baa869814cf14cbeb2cb12dfce683a47f6e73\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1743144669 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1743436092 +0200\n\ncontrib: Add optional parallelism to deterministic-fuzz-coverage\n\nCo-Authored-By: Hodlinator <172445034+hodlinator@users.noreply.github.com>\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQLypM3qe8mYVrGFABdCjh6pgOgVkertTORqloNbphUJzEYgRdXoef37tLXAP69gDEP\nCqjRhtqEpzAaDwdQPGhw0=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a54baa869814cf14cbeb2cb12dfce683a47f6e73",
          "sha": "a54baa869814cf14cbeb2cb12dfce683a47f6e73",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a54baa869814cf14cbeb2cb12dfce683a47f6e73"
        }
      ],
      "message": "contrib: Add optional parallelism to deterministic-fuzz-coverage\n\nCo-Authored-By: Hodlinator <172445034+hodlinator@users.noreply.github.com>",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-03-31T15:48:12Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-03-28T06:51:09Z"
      },
      "sha": "fa7e93113052d09cc5ce4332d1c15904341bd132"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhODJmZTJjNzM2NDIyNmE3NThjNGE1OWUxYTRhNjJlM2FjNDg0NmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa82fe2c7364226a758c4a59e1a4a62e3ac4846b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa82fe2c7364226a758c4a59e1a4a62e3ac4846b",
      "tree": {
        "sha": "aa2b260dfc97a04c63491042d7e5961b4c9c3bcc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa2b260dfc97a04c63491042d7e5961b4c9c3bcc"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree aa2b260dfc97a04c63491042d7e5961b4c9c3bcc\nparent fa7e93113052d09cc5ce4332d1c15904341bd132\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1743167715 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1743436108 +0200\n\ncontrib: Use -Xdemangler=llvm-cxxfilt in deterministic-*-coverage\n\nThis makes the result more readable.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQCemjET3vCLPbL913K4tnRYRxvzr4I+pQXCO+w0KkAO0roMbtiVMbCtB9haGPMFkDd\ntWGpd7xaveg5Jo5KaHgwA=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7e93113052d09cc5ce4332d1c15904341bd132",
          "sha": "fa7e93113052d09cc5ce4332d1c15904341bd132",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7e93113052d09cc5ce4332d1c15904341bd132"
        }
      ],
      "message": "contrib: Use -Xdemangler=llvm-cxxfilt in deterministic-*-coverage\n\nThis makes the result more readable.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-03-31T15:48:28Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-03-28T13:15:15Z"
      },
      "sha": "fa82fe2c7364226a758c4a59e1a4a62e3ac4846b"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17059768080,
      "node_id": "HRFPE_lADOABII586wNTMqzwAAAAP412cQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17059768080",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "facfe64b0ae5f5940bbeb2800127612bd887ae39",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/facfe64b0ae5f5940bbeb2800127612bd887ae39",
      "created_at": "2025-03-31T15:49:10Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk5OTkzNTg5NjJlYmJmZjdlMjgyMWRiNzA4MWE4Yzc4MmIwMTc5Yzg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9999358962ebbff7e2821db7081a8c782b0179c8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9999358962ebbff7e2821db7081a8c782b0179c8",
      "tree": {
        "sha": "5c96a29d10b9f446eef20beb4c6fb7d78f87b62c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c96a29d10b9f446eef20beb4c6fb7d78f87b62c"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 5c96a29d10b9f446eef20beb4c6fb7d78f87b62c\nparent fa82fe2c7364226a758c4a59e1a4a62e3ac4846b\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1743422248 +0200\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1743436272 +0200\n\ncontrib: Only print fuzz output on failure\n\nThis makes it humanly possible to track progress as only \"[N/M]\"-lines are printed as long as we succeed.\n\nAlso, use emojis to indicate final success or error.\n\nCo-Authored-By: Hodlinator <172445034+hodlinator@users.noreply.github.com>\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQNVrDzS+rgERhK3EbHrEDsRAIeVIbAdOQlKmFo4D2tXL03JFk7RmUzhhIjPmo3dlFZ\n6fM+pWy/oOej83My83PQs=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa82fe2c7364226a758c4a59e1a4a62e3ac4846b",
          "sha": "fa82fe2c7364226a758c4a59e1a4a62e3ac4846b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/fa82fe2c7364226a758c4a59e1a4a62e3ac4846b"
        }
      ],
      "message": "contrib: Only print fuzz output on failure\n\nThis makes it humanly possible to track progress as only \"[N/M]\"-lines are printed as long as we succeed.\n\nAlso, use emojis to indicate final success or error.\n\nCo-Authored-By: Hodlinator <172445034+hodlinator@users.noreply.github.com>",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-03-31T15:51:12Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-03-31T11:57:28Z"
      },
      "sha": "9999358962ebbff7e2821db7081a8c782b0179c8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGZhNzQyNDRlOTcwNzk2NThhNTFhODA4ZTFlZmIyODZmYmEwZmQ1NDE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa74244e97079658a51a808e1efb286fba0fd541",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/fa74244e97079658a51a808e1efb286fba0fd541",
      "tree": {
        "sha": "45736343738d447baf6662ce72cedeff70321df5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45736343738d447baf6662ce72cedeff70321df5"
      },
      "verification": {
        "verified": false,
        "reason": "no_user",
        "payload": "tree 45736343738d447baf6662ce72cedeff70321df5\nparent 9999358962ebbff7e2821db7081a8c782b0179c8\nauthor MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1743167712 +0100\ncommitter MarcoFalke <*~=`'#}+{/-|&$^_@721217.xyz> 1743436296 +0200\n\ntest: Avoid script check worker threads while fuzzing\n\nThreads may execute their function any time after they are spawned, so\ncoverage could be non-deterministic.\n\nFix this,\n\n* for the script check worker threads by disabling them while fuzzing.\n* for the scheduler thread by waiting for it to fully start and run the\n  service queue.\n",
        "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgqxY/aMPiuXoCFn6iAEyAhvUqFX\njanTudd31Jtt35ct0AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQBJgrHAnVNz98dmrhOI6HrKKI1mR+DHZlmwNJA5tYCcVYo4muuIp4wQeA0BD52rv17\nVlFh3W8ku/XYxw06M+vQI=\n-----END SSH SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9999358962ebbff7e2821db7081a8c782b0179c8",
          "sha": "9999358962ebbff7e2821db7081a8c782b0179c8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9999358962ebbff7e2821db7081a8c782b0179c8"
        }
      ],
      "message": "test: Avoid script check worker threads while fuzzing\n\nThreads may execute their function any time after they are spawned, so\ncoverage could be non-deterministic.\n\nFix this,\n\n* for the script check worker threads by disabling them while fuzzing.\n* for the scheduler thread by waiting for it to fully start and run the\n  service queue.",
      "committer": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-03-31T15:51:36Z"
      },
      "author": {
        "name": "MarcoFalke",
        "email": "*~=`'#}+{/-|&$^_@721217.xyz",
        "date": "2025-03-28T13:15:12Z"
      },
      "sha": "fa74244e97079658a51a808e1efb286fba0fd541"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17059810297,
      "node_id": "HRFPE_lADOABII586wNTMqzwAAAAP42Av5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17059810297",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "commit_url": "https://api.github.com/repos/maflcko/bitcoin-core/commits/fa74244e97079658a51a808e1efb286fba0fd541",
      "created_at": "2025-03-31T15:51:53Z"
    },
    {
      "event": "commented",
      "id": 2767254430,
      "node_id": "IC_kwDOABII586k8POe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2767254430",
      "actor": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-31T19:55:02Z",
      "updated_at": "2025-03-31T20:21:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "The 128 run fails on my machine: `fuzz failed: Too many open files (os error 24)`\r\n\r\nHave used the following command: \r\n```shell\r\n cargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build/ $PWD/qa-assets/fuzz_corpora/ partially_downloaded_block 128\r\n ```\r\n \r\nThe 32 run works. I'm on a M1 MAX, in a nix-shell clang  19.1.7, cargo 1.85.0\r\n\r\nEDIT: the `ulimit` was default 256 on NixOS, have now set it to 4096 and it runs.   `ulimit -n 4096`",
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#issuecomment-2767254430",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32158"
    },
    {
      "event": "reviewed",
      "id": 2730518297,
      "node_id": "PRR_kwDOABII586iwGcZ",
      "url": null,
      "actor": null,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK [fa74244](https://github.com/bitcoin/bitcoin/commit/fa74244e97079658a51a808e1efb286fba0fd541)\r\n\r\n-Tested, with 8,32 and 128 ✅ (8 will saturate most of the available cores already) ",
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#pullrequestreview-2730518297",
      "submitted_at": "2025-03-31T21:12:59Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
    },
    {
      "event": "reviewed",
      "id": 2730365813,
      "node_id": "PRR_kwDOABII586ivhN1",
      "url": null,
      "actor": null,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "ACK 9999358962ebbff7e2821db7081a8c782b0179c8\r\n\r\n### Concept\r\n\r\n#### Fixes fuzz/unit test nondeterminism\r\n\r\n* Waits service thread/scheduler to start up at beginning of tests.\r\n* Disables worker threads for CCheckQueue/script checking.\r\n\r\n#### Contrib utilities\r\n\r\n* Changes checking for determinism over a multitude of fuzz inputs from a single-threaded slug into an optionally highly parallel affair.\r\n* Limits output from `fuzz` and adds `[N/M]` progress, so humans can get a feeling for when testing would complete (if successful for all inputs).\r\n* Demangles symbols in coverage output.\r\n\r\n### Testing\r\n\r\nTested consistently failing determinism output through:\r\n```\r\ncargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_fuzz ../qa-assets/fuzz_corpora/ connman 16\r\n```\r\n\r\nI'm having issues reproducing diffs containing `m_service_thread|scriptch` without the C++ fix. Managed to produce a `scriptch`-containing diff 1-2 times out of ~40 runs. **Any further tips on which qa-assets commit to use, or any other conditions that might help are welcome.** I've seen it succeed multiple times with parallelism of 400, when it fails, I typically don't see those strings. This is the only thing preventing me from ACKing the last commit.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#pullrequestreview-2730365813",
      "submitted_at": "2025-04-01T07:53:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
    },
    {
      "event": "commented",
      "id": 2768515713,
      "node_id": "IC_kwDOABII586lBDKB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2768515713",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T08:00:16Z",
      "updated_at": "2025-04-01T08:00:16Z",
      "author_association": "MEMBER",
      "body": "> I'm having issues reproducing diffs containing `m_service_thread|scriptch` without the C++ fix. Managed to produce a `scriptch`-containing diff 1-2 times out of ~40 runs. **Any further tips on which qa-assets commit to use, or any other conditions that might help are welcome.**\r\n\r\nWhat is your clang version and do you mind sharing the full diff? I just used the tip of qa-assets.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#issuecomment-2768515713",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32158"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020666474",
      "pull_request_review_id": 2728650579,
      "id": 2020666474,
      "node_id": "PRRC_kwDOABII5854cOxq",
      "diff_hunk": "@@ -16,12 +18,14 @@ const LLVM_PROFDATA: &str = \"llvm-profdata\";\n const LLVM_COV: &str = \"llvm-cov\";\n const GIT: &str = \"git\";\n \n+const DEFAULT_PAR: usize = 1;\n+\n fn exit_help(err: &str) -> AppError {\n     format!(\n         r#\"\n Error: {err}\n \n-Usage: program ./build_dir ./qa-assets/fuzz_corpora fuzz_target_name\n+Usage: program ./build_dir ./qa-assets/fuzz_corpora fuzz_target_name (parallelism={DEFAULT_PAR})",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 27,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: `[]`-brackets are commonly used for optional arguments.\r\n```suggestion\r\nUsage: program ./build_dir ./qa-assets/fuzz_corpora fuzz_target_name [parallelism={DEFAULT_PAR}]\r\n```\r\n\r\nMight be nice to standardize on `-jN`, but keeping the logic simple is also good.",
      "created_at": "2025-03-31T09:11:52Z",
      "updated_at": "2025-03-31T12:07:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2020666474",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020666474"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020707730",
      "pull_request_review_id": 2728650579,
      "id": 2020707730,
      "node_id": "PRRC_kwDOABII5854cY2S",
      "diff_hunk": "@@ -247,7 +254,8 @@ ChainTestingSetup::ChainTestingSetup(const ChainType chainType, TestOpts opts)\n             .check_block_index = 1,\n             .notifications = *m_node.notifications,\n             .signals = m_node.validation_signals.get(),\n-            .worker_threads_num = 2,\n+            // Use no worker threads while fuzzing to avoid non-determinism\n+            .worker_threads_num = G_FUZZING ? 0 : 2,",
      "path": "src/test/util/setup_common.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm worried this means we get decreased fuzz-coverage. Maybe could introduce another var?\r\n\r\n```suggestion\r\n            .worker_threads_num = G_FUZZING && G_DETERMINISTIC? 0 : 2,\r\n```\r\n\r\nAlthough being able to reproduce fuzz failures is also nice. :\\",
      "created_at": "2025-03-31T09:36:12Z",
      "updated_at": "2025-03-31T12:07:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2020707730",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020707730"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 258,
      "original_line": 258,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020911351",
      "pull_request_review_id": 2728650579,
      "id": 2020911351,
      "node_id": "PRRC_kwDOABII5854dKj3",
      "diff_hunk": "@@ -187,20 +201,52 @@ The coverage was not deterministic between runs.\n     //\n     // Also, This can catch issues where several fuzz inputs are non-deterministic, but the sum of\n     // their overall coverage trace remains the same across runs and thus remains undetected.\n-    println!(\"Check each fuzz input individually ...\");\n-    for entry in entries {\n+    println!(\n+        \"Check each fuzz input individually ... ({} inputs with parallelism {par})\",\n+        entries.len()\n+    );\n+    let check_individual = |entry: &DirEntry, thread_id: usize| -> AppResult {\n         let entry = entry.path();\n         if !entry.is_file() {\n             Err(format!(\"{} should be a file\", entry.display()))?;\n         }\n-        let cov_txt_base = run_single(0, &entry)?;\n-        let cov_txt_repeat = run_single(1, &entry)?;\n+        let cov_txt_base = run_single(0, &entry, thread_id)?;\n+        let cov_txt_repeat = run_single(1, &entry, thread_id)?;\n         check_diff(\n             &cov_txt_base,\n             &cov_txt_repeat,\n             &format!(\"The fuzz target input was {}.\", entry.display()),\n         )?;\n-    }\n+        Ok(())\n+    };\n+    thread::scope(|s| -> AppResult {\n+        let mut handles = VecDeque::with_capacity(par);\n+        let mut res = Ok(());\n+        let set_err = |res: &mut _, handle: ScopedJoinHandle<_>| {\n+            let r = match handle.join() {\n+                Err(_e) => Err(\"a scoped thread panicked\".to_string()),\n+                Ok(r) => r,\n+            };\n+            if r.is_err() {\n+                *res = r;\n+            }\n+        };\n+        for (i, entry) in entries.iter().enumerate() {",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 129,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Found a way to reduce this code by 14 lines. What do you think about f8a0a32280d7636135f6821401d7f3b18d10476b?",
      "created_at": "2025-03-31T12:01:58Z",
      "updated_at": "2025-03-31T12:07:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2020911351",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020911351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": 222,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020914099",
      "pull_request_review_id": 2728650579,
      "id": 2020914099,
      "node_id": "PRRC_kwDOABII5854dLOz",
      "diff_hunk": "@@ -110,8 +120,10 @@ fn deterministic_coverage(\n         .map(|entry| entry.expect(\"IO error\"))\n         .collect::<Vec<_>>();\n     entries.sort_by_key(|entry| entry.file_name());\n-    let run_single = |run_id: u8, entry: &Path| -> Result<PathBuf, AppError> {\n-        let cov_txt_path = build_dir.join(format!(\"fuzz_det_cov.show.{run_id}.txt\"));\n+    let run_single = |run_id: u8, entry: &Path, thread_id: usize| -> Result<PathBuf, AppError> {\n+        let cov_txt_path = build_dir.join(format!(\"fuzz_det_cov.show.t{thread_id}.r{run_id}.txt\"));\n+        let profraw_file = build_dir.join(format!(\"fuzz_det_cov.t{thread_id}.r{run_id}.profraw\"));\n+        let profdata_file = build_dir.join(format!(\"fuzz_det_cov.t{thread_id}.r{run_id}.profdata\"));\n         if !{\n             {\n                 let mut cmd = Command::new(fuzz_exe);",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 80,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Appreciate you adding the \"[N/M]\" output, but it's spammed away by fuzz-output even on success. Suggest capturing stdio/stderr and only output them on failure: ea3e89e48250013ea818abcefd7be8e72d31f23d",
      "created_at": "2025-03-31T12:04:11Z",
      "updated_at": "2025-03-31T12:07:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2020914099",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020914099"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": 127,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020926999",
      "pull_request_review_id": 2729087206,
      "id": 2020926999,
      "node_id": "PRRC_kwDOABII5854dOYX",
      "diff_hunk": "@@ -187,20 +201,52 @@ The coverage was not deterministic between runs.\n     //\n     // Also, This can catch issues where several fuzz inputs are non-deterministic, but the sum of\n     // their overall coverage trace remains the same across runs and thus remains undetected.\n-    println!(\"Check each fuzz input individually ...\");\n-    for entry in entries {\n+    println!(\n+        \"Check each fuzz input individually ... ({} inputs with parallelism {par})\",\n+        entries.len()\n+    );\n+    let check_individual = |entry: &DirEntry, thread_id: usize| -> AppResult {\n         let entry = entry.path();\n         if !entry.is_file() {\n             Err(format!(\"{} should be a file\", entry.display()))?;\n         }\n-        let cov_txt_base = run_single(0, &entry)?;\n-        let cov_txt_repeat = run_single(1, &entry)?;\n+        let cov_txt_base = run_single(0, &entry, thread_id)?;\n+        let cov_txt_repeat = run_single(1, &entry, thread_id)?;\n         check_diff(\n             &cov_txt_base,\n             &cov_txt_repeat,\n             &format!(\"The fuzz target input was {}.\", entry.display()),\n         )?;\n-    }\n+        Ok(())\n+    };\n+    thread::scope(|s| -> AppResult {\n+        let mut handles = VecDeque::with_capacity(par);\n+        let mut res = Ok(());\n+        let set_err = |res: &mut _, handle: ScopedJoinHandle<_>| {\n+            let r = match handle.join() {\n+                Err(_e) => Err(\"a scoped thread panicked\".to_string()),\n+                Ok(r) => r,\n+            };\n+            if r.is_err() {\n+                *res = r;\n+            }\n+        };\n+        for (i, entry) in entries.iter().enumerate() {",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 129,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2020911351,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would be happy to be listed as commit co-author if you take this or the output spam reduction (https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2020914099) as this is partially inspired by https://github.com/bitcoin/bitcoin/pull/32074#discussion_r2001916136.",
      "created_at": "2025-03-31T12:14:53Z",
      "updated_at": "2025-03-31T12:14:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2020926999",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020926999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": 222,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020971496",
      "pull_request_review_id": 2729153786,
      "id": 2020971496,
      "node_id": "PRRC_kwDOABII5854dZPo",
      "diff_hunk": "@@ -16,12 +18,14 @@ const LLVM_PROFDATA: &str = \"llvm-profdata\";\n const LLVM_COV: &str = \"llvm-cov\";\n const GIT: &str = \"git\";\n \n+const DEFAULT_PAR: usize = 1;\n+\n fn exit_help(err: &str) -> AppError {\n     format!(\n         r#\"\n Error: {err}\n \n-Usage: program ./build_dir ./qa-assets/fuzz_corpora fuzz_target_name\n+Usage: program ./build_dir ./qa-assets/fuzz_corpora fuzz_target_name (parallelism={DEFAULT_PAR})",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 27,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2020666474,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thx, will fixup, if I have to re-touch",
      "created_at": "2025-03-31T12:40:35Z",
      "updated_at": "2025-03-31T12:40:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2020971496",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020971496"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 28,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020971596",
      "pull_request_review_id": 2729153934,
      "id": 2020971596,
      "node_id": "PRRC_kwDOABII5854dZRM",
      "diff_hunk": "@@ -247,7 +254,8 @@ ChainTestingSetup::ChainTestingSetup(const ChainType chainType, TestOpts opts)\n             .check_block_index = 1,\n             .notifications = *m_node.notifications,\n             .signals = m_node.validation_signals.get(),\n-            .worker_threads_num = 2,\n+            // Use no worker threads while fuzzing to avoid non-determinism\n+            .worker_threads_num = G_FUZZING ? 0 : 2,",
      "path": "src/test/util/setup_common.cpp",
      "position": 27,
      "original_position": 27,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2020707730,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure. If someone wants to fuzz test the script worker threads, a dedicated fuzz target seems ideal (See `./src/test/fuzz/checkqueue.cpp`). Relying on unrelated fuzz targets to achieve coverage here seems brittle at best, because those targets may change at any time, dropping the coverage silently. Also, I am not aware of any meaningful coverage here in any fuzz target that would be more than what the unit tests and functional tests already achieve.",
      "created_at": "2025-03-31T12:40:39Z",
      "updated_at": "2025-03-31T12:40:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2020971596",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020971596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 258,
      "original_line": 258,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020971674",
      "pull_request_review_id": 2729154059,
      "id": 2020971674,
      "node_id": "PRRC_kwDOABII5854dZSa",
      "diff_hunk": "@@ -187,20 +201,52 @@ The coverage was not deterministic between runs.\n     //\n     // Also, This can catch issues where several fuzz inputs are non-deterministic, but the sum of\n     // their overall coverage trace remains the same across runs and thus remains undetected.\n-    println!(\"Check each fuzz input individually ...\");\n-    for entry in entries {\n+    println!(\n+        \"Check each fuzz input individually ... ({} inputs with parallelism {par})\",\n+        entries.len()\n+    );\n+    let check_individual = |entry: &DirEntry, thread_id: usize| -> AppResult {\n         let entry = entry.path();\n         if !entry.is_file() {\n             Err(format!(\"{} should be a file\", entry.display()))?;\n         }\n-        let cov_txt_base = run_single(0, &entry)?;\n-        let cov_txt_repeat = run_single(1, &entry)?;\n+        let cov_txt_base = run_single(0, &entry, thread_id)?;\n+        let cov_txt_repeat = run_single(1, &entry, thread_id)?;\n         check_diff(\n             &cov_txt_base,\n             &cov_txt_repeat,\n             &format!(\"The fuzz target input was {}.\", entry.display()),\n         )?;\n-    }\n+        Ok(())\n+    };\n+    thread::scope(|s| -> AppResult {\n+        let mut handles = VecDeque::with_capacity(par);\n+        let mut res = Ok(());\n+        let set_err = |res: &mut _, handle: ScopedJoinHandle<_>| {\n+            let r = match handle.join() {\n+                Err(_e) => Err(\"a scoped thread panicked\".to_string()),\n+                Ok(r) => r,\n+            };\n+            if r.is_err() {\n+                *res = r;\n+            }\n+        };\n+        for (i, entry) in entries.iter().enumerate() {",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 129,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2020911351,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't think your suggestion works. In Rust, the `?` operator is the early-return operator. This means, if you use it in a while loop that joins threads, it may return early and leave some threads dangling.\r\n\r\nThis is not much of an issue here, as `thread::scope` takes care of joining them, once they go out of scope. However, the main thread may now sometimes return an Err, or panic, when a child panics. This seems confusing. Also, if in the future all errors want to be collected and returned, one would have to revert your change as well?",
      "created_at": "2025-03-31T12:40:42Z",
      "updated_at": "2025-03-31T12:40:42Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2020971674",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020971674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": 222,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020972495",
      "pull_request_review_id": 2729155177,
      "id": 2020972495,
      "node_id": "PRRC_kwDOABII5854dZfP",
      "diff_hunk": "@@ -110,8 +120,10 @@ fn deterministic_coverage(\n         .map(|entry| entry.expect(\"IO error\"))\n         .collect::<Vec<_>>();\n     entries.sort_by_key(|entry| entry.file_name());\n-    let run_single = |run_id: u8, entry: &Path| -> Result<PathBuf, AppError> {\n-        let cov_txt_path = build_dir.join(format!(\"fuzz_det_cov.show.{run_id}.txt\"));\n+    let run_single = |run_id: u8, entry: &Path, thread_id: usize| -> Result<PathBuf, AppError> {\n+        let cov_txt_path = build_dir.join(format!(\"fuzz_det_cov.show.t{thread_id}.r{run_id}.txt\"));\n+        let profraw_file = build_dir.join(format!(\"fuzz_det_cov.t{thread_id}.r{run_id}.profraw\"));\n+        let profdata_file = build_dir.join(format!(\"fuzz_det_cov.t{thread_id}.r{run_id}.profdata\"));\n         if !{\n             {\n                 let mut cmd = Command::new(fuzz_exe);",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 80,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2020914099,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems fine, but I'd say, if you want less libfuzzer output, it would be easier to compile without libfuzzer, especially given that it is not needed for this tool.\r\n\r\nAlso, code-wise, it would probably be easier to just use https://doc.rust-lang.org/std/process/struct.Command.html#method.output instead of spawning and handling a child manually.",
      "created_at": "2025-03-31T12:41:11Z",
      "updated_at": "2025-03-31T12:41:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2020972495",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020972495"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": 127,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021028255",
      "pull_request_review_id": 2729260552,
      "id": 2021028255,
      "node_id": "PRRC_kwDOABII5854dnGf",
      "diff_hunk": "@@ -187,20 +201,52 @@ The coverage was not deterministic between runs.\n     //\n     // Also, This can catch issues where several fuzz inputs are non-deterministic, but the sum of\n     // their overall coverage trace remains the same across runs and thus remains undetected.\n-    println!(\"Check each fuzz input individually ...\");\n-    for entry in entries {\n+    println!(\n+        \"Check each fuzz input individually ... ({} inputs with parallelism {par})\",\n+        entries.len()\n+    );\n+    let check_individual = |entry: &DirEntry, thread_id: usize| -> AppResult {\n         let entry = entry.path();\n         if !entry.is_file() {\n             Err(format!(\"{} should be a file\", entry.display()))?;\n         }\n-        let cov_txt_base = run_single(0, &entry)?;\n-        let cov_txt_repeat = run_single(1, &entry)?;\n+        let cov_txt_base = run_single(0, &entry, thread_id)?;\n+        let cov_txt_repeat = run_single(1, &entry, thread_id)?;\n         check_diff(\n             &cov_txt_base,\n             &cov_txt_repeat,\n             &format!(\"The fuzz target input was {}.\", entry.display()),\n         )?;\n-    }\n+        Ok(())\n+    };\n+    thread::scope(|s| -> AppResult {\n+        let mut handles = VecDeque::with_capacity(par);\n+        let mut res = Ok(());\n+        let set_err = |res: &mut _, handle: ScopedJoinHandle<_>| {\n+            let r = match handle.join() {\n+                Err(_e) => Err(\"a scoped thread panicked\".to_string()),\n+                Ok(r) => r,\n+            };\n+            if r.is_err() {\n+                *res = r;\n+            }\n+        };\n+        for (i, entry) in entries.iter().enumerate() {",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 129,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2020911351,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I don't think your suggestion works.\r\n\r\nI've verified it works by executing something that fails determinism:\r\n```\r\ncargo run --manifest-path ./contrib/devtools/deterministic-fuzz-coverage/Cargo.toml -- $PWD/build_fuzz ../qa-assets/fuzz_corpora/ connman 16\r\n```\r\n\r\n> it may return early and leave some threads dangling.\r\n\r\nhttps://doc.rust-lang.org/stable/std/thread/struct.ScopedJoinHandle.html states:\r\n\r\n\"An owned permission to join on a scoped thread (block on its termination).\"\r\n\r\n> However, the main thread may now sometimes return an Err, or panic, when a child panics.\r\n\r\nThe change doesn't modify how panics are handled, it still has `Err(\"a scoped thread panicked\".to_string())`.\r\n\r\n> Also, if in the future all errors want to be collected and returned, one would have to revert your change as well?\r\n\r\nI don't think the diff would be significantly larger when changing the current version of this PR.",
      "created_at": "2025-03-31T13:16:18Z",
      "updated_at": "2025-03-31T13:16:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2021028255",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021028255"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": 222,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021053788",
      "pull_request_review_id": 2729309948,
      "id": 2021053788,
      "node_id": "PRRC_kwDOABII5854dtVc",
      "diff_hunk": "@@ -187,20 +201,52 @@ The coverage was not deterministic between runs.\n     //\n     // Also, This can catch issues where several fuzz inputs are non-deterministic, but the sum of\n     // their overall coverage trace remains the same across runs and thus remains undetected.\n-    println!(\"Check each fuzz input individually ...\");\n-    for entry in entries {\n+    println!(\n+        \"Check each fuzz input individually ... ({} inputs with parallelism {par})\",\n+        entries.len()\n+    );\n+    let check_individual = |entry: &DirEntry, thread_id: usize| -> AppResult {\n         let entry = entry.path();\n         if !entry.is_file() {\n             Err(format!(\"{} should be a file\", entry.display()))?;\n         }\n-        let cov_txt_base = run_single(0, &entry)?;\n-        let cov_txt_repeat = run_single(1, &entry)?;\n+        let cov_txt_base = run_single(0, &entry, thread_id)?;\n+        let cov_txt_repeat = run_single(1, &entry, thread_id)?;\n         check_diff(\n             &cov_txt_base,\n             &cov_txt_repeat,\n             &format!(\"The fuzz target input was {}.\", entry.display()),\n         )?;\n-    }\n+        Ok(())\n+    };\n+    thread::scope(|s| -> AppResult {\n+        let mut handles = VecDeque::with_capacity(par);\n+        let mut res = Ok(());\n+        let set_err = |res: &mut _, handle: ScopedJoinHandle<_>| {\n+            let r = match handle.join() {\n+                Err(_e) => Err(\"a scoped thread panicked\".to_string()),\n+                Ok(r) => r,\n+            };\n+            if r.is_err() {\n+                *res = r;\n+            }\n+        };\n+        for (i, entry) in entries.iter().enumerate() {",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 129,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2020911351,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You should be able to test my claim by panicking the threads and observing that the `Err` never makes it out.\r\n\r\nSee https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=b7091d91fc333d2e260327c46a90dec6\r\n\r\nOf course, this is fine here. I just wanted to explain the change in behavior here and why I choose the more consistent behavior myself here.",
      "created_at": "2025-03-31T13:31:12Z",
      "updated_at": "2025-03-31T13:31:12Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2021053788",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021053788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": 222,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021054952",
      "pull_request_review_id": 2729311846,
      "id": 2021054952,
      "node_id": "PRRC_kwDOABII5854dtno",
      "diff_hunk": "@@ -110,8 +120,10 @@ fn deterministic_coverage(\n         .map(|entry| entry.expect(\"IO error\"))\n         .collect::<Vec<_>>();\n     entries.sort_by_key(|entry| entry.file_name());\n-    let run_single = |run_id: u8, entry: &Path| -> Result<PathBuf, AppError> {\n-        let cov_txt_path = build_dir.join(format!(\"fuzz_det_cov.show.{run_id}.txt\"));\n+    let run_single = |run_id: u8, entry: &Path, thread_id: usize| -> Result<PathBuf, AppError> {\n+        let cov_txt_path = build_dir.join(format!(\"fuzz_det_cov.show.t{thread_id}.r{run_id}.txt\"));\n+        let profraw_file = build_dir.join(format!(\"fuzz_det_cov.t{thread_id}.r{run_id}.profraw\"));\n+        let profdata_file = build_dir.join(format!(\"fuzz_det_cov.t{thread_id}.r{run_id}.profdata\"));\n         if !{\n             {\n                 let mut cmd = Command::new(fuzz_exe);",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 80,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2020914099,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> if you want less libfuzzer output, it would be easier to compile without libfuzzer\r\n\r\nGiven the defaults in contrib/devtools/README.md I still think this would be a good change.\r\n\r\nMissed that `output()` still allowed checking the exit code. You are right in that it cleaned things up: a7f4e4b7cd0a04ae7c84ad7afa284006a600e369",
      "created_at": "2025-03-31T13:31:53Z",
      "updated_at": "2025-03-31T13:31:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2021054952",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021054952"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": 127,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021098980",
      "pull_request_review_id": 2729397475,
      "id": 2021098980,
      "node_id": "PRRC_kwDOABII5854d4Xk",
      "diff_hunk": "@@ -110,8 +120,10 @@ fn deterministic_coverage(\n         .map(|entry| entry.expect(\"IO error\"))\n         .collect::<Vec<_>>();\n     entries.sort_by_key(|entry| entry.file_name());\n-    let run_single = |run_id: u8, entry: &Path| -> Result<PathBuf, AppError> {\n-        let cov_txt_path = build_dir.join(format!(\"fuzz_det_cov.show.{run_id}.txt\"));\n+    let run_single = |run_id: u8, entry: &Path, thread_id: usize| -> Result<PathBuf, AppError> {\n+        let cov_txt_path = build_dir.join(format!(\"fuzz_det_cov.show.t{thread_id}.r{run_id}.txt\"));\n+        let profraw_file = build_dir.join(format!(\"fuzz_det_cov.t{thread_id}.r{run_id}.profraw\"));\n+        let profdata_file = build_dir.join(format!(\"fuzz_det_cov.t{thread_id}.r{run_id}.profdata\"));\n         if !{\n             {\n                 let mut cmd = Command::new(fuzz_exe);",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 80,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2020914099,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Now run through rustfmt: 142e65da352e77f061da3142bff8e2b19e56fc86",
      "created_at": "2025-03-31T13:56:55Z",
      "updated_at": "2025-03-31T14:02:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2021098980",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021098980"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": 127,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021106990",
      "pull_request_review_id": 2729397475,
      "id": 2021106990,
      "node_id": "PRRC_kwDOABII5854d6Uu",
      "diff_hunk": "@@ -187,20 +201,52 @@ The coverage was not deterministic between runs.\n     //\n     // Also, This can catch issues where several fuzz inputs are non-deterministic, but the sum of\n     // their overall coverage trace remains the same across runs and thus remains undetected.\n-    println!(\"Check each fuzz input individually ...\");\n-    for entry in entries {\n+    println!(\n+        \"Check each fuzz input individually ... ({} inputs with parallelism {par})\",\n+        entries.len()\n+    );\n+    let check_individual = |entry: &DirEntry, thread_id: usize| -> AppResult {\n         let entry = entry.path();\n         if !entry.is_file() {\n             Err(format!(\"{} should be a file\", entry.display()))?;\n         }\n-        let cov_txt_base = run_single(0, &entry)?;\n-        let cov_txt_repeat = run_single(1, &entry)?;\n+        let cov_txt_base = run_single(0, &entry, thread_id)?;\n+        let cov_txt_repeat = run_single(1, &entry, thread_id)?;\n         check_diff(\n             &cov_txt_base,\n             &cov_txt_repeat,\n             &format!(\"The fuzz target input was {}.\", entry.display()),\n         )?;\n-    }\n+        Ok(())\n+    };\n+    thread::scope(|s| -> AppResult {\n+        let mut handles = VecDeque::with_capacity(par);\n+        let mut res = Ok(());\n+        let set_err = |res: &mut _, handle: ScopedJoinHandle<_>| {\n+            let r = match handle.join() {\n+                Err(_e) => Err(\"a scoped thread panicked\".to_string()),\n+                Ok(r) => r,\n+            };\n+            if r.is_err() {\n+                *res = r;\n+            }\n+        };\n+        for (i, entry) in entries.iter().enumerate() {",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 129,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2020911351,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for the correction.\r\n\r\nI believe this would work, even though rustfmt makes the line count less of a win: 67e6d9ece87606297865761f0fb222db9604c180",
      "created_at": "2025-03-31T14:01:35Z",
      "updated_at": "2025-03-31T14:02:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2021106990",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021106990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": 222,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021257793",
      "pull_request_review_id": 2729675168,
      "id": 2021257793,
      "node_id": "PRRC_kwDOABII5854efJB",
      "diff_hunk": "@@ -187,20 +201,52 @@ The coverage was not deterministic between runs.\n     //\n     // Also, This can catch issues where several fuzz inputs are non-deterministic, but the sum of\n     // their overall coverage trace remains the same across runs and thus remains undetected.\n-    println!(\"Check each fuzz input individually ...\");\n-    for entry in entries {\n+    println!(\n+        \"Check each fuzz input individually ... ({} inputs with parallelism {par})\",\n+        entries.len()\n+    );\n+    let check_individual = |entry: &DirEntry, thread_id: usize| -> AppResult {\n         let entry = entry.path();\n         if !entry.is_file() {\n             Err(format!(\"{} should be a file\", entry.display()))?;\n         }\n-        let cov_txt_base = run_single(0, &entry)?;\n-        let cov_txt_repeat = run_single(1, &entry)?;\n+        let cov_txt_base = run_single(0, &entry, thread_id)?;\n+        let cov_txt_repeat = run_single(1, &entry, thread_id)?;\n         check_diff(\n             &cov_txt_base,\n             &cov_txt_repeat,\n             &format!(\"The fuzz target input was {}.\", entry.display()),\n         )?;\n-    }\n+        Ok(())\n+    };\n+    thread::scope(|s| -> AppResult {\n+        let mut handles = VecDeque::with_capacity(par);\n+        let mut res = Ok(());\n+        let set_err = |res: &mut _, handle: ScopedJoinHandle<_>| {\n+            let r = match handle.join() {\n+                Err(_e) => Err(\"a scoped thread panicked\".to_string()),\n+                Ok(r) => r,\n+            };\n+            if r.is_err() {\n+                *res = r;\n+            }\n+        };\n+        for (i, entry) in entries.iter().enumerate() {\n+            println!(\"[{i}/{}]\", entries.len());",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 130,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Off-by-one:\r\n```suggestion\r\n            println!(\"[{}/{}]\", i + 1, entries.len());\r\n```",
      "created_at": "2025-03-31T15:21:22Z",
      "updated_at": "2025-03-31T15:21:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2021257793",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021257793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 230,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021302172",
      "pull_request_review_id": 2729747306,
      "id": 2021302172,
      "node_id": "PRRC_kwDOABII5854ep-c",
      "diff_hunk": "@@ -187,20 +201,52 @@ The coverage was not deterministic between runs.\n     //\n     // Also, This can catch issues where several fuzz inputs are non-deterministic, but the sum of\n     // their overall coverage trace remains the same across runs and thus remains undetected.\n-    println!(\"Check each fuzz input individually ...\");\n-    for entry in entries {\n+    println!(\n+        \"Check each fuzz input individually ... ({} inputs with parallelism {par})\",\n+        entries.len()\n+    );\n+    let check_individual = |entry: &DirEntry, thread_id: usize| -> AppResult {\n         let entry = entry.path();\n         if !entry.is_file() {\n             Err(format!(\"{} should be a file\", entry.display()))?;\n         }\n-        let cov_txt_base = run_single(0, &entry)?;\n-        let cov_txt_repeat = run_single(1, &entry)?;\n+        let cov_txt_base = run_single(0, &entry, thread_id)?;\n+        let cov_txt_repeat = run_single(1, &entry, thread_id)?;\n         check_diff(\n             &cov_txt_base,\n             &cov_txt_repeat,\n             &format!(\"The fuzz target input was {}.\", entry.display()),\n         )?;\n-    }\n+        Ok(())\n+    };\n+    thread::scope(|s| -> AppResult {\n+        let mut handles = VecDeque::with_capacity(par);\n+        let mut res = Ok(());\n+        let set_err = |res: &mut _, handle: ScopedJoinHandle<_>| {\n+            let r = match handle.join() {\n+                Err(_e) => Err(\"a scoped thread panicked\".to_string()),\n+                Ok(r) => r,\n+            };\n+            if r.is_err() {\n+                *res = r;\n+            }\n+        };\n+        for (i, entry) in entries.iter().enumerate() {\n+            println!(\"[{i}/{}]\", entries.len());",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 130,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2021257793,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, done",
      "created_at": "2025-03-31T15:49:18Z",
      "updated_at": "2025-03-31T15:49:19Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2021302172",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021302172"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 230,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021302250",
      "pull_request_review_id": 2729747414,
      "id": 2021302250,
      "node_id": "PRRC_kwDOABII5854ep_q",
      "diff_hunk": "@@ -110,8 +120,10 @@ fn deterministic_coverage(\n         .map(|entry| entry.expect(\"IO error\"))\n         .collect::<Vec<_>>();\n     entries.sort_by_key(|entry| entry.file_name());\n-    let run_single = |run_id: u8, entry: &Path| -> Result<PathBuf, AppError> {\n-        let cov_txt_path = build_dir.join(format!(\"fuzz_det_cov.show.{run_id}.txt\"));\n+    let run_single = |run_id: u8, entry: &Path, thread_id: usize| -> Result<PathBuf, AppError> {\n+        let cov_txt_path = build_dir.join(format!(\"fuzz_det_cov.show.t{thread_id}.r{run_id}.txt\"));\n+        let profraw_file = build_dir.join(format!(\"fuzz_det_cov.t{thread_id}.r{run_id}.profraw\"));\n+        let profdata_file = build_dir.join(format!(\"fuzz_det_cov.t{thread_id}.r{run_id}.profdata\"));\n         if !{\n             {\n                 let mut cmd = Command::new(fuzz_exe);",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 80,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2020914099,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, pushed something similar with emojis",
      "created_at": "2025-03-31T15:49:21Z",
      "updated_at": "2025-03-31T15:49:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2021302250",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021302250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": 127,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 129,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021302350",
      "pull_request_review_id": 2729747582,
      "id": 2021302350,
      "node_id": "PRRC_kwDOABII5854eqBO",
      "diff_hunk": "@@ -187,20 +201,52 @@ The coverage was not deterministic between runs.\n     //\n     // Also, This can catch issues where several fuzz inputs are non-deterministic, but the sum of\n     // their overall coverage trace remains the same across runs and thus remains undetected.\n-    println!(\"Check each fuzz input individually ...\");\n-    for entry in entries {\n+    println!(\n+        \"Check each fuzz input individually ... ({} inputs with parallelism {par})\",\n+        entries.len()\n+    );\n+    let check_individual = |entry: &DirEntry, thread_id: usize| -> AppResult {\n         let entry = entry.path();\n         if !entry.is_file() {\n             Err(format!(\"{} should be a file\", entry.display()))?;\n         }\n-        let cov_txt_base = run_single(0, &entry)?;\n-        let cov_txt_repeat = run_single(1, &entry)?;\n+        let cov_txt_base = run_single(0, &entry, thread_id)?;\n+        let cov_txt_repeat = run_single(1, &entry, thread_id)?;\n         check_diff(\n             &cov_txt_base,\n             &cov_txt_repeat,\n             &format!(\"The fuzz target input was {}.\", entry.display()),\n         )?;\n-    }\n+        Ok(())\n+    };\n+    thread::scope(|s| -> AppResult {\n+        let mut handles = VecDeque::with_capacity(par);\n+        let mut res = Ok(());\n+        let set_err = |res: &mut _, handle: ScopedJoinHandle<_>| {\n+            let r = match handle.join() {\n+                Err(_e) => Err(\"a scoped thread panicked\".to_string()),\n+                Ok(r) => r,\n+            };\n+            if r.is_err() {\n+                *res = r;\n+            }\n+        };\n+        for (i, entry) in entries.iter().enumerate() {",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 129,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2020911351,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "thx, pushed something similar",
      "created_at": "2025-03-31T15:49:25Z",
      "updated_at": "2025-03-31T15:49:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2021302350",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021302350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": 222,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021680636",
      "pull_request_review_id": 2730365813,
      "id": 2021680636,
      "node_id": "PRRC_kwDOABII5854gGX8",
      "diff_hunk": "@@ -110,10 +120,12 @@ fn deterministic_coverage(\n         .map(|entry| entry.expect(\"IO error\"))\n         .collect::<Vec<_>>();\n     entries.sort_by_key(|entry| entry.file_name());\n-    let run_single = |run_id: u8, entry: &Path| -> Result<PathBuf, AppError> {\n-        let cov_txt_path = build_dir.join(format!(\"fuzz_det_cov.show.{run_id}.txt\"));\n-        if !{\n-            {\n+    let run_single = |run_id: u8, entry: &Path, thread_id: usize| -> Result<PathBuf, AppError> {\n+        let cov_txt_path = build_dir.join(format!(\"fuzz_det_cov.show.t{thread_id}.r{run_id}.txt\"));",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": 77,
      "original_position": 77,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit:\r\nCurrent failure output:\r\n```\r\ndiff --git a/home/hodlinator/bitcoin/build_fuzz/fuzz_det_cov.show.t5.r0.txt b/home/hodlinator/bitcoin/build_fuzz/fuzz_det_cov.show.t5.r1.txt\r\nindex da0315b1e4..93623d5c15 100644\r\n--- a/home/hodlinator/bitcoin/build_fuzz/fuzz_det_cov.show.t5.r0.txt\r\n+++ b/home/hodlinator/bitcoin/build_fuzz/fuzz_det_cov.show.t5.r1.txt\r\n...\r\n```\r\nIf you re-touch, it might be nice to use a/b instead of r0/r1:\r\n```\r\ndiff --git a/home/hodlinator/bitcoin/build_fuzz/fuzz_det_cov.show.t5.a.txt b/home/hodlinator/bitcoin/build_fuzz/fuzz_det_cov.show.t5.b.txt\r\nindex da0315b1e4..93623d5c15 100644\r\n--- a/home/hodlinator/bitcoin/build_fuzz/fuzz_det_cov.show.t5.a.txt\r\n+++ b/home/hodlinator/bitcoin/build_fuzz/fuzz_det_cov.show.t5.b.txt\r\n```\r\n\r\n```suggestion\r\n    let run_single = |run_id: char, entry: &Path, thread_id: usize| -> Result<PathBuf, AppError> {\r\n        let cov_txt_path = build_dir.join(format!(\"fuzz_det_cov.show.t{thread_id}.{run_id}.txt\"));\r\n```",
      "created_at": "2025-03-31T19:53:31Z",
      "updated_at": "2025-04-01T07:53:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2021680636",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021680636"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": 123,
      "original_start_line": 123,
      "start_side": "RIGHT",
      "line": 124,
      "original_line": 124,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021684116",
      "pull_request_review_id": 2730365813,
      "id": 2021684116,
      "node_id": "PRRC_kwDOABII5854gHOU",
      "diff_hunk": "@@ -187,20 +201,52 @@ The coverage was not deterministic between runs.\n     //\n     // Also, This can catch issues where several fuzz inputs are non-deterministic, but the sum of\n     // their overall coverage trace remains the same across runs and thus remains undetected.\n-    println!(\"Check each fuzz input individually ...\");\n-    for entry in entries {\n+    println!(\n+        \"Check each fuzz input individually ... ({} inputs with parallelism {par})\",\n+        entries.len()\n+    );\n+    let check_individual = |entry: &DirEntry, thread_id: usize| -> AppResult {\n         let entry = entry.path();\n         if !entry.is_file() {\n             Err(format!(\"{} should be a file\", entry.display()))?;\n         }\n-        let cov_txt_base = run_single(0, &entry)?;\n-        let cov_txt_repeat = run_single(1, &entry)?;\n+        let cov_txt_base = run_single(0, &entry, thread_id)?;\n+        let cov_txt_repeat = run_single(1, &entry, thread_id)?;\n         check_diff(\n             &cov_txt_base,\n             &cov_txt_repeat,\n             &format!(\"The fuzz target input was {}.\", entry.display()),\n         )?;\n-    }\n+        Ok(())\n+    };\n+    thread::scope(|s| -> AppResult {\n+        let mut handles = VecDeque::with_capacity(par);\n+        let mut res = Ok(());\n+        let set_err = |res: &mut _, handle: ScopedJoinHandle<_>| {\n+            let r = match handle.join() {\n+                Err(_e) => Err(\"a scoped thread panicked\".to_string()),\n+                Ok(r) => r,\n+            };\n+            if r.is_err() {\n+                *res = r;\n+            }\n+        };\n+        for (i, entry) in entries.iter().enumerate() {",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": null,
      "original_position": 129,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa1e2995d9996641e79f92549e99a6b37e36d140",
      "in_reply_to_id": 2020911351,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nice touch with getting rid of the `expect()` with the `if let ... else` and draining handles when `res.is_err()`.",
      "created_at": "2025-03-31T19:56:33Z",
      "updated_at": "2025-04-01T07:53:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2021684116",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021684116"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": 222,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 229,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021772164",
      "pull_request_review_id": 2730518297,
      "id": 2021772164,
      "node_id": "PRRC_kwDOABII5854gcuE",
      "diff_hunk": "@@ -187,20 +205,46 @@ The coverage was not deterministic between runs.\n     //\n     // Also, This can catch issues where several fuzz inputs are non-deterministic, but the sum of\n     // their overall coverage trace remains the same across runs and thus remains undetected.\n-    println!(\"Check each fuzz input individually ...\");\n-    for entry in entries {\n+    println!(\n+        \"Check each fuzz input individually ... ({} inputs with parallelism {par})\",\n+        entries.len()\n+    );\n+    let check_individual = |entry: &DirEntry, thread_id: usize| -> AppResult {\n         let entry = entry.path();\n         if !entry.is_file() {\n             Err(format!(\"{} should be a file\", entry.display()))?;\n         }\n-        let cov_txt_base = run_single(0, &entry)?;\n-        let cov_txt_repeat = run_single(1, &entry)?;\n+        let cov_txt_base = run_single(0, &entry, thread_id)?;\n+        let cov_txt_repeat = run_single(1, &entry, thread_id)?;\n         check_diff(\n             &cov_txt_base,\n             &cov_txt_repeat,\n             &format!(\"The fuzz target input was {}.\", entry.display()),\n         )?;\n-    }\n+        Ok(())\n+    };\n+    thread::scope(|s| -> AppResult {\n+        let mut handles = VecDeque::with_capacity(par);\n+        let mut res = Ok(());\n+        for (i, entry) in entries.iter().enumerate() {\n+            println!(\"[{}/{}]\", i + 1, entries.len());\n+            handles.push_back(s.spawn(move || check_individual(entry, i % par)));\n+            while handles.len() >= par || i == (entries.len() - 1) || res.is_err() {",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": 148,
      "original_position": 148,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "in_reply_to_id": null,
      "user": {
        "login": "janb84",
        "id": 608446,
        "node_id": "MDQ6VXNlcjYwODQ0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/608446?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/janb84",
        "html_url": "https://github.com/janb84",
        "followers_url": "https://api.github.com/users/janb84/followers",
        "following_url": "https://api.github.com/users/janb84/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/janb84/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/janb84/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/janb84/subscriptions",
        "organizations_url": "https://api.github.com/users/janb84/orgs",
        "repos_url": "https://api.github.com/users/janb84/repos",
        "events_url": "https://api.github.com/users/janb84/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/janb84/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```\r\n            while handles.len() >= par || i == (entries.len() - 1) || res.is_err() {\r\n```\r\nIs the condition `|| res.is_err()` intended to cause an early termination? it seems to keep running until handles is empty",
      "created_at": "2025-03-31T21:12:09Z",
      "updated_at": "2025-03-31T21:13:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2021772164",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021772164"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 232,
      "original_line": 232,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2022219509",
      "pull_request_review_id": 2731272032,
      "id": 2022219509,
      "node_id": "PRRC_kwDOABII5854iJ71",
      "diff_hunk": "@@ -187,20 +205,46 @@ The coverage was not deterministic between runs.\n     //\n     // Also, This can catch issues where several fuzz inputs are non-deterministic, but the sum of\n     // their overall coverage trace remains the same across runs and thus remains undetected.\n-    println!(\"Check each fuzz input individually ...\");\n-    for entry in entries {\n+    println!(\n+        \"Check each fuzz input individually ... ({} inputs with parallelism {par})\",\n+        entries.len()\n+    );\n+    let check_individual = |entry: &DirEntry, thread_id: usize| -> AppResult {\n         let entry = entry.path();\n         if !entry.is_file() {\n             Err(format!(\"{} should be a file\", entry.display()))?;\n         }\n-        let cov_txt_base = run_single(0, &entry)?;\n-        let cov_txt_repeat = run_single(1, &entry)?;\n+        let cov_txt_base = run_single(0, &entry, thread_id)?;\n+        let cov_txt_repeat = run_single(1, &entry, thread_id)?;\n         check_diff(\n             &cov_txt_base,\n             &cov_txt_repeat,\n             &format!(\"The fuzz target input was {}.\", entry.display()),\n         )?;\n-    }\n+        Ok(())\n+    };\n+    thread::scope(|s| -> AppResult {\n+        let mut handles = VecDeque::with_capacity(par);\n+        let mut res = Ok(());\n+        for (i, entry) in entries.iter().enumerate() {\n+            println!(\"[{}/{}]\", i + 1, entries.len());\n+            handles.push_back(s.spawn(move || check_individual(entry, i % par)));\n+            while handles.len() >= par || i == (entries.len() - 1) || res.is_err() {",
      "path": "contrib/devtools/deterministic-fuzz-coverage/src/main.rs",
      "position": 148,
      "original_position": 148,
      "commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "original_commit_id": "fa74244e97079658a51a808e1efb286fba0fd541",
      "in_reply_to_id": 2021772164,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, both are correct. The `while` loop will run while `res.is_err()` is true (res will remain err). The loop terminates when it is broken out from via the `return res;`.\r\n\r\nIt is not possible to terminate the program even earlier (other than doing an unclean abort), before all thread handles are empty. Because, if they weren't empty, the thread scope will implicitly join the remaining \"dangling\" threads.\r\n\r\nThis can be observed in the docs (https://doc.rust-lang.org/stable/std/thread/struct.Scope.html#method.spawn), or by testing (https://play.rust-lang.org/?version=stable&mode=debug&edition=2021&gist=a077ca0d4aa8d08e832a97fb28692417).",
      "created_at": "2025-04-01T06:20:31Z",
      "updated_at": "2025-04-01T06:20:31Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32158#discussion_r2022219509",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2022219509"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32158"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 232,
      "original_line": 232,
      "side": "RIGHT"
    }
  ]
}