{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966",
    "id": 2663459083,
    "node_id": "PR_kwDOABII586ewSkL",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32966",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32966.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32966.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32966",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32966/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
    "number": 32966,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "Silent Payments: Receiving",
    "user": {
      "login": "Eunovo",
      "id": 37949128,
      "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Eunovo",
      "html_url": "https://github.com/Eunovo",
      "followers_url": "https://api.github.com/users/Eunovo/followers",
      "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
      "organizations_url": "https://api.github.com/users/Eunovo/orgs",
      "repos_url": "https://api.github.com/users/Eunovo/repos",
      "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Eunovo/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "This PR is part of integrating silent payments into Bitcoin Core. Status and tracking for the project is managed in https://github.com/bitcoin/bitcoin/issues/28536\r\nThis PR is based on https://github.com/bitcoin/bitcoin/pull/28201 and will remain in draft until https://github.com/bitcoin/bitcoin/pull/28201 is merged.\r\n\r\nThis PR:\r\n- Adds a Silent Payments descriptor implemenation\r\n- Adds a `SilentPaymentsDescriptorScriptPubKeyMan` Impl that is a subclass of `DescriptorScriptPubKeyMan`\r\n- Implements Silent Payments scanning for the wallet\r\n- Updates sending logic to use `silent-payments` destination for change when sending to `silent-payments` destination\r\n- Adds unit and functional tests for silent payments-related functionality\r\n\r\n**Follow-ups**\r\n- Silent Payments Label functionality is incomplete in this PR and will be added as a follow-up PR.\r\n",
    "labels": [],
    "created_at": "2025-07-14T08:30:35Z",
    "updated_at": "2025-07-20T09:35:03Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "d1ee898da60744c8429d0b6152cf91fea13919e6",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": false,
    "head": {
      "label": "Eunovo:2025-implement-bip352-receiving",
      "ref": "2025-implement-bip352-receiving",
      "sha": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 755831492,
        "node_id": "R_kgDOLQ0SxA",
        "name": "bitcoin",
        "full_name": "Eunovo/bitcoin",
        "owner": {
          "login": "Eunovo",
          "id": 37949128,
          "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
          "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/Eunovo",
          "html_url": "https://github.com/Eunovo",
          "followers_url": "https://api.github.com/users/Eunovo/followers",
          "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
          "organizations_url": "https://api.github.com/users/Eunovo/orgs",
          "repos_url": "https://api.github.com/users/Eunovo/repos",
          "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/Eunovo/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/Eunovo/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/Eunovo/bitcoin",
        "archive_url": "https://api.github.com/repos/Eunovo/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/Eunovo/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/Eunovo/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/Eunovo/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/Eunovo/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/Eunovo/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/Eunovo/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/Eunovo/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/Eunovo/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/Eunovo/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/Eunovo/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/Eunovo/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/Eunovo/bitcoin/events",
        "forks_url": "https://api.github.com/repos/Eunovo/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/Eunovo/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/Eunovo/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/Eunovo/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/Eunovo/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/Eunovo/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/Eunovo/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/Eunovo/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/Eunovo/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/Eunovo/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/Eunovo/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/Eunovo/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/Eunovo/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/Eunovo/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/Eunovo/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/Eunovo/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:Eunovo/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/Eunovo/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/Eunovo/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/Eunovo/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/Eunovo/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/Eunovo/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/Eunovo/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/Eunovo/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/Eunovo/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/Eunovo/bitcoin/hooks",
        "svn_url": "https://github.com/Eunovo/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "forks_count": 0,
        "stargazers_count": 0,
        "watchers_count": 0,
        "size": 250040,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": true,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-07-20T08:30:36Z",
        "created_at": "2024-02-11T07:44:19Z",
        "updated_at": "2025-05-02T08:08:35Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "5878f35446ae260ccb0ab5051b795b4364f77951",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37545,
        "stargazers_count": 84644,
        "watchers_count": 84644,
        "size": 289329,
        "default_branch": "master",
        "open_issues_count": 761,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-07-19T05:17:27Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-07-20T07:08:14Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": true,
    "additions": 15479,
    "deletions": 371,
    "changed_files": 93,
    "commits": 34,
    "review_comments": 45,
    "comments": 5
  },
  "events": [
    {
      "event": "commented",
      "id": 3068386268,
      "node_id": "IC_kwDOABII586249vc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3068386268",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-14T08:30:40Z",
      "updated_at": "2025-07-19T05:43:58Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32966.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32977](https://github.com/bitcoin/bitcoin/pull/32977) (wallet: Remove wallet version and several legacy related functions by w0xlt)\n* [#32861](https://github.com/bitcoin/bitcoin/pull/32861) (Have createwalletdescriptor auto-detect an unused(KEY) by Sjors)\n* [#32784](https://github.com/bitcoin/bitcoin/pull/32784) (wallet: derivehdkey RPC to get xpub at arbitrary path by Sjors)\n* [#32763](https://github.com/bitcoin/bitcoin/pull/32763) (wallet: Replace CWalletTx::mapValue and vOrderForm with explicit class members by achow101)\n* [#32745](https://github.com/bitcoin/bitcoin/pull/32745) (scripted-diff: Update DeriveType enum values to mention ranged derivations by rkrux)\n* [#32724](https://github.com/bitcoin/bitcoin/pull/32724) (Musig2 tests by w0xlt)\n* [#32652](https://github.com/bitcoin/bitcoin/pull/32652) (wallet: add codex32 argument to addhdkey by roconnor-blockstream)\n* [#32579](https://github.com/bitcoin/bitcoin/pull/32579) (headerssync: Preempt unrealistic unit test behavior by hodlinator)\n* [#32523](https://github.com/bitcoin/bitcoin/pull/32523) (wallet: Remove isminetypes by achow101)\n* [#32471](https://github.com/bitcoin/bitcoin/pull/32471) (wallet/rpc: fix listdescriptors RPC fails to return descriptors with private key information when wallet contains descriptors missing any key by Eunovo)\n* [#31974](https://github.com/bitcoin/bitcoin/pull/31974) (Drop testnet3 by Sjors)\n* [#31514](https://github.com/bitcoin/bitcoin/pull/31514) (wallet: allow label for non-ranged external descriptor (if `internal=false`) & disallow label for ranged descriptors by scgbckbone)\n* [#31244](https://github.com/bitcoin/bitcoin/pull/31244) (descriptors: MuSig2 by achow101)\n* [#30243](https://github.com/bitcoin/bitcoin/pull/30243) (descriptors: taproot partial descriptors by Eunovo)\n* [#30214](https://github.com/bitcoin/bitcoin/pull/30214) (refactor: Improve assumeutxo state representation by ryanofsky)\n* [#30157](https://github.com/bitcoin/bitcoin/pull/30157) (Fee Estimation via Fee rate Forecasters by ismaelsadeeq)\n* [#29675](https://github.com/bitcoin/bitcoin/pull/29675) (wallet: Be able to receive and spend inputs involving MuSig2 aggregate keys by achow101)\n* [#29136](https://github.com/bitcoin/bitcoin/pull/29136) (wallet: `addhdkey` RPC to add just keys to wallets via new `unused(KEY)` descriptor by achow101)\n* [#28333](https://github.com/bitcoin/bitcoin/pull/28333) (wallet: Construct ScriptPubKeyMans with all data rather than loaded progressively by achow101)\n* [#28201](https://github.com/bitcoin/bitcoin/pull/28201) (Silent Payments: sending by josibake)\n* [#28122](https://github.com/bitcoin/bitcoin/pull/28122) (Silent Payments: Implement BIP352 by josibake)\n* [#27865](https://github.com/bitcoin/bitcoin/pull/27865) (wallet: Track no-longer-spendable TXOs separately by achow101)\n* [#27260](https://github.com/bitcoin/bitcoin/pull/27260) (Enhanced error messages for invalid network prefix during address parsing. by portlandhodl)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#issuecomment-3068386268",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32966"
    },
    {
      "event": "labeled",
      "id": 18615146284,
      "node_id": "LE_lADOABII587AZUn2zwAAAARVjJcs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18615146284",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-14T10:32:41Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3068875066,
      "node_id": "IC_kwDOABII586261E6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3068875066",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-14T10:32:42Z",
      "updated_at": "2025-07-14T10:32:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Task `tidy`: https://github.com/bitcoin/bitcoin/runs/45909076324</sub>\n<sub>LLM reason (✨ experimental): The CI failure was caused by errors in clang-tidy checks, specifically in descriptor.cpp and walletutil.cpp, which are treated as failures due to warnings-as-errors settings.</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#issuecomment-3068875066",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32966"
    },
    {
      "event": "reviewed",
      "id": 3015969430,
      "node_id": "PRR_kwDOABII586zxAqW",
      "url": null,
      "actor": null,
      "commit_id": "2d443cc405574077fd6860b7d4083943d6addab8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#pullrequestreview-3015969430",
      "submitted_at": "2025-07-14T11:56:35Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
    },
    {
      "event": "commented",
      "id": 3070838431,
      "node_id": "IC_kwDOABII5863CUaf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3070838431",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-14T20:13:21Z",
      "updated_at": "2025-07-14T20:14:08Z",
      "author_association": "MEMBER",
      "body": "Another thing I noticed while testing using the `send` RPC, in a wallet with _only_ an `sp()` descriptor, is that it insists on having a bech32 descriptor for change:\r\n\r\n> Transaction needs a change address, but we can't generate it. Error: No bech32 addresses available.\r\n\r\nIt seems safer, for backups, to send change to the same silent payment address.\r\n\r\nWallet created by:\r\n\r\n```sh\r\nbitcoin rpc createwallet Silent blank=true silent_payments=true\r\nbitcoin rpc importdescriptors '[{\"desc\": \"sp(xprv...,xprv...)\",  \"timestamp\": \"now\", \"active\": true]\r\n``` \r\n\r\nAlso looking forward to have labels back :-)",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#issuecomment-3070838431",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32966"
    },
    {
      "event": "reviewed",
      "id": 3020599518,
      "node_id": "PRR_kwDOABII5860CrDe",
      "url": null,
      "actor": null,
      "commit_id": "2d443cc405574077fd6860b7d4083943d6addab8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Did a big overview with @Sjors , leaving the notes from our discussion as a review. In general, I think we should investigate using a custom type for the scan key since a lot of the changes seem to be hacking around the fact we represent the scan key as a private key, but then often need to use it as not a private key.\r\n\r\nStill in the process of reviewing, but leaving the initial notes for now",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#pullrequestreview-3020599518",
      "submitted_at": "2025-07-15T15:19:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
    },
    {
      "event": "reviewed",
      "id": 3019536178,
      "node_id": "PRR_kwDOABII586z-ncy",
      "url": null,
      "actor": null,
      "commit_id": "2d443cc405574077fd6860b7d4083943d6addab8",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#pullrequestreview-3019536178",
      "submitted_at": "2025-07-15T15:31:27Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
    },
    {
      "event": "commented",
      "id": 3075063066,
      "node_id": "IC_kwDOABII5863Sb0a",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3075063066",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-15T18:56:43Z",
      "updated_at": "2025-07-15T18:56:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the reviews @josibake and @Sjors . I am currently travelling, and I will get to them later in the week.",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#issuecomment-3075063066",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32966"
    },
    {
      "event": "mentioned",
      "id": 18644898724,
      "node_id": "MEE_lADOABII587AZUn2zwAAAARXUpOk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18644898724",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-15T18:56:44Z"
    },
    {
      "event": "subscribed",
      "id": 18644898778,
      "node_id": "SE_lADOABII587AZUn2zwAAAARXUpPa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18644898778",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-15T18:56:44Z"
    },
    {
      "event": "mentioned",
      "id": 18644898818,
      "node_id": "MEE_lADOABII587AZUn2zwAAAARXUpQC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18644898818",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-15T18:56:44Z"
    },
    {
      "event": "subscribed",
      "id": 18644898875,
      "node_id": "SE_lADOABII587AZUn2zwAAAARXUpQ7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18644898875",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-15T18:56:44Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ2ZjVjMmYxZjM4MjkyMmMxOWEwNzBiNzg4MDNmYmQyOWNlZGQ2MmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46f5c2f1f382922c19a070b78803fbd29cedd62b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/46f5c2f1f382922c19a070b78803fbd29cedd62b",
      "tree": {
        "sha": "c9f98ca61cc6f8647cf2e2375843f856c80f7193",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9f98ca61cc6f8647cf2e2375843f856c80f7193"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c31fcaaad38b68fa170cf9fd900f2237c24016e3",
          "sha": "c31fcaaad38b68fa170cf9fd900f2237c24016e3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c31fcaaad38b68fa170cf9fd900f2237c24016e3"
        }
      ],
      "message": "Squashed 'src/secp256k1/' changes from 4187a46649..9e85256bbe\n\n9e85256bbe docs: update README\n4b1fb2c186 ci: enable silentpayments module\nde508a78ac tests: add constant time tests\n45427dd4d7 tests: add BIP-352 test vectors\n6975614517 silentpayments: add benchmarks for scanning\na9af9ebf35 silentpayments: add examples/silentpayments.c\nb06254b6c7 silentpayments: receiving\n3c9362dd6a silentpayments: recipient label support\n70e20b7145 silentpayments: sending\ncf44324b5e build: add skeleton for new silentpayments (BIP352) module\nad60ef7ea7 Merge bitcoin-core/secp256k1#1689: ci: Convert `arm64` Cirrus tasks to GHA jobs\nc498779096 Merge bitcoin-core/secp256k1#1687: cmake: support the use of launchers in ctest -S scripts\n0dfe387dbe cmake: support the use of launchers in ctest -S scripts\n89096c234d Merge bitcoin-core/secp256k1#1692: cmake: configure libsecp256k1.pc during install\n7106dce6fd cmake: configure libsecp256k1.pc during install\n29e73f4ba5 Merge bitcoin-core/secp256k1#1685: cmake: Emulate Libtool's behavior on FreeBSD\n746e36b141 Merge bitcoin-core/secp256k1#1678: cmake: add a helper for linking into static libs\na28c2ffa5c Merge bitcoin-core/secp256k1#1683: README: add link to musig example\n2a9d374735 Merge bitcoin-core/secp256k1#1690: ci: Bump GCC snapshot major version to 16\nadd146e101 ci: Bump GCC snapshot major version to 16\n004f57fcd8 ci: Move Valgrind build for `arm64` from Cirrus to GHA\n5fafdfc30f ci: Move `gcc-snapshot` build for `arm64` from Cirrus to GHA\ne814b79a8b ci: Switch `arm64_debian` from QEMU to native `arm64` Docker image\nbcf77346b9 ci: Add `arm64` architecture to `docker_cache` job\nb77aae9226 ci: Rename Docker image tag to reflect architecture\n145ae3e28d cmake: add a helper for linking into static libs\n819210974b README: add link to musig example, generalize module enabling hint\n95db29b144 Merge bitcoin-core/secp256k1#1679: cmake: Use `PUBLIC_HEADER` target property in installation logic\n37dd422b5c cmake: Emulate Libtool's behavior on FreeBSD\nf24b838bed Merge bitcoin-core/secp256k1#1680: doc: Promote \"Building with CMake\" to standard procedure\n3f31ac43e0 doc: Promote \"Building with CMake\" to standard procedure\n6f67151ee2 cmake: Use `PUBLIC_HEADER` target property\nc32715b2a0 cmake, move-only: Move module option processing to `src/CMakeLists.txt`\n201b2b8f06 Merge bitcoin-core/secp256k1#1675: cmake: Bump minimum required CMake version to 3.22\n3af71987a8 cmake: Bump minimum required CMake version to 3.22\n92394476e9 Merge bitcoin-core/secp256k1#1673: Assert field magnitude at control-flow join\n3a4f448cb4 Assert field magnitude at control-flow join\n9fab425256 Merge bitcoin-core/secp256k1#1668: bench_ecmult: add benchmark for ecmult_const_xonly\n05445377f4 bench_ecmult: add benchmark for ecmult_const_xonly\nbb597b3d39 Merge bitcoin-core/secp256k1#1670: tests: update wycheproof files\nd73ed99479 tests: update wycheproof files\n\ngit-subtree-dir: src/secp256k1\ngit-subtree-split: 9e85256bbe527bf084222ee08dade9ea497d5c99",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T11:25:41Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T11:25:41Z"
      },
      "sha": "46f5c2f1f382922c19a070b78803fbd29cedd62b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE0MjI0ZmQyZjNiMzFlZDg2OTM5Nzk4OWQ4ODMwNmRmMmEzY2ZlNmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14224fd2f3b31ed869397989d88306df2a3cfe6f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/14224fd2f3b31ed869397989d88306df2a3cfe6f",
      "tree": {
        "sha": "09c115742821fca2dbcd518084c35298239c48ae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/09c115742821fca2dbcd518084c35298239c48ae"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 09c115742821fca2dbcd518084c35298239c48ae\nparent 9f713b83dcf7480e6c4447f0f263bef096d55cc7\nparent 46f5c2f1f382922c19a070b78803fbd29cedd62b\nauthor josibake <josibake@protonmail.com> 1752751541 +0100\ncommitter josibake <josibake@protonmail.com> 1752751541 +0100\n\nMerge commit '46f5c2f1f382922c19a070b78803fbd29cedd62b' into refresh-secp256k1\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh43bgACgkQity1WMTz\nPWXoSQ/+IYKuXTw/oZTkmlv4EIbAqLfEdh6+ySs/SkBS0dnh2c9xdVx+GWmEjg/6\nDIzLM/38srRCs87gdAax9WdMeh+ncbWTjkMwF5VLid88XkLnlxRtYKAGhhU/1Bly\nrOf6NkOpp1EtjXbZX5cixnFo47qqYUBexVkAF42hBrcNdfWmjE2KhD+17ba30eKi\ntMC9eUbpRw+IiIu6f9yXfqYZt9z8mo7Rq1kkJxj7fa4KaXUqYGY6uSUfOprONsK+\na9ULl06zAD3NvST/eYKRr/3iaPIzF5EnCMcrB/ruEWzMm7jYpc37vAOePBLuIBJi\nCjpN4WJ8XAjGp5Cvfh1yVHp7Lo4kOE4n00lSZx34ZaCpdiqIvJwY/+a6lAi/uc6/\nzXBJrT7fytkXPbUJL6bLtgq+Q5DOcGiOIhFR4Y7aBK3JcNPaSpX/Kxh1ycR4eb+z\nHlQG22m86GHpTRPNL2XhXYGXeNe03RIjFUsRTzLEUCbA8x4I6RuUtK8exxkx2sM2\nrxbSVtJfY1NH4tr1Osk8YWDDETZiHA4+ztZ5fHLMJ2jtjnQrvgdFUrTsb+ytJJri\nuU3ReyMrJXgraO/EvLKwlGXGanUGRGAblIyJVwGp0idh+H+84VzMWnwOxvqzkxmM\n2qkrXQCV1OwPPkAnuNm1jx/h+8+66WeaqLjO0RYEezK6VzGn1KE=\n=x8Bt\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9f713b83dcf7480e6c4447f0f263bef096d55cc7",
          "sha": "9f713b83dcf7480e6c4447f0f263bef096d55cc7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9f713b83dcf7480e6c4447f0f263bef096d55cc7"
        },
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46f5c2f1f382922c19a070b78803fbd29cedd62b",
          "sha": "46f5c2f1f382922c19a070b78803fbd29cedd62b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/46f5c2f1f382922c19a070b78803fbd29cedd62b"
        }
      ],
      "message": "Merge commit '46f5c2f1f382922c19a070b78803fbd29cedd62b' into refresh-secp256k1",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T11:25:41Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T11:25:41Z"
      },
      "sha": "14224fd2f3b31ed869397989d88306df2a3cfe6f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDcwMmViOTZjNDY5MDQyODhmNzJmMDJmOTY4MzM5YzI3YzY1MjQxOTU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/702eb96c46904288f72f02f968339c27c6524195",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/702eb96c46904288f72f02f968339c27c6524195",
      "tree": {
        "sha": "3b8f011a18161a60243e86e43f7dd2cc20d414ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b8f011a18161a60243e86e43f7dd2cc20d414ce"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3b8f011a18161a60243e86e43f7dd2cc20d414ce\nparent 14224fd2f3b31ed869397989d88306df2a3cfe6f\nauthor josibake <josibake@protonmail.com> 1743763075 +0200\ncommitter josibake <josibake@protonmail.com> 1752751847 +0100\n\ncrypto: add read-only method to KeyPair\n\nAdd a method for passing a KeyPair object to secp256k1 functions expecting a secp256k1_keypair.\nThis allows for passing a KeyPair directly to a secp256k1 function without needing to create a\ntemporary secp256k1_keypair object.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh43ucACgkQity1WMTz\nPWVcvRAArF1j7XZApJ4Kvlh26U1zeErIXdvlhJwYhUfXWUOqBuUcH5tACKG8fijz\nB8uJtbjHxpf1MbIOjiziY06n9Vxuq+kNBK+bfteP0rmyQ//8Lc1ER9ybJr92sQjS\nIsbrtqGO0tpHFdhu8IS1q3HdWxW2PR0VV2XTu4xpPCK3IC4qg8pCktXgnmJAWpW9\nDixm9SBuZx3aMclkpj66WoPS+xzQfwBcA2dMkUKARabjEECTPLp/iBC/QdfZ5c+K\nEgDwy0sIAJUeKZXgGuTdOHinglTfx32SY8fETDgKLEbibYiTu1LAAXdARWmLW6Oo\n59ByaG5U+i1kjYY15Ogw9pTaWW5ncC2zbpIheDzI/V7tt06XrZEzGCR4reafihdh\n/hgGhUSAovKIyeqKlphxIkeZY8tvH6pMT3cD+Zs5Y8ky8xI8FO7MFXeitEvuRQnL\nafnizSdc98nMB7a+xSObuuj9VFTVxHGnjcudNmBeRV51S3snwuPOw9CaNqJFvnv1\n0aA2NRi7fOy3jqGCcuOItsBZh7RR5yikgXw/UPzI8CPu2q7q1etJhDSvsvhGln0K\nOcd1kC1gG2TpJKx9DOdL1AeWPzZed2lZ9z3Tp6lrbtTsqM58U/ENJwrxyF363tvc\nqrkvM4vXriMRiB347cm6WfKtKlt7VEwp8mxga7IcRd7qUPGyV0c=\n=++J0\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14224fd2f3b31ed869397989d88306df2a3cfe6f",
          "sha": "14224fd2f3b31ed869397989d88306df2a3cfe6f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/14224fd2f3b31ed869397989d88306df2a3cfe6f"
        }
      ],
      "message": "crypto: add read-only method to KeyPair\n\nAdd a method for passing a KeyPair object to secp256k1 functions expecting a secp256k1_keypair.\nThis allows for passing a KeyPair directly to a secp256k1 function without needing to create a\ntemporary secp256k1_keypair object.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T11:30:47Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-04-04T10:37:55Z"
      },
      "sha": "702eb96c46904288f72f02f968339c27c6524195"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkxZDU4OGQ4MzlmMWJkM2QzYTJhNWZiZDE2OGY2MmFmMzNjNTM3ZTk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91d588d839f1bd3d3a2a5fbd168f62af33c537e9",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/91d588d839f1bd3d3a2a5fbd168f62af33c537e9",
      "tree": {
        "sha": "db7bf7c97766e8de5bfb7bb4dba1b4091534d97f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db7bf7c97766e8de5bfb7bb4dba1b4091534d97f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree db7bf7c97766e8de5bfb7bb4dba1b4091534d97f\nparent 702eb96c46904288f72f02f968339c27c6524195\nauthor josibake <josibake@protonmail.com> 1689711791 +0200\ncommitter josibake <josibake@protonmail.com> 1752751848 +0100\n\nAdd \"sp\" HRP\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh43ukACgkQity1WMTz\nPWX/+g//S17XuE0OqzzPaxI2TEcrPk2Ff+1xwvPN27tNWHoqiSSQGgTbYEqD7f+t\n84iyEMDaIZQi+/js5b6DGHrofc5AjlxBjoshgvyBCFXJSXp2GutMcGLq48kTUmsX\nT2LVEEvNvg69RqI0EmMkNdCW7uGX96PrU0fulyhu8KWBabc/kkPWyNB/XblpLlb8\nouWd1aqsNVgk7zcmnSuFiQ7txBgnS0K+yrEXnIpAbCJTZ59fVijNNxpagXjsMv5C\nsMNql4hdboJdzdUJnUHuEuHxpLAmmQJgw+QLoTzRYk3LZtCDWrz3wu9ryN8z6fsY\nMLk8YVZi6dH2AquJGY7ngqqnme62bmwnznMUqPNOJG42qg2UgAePaySkQZ+4tgfI\nhs4bCGolZodrgqkgqCstQ2/CBEl6Fo1JMWrCbJxOpw45DeCCbuJAPUEugQ3tP4m4\nd4etCx/M9LpSVlEl6UQhEuESnEYjwX8ndRhwYpOVBhDxpvX8UrALrFEHb65LQpQ3\n/5xUD8ixpcUcvnlZXWxzBnfPe1mTG86S45IRBo7yHOR7SF/yx7omMbhZ4P4DPeC2\nYDOdyM4MZV6YOo+JVbFrXLw6qFguBQ/TR1uEqEF2BtGRAfRRtc/tzlElWCbuZpT/\noRG2Wt4fwdsBEjVMcrgMTxxsqp++MRQx9BiuNk5sQ0jRllF9+4c=\n=Azb+\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/702eb96c46904288f72f02f968339c27c6524195",
          "sha": "702eb96c46904288f72f02f968339c27c6524195",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/702eb96c46904288f72f02f968339c27c6524195"
        }
      ],
      "message": "Add \"sp\" HRP",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T11:30:48Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-07-18T20:23:11Z"
      },
      "sha": "91d588d839f1bd3d3a2a5fbd168f62af33c537e9"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ2MDcwZDM0MzczOTQxNTIyNTdlYmY1NGRiMzRiYjUyOTBhNjJjN2I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6070d3437394152257ebf54db34bb5290a62c7b",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d6070d3437394152257ebf54db34bb5290a62c7b",
      "tree": {
        "sha": "824756e2baae391484ed95113cab18d4e417c59f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/824756e2baae391484ed95113cab18d4e417c59f"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 824756e2baae391484ed95113cab18d4e417c59f\nparent 91d588d839f1bd3d3a2a5fbd168f62af33c537e9\nauthor josibake <josibake@protonmail.com> 1691675009 +0200\ncommitter josibake <josibake@protonmail.com> 1752751849 +0100\n\nAdd V0SilentPaymentDestination address type\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh43uoACgkQity1WMTz\nPWV7JRAAglwycpcTFa6nJYEwGqygTzKrlWwQ8SHBodaVqr5e+soi1K0ZdXUHItlG\nCbvPXdjjx++JKk+NtcHCDCifSRLMSq8malbKKQDn25ynVE5rCRa1smenzEBnQr+8\nJPVEYI54mZ4eLmmG7Nn51sg00GBNF4gwJo2qLfodqsAG5cPpQVZrwqk8i4egHx/Y\n+60qbOErUO0ucLmt81cA4sQ8rXnnK7GOyoRSTo8Vo3NvujbM7WNPICgd7EMHJZpG\nXRCjsMk+yLNt7UOVhNhc+dFx6lFw+Sp5c/2TOhZ4m/BhlXPnjbEokvclazF+ExEN\n4Ed6AnQpNiT5mwqQ4GIkQ2QvjkpJTDhlMxZJRvEOKeAGJq/Dl8rtc3L4A3/BKsw6\nT994hggbTYHDTeJYFvJrPyDHeOq9QSsjJl7guEerS6DkjTT8BUzkdtrW8pj7aVUy\ndHUqHaNYdXxF/F9JLcePtRgsjoivwe7gqPylGYaCZ8nfzhw2ODToU7YLW/CTa3Lt\n1L+Oad5hwuE5tPMgs0rZmqqvswqvOzDX4jNcLGBIwfp18KRkPzLyywD3k+8kd1jc\nfMGh2AOp5NcfeUUr9ROwf9Zhde924SoMl3cY2Zek9Dmo+9A7hxgTrn9BELaLZ39H\n5trDXiAmFjQSxl87FM8ImZFMYGzDxEMPaYtDIpg9Zpmky5Hv+0A=\n=vplZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91d588d839f1bd3d3a2a5fbd168f62af33c537e9",
          "sha": "91d588d839f1bd3d3a2a5fbd168f62af33c537e9",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/91d588d839f1bd3d3a2a5fbd168f62af33c537e9"
        }
      ],
      "message": "Add V0SilentPaymentDestination address type",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T11:30:49Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-08-10T13:43:29Z"
      },
      "sha": "d6070d3437394152257ebf54db34bb5290a62c7b"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGEwMzg0NTg5ZTRlY2FiOWE5NDg2OTE3YTg5N2Y5ZmNkNGE0ZGQ4ZGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0384589e4ecab9a9486917a897f9fcd4a4dd8dc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/a0384589e4ecab9a9486917a897f9fcd4a4dd8dc",
      "tree": {
        "sha": "d8772061877891011d4d49d2bcd478ecd58749e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d8772061877891011d4d49d2bcd478ecd58749e7"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d8772061877891011d4d49d2bcd478ecd58749e7\nparent d6070d3437394152257ebf54db34bb5290a62c7b\nauthor josibake <josibake@protonmail.com> 1707319694 +0100\ncommitter josibake <josibake@protonmail.com> 1752751851 +0100\n\ncommon: add bip352.{h,cpp} secp256k1 module\n\nWrap the silentpayments module from libsecp256k1. This is placed in\ncommon as it is intended to be used by:\n\n  * RPCs: for parsing addresses\n  * Wallet: for sending, receiving, spending silent payment outputs\n  * Node: for creating silent payment indexes for light clients\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh43usACgkQity1WMTz\nPWV5oQ//b/MHHs+Tc8ME3A55JCv5g+LLyIsJb5gqsnjkj63lM6IKqeEVulgHWaUa\nkMrtt9wocFnIpAkgWNdb9n4oSrZPqs+Tj0/raVKecNYiTI2CFv7SgZTqS1ksaM0b\n3x7InLtI2WnooQzqdVHpiUYdRFR+CWmK4t4HQs3KMy/Ne9VM0VPeUQ7tZ+ydA1aF\nvS3vd+NCxkIvqU2llr3jBwKRJ/9ZWOwZOK2g7tCCKfWfyX/sRdpvhcG58OYJ1YE9\n44W6yGLCkqhrlVrALI96fQcHKBD2ZctvR712XH8ZZLKtrMjtoZD4WRkc8hNeY7Vb\nL0+Y6cwMWDsh/kBtGWXo03svvXfAEgBsnggxc3rFXqHPT9PNzOmZ8z040wZvatKl\np5Q9vNaSSycClj92t/PUu3r9sw7EL+wXkkQ495ONnAyof+p/TY1MIa28xZCyCIwv\nZP8i4tE+awzIzm6JhJ4HhGsczpweyBm+eZJuUzXBjwfI9P1VFv3AvJunNqf4Pgwa\nhN1Bj+cgtWIxAedMIaHarof0UaZj5YAk30xEBEatZbFV2puZZdGiCAdh8XSdMZ34\nELZ3EoNr+YHsdXbU7M2Lp1Y7/Y8VO5/hLgo5VT9D15NV8c7OEu1lvt8yeTgcuZjK\ntEB/71/wgEdI0RfCej0QOWLr6usPS8+PMnTxx4fZrQUaQPWuf0c=\n=ccSl\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6070d3437394152257ebf54db34bb5290a62c7b",
          "sha": "d6070d3437394152257ebf54db34bb5290a62c7b",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d6070d3437394152257ebf54db34bb5290a62c7b"
        }
      ],
      "message": "common: add bip352.{h,cpp} secp256k1 module\n\nWrap the silentpayments module from libsecp256k1. This is placed in\ncommon as it is intended to be used by:\n\n  * RPCs: for parsing addresses\n  * Wallet: for sending, receiving, spending silent payment outputs\n  * Node: for creating silent payment indexes for light clients",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T11:30:51Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-02-07T15:28:14Z"
      },
      "sha": "a0384589e4ecab9a9486917a897f9fcd4a4dd8dc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDE3NjVjMWZmM2Q5MGE1MWYyNDhmNmNlMzVkMjNkZDBmODI1NjYwMzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1765c1ff3d90a51f248f6ce35d23dd0f82566036",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/1765c1ff3d90a51f248f6ce35d23dd0f82566036",
      "tree": {
        "sha": "a30989884d0a4f56644696415e39ac8facfa8689",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a30989884d0a4f56644696415e39ac8facfa8689"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a30989884d0a4f56644696415e39ac8facfa8689\nparent a0384589e4ecab9a9486917a897f9fcd4a4dd8dc\nauthor josibake <josibake@protonmail.com> 1694507187 +0200\ncommitter josibake <josibake@protonmail.com> 1752751852 +0100\n\nwallet: disable sending to silent payment address\n\nHave `IsValidDestination` return false for silent payment destinations\nand set an error string when decoding a silent payment address.\n\nThis prevents anyone from sending to a silent payment address before\nsending is implemented in the wallet, but also allows the functions to\nbe used in the unit testing famework.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh43uwACgkQity1WMTz\nPWUxzA/9Flwdw99l2CepkBI/VOuKDcpM9/6PbCjgXzBO6cKdMEk8tksGUXDrK7I8\nE4YHyjT2LdIyLJ0oqk1VloBy+xUBu1EnLIPP5sYujLvxVkGKZziPK9AQNexChdPW\n2l9AqmafWD7PHKgRPOm9qIEMy897TA9+HwJ1CQN1DUVt4qR3H0DPi285lB3qTTOy\n2ApMztzyBvWmtv+LnTXsqISKkhtENJqHvsI2WQ7OHGfrSCxRQ98W4EOfKUDiqaf1\n5E3AK1MDsCuQXaTcA9jWEnHj4dQNWA+nLdOFi6MCjB1ky2bLjkofSaTEcXCNm/pD\nGO4ndrq+IssRsTMrBn7t3iePD2L7LW5gnVgB5+ByU+VlmyalcCZ3hokxMOjanFOA\nb4UbxpA0yM0SdtdSpaxKTnB+EdDqcaHJ8AJTzqnon1IcVS2hUZBv0yTNCpMX594d\nFrDwd00Fig2N3O7Di/SFt5k0I8Vt92C3ucHUqYf5imI9yhSqpLhScNIIpIEtvULP\nhNuEk3csXcwV0SL6QppbscxaPJtbFALfGDoQoAR4h3Ug52XzJbFWLDGx6eT5quiW\nADeqj0EUyR+6aYzbbq9e+9A42cY42m1stcajAnuvyGdki2aCILxJIS+a5oi2Gzqs\njRf9ENwNVcbyfdyswCbLpXk8PsfQ+6kxKjPyBcDFRky5b8in/LM=\n=Mkg8\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0384589e4ecab9a9486917a897f9fcd4a4dd8dc",
          "sha": "a0384589e4ecab9a9486917a897f9fcd4a4dd8dc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a0384589e4ecab9a9486917a897f9fcd4a4dd8dc"
        }
      ],
      "message": "wallet: disable sending to silent payment address\n\nHave `IsValidDestination` return false for silent payment destinations\nand set an error string when decoding a silent payment address.\n\nThis prevents anyone from sending to a silent payment address before\nsending is implemented in the wallet, but also allows the functions to\nbe used in the unit testing famework.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T11:30:52Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-09-12T08:26:27Z"
      },
      "sha": "1765c1ff3d90a51f248f6ce35d23dd0f82566036"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ4MjBjZjZjMmRmMGUxNTcwM2U2MmIxZjllYmJlMWU1ZThhZjBkYzY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d820cf6c2df0e15703e62b1f9ebbe1e5e8af0dc6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d820cf6c2df0e15703e62b1f9ebbe1e5e8af0dc6",
      "tree": {
        "sha": "8198a3bbb451fa871482a9544da181aba8ba8cf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8198a3bbb451fa871482a9544da181aba8ba8cf4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 8198a3bbb451fa871482a9544da181aba8ba8cf4\nparent 1765c1ff3d90a51f248f6ce35d23dd0f82566036\nauthor josibake <josibake@protonmail.com> 1714906399 +0200\ncommitter josibake <josibake@protonmail.com> 1752751853 +0100\n\ntests: add BIP352 test vectors as unit tests\n\nUse the test vectors to test sending and receiving. A few cases are not\ncovered here, namely anything that requires testing specific to the\nwallet. For example:\n\n* Taproot script path spending is not tested, as that is better tested in\n  a wallets coin selection / signing logic\n* Re-computing outputs during RBF is not tested, as that is better\n  tested in a wallets RBF logic\n\nThe unit tests are written in such a way that adding new test cases is\nas easy as updating the JSON file\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh43u0ACgkQity1WMTz\nPWXjBQ//YDEhDmKQ7JstYbeQOeqS8xPOSIZYZCv5xLwQWMM+lmRnL3K/bM2yna7+\ndYGmBU/6ifxINESyzAXK/BADOtUpeJ2uRUPd5bXhOj3RiFR19grFPtXD4gTdQkzp\nVbqDMnoKPt6f4LXrvhFPjF446XUh7qJ9/8ngTjKZCtX2PMGEgxWvsd0+AEpxIdNY\n+tkbDnCA8LR5LmJiPGR9oE78ZTHhzAp+DRmH8iEAtsRfSskH+nwBdcWB/4xLD7mj\neKl16B097w/FYWwB0PQUeiAFbhwlPn6n8qA+MD8DWWILiPyttA495n66COwn6KUP\n+rsFaYpBlzdm7s0SrcspoziLd1GuTeH7iRvG8lwXILjR4x6WG7GSXiZwf13y6kD9\n+vQkPCLrhaCv+qlI0PqHj4WxwTlsrXRwLvwi2SCzZFMIECRGx4QRewnX0YYwgq49\nHQP59RCJj51zHG1PkAmq7a2W0CV+ND7xSWMlXOIlNfXGmhT6wvwfnkFX9+8ZJ5bD\nNIROhBlmk2Tt5ppMYn4V2fIaUSDpHq4t8WhaKKTL02/Lr7I6Pa5fwGFhgXpLoaQL\neWmhfJNmQGi/UnSNp+UPGbH5hwhSTtYMDQdl20lF5FyPcJSJFU3UFZzuwSPAnGfr\nEa5F1rMtUhfjMPHIw2kV0NKV9ANaKYGcdVDELbVMg6mMQHyLnmk=\n=Dc1n\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1765c1ff3d90a51f248f6ce35d23dd0f82566036",
          "sha": "1765c1ff3d90a51f248f6ce35d23dd0f82566036",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/1765c1ff3d90a51f248f6ce35d23dd0f82566036"
        }
      ],
      "message": "tests: add BIP352 test vectors as unit tests\n\nUse the test vectors to test sending and receiving. A few cases are not\ncovered here, namely anything that requires testing specific to the\nwallet. For example:\n\n* Taproot script path spending is not tested, as that is better tested in\n  a wallets coin selection / signing logic\n* Re-computing outputs during RBF is not tested, as that is better\n  tested in a wallets RBF logic\n\nThe unit tests are written in such a way that adding new test cases is\nas easy as updating the JSON file",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T11:30:53Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-05-05T10:53:19Z"
      },
      "sha": "d820cf6c2df0e15703e62b1f9ebbe1e5e8af0dc6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDIzMTgyYmEwNTM2NWY2YzZkNjNmOGVlNDRiZGY0NmQ4NDkwZGE2MzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23182ba05365f6c6d63f8ee44bdf46d8490da633",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/23182ba05365f6c6d63f8ee44bdf46d8490da633",
      "tree": {
        "sha": "29440c0ccf1bcc5ab04722e328c2986f3a129ec9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29440c0ccf1bcc5ab04722e328c2986f3a129ec9"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 29440c0ccf1bcc5ab04722e328c2986f3a129ec9\nparent d820cf6c2df0e15703e62b1f9ebbe1e5e8af0dc6\nauthor josibake <josibake@protonmail.com> 1714909622 +0200\ncommitter josibake <josibake@protonmail.com> 1752769901 +0100\n\nwallet: get serialized size for `V0SilentPayments`\n\nBIP352 v0 specifies that a silent payment output is a taproot output.\nTaproot scriptPubKeys are a fixed size, so when calculating the\nserialized size for a CRecipient with a V0SilentPayments destination,\nuse WitnessV1Taproot for the serialized txout size.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh5JW4ACgkQity1WMTz\nPWVvyA/+LpKlZU7NSdNf203Q/6v4Bt6XFOKJN9mMzSuOF6qoTtMR47v2c9K2nyL+\nx9Gr9WO+wZO98e760RENhUURn9t9WjcvYpmazmT4y5K7gwWYYiyiykUFJc60m2L5\nqYkmEvmSMKAVkFwUYXKtwBMMnrAtqB5vufP3Ei5NGxNDqIwxsJF/hvwbRlhPGBpG\nbW9kOv8h59VO46QxpXhGz2R3fbeFJhh0St+t59dkQvZdB5aJLHu9+0Ia2WiFXBSB\nmolbIqcbnxI7ztYMfVPHcQYvieE5vFLhdT9VNosRCCtQ0XFiNA6RomAIydVnQJ1V\nC1/Bfl3OXsRXkjzRGRfOfXHrRcqOjUZ/pY6PhtHzzFpP5GT8/kW3N7VZ0FXOl+FV\nPeO1XFye7KXLJzripBHQRM3AbLqjcGwWYmFXjju3lpsSsSLa8gi7OEPa/9ogPP3F\nPBrzzbgKfYk/tbPJY8IVblE7Yxp6mjMOZd2prVNmqKLevWYRfR9pQGd1kI3ZN8cQ\ni1oAs+bb9TlvMGoCVyTqtgMlLHMvL4U938VZwoEDK1V6NSkMDe4Yx/AmbRAHM5VJ\np8XaQYDWxmIzD2ZVgAnS2NE2f1ClOBvrbiIn2oaGV15WT8NDIRrtt6wW9bssnVs/\ngslppesP2+xCrjMcn6X+UJNvNnhIXKDcXYsyjpJj4MpeoK++lbA=\n=WKNp\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d820cf6c2df0e15703e62b1f9ebbe1e5e8af0dc6",
          "sha": "d820cf6c2df0e15703e62b1f9ebbe1e5e8af0dc6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d820cf6c2df0e15703e62b1f9ebbe1e5e8af0dc6"
        }
      ],
      "message": "wallet: get serialized size for `V0SilentPayments`\n\nBIP352 v0 specifies that a silent payment output is a taproot output.\nTaproot scriptPubKeys are a fixed size, so when calculating the\nserialized size for a CRecipient with a V0SilentPayments destination,\nuse WitnessV1Taproot for the serialized txout size.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T16:31:41Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-05-05T11:47:02Z"
      },
      "sha": "23182ba05365f6c6d63f8ee44bdf46d8490da633"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdhMjUzYTgwZTdiOWQxODk2NjJiZWYzZDI1YTZjNjY3Zjc5NTE5MmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a253a80e7b9d189662bef3d25a6c667f795192a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7a253a80e7b9d189662bef3d25a6c667f795192a",
      "tree": {
        "sha": "21848f975d5adc33fe2bf550be917b9dbbc367be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21848f975d5adc33fe2bf550be917b9dbbc367be"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 21848f975d5adc33fe2bf550be917b9dbbc367be\nparent 23182ba05365f6c6d63f8ee44bdf46d8490da633\nauthor josibake <josibake@protonmail.com> 1689934894 +0200\ncommitter josibake <josibake@protonmail.com> 1752769903 +0100\n\nwallet: add method for retreiving a private key\n\nAdd a method for retreiving a private key for a given scriptPubKey.\nIf the scriptPubKey is a taproot output, tweak the private key with the\nmerkle root or hash of the public key, if applicable.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh5JXAACgkQity1WMTz\nPWVDIhAAowMCiHxiFyJx3ggSuY9Gcg8aaY5D+d60yqRFXKMurOS/cntiaqfVUdIM\nMCLGZEFdNYYN9pJEJhQqvOQLKdL2Mj3bf/2i5b07YjAqwwKM6ZfMUXu/XBfrlPvv\nzFI5WuOP++iVyloO32PwICqsWTRK8OOoZATT/LKKf55RYqWdCrKTIQwaPLngIJKv\nWUrIv4kom49k6zfslezbL3xy2Cfc3pCXdqnLR2GvrwS1uY2RjOsXlZztMg+/2c3I\n5KJjeb4bsgnxVDMFHDU6kBNclDZTI2nwwrSDg5LbvUNHh04GzV9HowtpZMCIqmon\n1PHvDfLm1il7FpcWDz2+vZDOv6FVcGsL5/itW3izNKdJY+Ocr81tJfQnF9OFaeGl\nvL2piUjUwq9igd2HuVsA41ChoAmeikMJQh3DoiQZq+oFy9BWNno1IanLTfrVblzr\nECPvqVisOEBOWpmumBUCHRDfkag08+KqqxKIjP/kpFFYKMLtxxVKeYv/CxnXMTlZ\n4GEqFLEiXUx47YrxioRKr8ZB9el0sFckKkuEr4iXDW9oYysyQGLY3dQjhqpg5mX6\nWZTeGM1pZ3rXo8a9C56jbUVQT5XZUMnEvInt7o3Q0AR9elTy08/2OoMPiKRYjNiH\nFqj1txpemK3XHW89hmlwKMXAZRTuiTybdRujigSWtaJjHrF19wk=\n=Axvz\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23182ba05365f6c6d63f8ee44bdf46d8490da633",
          "sha": "23182ba05365f6c6d63f8ee44bdf46d8490da633",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/23182ba05365f6c6d63f8ee44bdf46d8490da633"
        }
      ],
      "message": "wallet: add method for retreiving a private key\n\nAdd a method for retreiving a private key for a given scriptPubKey.\nIf the scriptPubKey is a taproot output, tweak the private key with the\nmerkle root or hash of the public key, if applicable.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T16:31:43Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-07-21T10:21:34Z"
      },
      "sha": "7a253a80e7b9d189662bef3d25a6c667f795192a"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGUwNDA0NDM1ZmY0ZDY0YjMyYjU4Nzc0YjZjOTA5YzY2ZjE2OTJhOWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0404435ff4d64b32b58774b6c909c66f1692a9f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e0404435ff4d64b32b58774b6c909c66f1692a9f",
      "tree": {
        "sha": "0320d121ebb3a2202626f0f1235a2506312cfc37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0320d121ebb3a2202626f0f1235a2506312cfc37"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 0320d121ebb3a2202626f0f1235a2506312cfc37\nparent 7a253a80e7b9d189662bef3d25a6c667f795192a\nauthor josibake <josibake@protonmail.com> 1689934780 +0200\ncommitter josibake <josibake@protonmail.com> 1752769904 +0100\n\nwallet: make coin selection silent payment aware\n\nAdd a flag to the `CoinControl` object if silent payment destinations\nare provided. Before adding the flag, call a function which checks if:\n\n* The wallet has private keys\n* The wallet is unlocked\n\nWithout both of the above being true, we cannot send to a silent payment\naddress.\n\nDuring coin selection, if this flag is set, skip taproot inputs when\nscript spend data is available. This is based on the assumption that if\na user provides script spend data, they don't have access to the key\npath spend. As future improvement, we could instead check to see if we\nhave access to the key path spend, and only exclude the output when we\ndon't regardless of whether or not the user provides script spend data.\n\nAlso skip UTXOs of type `WITNESS_UNKNOWN`, although it is very unlikely\nour wallet would ever try to spend a witness unknown output.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh5JXAACgkQity1WMTz\nPWX+YA//eTSZ2bW9ToBt5cEYpiDDxKHwJe/oafZ7qB+yiDX2mOoARdzjmi/GlAdN\nQSTOYMk2zuA6eEyp54K2idICZenNMRM+tlAidf0ioN9NAU5fbzjaFklM7yatlFJw\noQF4SUaMrgTRBO014qLlsFnUXqVCwhuWcCAgHIioyABsYCMt2Fdcq/K/MbO3fCRx\nUP5prwOf0iP361NtJVn/G9dfd3UaNrxS1OiFX9EmDo4cE5GEm2FCGyewtajN1OAd\nQGcEY7ZPPNYzl6uAKb2Z2lbV0tJXHJjagQy9NSNmliR/DN9AZBYpnj3Z4qg83ACq\nUW9HYcnb1MGlmAqcXWSXkEmJfAb7HnJNA2mfx5HglV6PHcECwXwALo+Vkz3TG2Nu\nJGZuGFmJVKnNZgWyroR43LufdDdZ1ciFhxa8I5yx9KNTqMc6HXWiGGLKSxD7jupv\n8qp3tfegBVdo/E9WxuYR4hQ2eqArdrf1yuVrWX0TkrRX04OVI8tANQ7VXInMPi14\n/29zQAdTt8x4pD+RCNRAGEq4mCBoIVzfnWlmNHwRPFvZbG/Y+Xj5LLxTo8E/5ZC/\n3++7XXrPcl9QVH0PGISkOJHygVhhxxUZgPR7U69RxIGwM+3oqRyLXjPQyk6Yfz+B\n3vaB455iOeYCQW7NSyV8DNYew461e3iT/ByzrVAp5hvakvsgDzQ=\n=WejD\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a253a80e7b9d189662bef3d25a6c667f795192a",
          "sha": "7a253a80e7b9d189662bef3d25a6c667f795192a",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7a253a80e7b9d189662bef3d25a6c667f795192a"
        }
      ],
      "message": "wallet: make coin selection silent payment aware\n\nAdd a flag to the `CoinControl` object if silent payment destinations\nare provided. Before adding the flag, call a function which checks if:\n\n* The wallet has private keys\n* The wallet is unlocked\n\nWithout both of the above being true, we cannot send to a silent payment\naddress.\n\nDuring coin selection, if this flag is set, skip taproot inputs when\nscript spend data is available. This is based on the assumption that if\na user provides script spend data, they don't have access to the key\npath spend. As future improvement, we could instead check to see if we\nhave access to the key path spend, and only exclude the output when we\ndon't regardless of whether or not the user provides script spend data.\n\nAlso skip UTXOs of type `WITNESS_UNKNOWN`, although it is very unlikely\nour wallet would ever try to spend a witness unknown output.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T16:31:44Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-07-21T10:19:40Z"
      },
      "sha": "e0404435ff4d64b32b58774b6c909c66f1692a9f"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUxYWQ1ZmNjYjRhMWNhZWJlZmNkMGFjOWZmNDY0ZDZmM2VhYTFhMTc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51ad5fccb4a1caebefcd0ac9ff464d6f3eaa1a17",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/51ad5fccb4a1caebefcd0ac9ff464d6f3eaa1a17",
      "tree": {
        "sha": "3b9018ff853af83c1fc7c8b95f28365a1369b51a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b9018ff853af83c1fc7c8b95f28365a1369b51a"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 3b9018ff853af83c1fc7c8b95f28365a1369b51a\nparent e0404435ff4d64b32b58774b6c909c66f1692a9f\nauthor josibake <josibake@protonmail.com> 1690901143 +0200\ncommitter josibake <josibake@protonmail.com> 1752769905 +0100\n\nwallet: add `IsInputForSharedSecretDerivation` function\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh5JXEACgkQity1WMTz\nPWVp9w//QBxmYRUNNtMaFT0lInbb4NjYt6iJX9mKU7yOUDwvsdsxiJzKGiCi2BlH\nPo4nyzDMvSHcrM8Zlg9QWc77c0twyv51CI5SEKJoWEqgGWzuEIv2dASp0CrnOO6k\nL/bHbtxozsPPAAPKjd3+ckELAc5FmTFG+Aqg7ZyM1JPSQwOBCBCkapkT0k+uXgqi\nZXjbNE2Q/u5j6h54zGlhFD+Z0/FInydJ2UqiCavNt4/SO9f7aBJ+g1u6/N8VTpZH\nH05EThaVVu2VXog7CiYW/FwVFEIwnfzGJ15BnIMpSnJTrfXIGmm16/PG6uVpkB8t\nCgGVELFb1+OeKBGpVqDEa1DX13dFRuy46ilYw8MjtRDhr9hs1tBVLfAT6G4xdnzm\nGDj3oCRh/gX4FvbKuAZIUX5wnutbAXE6tHs8a6ZlMxAjj7DgRrRNgllYb0CDisd1\n9BcpO54Sy8BCFQ66nwsqvMnFk3xVWyvRXDaJG8XkglVqfOyVEUR8yersHQvx/EoP\n9odFEmf0wjmURIi2EzVGTNm1S2zWFt11Duvb2HnBjVnHPzJAX3sOeK8JZDNEHMsP\nCct0KKbjtZ0tvuyPvIMzmJUQEKUetT7A+RA/im5yMbXetLtZDAEw8pI5ZteahI9W\n2EbB2QAsYtyQDfElQ/sE+q7kW517Dvd4OnR6VFECnM/aArcB4Z0=\n=RAQi\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0404435ff4d64b32b58774b6c909c66f1692a9f",
          "sha": "e0404435ff4d64b32b58774b6c909c66f1692a9f",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e0404435ff4d64b32b58774b6c909c66f1692a9f"
        }
      ],
      "message": "wallet: add `IsInputForSharedSecretDerivation` function",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T16:31:45Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-08-01T14:45:43Z"
      },
      "sha": "51ad5fccb4a1caebefcd0ac9ff464d6f3eaa1a17"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDkxMGIyMTk5MDBiMWU2YjI2NmI2MDA2MTJmNWIwMWVmNGY2ODVmYzQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/910b219900b1e6b266b600612f5b01ef4f685fc4",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/910b219900b1e6b266b600612f5b01ef4f685fc4",
      "tree": {
        "sha": "463465c22eb43e45db252474a73475654738367e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/463465c22eb43e45db252474a73475654738367e"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 463465c22eb43e45db252474a73475654738367e\nparent 51ad5fccb4a1caebefcd0ac9ff464d6f3eaa1a17\nauthor josibake <josibake@protonmail.com> 1718717909 +0200\ncommitter josibake <josibake@protonmail.com> 1752769906 +0100\n\nwallet: add `CreateSilentPaymentOutputs` function\n\n`CreateSilentPaymentsOutputs` gets the correct private keys, adds them\ntogether, groups the silent payment destinations and then generates the\ntaproot script pubkeys. These are then passed back to\nCreateTransactionInternal, which uses these scriptPubKeys to update\nvecSend before adding them to the transaction outputs.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh5JXIACgkQity1WMTz\nPWVKTxAA2ecmwwoUyYYryat1tIgHXzp5fwYhcrupSjIe/I5555BzS83KCw86ZpEu\nse5ANvI6a9lYWZ6jbFdXbHPhuzX9nftG6qzzVMYAoFTcTvl35K5ncF8aaVzBvYs6\nhZGsgnPlrW5lt0VIvgvuzf8X7n0Z8qcfk1yfDGzgOrtEY79+E2Hax8vSbKoG8uM4\nI8Hv6PtVgfxmR3UF5DMHn6pczTMbH7H+VWGB7HPgo8ZPTyChEQ9Dcw3kB1dfeyr1\nsrRUjTTqjHrSuatYyhlEGCWwI2cRXEbyQ+zIh/+qoBauIqrODBNTHUPykAdXSvBL\njq4glGtxNOGLvDwKkzMJHIURcvFigiZJHfnenZ7gDZfyJVsv78jS/LDJmy69d33W\nkoL3aIv+L/2fmFxgY6VTDDQmW8ZLkSg5T4OCgg2VQkBfgNvmQ/yQsBlkQrO+Crn3\nAxdzo8zpHqxUfNaJouRzFMYgM7uUhPgW9q/ruPiVRFLI4njok4dXFIXGc+7aKf1f\n1bQPGpWp9oxU/jaUyn8jLdU4IZwJtEF3rNMDI2Z+nJKLb0b3T0hJ9zjxTZ3Z1sZj\nzXKs00XmgpPxmrP5Cs7fXtIUE7H2WUlUdBq7B7kSgSLxm8X5H2+ZQYQHRZ1bAvXE\nkCPi4GgCp/jr9Zy9//bcRQrUIGDNGfiAKicqHCDN/tMuabKHNpU=\n=rdYZ\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51ad5fccb4a1caebefcd0ac9ff464d6f3eaa1a17",
          "sha": "51ad5fccb4a1caebefcd0ac9ff464d6f3eaa1a17",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/51ad5fccb4a1caebefcd0ac9ff464d6f3eaa1a17"
        }
      ],
      "message": "wallet: add `CreateSilentPaymentOutputs` function\n\n`CreateSilentPaymentsOutputs` gets the correct private keys, adds them\ntogether, groups the silent payment destinations and then generates the\ntaproot script pubkeys. These are then passed back to\nCreateTransactionInternal, which uses these scriptPubKeys to update\nvecSend before adding them to the transaction outputs.",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T16:31:46Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2024-06-18T13:38:29Z"
      },
      "sha": "910b219900b1e6b266b600612f5b01ef4f685fc4"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNlNzgxMjM2NGY3YTQ0MmQ0MjE1MTQwMWExY2U5MTY1M2MxNTYzOTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e7812364f7a442d42151401a1ce91653c156398",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3e7812364f7a442d42151401a1ce91653c156398",
      "tree": {
        "sha": "a1b34e55edba436be8db7ca11a220e6d459b1318",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1b34e55edba436be8db7ca11a220e6d459b1318"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree a1b34e55edba436be8db7ca11a220e6d459b1318\nparent 910b219900b1e6b266b600612f5b01ef4f685fc4\nauthor josibake <josibake@protonmail.com> 1690383935 +0200\ncommitter josibake <josibake@protonmail.com> 1752769907 +0100\n\nwallet: update TransactionChangeType\n\nIf sending to a silent payment destination, the change type should be taproot\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh5JXMACgkQity1WMTz\nPWVu7Q//erTjLGurHEVgKkg+wmZFvKFQH6zW3DNcAZ0MrXZM2ydoVzxOGeFdnBTx\nhalPcFR4LA9HZ7K1Xb1FHYDzg5lBxOquKTIrlE61TzgVLT42vVUefuGNdsVUpQtC\nK3P96R+xJmMgnbZ1IZIekSU4zUgsoxvuZSipOqmgPlAN3V1veAkngkZj9xZrFCBW\n3XMNqvDzGMAwkBowsrhs6PbgscqXRGmqtHCSsll39dP1BXTPKz3oSoCU84Q5Schw\nLNK1vreXSAJW60fs4euVI0+FiW+3hHKt+v6pevDi6C4UbQne+eVcTuPasFOkeDEU\nqWbUYWKRUPcmHKZl2N+No02NbzRrjYW7pipF2oxwnSZZafCPCWBCeGWqkg414jAw\nFEOLIIDHRiD7b1GFZaaAKXOOhQRmKKE8XVLK9+NK8KGXmPHg9qDrkCSvcQxW5dCU\nqggf5W/1WVwaZF4I3KT/Ilxm3qZ9WGpvlq6lDSfDaxkNHtJMOYN+hqlU+R0tVceW\nuajbvrSnmG9kSi4uHHeUI22ZvTF42NDbpYkXBHs2qJm045zhnR+Zu8QDVbD+dD7u\nw0Xr533CiNtgP7i4mNANn6IE//cgj4n2KzCCUWEfNFzypIsaVpXW9tM1x3+kf4KR\nbKOxeIxsTixOtiszssb4mVD0Vi6irT6CgmpMuQwK9hwjJAewIus=\n=IqQ/\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/910b219900b1e6b266b600612f5b01ef4f685fc4",
          "sha": "910b219900b1e6b266b600612f5b01ef4f685fc4",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/910b219900b1e6b266b600612f5b01ef4f685fc4"
        }
      ],
      "message": "wallet: update TransactionChangeType\n\nIf sending to a silent payment destination, the change type should be taproot",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T16:31:47Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-07-26T15:05:35Z"
      },
      "sha": "3e7812364f7a442d42151401a1ce91653c156398"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQ2ZmI3NDI2YzdiNTkyZDZhMWI2M2M3YjU0NWY5OGM4ZTU4MDg3OTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6fb7426c7b592d6a1b63c7b545f98c8e5808798",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d6fb7426c7b592d6a1b63c7b545f98c8e5808798",
      "tree": {
        "sha": "b22f1d61200a9616c56e0560f5b7e1770c7ed55d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b22f1d61200a9616c56e0560f5b7e1770c7ed55d"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree b22f1d61200a9616c56e0560f5b7e1770c7ed55d\nparent 3e7812364f7a442d42151401a1ce91653c156398\nauthor josibake <josibake@protonmail.com> 1694515383 +0200\ncommitter josibake <josibake@protonmail.com> 1752769908 +0100\n\nwallet: enable sending to silent payment address\n\nTreat silent payment addresses as valid destination. Also disable using\nsilent payment addresses with the `addr()` descriptor, as this\ndescriptor expects an encoding of a scriptPubKey, whereas a silent\npayment address consists of instructions on how to generate a\nscriptPubKey for the recipient.\n\nCo-authored-by: Oghenovo Usiwoma <37949128+eunovo@users.noreply.github.com>\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh5JXQACgkQity1WMTz\nPWX3jQ/8CUYlRfluvzx6+VRMk8M27IcD5Y61CLh9qTOggg0NJ4bcZ5eEvn1ZM2ex\nRz5Kci0GL3p2wVPB5LJJ22UWG8yo/zhMDmTvgeeyMtCu2rACi0KIQ0ezx2VUtiJB\nReaMbRy9tLKieFGHDUjyLmpzdojPSywEgR38d3kBKzRGUAsF5xbewFBXJjhRfbq7\n+2FFQgKC6SOvF9R5SPhc7JyQvdAcrz2PV+c1k8PORvgUrYN1y0BlF2+QnIcJLkO3\nXojJoRP8GpUiyHiXzzyuV2w29CSjkbnZ7t0GKi16a3h+LSZTRDJ7A41xWar3SL15\nQJ9BTdwPKJzXiQLR/H4C6nQi4zduSf6JfsKeu1vtekrR7VmKj6FyyhG6e63uv47Y\nCQbyAunEb1sJHUyT1Jd7LV32e1Et9ktlo0HL+UV47b1x4EjZ9rg1EsfXDnn+MBi9\nyGF/pIMFaP9ftqA4VB5MJCV3OEu2IcuiMvQWGaKIvEShY5rUQ/U69adMQpeEOzWF\nt/EccMANujtJgf7LhUZOhl6D0BgvCBesOaaChQdOmRTjfZuIePUDJZgW+PFgxD3N\n77RFiAMYTGhcpYcts+bo2H3cTYzqmPE7MGDHoXSZJ8M05ozVgCbQyRoIf46gCTJC\n9uk6f+ry5z1Z+nXdezEtptLoN/d1eBu+LCd/deaxuA6baOy/TuM=\n=kBe3\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e7812364f7a442d42151401a1ce91653c156398",
          "sha": "3e7812364f7a442d42151401a1ce91653c156398",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3e7812364f7a442d42151401a1ce91653c156398"
        }
      ],
      "message": "wallet: enable sending to silent payment address\n\nTreat silent payment addresses as valid destination. Also disable using\nsilent payment addresses with the `addr()` descriptor, as this\ndescriptor expects an encoding of a scriptPubKey, whereas a silent\npayment address consists of instructions on how to generate a\nscriptPubKey for the recipient.\n\nCo-authored-by: Oghenovo Usiwoma <37949128+eunovo@users.noreply.github.com>",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T16:31:48Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-09-12T10:43:03Z"
      },
      "sha": "d6fb7426c7b592d6a1b63c7b545f98c8e5808798"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQyMjVlYmM2NTU5NWI1ZWYwZjY2MWI0ZjQxZTNlMjEyNjZiOTM1NzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4225ebc65595b5ef0f661b4f41e3e21266b93575",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4225ebc65595b5ef0f661b4f41e3e21266b93575",
      "tree": {
        "sha": "952525b457946495c925053e0ea9fad5a583394b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/952525b457946495c925053e0ea9fad5a583394b"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree 952525b457946495c925053e0ea9fad5a583394b\nparent d6fb7426c7b592d6a1b63c7b545f98c8e5808798\nauthor josibake <josibake@protonmail.com> 1690550678 +0200\ncommitter josibake <josibake@protonmail.com> 1752769909 +0100\n\ntests: add sending functional tests\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYWUWuOtu0CiC/Ep6ity1WMTzPWUFAmh5JXUACgkQity1WMTz\nPWXsVw/+IQr+urlpOrceTOPyelMJblAkXql13H7GwA/uDB5nKqWKdpYt4B1Ud7PO\nqkG+5VOtj4mwp0wjKwUBfvHncVt5mq3iHefhI3L4UKgTRWilPyJ8uxATM0DnppWj\n7Ww70aZ+hY0SFnZ5M6beRFLLclk7rD3Wdq3EJ3qd2KaBysMVdZlKlaGEvDxVY8+d\nlyUy9LjN1LMcsoo7VFexWR8vEzfWmeyIrbab3pX/Rq6AmiPPq2mG1YKtEXOuPjvA\ngN0pa7EH0ehBNRcOgyCKMS/1bbStKL2TNlyVzEp4YaliNe9M1gT9S0zQRxv7oxEz\nnnTcXeLmG/+GbRHd/wqkpYo987vtNPT+ag3Jem24yjmeVPABd8/wbcGPDA4Phxo7\na48tvTQStU9eUBRPD1X9PB9n9FKkesIQbhUm/6JVqTDwDEqZ5ktmYhhQbR9qckba\nTsA3w42nob5W2gleFA27SpFd/fAXeiFxDWSh4XDaU5KcyxnQ3zBprIdxGMxWWC0U\nKjNzoDkkKETSFpv11b6/Wi+jbtBoas2z7QAe3MSx4GfJTyXMTBrRAM75EURurcd8\neMuDXYVI4uj49xxWtnduvncYxidv537bKwygHD/y4MlZvEFyA19lm9Djf0JNkdEq\nkkMDqGCgT24wFn6jIx/AtXKvqTXKKqj+ncAahCtWvD68LBPS308=\n=kuQg\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6fb7426c7b592d6a1b63c7b545f98c8e5808798",
          "sha": "d6fb7426c7b592d6a1b63c7b545f98c8e5808798",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d6fb7426c7b592d6a1b63c7b545f98c8e5808798"
        }
      ],
      "message": "tests: add sending functional tests",
      "committer": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-07-17T16:31:49Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2023-07-28T13:24:38Z"
      },
      "sha": "4225ebc65595b5ef0f661b4f41e3e21266b93575"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU5YjE4MGViNTFkNmI4NWMxNjFiMDExZGI5ODM4ZTg1YzU2NmRkZmE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9b180eb51d6b85c161b011db9838e85c566ddfa",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e9b180eb51d6b85c161b011db9838e85c566ddfa",
      "tree": {
        "sha": "1a273fd431b530c27b98e412731efe3d525efe9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a273fd431b530c27b98e412731efe3d525efe9b"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4225ebc65595b5ef0f661b4f41e3e21266b93575",
          "sha": "4225ebc65595b5ef0f661b4f41e3e21266b93575",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4225ebc65595b5ef0f661b4f41e3e21266b93575"
        }
      ],
      "message": "descriptor: add PubkeyProvider::ToPrivateString(CKey)\n\nThis method will be used by sp descriptor to convert the scan_key to private string",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-19T11:44:23Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-06-25T08:25:48Z"
      },
      "sha": "e9b180eb51d6b85c161b011db9838e85c566ddfa"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQxZjdiZjU4ZmYxZDRiZjgyOTEzMTQ1MzMyNmUwODlhN2NhMTQ5MjA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41f7bf58ff1d4bf829131453326e089a7ca14920",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/41f7bf58ff1d4bf829131453326e089a7ca14920",
      "tree": {
        "sha": "aa2eb12459001db3cf0b3bfd5ac69b8f1d2b9ee8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa2eb12459001db3cf0b3bfd5ac69b8f1d2b9ee8"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9b180eb51d6b85c161b011db9838e85c566ddfa",
          "sha": "e9b180eb51d6b85c161b011db9838e85c566ddfa",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e9b180eb51d6b85c161b011db9838e85c566ddfa"
        }
      ],
      "message": "Add OutputType::SILENT_PAYMENTS",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T04:34:45Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T04:34:45Z"
      },
      "sha": "41f7bf58ff1d4bf829131453326e089a7ca14920"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGQwMDZhYTg5NTZmOGM5NzAyNzQ5ZDM0NWRiMDIzNWI1MjczNDU1N2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d006aa8956f8c9702749d345db0235b52734557e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/d006aa8956f8c9702749d345db0235b52734557e",
      "tree": {
        "sha": "19ddcebaa58fb9db88f98ca9ea8e1a0b774fbee1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/19ddcebaa58fb9db88f98ca9ea8e1a0b774fbee1"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41f7bf58ff1d4bf829131453326e089a7ca14920",
          "sha": "41f7bf58ff1d4bf829131453326e089a7ca14920",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/41f7bf58ff1d4bf829131453326e089a7ca14920"
        }
      ],
      "message": "descriptor: implement sp(scan, spend) desc",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T04:40:26Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T04:35:09Z"
      },
      "sha": "d006aa8956f8c9702749d345db0235b52734557e"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18714683346,
      "node_id": "HRFPE_lADOABII587AZUn2zwAAAARbe2fS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18714683346",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "cf8007c1e9d2e415409b157694793a1616fb4606",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/cf8007c1e9d2e415409b157694793a1616fb4606",
      "created_at": "2025-07-20T04:47:31Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY4MWVlOTUxNTQxM2U2NjMyZjcwYTIzYzI4ZWRhNWQzZjZjZmY1ZjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/681ee9515413e6632f70a23c28eda5d3f6cff5f5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/681ee9515413e6632f70a23c28eda5d3f6cff5f5",
      "tree": {
        "sha": "5b82aabdbeba95e29e06a65bfe27633729fd5c9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5b82aabdbeba95e29e06a65bfe27633729fd5c9f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d006aa8956f8c9702749d345db0235b52734557e",
          "sha": "d006aa8956f8c9702749d345db0235b52734557e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d006aa8956f8c9702749d345db0235b52734557e"
        }
      ],
      "message": "pubkey: add TweakAdd() method\n\nThis method makes it easier to tweak silent payment spend keys in later commits",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:01:32Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-06-24T12:23:36Z"
      },
      "sha": "681ee9515413e6632f70a23c28eda5d3f6cff5f5"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18715369714,
      "node_id": "HRFPE_lADOABII587AZUn2zwAAAARbheDy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18715369714",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ec56655f73a04b56b05e97e1ca204a26b9299e61",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/ec56655f73a04b56b05e97e1ca204a26b9299e61",
      "created_at": "2025-07-20T08:16:21Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIwN2Y2ZDlhZTYyZDRmZmRkYjI2NDJmYTlkNTIyZTU5MmY4NGE4NTM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b07f6d9ae62d4ffddb2642fa9d522e592f84a853",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b07f6d9ae62d4ffddb2642fa9d522e592f84a853",
      "tree": {
        "sha": "966bcde7fecb110760e1e5287a0d54d42d30d2eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/966bcde7fecb110760e1e5287a0d54d42d30d2eb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/681ee9515413e6632f70a23c28eda5d3f6cff5f5",
          "sha": "681ee9515413e6632f70a23c28eda5d3f6cff5f5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/681ee9515413e6632f70a23c28eda5d3f6cff5f5"
        }
      ],
      "message": "notifications: Add spent_coins to tx added notification\n\nThe spent_coins data will be used to scan for silent payments in later commits\n\nCo-authored-by: Ava Chow <github@achow101.com>",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:28:05Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T07:47:35Z"
      },
      "sha": "b07f6d9ae62d4ffddb2642fa9d522e592f84a853"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI5ZTczODQ1MTY4NDg4NjBhZTYzNDg3MGNkNjQyNjg5YjI5NGE3MjQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29e7384516848860ae634870cd642689b294a724",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/29e7384516848860ae634870cd642689b294a724",
      "tree": {
        "sha": "e4db5aeb29d91a35cba0296b25bbecc6ad0a9933",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4db5aeb29d91a35cba0296b25bbecc6ad0a9933"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b07f6d9ae62d4ffddb2642fa9d522e592f84a853",
          "sha": "b07f6d9ae62d4ffddb2642fa9d522e592f84a853",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b07f6d9ae62d4ffddb2642fa9d522e592f84a853"
        }
      ],
      "message": "interfaces: Load block undo data\n\nThis undo data will be used to scan for silent payments in later commits\n\nCo-authored-by: Ava Chow <github@achow101.com>",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:29:18Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T07:50:54Z"
      },
      "sha": "29e7384516848860ae634870cd642689b294a724"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDdkMmIwMDQ3MzJkOWQ5ODA0YjI0ZTU2MzFiNjhkMTUwZjJmMDNiNmM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d2b004732d9d9804b24e5631b68d150f2f03b6c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/7d2b004732d9d9804b24e5631b68d150f2f03b6c",
      "tree": {
        "sha": "31b316c414ca3e7b1d1631297471ae8f6d31da54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31b316c414ca3e7b1d1631297471ae8f6d31da54"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29e7384516848860ae634870cd642689b294a724",
          "sha": "29e7384516848860ae634870cd642689b294a724",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/29e7384516848860ae634870cd642689b294a724"
        }
      ],
      "message": "wallet: generate sp() descriptor",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:29:59Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-05-18T14:33:30Z"
      },
      "sha": "7d2b004732d9d9804b24e5631b68d150f2f03b6c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNmMTU3ZmU3NTY0ZTg4MTUxZTc5ZDVjMDU2NjEzZjQ2NDkzNTgyMTQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf157fe7564e88151e79d5c056613f4649358214",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cf157fe7564e88151e79d5c056613f4649358214",
      "tree": {
        "sha": "6c91d4d8cecbb5ea9f1b171ab2ed8268dbb78bf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c91d4d8cecbb5ea9f1b171ab2ed8268dbb78bf2"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d2b004732d9d9804b24e5631b68d150f2f03b6c",
          "sha": "7d2b004732d9d9804b24e5631b68d150f2f03b6c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/7d2b004732d9d9804b24e5631b68d150f2f03b6c"
        }
      ],
      "message": "wallet: create SilentPaymentDescriptorScriptPubKeyMan\n\nCo-authored-by: Ava Chow <github@achow101.com>",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:29:59Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-05-18T18:38:15Z"
      },
      "sha": "cf157fe7564e88151e79d5c056613f4649358214"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDk3YzE3MTMwMzlmMzk0ZDUxNGNlZTVlZGMzYjgzMTdhZTEyMDQ0YmI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97c1713039f394d514cee5edc3b8317ae12044bb",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/97c1713039f394d514cee5edc3b8317ae12044bb",
      "tree": {
        "sha": "d78dc007ce3b119be343050093429eac302b4b66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d78dc007ce3b119be343050093429eac302b4b66"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf157fe7564e88151e79d5c056613f4649358214",
          "sha": "cf157fe7564e88151e79d5c056613f4649358214",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cf157fe7564e88151e79d5c056613f4649358214"
        }
      ],
      "message": "wallet: scan for silent payments\n\nCo-authored-by: Ava Chow <github@achow101.com>",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:30:04Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T07:58:09Z"
      },
      "sha": "97c1713039f394d514cee5edc3b8317ae12044bb"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJmZDc1YzlmM2ZiODY4ODE0NzBiMWViZjZjM2JlOTUyMjRjN2Y5Mjk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bfd75c9f3fb86881470b1ebf6c3be95224c7f929",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bfd75c9f3fb86881470b1ebf6c3be95224c7f929",
      "tree": {
        "sha": "2822531f9e957b4518a6a003197108d29fcc9e24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2822531f9e957b4518a6a003197108d29fcc9e24"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97c1713039f394d514cee5edc3b8317ae12044bb",
          "sha": "97c1713039f394d514cee5edc3b8317ae12044bb",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/97c1713039f394d514cee5edc3b8317ae12044bb"
        }
      ],
      "message": "wallet/rpc: add create silent-payments wallet option\n\nCo-authored-by: Ava Chow <github@achow101.com>",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:30:09Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-06-24T08:55:30Z"
      },
      "sha": "bfd75c9f3fb86881470b1ebf6c3be95224c7f929"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDJhYzM3ZjcwMmY4YmI1NDQ1YTI0YmM3ZjcwM2M5ODM4YjE2NGYyMWM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ac37f702f8bb5445a24bc7f703c9838b164f21c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/2ac37f702f8bb5445a24bc7f703c9838b164f21c",
      "tree": {
        "sha": "7687d861bea8ce5a846cbb6d1652e0a30649f653",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7687d861bea8ce5a846cbb6d1652e0a30649f653"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bfd75c9f3fb86881470b1ebf6c3be95224c7f929",
          "sha": "bfd75c9f3fb86881470b1ebf6c3be95224c7f929",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bfd75c9f3fb86881470b1ebf6c3be95224c7f929"
        }
      ],
      "message": "wallet: import silent payments descriptor",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:30:19Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-05-21T19:05:58Z"
      },
      "sha": "2ac37f702f8bb5445a24bc7f703c9838b164f21c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU2YjZhOGQ5NDJmMzdkNGM2ZTQyNjY0YWQ0MmMwMmJhZTA0NjRhN2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56b6a8d942f37d4c6e42664ad42c02bae0464a7c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/56b6a8d942f37d4c6e42664ad42c02bae0464a7c",
      "tree": {
        "sha": "8f4f74d635298fc1347a0a0ca6474e45345b9281",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f4f74d635298fc1347a0a0ca6474e45345b9281"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ac37f702f8bb5445a24bc7f703c9838b164f21c",
          "sha": "2ac37f702f8bb5445a24bc7f703c9838b164f21c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2ac37f702f8bb5445a24bc7f703c9838b164f21c"
        }
      ],
      "message": "wallet/rpc: add sp outputtype to doc",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:30:19Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-06-24T12:02:31Z"
      },
      "sha": "56b6a8d942f37d4c6e42664ad42c02bae0464a7c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDUwZWU4NDJhMjkyYzE4ZWI0OGNiYmFhNzA2OTRlMjcwNGQyMjNjYjY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50ee842a292c18eb48cbbaa70694e2704d223cb6",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/50ee842a292c18eb48cbbaa70694e2704d223cb6",
      "tree": {
        "sha": "adc68b638d544796eccf426daede816845234a6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/adc68b638d544796eccf426daede816845234a6d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56b6a8d942f37d4c6e42664ad42c02bae0464a7c",
          "sha": "56b6a8d942f37d4c6e42664ad42c02bae0464a7c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/56b6a8d942f37d4c6e42664ad42c02bae0464a7c"
        }
      ],
      "message": "tests: add silent payments receiving functional tests\n\nCo-authored-by: Ava Chow <github@achow101.com>",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:30:19Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-05-21T19:06:35Z"
      },
      "sha": "50ee842a292c18eb48cbbaa70694e2704d223cb6"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDRhNGU4ODI1ZGVhYTBkNjY1YjVlNzdlYmJlNGQ1YTIwZDhhYTdiYWY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a4e8825deaa0d665b5e77ebbe4d5a20d8aa7baf",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/4a4e8825deaa0d665b5e77ebbe4d5a20d8aa7baf",
      "tree": {
        "sha": "21456e17d138b6eba5ec3c94abd420ba4d62399f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/21456e17d138b6eba5ec3c94abd420ba4d62399f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50ee842a292c18eb48cbbaa70694e2704d223cb6",
          "sha": "50ee842a292c18eb48cbbaa70694e2704d223cb6",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/50ee842a292c18eb48cbbaa70694e2704d223cb6"
        }
      ],
      "message": "wallet/rpc: add sp-address support to getaddressinfo",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:30:26Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-06-25T12:26:56Z"
      },
      "sha": "4a4e8825deaa0d665b5e77ebbe4d5a20d8aa7baf"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRhM2U0ZTJjZmY1NmIyNWU4MjdhZTQ2MmZjNzIyNTRlNmIwNjZmZjM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da3e4e2cff56b25e827ae462fc72254e6b066ff3",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/da3e4e2cff56b25e827ae462fc72254e6b066ff3",
      "tree": {
        "sha": "2f2f566e94573080f1b7fb6b0aabca0bbb87ce6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f2f566e94573080f1b7fb6b0aabca0bbb87ce6a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a4e8825deaa0d665b5e77ebbe4d5a20d8aa7baf",
          "sha": "4a4e8825deaa0d665b5e77ebbe4d5a20d8aa7baf",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/4a4e8825deaa0d665b5e77ebbe4d5a20d8aa7baf"
        }
      ],
      "message": "update addressbook with found silent-payment outputs\n\ntraditionally, the receiving scripts are known to the core wallet\nbecause they are added to the addressbook at the time they are requested.\n\nin silent payments, the outputs are not known until found. its important, however,\nto have the found scripts in the addressbook so all of the change accounting can be down\nproperly.\n\nthis commits adds found outputs to the address book if they are not change. the way\nchange is determined is a bit hacky in that we just check if the found output was\nfound with a label (since this is the only label currently implemented). in the future,\nwe should specifically check for a change specific label.",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:30:26Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-05-27T23:12:31Z"
      },
      "sha": "da3e4e2cff56b25e827ae462fc72254e6b066ff3"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGJhYzU1NzJjYTlmMzg5ZTY3MzBmY2QzNjhiNWJkOTVmOWNiMGU2ZGU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bac5572ca9f389e6730fcd368b5bd95f9cb0e6de",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/bac5572ca9f389e6730fcd368b5bd95f9cb0e6de",
      "tree": {
        "sha": "9d515efdf806ce51916676803abdc22d80ce6822",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d515efdf806ce51916676803abdc22d80ce6822"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da3e4e2cff56b25e827ae462fc72254e6b066ff3",
          "sha": "da3e4e2cff56b25e827ae462fc72254e6b066ff3",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/da3e4e2cff56b25e827ae462fc72254e6b066ff3"
        }
      ],
      "message": "receiving: check for self-transfers\n\nCheck if a send is a self transfer when the transaction is created. This ensures\nour cache and address book is properly updated since the wallet will not recheck\nthis transaction fully if it detects change.",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:30:26Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-05-29T09:59:01Z"
      },
      "sha": "bac5572ca9f389e6730fcd368b5bd95f9cb0e6de"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDgwNGQ4MWMzOTk0OWZmOGMzZTY0OWY2YWZhYjBlMzFiMmRjY2FjYzU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/804d81c39949ff8c3e649f6afab0e31b2dccacc5",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/804d81c39949ff8c3e649f6afab0e31b2dccacc5",
      "tree": {
        "sha": "5bfe041ced21c0216a47b5c0209633fdb79601cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5bfe041ced21c0216a47b5c0209633fdb79601cb"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bac5572ca9f389e6730fcd368b5bd95f9cb0e6de",
          "sha": "bac5572ca9f389e6730fcd368b5bd95f9cb0e6de",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/bac5572ca9f389e6730fcd368b5bd95f9cb0e6de"
        }
      ],
      "message": "use silent payments change when sending",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:30:26Z"
      },
      "author": {
        "name": "josibake",
        "email": "josibake@protonmail.com",
        "date": "2025-05-28T09:21:23Z"
      },
      "sha": "804d81c39949ff8c3e649f6afab0e31b2dccacc5"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDNiMDVmNjAxMjAxMjNjZTFmYmZjN2Y0ZjI2ODljMzFkZDVhZDRkMzM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "tree": {
        "sha": "fd7fda1f88333d47e4ab22c32a9f1916dbf2525e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd7fda1f88333d47e4ab22c32a9f1916dbf2525e"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/804d81c39949ff8c3e649f6afab0e31b2dccacc5",
          "sha": "804d81c39949ff8c3e649f6afab0e31b2dccacc5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/804d81c39949ff8c3e649f6afab0e31b2dccacc5"
        }
      ],
      "message": "wallet/tests: Enable Silent Payments in wallet unit tests",
      "committer": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-07-20T08:30:26Z"
      },
      "author": {
        "name": "Novo",
        "email": "eunovo9@gmail.com",
        "date": "2025-05-21T09:03:04Z"
      },
      "sha": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 18715411231,
      "node_id": "HRFPE_lADOABII587AZUn2zwAAAARbhoMf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18715411231",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "commit_url": "https://api.github.com/repos/Eunovo/bitcoin/commits/3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "created_at": "2025-07-20T08:30:37Z"
    },
    {
      "event": "commented",
      "id": 3094352453,
      "node_id": "IC_kwDOABII5864cBJF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3094352453",
      "actor": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-20T08:33:22Z",
      "updated_at": "2025-07-20T08:33:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "Added @achow101 as co-author on commits with code/ideas taken from  https://github.com/bitcoin/bitcoin/pull/28453",
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#issuecomment-3094352453",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32966"
    },
    {
      "event": "mentioned",
      "id": 18715419539,
      "node_id": "MEE_lADOABII587AZUn2zwAAAARbhqOT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18715419539",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-20T08:33:23Z"
    },
    {
      "event": "subscribed",
      "id": 18715419542,
      "node_id": "SE_lADOABII587AZUn2zwAAAARbhqOW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18715419542",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-20T08:33:23Z"
    },
    {
      "event": "unlabeled",
      "id": 18715641055,
      "node_id": "UNLE_lADOABII587AZUn2zwAAAARbigTf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18715641055",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-20T09:35:03Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2204657999",
      "pull_request_review_id": 3015969430,
      "id": 2204657999,
      "node_id": "PRRC_kwDOABII586DaGlP",
      "diff_hunk": "@@ -358,6 +358,7 @@ static RPCHelpMan createwallet()\n             {\"descriptors\", RPCArg::Type::BOOL, RPCArg::Default{true}, \"If set, must be \\\"true\\\"\"},\n             {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n             {\"external_signer\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Use an external signer such as a hardware wallet. Requires -signer to be configured. Wallet creation will fail if keys cannot be fetched. Requires disable_private_keys and descriptors set to true.\"},\n+            {\"silent_payments\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Enable creating and receiving with a silent payments address. Will disable fast rescans with block filters\"},",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "89831dace9d21456eb4a019d86164304e22f458e",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In 89831dace9d21456eb4a019d86164304e22f458e _wallet/rpc: add create silent-payments wallet option_: while testing I found that it doesn't disable block filters.",
      "created_at": "2025-07-14T11:23:42Z",
      "updated_at": "2025-07-14T11:56:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2204657999",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2204657999"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 361,
      "original_line": 361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2206657562",
      "pull_request_review_id": 3019063463,
      "id": 2206657562,
      "node_id": "PRRC_kwDOABII586Dhuwa",
      "diff_hunk": "@@ -358,6 +358,7 @@ static RPCHelpMan createwallet()\n             {\"descriptors\", RPCArg::Type::BOOL, RPCArg::Default{true}, \"If set, must be \\\"true\\\"\"},\n             {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n             {\"external_signer\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Use an external signer such as a hardware wallet. Requires -signer to be configured. Wallet creation will fail if keys cannot be fetched. Requires disable_private_keys and descriptors set to true.\"},\n+            {\"silent_payments\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Enable creating and receiving with a silent payments address. Will disable fast rescans with block filters\"},",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "89831dace9d21456eb4a019d86164304e22f458e",
      "in_reply_to_id": 2204657999,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks @Sjors. I'll fix it",
      "created_at": "2025-07-15T07:30:39Z",
      "updated_at": "2025-07-15T07:30:39Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2206657562",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2206657562"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 361,
      "original_line": 361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2206887912",
      "pull_request_review_id": 3019391176,
      "id": 2206887912,
      "node_id": "PRRC_kwDOABII586Dim_o",
      "diff_hunk": "@@ -358,6 +358,7 @@ static RPCHelpMan createwallet()\n             {\"descriptors\", RPCArg::Type::BOOL, RPCArg::Default{true}, \"If set, must be \\\"true\\\"\"},\n             {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n             {\"external_signer\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Use an external signer such as a hardware wallet. Requires -signer to be configured. Wallet creation will fail if keys cannot be fetched. Requires disable_private_keys and descriptors set to true.\"},\n+            {\"silent_payments\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Enable creating and receiving with a silent payments address. Will disable fast rescans with block filters\"},",
      "path": "src/wallet/rpc/wallet.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "89831dace9d21456eb4a019d86164304e22f458e",
      "in_reply_to_id": 2204657999,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We can disable the fast rescan for now just to keep this PR focused, but in theory we should be able to use the fast rescan regardless of whether or not the wallet is a silent payments wallet. Perhaps we can leave a comment to enable fast rescans in a follow up?",
      "created_at": "2025-07-15T08:53:37Z",
      "updated_at": "2025-07-15T08:53:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2206887912",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2206887912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 361,
      "original_line": 361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207029910",
      "pull_request_review_id": 3019536178,
      "id": 2207029910,
      "node_id": "PRRC_kwDOABII586DjJqW",
      "diff_hunk": "@@ -1422,16 +1422,78 @@ class RawTRDescriptor final : public DescriptorImpl\n     }\n };\n \n+/** A parsed sp(...) descriptor */\n+class SpDescriptor final : public DescriptorImpl\n+{\n+    CKey m_scan_key;\n+\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>&, std::span<const CScript>, FlatSigningProvider&) const override { return std::vector<CScript>(); }\n+\n+public:\n+    SpDescriptor(std::unique_ptr<PubkeyProvider> scan_pubkey, std::unique_ptr<PubkeyProvider> spend_key, CKey scan_key) : DescriptorImpl(Vector(std::move(scan_pubkey), std::move(spend_key)), \"sp\"), m_scan_key(scan_key) {};\n+\n+    std::optional<OutputType> GetOutputType() const override { return OutputType::SILENT_PAYMENTS; }\n+\n+    bool IsSingleType() const final { return true; }",
      "path": "src/script/descriptor.cpp",
      "position": 133,
      "original_position": 26,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": null,
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "cb44e3812c741e3a939a64799130bbf0787ef89a : I think we should set `bool IsRange() const override { return false; }` so we don't have to think about ranged descriptors.\r\n",
      "created_at": "2025-07-15T09:55:08Z",
      "updated_at": "2025-07-15T15:31:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207029910",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207029910"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1440,
      "original_line": 1440,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207630652",
      "pull_request_review_id": 3020599518,
      "id": 2207630652,
      "node_id": "PRRC_kwDOABII586DlcU8",
      "diff_hunk": "@@ -206,6 +206,8 @@ struct PubkeyProvider\n     /** Get the descriptor string form including private data (if available in arg). */\n     virtual bool ToPrivateString(const SigningProvider& arg, std::string& out) const = 0;\n \n+    virtual std::optional<std::string> ToPrivateString(const CKey& key) const = 0;",
      "path": "src/script/descriptor.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "0b3b87c648f7918a0b2017555c136364116d81e2",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "While reviewing the PR, it seems a lot of things could be simplified by if we just treated the scan key as something that _isn't_ a `CKey`, i.e., we introduce a completely new object for holding the scan key. I think that would allow us to drop this commit and simplify other places where we are trying to work around the fact that a scan key isnt really a private key.\r\n\r\nI haven't thought this all the way through yet, but in my initial pass on the PR it seems like it should be possible.",
      "created_at": "2025-07-15T14:14:18Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207630652",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207630652"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 209,
      "original_line": 209,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207664427",
      "pull_request_review_id": 3020599518,
      "id": 2207664427,
      "node_id": "PRRC_kwDOABII586Dlkkr",
      "diff_hunk": "@@ -18,6 +18,7 @@ static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n static const std::string OUTPUT_TYPE_STRING_P2SH_SEGWIT = \"p2sh-segwit\";\n static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n static const std::string OUTPUT_TYPE_STRING_BECH32M = \"bech32m\";\n+static const std::string OUTPUT_TYPE_STRING_SILENT_PAYMENTS = \"silent-payments\";",
      "path": "src/outputtype.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would recommend splitting the output type changes into their own commit(s). Its a self-contained change, and splitting them out from the descriptor changes makes the descriptor commit easier to review.",
      "created_at": "2025-07-15T14:24:40Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207664427",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207664427"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207667539",
      "pull_request_review_id": 3020599518,
      "id": 2207667539,
      "node_id": "PRRC_kwDOABII586DllVT",
      "diff_hunk": "@@ -776,7 +776,7 @@ class DescriptorImpl : public Descriptor\n     }\n \n     // NOLINTNEXTLINE(misc-no-recursion)\n-    void ExpandPrivate(int pos, const SigningProvider& provider, FlatSigningProvider& out) const final\n+    void ExpandPrivate(int pos, const SigningProvider& provider, FlatSigningProvider& out) const override",
      "path": "src/script/descriptor.cpp",
      "position": 110,
      "original_position": 5,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Potentially another area we could simplify if we end up not treating a scan key as a `CKey`.",
      "created_at": "2025-07-15T14:25:43Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207667539",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207667539"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 779,
      "original_line": 779,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207679341",
      "pull_request_review_id": 3020599518,
      "id": 2207679341,
      "node_id": "PRRC_kwDOABII586DloNt",
      "diff_hunk": "@@ -1422,16 +1422,78 @@ class RawTRDescriptor final : public DescriptorImpl\n     }\n };\n \n+/** A parsed sp(...) descriptor */\n+class SpDescriptor final : public DescriptorImpl\n+{\n+    CKey m_scan_key;\n+\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>&, std::span<const CScript>, FlatSigningProvider&) const override { return std::vector<CScript>(); }\n+\n+public:\n+    SpDescriptor(std::unique_ptr<PubkeyProvider> scan_pubkey, std::unique_ptr<PubkeyProvider> spend_key, CKey scan_key) : DescriptorImpl(Vector(std::move(scan_pubkey), std::move(spend_key)), \"sp\"), m_scan_key(scan_key) {};\n+\n+    std::optional<OutputType> GetOutputType() const override { return OutputType::SILENT_PAYMENTS; }\n+\n+    bool IsSingleType() const final { return true; }\n+\n+    bool IsSolvable() const override { return false; }\n+\n+    bool ToStringHelper(const SigningProvider* arg, std::string& out, const StringType type, const DescriptorCache* cache = nullptr) const override\n+    {\n+        auto scan_key{m_pubkey_args.at(0)->ToPrivateString(m_scan_key)};\n+        assert(scan_key.has_value());\n+        std::string ret{m_name + \"(\" + *scan_key + \",\"};\n+        auto& spend_pubkey{m_pubkey_args.at(1)};\n+        std::string tmp;\n+        switch (type) {\n+        case StringType::NORMALIZED:\n+            if (!spend_pubkey->ToNormalizedString(*arg, tmp, cache)) return false;\n+            break;\n+        case StringType::PRIVATE:\n+            if (!spend_pubkey->ToPrivateString(*arg, tmp)) return false;\n+            break;\n+        case StringType::PUBLIC:\n+            tmp = spend_pubkey->ToString();\n+            break;\n+        case StringType::COMPAT:\n+            tmp = spend_pubkey->ToString(PubkeyProvider::StringType::COMPAT);\n+            break;\n+        }\n+        out = std::move(ret) + std::move(tmp) + \")\";\n+        return true;\n+    }\n+\n+    void ExpandPrivate(int pos, const SigningProvider& provider, FlatSigningProvider& out) const override\n+    {\n+        FlatSigningProvider tmp;\n+        auto spend_pubkey{m_pubkey_args.at(1)->GetPubKey(0, provider, tmp)};\n+        m_pubkey_args.at(1)->GetPrivKey(0, provider, tmp);\n+\n+        assert(spend_pubkey.has_value());\n+        out.sp_keys = std::make_pair(m_scan_key, *spend_pubkey);\n+\n+        auto it{tmp.keys.find(spend_pubkey->GetID())};\n+        if (it != tmp.keys.end()) out.keys.emplace(spend_pubkey->GetID(), it->second);",
      "path": "src/script/descriptor.cpp",
      "position": 172,
      "original_position": 65,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "AFAICT, we only use the `sp_keys` member of the FlatSigningProvider as a way of passing around the scan key and the spend pubkey, and then also for the spend private key (for signing). It makes sense to me that we would later add the spend private key + tweaks to the FlatSigningProvider, but ideally thats the only thing we use it for and can get rid of `sp_keys`.",
      "created_at": "2025-07-15T14:29:22Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207679341",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207679341"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": 1476,
      "original_start_line": 1474,
      "start_side": "RIGHT",
      "line": 1479,
      "original_line": 1479,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207692663",
      "pull_request_review_id": 3020599518,
      "id": 2207692663,
      "node_id": "PRRC_kwDOABII586Dlrd3",
      "diff_hunk": "@@ -1422,16 +1422,78 @@ class RawTRDescriptor final : public DescriptorImpl\n     }\n };\n \n+/** A parsed sp(...) descriptor */\n+class SpDescriptor final : public DescriptorImpl\n+{\n+    CKey m_scan_key;\n+\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>&, std::span<const CScript>, FlatSigningProvider&) const override { return std::vector<CScript>(); }\n+\n+public:\n+    SpDescriptor(std::unique_ptr<PubkeyProvider> scan_pubkey, std::unique_ptr<PubkeyProvider> spend_key, CKey scan_key) : DescriptorImpl(Vector(std::move(scan_pubkey), std::move(spend_key)), \"sp\"), m_scan_key(scan_key) {};\n+\n+    std::optional<OutputType> GetOutputType() const override { return OutputType::SILENT_PAYMENTS; }\n+\n+    bool IsSingleType() const final { return true; }\n+\n+    bool IsSolvable() const override { return false; }\n+\n+    bool ToStringHelper(const SigningProvider* arg, std::string& out, const StringType type, const DescriptorCache* cache = nullptr) const override\n+    {\n+        auto scan_key{m_pubkey_args.at(0)->ToPrivateString(m_scan_key)};\n+        assert(scan_key.has_value());\n+        std::string ret{m_name + \"(\" + *scan_key + \",\"};\n+        auto& spend_pubkey{m_pubkey_args.at(1)};\n+        std::string tmp;\n+        switch (type) {\n+        case StringType::NORMALIZED:\n+            if (!spend_pubkey->ToNormalizedString(*arg, tmp, cache)) return false;\n+            break;\n+        case StringType::PRIVATE:\n+            if (!spend_pubkey->ToPrivateString(*arg, tmp)) return false;\n+            break;\n+        case StringType::PUBLIC:\n+            tmp = spend_pubkey->ToString();\n+            break;\n+        case StringType::COMPAT:\n+            tmp = spend_pubkey->ToString(PubkeyProvider::StringType::COMPAT);\n+            break;\n+        }\n+        out = std::move(ret) + std::move(tmp) + \")\";\n+        return true;\n+    }\n+\n+    void ExpandPrivate(int pos, const SigningProvider& provider, FlatSigningProvider& out) const override\n+    {\n+        FlatSigningProvider tmp;\n+        auto spend_pubkey{m_pubkey_args.at(1)->GetPubKey(0, provider, tmp)};\n+        m_pubkey_args.at(1)->GetPrivKey(0, provider, tmp);\n+\n+        assert(spend_pubkey.has_value());\n+        out.sp_keys = std::make_pair(m_scan_key, *spend_pubkey);\n+\n+        auto it{tmp.keys.find(spend_pubkey->GetID())};\n+        if (it != tmp.keys.end()) out.keys.emplace(spend_pubkey->GetID(), it->second);\n+    }\n+\n+    std::unique_ptr<DescriptorImpl> Clone() const override\n+    {\n+        return std::make_unique<SpDescriptor>(m_pubkey_args.at(0)->Clone(), m_pubkey_args.at(1)->Clone(), m_scan_key);\n+    }\n+};\n+\n ////////////////////////////////////////////////////////////////////////////\n // Parser                                                                 //\n ////////////////////////////////////////////////////////////////////////////\n \n enum class ParseScriptContext {\n-    TOP,     //!< Top-level context (script goes directly in scriptPubKey)\n-    P2SH,    //!< Inside sh() (script becomes P2SH redeemScript)\n-    P2WPKH,  //!< Inside wpkh() (no script, pubkey only)\n-    P2WSH,   //!< Inside wsh() (script becomes v0 witness script)\n-    P2TR,    //!< Inside tr() (either internal key, or BIP342 script leaf)",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: unnecessary formatting change, should just be a one-line change.",
      "created_at": "2025-07-15T14:34:23Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207692663",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207692663"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": 1430,
      "start_side": "LEFT",
      "line": null,
      "original_line": 1399,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207696186",
      "pull_request_review_id": 3020599518,
      "id": 2207696186,
      "node_id": "PRRC_kwDOABII586DlsU6",
      "diff_hunk": "@@ -1807,6 +1897,62 @@ std::vector<std::unique_ptr<DescriptorImpl>> ParseScript(uint32_t& key_exp_index\n         }\n         return ret;\n     }\n+    if (ctx == ParseScriptContext::TOP && Func(\"sp\", expr)) {\n+        auto scan_pubkeys{ParsePubkey(key_exp_index, Expr(expr), ParseScriptContext::SP, out, error)};\n+        if (scan_pubkeys.empty()) {\n+            error = strprintf(\"sp(): %s\", error);\n+            return {};\n+        }\n+        if (!Const(\",\", expr)) {\n+            error = strprintf(\"sp(): expected ',', got '%c'\", expr[0]);\n+            return {};\n+        }\n+        ++key_exp_index;\n+\n+        auto spend_pubkeys{ParsePubkey(key_exp_index, Expr(expr), ParseScriptContext::SP, out, error)};\n+        if (spend_pubkeys.empty()) {\n+            error = strprintf(\"sp(): %s\", error);\n+            return {};\n+        }\n+\n+        std::set<CKeyID> scan_keys_rm;\n+        for (auto& scan_pubkey : scan_pubkeys) {\n+            CKeyID scan_keyId;\n+            if (auto root_pubkey{scan_pubkey->GetRootPubKey()}) {\n+                scan_keyId = root_pubkey->GetID();\n+            } else if (auto root_extpubkey{scan_pubkey->GetRootExtPubKey()}) {\n+                scan_keyId = root_extpubkey->pubkey.GetID();\n+            }\n+            if (scan_keyId.IsNull()) {\n+                error = \"sp(): could not get scan key ID\";\n+                return {};\n+            }\n+\n+            auto it{out.keys.find(scan_keyId)};\n+            scan_keys_rm.insert(scan_keyId);\n+\n+            if (it == out.keys.end()) {\n+                error = \"sp(): requires the scan priv key\";\n+                return {};\n+            }\n+\n+            for (auto& spend_pubkey : spend_pubkeys) {\n+                ret.emplace_back(std::make_unique<SpDescriptor>(std::move(scan_pubkey), std::move(spend_pubkey), std::move(it->second)));\n+            }\n+        }\n+\n+        // Remove all scan private keys to allow\n+        // importation of sp descriptors into watch-only wallets\n+        for (auto keyId : scan_keys_rm) {\n+            out.keys.erase(keyId);\n+        }",
      "path": "src/script/descriptor.cpp",
      "position": 279,
      "original_position": 180,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Another place we could simplify things if we instead came up with a custom type for the scan key.",
      "created_at": "2025-07-15T14:35:55Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207696186",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207696186"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": 1946,
      "original_start_line": 1944,
      "start_side": "RIGHT",
      "line": 1950,
      "original_line": 1950,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207703326",
      "pull_request_review_id": 3020599518,
      "id": 2207703326,
      "node_id": "PRRC_kwDOABII586DluEe",
      "diff_hunk": "@@ -213,6 +213,7 @@ struct FlatSigningProvider final : public SigningProvider\n     std::map<CKeyID, std::pair<CPubKey, KeyOriginInfo>> origins;\n     std::map<CKeyID, CKey> keys;\n     std::map<XOnlyPubKey, TaprootBuilder> tr_trees; /** Map from output key to Taproot tree (which can then make the TaprootSpendData */\n+    std::pair<CKey, CPubKey> sp_keys;",
      "path": "src/script/signingprovider.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Feels like the SigningProvider should only care about the `spend_key + tweak` for signing, so another place to potentially simplify things if scan key is a custom type instead of a `CKey`.",
      "created_at": "2025-07-15T14:38:51Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207703326",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207703326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 216,
      "original_line": 216,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207706177",
      "pull_request_review_id": 3020599518,
      "id": 2207706177,
      "node_id": "PRRC_kwDOABII586DluxB",
      "diff_hunk": "@@ -481,7 +481,7 @@ BOOST_FIXTURE_TEST_CASE(BasicOutputTypesTest, ListCoinsTest)\n     //   2. One UTXO from the change, due to payment address matching logic\n \n     for (const auto& out_type : OUTPUT_TYPES) {\n-        if (out_type == OutputType::UNKNOWN) continue;\n+        if (out_type == OutputType::UNKNOWN || out_type == OutputType::SILENT_PAYMENTS) continue;",
      "path": "src/wallet/test/wallet_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This could be moved into the output type commit.",
      "created_at": "2025-07-15T14:40:04Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207706177",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207706177"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 484,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207706515",
      "pull_request_review_id": 3020599518,
      "id": 2207706515,
      "node_id": "PRRC_kwDOABII586Dlu2T",
      "diff_hunk": "@@ -3523,6 +3523,7 @@ void CWallet::SetupDescriptorScriptPubKeyMans(WalletBatch& batch, const CExtKey&\n     AssertLockHeld(cs_wallet);\n     for (bool internal : {false, true}) {\n         for (OutputType t : OUTPUT_TYPES) {\n+            if (t == OutputType::SILENT_PAYMENTS) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This could be moved to the output type commit.",
      "created_at": "2025-07-15T14:40:13Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207706515",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207706515"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207717440",
      "pull_request_review_id": 3020599518,
      "id": 2207717440,
      "node_id": "PRRC_kwDOABII586DlxhA",
      "diff_hunk": "@@ -2120,6 +2120,10 @@ std::vector<std::unique_ptr<DescriptorImpl>> ParseScript(uint32_t& key_exp_index\n             error = \"Address is not valid\";\n             return {};\n         }\n+        if (std::holds_alternative<V0SilentPaymentDestination>(dest)) {",
      "path": "src/script/descriptor.cpp",
      "position": 294,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "4cecb017071c0ce182ff8708212471e60adb8a86",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think its more appropriate to move this commit into the PR where we first introduce `V0SilentPaymentDestination`. I'll cherry pick this out into https://github.com/bitcoin/bitcoin/pull/28122",
      "created_at": "2025-07-15T14:44:41Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207717440",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207717440"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2125,
      "original_line": 2125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207728284",
      "pull_request_review_id": 3020599518,
      "id": 2207728284,
      "node_id": "PRRC_kwDOABII586Dl0Kc",
      "diff_hunk": "@@ -46,13 +46,15 @@ WalletFeature GetClosestWalletFeature(int version)\n     return static_cast<WalletFeature>(0);\n }\n \n-WalletDescriptor GenerateWalletDescriptor(const CExtPubKey& master_key, const OutputType& addr_type, bool internal)\n+WalletDescriptor GenerateWalletDescriptor(const CExtKey& master_key, const OutputType& addr_type, bool internal, std::vector<CKey>& out_keys)",
      "path": "src/wallet/walletutil.cpp",
      "position": 13,
      "original_position": 5,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "eb1196a5b8315454f1f59e814b6748a3200ccd73",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If we can create a custom type for the scan key, it seems better to have a special function just for silent payments that returns this custom key type from an xpriv, rather than change `GenerateWalletDescriptor` to work on an xpriv.",
      "created_at": "2025-07-15T14:48:58Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207728284",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207728284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207735327",
      "pull_request_review_id": 3020599518,
      "id": 2207735327,
      "node_id": "PRRC_kwDOABII586Dl14f",
      "diff_hunk": "@@ -73,28 +75,41 @@ WalletDescriptor GenerateWalletDescriptor(const CExtPubKey& master_key, const Ou\n         desc_prefix = \"tr(\" + xpub + \"/86h\";\n         break;\n     }\n+    case OutputType::SILENT_PAYMENTS: {\n+        // The actual scan and spend keys will be derived from these XPRIVs\n+        // The actual XPRIV and the spend key will not be retained in the descriptor,\n+        // but the scan key will be.\n+        desc_str = \"sp(\" + xpriv + \"/352h/0h/0h/1h/0,\" + xpriv + \"/352h/0h/0h/0h/0)\";",
      "path": "src/wallet/walletutil.cpp",
      "position": 34,
      "original_position": 26,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "eb1196a5b8315454f1f59e814b6748a3200ccd73",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ideally we can do this without needing an xpriv, but I vaguely remember a reason why we need the xpriv here. Will dig in a bit more to see if we can avoid this.",
      "created_at": "2025-07-15T14:51:31Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207735327",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207735327"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 83,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207737007",
      "pull_request_review_id": 3020599518,
      "id": 2207737007,
      "node_id": "PRRC_kwDOABII586Dl2Sv",
      "diff_hunk": "@@ -73,28 +75,41 @@ WalletDescriptor GenerateWalletDescriptor(const CExtPubKey& master_key, const Ou\n         desc_prefix = \"tr(\" + xpub + \"/86h\";\n         break;\n     }\n+    case OutputType::SILENT_PAYMENTS: {\n+        // The actual scan and spend keys will be derived from these XPRIVs\n+        // The actual XPRIV and the spend key will not be retained in the descriptor,\n+        // but the scan key will be.\n+        desc_str = \"sp(\" + xpriv + \"/352h/0h/0h/1h/0,\" + xpriv + \"/352h/0h/0h/0h/0)\";\n+        break;\n+    }\n     case OutputType::UNKNOWN: {\n         // We should never have a DescriptorScriptPubKeyMan for an UNKNOWN OutputType,\n         // so if we get to this point something is wrong\n         assert(false);\n     }\n     } // no default case, so the compiler can warn about missing cases\n-    assert(!desc_prefix.empty());\n+    assert(!desc_str.empty() || !desc_prefix.empty());",
      "path": "src/wallet/walletutil.cpp",
      "position": 44,
      "original_position": 36,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "eb1196a5b8315454f1f59e814b6748a3200ccd73",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just curious, why the extra assert? Seems unrelated to the other changes.",
      "created_at": "2025-07-15T14:52:11Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207737007",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207737007"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 92,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207750518",
      "pull_request_review_id": 3020599518,
      "id": 2207750518,
      "node_id": "PRRC_kwDOABII586Dl5l2",
      "diff_hunk": "@@ -73,28 +75,41 @@ WalletDescriptor GenerateWalletDescriptor(const CExtPubKey& master_key, const Ou\n         desc_prefix = \"tr(\" + xpub + \"/86h\";\n         break;\n     }\n+    case OutputType::SILENT_PAYMENTS: {\n+        // The actual scan and spend keys will be derived from these XPRIVs\n+        // The actual XPRIV and the spend key will not be retained in the descriptor,\n+        // but the scan key will be.\n+        desc_str = \"sp(\" + xpriv + \"/352h/0h/0h/1h/0,\" + xpriv + \"/352h/0h/0h/0h/0)\";\n+        break;\n+    }\n     case OutputType::UNKNOWN: {\n         // We should never have a DescriptorScriptPubKeyMan for an UNKNOWN OutputType,\n         // so if we get to this point something is wrong\n         assert(false);\n     }\n     } // no default case, so the compiler can warn about missing cases\n-    assert(!desc_prefix.empty());\n+    assert(!desc_str.empty() || !desc_prefix.empty());\n \n-    // Mainnet derives at 0', testnet and regtest derive at 1'\n-    if (Params().IsTestChain()) {\n-        desc_prefix += \"/1h\";\n-    } else {\n-        desc_prefix += \"/0h\";\n-    }\n+    if (desc_str.empty()) {\n+        // Mainnet derives at 0', testnet and regtest derive at 1'\n+        if (Params().IsTestChain()) {\n+            desc_prefix += \"/1h\";\n+        } else {\n+            desc_prefix += \"/0h\";\n+        }\n \n-    std::string internal_path = internal ? \"/1\" : \"/0\";\n-    std::string desc_str = desc_prefix + \"/0h\" + internal_path + desc_suffix;\n+        std::string internal_path = internal ? \"/1\" : \"/0\";\n+        desc_str = desc_prefix + \"/0h\" + internal_path + desc_suffix;\n+    }\n \n     // Make the descriptor\n     FlatSigningProvider keys;\n     std::string error;\n     std::vector<std::unique_ptr<Descriptor>> desc = Parse(desc_str, keys, error, false);\n+    for (const auto& key : keys.keys) {\n+        out_keys.push_back(std::move(key.second));",
      "path": "src/wallet/walletutil.cpp",
      "position": 71,
      "original_position": 63,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "eb1196a5b8315454f1f59e814b6748a3200ccd73",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is returning just the spend private key, right? IIRC, the scan private key is removed from `out.keys` as part of the Parse function. Not clear to me why we would want the spend private key in the `out_keys` out param.",
      "created_at": "2025-07-15T14:57:43Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207750518",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207750518"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 111,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207755915",
      "pull_request_review_id": 3020599518,
      "id": 2207755915,
      "node_id": "PRRC_kwDOABII586Dl66L",
      "diff_hunk": "@@ -166,6 +166,13 @@ void CKey::MakeNewKey(bool fCompressedIn) {\n     fCompressed = fCompressedIn;\n }\n \n+bool CKey::TweakAdd(const unsigned char* tweak32)",
      "path": "src/key.cpp",
      "position": 13,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "5d5214b6c16a885ad6920702ce88dc6697fb9ea4",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm wondering if these two methods (`CKey::TweakAdd`, `CPubKey::TweakAdd`) can also be moved into https://github.com/bitcoin/bitcoin/pull/28122, as they seem a little out of place in this PR (though, admittedly its only in this PR that we actually use them).",
      "created_at": "2025-07-15T14:59:58Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207755915",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207755915"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 169,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207760975",
      "pull_request_review_id": 3020599518,
      "id": 2207760975,
      "node_id": "PRRC_kwDOABII586Dl8JP",
      "diff_hunk": "@@ -1635,4 +1635,212 @@ bool DescriptorScriptPubKeyMan::CanUpdateToWalletDescriptor(const WalletDescript\n \n     return true;\n }\n+\n+SilentPaymentDescriptorScriptPubKeyMan::SilentPaymentDescriptorScriptPubKeyMan(WalletStorage& storage, WalletDescriptor& descriptor)\n+    : DescriptorScriptPubKeyMan(storage, descriptor, 0)\n+{\n+    PopulateLabelTweaks();\n+}\n+\n+void SilentPaymentDescriptorScriptPubKeyMan::PopulateLabelTweaks()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": descriptor is not a Silent Payment Descriptor\");\n+    }\n+    const auto provider{GetSPProvider()};\n+\n+    // Populate m_map_label_tweaks\n+    auto change_label_data = bip352::CreateLabelTweak(provider.sp_keys.first, 0);\n+    m_map_label_tweaks.insert(change_label_data);\n+    for (int i = 1; i < m_wallet_descriptor.next_index; i++) {\n+        // Add the other generated labelled destinations\n+        m_map_label_tweaks.insert(bip352::CreateLabelTweak(provider.sp_keys.first, i));\n+    }",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 25,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "0be7ce20f417a0741fa1a47863daa30f40fbf53a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'd remove this (and any other code) related to non-change labels from this PR. Ideally, implement just enough for labels to get change working, and then we can fully implement labels in a follow-up PR. ",
      "created_at": "2025-07-15T15:02:04Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207760975",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207760975"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": 1656,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1659,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207765554",
      "pull_request_review_id": 3020599518,
      "id": 2207765554,
      "node_id": "PRRC_kwDOABII586Dl9Qy",
      "diff_hunk": "@@ -1635,4 +1635,212 @@ bool DescriptorScriptPubKeyMan::CanUpdateToWalletDescriptor(const WalletDescript\n \n     return true;\n }\n+\n+SilentPaymentDescriptorScriptPubKeyMan::SilentPaymentDescriptorScriptPubKeyMan(WalletStorage& storage, WalletDescriptor& descriptor)\n+    : DescriptorScriptPubKeyMan(storage, descriptor, 0)\n+{\n+    PopulateLabelTweaks();\n+}\n+\n+void SilentPaymentDescriptorScriptPubKeyMan::PopulateLabelTweaks()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": descriptor is not a Silent Payment Descriptor\");\n+    }\n+    const auto provider{GetSPProvider()};",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": 67,
      "original_position": 17,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "0be7ce20f417a0741fa1a47863daa30f40fbf53a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It feels strange to call the provider just to get the scan key, feels like another area we can simplify with a custom scan key type.",
      "created_at": "2025-07-15T15:03:34Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207765554",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207765554"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1651,
      "original_line": 1651,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207770146",
      "pull_request_review_id": 3020599518,
      "id": 2207770146,
      "node_id": "PRRC_kwDOABII586Dl-Yi",
      "diff_hunk": "@@ -1635,4 +1635,212 @@ bool DescriptorScriptPubKeyMan::CanUpdateToWalletDescriptor(const WalletDescript\n \n     return true;\n }\n+\n+SilentPaymentDescriptorScriptPubKeyMan::SilentPaymentDescriptorScriptPubKeyMan(WalletStorage& storage, WalletDescriptor& descriptor)\n+    : DescriptorScriptPubKeyMan(storage, descriptor, 0)\n+{\n+    PopulateLabelTweaks();\n+}\n+\n+void SilentPaymentDescriptorScriptPubKeyMan::PopulateLabelTweaks()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": descriptor is not a Silent Payment Descriptor\");\n+    }\n+    const auto provider{GetSPProvider()};\n+\n+    // Populate m_map_label_tweaks\n+    auto change_label_data = bip352::CreateLabelTweak(provider.sp_keys.first, 0);\n+    m_map_label_tweaks.insert(change_label_data);\n+    for (int i = 1; i < m_wallet_descriptor.next_index; i++) {\n+        // Add the other generated labelled destinations\n+        m_map_label_tweaks.insert(bip352::CreateLabelTweak(provider.sp_keys.first, i));\n+    }\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::SetupDescriptorGeneration(WalletBatch& batch, const CExtKey& master_key, OutputType addr_type, bool internal)\n+{\n+    if (!DescriptorScriptPubKeyMan::SetupDescriptorGeneration(batch, master_key, addr_type, internal)) return false;\n+    PopulateLabelTweaks();\n+    return true;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewDestination(const OutputType type)\n+{\n+    LOCK(cs_desc_man);\n+    if (type != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": Types are inconsistent. Requested Type is not Silent Payment\");\n+    }\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    CTxDestination dest{main_dest};\n+    return dest;\n+}\n+\n+V0SilentPaymentDestination SilentPaymentDescriptorScriptPubKeyMan::GetLabeledDestination(uint64_t index)\n+{\n+    AssertLockHeld(cs_desc_man);\n+\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    // Generate label tweak\n+    auto label_data = bip352::CreateLabelTweak(provider.sp_keys.first, index);\n+    m_map_label_tweaks.insert(label_data);\n+    V0SilentPaymentDestination label_dest = bip352::GenerateSilentPaymentLabeledAddress(main_dest, label_data.second);\n+    return label_dest;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewLabeledDestination(uint64_t& index)\n+{\n+    LOCK(cs_desc_man);\n+    auto dest = GetLabeledDestination(m_wallet_descriptor.next_index);\n+    index = m_wallet_descriptor.next_index; // Return the index for this destination\n+    m_wallet_descriptor.next_index++;\n+    WalletBatch(m_storage.GetDatabase()).WriteDescriptor(GetID(), m_wallet_descriptor);\n+    return CTxDestination{dest};\n+}",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 72,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "0be7ce20f417a0741fa1a47863daa30f40fbf53a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Same comment regarding moving labels related code to a follow-up PR.",
      "created_at": "2025-07-15T15:04:56Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207770146",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207770146"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": 1683,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 1706,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207788108",
      "pull_request_review_id": 3020599518,
      "id": 2207788108,
      "node_id": "PRRC_kwDOABII586DmCxM",
      "diff_hunk": "@@ -1635,4 +1635,212 @@ bool DescriptorScriptPubKeyMan::CanUpdateToWalletDescriptor(const WalletDescript\n \n     return true;\n }\n+\n+SilentPaymentDescriptorScriptPubKeyMan::SilentPaymentDescriptorScriptPubKeyMan(WalletStorage& storage, WalletDescriptor& descriptor)\n+    : DescriptorScriptPubKeyMan(storage, descriptor, 0)\n+{\n+    PopulateLabelTweaks();\n+}\n+\n+void SilentPaymentDescriptorScriptPubKeyMan::PopulateLabelTweaks()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": descriptor is not a Silent Payment Descriptor\");\n+    }\n+    const auto provider{GetSPProvider()};\n+\n+    // Populate m_map_label_tweaks\n+    auto change_label_data = bip352::CreateLabelTweak(provider.sp_keys.first, 0);\n+    m_map_label_tweaks.insert(change_label_data);\n+    for (int i = 1; i < m_wallet_descriptor.next_index; i++) {\n+        // Add the other generated labelled destinations\n+        m_map_label_tweaks.insert(bip352::CreateLabelTweak(provider.sp_keys.first, i));\n+    }\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::SetupDescriptorGeneration(WalletBatch& batch, const CExtKey& master_key, OutputType addr_type, bool internal)\n+{\n+    if (!DescriptorScriptPubKeyMan::SetupDescriptorGeneration(batch, master_key, addr_type, internal)) return false;\n+    PopulateLabelTweaks();\n+    return true;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewDestination(const OutputType type)\n+{\n+    LOCK(cs_desc_man);\n+    if (type != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": Types are inconsistent. Requested Type is not Silent Payment\");\n+    }\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    CTxDestination dest{main_dest};\n+    return dest;\n+}\n+\n+V0SilentPaymentDestination SilentPaymentDescriptorScriptPubKeyMan::GetLabeledDestination(uint64_t index)\n+{\n+    AssertLockHeld(cs_desc_man);\n+\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    // Generate label tweak\n+    auto label_data = bip352::CreateLabelTweak(provider.sp_keys.first, index);\n+    m_map_label_tweaks.insert(label_data);\n+    V0SilentPaymentDestination label_dest = bip352::GenerateSilentPaymentLabeledAddress(main_dest, label_data.second);\n+    return label_dest;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewLabeledDestination(uint64_t& index)\n+{\n+    LOCK(cs_desc_man);\n+    auto dest = GetLabeledDestination(m_wallet_descriptor.next_index);\n+    index = m_wallet_descriptor.next_index; // Return the index for this destination\n+    m_wallet_descriptor.next_index++;\n+    WalletBatch(m_storage.GetDatabase()).WriteDescriptor(GetID(), m_wallet_descriptor);\n+    return CTxDestination{dest};\n+}\n+\n+isminetype SilentPaymentDescriptorScriptPubKeyMan::IsMine(const CScript& script) const\n+{\n+    LOCK(cs_desc_man);\n+\n+    if (m_map_spk_tweaks.count(script) > 0) {\n+        return ISMINE_SPENDABLE;\n+    }\n+    return ISMINE_NO;\n+}\n+\n+isminetype SilentPaymentDescriptorScriptPubKeyMan::IsMine(const std::vector<XOnlyPubKey>& output_keys, const bip352::PublicData& public_data)\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        return ISMINE_NO;\n+    }\n+\n+    const auto provider{GetSPProvider()};\n+    auto tweaks{bip352::ScanForSilentPaymentOutputs(\n+        provider.sp_keys.first, public_data, provider.sp_keys.second, output_keys, m_map_label_tweaks)};\n+    if (!tweaks.has_value()) {\n+        return ISMINE_NO;\n+    }\n+    WalletBatch batch(m_storage.GetDatabase());\n+    if (!batch.TxnBegin()) {\n+        throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot start db transaction wallet %s\", m_storage.GetDisplayName()));\n+    }\n+    for (const auto& tweak : *tweaks) {\n+        if (!TopUpWithDB(batch, tweak.tweak)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing tweak failed\");\n+        }\n+    }\n+    if (!batch.TxnCommit()) {\n+        throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot commit changes for wallet %s\", m_storage.GetDisplayName()));\n+    }\n+    return ISMINE_SPENDABLE;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, int64_t& index)\n+{\n+    LOCK(cs_desc_man);\n+    // Destination at index 0 is the change destination\n+    auto op_dest = GetLabeledDestination(0);\n+    return CTxDestination{op_dest};\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::TopUp(const uint256& tweak)",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "0be7ce20f417a0741fa1a47863daa30f40fbf53a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The name TopUp here makes sense in that we are trying to match how the rest of the wallet does it, but @Sjors pointed out this can be confusing for people who think of TopUp in terms of the gap limit / key pool refresh context, which we aren't really doing here. We could just have one function called `AddTweak` and then use a boolean for writing to the database, e.g., `AddTweak(uint256& tweak, store_in_db=false)`",
      "created_at": "2025-07-15T15:09:46Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207788108",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207788108"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1780,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207792955",
      "pull_request_review_id": 3020599518,
      "id": 2207792955,
      "node_id": "PRRC_kwDOABII586DmD87",
      "diff_hunk": "@@ -1635,4 +1635,212 @@ bool DescriptorScriptPubKeyMan::CanUpdateToWalletDescriptor(const WalletDescript\n \n     return true;\n }\n+\n+SilentPaymentDescriptorScriptPubKeyMan::SilentPaymentDescriptorScriptPubKeyMan(WalletStorage& storage, WalletDescriptor& descriptor)\n+    : DescriptorScriptPubKeyMan(storage, descriptor, 0)\n+{\n+    PopulateLabelTweaks();\n+}\n+\n+void SilentPaymentDescriptorScriptPubKeyMan::PopulateLabelTweaks()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": descriptor is not a Silent Payment Descriptor\");\n+    }\n+    const auto provider{GetSPProvider()};\n+\n+    // Populate m_map_label_tweaks\n+    auto change_label_data = bip352::CreateLabelTweak(provider.sp_keys.first, 0);\n+    m_map_label_tweaks.insert(change_label_data);\n+    for (int i = 1; i < m_wallet_descriptor.next_index; i++) {\n+        // Add the other generated labelled destinations\n+        m_map_label_tweaks.insert(bip352::CreateLabelTweak(provider.sp_keys.first, i));\n+    }\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::SetupDescriptorGeneration(WalletBatch& batch, const CExtKey& master_key, OutputType addr_type, bool internal)\n+{\n+    if (!DescriptorScriptPubKeyMan::SetupDescriptorGeneration(batch, master_key, addr_type, internal)) return false;\n+    PopulateLabelTweaks();\n+    return true;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewDestination(const OutputType type)\n+{\n+    LOCK(cs_desc_man);\n+    if (type != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": Types are inconsistent. Requested Type is not Silent Payment\");\n+    }\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    CTxDestination dest{main_dest};\n+    return dest;\n+}\n+\n+V0SilentPaymentDestination SilentPaymentDescriptorScriptPubKeyMan::GetLabeledDestination(uint64_t index)\n+{\n+    AssertLockHeld(cs_desc_man);\n+\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    // Generate label tweak\n+    auto label_data = bip352::CreateLabelTweak(provider.sp_keys.first, index);\n+    m_map_label_tweaks.insert(label_data);\n+    V0SilentPaymentDestination label_dest = bip352::GenerateSilentPaymentLabeledAddress(main_dest, label_data.second);\n+    return label_dest;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewLabeledDestination(uint64_t& index)\n+{\n+    LOCK(cs_desc_man);\n+    auto dest = GetLabeledDestination(m_wallet_descriptor.next_index);\n+    index = m_wallet_descriptor.next_index; // Return the index for this destination\n+    m_wallet_descriptor.next_index++;\n+    WalletBatch(m_storage.GetDatabase()).WriteDescriptor(GetID(), m_wallet_descriptor);\n+    return CTxDestination{dest};\n+}\n+\n+isminetype SilentPaymentDescriptorScriptPubKeyMan::IsMine(const CScript& script) const\n+{\n+    LOCK(cs_desc_man);\n+\n+    if (m_map_spk_tweaks.count(script) > 0) {\n+        return ISMINE_SPENDABLE;\n+    }\n+    return ISMINE_NO;\n+}\n+\n+isminetype SilentPaymentDescriptorScriptPubKeyMan::IsMine(const std::vector<XOnlyPubKey>& output_keys, const bip352::PublicData& public_data)\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        return ISMINE_NO;\n+    }\n+\n+    const auto provider{GetSPProvider()};\n+    auto tweaks{bip352::ScanForSilentPaymentOutputs(\n+        provider.sp_keys.first, public_data, provider.sp_keys.second, output_keys, m_map_label_tweaks)};\n+    if (!tweaks.has_value()) {\n+        return ISMINE_NO;\n+    }\n+    WalletBatch batch(m_storage.GetDatabase());\n+    if (!batch.TxnBegin()) {\n+        throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot start db transaction wallet %s\", m_storage.GetDisplayName()));\n+    }\n+    for (const auto& tweak : *tweaks) {\n+        if (!TopUpWithDB(batch, tweak.tweak)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing tweak failed\");\n+        }\n+    }\n+    if (!batch.TxnCommit()) {\n+        throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot commit changes for wallet %s\", m_storage.GetDisplayName()));\n+    }\n+    return ISMINE_SPENDABLE;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, int64_t& index)\n+{\n+    LOCK(cs_desc_man);\n+    // Destination at index 0 is the change destination\n+    auto op_dest = GetLabeledDestination(0);\n+    return CTxDestination{op_dest};\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::TopUp(const uint256& tweak)\n+{\n+    WalletBatch batch(m_storage.GetDatabase());\n+    if (!batch.TxnBegin()) return false;\n+    bool res = TopUpWithDB(batch, tweak);\n+    if (!batch.TxnCommit()) throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot commit changes for wallet %s\", m_storage.GetDisplayName()));\n+    return res;\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::TopUpWithDB(WalletBatch& batch, const uint256& tweak)",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "0be7ce20f417a0741fa1a47863daa30f40fbf53a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Could be `AddTweakWithDB` (based on my previous comment).",
      "created_at": "2025-07-15T15:11:00Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207792955",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207792955"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1789,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207796367",
      "pull_request_review_id": 3020599518,
      "id": 2207796367,
      "node_id": "PRRC_kwDOABII586DmEyP",
      "diff_hunk": "@@ -1635,4 +1635,212 @@ bool DescriptorScriptPubKeyMan::CanUpdateToWalletDescriptor(const WalletDescript\n \n     return true;\n }\n+\n+SilentPaymentDescriptorScriptPubKeyMan::SilentPaymentDescriptorScriptPubKeyMan(WalletStorage& storage, WalletDescriptor& descriptor)\n+    : DescriptorScriptPubKeyMan(storage, descriptor, 0)\n+{\n+    PopulateLabelTweaks();\n+}\n+\n+void SilentPaymentDescriptorScriptPubKeyMan::PopulateLabelTweaks()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": descriptor is not a Silent Payment Descriptor\");\n+    }\n+    const auto provider{GetSPProvider()};\n+\n+    // Populate m_map_label_tweaks\n+    auto change_label_data = bip352::CreateLabelTweak(provider.sp_keys.first, 0);\n+    m_map_label_tweaks.insert(change_label_data);\n+    for (int i = 1; i < m_wallet_descriptor.next_index; i++) {\n+        // Add the other generated labelled destinations\n+        m_map_label_tweaks.insert(bip352::CreateLabelTweak(provider.sp_keys.first, i));\n+    }\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::SetupDescriptorGeneration(WalletBatch& batch, const CExtKey& master_key, OutputType addr_type, bool internal)\n+{\n+    if (!DescriptorScriptPubKeyMan::SetupDescriptorGeneration(batch, master_key, addr_type, internal)) return false;\n+    PopulateLabelTweaks();\n+    return true;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewDestination(const OutputType type)\n+{\n+    LOCK(cs_desc_man);\n+    if (type != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": Types are inconsistent. Requested Type is not Silent Payment\");\n+    }\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    CTxDestination dest{main_dest};\n+    return dest;\n+}\n+\n+V0SilentPaymentDestination SilentPaymentDescriptorScriptPubKeyMan::GetLabeledDestination(uint64_t index)\n+{\n+    AssertLockHeld(cs_desc_man);\n+\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    // Generate label tweak\n+    auto label_data = bip352::CreateLabelTweak(provider.sp_keys.first, index);\n+    m_map_label_tweaks.insert(label_data);\n+    V0SilentPaymentDestination label_dest = bip352::GenerateSilentPaymentLabeledAddress(main_dest, label_data.second);\n+    return label_dest;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewLabeledDestination(uint64_t& index)\n+{\n+    LOCK(cs_desc_man);\n+    auto dest = GetLabeledDestination(m_wallet_descriptor.next_index);\n+    index = m_wallet_descriptor.next_index; // Return the index for this destination\n+    m_wallet_descriptor.next_index++;\n+    WalletBatch(m_storage.GetDatabase()).WriteDescriptor(GetID(), m_wallet_descriptor);\n+    return CTxDestination{dest};\n+}\n+\n+isminetype SilentPaymentDescriptorScriptPubKeyMan::IsMine(const CScript& script) const\n+{\n+    LOCK(cs_desc_man);\n+\n+    if (m_map_spk_tweaks.count(script) > 0) {\n+        return ISMINE_SPENDABLE;\n+    }\n+    return ISMINE_NO;\n+}\n+\n+isminetype SilentPaymentDescriptorScriptPubKeyMan::IsMine(const std::vector<XOnlyPubKey>& output_keys, const bip352::PublicData& public_data)\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        return ISMINE_NO;\n+    }\n+\n+    const auto provider{GetSPProvider()};\n+    auto tweaks{bip352::ScanForSilentPaymentOutputs(\n+        provider.sp_keys.first, public_data, provider.sp_keys.second, output_keys, m_map_label_tweaks)};\n+    if (!tweaks.has_value()) {\n+        return ISMINE_NO;\n+    }\n+    WalletBatch batch(m_storage.GetDatabase());\n+    if (!batch.TxnBegin()) {\n+        throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot start db transaction wallet %s\", m_storage.GetDisplayName()));\n+    }\n+    for (const auto& tweak : *tweaks) {\n+        if (!TopUpWithDB(batch, tweak.tweak)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing tweak failed\");\n+        }\n+    }\n+    if (!batch.TxnCommit()) {\n+        throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot commit changes for wallet %s\", m_storage.GetDisplayName()));\n+    }\n+    return ISMINE_SPENDABLE;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, int64_t& index)\n+{\n+    LOCK(cs_desc_man);\n+    // Destination at index 0 is the change destination\n+    auto op_dest = GetLabeledDestination(0);\n+    return CTxDestination{op_dest};\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::TopUp(const uint256& tweak)\n+{\n+    WalletBatch batch(m_storage.GetDatabase());\n+    if (!batch.TxnBegin()) return false;\n+    bool res = TopUpWithDB(batch, tweak);\n+    if (!batch.TxnCommit()) throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot commit changes for wallet %s\", m_storage.GetDisplayName()));\n+    return res;\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::TopUpWithDB(WalletBatch& batch, const uint256& tweak)\n+{\n+    LOCK(cs_desc_man);\n+    assert(m_wallet_descriptor.descriptor->GetOutputType() == OutputType::SILENT_PAYMENTS); // Should only ever be called on silent payment descriptorspkman\n+\n+    const auto provider{GetSPProvider()};\n+    CPubKey tweaked_pub{provider.sp_keys.second};\n+    tweaked_pub.TweakAdd(tweak.data());\n+    const auto spk = GetScriptForDestination(WitnessV1Taproot{XOnlyPubKey{tweaked_pub}});\n+    m_map_spk_tweaks.emplace(spk, tweak);\n+    m_storage.TopUpCallback({spk}, this);\n+    return batch.WriteSilentPaymentsTweak(GetID(), tweak);\n+}\n+\n+FlatSigningProvider SilentPaymentDescriptorScriptPubKeyMan::GetSPProvider() const\n+{\n+    AssertLockHeld(cs_desc_man);\n+    FlatSigningProvider provider;\n+    provider.keys = GetKeys();\n+    FlatSigningProvider tmp;\n+    m_wallet_descriptor.descriptor->ExpandPrivate(0, provider, tmp);\n+    return tmp;\n+}",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": 198,
      "original_position": 151,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "0be7ce20f417a0741fa1a47863daa30f40fbf53a",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can likely be removed if we have custom methods for storing scan/spend pubkey data, or custom methods for getting them.",
      "created_at": "2025-07-15T15:11:54Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207796367",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207796367"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": 1774,
      "original_start_line": 1777,
      "start_side": "RIGHT",
      "line": 1782,
      "original_line": 1782,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207805827",
      "pull_request_review_id": 3020599518,
      "id": 2207805827,
      "node_id": "PRRC_kwDOABII586DmHGD",
      "diff_hunk": "@@ -62,6 +62,12 @@ class FoundBlock\n     //! Read block data from disk. If the block exists but doesn't have data\n     //! (for example due to pruning), the CBlock variable will be set to null.\n     FoundBlock& data(CBlock& data) { m_data = &data; return *this; }\n+    //! Read block's undo data from disk.",
      "path": "src/interfaces/chain.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "fc6552281265312a5552b9e9ed0111725f5dbf09",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This commit is quite long, making it difficult to focus on the main thing which is the scanning logic. I'd suggest breaking out smaller commits for just the mempool related changes, and just the undoblock related changes. Possibly more, but will need to dig into the commit a bit more.",
      "created_at": "2025-07-15T15:14:36Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207805827",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207805827"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 65,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207809025",
      "pull_request_review_id": 3020599518,
      "id": 2207809025,
      "node_id": "PRRC_kwDOABII586DmH4B",
      "diff_hunk": "@@ -1464,9 +1466,30 @@ void CWallet::blockConnected(ChainstateRole role, const interfaces::BlockInfo& b\n     // Uses chain max time and twice the grace period to adjust time for block time variability.\n     if (block.chain_time_max < m_birth_time.load() - (TIMESTAMP_WINDOW * 2)) return;\n \n+    // Retrieve the undo data from disk\n+    // Although BlockInfo has a field for the undo data, it actually is not provided by blockConnected,\n+    // so we need to pull it up from disk.\n+    // Since blocks with only one tx do not have any relevant undo data, we can avoid unnecessary disk I/O\n+    // by skipping this step for those blocks.\n+    CBlockUndo block_undo;\n+    if (block.data->vtx.size() > 0 && IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENTS)) {\n+        chain().findBlock(block.hash, FoundBlock().undoData(block_undo));\n+    }\n+\n     // Scan block\n     bool wallet_updated = false;\n     for (size_t index = 0; index < block.data->vtx.size(); index++) {\n+        CTransactionRef tx{block.data->vtx.at(index)};",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "fc6552281265312a5552b9e9ed0111725f5dbf09",
      "in_reply_to_id": null,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Do we need the `CTransactionRef` here, as opposed to just operating on `block.data->vtx` directly? ",
      "created_at": "2025-07-15T15:15:54Z",
      "updated_at": "2025-07-15T15:19:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2207809025",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2207809025"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1482,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209598289",
      "pull_request_review_id": 3023664064,
      "id": 2209598289,
      "node_id": "PRRC_kwDOABII586Ds8tR",
      "diff_hunk": "@@ -1635,4 +1635,212 @@ bool DescriptorScriptPubKeyMan::CanUpdateToWalletDescriptor(const WalletDescript\n \n     return true;\n }\n+\n+SilentPaymentDescriptorScriptPubKeyMan::SilentPaymentDescriptorScriptPubKeyMan(WalletStorage& storage, WalletDescriptor& descriptor)\n+    : DescriptorScriptPubKeyMan(storage, descriptor, 0)\n+{\n+    PopulateLabelTweaks();\n+}\n+\n+void SilentPaymentDescriptorScriptPubKeyMan::PopulateLabelTweaks()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": descriptor is not a Silent Payment Descriptor\");\n+    }\n+    const auto provider{GetSPProvider()};\n+\n+    // Populate m_map_label_tweaks\n+    auto change_label_data = bip352::CreateLabelTweak(provider.sp_keys.first, 0);\n+    m_map_label_tweaks.insert(change_label_data);\n+    for (int i = 1; i < m_wallet_descriptor.next_index; i++) {\n+        // Add the other generated labelled destinations\n+        m_map_label_tweaks.insert(bip352::CreateLabelTweak(provider.sp_keys.first, i));\n+    }\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::SetupDescriptorGeneration(WalletBatch& batch, const CExtKey& master_key, OutputType addr_type, bool internal)\n+{\n+    if (!DescriptorScriptPubKeyMan::SetupDescriptorGeneration(batch, master_key, addr_type, internal)) return false;\n+    PopulateLabelTweaks();\n+    return true;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewDestination(const OutputType type)\n+{\n+    LOCK(cs_desc_man);\n+    if (type != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": Types are inconsistent. Requested Type is not Silent Payment\");\n+    }\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    CTxDestination dest{main_dest};\n+    return dest;\n+}\n+\n+V0SilentPaymentDestination SilentPaymentDescriptorScriptPubKeyMan::GetLabeledDestination(uint64_t index)\n+{\n+    AssertLockHeld(cs_desc_man);\n+\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    // Generate label tweak\n+    auto label_data = bip352::CreateLabelTweak(provider.sp_keys.first, index);\n+    m_map_label_tweaks.insert(label_data);\n+    V0SilentPaymentDestination label_dest = bip352::GenerateSilentPaymentLabeledAddress(main_dest, label_data.second);\n+    return label_dest;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewLabeledDestination(uint64_t& index)\n+{\n+    LOCK(cs_desc_man);\n+    auto dest = GetLabeledDestination(m_wallet_descriptor.next_index);\n+    index = m_wallet_descriptor.next_index; // Return the index for this destination\n+    m_wallet_descriptor.next_index++;\n+    WalletBatch(m_storage.GetDatabase()).WriteDescriptor(GetID(), m_wallet_descriptor);\n+    return CTxDestination{dest};\n+}\n+\n+isminetype SilentPaymentDescriptorScriptPubKeyMan::IsMine(const CScript& script) const\n+{\n+    LOCK(cs_desc_man);\n+\n+    if (m_map_spk_tweaks.count(script) > 0) {\n+        return ISMINE_SPENDABLE;\n+    }\n+    return ISMINE_NO;\n+}\n+\n+isminetype SilentPaymentDescriptorScriptPubKeyMan::IsMine(const std::vector<XOnlyPubKey>& output_keys, const bip352::PublicData& public_data)\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        return ISMINE_NO;\n+    }\n+\n+    const auto provider{GetSPProvider()};\n+    auto tweaks{bip352::ScanForSilentPaymentOutputs(\n+        provider.sp_keys.first, public_data, provider.sp_keys.second, output_keys, m_map_label_tweaks)};\n+    if (!tweaks.has_value()) {\n+        return ISMINE_NO;\n+    }\n+    WalletBatch batch(m_storage.GetDatabase());\n+    if (!batch.TxnBegin()) {\n+        throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot start db transaction wallet %s\", m_storage.GetDisplayName()));\n+    }\n+    for (const auto& tweak : *tweaks) {\n+        if (!TopUpWithDB(batch, tweak.tweak)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing tweak failed\");\n+        }\n+    }\n+    if (!batch.TxnCommit()) {\n+        throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot commit changes for wallet %s\", m_storage.GetDisplayName()));\n+    }\n+    return ISMINE_SPENDABLE;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, int64_t& index)\n+{\n+    LOCK(cs_desc_man);\n+    // Destination at index 0 is the change destination\n+    auto op_dest = GetLabeledDestination(0);\n+    return CTxDestination{op_dest};\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::TopUp(const uint256& tweak)\n+{\n+    WalletBatch batch(m_storage.GetDatabase());\n+    if (!batch.TxnBegin()) return false;\n+    bool res = TopUpWithDB(batch, tweak);\n+    if (!batch.TxnCommit()) throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot commit changes for wallet %s\", m_storage.GetDisplayName()));\n+    return res;\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::TopUpWithDB(WalletBatch& batch, const uint256& tweak)",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "0be7ce20f417a0741fa1a47863daa30f40fbf53a",
      "in_reply_to_id": 2207792955,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Worth mentioning, the only reason we wouldn't be able to do this is if this function (and `TopUp`) are called generically on SPKMans, e.g., in a loop. I don't think this is the case, but wanted to mention it.",
      "created_at": "2025-07-16T08:00:26Z",
      "updated_at": "2025-07-16T08:00:26Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2209598289",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209598289"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1789,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209852968",
      "pull_request_review_id": 3024068833,
      "id": 2209852968,
      "node_id": "PRRC_kwDOABII586Dt64o",
      "diff_hunk": "@@ -2120,6 +2120,10 @@ std::vector<std::unique_ptr<DescriptorImpl>> ParseScript(uint32_t& key_exp_index\n             error = \"Address is not valid\";\n             return {};\n         }\n+        if (std::holds_alternative<V0SilentPaymentDestination>(dest)) {",
      "path": "src/script/descriptor.cpp",
      "position": 294,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "4cecb017071c0ce182ff8708212471e60adb8a86",
      "in_reply_to_id": 2207717440,
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Cherry-picked this commit into https://github.com/bitcoin/bitcoin/pull/28201/commits/b94934e089e70b478ea6aa535098586fedb5a12d, in #28201. I added it to the commit where we enable silent payment addresses as valid addresses, at the end of the sending PR.",
      "created_at": "2025-07-16T09:55:07Z",
      "updated_at": "2025-07-16T09:55:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2209852968",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2209852968"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2125,
      "original_line": 2125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217563506",
      "pull_request_review_id": 3035704852,
      "id": 2217563506,
      "node_id": "PRRC_kwDOABII586ELVVy",
      "diff_hunk": "@@ -1422,16 +1422,78 @@ class RawTRDescriptor final : public DescriptorImpl\n     }\n };\n \n+/** A parsed sp(...) descriptor */\n+class SpDescriptor final : public DescriptorImpl\n+{\n+    CKey m_scan_key;\n+\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>&, std::span<const CScript>, FlatSigningProvider&) const override { return std::vector<CScript>(); }\n+\n+public:\n+    SpDescriptor(std::unique_ptr<PubkeyProvider> scan_pubkey, std::unique_ptr<PubkeyProvider> spend_key, CKey scan_key) : DescriptorImpl(Vector(std::move(scan_pubkey), std::move(spend_key)), \"sp\"), m_scan_key(scan_key) {};\n+\n+    std::optional<OutputType> GetOutputType() const override { return OutputType::SILENT_PAYMENTS; }\n+\n+    bool IsSingleType() const final { return true; }\n+\n+    bool IsSolvable() const override { return false; }\n+\n+    bool ToStringHelper(const SigningProvider* arg, std::string& out, const StringType type, const DescriptorCache* cache = nullptr) const override\n+    {\n+        auto scan_key{m_pubkey_args.at(0)->ToPrivateString(m_scan_key)};\n+        assert(scan_key.has_value());\n+        std::string ret{m_name + \"(\" + *scan_key + \",\"};\n+        auto& spend_pubkey{m_pubkey_args.at(1)};\n+        std::string tmp;\n+        switch (type) {\n+        case StringType::NORMALIZED:\n+            if (!spend_pubkey->ToNormalizedString(*arg, tmp, cache)) return false;\n+            break;\n+        case StringType::PRIVATE:\n+            if (!spend_pubkey->ToPrivateString(*arg, tmp)) return false;\n+            break;\n+        case StringType::PUBLIC:\n+            tmp = spend_pubkey->ToString();\n+            break;\n+        case StringType::COMPAT:\n+            tmp = spend_pubkey->ToString(PubkeyProvider::StringType::COMPAT);\n+            break;\n+        }\n+        out = std::move(ret) + std::move(tmp) + \")\";\n+        return true;\n+    }\n+\n+    void ExpandPrivate(int pos, const SigningProvider& provider, FlatSigningProvider& out) const override\n+    {\n+        FlatSigningProvider tmp;\n+        auto spend_pubkey{m_pubkey_args.at(1)->GetPubKey(0, provider, tmp)};\n+        m_pubkey_args.at(1)->GetPrivKey(0, provider, tmp);\n+\n+        assert(spend_pubkey.has_value());\n+        out.sp_keys = std::make_pair(m_scan_key, *spend_pubkey);\n+\n+        auto it{tmp.keys.find(spend_pubkey->GetID())};\n+        if (it != tmp.keys.end()) out.keys.emplace(spend_pubkey->GetID(), it->second);",
      "path": "src/script/descriptor.cpp",
      "position": 172,
      "original_position": 65,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": 2207679341,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Without `sp_keys`, the wallet can't identify which keys are scan and spend keys from the signing provider. Do you have an alternative approach in mind?",
      "created_at": "2025-07-20T04:31:24Z",
      "updated_at": "2025-07-20T08:20:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217563506",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217563506"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": 1476,
      "original_start_line": 1474,
      "start_side": "RIGHT",
      "line": 1479,
      "original_line": 1479,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217567798",
      "pull_request_review_id": 3035712379,
      "id": 2217567798,
      "node_id": "PRRC_kwDOABII586ELWY2",
      "diff_hunk": "@@ -1422,16 +1422,78 @@ class RawTRDescriptor final : public DescriptorImpl\n     }\n };\n \n+/** A parsed sp(...) descriptor */\n+class SpDescriptor final : public DescriptorImpl\n+{\n+    CKey m_scan_key;\n+\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>&, std::span<const CScript>, FlatSigningProvider&) const override { return std::vector<CScript>(); }\n+\n+public:\n+    SpDescriptor(std::unique_ptr<PubkeyProvider> scan_pubkey, std::unique_ptr<PubkeyProvider> spend_key, CKey scan_key) : DescriptorImpl(Vector(std::move(scan_pubkey), std::move(spend_key)), \"sp\"), m_scan_key(scan_key) {};\n+\n+    std::optional<OutputType> GetOutputType() const override { return OutputType::SILENT_PAYMENTS; }\n+\n+    bool IsSingleType() const final { return true; }",
      "path": "src/script/descriptor.cpp",
      "position": 133,
      "original_position": 26,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": 2207029910,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-20T04:48:27Z",
      "updated_at": "2025-07-20T04:48:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217567798",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217567798"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1440,
      "original_line": 1440,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217567956",
      "pull_request_review_id": 3035713004,
      "id": 2217567956,
      "node_id": "PRRC_kwDOABII586ELWbU",
      "diff_hunk": "@@ -1422,16 +1422,78 @@ class RawTRDescriptor final : public DescriptorImpl\n     }\n };\n \n+/** A parsed sp(...) descriptor */\n+class SpDescriptor final : public DescriptorImpl\n+{\n+    CKey m_scan_key;\n+\n+protected:\n+    std::vector<CScript> MakeScripts(const std::vector<CPubKey>&, std::span<const CScript>, FlatSigningProvider&) const override { return std::vector<CScript>(); }\n+\n+public:\n+    SpDescriptor(std::unique_ptr<PubkeyProvider> scan_pubkey, std::unique_ptr<PubkeyProvider> spend_key, CKey scan_key) : DescriptorImpl(Vector(std::move(scan_pubkey), std::move(spend_key)), \"sp\"), m_scan_key(scan_key) {};\n+\n+    std::optional<OutputType> GetOutputType() const override { return OutputType::SILENT_PAYMENTS; }\n+\n+    bool IsSingleType() const final { return true; }\n+\n+    bool IsSolvable() const override { return false; }\n+\n+    bool ToStringHelper(const SigningProvider* arg, std::string& out, const StringType type, const DescriptorCache* cache = nullptr) const override\n+    {\n+        auto scan_key{m_pubkey_args.at(0)->ToPrivateString(m_scan_key)};\n+        assert(scan_key.has_value());\n+        std::string ret{m_name + \"(\" + *scan_key + \",\"};\n+        auto& spend_pubkey{m_pubkey_args.at(1)};\n+        std::string tmp;\n+        switch (type) {\n+        case StringType::NORMALIZED:\n+            if (!spend_pubkey->ToNormalizedString(*arg, tmp, cache)) return false;\n+            break;\n+        case StringType::PRIVATE:\n+            if (!spend_pubkey->ToPrivateString(*arg, tmp)) return false;\n+            break;\n+        case StringType::PUBLIC:\n+            tmp = spend_pubkey->ToString();\n+            break;\n+        case StringType::COMPAT:\n+            tmp = spend_pubkey->ToString(PubkeyProvider::StringType::COMPAT);\n+            break;\n+        }\n+        out = std::move(ret) + std::move(tmp) + \")\";\n+        return true;\n+    }\n+\n+    void ExpandPrivate(int pos, const SigningProvider& provider, FlatSigningProvider& out) const override\n+    {\n+        FlatSigningProvider tmp;\n+        auto spend_pubkey{m_pubkey_args.at(1)->GetPubKey(0, provider, tmp)};\n+        m_pubkey_args.at(1)->GetPrivKey(0, provider, tmp);\n+\n+        assert(spend_pubkey.has_value());\n+        out.sp_keys = std::make_pair(m_scan_key, *spend_pubkey);\n+\n+        auto it{tmp.keys.find(spend_pubkey->GetID())};\n+        if (it != tmp.keys.end()) out.keys.emplace(spend_pubkey->GetID(), it->second);\n+    }\n+\n+    std::unique_ptr<DescriptorImpl> Clone() const override\n+    {\n+        return std::make_unique<SpDescriptor>(m_pubkey_args.at(0)->Clone(), m_pubkey_args.at(1)->Clone(), m_scan_key);\n+    }\n+};\n+\n ////////////////////////////////////////////////////////////////////////////\n // Parser                                                                 //\n ////////////////////////////////////////////////////////////////////////////\n \n enum class ParseScriptContext {\n-    TOP,     //!< Top-level context (script goes directly in scriptPubKey)\n-    P2SH,    //!< Inside sh() (script becomes P2SH redeemScript)\n-    P2WPKH,  //!< Inside wpkh() (no script, pubkey only)\n-    P2WSH,   //!< Inside wsh() (script becomes v0 witness script)\n-    P2TR,    //!< Inside tr() (either internal key, or BIP342 script leaf)",
      "path": "src/script/descriptor.cpp",
      "position": null,
      "original_position": 83,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": 2207692663,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2025-07-20T04:48:49Z",
      "updated_at": "2025-07-20T04:48:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217567956",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217567956"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": 1430,
      "start_side": "LEFT",
      "line": null,
      "original_line": 1399,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217568207",
      "pull_request_review_id": 3035713403,
      "id": 2217568207,
      "node_id": "PRRC_kwDOABII586ELWfP",
      "diff_hunk": "@@ -481,7 +481,7 @@ BOOST_FIXTURE_TEST_CASE(BasicOutputTypesTest, ListCoinsTest)\n     //   2. One UTXO from the change, due to payment address matching logic\n \n     for (const auto& out_type : OUTPUT_TYPES) {\n-        if (out_type == OutputType::UNKNOWN) continue;\n+        if (out_type == OutputType::UNKNOWN || out_type == OutputType::SILENT_PAYMENTS) continue;",
      "path": "src/wallet/test/wallet_tests.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": 2207706177,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-20T04:49:32Z",
      "updated_at": "2025-07-20T04:49:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217568207",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217568207"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 484,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217568262",
      "pull_request_review_id": 3035713445,
      "id": 2217568262,
      "node_id": "PRRC_kwDOABII586ELWgG",
      "diff_hunk": "@@ -3523,6 +3523,7 @@ void CWallet::SetupDescriptorScriptPubKeyMans(WalletBatch& batch, const CExtKey&\n     AssertLockHeld(cs_wallet);\n     for (bool internal : {false, true}) {\n         for (OutputType t : OUTPUT_TYPES) {\n+            if (t == OutputType::SILENT_PAYMENTS) continue;",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": 2207706515,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-20T04:49:43Z",
      "updated_at": "2025-07-20T04:49:44Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217568262",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217568262"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 3526,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217568307",
      "pull_request_review_id": 3035713503,
      "id": 2217568307,
      "node_id": "PRRC_kwDOABII586ELWgz",
      "diff_hunk": "@@ -2120,6 +2120,10 @@ std::vector<std::unique_ptr<DescriptorImpl>> ParseScript(uint32_t& key_exp_index\n             error = \"Address is not valid\";\n             return {};\n         }\n+        if (std::holds_alternative<V0SilentPaymentDestination>(dest)) {",
      "path": "src/script/descriptor.cpp",
      "position": 294,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "4cecb017071c0ce182ff8708212471e60adb8a86",
      "in_reply_to_id": 2207717440,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've dropped this commit from this branch.",
      "created_at": "2025-07-20T04:50:10Z",
      "updated_at": "2025-07-20T04:50:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217568307",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217568307"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2125,
      "original_line": 2125,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217568482",
      "pull_request_review_id": 3035713616,
      "id": 2217568482,
      "node_id": "PRRC_kwDOABII586ELWji",
      "diff_hunk": "@@ -18,6 +18,7 @@ static const std::string OUTPUT_TYPE_STRING_LEGACY = \"legacy\";\n static const std::string OUTPUT_TYPE_STRING_P2SH_SEGWIT = \"p2sh-segwit\";\n static const std::string OUTPUT_TYPE_STRING_BECH32 = \"bech32\";\n static const std::string OUTPUT_TYPE_STRING_BECH32M = \"bech32m\";\n+static const std::string OUTPUT_TYPE_STRING_SILENT_PAYMENTS = \"silent-payments\";",
      "path": "src/outputtype.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "cb44e3812c741e3a939a64799130bbf0787ef89a",
      "in_reply_to_id": 2207664427,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done",
      "created_at": "2025-07-20T04:50:54Z",
      "updated_at": "2025-07-20T04:50:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217568482",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217568482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 21,
      "original_line": 21,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217570563",
      "pull_request_review_id": 3035716432,
      "id": 2217570563,
      "node_id": "PRRC_kwDOABII586ELXED",
      "diff_hunk": "@@ -166,6 +166,13 @@ void CKey::MakeNewKey(bool fCompressedIn) {\n     fCompressed = fCompressedIn;\n }\n \n+bool CKey::TweakAdd(const unsigned char* tweak32)",
      "path": "src/key.cpp",
      "position": 13,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "5d5214b6c16a885ad6920702ce88dc6697fb9ea4",
      "in_reply_to_id": 2207755915,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe they deserve their own PR?",
      "created_at": "2025-07-20T05:02:00Z",
      "updated_at": "2025-07-20T05:02:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217570563",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217570563"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 169,
      "original_line": 169,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217570887",
      "pull_request_review_id": 3035717261,
      "id": 2217570887,
      "node_id": "PRRC_kwDOABII586ELXJH",
      "diff_hunk": "@@ -73,28 +75,41 @@ WalletDescriptor GenerateWalletDescriptor(const CExtPubKey& master_key, const Ou\n         desc_prefix = \"tr(\" + xpub + \"/86h\";\n         break;\n     }\n+    case OutputType::SILENT_PAYMENTS: {\n+        // The actual scan and spend keys will be derived from these XPRIVs\n+        // The actual XPRIV and the spend key will not be retained in the descriptor,\n+        // but the scan key will be.\n+        desc_str = \"sp(\" + xpriv + \"/352h/0h/0h/1h/0,\" + xpriv + \"/352h/0h/0h/0h/0)\";",
      "path": "src/wallet/walletutil.cpp",
      "position": 34,
      "original_position": 26,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "eb1196a5b8315454f1f59e814b6748a3200ccd73",
      "in_reply_to_id": 2207735327,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Don't we need to derive the scan and spend keys?",
      "created_at": "2025-07-20T05:03:35Z",
      "updated_at": "2025-07-20T05:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217570887",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217570887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 83,
      "original_line": 83,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217571215",
      "pull_request_review_id": 3035717843,
      "id": 2217571215,
      "node_id": "PRRC_kwDOABII586ELXOP",
      "diff_hunk": "@@ -73,28 +75,41 @@ WalletDescriptor GenerateWalletDescriptor(const CExtPubKey& master_key, const Ou\n         desc_prefix = \"tr(\" + xpub + \"/86h\";\n         break;\n     }\n+    case OutputType::SILENT_PAYMENTS: {\n+        // The actual scan and spend keys will be derived from these XPRIVs\n+        // The actual XPRIV and the spend key will not be retained in the descriptor,\n+        // but the scan key will be.\n+        desc_str = \"sp(\" + xpriv + \"/352h/0h/0h/1h/0,\" + xpriv + \"/352h/0h/0h/0h/0)\";\n+        break;\n+    }\n     case OutputType::UNKNOWN: {\n         // We should never have a DescriptorScriptPubKeyMan for an UNKNOWN OutputType,\n         // so if we get to this point something is wrong\n         assert(false);\n     }\n     } // no default case, so the compiler can warn about missing cases\n-    assert(!desc_prefix.empty());\n+    assert(!desc_str.empty() || !desc_prefix.empty());",
      "path": "src/wallet/walletutil.cpp",
      "position": 44,
      "original_position": 36,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "eb1196a5b8315454f1f59e814b6748a3200ccd73",
      "in_reply_to_id": 2207737007,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In the `OutputType::SILENT_PAYMENTS` case, I set the `desc_str`, not the `desc_prefix`; I have to modify the `assert` to prevent a failure.",
      "created_at": "2025-07-20T05:06:18Z",
      "updated_at": "2025-07-20T05:06:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217571215",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217571215"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 92,
      "original_line": 92,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217572750",
      "pull_request_review_id": 3035719558,
      "id": 2217572750,
      "node_id": "PRRC_kwDOABII586ELXmO",
      "diff_hunk": "@@ -73,28 +75,41 @@ WalletDescriptor GenerateWalletDescriptor(const CExtPubKey& master_key, const Ou\n         desc_prefix = \"tr(\" + xpub + \"/86h\";\n         break;\n     }\n+    case OutputType::SILENT_PAYMENTS: {\n+        // The actual scan and spend keys will be derived from these XPRIVs\n+        // The actual XPRIV and the spend key will not be retained in the descriptor,\n+        // but the scan key will be.\n+        desc_str = \"sp(\" + xpriv + \"/352h/0h/0h/1h/0,\" + xpriv + \"/352h/0h/0h/0h/0)\";\n+        break;\n+    }\n     case OutputType::UNKNOWN: {\n         // We should never have a DescriptorScriptPubKeyMan for an UNKNOWN OutputType,\n         // so if we get to this point something is wrong\n         assert(false);\n     }\n     } // no default case, so the compiler can warn about missing cases\n-    assert(!desc_prefix.empty());\n+    assert(!desc_str.empty() || !desc_prefix.empty());\n \n-    // Mainnet derives at 0', testnet and regtest derive at 1'\n-    if (Params().IsTestChain()) {\n-        desc_prefix += \"/1h\";\n-    } else {\n-        desc_prefix += \"/0h\";\n-    }\n+    if (desc_str.empty()) {\n+        // Mainnet derives at 0', testnet and regtest derive at 1'\n+        if (Params().IsTestChain()) {\n+            desc_prefix += \"/1h\";\n+        } else {\n+            desc_prefix += \"/0h\";\n+        }\n \n-    std::string internal_path = internal ? \"/1\" : \"/0\";\n-    std::string desc_str = desc_prefix + \"/0h\" + internal_path + desc_suffix;\n+        std::string internal_path = internal ? \"/1\" : \"/0\";\n+        desc_str = desc_prefix + \"/0h\" + internal_path + desc_suffix;\n+    }\n \n     // Make the descriptor\n     FlatSigningProvider keys;\n     std::string error;\n     std::vector<std::unique_ptr<Descriptor>> desc = Parse(desc_str, keys, error, false);\n+    for (const auto& key : keys.keys) {\n+        out_keys.push_back(std::move(key.second));",
      "path": "src/wallet/walletutil.cpp",
      "position": 71,
      "original_position": 63,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "eb1196a5b8315454f1f59e814b6748a3200ccd73",
      "in_reply_to_id": 2207750518,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The derived spend private key must be saved to the DB by the wallet.\r\n\r\nWe can avoid this by doing what other descriptors do; the sp descriptor will then be in this form `sp(xpriv/352h/0h/0h/1h/0,xpub/352h/0h/0h/0h/0)` . The `Parse` function will then derive the scan key and save it in the descriptor. The spend key can be derived later when needed from the master key.\r\n\r\nWith this alternative method, the wallet only saves the master key to DB as it has always done.",
      "created_at": "2025-07-20T05:16:25Z",
      "updated_at": "2025-07-20T05:16:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217572750",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217572750"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 111,
      "original_line": 111,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217573106",
      "pull_request_review_id": 3035719879,
      "id": 2217573106,
      "node_id": "PRRC_kwDOABII586ELXry",
      "diff_hunk": "@@ -1464,9 +1466,30 @@ void CWallet::blockConnected(ChainstateRole role, const interfaces::BlockInfo& b\n     // Uses chain max time and twice the grace period to adjust time for block time variability.\n     if (block.chain_time_max < m_birth_time.load() - (TIMESTAMP_WINDOW * 2)) return;\n \n+    // Retrieve the undo data from disk\n+    // Although BlockInfo has a field for the undo data, it actually is not provided by blockConnected,\n+    // so we need to pull it up from disk.\n+    // Since blocks with only one tx do not have any relevant undo data, we can avoid unnecessary disk I/O\n+    // by skipping this step for those blocks.\n+    CBlockUndo block_undo;\n+    if (block.data->vtx.size() > 0 && IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENTS)) {\n+        chain().findBlock(block.hash, FoundBlock().undoData(block_undo));\n+    }\n+\n     // Scan block\n     bool wallet_updated = false;\n     for (size_t index = 0; index < block.data->vtx.size(); index++) {\n+        CTransactionRef tx{block.data->vtx.at(index)};",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "fc6552281265312a5552b9e9ed0111725f5dbf09",
      "in_reply_to_id": 2207809025,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We only use the reference once, so it's not needed. I'll take this out as I retouch.",
      "created_at": "2025-07-20T05:19:10Z",
      "updated_at": "2025-07-20T05:19:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217573106",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217573106"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1482,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217694773",
      "pull_request_review_id": 3035891048,
      "id": 2217694773,
      "node_id": "PRRC_kwDOABII586EL1Y1",
      "diff_hunk": "@@ -1635,4 +1635,212 @@ bool DescriptorScriptPubKeyMan::CanUpdateToWalletDescriptor(const WalletDescript\n \n     return true;\n }\n+\n+SilentPaymentDescriptorScriptPubKeyMan::SilentPaymentDescriptorScriptPubKeyMan(WalletStorage& storage, WalletDescriptor& descriptor)\n+    : DescriptorScriptPubKeyMan(storage, descriptor, 0)\n+{\n+    PopulateLabelTweaks();\n+}\n+\n+void SilentPaymentDescriptorScriptPubKeyMan::PopulateLabelTweaks()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": descriptor is not a Silent Payment Descriptor\");\n+    }\n+    const auto provider{GetSPProvider()};\n+\n+    // Populate m_map_label_tweaks\n+    auto change_label_data = bip352::CreateLabelTweak(provider.sp_keys.first, 0);\n+    m_map_label_tweaks.insert(change_label_data);\n+    for (int i = 1; i < m_wallet_descriptor.next_index; i++) {\n+        // Add the other generated labelled destinations\n+        m_map_label_tweaks.insert(bip352::CreateLabelTweak(provider.sp_keys.first, i));\n+    }\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::SetupDescriptorGeneration(WalletBatch& batch, const CExtKey& master_key, OutputType addr_type, bool internal)\n+{\n+    if (!DescriptorScriptPubKeyMan::SetupDescriptorGeneration(batch, master_key, addr_type, internal)) return false;\n+    PopulateLabelTweaks();\n+    return true;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewDestination(const OutputType type)\n+{\n+    LOCK(cs_desc_man);\n+    if (type != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": Types are inconsistent. Requested Type is not Silent Payment\");\n+    }\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    CTxDestination dest{main_dest};\n+    return dest;\n+}\n+\n+V0SilentPaymentDestination SilentPaymentDescriptorScriptPubKeyMan::GetLabeledDestination(uint64_t index)\n+{\n+    AssertLockHeld(cs_desc_man);\n+\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    // Generate label tweak\n+    auto label_data = bip352::CreateLabelTweak(provider.sp_keys.first, index);\n+    m_map_label_tweaks.insert(label_data);\n+    V0SilentPaymentDestination label_dest = bip352::GenerateSilentPaymentLabeledAddress(main_dest, label_data.second);\n+    return label_dest;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewLabeledDestination(uint64_t& index)\n+{\n+    LOCK(cs_desc_man);\n+    auto dest = GetLabeledDestination(m_wallet_descriptor.next_index);\n+    index = m_wallet_descriptor.next_index; // Return the index for this destination\n+    m_wallet_descriptor.next_index++;\n+    WalletBatch(m_storage.GetDatabase()).WriteDescriptor(GetID(), m_wallet_descriptor);\n+    return CTxDestination{dest};\n+}\n+\n+isminetype SilentPaymentDescriptorScriptPubKeyMan::IsMine(const CScript& script) const\n+{\n+    LOCK(cs_desc_man);\n+\n+    if (m_map_spk_tweaks.count(script) > 0) {\n+        return ISMINE_SPENDABLE;\n+    }\n+    return ISMINE_NO;\n+}\n+\n+isminetype SilentPaymentDescriptorScriptPubKeyMan::IsMine(const std::vector<XOnlyPubKey>& output_keys, const bip352::PublicData& public_data)\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        return ISMINE_NO;\n+    }\n+\n+    const auto provider{GetSPProvider()};\n+    auto tweaks{bip352::ScanForSilentPaymentOutputs(\n+        provider.sp_keys.first, public_data, provider.sp_keys.second, output_keys, m_map_label_tweaks)};\n+    if (!tweaks.has_value()) {\n+        return ISMINE_NO;\n+    }\n+    WalletBatch batch(m_storage.GetDatabase());\n+    if (!batch.TxnBegin()) {\n+        throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot start db transaction wallet %s\", m_storage.GetDisplayName()));\n+    }\n+    for (const auto& tweak : *tweaks) {\n+        if (!TopUpWithDB(batch, tweak.tweak)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing tweak failed\");\n+        }\n+    }\n+    if (!batch.TxnCommit()) {\n+        throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot commit changes for wallet %s\", m_storage.GetDisplayName()));\n+    }\n+    return ISMINE_SPENDABLE;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, int64_t& index)\n+{\n+    LOCK(cs_desc_man);\n+    // Destination at index 0 is the change destination\n+    auto op_dest = GetLabeledDestination(0);\n+    return CTxDestination{op_dest};\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::TopUp(const uint256& tweak)\n+{\n+    WalletBatch batch(m_storage.GetDatabase());\n+    if (!batch.TxnBegin()) return false;\n+    bool res = TopUpWithDB(batch, tweak);\n+    if (!batch.TxnCommit()) throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot commit changes for wallet %s\", m_storage.GetDisplayName()));\n+    return res;\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::TopUpWithDB(WalletBatch& batch, const uint256& tweak)",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 129,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "0be7ce20f417a0741fa1a47863daa30f40fbf53a",
      "in_reply_to_id": 2207792955,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Updated",
      "created_at": "2025-07-20T08:17:17Z",
      "updated_at": "2025-07-20T08:17:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217694773",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217694773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1789,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217694788",
      "pull_request_review_id": 3035891074,
      "id": 2217694788,
      "node_id": "PRRC_kwDOABII586EL1ZE",
      "diff_hunk": "@@ -1635,4 +1635,212 @@ bool DescriptorScriptPubKeyMan::CanUpdateToWalletDescriptor(const WalletDescript\n \n     return true;\n }\n+\n+SilentPaymentDescriptorScriptPubKeyMan::SilentPaymentDescriptorScriptPubKeyMan(WalletStorage& storage, WalletDescriptor& descriptor)\n+    : DescriptorScriptPubKeyMan(storage, descriptor, 0)\n+{\n+    PopulateLabelTweaks();\n+}\n+\n+void SilentPaymentDescriptorScriptPubKeyMan::PopulateLabelTweaks()\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": descriptor is not a Silent Payment Descriptor\");\n+    }\n+    const auto provider{GetSPProvider()};\n+\n+    // Populate m_map_label_tweaks\n+    auto change_label_data = bip352::CreateLabelTweak(provider.sp_keys.first, 0);\n+    m_map_label_tweaks.insert(change_label_data);\n+    for (int i = 1; i < m_wallet_descriptor.next_index; i++) {\n+        // Add the other generated labelled destinations\n+        m_map_label_tweaks.insert(bip352::CreateLabelTweak(provider.sp_keys.first, i));\n+    }\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::SetupDescriptorGeneration(WalletBatch& batch, const CExtKey& master_key, OutputType addr_type, bool internal)\n+{\n+    if (!DescriptorScriptPubKeyMan::SetupDescriptorGeneration(batch, master_key, addr_type, internal)) return false;\n+    PopulateLabelTweaks();\n+    return true;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewDestination(const OutputType type)\n+{\n+    LOCK(cs_desc_man);\n+    if (type != OutputType::SILENT_PAYMENTS) {\n+        throw std::runtime_error(std::string(__func__) + \": Types are inconsistent. Requested Type is not Silent Payment\");\n+    }\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    CTxDestination dest{main_dest};\n+    return dest;\n+}\n+\n+V0SilentPaymentDestination SilentPaymentDescriptorScriptPubKeyMan::GetLabeledDestination(uint64_t index)\n+{\n+    AssertLockHeld(cs_desc_man);\n+\n+    const auto provider{GetSPProvider()};\n+    V0SilentPaymentDestination main_dest;\n+    main_dest.m_scan_pubkey = provider.sp_keys.first.GetPubKey();\n+    main_dest.m_spend_pubkey = provider.sp_keys.second;\n+    // Generate label tweak\n+    auto label_data = bip352::CreateLabelTweak(provider.sp_keys.first, index);\n+    m_map_label_tweaks.insert(label_data);\n+    V0SilentPaymentDestination label_dest = bip352::GenerateSilentPaymentLabeledAddress(main_dest, label_data.second);\n+    return label_dest;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetNewLabeledDestination(uint64_t& index)\n+{\n+    LOCK(cs_desc_man);\n+    auto dest = GetLabeledDestination(m_wallet_descriptor.next_index);\n+    index = m_wallet_descriptor.next_index; // Return the index for this destination\n+    m_wallet_descriptor.next_index++;\n+    WalletBatch(m_storage.GetDatabase()).WriteDescriptor(GetID(), m_wallet_descriptor);\n+    return CTxDestination{dest};\n+}\n+\n+isminetype SilentPaymentDescriptorScriptPubKeyMan::IsMine(const CScript& script) const\n+{\n+    LOCK(cs_desc_man);\n+\n+    if (m_map_spk_tweaks.count(script) > 0) {\n+        return ISMINE_SPENDABLE;\n+    }\n+    return ISMINE_NO;\n+}\n+\n+isminetype SilentPaymentDescriptorScriptPubKeyMan::IsMine(const std::vector<XOnlyPubKey>& output_keys, const bip352::PublicData& public_data)\n+{\n+    LOCK(cs_desc_man);\n+    if (m_wallet_descriptor.descriptor->GetOutputType() != OutputType::SILENT_PAYMENTS) {\n+        return ISMINE_NO;\n+    }\n+\n+    const auto provider{GetSPProvider()};\n+    auto tweaks{bip352::ScanForSilentPaymentOutputs(\n+        provider.sp_keys.first, public_data, provider.sp_keys.second, output_keys, m_map_label_tweaks)};\n+    if (!tweaks.has_value()) {\n+        return ISMINE_NO;\n+    }\n+    WalletBatch batch(m_storage.GetDatabase());\n+    if (!batch.TxnBegin()) {\n+        throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot start db transaction wallet %s\", m_storage.GetDisplayName()));\n+    }\n+    for (const auto& tweak : *tweaks) {\n+        if (!TopUpWithDB(batch, tweak.tweak)) {\n+            throw std::runtime_error(std::string(__func__) + \": writing tweak failed\");\n+        }\n+    }\n+    if (!batch.TxnCommit()) {\n+        throw std::runtime_error(strprintf(\"Error during descriptors tweak top up. Cannot commit changes for wallet %s\", m_storage.GetDisplayName()));\n+    }\n+    return ISMINE_SPENDABLE;\n+}\n+\n+util::Result<CTxDestination> SilentPaymentDescriptorScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, int64_t& index)\n+{\n+    LOCK(cs_desc_man);\n+    // Destination at index 0 is the change destination\n+    auto op_dest = GetLabeledDestination(0);\n+    return CTxDestination{op_dest};\n+}\n+\n+bool SilentPaymentDescriptorScriptPubKeyMan::TopUp(const uint256& tweak)",
      "path": "src/wallet/scriptpubkeyman.cpp",
      "position": null,
      "original_position": 120,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "0be7ce20f417a0741fa1a47863daa30f40fbf53a",
      "in_reply_to_id": 2207788108,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Updated",
      "created_at": "2025-07-20T08:17:23Z",
      "updated_at": "2025-07-20T08:17:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217694788",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217694788"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1780,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217694846",
      "pull_request_review_id": 3035891163,
      "id": 2217694846,
      "node_id": "PRRC_kwDOABII586EL1Z-",
      "diff_hunk": "@@ -62,6 +62,12 @@ class FoundBlock\n     //! Read block data from disk. If the block exists but doesn't have data\n     //! (for example due to pruning), the CBlock variable will be set to null.\n     FoundBlock& data(CBlock& data) { m_data = &data; return *this; }\n+    //! Read block's undo data from disk.",
      "path": "src/interfaces/chain.h",
      "position": 4,
      "original_position": 4,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "fc6552281265312a5552b9e9ed0111725f5dbf09",
      "in_reply_to_id": 2207805827,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I broke this into 3 commits.",
      "created_at": "2025-07-20T08:17:40Z",
      "updated_at": "2025-07-20T08:17:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217694846",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217694846"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 65,
      "original_line": 65,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217695331",
      "pull_request_review_id": 3035892060,
      "id": 2217695331,
      "node_id": "PRRC_kwDOABII586EL1hj",
      "diff_hunk": "@@ -1464,9 +1466,30 @@ void CWallet::blockConnected(ChainstateRole role, const interfaces::BlockInfo& b\n     // Uses chain max time and twice the grace period to adjust time for block time variability.\n     if (block.chain_time_max < m_birth_time.load() - (TIMESTAMP_WINDOW * 2)) return;\n \n+    // Retrieve the undo data from disk\n+    // Although BlockInfo has a field for the undo data, it actually is not provided by blockConnected,\n+    // so we need to pull it up from disk.\n+    // Since blocks with only one tx do not have any relevant undo data, we can avoid unnecessary disk I/O\n+    // by skipping this step for those blocks.\n+    CBlockUndo block_undo;\n+    if (block.data->vtx.size() > 0 && IsWalletFlagSet(WALLET_FLAG_SILENT_PAYMENTS)) {\n+        chain().findBlock(block.hash, FoundBlock().undoData(block_undo));\n+    }\n+\n     // Scan block\n     bool wallet_updated = false;\n     for (size_t index = 0; index < block.data->vtx.size(); index++) {\n+        CTransactionRef tx{block.data->vtx.at(index)};",
      "path": "src/wallet/wallet.cpp",
      "position": null,
      "original_position": 80,
      "commit_id": "3b05f60120123ce1fbfc7f4f2689c31dd5ad4d33",
      "original_commit_id": "fc6552281265312a5552b9e9ed0111725f5dbf09",
      "in_reply_to_id": 2207809025,
      "user": {
        "login": "Eunovo",
        "id": 37949128,
        "node_id": "MDQ6VXNlcjM3OTQ5MTI4",
        "avatar_url": "https://avatars.githubusercontent.com/u/37949128?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Eunovo",
        "html_url": "https://github.com/Eunovo",
        "followers_url": "https://api.github.com/users/Eunovo/followers",
        "following_url": "https://api.github.com/users/Eunovo/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Eunovo/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Eunovo/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Eunovo/subscriptions",
        "organizations_url": "https://api.github.com/users/Eunovo/orgs",
        "repos_url": "https://api.github.com/users/Eunovo/repos",
        "events_url": "https://api.github.com/users/Eunovo/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Eunovo/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I ended up leaving the reference and used it in 2 other locations. The code looks slightly cleaner this way.",
      "created_at": "2025-07-20T08:19:26Z",
      "updated_at": "2025-07-20T08:19:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32966#discussion_r2217695331",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2217695331"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32966"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1482,
      "side": "RIGHT"
    }
  ]
}