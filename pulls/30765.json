{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765",
    "id": 2046331611,
    "node_id": "PR_kwDOABII5855-Irb",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/30765",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/30765.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/30765.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30765",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30765/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
    "number": 30765,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "refactor: Allow `CScript`'s `operator<<` to accept spans, not just vectors",
    "user": {
      "login": "l0rinc",
      "id": 1841944,
      "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l0rinc",
      "html_url": "https://github.com/l0rinc",
      "followers_url": "https://api.github.com/users/l0rinc/followers",
      "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
      "organizations_url": "https://api.github.com/users/l0rinc/orgs",
      "repos_url": "https://api.github.com/users/l0rinc/repos",
      "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/l0rinc/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Split out of https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1722326803.\r\n\r\nReplace `_hex_v_u8` for `CScript` appends to `_hex`, to skip vector conversion before serializing to the `prevector` in `CScript`.\r\n\r\nTo enable both `unsigned char` and `std::byte` values, I've extracted the existing serialization to append the size & data in separate private methods to clarify that it does more than just a simple data insertion.\r\n\r\nThere were also discussion on eliminating the operators here completely to obviate when we're serializing fixed-size collections as raw bytes, and when we're prefixing them with their size - should also be done in a separate PR.",
    "labels": [
      {
        "id": 135961,
        "node_id": "MDU6TGFiZWwxMzU5NjE=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Refactoring",
        "name": "Refactoring",
        "color": "E6F6D6",
        "default": false
      }
    ],
    "created_at": "2024-08-30T12:48:02Z",
    "updated_at": "2025-09-20T11:44:24Z",
    "closed_at": "2024-09-20T19:17:01Z",
    "mergeable_state": "unknown",
    "merged": true,
    "merged_at": "2024-09-20T19:17:01Z",
    "merged_by": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "merge_commit_sha": "33adc7521cc8bb24b941d959022b084002ba7c60",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "l0rinc:l0rinc/CScript-vector-and-array",
      "ref": "l0rinc/CScript-vector-and-array",
      "sha": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 674169038,
        "node_id": "R_kgDOKC8Azg",
        "name": "bitcoin",
        "full_name": "l0rinc/bitcoin",
        "owner": {
          "login": "l0rinc",
          "id": 1841944,
          "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
          "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/l0rinc",
          "html_url": "https://github.com/l0rinc",
          "followers_url": "https://api.github.com/users/l0rinc/followers",
          "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
          "organizations_url": "https://api.github.com/users/l0rinc/orgs",
          "repos_url": "https://api.github.com/users/l0rinc/repos",
          "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/l0rinc/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/l0rinc/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/l0rinc/bitcoin",
        "archive_url": "https://api.github.com/repos/l0rinc/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/l0rinc/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/l0rinc/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/l0rinc/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/l0rinc/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/l0rinc/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/l0rinc/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/l0rinc/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/l0rinc/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/l0rinc/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/l0rinc/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/l0rinc/bitcoin/events",
        "forks_url": "https://api.github.com/repos/l0rinc/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/l0rinc/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/l0rinc/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/l0rinc/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/l0rinc/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/l0rinc/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/l0rinc/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/l0rinc/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/l0rinc/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/l0rinc/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/l0rinc/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/l0rinc/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/l0rinc/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/l0rinc/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/l0rinc/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:l0rinc/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/l0rinc/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/l0rinc/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/l0rinc/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/l0rinc/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/l0rinc/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/l0rinc/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/l0rinc/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/l0rinc/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/l0rinc/bitcoin/hooks",
        "svn_url": "https://github.com/l0rinc/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 0,
        "stargazers_count": 3,
        "watchers_count": 3,
        "size": 273610,
        "default_branch": "master",
        "open_issues_count": 11,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-20T06:58:20Z",
        "created_at": "2023-08-03T09:49:12Z",
        "updated_at": "2025-09-19T18:35:44Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "0725a374941355349bb4bc8a79dad1affb27d3b9",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37816,
        "stargazers_count": 85589,
        "watchers_count": 85589,
        "size": 293798,
        "default_branch": "master",
        "open_issues_count": 803,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-09-19T21:50:19Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-09-20T11:04:59Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 64,
    "deletions": 43,
    "changed_files": 7,
    "commits": 3,
    "review_comments": 58,
    "comments": 7
  },
  "events": [
    {
      "event": "commented",
      "id": 2321140325,
      "node_id": "IC_kwDOABII586KWcpl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2321140325",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-30T12:48:06Z",
      "updated_at": "2024-09-20T19:02:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/30765).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [ryanofsky](https://github.com/bitcoin/bitcoin/pull/30765#pullrequestreview-2297822100), [hodlinator](https://github.com/bitcoin/bitcoin/pull/30765#pullrequestreview-2298723649), [achow101](https://github.com/bitcoin/bitcoin/pull/30765#issuecomment-2364351304) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#issuecomment-2321140325",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30765"
    },
    {
      "event": "labeled",
      "id": 14080714236,
      "node_id": "LE_lADOABII586U12NgzwAAAANHRqX8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14080714236",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-30T12:48:08Z",
      "label": {
        "name": "Refactoring",
        "color": "E6F6D6"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14091882803,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANH8REz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14091882803",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "created_at": "2024-08-31T14:20:21Z"
    },
    {
      "event": "ready_for_review",
      "id": 14091885807,
      "node_id": "RFRE_lADOABII586U12NgzwAAAANH8Rzv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14091885807",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-31T14:21:45Z"
    },
    {
      "event": "reviewed",
      "id": 2275188408,
      "node_id": "PRR_kwDOABII586HnJ64",
      "url": null,
      "actor": null,
      "commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-02T09:51:17Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#pullrequestreview-2275188408",
      "submitted_at": "2024-09-02T09:51:17Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
    },
    {
      "event": "convert_to_draft",
      "id": 14112552353,
      "node_id": "CTDE_lADOABII586U12NgzwAAAANJLHWh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14112552353",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T09:57:37Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14160415123,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANMBsmT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14160415123",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ab875e14b7ed02e6e4bdc607d67e28bc10216a27",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/ab875e14b7ed02e6e4bdc607d67e28bc10216a27",
      "created_at": "2024-09-06T10:58:23Z"
    },
    {
      "event": "renamed",
      "id": 14160422679,
      "node_id": "RTE_lADOABII586U12NgzwAAAANMBucX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14160422679",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-06T10:59:10Z",
      "rename": {
        "from": "refactor: Extend CScript with `operator<<` for `std::array`",
        "to": "refactor: Generalize `CScript`'s `std::vector` push to `std::span` to accept `std::array`, too"
      }
    },
    {
      "event": "renamed",
      "id": 14160769844,
      "node_id": "RTE_lADOABII586U12NgzwAAAANMDDM0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14160769844",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-06T11:32:36Z",
      "rename": {
        "from": "refactor: Generalize `CScript`'s `std::vector` push to `std::span` to accept `std::array`, too",
        "to": "refactor: Generalize `CScript`'s `std::vector` push to accept `std::array`, too"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14163872092,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANMO4lc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14163872092",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "created_at": "2024-09-06T15:30:45Z"
    },
    {
      "event": "labeled",
      "id": 14163873059,
      "node_id": "LE_lADOABII586U12NgzwAAAANMO40j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14163873059",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-06T15:30:49Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2334309196,
      "node_id": "IC_kwDOABII586LIrtM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2334309196",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-06T15:30:50Z",
      "updated_at": "2024-09-06T15:30:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/29778092690</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#issuecomment-2334309196",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30765"
    },
    {
      "event": "reviewed",
      "id": 2286606223,
      "node_id": "PRR_kwDOABII586ISteP",
      "url": null,
      "actor": null,
      "commit_id": "14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-06T15:44:12Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#pullrequestreview-2286606223",
      "submitted_at": "2024-09-06T15:44:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14164395691,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANMQ4ar",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14164395691",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "03bdefff8c6663da895d0603469dee15aa4ad35d",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/03bdefff8c6663da895d0603469dee15aa4ad35d",
      "created_at": "2024-09-06T16:05:27Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14169233258,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANMjVdq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14169233258",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "148a6f6cc2e09c486d78ea422568f457a0e9182a",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/148a6f6cc2e09c486d78ea422568f457a0e9182a",
      "created_at": "2024-09-07T12:18:11Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14169233686,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANMjVkW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14169233686",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "44395899bab272b36e55d05e4feb0ee37cf68401",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/44395899bab272b36e55d05e4feb0ee37cf68401",
      "created_at": "2024-09-07T12:18:28Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14172543397,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANMv9ml",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14172543397",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "18870ac2eb419fcadd3f055c373f464a7319482e",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/18870ac2eb419fcadd3f055c373f464a7319482e",
      "created_at": "2024-09-07T20:03:25Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14173704787,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANM0ZJT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14173704787",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "eb82bb8097d4cc94ce37cc3a8b5aea40a92257eb",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/eb82bb8097d4cc94ce37cc3a8b5aea40a92257eb",
      "created_at": "2024-09-08T09:32:44Z"
    },
    {
      "event": "renamed",
      "id": 14173705357,
      "node_id": "RTE_lADOABII586U12NgzwAAAANM0ZSN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14173705357",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-08T09:33:04Z",
      "rename": {
        "from": "refactor: Generalize `CScript`'s `std::vector` push to accept `std::array`, too",
        "to": "refactor: Generalize `CScript`'s `std::vector` push to accept `std::array`"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14173707821,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANM0Z4t",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14173707821",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "c21b0f7cfb139caecea7bb70528483092925c7b1",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/c21b0f7cfb139caecea7bb70528483092925c7b1",
      "created_at": "2024-09-08T09:34:26Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14180252727,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANNNXw3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14180252727",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ec05c0a7a4d12233ded59d548ca113cb9b3483c7",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/ec05c0a7a4d12233ded59d548ca113cb9b3483c7",
      "created_at": "2024-09-09T09:37:16Z"
    },
    {
      "event": "ready_for_review",
      "id": 14180293446,
      "node_id": "RFRE_lADOABII586U12NgzwAAAANNNhtG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14180293446",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-09T09:40:15Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14180338808,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANNNsx4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14180338808",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d0c739a3e62de096cae4806130d82c8c18954c59",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/d0c739a3e62de096cae4806130d82c8c18954c59",
      "created_at": "2024-09-09T09:43:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14180446970,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANNOHL6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14180446970",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e6c02b9f2544032481743b4f8d3148622ccc73dd",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/e6c02b9f2544032481743b4f8d3148622ccc73dd",
      "created_at": "2024-09-09T09:50:53Z"
    },
    {
      "event": "unlabeled",
      "id": 14182482159,
      "node_id": "UNLE_lADOABII586U12NgzwAAAANNV4Dv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14182482159",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-09T12:23:59Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2289823867,
      "node_id": "PRR_kwDOABII586Ie_B7",
      "url": null,
      "actor": null,
      "commit_id": "e6c02b9f2544032481743b4f8d3148622ccc73dd",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-09T14:24:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review e6c02b9f2544032481743b4f8d3148622ccc73dd\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#pullrequestreview-2289823867",
      "submitted_at": "2024-09-09T14:24:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
    },
    {
      "event": "reviewed",
      "id": 2290235809,
      "node_id": "PRR_kwDOABII586Igjmh",
      "url": null,
      "actor": null,
      "commit_id": "e6c02b9f2544032481743b4f8d3148622ccc73dd",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-09T19:18:56Z",
      "author_association": "CONTRIBUTOR",
      "body": "I think this PR as of e6c02b9f2544032481743b4f8d3148622ccc73dd has been good exploration of possible changes, but is doing too much and is too complicated. I think it's worth starting with a minimal change that just supports `std::span` and `std::byte` in CScript and replaces `_hex_v_u8` with `_hex`:\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\n--- a/src/script/script.h\r\n+++ b/src/script/script.h\r\n@@ -463,7 +463,7 @@ public:\r\n         return *this;\r\n     }\r\n \r\n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\r\n+    CScript& operator<<(std::span<const std::byte> b) LIFETIMEBOUND\r\n     {\r\n         if (b.size() < OP_PUSHDATA1)\r\n         {\r\n@@ -488,10 +488,17 @@ public:\r\n             WriteLE32(_data, b.size());\r\n             insert(end(), _data, _data + sizeof(_data));\r\n         }\r\n-        insert(end(), b.begin(), b.end());\r\n+        const value_type* _data{reinterpret_cast<const value_type*>(b.data())};\r\n+        insert(end(), _data, _data + b.size());\r\n         return *this;\r\n     }\r\n \r\n+    // For backwards compatibility. Please prefer std::byte over uint8_t in new code.\r\n+    CScript& operator<<(std::span<const uint8_t> b) LIFETIMEBOUND\r\n+    {\r\n+        return *this << std::as_bytes(b);\r\n+    }\r\n+\r\n     bool GetOp(const_iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>& vchRet) const\r\n     {\r\n         return GetScriptOp(pc, end(), opcodeRet, &vchRet);\r\n--- a/src/test/miner_tests.cpp\r\n+++ b/src/test/miner_tests.cpp\r\n@@ -608,7 +608,7 @@ void MinerTestingSetup::TestPrioritisedMining(const CScript& scriptPubKey, const\r\n BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\r\n {\r\n     // Note that by default, these tests run with size accounting enabled.\r\n-    CScript scriptPubKey = CScript() << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\"_hex_v_u8 << OP_CHECKSIG;\r\n+    CScript scriptPubKey = CScript() << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\"_hex << OP_CHECKSIG;\r\n     std::unique_ptr<CBlockTemplate> pblocktemplate;\r\n \r\n     CTxMemPool& tx_mempool{*m_node.mempool};\r\n--- a/src/test/script_tests.cpp\r\n+++ b/src/test/script_tests.cpp\r\n@@ -1421,7 +1421,7 @@ BOOST_AUTO_TEST_CASE(script_FindAndDelete)\r\n     // prefix, leaving 02ff03 which is push-two-bytes:\r\n     s = ToScript(\"0302ff030302ff03\"_hex);\r\n     d = ToScript(\"03\"_hex);\r\n-    expect = CScript() << \"ff03\"_hex_v_u8 << \"ff03\"_hex_v_u8;\r\n+    expect = CScript() << \"ff03\"_hex << \"ff03\"_hex;\r\n     BOOST_CHECK_EQUAL(FindAndDelete(s, d), 2);\r\n     BOOST_CHECK(s == expect);\r\n \r\n--- a/src/test/transaction_tests.cpp\r\n+++ b/src/test/transaction_tests.cpp\r\n@@ -852,24 +852,24 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\r\n     CheckIsNotStandard(t, \"scriptpubkey\");\r\n \r\n     // MAX_OP_RETURN_RELAY-byte TxoutType::NULL_DATA (standard)\r\n-    t.vout[0].scriptPubKey = CScript() << OP_RETURN << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3804678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38\"_hex_v_u8;\r\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3804678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38\"_hex;\r\n     BOOST_CHECK_EQUAL(MAX_OP_RETURN_RELAY, t.vout[0].scriptPubKey.size());\r\n     CheckIsStandard(t);\r\n \r\n     // MAX_OP_RETURN_RELAY+1-byte TxoutType::NULL_DATA (non-standard)\r\n-    t.vout[0].scriptPubKey = CScript() << OP_RETURN << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3804678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3800\"_hex_v_u8;\r\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3804678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3800\"_hex;\r\n     BOOST_CHECK_EQUAL(MAX_OP_RETURN_RELAY + 1, t.vout[0].scriptPubKey.size());\r\n     CheckIsNotStandard(t, \"scriptpubkey\");\r\n \r\n     // Data payload can be encoded in any way...\r\n-    t.vout[0].scriptPubKey = CScript() << OP_RETURN << \"\"_hex_v_u8;\r\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << \"\"_hex;\r\n     CheckIsStandard(t);\r\n-    t.vout[0].scriptPubKey = CScript() << OP_RETURN << \"00\"_hex_v_u8 << \"01\"_hex_v_u8;\r\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << \"00\"_hex << \"01\"_hex;\r\n     CheckIsStandard(t);\r\n     // OP_RESERVED *is* considered to be a PUSHDATA type opcode by IsPushOnly()!\r\n-    t.vout[0].scriptPubKey = CScript() << OP_RETURN << OP_RESERVED << -1 << 0 << \"01\"_hex_v_u8 << 2 << 3 << 4 << 5 << 6 << 7 << 8 << 9 << 10 << 11 << 12 << 13 << 14 << 15 << 16;\r\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << OP_RESERVED << -1 << 0 << \"01\"_hex << 2 << 3 << 4 << 5 << 6 << 7 << 8 << 9 << 10 << 11 << 12 << 13 << 14 << 15 << 16;\r\n     CheckIsStandard(t);\r\n-    t.vout[0].scriptPubKey = CScript() << OP_RETURN << 0 << \"01\"_hex_v_u8 << 2 << \"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"_hex_v_u8;\r\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << 0 << \"01\"_hex << 2 << \"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"_hex;\r\n     CheckIsStandard(t);\r\n \r\n     // ...so long as it only contains PUSHDATA's\r\n@@ -883,13 +883,13 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\r\n \r\n     // Only one TxoutType::NULL_DATA permitted in all cases\r\n     t.vout.resize(2);\r\n-    t.vout[0].scriptPubKey = CScript() << OP_RETURN << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38\"_hex_v_u8;\r\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38\"_hex;\r\n     t.vout[0].nValue = 0;\r\n-    t.vout[1].scriptPubKey = CScript() << OP_RETURN << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38\"_hex_v_u8;\r\n+    t.vout[1].scriptPubKey = CScript() << OP_RETURN << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38\"_hex;\r\n     t.vout[1].nValue = 0;\r\n     CheckIsNotStandard(t, \"multi-op-return\");\r\n \r\n-    t.vout[0].scriptPubKey = CScript() << OP_RETURN << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38\"_hex_v_u8;\r\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38\"_hex;\r\n     t.vout[1].scriptPubKey = CScript() << OP_RETURN;\r\n     CheckIsNotStandard(t, \"multi-op-return\");\r\n \r\n--- a/src/wallet/test/ismine_tests.cpp\r\n+++ b/src/wallet/test/ismine_tests.cpp\r\n@@ -684,7 +684,7 @@ BOOST_AUTO_TEST_CASE(ismine_standard)\r\n         BOOST_CHECK(keystore.GetLegacyScriptPubKeyMan()->AddKey(keys[0]));\r\n \r\n         scriptPubKey.clear();\r\n-        scriptPubKey << OP_0 << \"aabb\"_hex_v_u8;\r\n+        scriptPubKey << OP_0 << \"aabb\"_hex;\r\n \r\n         result = keystore.GetLegacyScriptPubKeyMan()->IsMine(scriptPubKey);\r\n         BOOST_CHECK_EQUAL(result, ISMINE_NO);\r\n@@ -699,7 +699,7 @@ BOOST_AUTO_TEST_CASE(ismine_standard)\r\n         BOOST_CHECK(keystore.GetLegacyScriptPubKeyMan()->AddKey(keys[0]));\r\n \r\n         scriptPubKey.clear();\r\n-        scriptPubKey << OP_16 << \"aabb\"_hex_v_u8;\r\n+        scriptPubKey << OP_16 << \"aabb\"_hex;\r\n \r\n         result = keystore.GetLegacyScriptPubKeyMan()->IsMine(scriptPubKey);\r\n         BOOST_CHECK_EQUAL(result, ISMINE_NO);\r\n```\r\n</p>\r\n</details>\r\n\r\nIf more complicated changes are needed they could be followup commits or PRs.\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#pullrequestreview-2290235809",
      "submitted_at": "2024-09-09T15:27:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
    },
    {
      "event": "renamed",
      "id": 14186760052,
      "node_id": "RTE_lADOABII586U12NgzwAAAANNmMd0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14186760052",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-09T17:14:28Z",
      "rename": {
        "from": "refactor: Generalize `CScript`'s `std::vector` push to accept `std::array`",
        "to": "refactor: Allow `CScript`'s `operator<<` to accept spans, not just vectors"
      }
    },
    {
      "event": "convert_to_draft",
      "id": 14186841153,
      "node_id": "CTDE_lADOABII586U12NgzwAAAANNmgRB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14186841153",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-09T17:21:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14188345488,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANNsPiQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14188345488",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5c6d3488bbcc72ce41664f8d30dbd9f7684491f2",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/5c6d3488bbcc72ce41664f8d30dbd9f7684491f2",
      "created_at": "2024-09-09T19:17:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14188795478,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANNt9ZW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14188795478",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4574e45a99d8e11ccadd839f2ef8a80356e8955d",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/4574e45a99d8e11ccadd839f2ef8a80356e8955d",
      "created_at": "2024-09-09T19:59:07Z"
    },
    {
      "event": "reviewed",
      "id": 2290825978,
      "node_id": "PRR_kwDOABII586Iizr6",
      "url": null,
      "actor": null,
      "commit_id": "4574e45a99d8e11ccadd839f2ef8a80356e8955d",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-09T20:36:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK 4574e45a99d8e11ccadd839f2ef8a80356e8955d.\r\n\r\nSad to see my weird fix in https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1748936794 go /s, but also glad the workaround was so smooth. Hope that case won't show up again or one of us remembers it.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#pullrequestreview-2290825978",
      "submitted_at": "2024-09-09T20:36:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14189295921,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANNv3kx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14189295921",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "1802ed217c2c95869dd0beaa136ede853fbc84ba",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/1802ed217c2c95869dd0beaa136ede853fbc84ba",
      "created_at": "2024-09-09T20:44:17Z"
    },
    {
      "event": "labeled",
      "id": 14195349167,
      "node_id": "LE_lADOABII586U12NgzwAAAANOG9av",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14195349167",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T09:08:08Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2340098931,
      "node_id": "IC_kwDOABII586LexNz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2340098931",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T09:08:09Z",
      "updated_at": "2024-09-10T09:08:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/29897924592</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#issuecomment-2340098931",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30765"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14203385590,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANOlnb2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14203385590",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "48b67d8294eb62c5371e7dbc30b7cf811fb7e51c",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/48b67d8294eb62c5371e7dbc30b7cf811fb7e51c",
      "created_at": "2024-09-10T18:12:55Z"
    },
    {
      "event": "reviewed",
      "id": 2293686068,
      "node_id": "PRR_kwDOABII586Itt80",
      "url": null,
      "actor": null,
      "commit_id": "48b67d8294eb62c5371e7dbc30b7cf811fb7e51c",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-10T20:15:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 48b67d8294eb62c5371e7dbc30b7cf811fb7e51c. This looks great! PR is much simpler now, and it is nice to see the GCC workaround expanded and documented so well.\r\n\r\nWould suggest a few changes, implemented in diff below:\r\n\r\n- Replacing `PushDataSize` `size_t` parameter with `uint32_t` parameter to document fact that it can't accept larger sizes, and to call `WriteLE32` without a type conversion.\r\n- Replacing `PushData` `const value_type* data, size_t size` parameters with `std::span<const value_type> data` because using span is more idiomatic and self-documenting.\r\n- Fixing grammar in `operator<<` comment so it doesn't sound like std::byte is preferred for backwards compatibility.\r\n- Making the `char` operator call the `std::byte` operator to make it smaller, deduplicate code, and make it obvious the operators are equivalent.\r\n\r\nSuggested changes:\r\n\r\n\r\n<details><summary>diff</summary>\r\n<p>\r\n\r\n```diff\r\n--- a/src/script/script.h\r\n+++ b/src/script/script.h\r\n@@ -414,7 +414,7 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\r\n class CScript : public CScriptBase\r\n {\r\n private:\r\n-    inline void PushDataSize(const size_t size)\r\n+    inline void PushDataSize(const uint32_t size)\r\n     {\r\n         if (size < OP_PUSHDATA1) {\r\n             insert(end(), static_cast<value_type>(size));\r\n@@ -434,9 +434,9 @@ private:\r\n         }\r\n     }\r\n \r\n-    void PushData(const value_type* data, size_t size)\r\n+    void PushData(std::span<const value_type> data)\r\n     {\r\n-        insert(end(), data, data + size);\r\n+        insert(end(), data.begin(), data.end());\r\n     }\r\n \r\n protected:\r\n@@ -493,16 +493,14 @@ public:\r\n     CScript& operator<<(std::span<const std::byte> b) LIFETIMEBOUND\r\n     {\r\n         PushDataSize(b.size());\r\n-        PushData(reinterpret_cast<const value_type*>(b.data()), b.size());\r\n+        PushData({reinterpret_cast<const value_type*>(b.data()), b.size()});\r\n         return *this;\r\n     }\r\n \r\n-    // For backwards compatibility, please prefer std::byte over uint8_t in new code\r\n+    // For backwards compatibility. Please prefer std::byte over uint8_t in new code.\r\n     CScript& operator<<(std::span<const value_type> b) LIFETIMEBOUND\r\n     {\r\n-        PushDataSize(b.size());\r\n-        PushData(b.data(), b.size());\r\n-        return *this;\r\n+        return *this << std::as_bytes(b);\r\n     }\r\n \r\n     bool GetOp(const_iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>& vchRet) const\r\n```\r\n</p>\r\n</details>",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#pullrequestreview-2293686068",
      "submitted_at": "2024-09-10T20:15:50Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
    },
    {
      "event": "review_requested",
      "id": 14205197378,
      "node_id": "RRE_lADOABII586U12NgzwAAAANOshxC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14205197378",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T20:15:54Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2342178439,
      "node_id": "IC_kwDOABII586Lms6H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2342178439",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-10T22:20:28Z",
      "updated_at": "2024-09-10T22:20:28Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Replacing PushDataSize size_t parameter with uint32_t parameter\r\n\r\nGood observation, thanks.\r\nI was being overly cautious with modifying that code.\r\n\r\n> Making the char operator call the std::byte operator to make it smaller, deduplicate code, and make it obvious the operators are equivalent.\r\n\r\nMy goal was to avoid extra casting and wrapping, especially in performance-critical areas like this.\r\n\r\nRight now, we avoid intermediary vectors, but with this change, we'd wrap the data in a `std::span`, recast via `std::as_bytes`, only to unwrap it again during insertion.\r\nWhile `std::span` is lightweight, these extra steps feel unnecessary here, especially in the case of `operator<<(std::span<const value_type>)`, where we're recasting and rewrapping data we already have in its final form, only to unwrap it again during insertion.\r\nIt feels like overkill for something that could be done directly - it's why I've extracted the size and data insertion. I don’t see that as repetition (especially compared to the insertion methods in prevector).\r\n\r\nI don't like raw pointers either, so if you insist, I'll change it to span, but I want to make sure you understand why I prefer the current version.\r\n",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#issuecomment-2342178439",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30765"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14206551402,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANOxsVq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14206551402",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e6a5ab7637e60d3ae731c2ac854c170bc009ab99",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/e6a5ab7637e60d3ae731c2ac854c170bc009ab99",
      "created_at": "2024-09-10T22:20:29Z"
    },
    {
      "event": "reviewed",
      "id": 2297471281,
      "node_id": "PRR_kwDOABII586I8KEx",
      "url": null,
      "actor": null,
      "commit_id": "e6a5ab7637e60d3ae731c2ac854c170bc009ab99",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-11T15:01:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "ACK e6a5ab7637e60d3ae731c2ac854c170bc009ab99\r\n\r\n`git range-diff master 4574e45 e6a5ab7`\r\n\r\n#### a39f57f1a062eb6c3872a35defaf6d893df1d4a4\r\n\r\nNice work on the GCC bug!\r\nWish the example error in the commit message didn't come from code that only becomes possible in later commit. Maybe worth at least noting that in the message?\r\n\r\n#### e6a5ab7637e60d3ae731c2ac854c170bc009ab99\r\n\r\nCommit message:\r\n\"Replace _hex_v_u8 CScript appends to _hex\"\r\n->\r\n\"Replace _hex_v_u8 CScript appends with _hex\"",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#pullrequestreview-2297471281",
      "submitted_at": "2024-09-11T15:01:14Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
    },
    {
      "event": "review_requested",
      "id": 14217933755,
      "node_id": "RRE_lADOABII586U12NgzwAAAANPdHO7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14217933755",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T15:01:18Z",
      "requested_reviewer": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "ready_for_review",
      "id": 14217997107,
      "node_id": "RFRE_lADOABII586U12NgzwAAAANPdWsz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14217997107",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T15:05:06Z"
    },
    {
      "event": "reviewed",
      "id": 2297560631,
      "node_id": "PRR_kwDOABII586I8f43",
      "url": null,
      "actor": null,
      "commit_id": "e6a5ab7637e60d3ae731c2ac854c170bc009ab99",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-11T15:20:18Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#pullrequestreview-2297560631",
      "submitted_at": "2024-09-11T15:20:18Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGM3OGQ4ZmY0Y2I4MzUwNjQxM2JiNzM4MzNmYzVjMDQ4ODVkMGVjZTg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c78d8ff4cb83506413bb73833fc5c04885d0ece8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/c78d8ff4cb83506413bb73833fc5c04885d0ece8",
      "tree": {
        "sha": "bc51582debcb2e90460a6b2e246c784904303711",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc51582debcb2e90460a6b2e246c784904303711"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a7a4e11db8722c85175bcc4d9f73a713e9e61513",
          "sha": "a7a4e11db8722c85175bcc4d9f73a713e9e61513",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/a7a4e11db8722c85175bcc4d9f73a713e9e61513"
        }
      ],
      "message": "prevector: avoid GCC bogus warnings in insert method\n\nWhen compiling with GCC 12.2, both `-Warray-bounds` and `-Wstringop-overflow` warnings were triggered in the `prevector::insert` method during CScript prevector operations.\n\nGCC incorrectly assumed that operator new could modify the state of class members, leading to false positives during the memmove operation.\n\nFollowing the approach in https://gcc.gnu.org/git/gitweb.cgi?p=gcc.git;h=cca06f0d6d76b0, we introduced local copies for the destination pointer in memmove operations. This prevents GCC from misinterpreting memory manipulation as unsafe.\n\nA minimal reproducer triggering this issue in GCC 12.2 and passing in GCC 12.3 can be found at https://godbolt.org/z/8r9TKKoxv.\n\n-------\n\nFull error (with changes from the next commit as well):\n```\nIn file included from /ci_container_base/src/script/script.h:11,\n                 from /ci_container_base/src/primitives/transaction.h:11,\n                 from /ci_container_base/src/primitives/block.h:9,\n                 from /ci_container_base/src/kernel/chainparams.h:11,\n                 from /ci_container_base/src/kernel/chainparams.cpp:6:\nIn member function ‘void prevector<N, T, Size, Diff>::fill(T*, InputIterator, InputIterator) [with InputIterator = const unsigned char*; unsigned int N = 28; T = unsigned char; Size = unsigned int; Diff = int]’,\n    inlined from ‘void prevector<N, T, Size, Diff>::insert(iterator, InputIterator, InputIterator) [with InputIterator = const unsigned char*; unsigned int N = 28; T = unsigned char; Size = unsigned int; Diff = int]’ at /ci_container_base/src/prevector.h:395:13,\n    inlined from ‘void CScript::AppendData(const prevector<28, unsigned char>::value_type*, size_t)’ at /ci_container_base/src/script/script.h:439:15,\n    inlined from ‘CScript& CScript::operator<<(std::span<const std::byte>)’ at /ci_container_base/src/script/script.h:496:17,\n    inlined from ‘CBlock CreateGenesisBlock(uint32_t, uint32_t, uint32_t, int32_t, const CAmount&)’ at /ci_container_base/src/kernel/chainparams.cpp:76:54:\n/ci_container_base/src/prevector.h:216:13: error: writing 65 bytes into a region of size 32 [-Werror=stringop-overflow=]\n  216 |             new(static_cast<void*>(dst)) T(*first);\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/ci_container_base/src/kernel/chainparams.cpp: In function ‘CBlock CreateGenesisBlock(uint32_t, uint32_t, uint32_t, int32_t, const CAmount&)’:\n/ci_container_base/src/kernel/chainparams.cpp:76:49: note: destination object ‘<anonymous>’ of size 32\n   76 |     const CScript genesisOutputScript = CScript() << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\"_hex << OP_CHECKSIG;\n      |                                                 ^\nIn file included from /usr/lib/gcc/x86_64-w64-mingw32/12-posix/include/c++/cstring:42,\n                 from /ci_container_base/src/crypto/common.h:11,\n                 from /ci_container_base/src/uint256.h:9,\n                 from /ci_container_base/src/consensus/params.h:9,\n                 from /ci_container_base/src/kernel/chainparams.h:9:\nIn function ‘void* memmove(void*, const void*, size_t)’,\n    inlined from ‘void prevector<N, T, Size, Diff>::insert(iterator, InputIterator, InputIterator) [with InputIterator = const unsigned char*; unsigned int N = 28; T = unsigned char; Size = unsigned int; Diff = int]’ at /ci_container_base/src/prevector.h:393:16,\n    inlined from ‘void CScript::AppendData(const prevector<28, unsigned char>::value_type*, size_t)’ at /ci_container_base/src/script/script.h:439:15,\n    inlined from ‘CScript& CScript::operator<<(std::span<const std::byte>)’ at /ci_container_base/src/script/script.h:496:17,\n    inlined from ‘CBlock CreateGenesisBlock(uint32_t, uint32_t, uint32_t, int32_t, const CAmount&)’ at /ci_container_base/src/kernel/chainparams.cpp:76:54:\n/usr/share/mingw-w64/include/string.h:214:33: warning: ‘void* __builtin_memmove(void*, const void*, long long unsigned int)’ offset [65, 35] is out of the bounds [0, 32] of object ‘<anonymous>’ with type ‘CScript’ [-Warray-bounds]\n  214 |   return __builtin___memmove_chk(__dst, __src, __n, __mingw_bos(__dst, 0));\n      |          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/ci_container_base/src/kernel/chainparams.cpp: In function ‘CBlock CreateGenesisBlock(uint32_t, uint32_t, uint32_t, int32_t, const CAmount&)’:\n/ci_container_base/src/kernel/chainparams.cpp:76:49: note: ‘<anonymous>’ declared here\n   76 |     const CScript genesisOutputScript = CScript() << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\"_hex << OP_CHECKSIG;\n      |                                                 ^\n```\n\nCo-authored-by: Hodlinator <172445034+hodlinator@users.noreply.github.com>\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-11T15:41:26Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-10T18:10:35Z"
      },
      "sha": "c78d8ff4cb83506413bb73833fc5c04885d0ece8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNhYzg0NmMyZmJmNmZjNjliZmMyODhmZDM4N2FhM2Y2OGQ4NGQ1ODQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cac846c2fbf6fc69bfc288fd387aa3f68d84d584",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cac846c2fbf6fc69bfc288fd387aa3f68d84d584",
      "tree": {
        "sha": "c1bf350c7aeee1a71f037d419e63b3ebc5357987",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c1bf350c7aeee1a71f037d419e63b3ebc5357987"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c78d8ff4cb83506413bb73833fc5c04885d0ece8",
          "sha": "c78d8ff4cb83506413bb73833fc5c04885d0ece8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/c78d8ff4cb83506413bb73833fc5c04885d0ece8"
        }
      ],
      "message": "Allow CScript's operator<< to accept spans, not just vectors\n\nExtracted existing serialization to append size & data in separate private methods to clarify that it does more than just a simple data insertion.\n\n* the C style casts were changed to static_cast\n* `unsigned char` and `uint8_t` were changed to value_type for forward compatibility\n* `data + sizeof(data)` was changed to `std::cend`\n* data insertion (in AppendData) relies on pointer arithmetic now to enable both `std::span<const value_type>` and `std::span<const std::byte>` operators\n* use uint32_t for data size instead of size_t\n* used span instead of raw pointers in the new methods\n\nCo-authored-by: Ryan Ofsky <ryan@ofsky.org>\nCo-authored-by: Hodlinator <172445034+hodlinator@users.noreply.github.com>",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-11T15:41:27Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-09T19:08:08Z"
      },
      "sha": "cac846c2fbf6fc69bfc288fd387aa3f68d84d584"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDVlMTkwY2QxMWY2ZWQ4YjdhYjRkYjBmMDExOTJkZTYzZGVhZjZmZDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "tree": {
        "sha": "06faf6a782cb5e474510c1a6fa5333774187daf9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06faf6a782cb5e474510c1a6fa5333774187daf9"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cac846c2fbf6fc69bfc288fd387aa3f68d84d584",
          "sha": "cac846c2fbf6fc69bfc288fd387aa3f68d84d584",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/cac846c2fbf6fc69bfc288fd387aa3f68d84d584"
        }
      ],
      "message": "Replace CScript _hex_v_u8 appends with _hex\n\nThis will skip vector conversion before serializing to the prevector in CScript.",
      "committer": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-11T15:41:27Z"
      },
      "author": {
        "name": "Lőrinc",
        "email": "pap.lorinc@gmail.com",
        "date": "2024-09-09T19:13:20Z"
      },
      "sha": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14218584113,
      "node_id": "HRFPE_lADOABII586U12NgzwAAAANPfmAx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14218584113",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "commit_url": "https://api.github.com/repos/l0rinc/bitcoin/commits/5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "created_at": "2024-09-11T15:41:38Z"
    },
    {
      "event": "reviewed",
      "id": 2297822100,
      "node_id": "PRR_kwDOABII586I9fuU",
      "url": null,
      "actor": null,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-11T16:20:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "Code review ACK 5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7. Looks good!\r\n\r\nSince last review, just renamed push methods to append, and applied a few other suggested tweaks",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#pullrequestreview-2297822100",
      "submitted_at": "2024-09-11T16:20:23Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
    },
    {
      "event": "review_requested",
      "id": 14219154893,
      "node_id": "RRE_lADOABII586U12NgzwAAAANPhxXN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14219154893",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-11T16:20:27Z",
      "requested_reviewer": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "reviewed",
      "id": 2298022804,
      "node_id": "PRR_kwDOABII586I-QuU",
      "url": null,
      "actor": null,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-11T17:15:04Z",
      "author_association": "MEMBER",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#pullrequestreview-2298022804",
      "submitted_at": "2024-09-11T17:15:04Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
    },
    {
      "event": "reviewed",
      "id": 2298723649,
      "node_id": "PRR_kwDOABII586JA71B",
      "url": null,
      "actor": null,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "commit_url": null,
      "created_at": null,
      "updated_at": "2024-09-11T21:31:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "re-ACK 5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7\r\n\r\n`git range-diff master e6a5ab7 5e190cd`\r\n\r\n- [Disagree](https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1755611792) with `AppendData`/`AppendDataSize` names over `PushData`/`PushDataSize`, but will let it go.\r\n- Nice switch back from pointer arithmetic to `span` in `AppendData`.\r\n- Touched up commit messages per my latest review, cheers!\r\n- Implements legacy `operator<<` in terms of the other. I agree with l0rinc's reservations against the added casting `uint8_t`->`std::byte`->`uint8_t` until `CScript::value_type` becomes `std::byte`, but shouldn't cause any runtime overhead.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#pullrequestreview-2298723649",
      "submitted_at": "2024-09-11T21:31:30Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
    },
    {
      "event": "unlabeled",
      "id": 14248404956,
      "node_id": "UNLE_lADOABII586U12NgzwAAAANRRWfc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14248404956",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-13T12:44:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2364198894,
      "node_id": "IC_kwDOABII586M6s_u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2364198894",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-20T17:33:59Z",
      "updated_at": "2024-09-20T17:33:59Z",
      "author_association": "MEMBER",
      "body": "> The PR is still in a draft phase since there isn't an overall agreement about the exact direction.\r\n\r\nIs this still the case? If not, please update the OP.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#issuecomment-2364198894",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30765"
    },
    {
      "event": "commented",
      "id": 2364331594,
      "node_id": "IC_kwDOABII586M7NZK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2364331594",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-20T18:47:59Z",
      "updated_at": "2024-09-20T18:47:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Is this still the case? If not, please update the OP.\r\n\r\nRemoved, thank you.",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#issuecomment-2364331594",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30765"
    },
    {
      "event": "commented",
      "id": 2364351304,
      "node_id": "IC_kwDOABII586M7SNI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2364351304",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-20T19:02:17Z",
      "updated_at": "2024-09-20T19:02:17Z",
      "author_association": "MEMBER",
      "body": "ACK 5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#issuecomment-2364351304",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30765"
    },
    {
      "event": "merged",
      "id": 14344638519,
      "node_id": "ME_lADOABII586U12NgzwAAAANXAdA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14344638519",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "33adc7521cc8bb24b941d959022b084002ba7c60",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33adc7521cc8bb24b941d959022b084002ba7c60",
      "created_at": "2024-09-20T19:17:01Z"
    },
    {
      "event": "closed",
      "id": 14344638547,
      "node_id": "CE_lADOABII586U12NgzwAAAANXAdBT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14344638547",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-20T19:17:01Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 14344664414,
      "node_id": "HRDE_lADOABII586U12NgzwAAAANXAjVe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14344664414",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-20T19:18:02Z"
    },
    {
      "event": "referenced",
      "id": 15084731510,
      "node_id": "REFE_lADOABII586U12NgzwAAAAODHrx2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15084731510",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8bb47d4c2c57eb33cdb346ea75c549954d5f9cb1",
      "commit_url": "https://api.github.com/repos/TheCharlatan/rust-bitcoinkernel/commits/8bb47d4c2c57eb33cdb346ea75c549954d5f9cb1",
      "created_at": "2024-11-02T20:58:31Z"
    },
    {
      "event": "referenced",
      "id": 17424506112,
      "node_id": "REFE_lADOABII586U12NgzwAAAAQOlN0A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17424506112",
      "actor": {
        "login": "PastaPastaPasta",
        "id": 6443210,
        "node_id": "MDQ6VXNlcjY0NDMyMTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6443210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PastaPastaPasta",
        "html_url": "https://github.com/PastaPastaPasta",
        "followers_url": "https://api.github.com/users/PastaPastaPasta/followers",
        "following_url": "https://api.github.com/users/PastaPastaPasta/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/PastaPastaPasta/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/PastaPastaPasta/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/PastaPastaPasta/subscriptions",
        "organizations_url": "https://api.github.com/users/PastaPastaPasta/orgs",
        "repos_url": "https://api.github.com/users/PastaPastaPasta/repos",
        "events_url": "https://api.github.com/users/PastaPastaPasta/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/PastaPastaPasta/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5d803781705f390671193afc7280c2c4af81e283",
      "commit_url": "https://api.github.com/repos/dashpay/dash/commits/5d803781705f390671193afc7280c2c4af81e283",
      "created_at": "2025-04-27T18:00:37Z"
    },
    {
      "event": "locked",
      "id": 19816017524,
      "node_id": "LOE_lADOABII586U12NgzwAAAASdIG50",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19816017524",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-20T11:44:24Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740636806",
      "pull_request_review_id": 2275188408,
      "id": 1740636806,
      "node_id": "PRRC_kwDOABII585nwAKG",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "not sure about this. If someone in the future has an `std::array<std::byte, N>` and want to serialize it, will this be touched again? What if someone wants to serialize the first `N/2` bytes only? Will they need to create a copy? Though, avoiding the vector conversion was the whole point of this pull request, so it just seems like right now this is adding more code while leaving the underlying issue.\r\n\r\nMaybe this could be a span or a range?\r\n\r\nIn any case, the documentation needs to be clear that this is a pushdata and not a plain insert of the raw bytes into the underlying CScriptBase byte blob.\r\n\r\n",
      "created_at": "2024-09-02T09:51:17Z",
      "updated_at": "2024-09-02T09:51:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1740636806",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1740636806"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741014685",
      "pull_request_review_id": 2275812757,
      "id": 1741014685,
      "node_id": "PRRC_kwDOABII585nxcad",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> will this be touched again? \r\n\r\nNot sure, isn't that the case with vector as well?\r\n\r\n> so it just seems like right now this is adding more code while leaving the underlying issue.\r\n\r\nCan you please detail why you think this is the case? `_hex_v_u8` was mostly eliminated and the production code is basically the same (+3 lines for the other overload).\r\n\r\n> Maybe this could be a span or a range?\r\n\r\nI understood we wanted to avoid doing that in https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1692989490",
      "created_at": "2024-09-02T14:40:43Z",
      "updated_at": "2024-09-02T14:40:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1741014685",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741014685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741026359",
      "pull_request_review_id": 2275833161,
      "id": 1741026359,
      "node_id": "PRRC_kwDOABII585nxfQ3",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> > will this be touched again?\r\n> \r\n> Not sure, isn't that the case with vector as well?\r\n\r\nYes, so that is another reason that either the code should be either left as-is, (to avoid changing it now, and then again in the future), or to just change it once.\r\n\r\n\r\n\r\n> > so it just seems like right now this is adding more code while leaving the underlying issue.\r\n> \r\n> Can you please detail why you think this is the case?\r\n\r\nThe goal of this change is to avoid a copy/conversion, however the change only fixes it for one very specific instance, leaving the problem otherwise unfixed.\r\n\r\n\r\n\r\n> > Maybe this could be a span or a range?\r\n> \r\n> I understood we wanted to avoid doing that in [#30377 (comment)](https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1692989490)\r\n\r\nArray serialization is equal to span serialization, so if array-serialization would be fine to diverge on, then why wouldn't span/range serialization?",
      "created_at": "2024-09-02T14:50:58Z",
      "updated_at": "2024-09-02T14:50:58Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1741026359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741026359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741058744",
      "pull_request_review_id": 2275881720,
      "id": 1741058744,
      "node_id": "PRRC_kwDOABII585nxnK4",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> however the change only fixes it for one very specific instance\r\n\r\nSeems I missed some other cases, which other ones should we include here?\r\n\r\n> leaving the problem otherwise unfixed\r\n\r\nIt does? This is what we've mentioned throughout the original PR by @hodlinator, @ryanofsky and yourself. I don't mind changing to span (it's what I suggested originally), if you think that would solve it in a cleaner way - but I need to understand the problem better since I though this fully solved our concerns regarding script data copying of hexadecimal values.",
      "created_at": "2024-09-02T15:17:49Z",
      "updated_at": "2024-09-02T15:17:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1741058744",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741058744"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741073162",
      "pull_request_review_id": 2275904067,
      "id": 1741073162,
      "node_id": "PRRC_kwDOABII585nxqsK",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think this should just take a span, not an array or a vector because the container type should not be relevant.\r\n\r\nThe only reason to not use span here would be to try to make the cscript << operator act like the serialization << operator and treat vectors differently from spans and arrays. This behavior makes some sense for serialization, but doesn't make sense for pushing cscript data, so I don't think should be a concern.\r\n\r\n(For serialization we use Span{} casts as a way of telling serialization API that data is fixed-length, not variable-length so should be formatted without a size prefix. But this is a dubious and confusing use of span. Seems like it would be better to have `FixedSize` and `VarSize` serialization formatters that would make code clearer and allow serializing variable size containers without size prefixes, and fixed size containers with them, since there are use-cases for both. Adding span or vector conversions just to get data serialized in the right format is unnecessarily confusing, and in some cases inefficient.)",
      "created_at": "2024-09-02T15:32:47Z",
      "updated_at": "2024-09-02T15:32:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1741073162",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741073162"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741078658",
      "pull_request_review_id": 2275912951,
      "id": 1741078658,
      "node_id": "PRRC_kwDOABII585nxsCC",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would it make sense to drop operator<< from CScript, and instead have explicit \"Append\" and \"Push\" member functions (that take spans), and do the expected thing?\n\n(I have not followed this PR in detail, feel free to ignore if I'm missing things)",
      "created_at": "2024-09-02T15:38:38Z",
      "updated_at": "2024-09-02T15:38:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1741078658",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741078658"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741079145",
      "pull_request_review_id": 2275913697,
      "id": 1741079145,
      "node_id": "PRRC_kwDOABII585nxsJp",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It would also be great if this could be more clearly documented as pushing data as marco suggests, and if it could use std::byte instead of char. If using std::byte is not easily possible, maybe it could use `BasicByte` so the PR can change `_hex_v_u8` to `_hex` instead of `_hex_u8`",
      "created_at": "2024-09-02T15:39:07Z",
      "updated_at": "2024-09-02T15:39:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1741079145",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741079145"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741115644",
      "pull_request_review_id": 2275968018,
      "id": 1741115644,
      "node_id": "PRRC_kwDOABII585nx1D8",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'll investigate these tomorrow, thanks for the comments!",
      "created_at": "2024-09-02T16:28:04Z",
      "updated_at": "2024-09-02T16:28:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1741115644",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741115644"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741129350",
      "pull_request_review_id": 2275989012,
      "id": 1741129350,
      "node_id": "PRRC_kwDOABII585nx4aG",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Would it make sense to drop operator<< from CScript, and instead have explicit \"Append\" and \"Push\" member functions (that take spans), and do the expected thing?\r\n\r\nI think it makes sense, especially because cscripts are serializable, so it is confusing that `x << script` does an entirely different operation than `script << x`. But making this change would expand the scope of the PR beyond what it is currently doing which is just making cscript work a little better with hex literals from #30377.\r\n\r\nOn the idea of Append and Push methods, I think an Append method is not actually necessary, but may be useful. And if we think it is a good idea to disambiguate the CScript `<<`  operator, it probably also makes sense to disambiguate the CScript constructor, since it currently has one overload to add bytes to the script and other overloads to add opcodes and data. Probably a better interface would provide separate functions with descriptive names returning CScript objects, instead of providing multiple CScript constructors where you can't know what a constructor may be doing without knowing the type of the argument.\r\n\r\nBut I do think it would be nice if this PR just added support for std::span and std::byte without necessarily making bigger changes.\r\n",
      "created_at": "2024-09-02T16:53:55Z",
      "updated_at": "2024-09-02T16:53:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1741129350",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741129350"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741676894",
      "pull_request_review_id": 2276801802,
      "id": 1741676894,
      "node_id": "PRRC_kwDOABII585nz-Fe",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Having an elegant way of expressing scripts in code is nice. How about (omitted some hex digits):\r\n```C++\r\nscript << \"046711d5f\"_sized_hex << OP_CHECKSIG;\r\n```\r\n`_sized_hex` could possibly create something like a `SizePrefixed(std::array<std::byte>)` object and `CScript` could have a `<<` operator taking such objects and prepending the size.\r\n\r\n> But I do think it would be nice if this PR just added support for std::span and std::byte without necessarily making bigger changes.\r\n\r\nThat was what I was originally doing as part of #30377, I dropped it so that this PR here could let us work toward some final form of this aspect. So I would rather see a bigger step being made.",
      "created_at": "2024-09-03T08:46:52Z",
      "updated_at": "2024-09-03T08:46:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1741676894",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1741676894"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746943429",
      "pull_request_review_id": 2285986885,
      "id": 1746943429,
      "node_id": "PRRC_kwDOABII585oID3F",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> But I do think it would be nice if this PR just added support for std::span and std::byte without necessarily making bigger changes.\r\n\r\nI've added support for `const std::span<const unsigned char>` (for vector & array), but `std::byte` seems like a bigger change (as explained now in the PR's description) - unless you'd like me to add it as an extra overload - let me know if that's what you meant.",
      "created_at": "2024-09-06T11:07:59Z",
      "updated_at": "2024-09-06T11:07:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1746943429",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1746943429"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747087717",
      "pull_request_review_id": 2286213344,
      "id": 1747087717,
      "node_id": "PRRC_kwDOABII585oInFl",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "An overload for `std::byte` could be one more line of code, but would avoid having to touch all the touched non-header lines  in this pull request again. Unless I am missing something obvious, there shouldn't be any downside.",
      "created_at": "2024-09-06T12:59:51Z",
      "updated_at": "2024-09-06T12:59:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1747087717",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747087717"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747126073",
      "pull_request_review_id": 2286269929,
      "id": 1747126073,
      "node_id": "PRRC_kwDOABII585oIwc5",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> An overload for `std::byte` could be one more line of code, but would avoid having to touch all the touched non-header lines in this pull request again.\r\n\r\nYeah sorry for any confusion. My suggestion in https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1741079145 was to use `std::byte` if it was easy or `BasicByte` as a fallback if would be too much work to convert other code to use std::byte. Having two overloads is also fine. The point is this PR should switch callers from `_hex_v_u8` to `_hex`, not `_hex_u8`, so there is no need to change them again later.",
      "created_at": "2024-09-06T13:26:12Z",
      "updated_at": "2024-09-06T13:31:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1747126073",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747126073"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747142070",
      "pull_request_review_id": 2286297768,
      "id": 1747142070,
      "node_id": "PRRC_kwDOABII585oI0W2",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> `BasicByte`\r\n\r\nIIRC the reason that serialize code uses a template on the inner type of the span is that call sites have to explicitly specify that they want the \"different\" span-serialization.\r\n\r\nI think the concern doesn't apply to CScript, so a template may be better to avoid, but I haven't tried this myself.",
      "created_at": "2024-09-06T13:36:47Z",
      "updated_at": "2024-09-06T13:36:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1747142070",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747142070"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747327065",
      "pull_request_review_id": 2286589611,
      "id": 1747327065,
      "node_id": "PRRC_kwDOABII585oJhhZ",
      "diff_hunk": "@@ -465,30 +492,16 @@ class CScript : public CScriptBase\n \n     CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        InsertSize(b.size());\n+        InsertInput(b.begin(), b.end());\n+        return *this;\n+    }\n+\n+    template<size_t N>\n+    CScript& operator<<(const std::array<unsigned char, N>& b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 68,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "873fe2201550735a9216b7a5e8c8990cfaa7fbd4",
      "in_reply_to_id": 1740636806,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have [added](https://github.com/bitcoin/bitcoin/compare/ab875e14b7ed02e6e4bdc607d67e28bc10216a27..14080bb53d649ed1c99f121f377d2c8f2019c99e) an `std::byte` overload in a separate commit, so now we have:\r\n```C++\r\nCScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\r\n{\r\n    return *this << std::bit_cast<std::span<const uint8_t>>(b);\r\n}\r\n```\r\nwhich delegates to:\r\n```C++\r\nCScript& operator<<(const std::span<const uint8_t> b) LIFETIMEBOUND\r\n{\r\n    AppendDataSize(b.size());\r\n    AppendData(b.begin(), b.end());\r\n    return *this;\r\n}\r\n```\r\n\r\nI haven't tried `BasicByte`, but this seems to work - if the other compilers agree...",
      "created_at": "2024-09-06T15:35:47Z",
      "updated_at": "2024-09-07T12:28:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1747327065",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747327065"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 501,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747339084",
      "pull_request_review_id": 2286606223,
      "id": 1747339084,
      "node_id": "PRRC_kwDOABII585oJkdM",
      "diff_hunk": "@@ -463,35 +491,18 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(const std::span<const unsigned char> b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        AppendDataSize(b.size());\n+        AppendData(b.begin(), b.end());\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << std::bit_cast<std::span<uint8_t>>(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 80,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Probably fine here, but IIRC it is UB to cast away const from something that is always const.\r\n\r\nIt would be better to use a safer alternative instead of a cast.",
      "created_at": "2024-09-06T15:44:12Z",
      "updated_at": "2024-09-06T15:47:09Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1747339084",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747339084"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747344345",
      "pull_request_review_id": 2286613335,
      "id": 1747344345,
      "node_id": "PRRC_kwDOABII585oJlvZ",
      "diff_hunk": "@@ -463,35 +491,18 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(const std::span<const unsigned char> b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        AppendDataSize(b.size());\n+        AppendData(b.begin(), b.end());\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << std::bit_cast<std::span<uint8_t>>(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 80,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "in_reply_to_id": 1747339084,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I believe casting away constness on itself is never UB, but *modifying* a const object (through a pointer/reference whose constness was cast away) is UB.",
      "created_at": "2024-09-06T15:47:56Z",
      "updated_at": "2024-09-06T15:48:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1747344345",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747344345"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747371536",
      "pull_request_review_id": 2286653021,
      "id": 1747371536,
      "node_id": "PRRC_kwDOABII585oJsYQ",
      "diff_hunk": "@@ -463,35 +491,18 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(const std::span<const unsigned char> b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        AppendDataSize(b.size());\n+        AppendData(b.begin(), b.end());\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << std::bit_cast<std::span<uint8_t>>(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 80,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "in_reply_to_id": 1747339084,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Ah yes, according to https://eel.is/c++draft/expr.const.cast#6\r\n\r\nI still have a slight preference to keep the const unless removing it has a clear benefit.",
      "created_at": "2024-09-06T16:05:29Z",
      "updated_at": "2024-09-06T16:05:29Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1747371536",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747371536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747373351",
      "pull_request_review_id": 2286657769,
      "id": 1747373351,
      "node_id": "PRRC_kwDOABII585oJs0n",
      "diff_hunk": "@@ -463,35 +491,18 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(const std::span<const unsigned char> b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        AppendDataSize(b.size());\n+        AppendData(b.begin(), b.end());\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << std::bit_cast<std::span<uint8_t>>(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 80,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "in_reply_to_id": 1747339084,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Very good points, in this version I can indeed add back the `const`, thanks!\r\nAlso added a simple test to make sure `CScript() << _hex_v_u8` and  `CScript() << _hex` produce the same  `CScript()` (can be removed if it passes CI and is deemed superfluous)\r\nSee: https://github.com/bitcoin/bitcoin/compare/14080bb53d649ed1c99f121f377d2c8f2019c99e..03bdefff8c6663da895d0603469dee15aa4ad35d",
      "created_at": "2024-09-06T16:05:50Z",
      "updated_at": "2024-09-06T16:05:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1747373351",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747373351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747385054",
      "pull_request_review_id": 2286676070,
      "id": 1747385054,
      "node_id": "PRRC_kwDOABII585oJvre",
      "diff_hunk": "@@ -463,35 +491,18 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(const std::span<const unsigned char> b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        AppendDataSize(b.size());\n+        AppendData(b.begin(), b.end());\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << std::bit_cast<std::span<uint8_t>>(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 80,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "in_reply_to_id": 1747339084,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The last push looks fine, but I still have a slight preference to use UCharSpanCast or std::as_bytes, which preserve constness by default.",
      "created_at": "2024-09-06T16:13:23Z",
      "updated_at": "2024-09-06T16:13:23Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1747385054",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747385054"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747621990",
      "pull_request_review_id": 2287027043,
      "id": 1747621990,
      "node_id": "PRRC_kwDOABII585oKphm",
      "diff_hunk": "@@ -463,35 +491,18 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(const std::span<const unsigned char> b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        AppendDataSize(b.size());\n+        AppendData(b.begin(), b.end());\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << std::bit_cast<std::span<uint8_t>>(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 80,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "in_reply_to_id": 1747339084,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`std::as_bytes` converts *to* `std::span<const std::byte>`, but we need a `const std::span<const uint8_t>` since we can only call `prevector#insert` with `class iterator { T* ptr{};` which isn't trivial to migrate to a byte span as far as I can tell (i.e. the `std::byte` operator has to delegate to the `uint8_t` operator).\r\nAnd `UCharSpanCast` seems to work with `Span`, which I understood we're trying to get away from.\r\nOr I could do\r\n```C++\r\nreturn *this << std::span<const uint8_t>(UCharCast(b.data()), b.size());\r\n```\r\ninstead of the current:\r\n```C++\r\nreturn *this << std::bit_cast<std::span<const uint8_t>>(b);\r\n```\r\nif you think it's more correct, but I would appreciate some explanation for why that's better.",
      "created_at": "2024-09-06T19:29:53Z",
      "updated_at": "2024-09-07T12:24:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1747621990",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1747621990"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1748069155",
      "pull_request_review_id": 2287483619,
      "id": 1748069155,
      "node_id": "PRRC_kwDOABII585oMWsj",
      "diff_hunk": "@@ -463,35 +491,18 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(const std::span<const unsigned char> b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        AppendDataSize(b.size());\n+        AppendData(b.begin(), b.end());\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << std::bit_cast<std::span<uint8_t>>(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 80,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "in_reply_to_id": 1747339084,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems we're [getting an error with mingw](https://github.com/bitcoin/bitcoin/pull/30765/checks?check_run_id=29792259962) around `genesisOutputScript`, where `prevector#fill` is trying to write 65 bytes of data into a 32-byte buffer.\r\nI can't reproduce it locally, any help would be appreciated.",
      "created_at": "2024-09-07T12:23:33Z",
      "updated_at": "2024-09-07T14:35:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1748069155",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1748069155"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1748936794",
      "pull_request_review_id": 2288365016,
      "id": 1748936794,
      "node_id": "PRRC_kwDOABII585oPqha",
      "diff_hunk": "@@ -463,35 +491,18 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(const std::span<const unsigned char> b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        AppendDataSize(b.size());\n+        AppendData(b.begin(), b.end());\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << std::bit_cast<std::span<uint8_t>>(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 80,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "in_reply_to_id": 1747339084,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The error looks very much like what I ran into in my attempt to make `CScript` take a `span`, see my change to `prevector` in 05c16ae8649ee3b6bbcdbdf0541a65ccf4477537 (referenced in https://github.com/bitcoin/bitcoin/pull/30377#discussion_r1715642251), I believe that might surprisingly enough fix the issue.",
      "created_at": "2024-09-07T19:55:41Z",
      "updated_at": "2024-09-07T19:55:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1748936794",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1748936794"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1748938887",
      "pull_request_review_id": 2288365792,
      "id": 1748938887,
      "node_id": "PRRC_kwDOABII585oPrCH",
      "diff_hunk": "@@ -463,35 +491,18 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(const std::span<const unsigned char> b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        AppendDataSize(b.size());\n+        AppendData(b.begin(), b.end());\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << std::bit_cast<std::span<uint8_t>>(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 80,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "in_reply_to_id": 1747339084,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Wow, what a weird fix!\r\nThanks a lot, added it in a separate commit, let's see if this fixes the build on Windows: [`18870ac` (#30765)](https://github.com/bitcoin/bitcoin/pull/30765/commits/18870ac2eb419fcadd3f055c373f464a7319482e)\r\nEdit: it did fix the windows problem, but will have to rebase once master is stable again.",
      "created_at": "2024-09-07T20:04:20Z",
      "updated_at": "2024-09-08T19:08:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1748938887",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1748938887"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749727270",
      "pull_request_review_id": 2289060387,
      "id": 1749727270,
      "node_id": "PRRC_kwDOABII585oSrgm",
      "diff_hunk": "@@ -463,35 +491,18 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(const std::span<const unsigned char> b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        AppendDataSize(b.size());\n+        AppendData(b.begin(), b.end());\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << std::bit_cast<std::span<uint8_t>>(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 80,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "in_reply_to_id": 1747339084,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> And `UCharSpanCast` seems to work with `Span`, which I understood we're trying to get away from.\r\n\r\nCorrect. Sorry for the brevity. I wanted to say that my preference would be to find a way that is applicable to all places in the future that need to cast the inner type of a span from one byte type to another. (I don't think all code will ever be converted to `std::byte`, because some interfaces (to C code) really only work with `unsigned char`, so a conversion will be needed in the future for some places in the code).\r\n\r\nSo my preference would be to have (and use) a safe helper function that does not allow casting away the `const` by accident (even if this happens to not be UB in almost all cases).",
      "created_at": "2024-09-09T07:36:20Z",
      "updated_at": "2024-09-09T07:36:21Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1749727270",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749727270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749932934",
      "pull_request_review_id": 2289399596,
      "id": 1749932934,
      "node_id": "PRRC_kwDOABII585oTduG",
      "diff_hunk": "@@ -463,35 +491,18 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(const std::span<const unsigned char> b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        AppendDataSize(b.size());\n+        AppendData(b.begin(), b.end());\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << std::bit_cast<std::span<uint8_t>>(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 80,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "14080bb53d649ed1c99f121f377d2c8f2019c99e",
      "in_reply_to_id": 1747339084,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Good idea, [added](https://github.com/bitcoin/bitcoin/compare/c21b0f7cfb139caecea7bb70528483092925c7b1..e6c02b9f2544032481743b4f8d3148622ccc73dd) `BytesToUInt8s` and `UInt8sToBytes`.",
      "created_at": "2024-09-09T09:38:24Z",
      "updated_at": "2024-09-09T09:51:32Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1749932934",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1749932934"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750204329",
      "pull_request_review_id": 2289823867,
      "id": 1750204329,
      "node_id": "PRRC_kwDOABII585oUf-p",
      "diff_hunk": "@@ -390,7 +390,10 @@ class prevector {\n             change_capacity(new_size + (new_size >> 1));\n         }\n         T* ptr = item_ptr(p);\n-        memmove(ptr + count, ptr, (size() - p) * sizeof(T));\n+        // Passing dst variable with explicit type instead of temporary expression\n+        // calms down GCC under some circumstances.",
      "path": "src/prevector.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "c4c102de7336e6c0cc2e5187feedf437ebadb565",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Make code more tolerant of constexpr std::arrays\" (c4c102de7336e6c0cc2e5187feedf437ebadb565)\r\n\r\nSorry I didn't read the previous threads which might explain this, but this is a very vague comment which should be improved. It's is not clear looking at the new code what \"temporary expression\" or \"explicit type\" the comment is referring to, what \"calms down GCC\" could mean or what \"some circumstances\" could be. Would suggest writing a more understandable comment like `// Passing dst to memmove instead of (ptr + count) prevents GCC error/warning \"<whatever the error/warning is>\"`\r\n",
      "created_at": "2024-09-09T12:52:25Z",
      "updated_at": "2024-09-09T14:24:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750204329",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750204329"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 393,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 394,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750230284",
      "pull_request_review_id": 2289823867,
      "id": 1750230284,
      "node_id": "PRRC_kwDOABII585oUmUM",
      "diff_hunk": "@@ -412,6 +413,33 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n+private:\n+    inline void AppendDataSize(const size_t size)\n+    {\n+        if (size < OP_PUSHDATA1) {\n+            insert(this->end(), uint8_t(size));",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 16,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "402101e20bc2086e9237c2e8a51471ac97069e01",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"refactor: Make code more tolerant of constexpr std::arrays\" (c4c102de7336e6c0cc2e5187feedf437ebadb565)\r\n\r\nI'm not sure I see benefit of changing this from `unsigned char` to `uint8_t` now when there's a good chance this is going to be switched again to `std::byte` in the future. It could also be good eliminate the C cast on this line if it is changing anyway.\r\n\r\nSo not important, but would consider changing `uint8_t(size)` to `static_cast<value_type(size)>` here and changing `uint8_t` generally to `value_type` so this code can be unchanged if the surrounding code switches to `std::byte`.",
      "created_at": "2024-09-09T13:09:12Z",
      "updated_at": "2024-09-09T14:24:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750230284",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750230284"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750247803",
      "pull_request_review_id": 2289823867,
      "id": 1750247803,
      "node_id": "PRRC_kwDOABII585oUql7",
      "diff_hunk": "@@ -463,32 +491,10 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(const std::span<const uint8_t> b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 47,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "402101e20bc2086e9237c2e8a51471ac97069e01",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"Generalize `std::vector` push to `std::span` to accept `std::array`\" (402101e20bc2086e9237c2e8a51471ac97069e01)\r\n\r\nTitle of this commit is misleading it does not mention CScript. It sounds like it is referring to a vector push method not a script push method. Would suggest something more like \"Allow CScript operator<< to accept spans, not just vectors\"",
      "created_at": "2024-09-09T13:19:57Z",
      "updated_at": "2024-09-09T14:24:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750247803",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750247803"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 494,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750251238",
      "pull_request_review_id": 2289823867,
      "id": 1750251238,
      "node_id": "PRRC_kwDOABII585oUrbm",
      "diff_hunk": "@@ -150,25 +150,28 @@ constexpr uint8_t HEX_PARSE_OUTPUT[] = {\n static_assert((sizeof(HEX_PARSE_INPUT) - 1) == 2 * sizeof(HEX_PARSE_OUTPUT));\n BOOST_AUTO_TEST_CASE(parse_hex)\n {\n-    std::vector<unsigned char> result;\n+    std::vector<uint8_t> expected(std::begin(HEX_PARSE_OUTPUT), std::end(HEX_PARSE_OUTPUT));\n \n-    // Basic test vector\n-    std::vector<unsigned char> expected(std::begin(HEX_PARSE_OUTPUT), std::end(HEX_PARSE_OUTPUT));\n-    constexpr std::array<std::byte, 65> hex_literal_array{operator\"\"_hex<util::detail::Hex(HEX_PARSE_INPUT)>()};\n-    auto hex_literal_span{MakeUCharSpan(hex_literal_array)};\n-    BOOST_CHECK_EQUAL_COLLECTIONS(hex_literal_span.begin(), hex_literal_span.end(), expected.begin(), expected.end());\n-\n-    const std::vector<std::byte> hex_literal_vector{operator\"\"_hex_v<util::detail::Hex(HEX_PARSE_INPUT)>()};\n-    hex_literal_span = MakeUCharSpan(hex_literal_vector);\n-    BOOST_CHECK_EQUAL_COLLECTIONS(hex_literal_span.begin(), hex_literal_span.end(), expected.begin(), expected.end());\n-\n-    constexpr std::array<uint8_t, 65> hex_literal_array_uint8{operator\"\"_hex_u8<util::detail::Hex(HEX_PARSE_INPUT)>()};\n-    BOOST_CHECK_EQUAL_COLLECTIONS(hex_literal_array_uint8.begin(), hex_literal_array_uint8.end(), expected.begin(), expected.end());\n-\n-    result = operator\"\"_hex_v_u8<util::detail::Hex(HEX_PARSE_INPUT)>();\n-    BOOST_CHECK_EQUAL_COLLECTIONS(result.begin(), result.end(), expected.begin(), expected.end());\n+    {\n+        constexpr std::array<std::byte, 65> hex_literal{operator\"\"_hex<util::detail::Hex(HEX_PARSE_INPUT)>()};\n+        auto hex_span{BytesToUInt8s(hex_literal)};",
      "path": "src/test/util_tests.cpp",
      "position": 1,
      "original_position": 24,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "e6c02b9f2544032481743b4f8d3148622ccc73dd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"Add std::byte span overload to CScript\" (e6c02b9f2544032481743b4f8d3148622ccc73dd)\r\n\r\nI don't think these changes which don't have to do with CScript belong in a commit that is supposed to be adding a new operator to CScript.\r\n\r\nWould suggest moving definition of `BytesToUInt8s` and `UInt8sToBytes` into a new commit before any of the cscript changes so this can be more understandable.\r\n\r\nIt would also be good if commit gave a hint about what purpose of these util test changes are. They seem ok, but it is not clear what motivated them or what test coverage is being added and removed.\r\n\r\nAlso would suggest squashing the CScript portion of commits 402101e20bc2086e9237c2e8a51471ac97069e01 and e6c02b9f2544032481743b4f8d3148622ccc73dd into a single commit so surrounding code changes once directly from `_hex_v_u8` to `_hex` instead of _hex_v_u8 -> _hex_u8 -> _hex\r\n\r\n",
      "created_at": "2024-09-09T13:21:49Z",
      "updated_at": "2024-09-09T14:24:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750251238",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750251238"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750292662",
      "pull_request_review_id": 2289823867,
      "id": 1750292662,
      "node_id": "PRRC_kwDOABII585oU1i2",
      "diff_hunk": "@@ -290,6 +292,15 @@ inline const unsigned char* UCharCast(const std::byte* c) { return reinterpret_c\n template <typename B>\n concept BasicByte = requires { UCharCast(std::span<B>{}.data()); };\n \n+inline constexpr std::span<const uint8_t> BytesToUInt8s(const std::span<const std::byte> s) noexcept\n+{\n+    return std::bit_cast<std::span<const uint8_t>>(s);",
      "path": "src/span.h",
      "position": 1,
      "original_position": 17,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "e6c02b9f2544032481743b4f8d3148622ccc73dd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"Add std::byte span overload to CScript\" (e6c02b9f2544032481743b4f8d3148622ccc73dd)\r\n\r\nI think this could use some explanation because it seems unexpected and potentially unsafe to bit cast std::span objects and make assumptions about internal layout of std::span. I can see why bit casting std::array is ok because of restrictions it has, but unclear why bit-casting std::span objects is ok when std::span objects are just wrappers around pointers and bit-casting pointers is not ok. At least according to https://stackoverflow.com/questions/69918542/can-stdbit-cast-be-used-to-cast-from-stdspana-to-stdspanb-and-access-a \"there is no requirement that any particular span\\<T> has the same layout of span\\<U>...\" (and it goes on) so it would be good know why that reasoning does not apply here.\r\n\r\nIf you are sure this is safe, then some having some high level explanation of the reasoning in a comment here would be helpful. But from the previous stack exchange answer https://lists.isocpp.org/std-proposals/2022/05/4059.php https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2747r0.html it seems constexpr functions aren't actually meant to be able to do all the pointer conversions which are ok to do at runtime.\r\n\r\nIf this current approach is not actually safe, would suggest just dropping constexpr overload here, making CScript operator<< accept `span<const std::byte>` and making other operator call UInt8sToBytes and be not constexpr. \r\n\r\nOr if I'm wrong about this and it is ok to use bit_cast on pointers would suggest just using it on the pointer not the whole span object:\r\n\r\n```c++\r\ninline constexpr std::span<const uint8_t> BytesToUInt8s(const std::span<const std::byte> s) noexcept\r\n{\r\n    return {bit_cast<const uint8_t*>(s.data()), s.size()};\r\n}\r\n```",
      "created_at": "2024-09-09T13:41:37Z",
      "updated_at": "2024-09-09T14:37:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750292662",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750292662"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 297,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750308907",
      "pull_request_review_id": 2289823867,
      "id": 1750308907,
      "node_id": "PRRC_kwDOABII585oU5gr",
      "diff_hunk": "@@ -498,6 +498,11 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << BytesToUInt8s(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "e6c02b9f2544032481743b4f8d3148622ccc73dd",
      "in_reply_to_id": null,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In commit \"Add std::byte span overload to CScript\" (e6c02b9f2544032481743b4f8d3148622ccc73dd)\r\n\r\nIf code is moving away from `char` and `uint8_t` and towards `std::byte`, it would seem better for the `uint8_t` overload to call the `std::byte` overload (with `UInt8sToBytes`) instead of vice versa so the uint8_t overload could be dropped in the future without having to change this code again.",
      "created_at": "2024-09-09T13:50:55Z",
      "updated_at": "2024-09-09T14:24:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750308907",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750308907"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750421415",
      "pull_request_review_id": 2290173055,
      "id": 1750421415,
      "node_id": "PRRC_kwDOABII585oVU-n",
      "diff_hunk": "@@ -498,6 +498,11 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << BytesToUInt8s(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "e6c02b9f2544032481743b4f8d3148622ccc73dd",
      "in_reply_to_id": 1750308907,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, that's what I tried at first, but I don't yet see how that would be possible without changing `prevector`, as explained [here](https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1747621990)",
      "created_at": "2024-09-09T14:53:55Z",
      "updated_at": "2024-09-09T14:53:55Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750421415",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750421415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750424687",
      "pull_request_review_id": 2290178266,
      "id": 1750424687,
      "node_id": "PRRC_kwDOABII585oVVxv",
      "diff_hunk": "@@ -390,7 +390,10 @@ class prevector {\n             change_capacity(new_size + (new_size >> 1));\n         }\n         T* ptr = item_ptr(p);\n-        memmove(ptr + count, ptr, (size() - p) * sizeof(T));\n+        // Passing dst variable with explicit type instead of temporary expression\n+        // calms down GCC under some circumstances.",
      "path": "src/prevector.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "c4c102de7336e6c0cc2e5187feedf437ebadb565",
      "in_reply_to_id": 1750204329,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Related to https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1748936794, will see what I can do to document it better. I guess the explanation should rather go to the commit message instead of the code, since the code itself isn't doing anything special.",
      "created_at": "2024-09-09T14:55:53Z",
      "updated_at": "2024-09-09T14:55:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750424687",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750424687"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 393,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 394,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750460628",
      "pull_request_review_id": 2290235809,
      "id": 1750460628,
      "node_id": "PRRC_kwDOABII585oVejU",
      "diff_hunk": "@@ -498,6 +498,11 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << BytesToUInt8s(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "e6c02b9f2544032481743b4f8d3148622ccc73dd",
      "in_reply_to_id": 1750308907,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Yes, that's what I tried at first, but I don't yet see how that would be possible without changing `prevector`, as explained [here](https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1747621990)\r\n\r\nThanks that's helpful to know, and it's clear why changing prevector could fix this but not clear why it would be necessary to change prevector to fix that as opposed to just passing a start and end pointer of the type it is expecting",
      "created_at": "2024-09-09T15:17:49Z",
      "updated_at": "2024-09-09T15:27:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750460628",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750460628"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750804998",
      "pull_request_review_id": 2290760202,
      "id": 1750804998,
      "node_id": "PRRC_kwDOABII585oWyoG",
      "diff_hunk": "@@ -390,7 +390,10 @@ class prevector {\n             change_capacity(new_size + (new_size >> 1));\n         }\n         T* ptr = item_ptr(p);\n-        memmove(ptr + count, ptr, (size() - p) * sizeof(T));\n+        // Passing dst variable with explicit type instead of temporary expression\n+        // calms down GCC under some circumstances.",
      "path": "src/prevector.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "c4c102de7336e6c0cc2e5187feedf437ebadb565",
      "in_reply_to_id": 1750204329,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Dropped the commit after the suggested simplification",
      "created_at": "2024-09-09T19:17:53Z",
      "updated_at": "2024-09-09T19:17:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750804998",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750804998"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 393,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 394,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750805360",
      "pull_request_review_id": 2290760730,
      "id": 1750805360,
      "node_id": "PRRC_kwDOABII585oWytw",
      "diff_hunk": "@@ -412,6 +413,33 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n+private:\n+    inline void AppendDataSize(const size_t size)\n+    {\n+        if (size < OP_PUSHDATA1) {\n+            insert(this->end(), uint8_t(size));",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 16,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "402101e20bc2086e9237c2e8a51471ac97069e01",
      "in_reply_to_id": 1750230284,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> I'm not sure I see benefit of changing this from unsigned char to uint8_t\r\n\r\n`uint8_t` was already used in the other branches\r\n\r\n> changing uint8_t generally to value_type\r\n\r\nI like that, thanks!",
      "created_at": "2024-09-09T19:18:08Z",
      "updated_at": "2024-09-09T19:18:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750805360",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750805360"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 420,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750805634",
      "pull_request_review_id": 2290761094,
      "id": 1750805634,
      "node_id": "PRRC_kwDOABII585oWyyC",
      "diff_hunk": "@@ -463,32 +491,10 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(const std::span<const uint8_t> b) LIFETIMEBOUND",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 47,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "402101e20bc2086e9237c2e8a51471ac97069e01",
      "in_reply_to_id": 1750247803,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks",
      "created_at": "2024-09-09T19:18:20Z",
      "updated_at": "2024-09-09T19:18:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750805634",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750805634"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 494,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750806256",
      "pull_request_review_id": 2290761961,
      "id": 1750806256,
      "node_id": "PRRC_kwDOABII585oWy7w",
      "diff_hunk": "@@ -150,25 +150,28 @@ constexpr uint8_t HEX_PARSE_OUTPUT[] = {\n static_assert((sizeof(HEX_PARSE_INPUT) - 1) == 2 * sizeof(HEX_PARSE_OUTPUT));\n BOOST_AUTO_TEST_CASE(parse_hex)\n {\n-    std::vector<unsigned char> result;\n+    std::vector<uint8_t> expected(std::begin(HEX_PARSE_OUTPUT), std::end(HEX_PARSE_OUTPUT));\n \n-    // Basic test vector\n-    std::vector<unsigned char> expected(std::begin(HEX_PARSE_OUTPUT), std::end(HEX_PARSE_OUTPUT));\n-    constexpr std::array<std::byte, 65> hex_literal_array{operator\"\"_hex<util::detail::Hex(HEX_PARSE_INPUT)>()};\n-    auto hex_literal_span{MakeUCharSpan(hex_literal_array)};\n-    BOOST_CHECK_EQUAL_COLLECTIONS(hex_literal_span.begin(), hex_literal_span.end(), expected.begin(), expected.end());\n-\n-    const std::vector<std::byte> hex_literal_vector{operator\"\"_hex_v<util::detail::Hex(HEX_PARSE_INPUT)>()};\n-    hex_literal_span = MakeUCharSpan(hex_literal_vector);\n-    BOOST_CHECK_EQUAL_COLLECTIONS(hex_literal_span.begin(), hex_literal_span.end(), expected.begin(), expected.end());\n-\n-    constexpr std::array<uint8_t, 65> hex_literal_array_uint8{operator\"\"_hex_u8<util::detail::Hex(HEX_PARSE_INPUT)>()};\n-    BOOST_CHECK_EQUAL_COLLECTIONS(hex_literal_array_uint8.begin(), hex_literal_array_uint8.end(), expected.begin(), expected.end());\n-\n-    result = operator\"\"_hex_v_u8<util::detail::Hex(HEX_PARSE_INPUT)>();\n-    BOOST_CHECK_EQUAL_COLLECTIONS(result.begin(), result.end(), expected.begin(), expected.end());\n+    {\n+        constexpr std::array<std::byte, 65> hex_literal{operator\"\"_hex<util::detail::Hex(HEX_PARSE_INPUT)>()};\n+        auto hex_span{BytesToUInt8s(hex_literal)};",
      "path": "src/test/util_tests.cpp",
      "position": 1,
      "original_position": 24,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "e6c02b9f2544032481743b4f8d3148622ccc73dd",
      "in_reply_to_id": 1750251238,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Dropped these after your simplification suggestion",
      "created_at": "2024-09-09T19:18:51Z",
      "updated_at": "2024-09-09T19:18:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750806256",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750806256"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 157,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750811705",
      "pull_request_review_id": 2290770404,
      "id": 1750811705,
      "node_id": "PRRC_kwDOABII585oW0Q5",
      "diff_hunk": "@@ -290,6 +292,15 @@ inline const unsigned char* UCharCast(const std::byte* c) { return reinterpret_c\n template <typename B>\n concept BasicByte = requires { UCharCast(std::span<B>{}.data()); };\n \n+inline constexpr std::span<const uint8_t> BytesToUInt8s(const std::span<const std::byte> s) noexcept\n+{\n+    return std::bit_cast<std::span<const uint8_t>>(s);",
      "path": "src/span.h",
      "position": 1,
      "original_position": 17,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "e6c02b9f2544032481743b4f8d3148622ccc73dd",
      "in_reply_to_id": 1750292662,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Based on what I read C++23 solves some of these problems (e.g. `Every specialization of std::span is a TriviallyCopyable type. (since C++23)`) and while array and vector casts would likely be safe, thanks for pointing out that the layout may not always be the same and we need something more predictable here.\r\nWanted to avoid explicit pointer arithmetic or extra copying, let me know if the latest push is a good compromise in this area.",
      "created_at": "2024-09-09T19:23:59Z",
      "updated_at": "2024-09-09T19:24:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750811705",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750811705"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 297,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750812828",
      "pull_request_review_id": 2290771917,
      "id": 1750812828,
      "node_id": "PRRC_kwDOABII585oW0ic",
      "diff_hunk": "@@ -498,6 +498,11 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n+    CScript& operator<<(const std::span<const std::byte> b) LIFETIMEBOUND\n+    {\n+        return *this << BytesToUInt8s(b);",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "e6c02b9f2544032481743b4f8d3148622ccc73dd",
      "in_reply_to_id": 1750308907,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Because we were casting back and forth this way. But I think I found a good enough generalization with your help, we don't need to connect the two operators this way.",
      "created_at": "2024-09-09T19:24:56Z",
      "updated_at": "2024-09-09T19:24:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750812828",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750812828"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 503,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750849674",
      "pull_request_review_id": 2290825978,
      "id": 1750849674,
      "node_id": "PRRC_kwDOABII585oW9iK",
      "diff_hunk": "@@ -412,6 +413,32 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n+private:\n+    inline void AppendDataSize(const size_t size)",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 13,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "9b76c1a0b37512497dbda38e0c69e79f0baa6a34",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "IMO `Append` -> `Push` to stay more consistent with the OP-codes themselves (if we keep this change of breaking out named methods from `operator<<`).",
      "created_at": "2024-09-09T19:55:24Z",
      "updated_at": "2024-09-09T20:36:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750849674",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750849674"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 417,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750865337",
      "pull_request_review_id": 2290825978,
      "id": 1750865337,
      "node_id": "PRRC_kwDOABII585oXBW5",
      "diff_hunk": "@@ -412,6 +413,32 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n+private:\n+    inline void AppendDataSize(const size_t size)\n+    {\n+        if (size < OP_PUSHDATA1) {\n+            insert(this->end(), static_cast<value_type>(size));\n+        } else if (size <= 0xff) {\n+            insert(this->end(), OP_PUSHDATA1);\n+            insert(this->end(), static_cast<value_type>(size));\n+        } else if (size <= 0xffff) {\n+            insert(this->end(), OP_PUSHDATA2);\n+            value_type _data[2];\n+            WriteLE16(_data, size);\n+            insert(this->end(), std::cbegin(_data), std::cend(_data));\n+        } else {\n+            insert(this->end(), OP_PUSHDATA4);\n+            value_type _data[4];\n+            WriteLE32(_data, size);\n+            insert(this->end(), std::cbegin(_data), std::cend(_data));",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 29,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "872b016e895ed19fd42bc480e51e67be3b03e034",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why `this->` everywhere? Is your plan to change all code you touch to use `this->` for clarity going forward?\r\n\r\nLike the `static_cast`s and `cbegin()`/`cend()` though.",
      "created_at": "2024-09-09T20:05:41Z",
      "updated_at": "2024-09-09T20:36:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750865337",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750865337"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 419,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 433,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750870251",
      "pull_request_review_id": 2290825978,
      "id": 1750870251,
      "node_id": "PRRC_kwDOABII585oXCjr",
      "diff_hunk": "@@ -412,6 +413,32 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n+private:\n+    inline void AppendDataSize(const size_t size)\n+    {\n+        if (size < OP_PUSHDATA1) {\n+            insert(this->end(), static_cast<value_type>(size));\n+        } else if (size <= 0xff) {\n+            insert(this->end(), OP_PUSHDATA1);\n+            insert(this->end(), static_cast<value_type>(size));\n+        } else if (size <= 0xffff) {\n+            insert(this->end(), OP_PUSHDATA2);\n+            value_type _data[2];\n+            WriteLE16(_data, size);\n+            insert(this->end(), std::cbegin(_data), std::cend(_data));",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 24,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "872b016e895ed19fd42bc480e51e67be3b03e034",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Don't like the `_`-prefix of `_data`, but it's from the original. `_`-prefixes otherwise signify something internal or reserved.\r\nSince you are touching all lines, maybe switch it to `data`/`data2`/ `data16` + `data`/`data4`/`data32`?",
      "created_at": "2024-09-09T20:10:26Z",
      "updated_at": "2024-09-09T20:36:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750870251",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750870251"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 426,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750876143",
      "pull_request_review_id": 2290825978,
      "id": 1750876143,
      "node_id": "PRRC_kwDOABII585oXD_v",
      "diff_hunk": "@@ -1368,6 +1368,13 @@ static CScript ScriptFromHex(const std::string& str)\n     return ToScript(*Assert(TryParseHex(str)));\n }\n \n+BOOST_AUTO_TEST_CASE(script_hex_conversion)",
      "path": "src/test/script_tests.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "4574e45a99d8e11ccadd839f2ef8a80356e8955d",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Might call it something like `script_byte_array_u8_vector_equivalence`?",
      "created_at": "2024-09-09T20:15:24Z",
      "updated_at": "2024-09-09T20:36:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750876143",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750876143"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1371,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750910623",
      "pull_request_review_id": 2290915495,
      "id": 1750910623,
      "node_id": "PRRC_kwDOABII585oXMaf",
      "diff_hunk": "@@ -412,6 +413,32 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n+private:\n+    inline void AppendDataSize(const size_t size)",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 13,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "9b76c1a0b37512497dbda38e0c69e79f0baa6a34",
      "in_reply_to_id": 1750849674,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's appending to the end - but if you say `push` is the accepted terminology, I'll rename them, thanks.",
      "created_at": "2024-09-09T20:45:02Z",
      "updated_at": "2024-09-09T20:45:02Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750910623",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750910623"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 417,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750910776",
      "pull_request_review_id": 2290915929,
      "id": 1750910776,
      "node_id": "PRRC_kwDOABII585oXMc4",
      "diff_hunk": "@@ -412,6 +413,32 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n+private:\n+    inline void AppendDataSize(const size_t size)\n+    {\n+        if (size < OP_PUSHDATA1) {\n+            insert(this->end(), static_cast<value_type>(size));\n+        } else if (size <= 0xff) {\n+            insert(this->end(), OP_PUSHDATA1);\n+            insert(this->end(), static_cast<value_type>(size));\n+        } else if (size <= 0xffff) {\n+            insert(this->end(), OP_PUSHDATA2);\n+            value_type _data[2];\n+            WriteLE16(_data, size);\n+            insert(this->end(), std::cbegin(_data), std::cend(_data));\n+        } else {\n+            insert(this->end(), OP_PUSHDATA4);\n+            value_type _data[4];\n+            WriteLE32(_data, size);\n+            insert(this->end(), std::cbegin(_data), std::cend(_data));",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 29,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "872b016e895ed19fd42bc480e51e67be3b03e034",
      "in_reply_to_id": 1750865337,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "You're right, we don't have an `end` parameter anymore so I'll revert these back to just `end()`, thanks!",
      "created_at": "2024-09-09T20:45:10Z",
      "updated_at": "2024-09-09T20:45:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750910776",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750910776"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 419,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 433,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750910847",
      "pull_request_review_id": 2290916032,
      "id": 1750910847,
      "node_id": "PRRC_kwDOABII585oXMd_",
      "diff_hunk": "@@ -412,6 +413,32 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n+private:\n+    inline void AppendDataSize(const size_t size)\n+    {\n+        if (size < OP_PUSHDATA1) {\n+            insert(this->end(), static_cast<value_type>(size));\n+        } else if (size <= 0xff) {\n+            insert(this->end(), OP_PUSHDATA1);\n+            insert(this->end(), static_cast<value_type>(size));\n+        } else if (size <= 0xffff) {\n+            insert(this->end(), OP_PUSHDATA2);\n+            value_type _data[2];\n+            WriteLE16(_data, size);\n+            insert(this->end(), std::cbegin(_data), std::cend(_data));",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 24,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "872b016e895ed19fd42bc480e51e67be3b03e034",
      "in_reply_to_id": 1750870251,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "or just `data` since they don't overlap.",
      "created_at": "2024-09-09T20:45:14Z",
      "updated_at": "2024-09-09T20:45:14Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750910847",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750910847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 426,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 428,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750910911",
      "pull_request_review_id": 2290916121,
      "id": 1750910911,
      "node_id": "PRRC_kwDOABII585oXMe_",
      "diff_hunk": "@@ -1368,6 +1368,13 @@ static CScript ScriptFromHex(const std::string& str)\n     return ToScript(*Assert(TryParseHex(str)));\n }\n \n+BOOST_AUTO_TEST_CASE(script_hex_conversion)",
      "path": "src/test/script_tests.cpp",
      "position": 1,
      "original_position": 4,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "4574e45a99d8e11ccadd839f2ef8a80356e8955d",
      "in_reply_to_id": 1750876143,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "done",
      "created_at": "2024-09-09T20:45:17Z",
      "updated_at": "2024-09-09T20:45:17Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750910911",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1750910911"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1371,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1751658436",
      "pull_request_review_id": 2291979637,
      "id": 1751658436,
      "node_id": "PRRC_kwDOABII585oaC_E",
      "diff_hunk": "@@ -390,7 +390,10 @@ class prevector {\n             change_capacity(new_size + (new_size >> 1));\n         }\n         T* ptr = item_ptr(p);\n-        memmove(ptr + count, ptr, (size() - p) * sizeof(T));\n+        // Passing dst variable with explicit type instead of temporary expression\n+        // calms down GCC under some circumstances.",
      "path": "src/prevector.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "c4c102de7336e6c0cc2e5187feedf437ebadb565",
      "in_reply_to_id": 1750204329,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Got the error again, trying to create a godbolt reproducer to understand it better\r\n<details>\r\n<summary>Error</summary>\r\n\r\n```\r\nIn file included from /ci_container_base/src/script/script.h:11,\r\n                 from /ci_container_base/src/primitives/transaction.h:11,\r\n                 from /ci_container_base/src/primitives/block.h:9,\r\n                 from /ci_container_base/src/kernel/chainparams.h:11,\r\n                 from /ci_container_base/src/kernel/chainparams.cpp:6:\r\nIn member function ‘void prevector<N, T, Size, Diff>::fill(T*, InputIterator, InputIterator) [with InputIterator = const unsigned char*; unsigned int N = 28; T = unsigned char; Size = unsigned int; Diff = int]’,\r\n    inlined from ‘void prevector<N, T, Size, Diff>::insert(iterator, InputIterator, InputIterator) [with InputIterator = const unsigned char*; unsigned int N = 28; T = unsigned char; Size = unsigned int; Diff = int]’ at /ci_container_base/src/prevector.h:395:13,\r\n    inlined from ‘void CScript::PushData(const prevector<28, unsigned char>::value_type*, size_t)’ at /ci_container_base/src/script/script.h:439:15,\r\n    inlined from ‘CScript& CScript::operator<<(std::span<const std::byte>)’ at /ci_container_base/src/script/script.h:496:17,\r\n    inlined from ‘CBlock CreateGenesisBlock(uint32_t, uint32_t, uint32_t, int32_t, const CAmount&)’ at /ci_container_base/src/kernel/chainparams.cpp:76:54:\r\n/ci_container_base/src/prevector.h:216:13: error: writing 65 bytes into a region of size 32 [-Werror=stringop-overflow=]\r\n  216 |             new(static_cast<void*>(dst)) T(*first);\r\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/ci_container_base/src/kernel/chainparams.cpp: In function ‘CBlock CreateGenesisBlock(uint32_t, uint32_t, uint32_t, int32_t, const CAmount&)’:\r\n/ci_container_base/src/kernel/chainparams.cpp:76:49: note: destination object ‘<anonymous>’ of size 32\r\n   76 |     const CScript genesisOutputScript = CScript() << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\"_hex << OP_CHECKSIG;\r\n      |                                                 ^\r\nIn file included from /usr/lib/gcc/x86_64-w64-mingw32/12-posix/include/c++/cstring:42,\r\n                 from /ci_container_base/src/crypto/common.h:11,\r\n                 from /ci_container_base/src/uint256.h:9,\r\n                 from /ci_container_base/src/consensus/params.h:9,\r\n                 from /ci_container_base/src/kernel/chainparams.h:9:\r\nIn function ‘void* memmove(void*, const void*, size_t)’,\r\n    inlined from ‘void prevector<N, T, Size, Diff>::insert(iterator, InputIterator, InputIterator) [with InputIterator = const unsigned char*; unsigned int N = 28; T = unsigned char; Size = unsigned int; Diff = int]’ at /ci_container_base/src/prevector.h:393:16,\r\n    inlined from ‘void CScript::PushData(const prevector<28, unsigned char>::value_type*, size_t)’ at /ci_container_base/src/script/script.h:439:15,\r\n    inlined from ‘CScript& CScript::operator<<(std::span<const std::byte>)’ at /ci_container_base/src/script/script.h:496:17,\r\n    inlined from ‘CBlock CreateGenesisBlock(uint32_t, uint32_t, uint32_t, int32_t, const CAmount&)’ at /ci_container_base/src/kernel/chainparams.cpp:76:54:\r\n/usr/share/mingw-w64/include/string.h:214:33: warning: ‘void* __builtin_memmove(void*, const void*, long long unsigned int)’ offset [65, 35] is out of the bounds [0, 32] of object ‘<anonymous>’ with type ‘CScript’ [-Warray-bounds]\r\n  214 |   return __builtin___memmove_chk(__dst, __src, __n, __mingw_bos(__dst, 0));\r\n      |          ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n/ci_container_base/src/kernel/chainparams.cpp: In function ‘CBlock CreateGenesisBlock(uint32_t, uint32_t, uint32_t, int32_t, const CAmount&)’:\r\n/ci_container_base/src/kernel/chainparams.cpp:76:49: note: ‘<anonymous>’ declared here\r\n   76 |     const CScript genesisOutputScript = CScript() << \"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\"_hex << OP_CHECKSIG;\r\n      |                                                 ^\r\ncc1plus: all warnings being treated as errors\r\nmake[2]: *** [src/CMakeFiles/bitcoin_common.dir/build.make:422: src/CMakeFiles/bitcoin_common.dir/kernel/chainparams.cpp.obj] Error 1\r\nmake[1]: *** [CMakeFiles/Makefile2:864: src/CMakeFiles/bitcoin_common.dir/all] Error 2\r\nmake: *** [Makefile:146: all] Error 2\r\n```\r\n\r\n</details>",
      "created_at": "2024-09-10T10:03:24Z",
      "updated_at": "2024-09-10T11:29:49Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1751658436",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1751658436"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 393,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 394,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1752485188",
      "pull_request_review_id": 2293370771,
      "id": 1752485188,
      "node_id": "PRRC_kwDOABII585odM1E",
      "diff_hunk": "@@ -390,7 +390,10 @@ class prevector {\n             change_capacity(new_size + (new_size >> 1));\n         }\n         T* ptr = item_ptr(p);\n-        memmove(ptr + count, ptr, (size() - p) * sizeof(T));\n+        // Passing dst variable with explicit type instead of temporary expression\n+        // calms down GCC under some circumstances.",
      "path": "src/prevector.h",
      "position": 1,
      "original_position": 6,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "c4c102de7336e6c0cc2e5187feedf437ebadb565",
      "in_reply_to_id": 1750204329,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This error was reported [many](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=107852) [times](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=109569) for GCC 12.2, managed to reproduce the error via [godbolt](https://godbolt.org/z/8r9TKKoxv) (it's fixed in GCC 12.3) and on a local Dockerfile:\r\n<details>\r\n<summary>Dockerfile</summary>\r\n\r\n```dockerfile\r\nFROM docker.io/amd64/debian:bookworm\r\n\r\n# Update and install dependencies\r\nRUN apt update && apt install -y \\\r\n    build-essential \\\r\n    cmake \\\r\n    git \\\r\n    curl \\\r\n    wget \\\r\n    pkg-config \\\r\n    bsdmainutils \\\r\n    python3 \\\r\n    libevent-dev \\\r\n    libboost-system-dev \\\r\n    libboost-filesystem-dev \\\r\n    libboost-chrono-dev \\\r\n    libboost-test-dev \\\r\n    libboost-thread-dev \\\r\n    libminiupnpc-dev \\\r\n    libzmq3-dev \\\r\n    libsqlite3-dev \\\r\n    libdb-dev \\\r\n    libdb++-dev \\\r\n    libssl-dev \\\r\n    libprotobuf-dev \\\r\n    protobuf-compiler \\\r\n    libqrencode-dev \\\r\n    libqt5gui5 \\\r\n    libqt5core5a \\\r\n    libqt5dbus5 \\\r\n    qttools5-dev \\\r\n    qttools5-dev-tools \\\r\n    libseccomp-dev \\\r\n    libcap-dev \\\r\n    nsis \\\r\n    g++-mingw-w64-x86-64-posix \\\r\n    wine-binfmt \\\r\n    wine64 \\\r\n    file\r\n\r\nRUN gcc --version && cmake --version\r\n\r\nCOPY . /bitcoin\r\nWORKDIR /bitcoin\r\nRUN git clean -fdx\r\nRUN cmake -B build -DREDUCE_EXPORTS=ON -DBUILD_GUI_TESTS=OFF -DCMAKE_CXX_FLAGS='-Werror'\r\nRUN cmake --build build -j8\r\n```\r\n\r\n</details>\r\n\r\nFixed in [`a39f57f` (#30765)](https://github.com/bitcoin/bitcoin/pull/30765/commits/a39f57f1a062eb6c3872a35defaf6d893df1d4a4), added all related info to the commit message, let me know if more info is still needed.\r\nThanks @hodlinator and @ryanofsky for the reviews and suggestions!",
      "created_at": "2024-09-10T18:18:20Z",
      "updated_at": "2024-09-10T18:19:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1752485188",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1752485188"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 393,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 394,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1754932214",
      "pull_request_review_id": 2297560631,
      "id": 1754932214,
      "node_id": "PRRC_kwDOABII585omiP2",
      "diff_hunk": "@@ -412,6 +413,32 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n+private:\n+    inline void PushDataSize(const uint32_t size)\n+    {\n+        if (size < OP_PUSHDATA1) {\n+            insert(end(), static_cast<value_type>(size));\n+        } else if (size <= 0xff) {\n+            insert(end(), OP_PUSHDATA1);\n+            insert(end(), static_cast<value_type>(size));\n+        } else if (size <= 0xffff) {\n+            insert(end(), OP_PUSHDATA2);\n+            value_type data[2];\n+            WriteLE16(data, size);\n+            insert(end(), std::cbegin(data), std::cend(data));\n+        } else {\n+            insert(end(), OP_PUSHDATA4);\n+            value_type data[4];\n+            WriteLE32(data, size);\n+            insert(end(), std::cbegin(data), std::cend(data));\n+        }\n+    }\n+\n+    void PushData(const value_type* data, uint32_t size)\n+    {\n+        insert(end(), data, data + size);\n+    }",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 36,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "e6a5ab7637e60d3ae731c2ac854c170bc009ab99",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "not sure about the naming here. This `PushData` does not push any data (at least not in a sense what the `OP_PUSHDATA*` are referring to). `InsertData` may be a better name. However, this would also be confusing, because the method is private and just a wrapper around the public `insert` method. It seems easier to just call `insert` directly instead of creating another wrapper.\r\n\r\nAlso, it may be easier to review to leave the code where it was, instead of moving it and coming up with new function names. The \"deprecated\" wrapper could be a simple `return *this << std::as_bytes(b);` which compilers should be able to optimize.",
      "created_at": "2024-09-11T15:20:18Z",
      "updated_at": "2024-09-11T15:20:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1754932214",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1754932214"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 437,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 440,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1754944106",
      "pull_request_review_id": 2297576683,
      "id": 1754944106,
      "node_id": "PRRC_kwDOABII585omlJq",
      "diff_hunk": "@@ -412,6 +413,32 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n+private:\n+    inline void PushDataSize(const uint32_t size)\n+    {\n+        if (size < OP_PUSHDATA1) {\n+            insert(end(), static_cast<value_type>(size));\n+        } else if (size <= 0xff) {\n+            insert(end(), OP_PUSHDATA1);\n+            insert(end(), static_cast<value_type>(size));\n+        } else if (size <= 0xffff) {\n+            insert(end(), OP_PUSHDATA2);\n+            value_type data[2];\n+            WriteLE16(data, size);\n+            insert(end(), std::cbegin(data), std::cend(data));\n+        } else {\n+            insert(end(), OP_PUSHDATA4);\n+            value_type data[4];\n+            WriteLE32(data, size);\n+            insert(end(), std::cbegin(data), std::cend(data));\n+        }\n+    }\n+\n+    void PushData(const value_type* data, uint32_t size)\n+    {\n+        insert(end(), data, data + size);\n+    }",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 36,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "e6a5ab7637e60d3ae731c2ac854c170bc009ab99",
      "in_reply_to_id": 1754932214,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> It seems easier to just call insert directly instead of creating another wrapper.\r\n\r\nThis always adds element to the `end()`, so it's either an `append` or a `push` or similar.\r\n\r\n> The \"deprecated\" wrapper could be a simple return *this << std::as_bytes(b); which compilers should be able to optimize.\r\n\r\nPlease see my arguments against that in https://github.com/bitcoin/bitcoin/pull/30765#issuecomment-2342178439",
      "created_at": "2024-09-11T15:23:46Z",
      "updated_at": "2024-09-11T15:24:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1754944106",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1754944106"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 437,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 440,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1754975816",
      "pull_request_review_id": 2297615798,
      "id": 1754975816,
      "node_id": "PRRC_kwDOABII585oms5I",
      "diff_hunk": "@@ -412,6 +413,32 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n+private:\n+    inline void PushDataSize(const uint32_t size)\n+    {\n+        if (size < OP_PUSHDATA1) {\n+            insert(end(), static_cast<value_type>(size));\n+        } else if (size <= 0xff) {\n+            insert(end(), OP_PUSHDATA1);\n+            insert(end(), static_cast<value_type>(size));\n+        } else if (size <= 0xffff) {\n+            insert(end(), OP_PUSHDATA2);\n+            value_type data[2];\n+            WriteLE16(data, size);\n+            insert(end(), std::cbegin(data), std::cend(data));\n+        } else {\n+            insert(end(), OP_PUSHDATA4);\n+            value_type data[4];\n+            WriteLE32(data, size);\n+            insert(end(), std::cbegin(data), std::cend(data));\n+        }\n+    }\n+\n+    void PushData(const value_type* data, uint32_t size)\n+    {\n+        insert(end(), data, data + size);\n+    }",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 36,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "e6a5ab7637e60d3ae731c2ac854c170bc009ab99",
      "in_reply_to_id": 1754932214,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Pushing has a specific meaning in the context of Bitcoin Script (it's an opcode that pushes data onto the stack), and that's not what's happening here so that would be very confusing.\r\n\r\nI don't understand the argument you link to. `*this << std::as_bytes(b);` is well-defined, obviously correct, concise, and trivially optimized out.",
      "created_at": "2024-09-11T15:32:45Z",
      "updated_at": "2024-09-11T15:32:45Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1754975816",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1754975816"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 437,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 440,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1755005950",
      "pull_request_review_id": 2297654585,
      "id": 1755005950,
      "node_id": "PRRC_kwDOABII585om0P-",
      "diff_hunk": "@@ -412,6 +413,32 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n+private:\n+    inline void PushDataSize(const uint32_t size)\n+    {\n+        if (size < OP_PUSHDATA1) {\n+            insert(end(), static_cast<value_type>(size));\n+        } else if (size <= 0xff) {\n+            insert(end(), OP_PUSHDATA1);\n+            insert(end(), static_cast<value_type>(size));\n+        } else if (size <= 0xffff) {\n+            insert(end(), OP_PUSHDATA2);\n+            value_type data[2];\n+            WriteLE16(data, size);\n+            insert(end(), std::cbegin(data), std::cend(data));\n+        } else {\n+            insert(end(), OP_PUSHDATA4);\n+            value_type data[4];\n+            WriteLE32(data, size);\n+            insert(end(), std::cbegin(data), std::cend(data));\n+        }\n+    }\n+\n+    void PushData(const value_type* data, uint32_t size)\n+    {\n+        insert(end(), data, data + size);\n+    }",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 36,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "e6a5ab7637e60d3ae731c2ac854c170bc009ab99",
      "in_reply_to_id": 1754932214,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've called it `Append*` originally but `Push*` was [requested](https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1750910623).\r\nThanks, renamed back.\r\n\r\n> `*this << std::as_bytes(b);` is well-defined, obviously correct, concise, and trivially optimized out.\r\n\r\nSeems there's an overwhelming majority for this, thanks for the inputs, [done](https://github.com/bitcoin/bitcoin/compare/e6a5ab7637e60d3ae731c2ac854c170bc009ab99..5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7)!",
      "created_at": "2024-09-11T15:42:06Z",
      "updated_at": "2024-09-11T15:44:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1755005950",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1755005950"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 437,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 440,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1755195956",
      "pull_request_review_id": 2298022804,
      "id": 1755195956,
      "node_id": "PRRC_kwDOABII585onio0",
      "diff_hunk": "@@ -463,35 +490,19 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(std::span<const std::byte> b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        AppendDataSize(b.size());\n+        AppendData({reinterpret_cast<const value_type*>(b.data()), b.size()});",
      "path": "src/script/script.h",
      "position": 73,
      "original_position": 73,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "in_reply_to_id": null,
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Is there a reason to extract those function? I think it would be better to not extract them, because:\r\n\r\n* The diff would be smaller\r\n* They are only used and called once\r\n* There shouldn't be a reason for them to be called from somewhere else internally, because `operator<<` is available internally and externally\r\n* If someone wanted to use them externally (for whatever reason), they'd have to be moved again, because they are private right now.\r\n\r\nSeems easier to extract them and possibly make them public when there is need, instead of repeatedly changing the code.",
      "created_at": "2024-09-11T17:15:04Z",
      "updated_at": "2024-09-11T17:15:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1755195956",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1755195956"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": 495,
      "original_start_line": 495,
      "start_side": "RIGHT",
      "line": 496,
      "original_line": 496,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1755219785",
      "pull_request_review_id": 2298090975,
      "id": 1755219785,
      "node_id": "PRRC_kwDOABII585onodJ",
      "diff_hunk": "@@ -463,35 +490,19 @@ class CScript : public CScriptBase\n         return *this;\n     }\n \n-    CScript& operator<<(const std::vector<unsigned char>& b) LIFETIMEBOUND\n+    CScript& operator<<(std::span<const std::byte> b) LIFETIMEBOUND\n     {\n-        if (b.size() < OP_PUSHDATA1)\n-        {\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xff)\n-        {\n-            insert(end(), OP_PUSHDATA1);\n-            insert(end(), (unsigned char)b.size());\n-        }\n-        else if (b.size() <= 0xffff)\n-        {\n-            insert(end(), OP_PUSHDATA2);\n-            uint8_t _data[2];\n-            WriteLE16(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        else\n-        {\n-            insert(end(), OP_PUSHDATA4);\n-            uint8_t _data[4];\n-            WriteLE32(_data, b.size());\n-            insert(end(), _data, _data + sizeof(_data));\n-        }\n-        insert(end(), b.begin(), b.end());\n+        AppendDataSize(b.size());\n+        AppendData({reinterpret_cast<const value_type*>(b.data()), b.size()});",
      "path": "src/script/script.h",
      "position": 73,
      "original_position": 73,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "in_reply_to_id": 1755195956,
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not reuse, but to obviate that the method does two separate things: complex logic for how to serialize a number, followed by inserting bytes - so basically a separation of concerns.\r\n\r\nAnd also https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1741078658 indicated that operators may not be here to stay, so it makes sense to unburden them early.",
      "created_at": "2024-09-11T17:34:03Z",
      "updated_at": "2024-09-11T17:34:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1755219785",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1755219785"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": 495,
      "original_start_line": 495,
      "start_side": "RIGHT",
      "line": 496,
      "original_line": 496,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1755611792",
      "pull_request_review_id": 2298655165,
      "id": 1755611792,
      "node_id": "PRRC_kwDOABII585opIKQ",
      "diff_hunk": "@@ -412,6 +413,32 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n /** Serialized script, used inside transaction inputs and outputs */\n class CScript : public CScriptBase\n {\n+private:\n+    inline void PushDataSize(const uint32_t size)\n+    {\n+        if (size < OP_PUSHDATA1) {\n+            insert(end(), static_cast<value_type>(size));\n+        } else if (size <= 0xff) {\n+            insert(end(), OP_PUSHDATA1);\n+            insert(end(), static_cast<value_type>(size));\n+        } else if (size <= 0xffff) {\n+            insert(end(), OP_PUSHDATA2);\n+            value_type data[2];\n+            WriteLE16(data, size);\n+            insert(end(), std::cbegin(data), std::cend(data));\n+        } else {\n+            insert(end(), OP_PUSHDATA4);\n+            value_type data[4];\n+            WriteLE32(data, size);\n+            insert(end(), std::cbegin(data), std::cend(data));\n+        }\n+    }\n+\n+    void PushData(const value_type* data, uint32_t size)\n+    {\n+        insert(end(), data, data + size);\n+    }",
      "path": "src/script/script.h",
      "position": 1,
      "original_position": 36,
      "commit_id": "5e190cd11f6ed8b7ab4db0f01192de63deaf6fd7",
      "original_commit_id": "e6a5ab7637e60d3ae731c2ac854c170bc009ab99",
      "in_reply_to_id": 1754932214,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> Pushing has a specific meaning in the context of Bitcoin Script (it's an opcode that pushes data onto the stack), and that's not what's happening here so that would be very confusing.\r\n\r\nThe new pair of *private* functions together implement `OP_PUSHDATA`, and are *only used* in that context, that's the reason I recommended the naming.",
      "created_at": "2024-09-11T21:05:25Z",
      "updated_at": "2024-09-11T21:05:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/30765#discussion_r1755611792",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1755611792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/30765"
        }
      },
      "start_line": null,
      "original_start_line": 437,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 440,
      "side": "RIGHT"
    }
  ]
}