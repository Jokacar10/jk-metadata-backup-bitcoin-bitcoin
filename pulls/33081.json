{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33081",
    "id": 2701344201,
    "node_id": "PR_kwDOABII586hAz3J",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/33081",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/33081.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/33081.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33081",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33081/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33081/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33081/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/cddcfd4974b6e1820b703618b0788c7952b57ca2",
    "number": 33081,
    "state": "closed",
    "locked": true,
    "maintainer_can_modify": false,
    "title": "[NO MERGE]: TSAN should fail",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Ref: https://github.com/bitcoin/bitcoin/pull/32862#issuecomment-3114706601.",
    "labels": [
      {
        "id": 5334691551,
        "node_id": "LA_kwDOABII588AAAABPfju3w",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed",
        "name": "CI failed",
        "description": "",
        "color": "cccccc",
        "default": false
      }
    ],
    "created_at": "2025-07-28T16:12:06Z",
    "updated_at": "2025-08-13T12:58:17Z",
    "closed_at": "2025-07-29T09:20:32Z",
    "mergeable_state": "unknown",
    "merged": false,
    "merge_commit_sha": "613d212976f994375bc00571e0289baf08ccab0a",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "head": {
      "label": "fanquake:no_merge_tsan_false_positive",
      "ref": "no_merge_tsan_false_positive",
      "sha": "cddcfd4974b6e1820b703618b0788c7952b57ca2",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 5910539,
        "node_id": "MDEwOlJlcG9zaXRvcnk1OTEwNTM5",
        "name": "bitcoin",
        "full_name": "fanquake/bitcoin",
        "owner": {
          "login": "fanquake",
          "id": 863730,
          "node_id": "MDQ6VXNlcjg2MzczMA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fanquake",
          "html_url": "https://github.com/fanquake",
          "followers_url": "https://api.github.com/users/fanquake/followers",
          "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
          "organizations_url": "https://api.github.com/users/fanquake/orgs",
          "repos_url": "https://api.github.com/users/fanquake/repos",
          "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/fanquake/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/fanquake/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/fanquake/bitcoin",
        "archive_url": "https://api.github.com/repos/fanquake/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/fanquake/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/fanquake/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/fanquake/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/fanquake/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/fanquake/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/fanquake/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/fanquake/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/fanquake/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/fanquake/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/fanquake/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/fanquake/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/fanquake/bitcoin/events",
        "forks_url": "https://api.github.com/repos/fanquake/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/fanquake/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/fanquake/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/fanquake/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/fanquake/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/fanquake/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/fanquake/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/fanquake/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/fanquake/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/fanquake/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/fanquake/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/fanquake/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/fanquake/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/fanquake/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/fanquake/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/fanquake/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:fanquake/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/fanquake/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/fanquake/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/fanquake/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/fanquake/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/fanquake/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/fanquake/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/fanquake/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/fanquake/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/fanquake/bitcoin/hooks",
        "svn_url": "https://github.com/fanquake/bitcoin",
        "homepage": "http://www.bitcoincore.org",
        "language": "C++",
        "forks_count": 5,
        "stargazers_count": 14,
        "watchers_count": 14,
        "size": 262060,
        "default_branch": "master",
        "open_issues_count": 0,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": false,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-13T12:58:29Z",
        "created_at": "2012-09-22T05:28:42Z",
        "updated_at": "2025-08-13T10:14:26Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "2a97ff466d320cb388f9487a4a3c71068c07a234",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37629,
        "stargazers_count": 85009,
        "watchers_count": 85009,
        "size": 291095,
        "default_branch": "master",
        "open_issues_count": 749,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-08-13T09:51:49Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-08-13T12:02:21Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/33081"
      }
    },
    "author_association": "MEMBER",
    "draft": true,
    "additions": 1,
    "deletions": 1,
    "changed_files": 1,
    "commits": 1,
    "review_comments": 0,
    "comments": 2
  },
  "events": [
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGNkZGNmZDQ5NzRiNmUxODIwYjcwMzYxOGIwNzg4Yzc5NTJiNTdjYTI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cddcfd4974b6e1820b703618b0788c7952b57ca2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/cddcfd4974b6e1820b703618b0788c7952b57ca2",
      "tree": {
        "sha": "d4063e58d2278a78b0eb63a36c044697db074fe6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4063e58d2278a78b0eb63a36c044697db074fe6"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree d4063e58d2278a78b0eb63a36c044697db074fe6\nparent 2a97ff466d320cb388f9487a4a3c71068c07a234\nauthor fanquake <fanquake@gmail.com> 1753719036 +0100\ncommitter fanquake <fanquake@gmail.com> 1753719036 +0100\n\nno merge: tsan should fail\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmiHoPwACgkQLuufXMCV\nJsGCmBAApaLxdbfIiaRtpN6GL9pdJLR2UvaYkETRgV+9q3u4ausAQVoXLGjj0OGv\n2axmsNaerGyuHDHnH4gmikBoHL8w16zRGd/0QcIE3Gmh7N5gCZgI0sFwNrSTJJjT\n3rTQCfgNQMC8mwQszELSiPMqWyjwdaZ8MsRuSenp6kX7+2wC5iW5rV3rsYo/8jVO\njhCJu8kFduV7oNaZlnzurKB7mWZC5rx4QElNtjw7xhLi3gpQDzMTClxq7A8BUFtK\nWeb/0t97xG0C4IawIGm8Kggv3N03fk7IAhw4g7LhY9TUd1MBztiRv3h7GXcCw+sS\n5SyyDmCrlTexOr34O2Zp6IX+nyDeiKOpffe2L+r0zQdqEywQvfdfOMXd2yTQMmtT\nRqL6wUYcQ8WsdyNscdZarMPe/KZyo3OjWY/VZ139+fxG5FHedtK917LxwtIErluf\nq6Toa8FJx9e5XH+8pJNKmfGp86y2HjPxDrlTZwuoS/W/uZO0Q6qpke5aPTvYcvxc\njNRPmzoZ4Wv72rrydZ6e1owigNcyWhw9tBTpfCUh0KFsdJDmtl4UllGHGPJGesLp\n+nHcgVDizwh/YHO3VPt4uTAsm0SATkOj80QqUaMzuSxMSIkJKxQt3EJKsSAI/EzM\nmwejjspYZWfzeKb1s5jmj1L+yjFdgkSZZURRig4o/CBTfLFwaWE=\n=n04U\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a97ff466d320cb388f9487a4a3c71068c07a234",
          "sha": "2a97ff466d320cb388f9487a4a3c71068c07a234",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/2a97ff466d320cb388f9487a4a3c71068c07a234"
        }
      ],
      "message": "no merge: tsan should fail",
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2025-07-28T16:10:36Z"
      },
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2025-07-28T16:10:36Z"
      },
      "sha": "cddcfd4974b6e1820b703618b0788c7952b57ca2"
    },
    {
      "event": "commented",
      "id": 3127970971,
      "node_id": "IC_kwDOABII5866cQyb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3127970971",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T16:12:11Z",
      "updated_at": "2025-07-28T16:12:13Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/33081.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--5faf32d7da4f0f540f40219e4f7537a3-->",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33081#issuecomment-3127970971",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33081"
    },
    {
      "event": "subscribed",
      "id": 18860136041,
      "node_id": "SE_lADOABII587C8DeMzwAAAARkJtZp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18860136041",
      "actor": {
        "login": "pinheadmz",
        "id": 2084648,
        "node_id": "MDQ6VXNlcjIwODQ2NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2084648?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pinheadmz",
        "html_url": "https://github.com/pinheadmz",
        "followers_url": "https://api.github.com/users/pinheadmz/followers",
        "following_url": "https://api.github.com/users/pinheadmz/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/pinheadmz/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/pinheadmz/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/pinheadmz/subscriptions",
        "organizations_url": "https://api.github.com/users/pinheadmz/orgs",
        "repos_url": "https://api.github.com/users/pinheadmz/repos",
        "events_url": "https://api.github.com/users/pinheadmz/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/pinheadmz/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T16:25:03Z"
    },
    {
      "event": "labeled",
      "id": 18863078843,
      "node_id": "LE_lADOABII587C8DeMzwAAAARkU727",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18863078843",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T19:14:35Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 3128827488,
      "node_id": "IC_kwDOABII5866fh5g",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3128827488",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-28T19:18:35Z",
      "updated_at": "2025-07-28T19:18:35Z",
      "author_association": "MEMBER",
      "body": "```bash\r\n[15:14:29.653]  node0 2025-07-28T19:14:23.812588Z [httpworker.12] [wallet/wallet.h:945] [void wallet::CWallet::WalletLogPrintf(util::ConstevalFormatString<sizeof...(Params)>, const Params &...) const [Params = <std::string>]] [w3] Releasing wallet w3.. \r\n[15:14:29.653]  test  2025-07-28T19:14:28.406783Z TestFramework (ERROR): Unexpected exception \r\n[15:14:29.653]                                    Traceback (most recent call last):\r\n[15:14:29.653]                                      File \"/ci_container_base/test/functional/test_framework/test_framework.py\", line 195, in main\r\n[15:14:29.653]                                        self.run_test()\r\n[15:14:29.653]                                      File \"/ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/test/functional/wallet_multiwallet.py\", line 367, in run_test\r\n[15:14:29.653]                                        self.nodes[0].unloadwallet(wallet_name)\r\n[15:14:29.653]                                      File \"/ci_container_base/test/functional/test_framework/coverage.py\", line 50, in __call__\r\n[15:14:29.653]                                        return_val = self.auth_service_proxy_instance.__call__(*args, **kwargs)\r\n[15:14:29.653]                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[15:14:29.653]                                      File \"/ci_container_base/test/functional/test_framework/authproxy.py\", line 137, in __call__\r\n[15:14:29.653]                                        response, status = self._request('POST', self.__url.path, postdata.encode('utf-8'))\r\n[15:14:29.653]                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[15:14:29.653]                                      File \"/ci_container_base/test/functional/test_framework/authproxy.py\", line 111, in _request\r\n[15:14:29.653]                                        return self._get_response()\r\n[15:14:29.653]                                               ^^^^^^^^^^^^^^^^^^^^\r\n[15:14:29.653]                                      File \"/ci_container_base/test/functional/test_framework/authproxy.py\", line 174, in _get_response\r\n[15:14:29.653]                                        http_response = self.__conn.getresponse()\r\n[15:14:29.653]                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n[15:14:29.653]                                      File \"/usr/lib/python3.12/http/client.py\", line 1428, in getresponse\r\n[15:14:29.653]                                        response.begin()\r\n[15:14:29.653]                                      File \"/usr/lib/python3.12/http/client.py\", line 331, in begin\r\n[15:14:29.653]                                        version, status, reason = self._read_status()\r\n[15:14:29.653]                                                                  ^^^^^^^^^^^^^^^^^^^\r\n[15:14:29.653]                                      File \"/usr/lib/python3.12/http/client.py\", line 300, in _read_status\r\n[15:14:29.653]                                        raise RemoteDisconnected(\"Remote end closed connection without\"\r\n[15:14:29.653]                                    http.client.RemoteDisconnected: Remote end closed connection without response\r\n[15:14:29.653]  test  2025-07-28T19:14:28.430391Z TestFramework (DEBUG): Closing down network thread \r\n[15:14:29.653]  test  2025-07-28T19:14:28.485038Z TestFramework (INFO): Not stopping nodes as test failed. The dangling processes will be cleaned up later. \r\n[15:14:29.653]  test  2025-07-28T19:14:28.485364Z TestFramework (WARNING): Not cleaning up dir /ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250728_190728/wallet_multiwallet_242 \r\n[15:14:29.653]  test  2025-07-28T19:14:28.485531Z TestFramework (ERROR): Test failed. Test logging available at /ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250728_190728/wallet_multiwallet_242/test_framework.log \r\n[15:14:29.653]  test  2025-07-28T19:14:28.485837Z TestFramework (ERROR): \r\n[15:14:29.653]  test  2025-07-28T19:14:28.486109Z TestFramework (ERROR): Hint: Call /ci_container_base/test/functional/combine_logs.py '/ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250728_190728/wallet_multiwallet_242' to consolidate all logs \r\n[15:14:29.653]  test  2025-07-28T19:14:28.486278Z TestFramework (ERROR): \r\n[15:14:29.653]  test  2025-07-28T19:14:28.486406Z TestFramework (ERROR): If this failure happened unexpectedly or intermittently, please file a bug and provide a link or upload of the combined log. \r\n[15:14:29.653]  test  2025-07-28T19:14:28.486569Z TestFramework (ERROR): https://github.com/bitcoin/bitcoin/issues \r\n[15:14:29.653]  test  2025-07-28T19:14:28.493847Z TestFramework (ERROR): \r\n[15:14:29.653] \r\n[15:14:29.653]  node0 stderr Error: Specified -walletdir \"wallets\" is a relative path \r\n[15:14:29.653]  node0 stderr Error: Invalid -wallet path 'w8_symlink'. -wallet path should point to a directory where wallet.dat and database/log.?????????? files can be stored, a location where such a directory could be created, or (for backwards compatibility) the name of an existing data file in -walletdir (\"/ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250728_190728/wallet_multiwallet_242/node0/regtest/wallets\") \r\n[15:14:29.653]  node0 stderr Error: Specified -walletdir \"/ci_container_base/ci/scratch/test_runner/test_runner_₿_🏃_20250728_190728/wallet_multiwallet_242/node0/regtest/wallets/notadir\" is not a directory \r\n[15:14:29.653]  node0 stderr ==================\r\n[15:14:29.653] WARNING: ThreadSanitizer: data race (pid=17879)\r\n[15:14:29.653]   Write of size 8 at 0x720c00027540 by thread T1 (mutexes: write M0):\r\n[15:14:29.653]     #0 operator delete(void*, unsigned long) <null> (bitcoind+0x19817c) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #1 void std::__1::__libcpp_operator_delete[abi:ne200100]<std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>*, unsigned long>(std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>*, unsigned long) /usr/lib/llvm-20/bin/../include/c++/v1/__new/allocate.h:46:3 (bitcoind+0x851570) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #2 void std::__1::__libcpp_deallocate[abi:ne200100]<std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>>(std::__1::__type_identity<std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>>::type*, std::__1::__element_count, unsigned long) /usr/lib/llvm-20/bin/../include/c++/v1/__new/allocate.h:86:12 (bitcoind+0x851570)\r\n[15:14:29.653]     #3 std::__1::allocator<std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>>::deallocate[abi:ne200100](std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>*, unsigned long) /usr/lib/llvm-20/bin/../include/c++/v1/__memory/allocator.h:120:7 (bitcoind+0x851570)\r\n[15:14:29.653]     #4 std::__1::__shared_ptr_pointer<wallet::CWallet*, void (*)(wallet::CWallet*), std::__1::allocator<wallet::CWallet>>::__on_zero_shared_weak() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_ptr.h:134:7 (bitcoind+0x851570)\r\n[15:14:29.653]     #5 std::__1::weak_ptr<wallet::CWallet>::~weak_ptr() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_ptr.h:1315:15 (bitcoind+0x9154aa) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #6 wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'()::~() /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/wallet/./wallet/rpc/encrypt.cpp:102:40 (bitcoind+0x9154aa)\r\n[15:14:29.653]     #7 std::__1::__function::__alloc_func<wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'(), std::__1::allocator<wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'()>, void ()>::destroy[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:181:14 (bitcoind+0x9154aa)\r\n[15:14:29.653]     #8 std::__1::__function::__func<wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'(), std::__1::allocator<wallet::walletpassphrase()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const::'lambda'()>, void ()>::destroy() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:305:8 (bitcoind+0x9154aa)\r\n[15:14:29.653]     #9 std::__1::__function::__value_func<void ()>::~__value_func[abi:ne200100]() /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./scheduler.h (bitcoind+0xb7f9e7) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #10 std::__1::function<void ()>::~function() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:986:43 (bitcoind+0xb7f9e7)\r\n[15:14:29.653]     #11 CScheduler::serviceQueue() /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./scheduler.cpp:62:9 (bitcoind+0xb7f9e7)\r\n[15:14:29.653]     #12 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7::operator()() const /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./init.cpp:1366:94 (bitcoind+0x1c6b45) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #13 decltype(std::declval<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>()()) std::__1::__invoke[abi:ne200100]<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x1c6b45)\r\n[15:14:29.653]     #14 void std::__1::__invoke_void_return_wrapper<void, true>::__call[abi:ne200100]<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:251:5 (bitcoind+0x1c6b45)\r\n[15:14:29.653]     #15 void std::__1::__invoke_r[abi:ne200100]<void, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x1c6b45)\r\n[15:14:29.653]     #16 std::__1::__function::__alloc_func<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, std::__1::allocator<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>, void ()>::operator()[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x1c6b45)\r\n[15:14:29.653]     #17 std::__1::__function::__func<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, std::__1::allocator<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>, void ()>::operator()() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x1c6b45)\r\n[15:14:29.653]     #18 std::__1::__function::__value_func<void ()>::operator()[abi:ne200100]() const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0xc71d02) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #19 std::__1::function<void ()>::operator()() const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0xc71d02)\r\n[15:14:29.653]     #20 util::TraceThread(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/util/./util/thread.cpp:21:9 (bitcoind+0xc71d02)\r\n[15:14:29.653]     #21 decltype(std::declval<void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>)>()(std::declval<char const*>(), std::declval<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>())) std::__1::__invoke[abi:ne200100]<void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>(void (*&&)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*&&, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x1c673c) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #22 void std::__1::__thread_execute[abi:ne200100]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:199:3 (bitcoind+0x1c673c)\r\n[15:14:29.653]     #23 void* std::__1::__thread_proxy[abi:ne200100]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>>(void*) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:208:3 (bitcoind+0x1c673c)\r\n[15:14:29.653] \r\n[15:14:29.653]   Previous read of size 8 at 0x720c00027540 by thread T4:\r\n[15:14:29.653]     #0 std::__1::__shared_count::__release_shared[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_count.h:91:7 (bitcoind+0x7fbdb7) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #1 std::__1::__shared_weak_count::__release_shared[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_count.h:120:25 (bitcoind+0x7fbdb7)\r\n[15:14:29.653]     #2 std::__1::shared_ptr<wallet::CWallet>::~shared_ptr[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_ptr.h:558:17 (bitcoind+0x7fbdb7)\r\n[15:14:29.653]     #3 std::__1::shared_ptr<wallet::CWallet>::reset[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__memory/shared_ptr.h:608:50 (bitcoind+0x7fbdb7)\r\n[15:14:29.653]     #4 wallet::WaitForDeleteWallet(std::__1::shared_ptr<wallet::CWallet>&&) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/wallet/./wallet/wallet.cpp:264:12 (bitcoind+0x7fbdb7)\r\n[15:14:29.653]     #5 wallet::unloadwallet()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/wallet/./wallet/rpc/wallet.cpp:483:5 (bitcoind+0x799ffe) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #6 decltype(std::declval<wallet::unloadwallet()::$_0&>()(std::declval<RPCHelpMan const&>(), std::declval<JSONRPCRequest const&>())) std::__1::__invoke[abi:ne200100]<wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x799ffe)\r\n[15:14:29.653]     #7 UniValue std::__1::__invoke_void_return_wrapper<UniValue, false>::__call[abi:ne200100]<wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x799ffe)\r\n[15:14:29.653]     #8 UniValue std::__1::__invoke_r[abi:ne200100]<UniValue, wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(wallet::unloadwallet()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x799ffe)\r\n[15:14:29.653]     #9 std::__1::__function::__alloc_func<wallet::unloadwallet()::$_0, std::__1::allocator<wallet::unloadwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:ne200100](RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x799ffe)\r\n[15:14:29.653]     #10 std::__1::__function::__func<wallet::unloadwallet()::$_0, std::__1::allocator<wallet::unloadwallet()::$_0>, UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x799ffe)\r\n[15:14:29.653]     #11 std::__1::__function::__value_func<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()[abi:ne200100](RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0xb6479a) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #12 std::__1::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0xb6479a)\r\n[15:14:29.653]     #13 RPCHelpMan::HandleRequest(JSONRPCRequest const&) const /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./rpc/util.cpp:663:20 (bitcoind+0xb6479a)\r\n[15:14:29.653]     #14 CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./rpc/server.h:60:91 (bitcoind+0x44e3f8) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #15 decltype(std::declval<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:ne200100]<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x44e3f8)\r\n[15:14:29.653]     #16 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call[abi:ne200100]<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x44e3f8)\r\n[15:14:29.653]     #17 bool std::__1::__invoke_r[abi:ne200100]<bool, CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x44e3f8)\r\n[15:14:29.653]     #18 std::__1::__function::__alloc_func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x44e3f8)\r\n[15:14:29.653]     #19 std::__1::__function::__func<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<CRPCCommand::CRPCCommand(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x44e3f8)\r\n[15:14:29.653]     #20 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0x7476a1) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #21 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0x7476a1)\r\n[15:14:29.653]     #22 wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/wallet/./wallet/interfaces.cpp:562:24 (bitcoind+0x7476a1)\r\n[15:14:29.653]     #23 decltype(std::declval<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:ne200100]<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x7476a1)\r\n[15:14:29.653]     #24 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call[abi:ne200100]<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x7476a1)\r\n[15:14:29.653]     #25 bool std::__1::__invoke_r[abi:ne200100]<bool, wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x7476a1)\r\n[15:14:29.653]     #26 std::__1::__function::__alloc_func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x7476a1)\r\n[15:14:29.653]     #27 std::__1::__function::__func<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<wallet::(anonymous namespace)::WalletLoaderImpl::registerRpcs()::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x7476a1)\r\n[15:14:29.653]     #28 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0x33b2fc) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #29 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0x33b2fc)\r\n[15:14:29.653]     #30 node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./node/interfaces.cpp:511:24 (bitcoind+0x33b2fc)\r\n[15:14:29.653]     #31 decltype(std::declval<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&>()(std::declval<JSONRPCRequest const&>(), std::declval<UniValue&>(), std::declval<bool>())) std::__1::__invoke[abi:ne200100]<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x33b2fc)\r\n[15:14:29.653]     #32 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call[abi:ne200100]<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x33b2fc)\r\n[15:14:29.653]     #33 bool std::__1::__invoke_r[abi:ne200100]<bool, node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool>(node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)&, JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x33b2fc)\r\n[15:14:29.653]     #34 std::__1::__function::__alloc_func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x33b2fc)\r\n[15:14:29.653]     #35 std::__1::__function::__func<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool), std::__1::allocator<node::(anonymous namespace)::RpcHandlerImpl::RpcHandlerImpl(CRPCCommand const&)::'lambda'(JSONRPCRequest const&, UniValue&, bool)>, bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool&&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x33b2fc)\r\n[15:14:29.653]     #36 std::__1::__function::__value_func<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()[abi:ne200100](JSONRPCRequest const&, UniValue&, bool&&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0x5bb966) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #37 std::__1::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0x5bb966)\r\n[15:14:29.653]     #38 ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./rpc/server.cpp:504:20 (bitcoind+0x5bb966)\r\n[15:14:29.653]     #39 ExecuteCommands(std::__1::vector<CRPCCommand const*, std::__1::allocator<CRPCCommand const*>> const&, JSONRPCRequest const&, UniValue&) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./rpc/server.cpp:471:13 (bitcoind+0x5bb966)\r\n[15:14:29.653]     #40 CRPCTable::execute(JSONRPCRequest const&) const /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./rpc/server.cpp:491:13 (bitcoind+0x5ba527) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #41 JSONRPCExec(JSONRPCRequest const&, bool) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./rpc/server.cpp:347:31 (bitcoind+0x5b9af8) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #42 HTTPReq_JSONRPC(std::__1::any const&, HTTPRequest*) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./httprpc.cpp:165:21 (bitcoind+0x6f853d) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #43 StartHTTPRPC(std::__1::any const&)::$_0::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./httprpc.cpp:337:80 (bitcoind+0x6f853d)\r\n[15:14:29.653]     #44 decltype(std::declval<StartHTTPRPC(std::__1::any const&)::$_0&>()(std::declval<HTTPRequest*>(), std::declval<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>())) std::__1::__invoke[abi:ne200100]<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x6f853d)\r\n[15:14:29.653]     #45 bool std::__1::__invoke_void_return_wrapper<bool, false>::__call[abi:ne200100]<StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:243:12 (bitcoind+0x6f853d)\r\n[15:14:29.653]     #46 bool std::__1::__invoke_r[abi:ne200100]<bool, StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(StartHTTPRPC(std::__1::any const&)::$_0&, HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x6f853d)\r\n[15:14:29.653]     #47 std::__1::__function::__alloc_func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:ne200100](HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x6f853d)\r\n[15:14:29.653]     #48 std::__1::__function::__func<StartHTTPRPC(std::__1::any const&)::$_0, std::__1::allocator<StartHTTPRPC(std::__1::any const&)::$_0>, bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x6f853d)\r\n[15:14:29.653]     #49 std::__1::__function::__value_func<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()[abi:ne200100](HTTPRequest*&&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0x707b10) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #50 std::__1::function<bool (HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)>::operator()(HTTPRequest*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&) const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0x707b10)\r\n[15:14:29.653]     #51 HTTPWorkItem::operator()() /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./httpserver.cpp:62:9 (bitcoind+0x707b10)\r\n[15:14:29.653]     #52 WorkQueue<HTTPClosure>::Run() /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./httpserver.cpp:117:13 (bitcoind+0x70ab92) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #53 HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./httpserver.cpp:419:12 (bitcoind+0x701550) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #54 decltype(std::declval<void (*)(WorkQueue<HTTPClosure>*, int)>()(std::declval<WorkQueue<HTTPClosure>*>(), std::declval<int>())) std::__1::__invoke[abi:ne200100]<void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>(void (*&&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x70a9e7) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #55 void std::__1::__thread_execute[abi:ne200100]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:199:3 (bitcoind+0x70a9e7)\r\n[15:14:29.653]     #56 void* std::__1::__thread_proxy[abi:ne200100]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int>>(void*) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:208:3 (bitcoind+0x70a9e7)\r\n[15:14:29.653] \r\n[15:14:29.653]   Mutex M0 (0x722000000588) created at:\r\n[15:14:29.653]     #0 pthread_mutex_trylock <null> (bitcoind+0x11562b) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #1 std::__1::mutex::try_lock() <null> (libc++.so.1+0x713ec) (BuildId: f575ed1f01c62175fefa8301ddd2ef94b8eab656)\r\n[15:14:29.653]     #2 UniqueLock<AnnotatedMixin<std::__1::mutex>>::UniqueLock(AnnotatedMixin<std::__1::mutex>&, char const*, char const*, int, bool) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./sync.h:183:13 (bitcoind+0xb7f94a) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #3 CScheduler::serviceQueue() /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./scheduler.cpp:25:5 (bitcoind+0xb7f94a)\r\n[15:14:29.653]     #4 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7::operator()() const /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./init.cpp:1366:94 (bitcoind+0x1c6b45) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #5 decltype(std::declval<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>()()) std::__1::__invoke[abi:ne200100]<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x1c6b45)\r\n[15:14:29.653]     #6 void std::__1::__invoke_void_return_wrapper<void, true>::__call[abi:ne200100]<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:251:5 (bitcoind+0x1c6b45)\r\n[15:14:29.653]     #7 void std::__1::__invoke_r[abi:ne200100]<void, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&>(AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:273:10 (bitcoind+0x1c6b45)\r\n[15:14:29.653]     #8 std::__1::__function::__alloc_func<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, std::__1::allocator<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>, void ()>::operator()[abi:ne200100]() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:167:12 (bitcoind+0x1c6b45)\r\n[15:14:29.653]     #9 std::__1::__function::__func<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, std::__1::allocator<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>, void ()>::operator()() /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:319:10 (bitcoind+0x1c6b45)\r\n[15:14:29.653]     #10 std::__1::__function::__value_func<void ()>::operator()[abi:ne200100]() const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:436:12 (bitcoind+0xc71d02) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #11 std::__1::function<void ()>::operator()() const /usr/lib/llvm-20/bin/../include/c++/v1/__functional/function.h:995:10 (bitcoind+0xc71d02)\r\n[15:14:29.653]     #12 util::TraceThread(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/util/./util/thread.cpp:21:9 (bitcoind+0xc71d02)\r\n[15:14:29.653]     #13 decltype(std::declval<void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>)>()(std::declval<char const*>(), std::declval<AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>())) std::__1::__invoke[abi:ne200100]<void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>(void (*&&)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*&&, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&&) /usr/lib/llvm-20/bin/../include/c++/v1/__type_traits/invoke.h:179:25 (bitcoind+0x1c673c) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #14 void std::__1::__thread_execute[abi:ne200100]<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, 2ul, 3ul>(std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>&, std::__1::__tuple_indices<2ul, 3ul>) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:199:3 (bitcoind+0x1c673c)\r\n[15:14:29.653]     #15 void* std::__1::__thread_proxy[abi:ne200100]<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct>>, void (*)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const*, AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7>>(void*) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:208:3 (bitcoind+0x1c673c)\r\n[15:14:29.653] \r\n[15:14:29.653]   Thread T1 'b-scheduler' (tid=17890, running) created by main thread at:\r\n[15:14:29.653]     #0 pthread_create <null> (bitcoind+0x1136de) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #1 std::__1::__libcpp_thread_create[abi:ne200100](unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/support/pthread.h:182:10 (bitcoind+0x1b7141) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #2 std::__1::thread::thread<void (&)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const (&) [10], AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7, 0>(void (&)(std::__1::basic_string_view<char, std::__1::char_traits<char>>, std::__1::function<void ()>), char const (&) [10], AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*)::$_7&&) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:218:14 (bitcoind+0x1b7141)\r\n[15:14:29.653]     #3 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./init.cpp:1366:34 (bitcoind+0x1b7141)\r\n[15:14:29.653]     #4 AppInit(node::NodeContext&) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./bitcoind.cpp:237:43 (bitcoind+0x1996da) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #5 main /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./bitcoind.cpp:283:10 (bitcoind+0x1996da)\r\n[15:14:29.653] \r\n[15:14:29.653]   Thread T4 'b-httpworker.1' (tid=17894, running) created by main thread at:\r\n[15:14:29.653]     #0 pthread_create <null> (bitcoind+0x1136de) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #1 std::__1::__libcpp_thread_create[abi:ne200100](unsigned long*, void* (*)(void*), void*) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/support/pthread.h:182:10 (bitcoind+0x70a89b) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #2 std::__1::thread::thread<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, 0>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__thread/thread.h:218:14 (bitcoind+0x70a89b)\r\n[15:14:29.653]     #3 std::__1::thread* std::__1::construct_at[abi:ne200100]<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, std::__1::thread*>(std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__memory/construct_at.h:40:49 (bitcoind+0x70a4df) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #4 std::__1::thread* std::__1::__construct_at[abi:ne200100]<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, std::__1::thread*>(std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__memory/construct_at.h:48:10 (bitcoind+0x70a4df)\r\n[15:14:29.653]     #5 void std::__1::allocator_traits<std::__1::allocator<std::__1::thread>>::construct[abi:ne200100]<std::__1::thread, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&, void, 0>(std::__1::allocator<std::__1::thread>&, std::__1::thread*, void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__memory/allocator_traits.h:318:5 (bitcoind+0x70a4df)\r\n[15:14:29.653]     #6 std::__1::thread* std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread>>::__emplace_back_slow_path<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__vector/vector.h:1116:3 (bitcoind+0x70a4df)\r\n[15:14:29.653]     #7 std::__1::thread& std::__1::vector<std::__1::thread, std::__1::allocator<std::__1::thread>>::emplace_back<void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*, int&>(void (&)(WorkQueue<HTTPClosure>*, int), WorkQueue<HTTPClosure>*&&, int&) /usr/lib/llvm-20/bin/../include/c++/v1/__vector/vector.h:1136:13 (bitcoind+0x701248) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #8 StartHTTPServer() /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./httpserver.cpp:508:31 (bitcoind+0x701248)\r\n[15:14:29.653]     #9 AppInitServers(node::NodeContext&) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./init.cpp:720:5 (bitcoind+0x1c1d85) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #10 AppInitMain(node::NodeContext&, interfaces::BlockAndHeaderTipInfo*) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./init.cpp:1458:14 (bitcoind+0x1b7e6e) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #11 AppInit(node::NodeContext&) /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./bitcoind.cpp:237:43 (bitcoind+0x1996da) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47)\r\n[15:14:29.653]     #12 main /ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/src/./bitcoind.cpp:283:10 (bitcoind+0x1996da)\r\n[15:14:29.653] \r\n[15:14:29.653] SUMMARY: ThreadSanitizer: data race (/ci_container_base/ci/scratch/build-x86_64-pc-linux-gnu/bin/bitcoind+0x19817c) (BuildId: 7ca309061e42125b9c670e8668663168c1ceef47) in operator delete(void*, unsigned long)\r\n[15:14:29.653] ================== \r\n[15:14:29.653]  node0 stderr Error: Specified -walletdir \"debug.log\" is not a directory \r\n[15:14:29.653]  node0 stderr Warning: Ignoring duplicate -wallet w1. \r\n[15:14:29.653]  node0 stderr Error: Specified -walletdir \"wallets\" does not exist \r\n[15:14:29.653]  node0 stderr Error: Specified -walletdir \"bad\" does not exist \r\n[15:14:29.653]  node1 stderr Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another instance of Bitcoin Core? \r\n[15:14:29.653] \r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/33081#issuecomment-3128827488",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33081"
    },
    {
      "event": "closed",
      "id": 18874206955,
      "node_id": "CE_lADOABII587C8DeMzwAAAARk_Yrr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18874206955",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-29T09:20:32Z"
    },
    {
      "event": "referenced",
      "id": 18920484486,
      "node_id": "REFE_lADOABII587C8DeMzwAAAARnv66G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18920484486",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "aef2dbb402763e49fadc37dc75dff87ff3a5c6b0",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aef2dbb402763e49fadc37dc75dff87ff3a5c6b0",
      "created_at": "2025-07-31T14:08:21Z"
    },
    {
      "event": "head_ref_deleted",
      "id": 19136894806,
      "node_id": "HRDE_lADOABII587C8DeMzwAAAAR0pddW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19136894806",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-13T12:57:34Z"
    },
    {
      "event": "locked",
      "id": 19136909416,
      "node_id": "LOE_lADOABII587C8DeMzwAAAAR0phBo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19136909416",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-08-13T12:58:17Z"
    }
  ],
  "comments": []
}